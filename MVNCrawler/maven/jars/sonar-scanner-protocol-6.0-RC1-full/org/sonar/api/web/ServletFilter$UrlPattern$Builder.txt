Compiled from "ServletFilter.java"
public class org.sonar.api.web.ServletFilter$UrlPattern$Builder {
  private static final java.lang.String WILDCARD_CHAR;

  private static final java.util.Collection<java.lang.String> STATIC_RESOURCES;

  private final java.util.Set<java.lang.String> inclusions;

  private final java.util.Set<java.lang.String> exclusions;

  private final java.util.Set<java.util.function.Predicate<java.lang.String>> inclusionPredicates;

  private final java.util.Set<java.util.function.Predicate<java.lang.String>> exclusionPredicates;

  private org.sonar.api.web.ServletFilter$UrlPattern$Builder();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #38                 // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #39                 // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #41                 // Field inclusions:Ljava/util/Set;
      15: aload_0
      16: new           #38                 // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #39                 // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #43                 // Field exclusions:Ljava/util/Set;
      26: aload_0
      27: new           #45                 // class java/util/HashSet
      30: dup
      31: invokespecial #46                 // Method java/util/HashSet."<init>":()V
      34: putfield      #48                 // Field inclusionPredicates:Ljava/util/Set;
      37: aload_0
      38: new           #45                 // class java/util/HashSet
      41: dup
      42: invokespecial #46                 // Method java/util/HashSet."<init>":()V
      45: putfield      #50                 // Field exclusionPredicates:Ljava/util/Set;
      48: return

  public static java.util.Collection<java.lang.String> staticResourcePatterns();
    Code:
       0: getstatic     #56                 // Field STATIC_RESOURCES:Ljava/util/Collection;
       3: areturn

  public org.sonar.api.web.ServletFilter$UrlPattern$Builder includes(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #67                 // Method includes:(Ljava/util/Collection;)Lorg/sonar/api/web/ServletFilter$UrlPattern$Builder;
       8: areturn

  public org.sonar.api.web.ServletFilter$UrlPattern$Builder includes(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #41                 // Field inclusions:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: getfield      #48                 // Field inclusionPredicates:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #81,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      21: invokedynamic #100,  0            // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      26: invokeinterface #106,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      31: invokedynamic #118,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      36: invokeinterface #122,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      41: invokestatic  #128                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      44: invokeinterface #132,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      49: checkcast     #77                 // class java/util/Collection
      52: invokeinterface #75,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: aload_0
      59: areturn

  public org.sonar.api.web.ServletFilter$UrlPattern$Builder excludes(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #135                // Method excludes:(Ljava/util/Collection;)Lorg/sonar/api/web/ServletFilter$UrlPattern$Builder;
       8: areturn

  public org.sonar.api.web.ServletFilter$UrlPattern$Builder excludes(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field exclusions:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: getfield      #50                 // Field exclusionPredicates:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #81,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      21: invokedynamic #118,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      26: invokeinterface #122,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      31: invokestatic  #128                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      34: invokeinterface #132,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      39: checkcast     #77                 // class java/util/Collection
      42: invokeinterface #75,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      47: pop
      48: aload_0
      49: areturn

  public org.sonar.api.web.ServletFilter$UrlPattern build();
    Code:
       0: new           #7                  // class org/sonar/api/web/ServletFilter$UrlPattern
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #141                // Method org/sonar/api/web/ServletFilter$UrlPattern."<init>":(Lorg/sonar/api/web/ServletFilter$UrlPattern$Builder;Lorg/sonar/api/web/ServletFilter$1;)V
       9: areturn

  private static java.util.function.Predicate<java.lang.String> compile(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #147                // Method java/lang/String.length:()I
       4: aload_0
       5: ldc           #22                 // String *
       7: ldc           #149                // String
       9: invokevirtual #153                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      12: invokevirtual #147                // Method java/lang/String.length:()I
      15: isub
      16: istore_1
      17: iload_1
      18: ifne          47
      21: aload_0
      22: ldc           #155                // String /
      24: invokevirtual #158                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      27: ldc           #160                // String URL pattern must start with slash \'/\': %s
      29: iconst_1
      30: anewarray     #4                  // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_0
      36: aastore
      37: invokestatic  #166                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: invokedynamic #173,  0            // InvokeDynamic #2:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      46: areturn
      47: iload_1
      48: iconst_1
      49: if_icmpne     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ldc           #175                // String URL pattern accepts only zero or one wildcard character \'*\': %s
      59: iconst_1
      60: anewarray     #4                  // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_0
      66: aastore
      67: invokestatic  #166                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      70: aload_0
      71: iconst_0
      72: invokevirtual #179                // Method java/lang/String.charAt:(I)C
      75: bipush        47
      77: if_icmpne     115
      80: aload_0
      81: ldc           #22                 // String *
      83: invokevirtual #182                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      86: ldc           #184                // String URL pattern must end with wildcard character \'*\': %s
      88: iconst_1
      89: anewarray     #4                  // class java/lang/Object
      92: dup
      93: iconst_0
      94: aload_0
      95: aastore
      96: invokestatic  #166                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      99: aload_0
     100: ldc           #186                // String /?\\*
     102: ldc           #149                // String
     104: invokevirtual #190                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     107: astore_2
     108: aload_2
     109: invokedynamic #195,  0            // InvokeDynamic #3:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
     114: areturn
     115: aload_0
     116: ldc           #22                 // String *
     118: invokevirtual #158                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     121: ldc           #197                // String URL pattern must start with wildcard character \'*\': %s
     123: iconst_1
     124: anewarray     #4                  // class java/lang/Object
     127: dup
     128: iconst_0
     129: aload_0
     130: aastore
     131: invokestatic  #166                // Method org/sonar/api/internal/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     134: aload_0
     135: iconst_1
     136: invokevirtual #201                // Method java/lang/String.substring:(I)Ljava/lang/String;
     139: astore_2
     140: aload_2
     141: invokedynamic #206,  0            // InvokeDynamic #4:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
     146: areturn

  private static boolean lambda$compile$3(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #182                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       5: ireturn

  private static boolean lambda$compile$2(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #158                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       5: ireturn

  private static boolean lambda$compile$1(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #214                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       5: ireturn

  private static boolean lambda$includes$0(java.lang.String);
    Code:
       0: ldc           #216                // String /*
       2: aload_0
       3: invokevirtual #214                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static java.util.Set access$000(org.sonar.api.web.ServletFilter$UrlPattern$Builder);
    Code:
       0: aload_0
       1: getfield      #41                 // Field inclusions:Ljava/util/Set;
       4: areturn

  static java.util.Set access$100(org.sonar.api.web.ServletFilter$UrlPattern$Builder);
    Code:
       0: aload_0
       1: getfield      #43                 // Field exclusions:Ljava/util/Set;
       4: areturn

  static java.util.Set access$200(org.sonar.api.web.ServletFilter$UrlPattern$Builder);
    Code:
       0: aload_0
       1: getfield      #48                 // Field inclusionPredicates:Ljava/util/Set;
       4: areturn

  static java.util.Set access$300(org.sonar.api.web.ServletFilter$UrlPattern$Builder);
    Code:
       0: aload_0
       1: getfield      #50                 // Field exclusionPredicates:Ljava/util/Set;
       4: areturn

  org.sonar.api.web.ServletFilter$UrlPattern$Builder(org.sonar.api.web.ServletFilter$1);
    Code:
       0: aload_0
       1: invokespecial #224                // Method "<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #228                // String /css/*
       2: ldc           #230                // String /fonts/*
       4: ldc           #232                // String /images/*
       6: ldc           #234                // String /js/*
       8: ldc           #236                // String /static/*
      10: invokestatic  #242                // Method org/sonar/api/internal/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/sonar/api/internal/google/common/collect/ImmutableList;
      13: putstatic     #56                 // Field STATIC_RESOURCES:Ljava/util/Collection;
      16: return
}
