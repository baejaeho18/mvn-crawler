Compiled from "FileMetadata.java"
class org.sonar.api.batch.fs.internal.FileMetadata$LineCounter extends org.sonar.api.batch.fs.internal.FileMetadata$CharHandler {
  private int lines;

  private int nonBlankLines;

  private boolean blankLine;

  boolean alreadyLoggedInvalidCharacter;

  private final java.io.File file;

  private final java.nio.charset.Charset encoding;

  org.sonar.api.batch.fs.internal.FileMetadata$LineCounter(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/sonar/api/batch/fs/internal/FileMetadata$CharHandler."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #26                 // Field lines:I
       9: aload_0
      10: iconst_0
      11: putfield      #28                 // Field nonBlankLines:I
      14: aload_0
      15: iconst_1
      16: putfield      #30                 // Field blankLine:Z
      19: aload_0
      20: iconst_0
      21: putfield      #32                 // Field alreadyLoggedInvalidCharacter:Z
      24: aload_0
      25: aload_1
      26: putfield      #34                 // Field file:Ljava/io/File;
      29: aload_0
      30: aload_2
      31: putfield      #36                 // Field encoding:Ljava/nio/charset/Charset;
      34: return

  protected void handleAll(char);
    Code:
       0: aload_0
       1: getfield      #32                 // Field alreadyLoggedInvalidCharacter:Z
       4: ifne          61
       7: iload_1
       8: ldc           #41                 // int 65533
      10: if_icmpne     61
      13: invokestatic  #45                 // Method org/sonar/api/batch/fs/internal/FileMetadata.access$000:()Lorg/sonar/api/utils/log/Logger;
      16: ldc           #47                 // String Invalid character encountered in file {} at line {} for encoding {}. Please fix file content or configure the encoding to be used using property \'{}\'.
      18: iconst_4
      19: anewarray     #49                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #34                 // Field file:Ljava/io/File;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_0
      32: getfield      #26                 // Field lines:I
      35: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: dup
      40: iconst_2
      41: aload_0
      42: getfield      #36                 // Field encoding:Ljava/nio/charset/Charset;
      45: aastore
      46: dup
      47: iconst_3
      48: ldc           #57                 // String sonar.sourceEncoding
      50: aastore
      51: invokeinterface #63,  3           // InterfaceMethod org/sonar/api/utils/log/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      56: aload_0
      57: iconst_1
      58: putfield      #32                 // Field alreadyLoggedInvalidCharacter:Z
      61: return

  protected void newLine();
    Code:
       0: aload_0
       1: dup
       2: getfield      #26                 // Field lines:I
       5: iconst_1
       6: iadd
       7: putfield      #26                 // Field lines:I
      10: aload_0
      11: getfield      #30                 // Field blankLine:Z
      14: ifne          27
      17: aload_0
      18: dup
      19: getfield      #28                 // Field nonBlankLines:I
      22: iconst_1
      23: iadd
      24: putfield      #28                 // Field nonBlankLines:I
      27: aload_0
      28: iconst_1
      29: putfield      #30                 // Field blankLine:Z
      32: return

  protected void handleIgnoreEoL(char);
    Code:
       0: iload_1
       1: invokestatic  #73                 // Method java/lang/Character.isWhitespace:(C)Z
       4: ifne          12
       7: aload_0
       8: iconst_0
       9: putfield      #30                 // Field blankLine:Z
      12: return

  protected void eof();
    Code:
       0: aload_0
       1: getfield      #30                 // Field blankLine:Z
       4: ifne          17
       7: aload_0
       8: dup
       9: getfield      #28                 // Field nonBlankLines:I
      12: iconst_1
      13: iadd
      14: putfield      #28                 // Field nonBlankLines:I
      17: return

  public int lines();
    Code:
       0: aload_0
       1: getfield      #26                 // Field lines:I
       4: ireturn

  public int nonBlankLines();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nonBlankLines:I
       4: ireturn
}
