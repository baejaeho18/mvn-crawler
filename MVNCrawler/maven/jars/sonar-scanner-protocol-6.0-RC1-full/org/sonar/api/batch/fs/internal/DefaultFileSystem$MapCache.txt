Compiled from "DefaultFileSystem.java"
class org.sonar.api.batch.fs.internal.DefaultFileSystem$MapCache extends org.sonar.api.batch.fs.internal.DefaultFileSystem$Cache {
  private final java.util.Map<java.lang.String, org.sonar.api.batch.fs.InputFile> fileMap;

  private final java.util.Map<java.lang.String, org.sonar.api.batch.fs.InputDir> dirMap;

  private org.sonar.api.batch.fs.internal.DefaultFileSystem$MapCache();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/sonar/api/batch/fs/internal/DefaultFileSystem$Cache."<init>":()V
       4: aload_0
       5: new           #22                 // class java/util/HashMap
       8: dup
       9: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      12: putfield      #25                 // Field fileMap:Ljava/util/Map;
      15: aload_0
      16: new           #22                 // class java/util/HashMap
      19: dup
      20: invokespecial #23                 // Method java/util/HashMap."<init>":()V
      23: putfield      #27                 // Field dirMap:Ljava/util/Map;
      26: return

  public java.lang.Iterable<org.sonar.api.batch.fs.InputFile> inputFiles();
    Code:
       0: new           #33                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #25                 // Field fileMap:Ljava/util/Map;
       8: invokeinterface #39,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #42                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public org.sonar.api.batch.fs.InputFile inputFile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field fileMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #50                 // class org/sonar/api/batch/fs/InputFile
      13: areturn

  public org.sonar.api.batch.fs.InputDir inputDir(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #27                 // Field dirMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #56                 // class org/sonar/api/batch/fs/InputDir
      13: areturn

  protected void doAdd(org.sonar.api.batch.fs.InputFile);
    Code:
       0: aload_0
       1: getfield      #25                 // Field fileMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #61,  1           // InterfaceMethod org/sonar/api/batch/fs/InputFile.relativePath:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  protected void doAdd(org.sonar.api.batch.fs.InputDir);
    Code:
       0: aload_0
       1: getfield      #27                 // Field dirMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #68,  1           // InterfaceMethod org/sonar/api/batch/fs/InputDir.relativePath:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  org.sonar.api.batch.fs.internal.DefaultFileSystem$MapCache(org.sonar.api.batch.fs.internal.DefaultFileSystem$1);
    Code:
       0: aload_0
       1: invokespecial #71                 // Method "<init>":()V
       4: return
}
