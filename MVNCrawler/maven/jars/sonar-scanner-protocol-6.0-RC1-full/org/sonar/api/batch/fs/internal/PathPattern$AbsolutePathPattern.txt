Compiled from "PathPattern.java"
class org.sonar.api.batch.fs.internal.PathPattern$AbsolutePathPattern extends org.sonar.api.batch.fs.internal.PathPattern {
  private org.sonar.api.batch.fs.internal.PathPattern$AbsolutePathPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/sonar/api/batch/fs/internal/PathPattern."<init>":(Ljava/lang/String;)V
       5: return

  public boolean match(org.sonar.api.batch.fs.InputFile);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #21                 // Method match:(Lorg/sonar/api/batch/fs/InputFile;Z)Z
       6: ireturn

  public boolean match(org.sonar.api.batch.fs.InputFile, boolean);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod org/sonar/api/batch/fs/InputFile.absolutePath:()Ljava/lang/String;
       6: astore_3
       7: iload_2
       8: ifne          63
      11: aload_1
      12: invokeinterface #33,  1           // InterfaceMethod org/sonar/api/batch/fs/InputFile.file:()Ljava/io/File;
      17: invokevirtual #38                 // Method java/io/File.getName:()Ljava/lang/String;
      20: invokestatic  #44                 // Method org/sonar/api/internal/apachecommons/io/FilenameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;
      23: invokestatic  #47                 // Method sanitizeExtension:(Ljava/lang/String;)Ljava/lang/String;
      26: astore        4
      28: aload         4
      30: invokestatic  #53                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      33: ifeq          63
      36: aload_3
      37: aload         4
      39: invokestatic  #57                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.removeEndIgnoreCase:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      42: astore_3
      43: new           #59                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      50: aload_3
      51: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload         4
      56: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: astore_3
      63: aload_0
      64: getfield      #74                 // Field pattern:Lorg/sonar/api/utils/WildcardPattern;
      67: aload_3
      68: invokevirtual #78                 // Method org/sonar/api/utils/WildcardPattern.match:(Ljava/lang/String;)Z
      71: ireturn

  public java.lang.String toString();
    Code:
       0: new           #59                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #84                 // String file:
       9: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #74                 // Field pattern:Lorg/sonar/api/utils/WildcardPattern;
      16: invokevirtual #85                 // Method org/sonar/api/utils/WildcardPattern.toString:()Ljava/lang/String;
      19: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  org.sonar.api.batch.fs.internal.PathPattern$AbsolutePathPattern(java.lang.String, org.sonar.api.batch.fs.internal.PathPattern$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #87                 // Method "<init>":(Ljava/lang/String;)V
       5: return
}
