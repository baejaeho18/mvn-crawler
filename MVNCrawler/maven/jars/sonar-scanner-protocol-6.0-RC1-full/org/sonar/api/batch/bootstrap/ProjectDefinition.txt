Compiled from "ProjectDefinition.java"
public class org.sonar.api.batch.bootstrap.ProjectDefinition {
  public static final java.lang.String SOURCES_PROPERTY;

  public static final java.lang.String TESTS_PROPERTY;

  public static final java.lang.String BUILD_DIR_PROPERTY;

  private static final char SEPARATOR;

  private java.io.File baseDir;

  private java.io.File workDir;

  private java.io.File buildDir;

  private java.util.Map<java.lang.String, java.lang.String> properties;

  private org.sonar.api.batch.bootstrap.ProjectDefinition parent;

  private java.util.List<org.sonar.api.batch.bootstrap.ProjectDefinition> subProjects;

  private org.sonar.api.batch.bootstrap.ProjectDefinition(java.util.Properties);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #42                 // class java/util/HashMap
       8: dup
       9: invokespecial #43                 // Method java/util/HashMap."<init>":()V
      12: putfield      #45                 // Field properties:Ljava/util/Map;
      15: aload_0
      16: aconst_null
      17: putfield      #47                 // Field parent:Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      20: aload_0
      21: new           #49                 // class java/util/ArrayList
      24: dup
      25: invokespecial #50                 // Method java/util/ArrayList."<init>":()V
      28: putfield      #52                 // Field subProjects:Ljava/util/List;
      31: aload_1
      32: invokevirtual #58                 // Method java/util/Properties.entrySet:()Ljava/util/Set;
      35: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: astore_2
      41: aload_2
      42: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          91
      50: aload_2
      51: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #7                  // class java/util/Map$Entry
      59: astore_3
      60: aload_0
      61: getfield      #45                 // Field properties:Ljava/util/Map;
      64: aload_3
      65: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      70: invokevirtual #81                 // Method java/lang/Object.toString:()Ljava/lang/String;
      73: aload_3
      74: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: invokevirtual #81                 // Method java/lang/Object.toString:()Ljava/lang/String;
      82: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: goto          41
      91: return

  public static org.sonar.api.batch.bootstrap.ProjectDefinition create();
    Code:
       0: new           #2                  // class org/sonar/api/batch/bootstrap/ProjectDefinition
       3: dup
       4: new           #54                 // class java/util/Properties
       7: dup
       8: invokespecial #97                 // Method java/util/Properties."<init>":()V
      11: invokespecial #99                 // Method "<init>":(Ljava/util/Properties;)V
      14: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setBaseDir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #103                // Field baseDir:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getBaseDir();
    Code:
       0: aload_0
       1: getfield      #103                // Field baseDir:Ljava/io/File;
       4: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setWorkDir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field workDir:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getWorkDir();
    Code:
       0: aload_0
       1: getfield      #108                // Field workDir:Ljava/io/File;
       4: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setBuildDir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #112                // Field buildDir:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getBuildDir();
    Code:
       0: aload_0
       1: getfield      #112                // Field buildDir:Ljava/io/File;
       4: areturn

  public java.util.Properties getProperties();
    Code:
       0: new           #54                 // class java/util/Properties
       3: dup
       4: invokespecial #97                 // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #45                 // Field properties:Ljava/util/Map;
      12: invokeinterface #118,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          68
      32: aload_2
      33: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #7                  // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: checkcast     #120                // class java/lang/String
      52: aload_3
      53: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: checkcast     #120                // class java/lang/String
      61: invokevirtual #124                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      64: pop
      65: goto          23
      68: aload_1
      69: areturn

  public java.util.Map<java.lang.String, java.lang.String> properties();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setProperties(java.util.Properties);
    Code:
       0: aload_1
       1: invokevirtual #58                 // Method java/util/Properties.entrySet:()Ljava/util/Set;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          60
      19: aload_2
      20: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #7                  // class java/util/Map$Entry
      28: astore_3
      29: aload_0
      30: getfield      #45                 // Field properties:Ljava/util/Map;
      33: aload_3
      34: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: invokevirtual #81                 // Method java/lang/Object.toString:()Ljava/lang/String;
      42: aload_3
      43: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: invokevirtual #81                 // Method java/lang/Object.toString:()Ljava/lang/String;
      51: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: goto          10
      60: aload_0
      61: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setProperties(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #134,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: aload_0
      11: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #141                // String sonar.projectKey
       6: aload_1
       7: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setVersion(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #144                // String sonar.projectVersion
       6: aload_1
       7: invokestatic  #150                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #154                // String sonar.projectName
       6: aload_1
       7: invokestatic  #150                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setDescription(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #157                // String sonar.projectDescription
       6: aload_1
       7: invokestatic  #150                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;
      10: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #141                // String sonar.projectKey
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #120                // class java/lang/String
      14: areturn

  public java.lang.String getKeyWithBranch();
    Code:
       0: aload_0
       1: invokevirtual #165                // Method getBranch:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: invokevirtual #167                // Method getKey:()Ljava/lang/String;
       9: astore_2
      10: aload_1
      11: invokestatic  #171                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      14: ifeq          35
      17: ldc           #173                // String %s:%s
      19: iconst_2
      20: anewarray     #4                  // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_2
      26: aastore
      27: dup
      28: iconst_1
      29: aload_1
      30: aastore
      31: invokestatic  #177                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: astore_2
      35: aload_2
      36: areturn

  public java.lang.String getBranch();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #182                // String sonar.branch
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #120                // class java/lang/String
      14: astore_1
      15: aload_1
      16: invokestatic  #171                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      19: ifeq          24
      22: aload_1
      23: areturn
      24: aload_0
      25: invokevirtual #185                // Method getParent:()Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      28: ifnull        39
      31: aload_0
      32: invokevirtual #185                // Method getParent:()Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      35: invokevirtual #165                // Method getBranch:()Ljava/lang/String;
      38: areturn
      39: aconst_null
      40: areturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #144                // String sonar.projectVersion
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #120                // class java/lang/String
      14: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #154                // String sonar.projectName
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #120                // class java/lang/String
      14: astore_1
      15: aload_1
      16: invokestatic  #190                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      19: ifeq          45
      22: new           #192                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #193                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #195                // String Unnamed -
      31: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #167                // Method getKey:()Ljava/lang/String;
      38: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #200                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_1
      45: aload_1
      46: areturn

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #157                // String sonar.projectDescription
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #120                // class java/lang/String
      14: areturn

  private void appendProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ldc           #206                // String
      12: invokestatic  #211                // Method org/sonar/api/internal/apachecommons/lang/ObjectUtils.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #120                // class java/lang/String
      18: astore_3
      19: aload_3
      20: invokestatic  #190                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      23: ifeq          41
      26: aload_0
      27: getfield      #45                 // Field properties:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: goto          75
      41: aload_0
      42: getfield      #45                 // Field properties:Ljava/util/Map;
      45: aload_1
      46: new           #192                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #193                // Method java/lang/StringBuilder."<init>":()V
      53: aload_3
      54: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: bipush        44
      59: invokevirtual #214                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: aload_2
      63: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #200                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: return

  public java.util.List<java.lang.String> sources();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #14                 // String sonar.sources
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: ldc           #206                // String
      13: invokestatic  #211                // Method org/sonar/api/internal/apachecommons/lang/ObjectUtils.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #120                // class java/lang/String
      19: astore_1
      20: aload_1
      21: bipush        44
      23: invokestatic  #221                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.split:(Ljava/lang/String;C)[Ljava/lang/String;
      26: invokestatic  #225                // Method trim:([Ljava/lang/String;)Ljava/util/List;
      29: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition addSources(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     34
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: ldc           #14                 // String sonar.sources
      23: aload         5
      25: invokespecial #231                // Method appendProperty:(Ljava/lang/String;Ljava/lang/String;)V
      28: iinc          4, 1
      31: goto          8
      34: aload_0
      35: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition addSources(java.io.File...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     43
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: iconst_1
      22: anewarray     #120                // class java/lang/String
      25: dup
      26: iconst_0
      27: aload         5
      29: invokevirtual #241                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      32: aastore
      33: invokevirtual #243                // Method addSources:([Ljava/lang/String;)Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      36: pop
      37: iinc          4, 1
      40: goto          8
      43: aload_0
      44: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition resetSources();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #14                 // String sonar.sources
       6: invokeinterface #249,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setSources(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #252                // Method resetSources:()Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #243                // Method addSources:([Ljava/lang/String;)Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      10: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setSources(java.io.File...);
    Code:
       0: aload_0
       1: invokevirtual #252                // Method resetSources:()Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       4: pop
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     48
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload_0
      26: iconst_1
      27: anewarray     #120                // class java/lang/String
      30: dup
      31: iconst_0
      32: aload         5
      34: invokevirtual #241                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      37: aastore
      38: invokevirtual #243                // Method addSources:([Ljava/lang/String;)Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      41: pop
      42: iinc          4, 1
      45: goto          13
      48: aload_0
      49: areturn

  public java.util.List<java.lang.String> tests();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #17                 // String sonar.tests
       6: invokeinterface #161,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: ldc           #206                // String
      13: invokestatic  #211                // Method org/sonar/api/internal/apachecommons/lang/ObjectUtils.defaultIfNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #120                // class java/lang/String
      19: astore_1
      20: aload_1
      21: bipush        44
      23: invokestatic  #221                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.split:(Ljava/lang/String;C)[Ljava/lang/String;
      26: invokestatic  #225                // Method trim:([Ljava/lang/String;)Ljava/util/List;
      29: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition addTests(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     34
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: ldc           #17                 // String sonar.tests
      23: aload         5
      25: invokespecial #231                // Method appendProperty:(Ljava/lang/String;Ljava/lang/String;)V
      28: iinc          4, 1
      31: goto          8
      34: aload_0
      35: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition addTests(java.io.File...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     43
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: iconst_1
      22: anewarray     #120                // class java/lang/String
      25: dup
      26: iconst_0
      27: aload         5
      29: invokevirtual #241                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      32: aastore
      33: invokevirtual #257                // Method addTests:([Ljava/lang/String;)Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      36: pop
      37: iinc          4, 1
      40: goto          8
      43: aload_0
      44: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setTests(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #261                // Method resetTests:()Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #257                // Method addTests:([Ljava/lang/String;)Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      10: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition setTests(java.io.File...);
    Code:
       0: aload_0
       1: invokevirtual #261                // Method resetTests:()Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       4: pop
       5: aload_1
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     48
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: aload_0
      26: iconst_1
      27: anewarray     #120                // class java/lang/String
      30: dup
      31: iconst_0
      32: aload         5
      34: invokevirtual #241                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      37: aastore
      38: invokevirtual #257                // Method addTests:([Ljava/lang/String;)Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      41: pop
      42: iinc          4, 1
      45: goto          13
      48: aload_0
      49: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition resetTests();
    Code:
       0: aload_0
       1: getfield      #45                 // Field properties:Ljava/util/Map;
       4: ldc           #17                 // String sonar.tests
       6: invokeinterface #249,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition addSubProject(org.sonar.api.batch.bootstrap.ProjectDefinition);
    Code:
       0: aload_0
       1: getfield      #52                 // Field subProjects:Ljava/util/List;
       4: aload_1
       5: invokeinterface #270,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: invokespecial #274                // Method setParent:(Lorg/sonar/api/batch/bootstrap/ProjectDefinition;)V
      16: aload_0
      17: areturn

  public org.sonar.api.batch.bootstrap.ProjectDefinition getParent();
    Code:
       0: aload_0
       1: getfield      #47                 // Field parent:Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       4: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #47                 // Field parent:Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       4: ifnull        35
       7: aload_0
       8: getfield      #47                 // Field parent:Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      11: getfield      #52                 // Field subProjects:Ljava/util/List;
      14: aload_0
      15: invokeinterface #277,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      20: pop
      21: aload_0
      22: aconst_null
      23: putfield      #47                 // Field parent:Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
      26: aload_0
      27: getfield      #52                 // Field subProjects:Ljava/util/List;
      30: invokeinterface #280,  1          // InterfaceMethod java/util/List.clear:()V
      35: return

  private void setParent(org.sonar.api.batch.bootstrap.ProjectDefinition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field parent:Lorg/sonar/api/batch/bootstrap/ProjectDefinition;
       5: return

  public java.util.List<org.sonar.api.batch.bootstrap.ProjectDefinition> getSubProjects();
    Code:
       0: aload_0
       1: getfield      #52                 // Field subProjects:Ljava/util/List;
       4: areturn

  private static java.util.List<java.lang.String> trim(java.lang.String[]);
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: invokespecial #50                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     46
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: aload         5
      31: invokestatic  #283                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.trim:(Ljava/lang/String;)Ljava/lang/String;
      34: invokeinterface #270,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: iinc          4, 1
      43: goto          16
      46: aload_1
      47: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #290                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #290                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/sonar/api/batch/bootstrap/ProjectDefinition
      28: astore_2
      29: aload_0
      30: invokevirtual #167                // Method getKey:()Ljava/lang/String;
      33: astore_3
      34: aload_3
      35: ifnull        52
      38: aload_3
      39: aload_2
      40: invokevirtual #167                // Method getKey:()Ljava/lang/String;
      43: invokevirtual #292                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifne          59
      49: goto          63
      52: aload_2
      53: invokevirtual #167                // Method getKey:()Ljava/lang/String;
      56: ifnonnull     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getKey:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #299                // Method java/lang/String.hashCode:()I
      13: goto          17
      16: iconst_0
      17: ireturn
}
