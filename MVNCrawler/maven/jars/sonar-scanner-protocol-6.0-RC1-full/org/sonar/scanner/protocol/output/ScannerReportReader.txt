Compiled from "ScannerReportReader.java"
public class org.sonar.scanner.protocol.output.ScannerReportReader {
  private final org.sonar.scanner.protocol.output.FileStructure fileStructure;

  public org.sonar.scanner.protocol.output.ScannerReportReader(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/sonar/scanner/protocol/output/FileStructure
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method org/sonar/scanner/protocol/output/FileStructure."<init>":(Ljava/io/File;)V
      13: putfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
      16: return

  public org.sonar.scanner.protocol.output.ScannerReport$Metadata readMetadata();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: invokevirtual #5                  // Method org/sonar/scanner/protocol/output/FileStructure.metadataFile:()Ljava/io/File;
       7: astore_1
       8: aload_1
       9: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      12: ifne          42
      15: new           #7                  // class java/lang/IllegalStateException
      18: dup
      19: new           #8                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #10                 // String Metadata file is missing in analysis report:
      28: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: invokestatic  #15                 // Method org/sonar/scanner/protocol/output/ScannerReport$Metadata.parser:()Lcom/google/protobuf/Parser;
      46: invokestatic  #16                 // Method org/sonar/core/util/Protobuf.read:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lcom/google/protobuf/Message;
      49: checkcast     #17                 // class org/sonar/scanner/protocol/output/ScannerReport$Metadata
      52: areturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$ActiveRule> readActiveRules();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: invokevirtual #18                 // Method org/sonar/scanner/protocol/output/FileStructure.activeRules:()Ljava/io/File;
       7: astore_1
       8: aload_1
       9: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      12: ifne          19
      15: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      18: areturn
      19: aload_1
      20: invokestatic  #20                 // Method org/sonar/scanner/protocol/output/ScannerReport$ActiveRule.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$Measure> readComponentMeasures(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #22                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.MEASURES:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #24                 // Method org/sonar/scanner/protocol/output/ScannerReport$Measure.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public org.sonar.scanner.protocol.output.ScannerReport$Changesets readChangesets(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #25                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.CHANGESETS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          30
      19: aload_2
      20: invokestatic  #26                 // Method org/sonar/scanner/protocol/output/ScannerReport$Changesets.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #16                 // Method org/sonar/core/util/Protobuf.read:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lcom/google/protobuf/Message;
      26: checkcast     #27                 // class org/sonar/scanner/protocol/output/ScannerReport$Changesets
      29: areturn
      30: aconst_null
      31: areturn

  public org.sonar.scanner.protocol.output.ScannerReport$Component readComponent(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #28                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.COMPONENT:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifne          55
      19: new           #7                  // class java/lang/IllegalStateException
      22: dup
      23: new           #8                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #29                 // String Unable to find report for component #
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #31                 // String . File does not exist:
      41: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_2
      45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_2
      56: invokestatic  #32                 // Method org/sonar/scanner/protocol/output/ScannerReport$Component.parser:()Lcom/google/protobuf/Parser;
      59: invokestatic  #16                 // Method org/sonar/core/util/Protobuf.read:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lcom/google/protobuf/Message;
      62: checkcast     #33                 // class org/sonar/scanner/protocol/output/ScannerReport$Component
      65: areturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$Issue> readComponentIssues(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #34                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.ISSUES:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #35                 // Method org/sonar/scanner/protocol/output/ScannerReport$Issue.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$Duplication> readComponentDuplications(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #36                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.DUPLICATIONS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #37                 // Method org/sonar/scanner/protocol/output/ScannerReport$Duplication.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock> readCpdTextBlocks(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #38                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.CPD_TEXT_BLOCKS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #39                 // Method org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$Symbol> readComponentSymbols(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #40                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.SYMBOLS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #41                 // Method org/sonar/scanner/protocol/output/ScannerReport$Symbol.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public boolean hasSyntaxHighlighting(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #42                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.SYNTAX_HIGHLIGHTINGS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokevirtual #43                 // Method java/io/File.exists:()Z
      16: ireturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule> readComponentSyntaxHighlighting(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #42                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.SYNTAX_HIGHLIGHTINGS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #44                 // Method org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public boolean hasCoverage(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #45                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.COVERAGES:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokevirtual #43                 // Method java/io/File.exists:()Z
      16: ireturn

  public org.sonar.core.util.CloseableIterator<org.sonar.scanner.protocol.output.ScannerReport$LineCoverage> readComponentCoverage(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #45                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.COVERAGES:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          27
      19: aload_2
      20: invokestatic  #46                 // Method org/sonar/scanner/protocol/output/ScannerReport$LineCoverage.parser:()Lcom/google/protobuf/Parser;
      23: invokestatic  #21                 // Method org/sonar/core/util/Protobuf.readStream:(Ljava/io/File;Lcom/google/protobuf/Parser;)Lorg/sonar/core/util/CloseableIterator;
      26: areturn
      27: invokestatic  #19                 // Method org/sonar/core/util/CloseableIterator.emptyCloseableIterator:()Lorg/sonar/core/util/CloseableIterator;
      30: areturn

  public java.io.File readFileSource(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #47                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.SOURCE:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          21
      19: aload_2
      20: areturn
      21: aconst_null
      22: areturn

  public java.io.File readTests(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #48                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.TESTS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          21
      19: aload_2
      20: areturn
      21: aconst_null
      22: areturn

  public java.io.File readCoverageDetails(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: getstatic     #49                 // Field org/sonar/scanner/protocol/output/FileStructure$Domain.COVERAGE_DETAILS:Lorg/sonar/scanner/protocol/output/FileStructure$Domain;
       7: iload_1
       8: invokevirtual #23                 // Method org/sonar/scanner/protocol/output/FileStructure.fileFor:(Lorg/sonar/scanner/protocol/output/FileStructure$Domain;I)Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokestatic  #6                  // Method fileExists:(Ljava/io/File;)Z
      16: ifeq          21
      19: aload_2
      20: areturn
      21: aconst_null
      22: areturn

  private static boolean fileExists(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method java/io/File.exists:()Z
       4: ifeq          18
       7: aload_0
       8: invokevirtual #50                 // Method java/io/File.isFile:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public org.sonar.scanner.protocol.output.FileStructure getFileStructure();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileStructure:Lorg/sonar/scanner/protocol/output/FileStructure;
       4: areturn
}
