Compiled from "KeywordsTokenizer.java"
public class org.sonar.colorizer.KeywordsTokenizer extends org.sonar.colorizer.NotThreadSafeTokenizer {
  private final java.lang.String tagBefore;

  private final java.lang.String tagAfter;

  private boolean caseInsensitive;

  private java.util.regex.Matcher matcher;

  private final java.lang.StringBuilder tmpBuilder;

  private static final java.lang.String DEFAULT_REGEX;

  private java.util.Set<java.lang.String> keywords;

  public org.sonar.colorizer.KeywordsTokenizer(java.lang.String, java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: ldc           #18                 // String [a-zA-Z_][a-zA-Z0-9_]*+
       6: invokespecial #26                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;)V
       9: return

  public org.sonar.colorizer.KeywordsTokenizer(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/sonar/colorizer/NotThreadSafeTokenizer."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #33                 // Field caseInsensitive:Z
       9: aload_0
      10: new           #35                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      17: putfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      20: aload_0
      21: new           #40                 // class java/util/HashSet
      24: dup
      25: invokespecial #41                 // Method java/util/HashSet."<init>":()V
      28: putfield      #43                 // Field keywords:Ljava/util/Set;
      31: aload_0
      32: aload_1
      33: putfield      #45                 // Field tagBefore:Ljava/lang/String;
      36: aload_0
      37: aload_2
      38: putfield      #47                 // Field tagAfter:Ljava/lang/String;
      41: aload_0
      42: aload_3
      43: putfield      #43                 // Field keywords:Ljava/util/Set;
      46: aload_0
      47: aload         4
      49: invokestatic  #53                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      52: ldc           #55                 // String
      54: invokevirtual #58                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      57: putfield      #60                 // Field matcher:Ljava/util/regex/Matcher;
      60: return

  public org.sonar.colorizer.KeywordsTokenizer(java.lang.String, java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/sonar/colorizer/NotThreadSafeTokenizer."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #33                 // Field caseInsensitive:Z
       9: aload_0
      10: new           #35                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      17: putfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      20: aload_0
      21: new           #40                 // class java/util/HashSet
      24: dup
      25: invokespecial #41                 // Method java/util/HashSet."<init>":()V
      28: putfield      #43                 // Field keywords:Ljava/util/Set;
      31: aload_0
      32: aload_1
      33: putfield      #45                 // Field tagBefore:Ljava/lang/String;
      36: aload_0
      37: aload_2
      38: putfield      #47                 // Field tagAfter:Ljava/lang/String;
      41: aload_0
      42: getfield      #43                 // Field keywords:Ljava/util/Set;
      45: aload_3
      46: invokestatic  #68                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      49: pop
      50: aload_0
      51: ldc           #18                 // String [a-zA-Z_][a-zA-Z0-9_]*+
      53: invokestatic  #53                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      56: ldc           #55                 // String
      58: invokevirtual #58                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      61: putfield      #60                 // Field matcher:Ljava/util/regex/Matcher;
      64: return

  public boolean consume(org.sonar.channel.CodeReader, org.sonar.colorizer.HtmlCodeBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #60                 // Field matcher:Ljava/util/regex/Matcher;
       5: aload_0
       6: getfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
       9: invokevirtual #77                 // Method org/sonar/channel/CodeReader.popTo:(Ljava/util/regex/Matcher;Ljava/lang/Appendable;)I
      12: ifle          84
      15: aload_0
      16: aload_0
      17: getfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      20: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #85                 // Method isKeyword:(Ljava/lang/String;)Z
      26: ifeq          57
      29: aload_2
      30: aload_0
      31: getfield      #45                 // Field tagBefore:Ljava/lang/String;
      34: invokevirtual #91                 // Method org/sonar/colorizer/HtmlCodeBuilder.appendWithoutTransforming:(Ljava/lang/String;)V
      37: aload_2
      38: aload_0
      39: getfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      42: invokevirtual #95                 // Method org/sonar/colorizer/HtmlCodeBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      45: pop
      46: aload_2
      47: aload_0
      48: getfield      #47                 // Field tagAfter:Ljava/lang/String;
      51: invokevirtual #91                 // Method org/sonar/colorizer/HtmlCodeBuilder.appendWithoutTransforming:(Ljava/lang/String;)V
      54: goto          66
      57: aload_2
      58: aload_0
      59: getfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      62: invokevirtual #95                 // Method org/sonar/colorizer/HtmlCodeBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      65: pop
      66: aload_0
      67: getfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      70: iconst_0
      71: aload_0
      72: getfield      #38                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      75: invokevirtual #99                 // Method java/lang/StringBuilder.length:()I
      78: invokevirtual #103                // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      81: pop
      82: iconst_1
      83: ireturn
      84: iconst_0
      85: ireturn

  private boolean isKeyword(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field caseInsensitive:Z
       4: ifne          22
       7: aload_0
       8: getfield      #43                 // Field keywords:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #113,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #33                 // Field caseInsensitive:Z
      26: ifeq          50
      29: aload_0
      30: getfield      #43                 // Field keywords:Ljava/util/Set;
      33: aload_1
      34: getstatic     #119                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      37: invokevirtual #125                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      40: invokeinterface #113,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: iconst_0
      51: ireturn

  public void setCaseInsensitive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field caseInsensitive:Z
       5: return

  public org.sonar.colorizer.KeywordsTokenizer clone();
    Code:
       0: new           #2                  // class org/sonar/colorizer/KeywordsTokenizer
       3: dup
       4: aload_0
       5: getfield      #45                 // Field tagBefore:Ljava/lang/String;
       8: aload_0
       9: getfield      #47                 // Field tagAfter:Ljava/lang/String;
      12: aload_0
      13: getfield      #43                 // Field keywords:Ljava/util/Set;
      16: aload_0
      17: getfield      #60                 // Field matcher:Ljava/util/regex/Matcher;
      20: invokevirtual #136                // Method java/util/regex/Matcher.pattern:()Ljava/util/regex/Pattern;
      23: invokevirtual #138                // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;
      26: invokespecial #26                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/lang/String;)V
      29: astore_1
      30: aload_1
      31: aload_0
      32: getfield      #33                 // Field caseInsensitive:Z
      35: putfield      #33                 // Field caseInsensitive:Z
      38: aload_1
      39: areturn

  public org.sonar.colorizer.NotThreadSafeTokenizer clone();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method clone:()Lorg/sonar/colorizer/KeywordsTokenizer;
       4: areturn

  public boolean consume(org.sonar.channel.CodeReader, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #87                 // class org/sonar/colorizer/HtmlCodeBuilder
       6: invokevirtual #144                // Method consume:(Lorg/sonar/channel/CodeReader;Lorg/sonar/colorizer/HtmlCodeBuilder;)Z
       9: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #141                // Method clone:()Lorg/sonar/colorizer/KeywordsTokenizer;
       4: areturn
}
