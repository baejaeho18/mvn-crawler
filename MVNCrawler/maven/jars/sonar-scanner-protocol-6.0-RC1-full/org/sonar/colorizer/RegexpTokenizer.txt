Compiled from "RegexpTokenizer.java"
public class org.sonar.colorizer.RegexpTokenizer extends org.sonar.colorizer.NotThreadSafeTokenizer {
  private final java.lang.String tagBefore;

  private final java.lang.String tagAfter;

  private final java.util.regex.Matcher matcher;

  private final java.lang.StringBuilder tmpBuilder;

  public org.sonar.colorizer.RegexpTokenizer(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method org/sonar/colorizer/NotThreadSafeTokenizer."<init>":()V
       4: aload_0
       5: new           #20                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #23                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      15: aload_0
      16: aload_1
      17: putfield      #25                 // Field tagBefore:Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: putfield      #27                 // Field tagAfter:Ljava/lang/String;
      25: aload_0
      26: aload_3
      27: invokestatic  #33                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      30: ldc           #35                 // String
      32: invokevirtual #38                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      35: putfield      #40                 // Field matcher:Ljava/util/regex/Matcher;
      38: return

  public boolean consume(org.sonar.channel.CodeReader, org.sonar.colorizer.HtmlCodeBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #40                 // Field matcher:Ljava/util/regex/Matcher;
       5: aload_0
       6: getfield      #23                 // Field tmpBuilder:Ljava/lang/StringBuilder;
       9: invokevirtual #51                 // Method org/sonar/channel/CodeReader.popTo:(Ljava/util/regex/Matcher;Ljava/lang/Appendable;)I
      12: ifle          58
      15: aload_2
      16: aload_0
      17: getfield      #25                 // Field tagBefore:Ljava/lang/String;
      20: invokevirtual #57                 // Method org/sonar/colorizer/HtmlCodeBuilder.appendWithoutTransforming:(Ljava/lang/String;)V
      23: aload_2
      24: aload_0
      25: getfield      #23                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      28: invokevirtual #61                 // Method org/sonar/colorizer/HtmlCodeBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      31: pop
      32: aload_2
      33: aload_0
      34: getfield      #27                 // Field tagAfter:Ljava/lang/String;
      37: invokevirtual #57                 // Method org/sonar/colorizer/HtmlCodeBuilder.appendWithoutTransforming:(Ljava/lang/String;)V
      40: aload_0
      41: getfield      #23                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      44: iconst_0
      45: aload_0
      46: getfield      #23                 // Field tmpBuilder:Ljava/lang/StringBuilder;
      49: invokevirtual #65                 // Method java/lang/StringBuilder.length:()I
      52: invokevirtual #69                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      55: pop
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public org.sonar.colorizer.RegexpTokenizer clone();
    Code:
       0: new           #2                  // class org/sonar/colorizer/RegexpTokenizer
       3: dup
       4: aload_0
       5: getfield      #25                 // Field tagBefore:Ljava/lang/String;
       8: aload_0
       9: getfield      #27                 // Field tagAfter:Ljava/lang/String;
      12: aload_0
      13: getfield      #40                 // Field matcher:Ljava/util/regex/Matcher;
      16: invokevirtual #81                 // Method java/util/regex/Matcher.pattern:()Ljava/util/regex/Pattern;
      19: invokevirtual #84                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;
      22: invokespecial #86                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      25: areturn

  public org.sonar.colorizer.NotThreadSafeTokenizer clone();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method clone:()Lorg/sonar/colorizer/RegexpTokenizer;
       4: areturn

  public boolean consume(org.sonar.channel.CodeReader, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #53                 // class org/sonar/colorizer/HtmlCodeBuilder
       6: invokevirtual #92                 // Method consume:(Lorg/sonar/channel/CodeReader;Lorg/sonar/colorizer/HtmlCodeBuilder;)Z
       9: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method clone:()Lorg/sonar/colorizer/RegexpTokenizer;
       4: areturn
}
