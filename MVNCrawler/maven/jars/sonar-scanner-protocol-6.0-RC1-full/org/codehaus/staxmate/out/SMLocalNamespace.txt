Compiled from "SMLocalNamespace.java"
public final class org.codehaus.staxmate.out.SMLocalNamespace extends org.codehaus.staxmate.out.SMNamespace {
  protected final org.codehaus.staxmate.out.SMOutputContext _context;

  protected java.lang.String _preferredPrefix;

  protected java.lang.String _currPrefix;

  protected java.lang.String _prevPrefix;

  protected boolean _preferDefaultNs;

  protected boolean _isPermanent;

  protected org.codehaus.staxmate.out.SMLocalNamespace(org.codehaus.staxmate.out.SMOutputContext, java.lang.String, boolean, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/codehaus/staxmate/out/SMNamespace."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field _currPrefix:Ljava/lang/String;
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field _prevPrefix:Ljava/lang/String;
      15: aload_0
      16: aload_1
      17: putfield      #4                  // Field _context:Lorg/codehaus/staxmate/out/SMOutputContext;
      20: aload_0
      21: aload         4
      23: putfield      #5                  // Field _preferredPrefix:Ljava/lang/String;
      26: aload_0
      27: iload_3
      28: putfield      #6                  // Field _preferDefaultNs:Z
      31: return

  public java.lang.String getPreferredPrefix();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _preferredPrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getBoundPrefix();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _currPrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getLastBoundPrefix();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _prevPrefix:Ljava/lang/String;
       4: areturn

  public boolean prefersDefaultNs();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _preferDefaultNs:Z
       4: ireturn

  public void prefersDefaultNs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field _preferDefaultNs:Z
       5: return

  public void setPreferredPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field _preferredPrefix:Ljava/lang/String;
       5: return

  protected boolean isValidIn(org.codehaus.staxmate.out.SMOutputContext);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field _context:Lorg/codehaus/staxmate/out/SMOutputContext;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected void _bindAs(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _currPrefix:Ljava/lang/String;
       4: ifnull        63
       7: new           #7                  // class java/lang/IllegalStateException
      10: dup
      11: new           #8                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #10                 // String Trying to re-bind URI \'
      20: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #12                 // Field _uri:Ljava/lang/String;
      27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #13                 // String \', from prefix \'
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #2                  // Field _currPrefix:Ljava/lang/String;
      39: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #14                 // String \' to prefix \'
      44: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #15                 // String \'
      53: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: aload_0
      65: aload_1
      66: dup_x1
      67: putfield      #3                  // Field _prevPrefix:Ljava/lang/String;
      70: putfield      #2                  // Field _currPrefix:Ljava/lang/String;
      73: return

  protected void _bindPermanentlyAs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method _bindAs:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #19                 // Field _isPermanent:Z
       9: ifeq          56
      12: new           #7                  // class java/lang/IllegalStateException
      15: dup
      16: new           #8                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #20                 // String Trying to call permanentlyBindAs() twice (for URI \'
      25: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #12                 // Field _uri:Ljava/lang/String;
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #21                 // String \', prefix \'
      37: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #22                 // String \')
      46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: iconst_1
      58: putfield      #19                 // Field _isPermanent:Z
      61: return

  protected void _unbind();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _currPrefix:Ljava/lang/String;
       4: ifnonnull     42
       7: new           #7                  // class java/lang/IllegalStateException
      10: dup
      11: new           #8                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #23                 // String Trying to unbind an unbound namespace (URI \'
      20: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #12                 // Field _uri:Ljava/lang/String;
      27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #22                 // String \')
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: getfield      #19                 // Field _isPermanent:Z
      46: ifne          54
      49: aload_0
      50: aconst_null
      51: putfield      #2                  // Field _currPrefix:Ljava/lang/String;
      54: return
}
