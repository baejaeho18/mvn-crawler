Compiled from "AbstractProtobufList.java"
abstract class com.google.protobuf.AbstractProtobufList<E> extends java.util.AbstractList<E> implements com.google.protobuf.Internal$ProtobufList<E> {
  private boolean isMutable;

  com.google.protobuf.AbstractProtobufList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field isMutable:Z
       9: return

  public boolean add(E);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #4                  // Method java/util/AbstractList.add:(Ljava/lang/Object;)Z
       9: ireturn

  public void add(int, E);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #5                  // Method java/util/AbstractList.add:(ILjava/lang/Object;)V
      10: return

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #6                  // Method java/util/AbstractList.addAll:(Ljava/util/Collection;)Z
       9: ireturn

  public boolean addAll(int, java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #7                  // Method java/util/AbstractList.addAll:(ILjava/util/Collection;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: invokespecial #8                  // Method java/util/AbstractList.clear:()V
       8: return

  public boolean isModifiable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isMutable:Z
       4: ireturn

  public final void makeImmutable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field isMutable:Z
       5: return

  public E remove(int);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: invokespecial #9                  // Method java/util/AbstractList.remove:(I)Ljava/lang/Object;
       9: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #10                 // Method java/util/AbstractList.remove:(Ljava/lang/Object;)Z
       9: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #11                 // Method java/util/AbstractList.removeAll:(Ljava/util/Collection;)Z
       9: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: aload_1
       6: invokespecial #12                 // Method java/util/AbstractList.retainAll:(Ljava/util/Collection;)Z
       9: ireturn

  public E set(int, E);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method ensureIsMutable:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #13                 // Method java/util/AbstractList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      10: areturn

  protected void ensureIsMutable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isMutable:Z
       4: ifne          15
       7: new           #14                 // class java/lang/UnsupportedOperationException
      10: dup
      11: invokespecial #15                 // Method java/lang/UnsupportedOperationException."<init>":()V
      14: athrow
      15: return
}
