Compiled from "CopyNonNullProperties.java"
class net.serenitybdd.screenplay.CopyNonNullProperties {
  private java.lang.Object source;

  public net.serenitybdd.screenplay.CopyNonNullProperties(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Ljava/lang/Object;
       9: return

  public static net.serenitybdd.screenplay.CopyNonNullProperties from(java.lang.Object);
    Code:
       0: new           #3                  // class net/serenitybdd/screenplay/CopyNonNullProperties
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/Object;)V
       8: areturn

  public void to(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Ljava/lang/Object;
       4: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokestatic  #6                  // Method getFields:(Ljava/lang/Class;)Ljava/util/List;
      10: invokeinterface #7,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      15: invokedynamic #8,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      20: invokeinterface #9,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      25: invokedynamic #10,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      30: invokeinterface #9,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      35: aload_0
      36: aload_1
      37: invokedynamic #11,  0             // InvokeDynamic #2:accept:(Lnet/serenitybdd/screenplay/CopyNonNullProperties;Ljava/lang/Object;)Ljava/util/function/Consumer;
      42: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      47: return

  public static java.util.List<java.lang.reflect.Field> getFields(java.lang.Class<?>);
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: ifnull        36
      14: aload_1
      15: aload_2
      16: invokevirtual #15                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      19: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: aload_2
      29: invokevirtual #18                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      32: astore_2
      33: goto          10
      36: aload_1
      37: areturn

  private void copyFieldValue(java.lang.reflect.Field, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #19                 // Method java/lang/reflect/Field.setAccessible:(Z)V
       5: aload_1
       6: aload_2
       7: invokevirtual #20                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore        4
      12: aload         4
      14: ifnull        24
      17: aload_1
      18: aload_3
      19: aload         4
      21: invokevirtual #21                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      24: goto          39
      27: astore        4
      29: new           #23                 // class java/lang/IllegalArgumentException
      32: dup
      33: aload         4
      35: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
      39: return
    Exception table:
       from    to  target type
           0    24    27   Class java/lang/IllegalAccessException

  private void lambda$to$2(java.lang.Object, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: getfield      #2                  // Field source:Ljava/lang/Object;
       6: aload_1
       7: invokespecial #25                 // Method copyFieldValue:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
      10: return

  private static boolean lambda$to$1(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/reflect/Field.getModifiers:()I
       4: invokestatic  #27                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static boolean lambda$to$0(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/lang/reflect/Field.isSynthetic:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
