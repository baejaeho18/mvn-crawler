Compiled from "EventualConsequence.java"
public class net.serenitybdd.screenplay.EventualConsequence<T> implements net.serenitybdd.screenplay.Consequence<T>, net.serenitybdd.markers.CanBeSilent {
  public static final int A_SHORT_PERIOD_BETWEEN_TRIES;

  private final net.serenitybdd.screenplay.Consequence<T> consequenceThatMightTakeSomeTime;

  private final long timeoutInMilliseconds;

  private final boolean isSilent;

  private java.lang.Class<? extends java.lang.Error> complaintType;

  private java.lang.String complaintDetails;

  private java.lang.AssertionError caughtAssertionError;

  private java.lang.RuntimeException caughtRuntimeException;

  private java.util.List<java.lang.Class<? extends java.lang.Throwable>> exceptionsToIgnore;

  private java.util.List<net.serenitybdd.screenplay.Performable> setupActions;

  public net.serenitybdd.screenplay.EventualConsequence(net.serenitybdd.screenplay.Consequence<T>, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_0
       4: invokespecial #1                  // Method "<init>":(Lnet/serenitybdd/screenplay/Consequence;JZ)V
       7: return

  public net.serenitybdd.screenplay.EventualConsequence(net.serenitybdd.screenplay.Consequence<T>, long, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field caughtAssertionError:Ljava/lang/AssertionError;
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field caughtRuntimeException:Ljava/lang/RuntimeException;
      14: aload_0
      15: new           #5                  // class java/util/ArrayList
      18: dup
      19: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #7                  // Field exceptionsToIgnore:Ljava/util/List;
      25: aload_0
      26: new           #5                  // class java/util/ArrayList
      29: dup
      30: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #8                  // Field setupActions:Ljava/util/List;
      36: aload_0
      37: aload_1
      38: putfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
      41: aload_0
      42: lload_2
      43: putfield      #10                 // Field timeoutInMilliseconds:J
      46: aload_0
      47: iload         4
      49: putfield      #11                 // Field isSilent:Z
      52: return

  public net.serenitybdd.screenplay.EventualConsequence(net.serenitybdd.screenplay.Consequence<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method net/serenitybdd/core/environment/ConfiguredEnvironment.getConfiguration:()Lnet/thucydides/core/webdriver/Configuration;
       5: invokeinterface #13,  1           // InterfaceMethod net/thucydides/core/webdriver/Configuration.getElementTimeoutInSeconds:()I
      10: sipush        1000
      13: imul
      14: i2l
      15: invokespecial #14                 // Method "<init>":(Lnet/serenitybdd/screenplay/Consequence;J)V
      18: return

  public static <T> net.serenitybdd.screenplay.EventualConsequence<T> eventually(net.serenitybdd.screenplay.Consequence<T>);
    Code:
       0: new           #15                 // class net/serenitybdd/screenplay/EventualConsequence
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method "<init>":(Lnet/serenitybdd/screenplay/Consequence;)V
       8: areturn

  public net.serenitybdd.screenplay.EventualConsequenceBuilder<T> waitingForNoLongerThan(long);
    Code:
       0: new           #17                 // class net/serenitybdd/screenplay/EventualConsequenceBuilder
       3: dup
       4: aload_0
       5: getfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
       8: lload_1
       9: invokespecial #18                 // Method net/serenitybdd/screenplay/EventualConsequenceBuilder."<init>":(Lnet/serenitybdd/screenplay/Consequence;J)V
      12: areturn

  public void evaluateFor(net.serenitybdd.screenplay.Actor);
    Code:
       0: new           #19                 // class net/serenitybdd/core/time/Stopwatch
       3: dup
       4: invokespecial #20                 // Method net/serenitybdd/core/time/Stopwatch."<init>":()V
       7: astore_2
       8: aload_2
       9: invokevirtual #21                 // Method net/serenitybdd/core/time/Stopwatch.start:()V
      12: aload_0
      13: aload_1
      14: invokevirtual #22                 // Method performSetupActionsAs:(Lnet/serenitybdd/screenplay/Actor;)V
      17: aload_0
      18: getfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
      21: aload_1
      22: invokeinterface #23,  2           // InterfaceMethod net/serenitybdd/screenplay/Consequence.evaluateFor:(Lnet/serenitybdd/screenplay/Actor;)V
      27: return
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokespecial #25                 // Method shouldIgnoreException:(Ljava/lang/Throwable;)Z
      34: ifne          42
      37: aload_0
      38: aload_3
      39: putfield      #3                  // Field caughtAssertionError:Ljava/lang/AssertionError;
      42: goto          73
      45: astore_3
      46: aload_0
      47: aload_3
      48: invokespecial #25                 // Method shouldIgnoreException:(Ljava/lang/Throwable;)Z
      51: ifne          59
      54: aload_0
      55: aload_3
      56: putfield      #4                  // Field caughtRuntimeException:Ljava/lang/RuntimeException;
      59: goto          73
      62: astore_3
      63: aload_0
      64: aload_3
      65: invokespecial #25                 // Method shouldIgnoreException:(Ljava/lang/Throwable;)Z
      68: ifne          73
      71: aload_3
      72: athrow
      73: aload_0
      74: invokespecial #28                 // Method pauseBeforeNextAttempt:()V
      77: aload_2
      78: invokevirtual #29                 // Method net/serenitybdd/core/time/Stopwatch.lapTime:()J
      81: aload_0
      82: getfield      #10                 // Field timeoutInMilliseconds:J
      85: lcmp
      86: iflt          12
      89: aload_0
      90: invokespecial #30                 // Method throwAnyCaughtErrors:()V
      93: return
    Exception table:
       from    to  target type
          12    27    28   Class java/lang/AssertionError
          12    27    45   Class java/lang/RuntimeException
          12    27    62   Class java/lang/Throwable

  private boolean shouldIgnoreException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exceptionsToIgnore:Ljava/util/List;
       4: aload_1
       5: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokeinterface #32,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ireturn

  private void pauseBeforeNextAttempt();
    Code:
       0: ldc2_w        #33                 // long 100l
       3: invokestatic  #35                 // Method java/lang/Thread.sleep:(J)V
       6: goto          14
       9: astore_1
      10: aload_1
      11: invokevirtual #37                 // Method java/lang/InterruptedException.printStackTrace:()V
      14: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/InterruptedException

  private void throwAnyCaughtErrors();
    Code:
       0: aload_0
       1: getfield      #3                  // Field caughtAssertionError:Ljava/lang/AssertionError;
       4: ifnull        20
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field caughtAssertionError:Ljava/lang/AssertionError;
      12: invokespecial #38                 // Method throwComplaintTypeErrorIfSpecified:(Ljava/lang/Throwable;)V
      15: aload_0
      16: getfield      #3                  // Field caughtAssertionError:Ljava/lang/AssertionError;
      19: athrow
      20: aload_0
      21: getfield      #4                  // Field caughtRuntimeException:Ljava/lang/RuntimeException;
      24: ifnull        40
      27: aload_0
      28: aload_0
      29: getfield      #4                  // Field caughtRuntimeException:Ljava/lang/RuntimeException;
      32: invokespecial #38                 // Method throwComplaintTypeErrorIfSpecified:(Ljava/lang/Throwable;)V
      35: aload_0
      36: getfield      #4                  // Field caughtRuntimeException:Ljava/lang/RuntimeException;
      39: athrow
      40: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
       4: invokevirtual #39                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public net.serenitybdd.screenplay.Consequence<T> orComplainWith(java.lang.Class<? extends java.lang.Error>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field complaintType:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public net.serenitybdd.screenplay.Consequence<T> ignoringExceptions(java.lang.Class<? extends java.lang.Throwable>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #41                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: putfield      #7                  // Field exceptionsToIgnore:Ljava/util/List;
       8: aload_0
       9: areturn

  public net.serenitybdd.screenplay.Consequence<T> orComplainWith(java.lang.Class<? extends java.lang.Error>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field complaintType:Ljava/lang/Class;
       5: aload_0
       6: aload_2
       7: putfield      #42                 // Field complaintDetails:Ljava/lang/String;
      10: aload_0
      11: areturn

  public net.serenitybdd.screenplay.Consequence<T> whenAttemptingTo(net.serenitybdd.screenplay.Performable);
    Code:
       0: new           #15                 // class net/serenitybdd/screenplay/EventualConsequence
       3: dup
       4: aload_0
       5: getfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
       8: aload_1
       9: invokeinterface #43,  2           // InterfaceMethod net/serenitybdd/screenplay/Consequence.whenAttemptingTo:(Lnet/serenitybdd/screenplay/Performable;)Lnet/serenitybdd/screenplay/Consequence;
      14: aload_0
      15: getfield      #10                 // Field timeoutInMilliseconds:J
      18: aload_0
      19: getfield      #11                 // Field isSilent:Z
      22: invokespecial #1                  // Method "<init>":(Lnet/serenitybdd/screenplay/Consequence;JZ)V
      25: areturn

  public net.serenitybdd.screenplay.Consequence<T> because(java.lang.String);
    Code:
       0: new           #15                 // class net/serenitybdd/screenplay/EventualConsequence
       3: dup
       4: aload_0
       5: getfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod net/serenitybdd/screenplay/Consequence.because:(Ljava/lang/String;)Lnet/serenitybdd/screenplay/Consequence;
      14: aload_0
      15: getfield      #10                 // Field timeoutInMilliseconds:J
      18: aload_0
      19: getfield      #11                 // Field isSilent:Z
      22: invokespecial #1                  // Method "<init>":(Lnet/serenitybdd/screenplay/Consequence;JZ)V
      25: areturn

  public boolean isSilent();
    Code:
       0: aload_0
       1: getfield      #11                 // Field isSilent:Z
       4: ireturn

  public net.serenitybdd.screenplay.EventualConsequence<T> withNoReporting();
    Code:
       0: new           #15                 // class net/serenitybdd/screenplay/EventualConsequence
       3: dup
       4: aload_0
       5: getfield      #9                  // Field consequenceThatMightTakeSomeTime:Lnet/serenitybdd/screenplay/Consequence;
       8: aload_0
       9: getfield      #10                 // Field timeoutInMilliseconds:J
      12: iconst_1
      13: invokespecial #1                  // Method "<init>":(Lnet/serenitybdd/screenplay/Consequence;JZ)V
      16: areturn

  private void throwComplaintTypeErrorIfSpecified(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #40                 // Field complaintType:Ljava/lang/Class;
       4: ifnull        20
       7: aload_0
       8: getfield      #40                 // Field complaintType:Ljava/lang/Class;
      11: aload_0
      12: getfield      #42                 // Field complaintDetails:Ljava/lang/String;
      15: aload_1
      16: invokestatic  #45                 // Method net/serenitybdd/screenplay/Complaint.from:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/Error;
      19: athrow
      20: return

  public net.serenitybdd.screenplay.Consequence<T> after(net.serenitybdd.screenplay.Performable...);
    Code:
       0: aload_0
       1: getfield      #8                  // Field setupActions:Ljava/util/List;
       4: aload_1
       5: invokestatic  #41                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokeinterface #46,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: areturn

  protected void performSetupActionsAs(net.serenitybdd.screenplay.Actor);
    Code:
       0: aload_1
       1: getstatic     #47                 // Field net/serenitybdd/screenplay/Actor$ErrorHandlingMode.IGNORE_EXCEPTIONS:Lnet/serenitybdd/screenplay/Actor$ErrorHandlingMode;
       4: aload_0
       5: getfield      #8                  // Field setupActions:Ljava/util/List;
       8: iconst_0
       9: anewarray     #48                 // class net/serenitybdd/screenplay/Performable
      12: invokeinterface #49,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: checkcast     #50                 // class "[Lnet/serenitybdd/screenplay/Performable;"
      20: invokevirtual #51                 // Method net/serenitybdd/screenplay/Actor.attemptsTo:(Lnet/serenitybdd/screenplay/Actor$ErrorHandlingMode;[Lnet/serenitybdd/screenplay/Performable;)V
      23: return
}
