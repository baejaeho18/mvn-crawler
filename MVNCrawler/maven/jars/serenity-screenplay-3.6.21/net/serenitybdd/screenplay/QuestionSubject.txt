Compiled from "QuestionSubject.java"
public class net.serenitybdd.screenplay.QuestionSubject<T> {
  private final java.lang.Class<? extends net.serenitybdd.screenplay.Question> questionClass;

  private net.serenitybdd.screenplay.Question<T> question;

  public static <T> net.serenitybdd.screenplay.QuestionSubject<T> fromClass(java.lang.Class<?>);
    Code:
       0: new           #1                  // class net/serenitybdd/screenplay/QuestionSubject
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/Class;)V
       8: areturn

  public net.serenitybdd.screenplay.QuestionSubject(java.lang.Class<? extends net.serenitybdd.screenplay.Question>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method net/serenitybdd/screenplay/Uninstrumented.versionOf:(Ljava/lang/Class;)Ljava/lang/Class;
       9: putfield      #5                  // Field questionClass:Ljava/lang/Class;
      12: return

  public net.serenitybdd.screenplay.QuestionSubject andQuestion(net.serenitybdd.screenplay.Question);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field question:Lnet/serenitybdd/screenplay/Question;
       5: aload_0
       6: areturn

  private java.util.Optional<java.lang.String> annotatedSubject();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field questionClass:Ljava/lang/Class;
       5: invokespecial #7                  // Method annotationOnMethodOf:(Ljava/lang/Class;)Ljava/util/Optional;
       8: invokevirtual #8                  // Method java/util/Optional.isPresent:()Z
      11: ifeq          32
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field questionClass:Ljava/lang/Class;
      19: invokespecial #7                  // Method annotationOnMethodOf:(Ljava/lang/Class;)Ljava/util/Optional;
      22: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      25: invokevirtual #10                 // Method java/util/Optional.get:()Ljava/lang/Object;
      28: checkcast     #11                 // class java/util/Optional
      31: areturn
      32: aload_0
      33: aload_0
      34: getfield      #5                  // Field questionClass:Ljava/lang/Class;
      37: invokespecial #12                 // Method annotatedSubjectFromClass:(Ljava/lang/Class;)Ljava/util/Optional;
      40: areturn

  private java.util.Optional<java.lang.String> annotatedSubjectFromClass(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #13                 // class net/serenitybdd/screenplay/annotations/Subject
       3: invokevirtual #14                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: ifnull        24
       9: aload_0
      10: aload_1
      11: invokespecial #15                 // Method annotationOnClass:(Ljava/lang/Class;)Ljava/util/Optional;
      14: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      17: invokevirtual #10                 // Method java/util/Optional.get:()Ljava/lang/Object;
      20: checkcast     #11                 // class java/util/Optional
      23: areturn
      24: aload_1
      25: invokevirtual #16                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      28: ifnull        40
      31: aload_0
      32: aload_1
      33: invokevirtual #16                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      36: invokespecial #12                 // Method annotatedSubjectFromClass:(Ljava/lang/Class;)Ljava/util/Optional;
      39: areturn
      40: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      43: areturn

  private java.util.Optional<java.lang.String> annotationOnMethodOf(java.lang.Class<? extends net.serenitybdd.screenplay.Question>);
    Code:
       0: aload_1
       1: ldc           #18                 // String answeredBy
       3: iconst_1
       4: anewarray     #19                 // class java/lang/Class
       7: dup
       8: iconst_0
       9: ldc           #20                 // class net/serenitybdd/screenplay/Actor
      11: aastore
      12: invokevirtual #21                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      15: astore_2
      16: aload_2
      17: ldc           #13                 // class net/serenitybdd/screenplay/annotations/Subject
      19: invokevirtual #22                 // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      22: ifnull        57
      25: aload_2
      26: ldc           #13                 // class net/serenitybdd/screenplay/annotations/Subject
      28: invokevirtual #22                 // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      31: checkcast     #13                 // class net/serenitybdd/screenplay/annotations/Subject
      34: invokeinterface #23,  1           // InterfaceMethod net/serenitybdd/screenplay/annotations/Subject.value:()Ljava/lang/String;
      39: astore_3
      40: aload_3
      41: invokestatic  #24                 // Method net/serenitybdd/screenplay/annotations/AnnotatedTitle.injectFieldsInto:(Ljava/lang/String;)Lnet/serenitybdd/screenplay/annotations/AnnotatedTitle;
      44: aload_0
      45: getfield      #6                  // Field question:Lnet/serenitybdd/screenplay/Question;
      48: invokevirtual #25                 // Method net/serenitybdd/screenplay/annotations/AnnotatedTitle.using:(Ljava/lang/Object;)Ljava/lang/String;
      51: astore_3
      52: aload_3
      53: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      56: areturn
      57: goto          65
      60: astore_2
      61: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      64: areturn
      65: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      68: areturn
    Exception table:
       from    to  target type
           0    56    60   Class java/lang/NoSuchMethodException

  private java.util.Optional<java.lang.String> annotationOnClass(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #13                 // class net/serenitybdd/screenplay/annotations/Subject
       3: invokevirtual #14                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: ifnull        41
       9: aload_1
      10: ldc           #13                 // class net/serenitybdd/screenplay/annotations/Subject
      12: invokevirtual #14                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: checkcast     #13                 // class net/serenitybdd/screenplay/annotations/Subject
      18: invokeinterface #23,  1           // InterfaceMethod net/serenitybdd/screenplay/annotations/Subject.value:()Ljava/lang/String;
      23: astore_2
      24: aload_2
      25: invokestatic  #24                 // Method net/serenitybdd/screenplay/annotations/AnnotatedTitle.injectFieldsInto:(Ljava/lang/String;)Lnet/serenitybdd/screenplay/annotations/AnnotatedTitle;
      28: aload_0
      29: getfield      #6                  // Field question:Lnet/serenitybdd/screenplay/Question;
      32: invokevirtual #25                 // Method net/serenitybdd/screenplay/annotations/AnnotatedTitle.using:(Ljava/lang/Object;)Ljava/lang/String;
      35: astore_2
      36: aload_2
      37: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      40: areturn
      41: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      44: areturn

  private java.util.Optional<java.lang.String> subjectFromQuestionInterface();
    Code:
       0: aload_0
       1: getfield      #6                  // Field question:Lnet/serenitybdd/screenplay/Question;
       4: invokeinterface #27,  1           // InterfaceMethod net/serenitybdd/screenplay/Question.getSubject:()Ljava/lang/String;
       9: ifnull        27
      12: aload_0
      13: getfield      #6                  // Field question:Lnet/serenitybdd/screenplay/Question;
      16: invokeinterface #27,  1           // InterfaceMethod net/serenitybdd/screenplay/Question.getSubject:()Ljava/lang/String;
      21: invokevirtual #28                 // Method java/lang/String.isEmpty:()Z
      24: ifeq          31
      27: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      30: areturn
      31: aload_0
      32: getfield      #6                  // Field question:Lnet/serenitybdd/screenplay/Question;
      35: invokeinterface #27,  1           // InterfaceMethod net/serenitybdd/screenplay/Question.getSubject:()Ljava/lang/String;
      40: invokestatic  #9                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      43: areturn

  public java.lang.String subject();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method subjectFromQuestionInterface:()Ljava/util/Optional;
       4: aload_0
       5: invokespecial #30                 // Method annotatedSubject:()Ljava/util/Optional;
       8: aload_0
       9: getfield      #5                  // Field questionClass:Ljava/lang/Class;
      12: invokevirtual #31                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      15: invokestatic  #32                 // Method net/thucydides/core/util/NameConverter.humanize:(Ljava/lang/String;)Ljava/lang/String;
      18: invokestatic  #33                 // Method org/apache/commons/lang3/StringUtils.lowerCase:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #34                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokevirtual #34                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #35                 // class java/lang/String
      30: areturn
}
