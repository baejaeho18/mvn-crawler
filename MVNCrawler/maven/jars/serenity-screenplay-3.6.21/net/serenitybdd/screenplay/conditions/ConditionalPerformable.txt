Compiled from "ConditionalPerformable.java"
public abstract class net.serenitybdd.screenplay.conditions.ConditionalPerformable implements net.serenitybdd.screenplay.Performable,net.serenitybdd.markers.IsHidden {
  protected final java.util.Map<java.lang.Boolean, net.serenitybdd.screenplay.Performable[]> outcomeToPerform;

  public net.serenitybdd.screenplay.conditions.ConditionalPerformable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field outcomeToPerform:Ljava/util/Map;
      15: aload_0
      16: getfield      #4                  // Field outcomeToPerform:Ljava/util/Map;
      19: iconst_1
      20: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: iconst_1
      24: anewarray     #6                  // class net/serenitybdd/screenplay/Performable
      27: dup
      28: iconst_0
      29: new           #7                  // class net/serenitybdd/screenplay/conditions/SilentPerformable
      32: dup
      33: invokespecial #8                  // Method net/serenitybdd/screenplay/conditions/SilentPerformable."<init>":()V
      36: aastore
      37: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: getfield      #4                  // Field outcomeToPerform:Ljava/util/Map;
      47: iconst_0
      48: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: iconst_1
      52: anewarray     #6                  // class net/serenitybdd/screenplay/Performable
      55: dup
      56: iconst_0
      57: new           #7                  // class net/serenitybdd/screenplay/conditions/SilentPerformable
      60: dup
      61: invokespecial #8                  // Method net/serenitybdd/screenplay/conditions/SilentPerformable."<init>":()V
      64: aastore
      65: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: return

  public net.serenitybdd.screenplay.conditions.ConditionalPerformable andIfSo(net.serenitybdd.screenplay.Performable...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field outcomeToPerform:Ljava/util/Map;
       4: iconst_1
       5: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: aload_1
       9: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn

  public net.serenitybdd.screenplay.conditions.ConditionalPerformable otherwise(net.serenitybdd.screenplay.Performable...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field outcomeToPerform:Ljava/util/Map;
       4: iconst_0
       5: invokestatic  #5                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: aload_1
       9: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn

  public <T extends net.serenitybdd.screenplay.Actor> void performAs(T);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field outcomeToPerform:Ljava/util/Map;
       5: aload_0
       6: aload_1
       7: invokevirtual #10                 // Method evaluatedConditionFor:(Lnet/serenitybdd/screenplay/Actor;)Ljava/lang/Boolean;
      10: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #12                 // class "[Lnet/serenitybdd/screenplay/Performable;"
      18: invokevirtual #13                 // Method net/serenitybdd/screenplay/Actor.attemptsTo:([Lnet/serenitybdd/screenplay/Performable;)V
      21: return

  protected abstract java.lang.Boolean evaluatedConditionFor(net.serenitybdd.screenplay.Actor);
}
