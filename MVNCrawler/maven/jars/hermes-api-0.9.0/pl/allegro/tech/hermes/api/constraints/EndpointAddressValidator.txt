Compiled from "EndpointAddressValidator.java"
public class pl.allegro.tech.hermes.api.constraints.EndpointAddressValidator implements javax.validation.ConstraintValidator<pl.allegro.tech.hermes.api.constraints.ValidAddress, java.lang.String> {
  private static final java.lang.String PROTOCOL_ADDRESS_FORMAT_INVALID;

  private static final java.util.Set<java.lang.String> AVAILABLE_PROTOCOLS;

  public pl.allegro.tech.hermes.api.constraints.EndpointAddressValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void addProtocol(java.lang.String);
    Code:
       0: getstatic     #2                  // Field AVAILABLE_PROTOCOLS:Ljava/util/Set;
       3: aload_0
       4: invokeinterface #3,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  public void initialize(pl.allegro.tech.hermes.api.constraints.ValidAddress);
    Code:
       0: return

  public boolean isValid(java.lang.String, javax.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method isValidProtocol:(Ljava/lang/String;Ljavax/validation/ConstraintValidatorContext;)Z
       6: ifeq          22
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokespecial #5                  // Method isValidUriTemplate:(Ljava/lang/String;Ljavax/validation/ConstraintValidatorContext;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean isValidProtocol(java.lang.String, javax.validation.ConstraintValidatorContext);
    Code:
       0: getstatic     #2                  // Field AVAILABLE_PROTOCOLS:Ljava/util/Set;
       3: aload_1
       4: invokestatic  #6                  // Method pl/allegro/tech/hermes/api/EndpointAddress.extractProtocolFromAddress:(Ljava/lang/String;)Ljava/lang/String;
       7: invokeinterface #7,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      12: ireturn
      13: astore_3
      14: aload_0
      15: aload_2
      16: ldc           #10                 // String Endpoint address has invalid format: %s
      18: iconst_1
      19: anewarray     #11                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_3
      25: invokevirtual #12                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      28: aastore
      29: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #14                 // Method createConstraintMessage:(Ljavax/validation/ConstraintValidatorContext;Ljava/lang/String;)V
      35: iconst_0
      36: ireturn
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/IllegalArgumentException

  private boolean isValidUriTemplate(java.lang.String, javax.validation.ConstraintValidatorContext);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method com/damnhandy/uri/template/UriTemplate.fromTemplate:(Ljava/lang/String;)Lcom/damnhandy/uri/template/UriTemplate;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokespecial #16                 // Method isInvalidHost:(Lcom/damnhandy/uri/template/UriTemplate;)Z
      10: ifeq          22
      13: aload_0
      14: aload_2
      15: ldc           #17                 // String Endpoint contains invalid chars in host name. Underscore is one of them.
      17: invokespecial #14                 // Method createConstraintMessage:(Ljavax/validation/ConstraintValidatorContext;Ljava/lang/String;)V
      20: iconst_0
      21: ireturn
      22: goto          49
      25: astore_3
      26: aload_0
      27: aload_2
      28: ldc           #10                 // String Endpoint address has invalid format: %s
      30: iconst_1
      31: anewarray     #11                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_3
      37: invokevirtual #19                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      40: aastore
      41: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #14                 // Method createConstraintMessage:(Ljavax/validation/ConstraintValidatorContext;Ljava/lang/String;)V
      47: iconst_0
      48: ireturn
      49: iconst_1
      50: ireturn
    Exception table:
       from    to  target type
           0    21    25   Class java/lang/Exception

  private void createConstraintMessage(javax.validation.ConstraintValidatorContext, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #20,  2           // InterfaceMethod javax/validation/ConstraintValidatorContext.buildConstraintViolationWithTemplate:(Ljava/lang/String;)Ljavax/validation/ConstraintValidatorContext$ConstraintViolationBuilder;
       7: invokeinterface #21,  1           // InterfaceMethod javax/validation/ConstraintValidatorContext$ConstraintViolationBuilder.addConstraintViolation:()Ljavax/validation/ConstraintValidatorContext;
      12: invokeinterface #22,  1           // InterfaceMethod javax/validation/ConstraintValidatorContext.disableDefaultConstraintViolation:()V
      17: return

  private boolean isInvalidHost(com.damnhandy.uri.template.UriTemplate);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method com/damnhandy/uri/template/UriTemplate.getVariables:()[Ljava/lang/String;
       4: invokestatic  #24                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: invokeinterface #25,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      12: invokestatic  #26                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      15: invokedynamic #27,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      20: invokestatic  #28                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      23: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #30                 // class java/util/Map
      31: astore_2
      32: aload_1
      33: aload_2
      34: invokevirtual #31                 // Method com/damnhandy/uri/template/UriTemplate.expand:(Ljava/util/Map;)Ljava/lang/String;
      37: invokestatic  #32                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      40: invokevirtual #33                 // Method java/net/URI.getHost:()Ljava/lang/String;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public boolean isValid(java.lang.Object, javax.validation.ConstraintValidatorContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class java/lang/String
       5: aload_2
       6: invokevirtual #35                 // Method isValid:(Ljava/lang/String;Ljavax/validation/ConstraintValidatorContext;)Z
       9: ireturn

  public void initialize(java.lang.annotation.Annotation);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #36                 // class pl/allegro/tech/hermes/api/constraints/ValidAddress
       5: invokevirtual #37                 // Method initialize:(Lpl/allegro/tech/hermes/api/constraints/ValidAddress;)V
       8: return

  private static java.lang.Object lambda$isInvalidHost$1(java.lang.String);
    Code:
       0: ldc           #38                 // String empty
       2: areturn

  static {};
    Code:
       0: new           #39                 // class java/util/HashSet
       3: dup
       4: invokespecial #40                 // Method java/util/HashSet."<init>":()V
       7: putstatic     #2                  // Field AVAILABLE_PROTOCOLS:Ljava/util/Set;
      10: getstatic     #2                  // Field AVAILABLE_PROTOCOLS:Ljava/util/Set;
      13: ldc           #41                 // String http
      15: invokeinterface #3,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: getstatic     #2                  // Field AVAILABLE_PROTOCOLS:Ljava/util/Set;
      24: ldc           #42                 // String https
      26: invokeinterface #3,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: getstatic     #2                  // Field AVAILABLE_PROTOCOLS:Ljava/util/Set;
      35: ldc           #43                 // String jms
      37: invokeinterface #3,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: pop
      43: return
}
