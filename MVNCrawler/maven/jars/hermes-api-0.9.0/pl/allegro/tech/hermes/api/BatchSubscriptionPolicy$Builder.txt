Compiled from "BatchSubscriptionPolicy.java"
public class pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder {
  private pl.allegro.tech.hermes.api.BatchSubscriptionPolicy subscriptionPolicy;

  public static pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder batchSubscriptionPolicy();
    Code:
       0: new           #1                  // class pl/allegro/tech/hermes/api/BatchSubscriptionPolicy$Builder
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class pl/allegro/tech/hermes/api/BatchSubscriptionPolicy
       8: dup
       9: aconst_null
      10: invokespecial #5                  // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy."<init>":(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy$1;)V
      13: putfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      16: return

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withMessageTtl(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #7                  // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$102:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;I)I
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withMessageBackoff(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #8                  // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$202:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;I)I
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withClientErrorRetry(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #9                  // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$302:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;Z)Z
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #10                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$402:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;I)I
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withBatchTime(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #11                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$502:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;I)I
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withBatchVolume(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #12                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$602:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;I)I
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder withRequestTimeout(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       4: iload_1
       5: invokestatic  #13                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$702:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;I)I
       8: pop
       9: aload_0
      10: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy build();
    Code:
       0: new           #4                  // class pl/allegro/tech/hermes/api/BatchSubscriptionPolicy
       3: dup
       4: aload_0
       5: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       8: invokestatic  #14                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$100:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)I
      11: aload_0
      12: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      15: invokestatic  #15                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$300:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)Z
      18: aload_0
      19: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      22: invokestatic  #16                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$200:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)I
      25: aload_0
      26: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      29: invokestatic  #17                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$700:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)I
      32: aload_0
      33: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      36: invokestatic  #18                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$400:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)I
      39: aload_0
      40: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      43: invokestatic  #19                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$500:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)I
      46: aload_0
      47: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      50: invokestatic  #20                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy.access$600:(Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;)I
      53: invokespecial #21                 // Method pl/allegro/tech/hermes/api/BatchSubscriptionPolicy."<init>":(IZIIIII)V
      56: areturn

  public pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder applyDefaults();
    Code:
       0: aload_0
       1: areturn

  public <T> pl.allegro.tech.hermes.api.BatchSubscriptionPolicy$Builder applyPatch(pl.allegro.tech.hermes.api.PatchData);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
       9: aload_1
      10: invokestatic  #22                 // Method pl/allegro/tech/hermes/api/helpers/Patch.apply:(Ljava/lang/Object;Lpl/allegro/tech/hermes/api/PatchData;)Ljava/lang/Object;
      13: checkcast     #4                  // class pl/allegro/tech/hermes/api/BatchSubscriptionPolicy
      16: putfield      #6                  // Field subscriptionPolicy:Lpl/allegro/tech/hermes/api/BatchSubscriptionPolicy;
      19: aload_0
      20: areturn
}
