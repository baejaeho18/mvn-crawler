Compiled from "AbstractProbSolverUtil.java"
public class org.overture.modelcheckers.probsolver.AbstractProbSolverUtil$VdmSlContext extends org.overture.modelcheckers.probsolver.AbstractProbSolverUtil$VdmContext {
  public org.overture.modelcheckers.probsolver.AbstractProbSolverUtil$VdmSlContext(de.prob.animator.domainobjects.AbstractEvalElement, org.overture.ast.intf.lex.ILexNameToken, org.overture.ast.types.ARecordInvariantType, java.util.List<java.lang.String>, java.util.Map<java.lang.String, org.overture.ast.types.PType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload         5
       4: iconst_1
       5: anewarray     #1                  // class org/overture/ast/intf/lex/ILexNameToken
       8: dup
       9: iconst_0
      10: aload_2
      11: aastore
      12: invokestatic  #2                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      15: aload         4
      17: invokespecial #3                  // Method org/overture/modelcheckers/probsolver/AbstractProbSolverUtil$VdmContext."<init>":(Lde/prob/animator/domainobjects/AbstractEvalElement;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V
      20: aload_0
      21: getfield      #4                  // Field types:Ljava/util/Map;
      24: aload_2
      25: invokeinterface #5,  1            // InterfaceMethod org/overture/ast/intf/lex/ILexNameToken.getName:()Ljava/lang/String;
      30: aload_3
      31: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: getfield      #4                  // Field types:Ljava/util/Map;
      41: aload         5
      43: invokeinterface #7,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      48: return

  public org.overture.ast.intf.lex.ILexNameToken getStateId();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stateIds:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      14: checkcast     #1                  // class org/overture/ast/intf/lex/ILexNameToken
      17: areturn

  public org.overture.ast.types.ARecordInvariantType getStateType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field types:Ljava/util/Map;
       4: aload_0
       5: invokevirtual #11                 // Method getStateId:()Lorg/overture/ast/intf/lex/ILexNameToken;
       8: invokeinterface #5,  1            // InterfaceMethod org/overture/ast/intf/lex/ILexNameToken.getName:()Ljava/lang/String;
      13: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #13                 // class org/overture/ast/types/ARecordInvariantType
      21: areturn
}
