Compiled from "AbstractProbSolverUtil.java"
public class org.overture.modelcheckers.probsolver.AbstractProbSolverUtil$VdmContext {
  public final java.util.List<java.lang.String> resultIds;

  public final de.prob.animator.domainobjects.AbstractEvalElement solverInput;

  public final java.util.List<org.overture.ast.intf.lex.ILexNameToken> stateIds;

  public final java.util.Map<java.lang.String, org.overture.ast.types.PType> types;

  public org.overture.modelcheckers.probsolver.AbstractProbSolverUtil$VdmContext(de.prob.animator.domainobjects.AbstractEvalElement, java.util.Map<java.lang.String, org.overture.ast.types.PType>, java.util.List<org.overture.ast.intf.lex.ILexNameToken>, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field solverInput:Lde/prob/animator/domainobjects/AbstractEvalElement;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field types:Ljava/util/Map;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field stateIds:Ljava/util/List;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field resultIds:Ljava/util/List;
      25: return

  public org.overture.ast.intf.lex.ILexNameToken getStateId(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stateIds:Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #9                  // class org/overture/ast/intf/lex/ILexNameToken
      28: astore_3
      29: aload_3
      30: invokeinterface #10,  1           // InterfaceMethod org/overture/ast/intf/lex/ILexNameToken.getName:()Ljava/lang/String;
      35: aload_1
      36: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          44
      42: aload_3
      43: areturn
      44: goto          10
      47: aconst_null
      48: areturn

  public boolean hasId(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resultIds:Ljava/util/List;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifne          21
      13: aload_0
      14: aload_1
      15: invokevirtual #13                 // Method isState:(Ljava/lang/String;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isResult(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resultIds:Ljava/util/List;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isState(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method getStateId:(Ljava/lang/String;)Lorg/overture/ast/intf/lex/ILexNameToken;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
}
