Compiled from "EnterpriseStoreUpgraderTest.java"
public class org.neo4j.upgrade.EnterpriseStoreUpgraderTest extends org.neo4j.kernel.impl.storemigration.StoreUpgraderTest {
  public org.neo4j.upgrade.EnterpriseStoreUpgraderTest(org.neo4j.kernel.impl.store.format.RecordFormats);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/neo4j/kernel/impl/storemigration/StoreUpgraderTest."<init>":(Lorg/neo4j/kernel/impl/store/format/RecordFormats;)V
       5: return

  public static java.util.Collection<org.neo4j.kernel.impl.store.format.RecordFormats> versions();
    Code:
       0: getstatic     #2                  // Field org/neo4j/kernel/impl/store/format/highlimit/v300/HighLimitV3_0_0.RECORD_FORMATS:Lorg/neo4j/kernel/impl/store/format/RecordFormats;
       3: invokestatic  #3                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: areturn

  protected org.neo4j.kernel.impl.store.format.RecordFormats getRecordFormats();
    Code:
       0: getstatic     #4                  // Field org/neo4j/kernel/impl/store/format/highlimit/HighLimit.RECORD_FORMATS:Lorg/neo4j/kernel/impl/store/format/RecordFormats;
       3: areturn

  protected java.lang.String getRecordFormatsName();
    Code:
       0: ldc           #6                  // String high_limit
       2: areturn

  protected void prepareSampleDatabase(java.lang.String, org.neo4j.io.fs.FileSystemAbstraction, org.neo4j.io.layout.DatabaseLayout, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload         4
       3: invokestatic  #7                  // Method findFormatStoreDirectoryForVersion:(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
       6: astore        5
       8: aload_3
       9: invokevirtual #8                  // Method org/neo4j/io/layout/DatabaseLayout.databaseDirectory:()Ljava/io/File;
      12: astore        6
      14: aload_2
      15: aload         6
      17: invokeinterface #9,  2            // InterfaceMethod org/neo4j/io/fs/FileSystemAbstraction.deleteRecursively:(Ljava/io/File;)V
      22: aload_2
      23: aload         6
      25: invokeinterface #10,  2           // InterfaceMethod org/neo4j/io/fs/FileSystemAbstraction.mkdirs:(Ljava/io/File;)V
      30: aload_2
      31: aload         5
      33: aload         6
      35: invokeinterface #11,  3           // InterfaceMethod org/neo4j/io/fs/FileSystemAbstraction.copyRecursively:(Ljava/io/File;Ljava/io/File;)V
      40: return

  private static java.io.File findFormatStoreDirectoryForVersion(java.lang.String, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/neo4j/kernel/impl/store/format/highlimit/v300/HighLimitV3_0_0.STORE_VERSION:Ljava/lang/String;
       4: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       7: ifeq          15
      10: aload_1
      11: invokestatic  #14                 // Method highLimit3_0Store:(Ljava/io/File;)Ljava/io/File;
      14: areturn
      15: new           #15                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #16                 // String Unknown enterprise store version.
      21: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow

  private static java.io.File highLimit3_0Store(java.io.File) throws java.io.IOException;
    Code:
       0: ldc           #18                 // class org/neo4j/upgrade/EnterpriseStoreUpgraderTest
       2: ldc           #19                 // String upgradeTest30HighLimitDb.zip
       4: aload_0
       5: invokestatic  #20                 // Method org/neo4j/test/Unzip.unzip:(Ljava/lang/Class;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
       8: areturn
}
