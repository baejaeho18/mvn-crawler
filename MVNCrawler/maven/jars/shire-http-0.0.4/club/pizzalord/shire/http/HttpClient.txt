Compiled from "HttpClient.java"
public class club.pizzalord.shire.http.HttpClient {
  private okhttp3.OkHttpClient okHttpClient;

  private club.pizzalord.shire.serializer.json.JSONSerializer jsonSerializer;

  public club.pizzalord.shire.http.HttpClient(okhttp3.OkHttpClient, club.pizzalord.shire.serializer.json.JSONSerializer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field okHttpClient:Lokhttp3/OkHttpClient;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field jsonSerializer:Lclub/pizzalord/shire/serializer/json/JSONSerializer;
      14: return

  public java.lang.String postByJsonReturnJson(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #4                  // class okhttp3/Request$Builder
       3: dup
       4: invokespecial #5                  // Method okhttp3/Request$Builder."<init>":()V
       7: aload_1
       8: invokevirtual #6                  // Method okhttp3/Request$Builder.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      11: astore        4
      13: aload_0
      14: aload_3
      15: aload         4
      17: invokespecial #7                  // Method appendHeaders:(Ljava/util/Map;Lokhttp3/Request$Builder;)V
      20: getstatic     #8                  // Field club/pizzalord/shire/http/HttpMediaType.JSON:Lclub/pizzalord/shire/http/HttpMediaType;
      23: invokevirtual #9                  // Method club/pizzalord/shire/http/HttpMediaType.getWellFormedMediaTypeString:()Ljava/lang/String;
      26: invokestatic  #10                 // Method okhttp3/MediaType.parse:(Ljava/lang/String;)Lokhttp3/MediaType;
      29: aload_2
      30: ifnonnull     39
      33: iconst_0
      34: newarray       byte
      36: goto          47
      39: aload_0
      40: getfield      #3                  // Field jsonSerializer:Lclub/pizzalord/shire/serializer/json/JSONSerializer;
      43: aload_2
      44: invokevirtual #11                 // Method club/pizzalord/shire/serializer/json/JSONSerializer.serialize:(Ljava/lang/Object;)[B
      47: invokestatic  #12                 // Method okhttp3/RequestBody.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;
      50: astore        5
      52: aload         4
      54: aload         5
      56: invokevirtual #13                 // Method okhttp3/Request$Builder.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
      59: pop
      60: aload_0
      61: getfield      #2                  // Field okHttpClient:Lokhttp3/OkHttpClient;
      64: aload         4
      66: invokevirtual #14                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      69: invokevirtual #15                 // Method okhttp3/OkHttpClient.newCall:(Lokhttp3/Request;)Lokhttp3/Call;
      72: invokeinterface #16,  1           // InterfaceMethod okhttp3/Call.execute:()Lokhttp3/Response;
      77: astore        6
      79: aload         6
      81: invokevirtual #17                 // Method okhttp3/Response.isSuccessful:()Z
      84: ldc           #18                 // String [HttpClient.sendPostByJson] Failure to send http request
      86: invokestatic  #19                 // Method club/pizzalord/shire/sdk/sugar/Assert$BooleanAssert.isTrue:(ZLjava/lang/String;)V
      89: new           #20                 // class java/lang/String
      92: dup
      93: aload         6
      95: invokevirtual #21                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
      98: invokevirtual #22                 // Method okhttp3/ResponseBody.bytes:()[B
     101: invokespecial #23                 // Method java/lang/String."<init>":([B)V
     104: areturn

  public java.lang.String getReturnJson(java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;
    Code:
       0: new           #4                  // class okhttp3/Request$Builder
       3: dup
       4: invokespecial #5                  // Method okhttp3/Request$Builder."<init>":()V
       7: aload_1
       8: invokevirtual #6                  // Method okhttp3/Request$Builder.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      11: astore        4
      13: aload_0
      14: aload_3
      15: aload         4
      17: invokespecial #7                  // Method appendHeaders:(Ljava/util/Map;Lokhttp3/Request$Builder;)V
      20: aload_2
      21: ifnull        87
      24: aload_2
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore        5
      37: aload         5
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          80
      47: aload         5
      49: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #20                 // class java/lang/String
      57: astore        6
      59: aload_2
      60: aload         6
      62: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: ifnonnull     77
      70: aload         5
      72: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.remove:()V
      77: goto          37
      80: aload_0
      81: aload_2
      82: aload_1
      83: invokespecial #30                 // Method encodeUrl:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;
      86: astore_1
      87: aload         4
      89: aload_1
      90: invokevirtual #6                  // Method okhttp3/Request$Builder.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      93: invokevirtual #31                 // Method okhttp3/Request$Builder.get:()Lokhttp3/Request$Builder;
      96: pop
      97: aload_0
      98: getfield      #2                  // Field okHttpClient:Lokhttp3/OkHttpClient;
     101: aload         4
     103: invokevirtual #14                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
     106: invokevirtual #15                 // Method okhttp3/OkHttpClient.newCall:(Lokhttp3/Request;)Lokhttp3/Call;
     109: invokeinterface #16,  1           // InterfaceMethod okhttp3/Call.execute:()Lokhttp3/Response;
     114: astore        5
     116: aload         5
     118: invokevirtual #17                 // Method okhttp3/Response.isSuccessful:()Z
     121: ldc           #32                 // String [HttpClient.sendGetByJson] Failure to send http request
     123: invokestatic  #19                 // Method club/pizzalord/shire/sdk/sugar/Assert$BooleanAssert.isTrue:(ZLjava/lang/String;)V
     126: new           #20                 // class java/lang/String
     129: dup
     130: aload         5
     132: invokevirtual #21                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     135: invokevirtual #22                 // Method okhttp3/ResponseBody.bytes:()[B
     138: invokespecial #23                 // Method java/lang/String."<init>":([B)V
     141: areturn

  private java.lang.String encodeUrl(java.util.Map<java.lang.String, java.lang.String>, java.lang.String);
    Code:
       0: new           #33                 // class java/lang/StringBuffer
       3: dup
       4: aload_2
       5: invokespecial #34                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_3
      10: ldc           #35                 // String ?
      12: invokevirtual #36                 // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I
      15: iconst_m1
      16: if_icmpne     29
      19: aload_3
      20: ldc           #35                 // String ?
      22: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      25: pop
      26: goto          36
      29: aload_3
      30: ldc           #38                 // String &
      32: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: pop
      36: aload_1
      37: invokeinterface #39,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      42: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      47: astore        4
      49: aload         4
      51: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          118
      59: aload         4
      61: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #40                 // class java/util/Map$Entry
      69: astore        5
      71: aload_3
      72: aload         5
      74: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: checkcast     #20                 // class java/lang/String
      82: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      85: pop
      86: aload_3
      87: ldc           #42                 // String =
      89: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      92: pop
      93: aload_3
      94: aload         5
      96: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     101: checkcast     #20                 // class java/lang/String
     104: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     107: pop
     108: aload_3
     109: ldc           #38                 // String &
     111: invokevirtual #37                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     114: pop
     115: goto          49
     118: aload_3
     119: aload_3
     120: invokevirtual #44                 // Method java/lang/StringBuffer.length:()I
     123: iconst_1
     124: isub
     125: invokevirtual #45                 // Method java/lang/StringBuffer.setLength:(I)V
     128: aload_3
     129: invokevirtual #46                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     132: areturn

  private void appendHeaders(java.util.Map<java.lang.String, java.lang.String>, okhttp3.Request$Builder);
    Code:
       0: aload_1
       1: ifnull        84
       4: aload_1
       5: invokeinterface #39,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          84
      25: aload_3
      26: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #40                 // class java/util/Map$Entry
      34: astore        4
      36: aload         4
      38: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      43: checkcast     #20                 // class java/lang/String
      46: astore        5
      48: aload         5
      50: ifnonnull     56
      53: goto          16
      56: aload_2
      57: aload         4
      59: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: checkcast     #20                 // class java/lang/String
      67: aload         4
      69: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #20                 // class java/lang/String
      77: invokevirtual #47                 // Method okhttp3/Request$Builder.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      80: pop
      81: goto          16
      84: return
}
