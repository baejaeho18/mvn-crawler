Compiled from "InMemorySignedPreKeyStore.java"
public class org.signal.libsignal.protocol.state.impl.InMemorySignedPreKeyStore implements org.signal.libsignal.protocol.state.SignedPreKeyStore {
  private final java.util.Map<java.lang.Integer, byte[]> store;

  public org.signal.libsignal.protocol.state.impl.InMemorySignedPreKeyStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field store:Ljava/util/Map;
      15: return

  public org.signal.libsignal.protocol.state.SignedPreKeyRecord loadSignedPreKey(int) throws org.signal.libsignal.protocol.InvalidKeyIdException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ifne          43
      16: new           #7                  // class org/signal/libsignal/protocol/InvalidKeyIdException
      19: dup
      20: new           #8                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #10                 // String No such signedprekeyrecord!
      29: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #14                 // Method org/signal/libsignal/protocol/InvalidKeyIdException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: new           #15                 // class org/signal/libsignal/protocol/state/SignedPreKeyRecord
      46: dup
      47: aload_0
      48: getfield      #4                  // Field store:Ljava/util/Map;
      51: iload_1
      52: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #17                 // class "[B"
      63: invokespecial #18                 // Method org/signal/libsignal/protocol/state/SignedPreKeyRecord."<init>":([B)V
      66: areturn
      67: astore_2
      68: new           #20                 // class java/lang/AssertionError
      71: dup
      72: aload_2
      73: invokespecial #21                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      76: athrow
    Exception table:
       from    to  target type
           0    66    67   Class org/signal/libsignal/protocol/InvalidMessageException

  public java.util.List<org.signal.libsignal.protocol.state.SignedPreKeyRecord> loadSignedPreKeys();
    Code:
       0: new           #22                 // class java/util/LinkedList
       3: dup
       4: invokespecial #23                 // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field store:Ljava/util/Map;
      12: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          60
      32: aload_2
      33: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #17                 // class "[B"
      41: astore_3
      42: aload_1
      43: new           #15                 // class org/signal/libsignal/protocol/state/SignedPreKeyRecord
      46: dup
      47: aload_3
      48: invokespecial #18                 // Method org/signal/libsignal/protocol/state/SignedPreKeyRecord."<init>":([B)V
      51: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          23
      60: aload_1
      61: areturn
      62: astore_1
      63: new           #20                 // class java/lang/AssertionError
      66: dup
      67: aload_1
      68: invokespecial #21                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      71: athrow
    Exception table:
       from    to  target type
           0    61    62   Class org/signal/libsignal/protocol/InvalidMessageException

  public void storeSignedPreKey(int, org.signal.libsignal.protocol.state.SignedPreKeyRecord);
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: aload_2
       9: invokevirtual #29                 // Method org/signal/libsignal/protocol/state/SignedPreKeyRecord.serialize:()[B
      12: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public boolean containsSignedPreKey(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #6,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ireturn

  public void removeSignedPreKey(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return
}
