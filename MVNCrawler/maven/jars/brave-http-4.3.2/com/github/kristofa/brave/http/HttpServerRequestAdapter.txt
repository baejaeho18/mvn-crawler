Compiled from "HttpServerRequestAdapter.java"
public class com.github.kristofa.brave.http.HttpServerRequestAdapter implements com.github.kristofa.brave.ServerRequestAdapter {
  private final com.github.kristofa.brave.http.HttpServerRequest request;

  private final com.github.kristofa.brave.http.SpanNameProvider spanNameProvider;

  public com.github.kristofa.brave.http.HttpServerRequestAdapter(com.github.kristofa.brave.http.HttpServerRequest, com.github.kristofa.brave.http.SpanNameProvider);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
       9: aload_0
      10: aload_2
      11: putfield      #26                 // Field spanNameProvider:Lcom/github/kristofa/brave/http/SpanNameProvider;
      14: return

  public com.github.kristofa.brave.TraceData getTraceData();
    Code:
       0: aload_0
       1: getfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
       4: getstatic     #36                 // Field com/github/kristofa/brave/http/BraveHttpHeaders.Sampled:Lcom/github/kristofa/brave/http/BraveHttpHeaders;
       7: invokevirtual #40                 // Method com/github/kristofa/brave/http/BraveHttpHeaders.getName:()Ljava/lang/String;
      10: invokeinterface #46,  2           // InterfaceMethod com/github/kristofa/brave/http/HttpServerRequest.getHttpHeaderValue:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: getfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
      20: getstatic     #49                 // Field com/github/kristofa/brave/http/BraveHttpHeaders.ParentSpanId:Lcom/github/kristofa/brave/http/BraveHttpHeaders;
      23: invokevirtual #40                 // Method com/github/kristofa/brave/http/BraveHttpHeaders.getName:()Ljava/lang/String;
      26: invokeinterface #46,  2           // InterfaceMethod com/github/kristofa/brave/http/HttpServerRequest.getHttpHeaderValue:(Ljava/lang/String;)Ljava/lang/String;
      31: astore_2
      32: aload_0
      33: getfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
      36: getstatic     #52                 // Field com/github/kristofa/brave/http/BraveHttpHeaders.TraceId:Lcom/github/kristofa/brave/http/BraveHttpHeaders;
      39: invokevirtual #40                 // Method com/github/kristofa/brave/http/BraveHttpHeaders.getName:()Ljava/lang/String;
      42: invokeinterface #46,  2           // InterfaceMethod com/github/kristofa/brave/http/HttpServerRequest.getHttpHeaderValue:(Ljava/lang/String;)Ljava/lang/String;
      47: astore_3
      48: aload_0
      49: getfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
      52: getstatic     #55                 // Field com/github/kristofa/brave/http/BraveHttpHeaders.SpanId:Lcom/github/kristofa/brave/http/BraveHttpHeaders;
      55: invokevirtual #40                 // Method com/github/kristofa/brave/http/BraveHttpHeaders.getName:()Ljava/lang/String;
      58: invokeinterface #46,  2           // InterfaceMethod com/github/kristofa/brave/http/HttpServerRequest.getHttpHeaderValue:(Ljava/lang/String;)Ljava/lang/String;
      63: astore        4
      65: aload_1
      66: ifnull        98
      69: aload_1
      70: ldc           #57                 // String 1
      72: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          87
      78: aload_1
      79: ldc           #65                 // String true
      81: invokevirtual #69                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      84: ifeq          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: invokestatic  #75                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      95: goto          99
      98: aconst_null
      99: astore        5
     101: aload_3
     102: ifnull        123
     105: aload         4
     107: ifnull        123
     110: aload_3
     111: aload         4
     113: aload_2
     114: aload         5
     116: invokestatic  #79                 // Method getSpanId:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;)Lcom/github/kristofa/brave/SpanId;
     119: invokestatic  #85                 // Method com/github/kristofa/brave/TraceData.create:(Lcom/github/kristofa/brave/SpanId;)Lcom/github/kristofa/brave/TraceData;
     122: areturn
     123: aload         5
     125: ifnonnull     132
     128: getstatic     #89                 // Field com/github/kristofa/brave/TraceData.EMPTY:Lcom/github/kristofa/brave/TraceData;
     131: areturn
     132: aload         5
     134: invokevirtual #93                 // Method java/lang/Boolean.booleanValue:()Z
     137: ifeq          144
     140: getstatic     #89                 // Field com/github/kristofa/brave/TraceData.EMPTY:Lcom/github/kristofa/brave/TraceData;
     143: areturn
     144: getstatic     #96                 // Field com/github/kristofa/brave/TraceData.NOT_SAMPLED:Lcom/github/kristofa/brave/TraceData;
     147: areturn

  public java.lang.String getSpanName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field spanNameProvider:Lcom/github/kristofa/brave/http/SpanNameProvider;
       4: aload_0
       5: getfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
       8: invokeinterface #110,  2          // InterfaceMethod com/github/kristofa/brave/http/SpanNameProvider.spanName:(Lcom/github/kristofa/brave/http/HttpRequest;)Ljava/lang/String;
      13: areturn

  public java.util.Collection<com.github.kristofa.brave.KeyValueAnnotation> requestAnnotations();
    Code:
       0: ldc           #114                // String http.url
       2: aload_0
       3: getfield      #24                 // Field request:Lcom/github/kristofa/brave/http/HttpServerRequest;
       6: invokeinterface #118,  1          // InterfaceMethod com/github/kristofa/brave/http/HttpServerRequest.getUri:()Ljava/net/URI;
      11: invokevirtual #123                // Method java/net/URI.toString:()Ljava/lang/String;
      14: invokestatic  #128                // Method com/github/kristofa/brave/KeyValueAnnotation.create:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/kristofa/brave/KeyValueAnnotation;
      17: astore_1
      18: aload_1
      19: invokestatic  #134                // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      22: areturn

  static com.github.kristofa.brave.SpanId getSpanId(java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean);
    Code:
       0: invokestatic  #140                // Method com/github/kristofa/brave/SpanId.builder:()Lcom/github/kristofa/brave/SpanId$Builder;
       3: aload_0
       4: invokevirtual #144                // Method java/lang/String.length:()I
       7: bipush        32
       9: if_icmpne     20
      12: aload_0
      13: iconst_0
      14: invokestatic  #150                // Method com/github/kristofa/brave/IdConversion.convertToLong:(Ljava/lang/String;I)J
      17: goto          21
      20: lconst_0
      21: invokevirtual #154                // Method com/github/kristofa/brave/SpanId$Builder.traceIdHigh:(J)Lcom/github/kristofa/brave/SpanId$Builder;
      24: aload_0
      25: invokestatic  #157                // Method com/github/kristofa/brave/IdConversion.convertToLong:(Ljava/lang/String;)J
      28: invokevirtual #159                // Method com/github/kristofa/brave/SpanId$Builder.traceId:(J)Lcom/github/kristofa/brave/SpanId$Builder;
      31: aload_1
      32: invokestatic  #157                // Method com/github/kristofa/brave/IdConversion.convertToLong:(Ljava/lang/String;)J
      35: invokevirtual #161                // Method com/github/kristofa/brave/SpanId$Builder.spanId:(J)Lcom/github/kristofa/brave/SpanId$Builder;
      38: aload_3
      39: invokevirtual #164                // Method com/github/kristofa/brave/SpanId$Builder.sampled:(Ljava/lang/Boolean;)Lcom/github/kristofa/brave/SpanId$Builder;
      42: aload_2
      43: ifnonnull     50
      46: aconst_null
      47: goto          57
      50: aload_2
      51: invokestatic  #157                // Method com/github/kristofa/brave/IdConversion.convertToLong:(Ljava/lang/String;)J
      54: invokestatic  #169                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      57: invokevirtual #173                // Method com/github/kristofa/brave/SpanId$Builder.parentId:(Ljava/lang/Long;)Lcom/github/kristofa/brave/SpanId$Builder;
      60: invokevirtual #177                // Method com/github/kristofa/brave/SpanId$Builder.build:()Lcom/github/kristofa/brave/SpanId;
      63: areturn
}
