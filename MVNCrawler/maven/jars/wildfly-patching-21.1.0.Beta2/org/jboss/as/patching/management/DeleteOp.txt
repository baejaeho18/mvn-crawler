Compiled from "DeleteOp.java"
class org.jboss.as.patching.management.DeleteOp {
  public static final java.lang.String BACKUP_FOLDER;

  private final java.io.File fileToDelete;

  private final java.io.FilenameFilter fileFilter;

  private final java.io.File backupRoot;

  org.jboss.as.patching.management.DeleteOp(java.io.File, java.io.FilenameFilter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field fileToDelete:Ljava/io/File;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field fileFilter:Ljava/io/FilenameFilter;
      14: aload_0
      15: new           #4                  // class java/io/File
      18: dup
      19: aload_1
      20: invokevirtual #5                  // Method java/io/File.getParentFile:()Ljava/io/File;
      23: ldc           #7                  // String .bkp
      25: invokespecial #8                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      28: putfield      #9                  // Field backupRoot:Ljava/io/File;
      31: return

  public void execute() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method prepare:()V
       4: aload_0
       5: invokevirtual #11                 // Method commit:()Z
       8: istore_1
       9: iload_1
      10: ifne          22
      13: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      16: invokeinterface #13,  1           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.failedToDeleteBackup:()Ljava/io/IOException;
      21: athrow
      22: goto          43
      25: astore_1
      26: aload_0
      27: invokevirtual #15                 // Method rollback:()V
      30: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      33: aload_1
      34: invokevirtual #16                 // Method org/jboss/as/patching/management/DeleteOp$PrepareException.getPath:()Ljava/lang/String;
      37: invokeinterface #17,  2           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.failedToDelete:(Ljava/lang/String;)Ljava/io/IOException;
      42: athrow
      43: return
    Exception table:
       from    to  target type
           0    22    25   Class org/jboss/as/patching/management/DeleteOp$PrepareException

  public static void execute(java.util.Collection<org.jboss.as.patching.management.DeleteOp>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          33
      16: aload_1
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #6                  // class org/jboss/as/patching/management/DeleteOp
      25: astore_2
      26: aload_2
      27: invokevirtual #10                 // Method prepare:()V
      30: goto          7
      33: iconst_1
      34: istore_1
      35: aload_0
      36: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      41: astore_2
      42: aload_2
      43: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          71
      51: aload_2
      52: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #6                  // class org/jboss/as/patching/management/DeleteOp
      60: astore_3
      61: iload_1
      62: aload_3
      63: invokevirtual #11                 // Method commit:()Z
      66: iand
      67: istore_1
      68: goto          42
      71: iload_1
      72: ifne          84
      75: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      78: invokeinterface #13,  1           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.failedToDeleteBackup:()Ljava/io/IOException;
      83: athrow
      84: goto          134
      87: astore_1
      88: aload_0
      89: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      94: astore_2
      95: aload_2
      96: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          121
     104: aload_2
     105: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #6                  // class org/jboss/as/patching/management/DeleteOp
     113: astore_3
     114: aload_3
     115: invokevirtual #15                 // Method rollback:()V
     118: goto          95
     121: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
     124: aload_1
     125: invokevirtual #16                 // Method org/jboss/as/patching/management/DeleteOp$PrepareException.getPath:()Ljava/lang/String;
     128: invokeinterface #17,  2           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.failedToDelete:(Ljava/lang/String;)Ljava/io/IOException;
     133: athrow
     134: return
    Exception table:
       from    to  target type
           0    84    87   Class org/jboss/as/patching/management/DeleteOp$PrepareException

  private void prepare() throws org.jboss.as.patching.management.DeleteOp$PrepareException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field backupRoot:Ljava/io/File;
       4: invokevirtual #21                 // Method java/io/File.mkdir:()Z
       7: pop
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field fileToDelete:Ljava/io/File;
      13: aload_0
      14: getfield      #9                  // Field backupRoot:Ljava/io/File;
      17: aload_0
      18: getfield      #3                  // Field fileFilter:Ljava/io/FilenameFilter;
      21: invokevirtual #22                 // Method moveToBackup:(Ljava/io/File;Ljava/io/File;Ljava/io/FilenameFilter;)V
      24: return

  private void moveToBackup(java.io.File, java.io.File, java.io.FilenameFilter) throws org.jboss.as.patching.management.DeleteOp$PrepareException;
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #5                  // Method java/io/File.getParentFile:()Ljava/io/File;
       5: aload_1
       6: invokevirtual #23                 // Method java/io/File.getName:()Ljava/lang/String;
       9: invokeinterface #24,  3           // InterfaceMethod java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
      14: ifne          18
      17: return
      18: aload_1
      19: invokevirtual #25                 // Method java/io/File.isDirectory:()Z
      22: ifeq          107
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokevirtual #26                 // Method createBackupFolder:(Ljava/io/File;Ljava/io/File;)Ljava/io/File;
      31: astore        4
      33: aload_1
      34: aload_3
      35: invokevirtual #27                 // Method java/io/File.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;
      38: astore        5
      40: aload         5
      42: arraylength
      43: istore        6
      45: iconst_0
      46: istore        7
      48: iload         7
      50: iload         6
      52: if_icmpge     77
      55: aload         5
      57: iload         7
      59: aaload
      60: astore        8
      62: aload_0
      63: aload         8
      65: aload         4
      67: aload_3
      68: invokevirtual #22                 // Method moveToBackup:(Ljava/io/File;Ljava/io/File;Ljava/io/FilenameFilter;)V
      71: iinc          7, 1
      74: goto          48
      77: aload_1
      78: invokestatic  #28                 // Method isEmptyFolder:(Ljava/io/File;)Z
      81: ifeq          104
      84: aload_1
      85: invokevirtual #29                 // Method java/io/File.delete:()Z
      88: istore        5
      90: iload         5
      92: ifne          104
      95: new           #14                 // class org/jboss/as/patching/management/DeleteOp$PrepareException
      98: dup
      99: aload_1
     100: invokespecial #30                 // Method org/jboss/as/patching/management/DeleteOp$PrepareException."<init>":(Ljava/io/File;)V
     103: athrow
     104: goto          143
     107: new           #4                  // class java/io/File
     110: dup
     111: aload_2
     112: aload_1
     113: invokevirtual #23                 // Method java/io/File.getName:()Ljava/lang/String;
     116: invokespecial #8                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     119: astore        4
     121: aload_1
     122: aload         4
     124: invokevirtual #31                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
     127: istore        5
     129: iload         5
     131: ifne          143
     134: new           #14                 // class org/jboss/as/patching/management/DeleteOp$PrepareException
     137: dup
     138: aload_1
     139: invokespecial #30                 // Method org/jboss/as/patching/management/DeleteOp$PrepareException."<init>":(Ljava/io/File;)V
     142: athrow
     143: return

  private java.io.File createBackupFolder(java.io.File, java.io.File) throws org.jboss.as.patching.management.DeleteOp$PrepareException;
    Code:
       0: new           #4                  // class java/io/File
       3: dup
       4: aload_2
       5: aload_1
       6: invokevirtual #23                 // Method java/io/File.getName:()Ljava/lang/String;
       9: invokespecial #8                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: astore_3
      13: aload_3
      14: invokevirtual #32                 // Method java/io/File.exists:()Z
      17: ifne          27
      20: aload_3
      21: invokevirtual #21                 // Method java/io/File.mkdir:()Z
      24: ifne          36
      27: new           #14                 // class org/jboss/as/patching/management/DeleteOp$PrepareException
      30: dup
      31: aload_1
      32: invokespecial #30                 // Method org/jboss/as/patching/management/DeleteOp$PrepareException."<init>":(Ljava/io/File;)V
      35: athrow
      36: aload_3
      37: areturn

  private static boolean isEmptyFolder(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method java/io/File.list:()[Ljava/lang/String;
       4: ifnull        19
       7: aload_0
       8: invokevirtual #33                 // Method java/io/File.list:()[Ljava/lang/String;
      11: arraylength
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private boolean commit();
    Code:
       0: new           #4                  // class java/io/File
       3: dup
       4: aload_0
       5: getfield      #9                  // Field backupRoot:Ljava/io/File;
       8: aload_0
       9: getfield      #2                  // Field fileToDelete:Ljava/io/File;
      12: invokevirtual #23                 // Method java/io/File.getName:()Ljava/lang/String;
      15: invokespecial #8                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      18: astore_1
      19: iconst_1
      20: istore_2
      21: aload_1
      22: invokevirtual #32                 // Method java/io/File.exists:()Z
      25: ifeq          34
      28: aload_0
      29: aload_1
      30: invokevirtual #34                 // Method doDelete:(Ljava/io/File;)Z
      33: istore_2
      34: aload_0
      35: getfield      #9                  // Field backupRoot:Ljava/io/File;
      38: invokestatic  #28                 // Method isEmptyFolder:(Ljava/io/File;)Z
      41: ifeq          54
      44: iload_2
      45: aload_0
      46: getfield      #9                  // Field backupRoot:Ljava/io/File;
      49: invokevirtual #29                 // Method java/io/File.delete:()Z
      52: iand
      53: istore_2
      54: iload_2
      55: ireturn

  private boolean doDelete(java.io.File);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: invokevirtual #25                 // Method java/io/File.isDirectory:()Z
       6: ifeq          49
       9: aload_1
      10: invokevirtual #35                 // Method java/io/File.listFiles:()[Ljava/io/File;
      13: astore_3
      14: aload_3
      15: arraylength
      16: istore        4
      18: iconst_0
      19: istore        5
      21: iload         5
      23: iload         4
      25: if_icmpge     49
      28: aload_3
      29: iload         5
      31: aaload
      32: astore        6
      34: iload_2
      35: aload_0
      36: aload         6
      38: invokevirtual #34                 // Method doDelete:(Ljava/io/File;)Z
      41: iand
      42: istore_2
      43: iinc          5, 1
      46: goto          21
      49: aload_1
      50: invokevirtual #29                 // Method java/io/File.delete:()Z
      53: ifne          70
      56: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      59: aload_1
      60: invokevirtual #36                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      63: invokeinterface #37,  2           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.cannotDeleteFile:(Ljava/lang/String;)V
      68: iconst_0
      69: istore_2
      70: iload_2
      71: ireturn

  private void rollback();
    Code:
       0: aload_0
       1: getfield      #9                  // Field backupRoot:Ljava/io/File;
       4: invokevirtual #32                 // Method java/io/File.exists:()Z
       7: ifne          11
      10: return
      11: new           #4                  // class java/io/File
      14: dup
      15: aload_0
      16: getfield      #9                  // Field backupRoot:Ljava/io/File;
      19: aload_0
      20: getfield      #2                  // Field fileToDelete:Ljava/io/File;
      23: invokevirtual #23                 // Method java/io/File.getName:()Ljava/lang/String;
      26: invokespecial #8                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      29: astore_1
      30: aload_1
      31: aload_0
      32: getfield      #2                  // Field fileToDelete:Ljava/io/File;
      35: invokestatic  #38                 // Method doRollback:(Ljava/io/File;Ljava/io/File;)V
      38: aload_0
      39: getfield      #9                  // Field backupRoot:Ljava/io/File;
      42: invokestatic  #28                 // Method isEmptyFolder:(Ljava/io/File;)Z
      45: ifeq          56
      48: aload_0
      49: getfield      #9                  // Field backupRoot:Ljava/io/File;
      52: invokevirtual #29                 // Method java/io/File.delete:()Z
      55: pop
      56: goto          76
      59: astore_1
      60: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      63: aload_1
      64: invokevirtual #40                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException.getPath:()Ljava/lang/String;
      67: aload_1
      68: invokevirtual #41                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException.getMessage:()Ljava/lang/String;
      71: invokeinterface #42,  3           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.deleteRollbackError:(Ljava/lang/String;Ljava/lang/String;)V
      76: return
    Exception table:
       from    to  target type
           0    10    59   Class org/jboss/as/patching/management/DeleteOp$RollbackException
          11    56    59   Class org/jboss/as/patching/management/DeleteOp$RollbackException

  private static void doRollback(java.io.File, java.io.File) throws org.jboss.as.patching.management.DeleteOp$RollbackException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method java/io/File.isDirectory:()Z
       4: ifeq          123
       7: aload_1
       8: invokevirtual #32                 // Method java/io/File.exists:()Z
      11: ifne          22
      14: aload_1
      15: invokevirtual #21                 // Method java/io/File.mkdir:()Z
      18: pop
      19: goto          40
      22: aload_1
      23: invokevirtual #25                 // Method java/io/File.isDirectory:()Z
      26: ifne          40
      29: new           #39                 // class org/jboss/as/patching/management/DeleteOp$RollbackException
      32: dup
      33: aload_0
      34: ldc           #43                 // String file with the same name exists
      36: invokespecial #44                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException."<init>":(Ljava/io/File;Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: invokevirtual #35                 // Method java/io/File.listFiles:()[Ljava/io/File;
      44: astore_2
      45: aload_2
      46: arraylength
      47: istore_3
      48: iconst_0
      49: istore        4
      51: iload         4
      53: iload_3
      54: if_icmpge     87
      57: aload_2
      58: iload         4
      60: aaload
      61: astore        5
      63: aload         5
      65: new           #4                  // class java/io/File
      68: dup
      69: aload_1
      70: aload         5
      72: invokevirtual #23                 // Method java/io/File.getName:()Ljava/lang/String;
      75: invokespecial #8                  // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      78: invokestatic  #38                 // Method doRollback:(Ljava/io/File;Ljava/io/File;)V
      81: iinc          4, 1
      84: goto          51
      87: aload_0
      88: invokestatic  #28                 // Method isEmptyFolder:(Ljava/io/File;)Z
      91: ifeq          112
      94: aload_0
      95: invokevirtual #29                 // Method java/io/File.delete:()Z
      98: ifne          160
     101: new           #39                 // class org/jboss/as/patching/management/DeleteOp$RollbackException
     104: dup
     105: aload_0
     106: ldc           #45                 // String unable to delete folder
     108: invokespecial #44                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException."<init>":(Ljava/io/File;Ljava/lang/String;)V
     111: athrow
     112: new           #39                 // class org/jboss/as/patching/management/DeleteOp$RollbackException
     115: dup
     116: aload_0
     117: ldc           #46                 // String directory has unexpected files
     119: invokespecial #44                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException."<init>":(Ljava/io/File;Ljava/lang/String;)V
     122: athrow
     123: aload_1
     124: invokevirtual #32                 // Method java/io/File.exists:()Z
     127: ifeq          141
     130: new           #39                 // class org/jboss/as/patching/management/DeleteOp$RollbackException
     133: dup
     134: aload_0
     135: ldc           #47                 // String file with the same name already exists
     137: invokespecial #44                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException."<init>":(Ljava/io/File;Ljava/lang/String;)V
     140: athrow
     141: aload_0
     142: aload_1
     143: invokevirtual #31                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
     146: ifne          160
     149: new           #39                 // class org/jboss/as/patching/management/DeleteOp$RollbackException
     152: dup
     153: aload_0
     154: ldc           #48                 // String unable to move file
     156: invokespecial #44                 // Method org/jboss/as/patching/management/DeleteOp$RollbackException."<init>":(Ljava/io/File;Ljava/lang/String;)V
     159: athrow
     160: return
}
