Compiled from "PatchHistoryValidations.java"
class org.jboss.as.patching.validation.PatchHistoryValidations$1 extends org.jboss.as.patching.validation.PatchHistoryValidations$HistoryProcessor {
  boolean includeCurrent;

  boolean proceed;

  boolean found;

  final java.util.Set val$validHistory;

  final java.lang.String val$patchID;

  org.jboss.as.patching.validation.PatchHistoryValidations$1(java.util.Set, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$validHistory:Ljava/util/Set;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$patchID:Ljava/lang/String;
      10: aload_0
      11: invokespecial #3                  // Method org/jboss/as/patching/validation/PatchHistoryValidations$HistoryProcessor."<init>":()V
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field includeCurrent:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field proceed:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field found:Z
      29: return

  protected boolean includeCurrent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field includeCurrent:Z
       4: ireturn

  protected boolean canProceed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field proceed:Z
       4: ireturn

  protected <P extends org.jboss.as.patching.validation.PatchingArtifact$ArtifactState, S extends org.jboss.as.patching.validation.PatchingArtifact$ArtifactState> boolean handleError(org.jboss.as.patching.validation.PatchingArtifact<P, S>, S);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field org/jboss/as/patching/validation/PatchingArtifacts.HISTORY_DIR:Lorg/jboss/as/patching/validation/PatchingHistoryDirArtifact;
       4: if_acmpeq     28
       7: aload_1
       8: getstatic     #8                  // Field org/jboss/as/patching/validation/PatchingArtifacts.PATCH_XML:Lorg/jboss/as/patching/validation/PatchingFileArtifact$ConcreteFileArtifact;
      11: if_acmpeq     28
      14: aload_1
      15: getstatic     #9                  // Field org/jboss/as/patching/validation/PatchingArtifacts.ROLLBACK_XML:Lorg/jboss/as/patching/validation/PatchingFileArtifact$ConcreteFileArtifact;
      18: if_acmpeq     28
      21: aload_1
      22: getstatic     #10                 // Field org/jboss/as/patching/validation/PatchingArtifacts.MISC_BACKUP:Lorg/jboss/as/patching/validation/PatchingFileArtifact$ConcreteDirectoryArtifact;
      25: if_acmpne     38
      28: aload_0
      29: iconst_0
      30: putfield      #5                  // Field proceed:Z
      33: aload_0
      34: getfield      #6                  // Field found:Z
      37: ireturn
      38: aload_0
      39: iconst_0
      40: putfield      #4                  // Field includeCurrent:Z
      43: aload_0
      44: iconst_0
      45: putfield      #5                  // Field proceed:Z
      48: iconst_0
      49: ireturn

  protected void processedPatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$validHistory:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: getfield      #2                  // Field val$patchID:Ljava/lang/String;
      16: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          30
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field found:Z
      27: goto          42
      30: aload_0
      31: getfield      #6                  // Field found:Z
      34: ifeq          42
      37: aload_0
      38: iconst_0
      39: putfield      #5                  // Field proceed:Z
      42: return
}
