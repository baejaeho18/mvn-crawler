Compiled from "PatchModuleInvalidationUtils.java"
class org.jboss.as.patching.runner.PatchModuleInvalidationUtils {
  private static final boolean ENABLE_INVALIDATION;

  public static final long LOCSIG;

  public static final long EXTSIG;

  public static final long CENSIG;

  public static final int GOOD_ENDSIG;

  public static final boolean FLAG_GOOD_ENDSIG;

  public static final int CRIPPLED_ENDSIG;

  public static final boolean FLAG_CRIPPLED_ENDSIG;

  public static final int LOCLEN;

  public static final int CENLEN;

  public static final int ENDLEN;

  public static final int LOC_FILENAMELEN;

  public static final int LOC_EXTFLDLEN;

  public static final int CENSIZ;

  public static final int CEN_LOC_OFFSET;

  public static final int END_CENSTART;

  public static final long ZIP64_MARKER;

  public static final int END_COMMENTLEN;

  private static final int MAX_REVERSE_SCAN;

  private static final int CHUNK_SIZE;

  private static final int ALPHABET_SIZE;

  private static final byte[] GOOD_ENDSIG_PATTERN;

  private static final byte[] CRIPPLED_ENDSIG_PATTERN;

  private static final int SIG_PATTERN_LENGTH;

  private static final int[] BAD_BYTE_SKIP;

  private static final byte[] LOCSIG_PATTERN;

  private static final int[] LOC_BAD_BYTE_SKIP;

  static final boolean $assertionsDisabled;

  private org.jboss.as.patching.runner.PatchModuleInvalidationUtils();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  static void processFile(org.jboss.as.patching.runner.IdentityPatchContext, java.io.File, org.jboss.as.patching.runner.PatchingTaskContext$Mode) throws java.io.IOException;
    Code:
       0: aload_2
       1: getstatic     #4                  // Field org/jboss/as/patching/runner/PatchingTaskContext$Mode.APPLY:Lorg/jboss/as/patching/runner/PatchingTaskContext$Mode;
       4: if_acmpne     34
       7: getstatic     #5                  // Field ENABLE_INVALIDATION:Z
      10: ifeq          70
      13: aload_1
      14: getstatic     #6                  // Field GOOD_ENDSIG_PATTERN:[B
      17: getstatic     #7                  // Field BAD_BYTE_SKIP:[I
      20: iconst_1
      21: ldc           #8                  // int 101010256
      23: invokestatic  #9                  // Method updateJar:(Ljava/io/File;[B[IZI)V
      26: aload_0
      27: aload_1
      28: invokestatic  #10                 // Method backup:(Lorg/jboss/as/patching/runner/IdentityPatchContext;Ljava/io/File;)V
      31: goto          70
      34: aload_2
      35: getstatic     #11                 // Field org/jboss/as/patching/runner/PatchingTaskContext$Mode.ROLLBACK:Lorg/jboss/as/patching/runner/PatchingTaskContext$Mode;
      38: if_acmpne     62
      41: aload_1
      42: getstatic     #12                 // Field CRIPPLED_ENDSIG_PATTERN:[B
      45: getstatic     #7                  // Field BAD_BYTE_SKIP:[I
      48: iconst_0
      49: ldc           #13                 // int 117787472
      51: invokestatic  #9                  // Method updateJar:(Ljava/io/File;[B[IZI)V
      54: aload_0
      55: aload_1
      56: invokestatic  #14                 // Method restore:(Lorg/jboss/as/patching/runner/IdentityPatchContext;Ljava/io/File;)V
      59: goto          70
      62: new           #15                 // class java/lang/IllegalStateException
      65: dup
      66: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":()V
      69: athrow
      70: return

  private static void updateJar(java.io.File, byte[], int[], boolean, int) throws java.io.IOException;
    Code:
       0: new           #17                 // class java/io/RandomAccessFile
       3: dup
       4: aload_0
       5: ldc           #18                 // String rw
       7: invokespecial #19                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      10: astore        5
      12: aload         5
      14: invokevirtual #20                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      17: astore        6
      19: aload         6
      21: invokevirtual #21                 // Method java/nio/channels/FileChannel.size:()J
      24: ldc2_w        #22                 // long 22l
      27: lsub
      28: lstore        7
      30: iload_3
      31: ifeq          56
      34: new           #24                 // class org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext
      37: dup
      38: getstatic     #6                  // Field GOOD_ENDSIG_PATTERN:[B
      41: getstatic     #12                 // Field CRIPPLED_ENDSIG_PATTERN:[B
      44: invokespecial #25                 // Method org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext."<init>":([B[B)V
      47: astore        9
      49: ldc           #13                 // int 117787472
      51: istore        10
      53: goto          75
      56: new           #24                 // class org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext
      59: dup
      60: getstatic     #12                 // Field CRIPPLED_ENDSIG_PATTERN:[B
      63: getstatic     #6                  // Field GOOD_ENDSIG_PATTERN:[B
      66: invokespecial #25                 // Method org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext."<init>":([B[B)V
      69: astore        9
      71: ldc           #8                  // int 101010256
      73: istore        10
      75: aload_0
      76: aload         6
      78: lload         7
      80: iload         4
      82: i2l
      83: invokestatic  #26                 // Method validateEndRecord:(Ljava/io/File;Ljava/nio/channels/FileChannel;JJ)Z
      86: ifne          99
      89: aload_0
      90: aload         6
      92: aload         9
      94: invokestatic  #27                 // Method scanForEndSig:(Ljava/io/File;Ljava/nio/channels/FileChannel;Lorg/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext;)J
      97: lstore        7
      99: lload         7
     101: ldc2_w        #28                 // long -1l
     104: lcmp
     105: ifne          142
     108: aload         9
     110: getfield      #30                 // Field org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext.state:Lorg/jboss/as/patching/runner/PatchModuleInvalidationUtils$State;
     113: getstatic     #31                 // Field org/jboss/as/patching/runner/PatchModuleInvalidationUtils$State.NOT_FOUND:Lorg/jboss/as/patching/runner/PatchModuleInvalidationUtils$State;
     116: if_acmpne     131
     119: getstatic     #32                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
     122: aload_0
     123: invokevirtual #33                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     126: invokeinterface #34,  2           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.cannotInvalidateZip:(Ljava/lang/String;)V
     131: aload         6
     133: invokestatic  #35                 // Method safeClose:(Ljava/io/Closeable;)V
     136: aload         5
     138: invokestatic  #35                 // Method safeClose:(Ljava/io/Closeable;)V
     141: return
     142: aload         6
     144: lload         7
     146: invokevirtual #36                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     149: pop
     150: iconst_4
     151: invokestatic  #37                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     154: astore        11
     156: aload         11
     158: getstatic     #38                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     161: invokevirtual #39                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     164: pop
     165: aload         11
     167: iload         10
     169: invokevirtual #40                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     172: pop
     173: aload         11
     175: invokevirtual #41                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
     178: pop
     179: aload         11
     181: invokevirtual #42                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     184: ifeq          198
     187: aload         6
     189: aload         11
     191: invokevirtual #43                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
     194: pop
     195: goto          179
     198: aload         6
     200: invokestatic  #35                 // Method safeClose:(Ljava/io/Closeable;)V
     203: goto          216
     206: astore        12
     208: aload         6
     210: invokestatic  #35                 // Method safeClose:(Ljava/io/Closeable;)V
     213: aload         12
     215: athrow
     216: aload         5
     218: invokestatic  #35                 // Method safeClose:(Ljava/io/Closeable;)V
     221: goto          234
     224: astore        13
     226: aload         5
     228: invokestatic  #35                 // Method safeClose:(Ljava/io/Closeable;)V
     231: aload         13
     233: athrow
     234: return
    Exception table:
       from    to  target type
          19   131   206   any
         142   198   206   any
         206   208   206   any
          12   136   224   any
         142   216   224   any
         224   226   224   any

  private static void backup(org.jboss.as.patching.runner.IdentityPatchContext, java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method java/io/File.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #45                 // String .jar
       8: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      11: ifeq          53
      14: aload_1
      15: invokestatic  #47                 // Method org/jboss/as/patching/runner/PatchUtils.getRenamedFileName:(Ljava/io/File;)Ljava/io/File;
      18: astore_3
      19: aload_1
      20: aload_3
      21: invokevirtual #48                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      24: ifne          53
      27: aload_0
      28: ifnull        40
      31: aload_0
      32: aload_1
      33: aload_3
      34: invokevirtual #49                 // Method org/jboss/as/patching/runner/IdentityPatchContext.failedToRenameFile:(Ljava/io/File;Ljava/io/File;)V
      37: goto          53
      40: getstatic     #32                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      43: aload_1
      44: invokevirtual #33                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      47: invokeinterface #50,  2           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.cannotRenameFileDuringBackup:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      52: athrow
      53: return

  private static void restore(org.jboss.as.patching.runner.IdentityPatchContext, java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method java/io/File.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #51                 // String .jar.patched
       8: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      11: ifeq          53
      14: aload_1
      15: invokestatic  #47                 // Method org/jboss/as/patching/runner/PatchUtils.getRenamedFileName:(Ljava/io/File;)Ljava/io/File;
      18: astore_3
      19: aload_1
      20: aload_3
      21: invokevirtual #48                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      24: ifne          53
      27: aload_0
      28: ifnull        40
      31: aload_0
      32: aload_1
      33: aload_3
      34: invokevirtual #49                 // Method org/jboss/as/patching/runner/IdentityPatchContext.failedToRenameFile:(Ljava/io/File;Ljava/io/File;)V
      37: goto          53
      40: getstatic     #32                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      43: aload_1
      44: invokevirtual #33                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      47: invokeinterface #52,  2           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.cannotRenameFileDuringRestore:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      52: athrow
      53: return

  private static boolean validateEndRecord(java.io.File, java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: invokevirtual #36                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
       5: pop
       6: bipush        22
       8: invokestatic  #53                 // Method getByteBuffer:(I)Ljava/nio/ByteBuffer;
      11: astore        6
      13: aload         6
      15: aload_1
      16: invokestatic  #54                 // Method read:(Ljava/nio/ByteBuffer;Ljava/nio/channels/FileChannel;)V
      19: aload         6
      21: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:()I
      24: bipush        22
      26: if_icmpge     31
      29: iconst_0
      30: ireturn
      31: aload         6
      33: iconst_0
      34: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
      37: lload         4
      39: lcmp
      40: ifeq          45
      43: iconst_0
      44: ireturn
      45: aload         6
      47: bipush        16
      49: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
      52: lstore        7
      54: lload         7
      56: ldc2_w        #57                 // long 4294967295l
      59: lcmp
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: bipush        46
      67: invokestatic  #53                 // Method getByteBuffer:(I)Ljava/nio/ByteBuffer;
      70: astore        9
      72: aload         9
      74: aload_1
      75: lload         7
      77: invokestatic  #59                 // Method read:(Ljava/nio/ByteBuffer;Ljava/nio/channels/FileChannel;J)V
      80: aload         9
      82: iconst_0
      83: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
      86: lstore        10
      88: lload         10
      90: ldc2_w        #60                 // long 33639248l
      93: lcmp
      94: ifne          186
      97: aload         9
      99: bipush        32
     101: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
     104: lstore        12
     106: aload         9
     108: bipush        20
     110: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
     113: lstore        14
     115: lload         12
     117: lconst_0
     118: lcmp
     119: ifne          134
     122: aload_1
     123: lconst_0
     124: lload         14
     126: invokestatic  #62                 // Method validateLocalFileRecord:(Ljava/nio/channels/FileChannel;JJ)Z
     129: ifne          150
     132: iconst_0
     133: ireturn
     134: aload_1
     135: invokestatic  #63                 // Method scanForLocSig:(Ljava/nio/channels/FileChannel;)J
     138: lstore        16
     140: lload         12
     142: lload         16
     144: lcmp
     145: ifeq          150
     148: iconst_0
     149: ireturn
     150: aload         6
     152: bipush        20
     154: invokestatic  #64                 // Method getUnsignedShort:(Ljava/nio/ByteBuffer;I)I
     157: istore        16
     159: lload_2
     160: ldc2_w        #22                 // long 22l
     163: ladd
     164: iload         16
     166: i2l
     167: ladd
     168: lstore        17
     170: lload         17
     172: aload_1
     173: invokevirtual #21                 // Method java/nio/channels/FileChannel.size:()J
     176: lcmp
     177: ifgt          184
     180: iconst_1
     181: goto          185
     184: iconst_0
     185: ireturn
     186: iconst_0
     187: ireturn
     188: astore        6
     190: iconst_0
     191: ireturn
    Exception table:
       from    to  target type
           0    30   188   Class java/io/EOFException
          31    44   188   Class java/io/EOFException
          45    64   188   Class java/io/EOFException
          65   133   188   Class java/io/EOFException
         134   149   188   Class java/io/EOFException
         150   185   188   Class java/io/EOFException
         186   187   188   Class java/io/EOFException

  private static long scanForEndSig(java.io.File, java.nio.channels.FileChannel, org.jboss.as.patching.runner.PatchModuleInvalidationUtils$ScanContext) throws java.io.IOException;
    Code:
       0: sipush        4096
       3: invokestatic  #53                 // Method getByteBuffer:(I)Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_1
       8: invokevirtual #21                 // Method java/nio/channels/FileChannel.size:()J
      11: lstore        4
      13: lconst_0
      14: lload         4
      16: ldc2_w        #66                 // long 65558l
      19: lsub
      20: invokestatic  #68                 // Method java/lang/Math.max:(JJ)J
      23: lstore        6
      25: lconst_0
      26: lload         4
      28: ldc2_w        #69                 // long 4096l
      31: lsub
      32: invokestatic  #68                 // Method java/lang/Math.max:(JJ)J
      35: lstore        8
      37: lload         8
      39: lstore        10
      41: lload         10
      43: lload         6
      45: lcmp
      46: iflt          266
      49: aload_3
      50: aload_1
      51: lload         8
      53: invokestatic  #59                 // Method read:(Ljava/nio/ByteBuffer;Ljava/nio/channels/FileChannel;J)V
      56: aload_3
      57: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:()I
      60: istore        12
      62: iload         12
      64: iconst_1
      65: isub
      66: istore        13
      68: iload         13
      70: iconst_4
      71: if_icmplt     226
      74: iconst_3
      75: istore        14
      77: iload         14
      79: iflt          106
      82: aload_2
      83: iload         14
      85: aload_3
      86: iload         13
      88: iload         14
      90: isub
      91: invokevirtual #71                 // Method java/nio/ByteBuffer.get:(I)B
      94: invokevirtual #72                 // Method org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext.matches:(IB)Z
      97: ifeq          106
     100: iinc          14, -1
     103: goto          77
     106: iload         14
     108: lookupswitch  { // 2
                    -1: 136
                     3: 192
               default: 220
          }
     136: aload_2
     137: getfield      #30                 // Field org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext.state:Lorg/jboss/as/patching/runner/PatchModuleInvalidationUtils$State;
     140: astore        15
     142: lload         8
     144: iload         13
     146: i2l
     147: ladd
     148: ldc2_w        #73                 // long 4l
     151: lsub
     152: lconst_1
     153: ladd
     154: lstore        16
     156: aload_0
     157: aload_1
     158: lload         16
     160: aload_2
     161: invokevirtual #75                 // Method org/jboss/as/patching/runner/PatchModuleInvalidationUtils$ScanContext.getSig:()I
     164: i2l
     165: invokestatic  #26                 // Method validateEndRecord:(Ljava/io/File;Ljava/nio/channels/FileChannel;JJ)Z
     168: ifeq          186
     171: aload         15
     173: getstatic     #76                 // Field org/jboss/as/patching/runner/PatchModuleInvalidationUtils$State.FOUND:Lorg/jboss/as/patching/runner/PatchModuleInvalidationUtils$State;
     176: if_acmpne     182
     179: lload         16
     181: lreturn
     182: ldc2_w        #28                 // long -1l
     185: lreturn
     186: iinc          13, -4
     189: goto          223
     192: aload_3
     193: iload         13
     195: iload         14
     197: isub
     198: invokevirtual #71                 // Method java/nio/ByteBuffer.get:(I)B
     201: bipush        -128
     203: isub
     204: istore        15
     206: iload         13
     208: getstatic     #7                  // Field BAD_BYTE_SKIP:[I
     211: iload         15
     213: iaload
     214: isub
     215: istore        13
     217: goto          223
     220: iinc          13, -4
     223: goto          68
     226: lload         8
     228: iload         13
     230: i2l
     231: lcmp
     232: ifgt          238
     235: goto          266
     238: lload         8
     240: lstore        10
     242: lload         8
     244: lload         8
     246: iload         13
     248: i2l
     249: lsub
     250: ldc2_w        #69                 // long 4096l
     253: iload         13
     255: i2l
     256: lsub
     257: invokestatic  #78                 // Method java/lang/Math.min:(JJ)J
     260: lsub
     261: lstore        8
     263: goto          41
     266: ldc2_w        #28                 // long -1l
     269: lreturn

  private static long scanForLocSig(java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #36                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
       5: pop
       6: sipush        4096
       9: invokestatic  #53                 // Method getByteBuffer:(I)Ljava/nio/ByteBuffer;
      12: astore_1
      13: aload_0
      14: invokevirtual #21                 // Method java/nio/channels/FileChannel.size:()J
      17: lstore_2
      18: aload_0
      19: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
      22: lload_2
      23: lcmp
      24: ifgt          195
      27: aload_1
      28: aload_0
      29: invokestatic  #54                 // Method read:(Ljava/nio/ByteBuffer;Ljava/nio/channels/FileChannel;)V
      32: iconst_0
      33: istore        4
      35: iload         4
      37: aload_1
      38: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:()I
      41: iconst_4
      42: isub
      43: if_icmpgt     192
      46: iconst_3
      47: istore        5
      49: iload         5
      51: iflt          78
      54: getstatic     #80                 // Field LOCSIG_PATTERN:[B
      57: iload         5
      59: baload
      60: aload_1
      61: iload         4
      63: iload         5
      65: iadd
      66: invokevirtual #71                 // Method java/nio/ByteBuffer.get:(I)B
      69: if_icmpne     78
      72: iinc          5, -1
      75: goto          49
      78: iload         5
      80: lookupswitch  { // 2
                    -1: 108
                     3: 158
               default: 186
          }
     108: aload_0
     109: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
     112: aload_1
     113: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:()I
     116: i2l
     117: lsub
     118: iload         4
     120: i2l
     121: ladd
     122: lstore        6
     124: aload_0
     125: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
     128: lstore        8
     130: aload_0
     131: lload         6
     133: ldc2_w        #28                 // long -1l
     136: invokestatic  #62                 // Method validateLocalFileRecord:(Ljava/nio/channels/FileChannel;JJ)Z
     139: ifeq          145
     142: lload         6
     144: lreturn
     145: aload_0
     146: lload         8
     148: invokevirtual #36                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     151: pop
     152: iinc          4, 4
     155: goto          189
     158: aload_1
     159: iload         4
     161: iload         5
     163: iadd
     164: invokevirtual #71                 // Method java/nio/ByteBuffer.get:(I)B
     167: bipush        -128
     169: isub
     170: istore        6
     172: iload         4
     174: getstatic     #81                 // Field LOC_BAD_BYTE_SKIP:[I
     177: iload         6
     179: iaload
     180: iadd
     181: istore        4
     183: goto          189
     186: iinc          4, 4
     189: goto          35
     192: goto          18
     195: ldc2_w        #28                 // long -1l
     198: lreturn

  private static boolean validateLocalFileRecord(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: bipush        30
       2: invokestatic  #53                 // Method getByteBuffer:(I)Ljava/nio/ByteBuffer;
       5: astore        5
       7: aload         5
       9: aload_0
      10: lload_1
      11: invokestatic  #59                 // Method read:(Ljava/nio/ByteBuffer;Ljava/nio/channels/FileChannel;J)V
      14: aload         5
      16: invokevirtual #55                 // Method java/nio/ByteBuffer.limit:()I
      19: bipush        30
      21: if_icmplt     37
      24: aload         5
      26: iconst_0
      27: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
      30: ldc2_w        #82                 // long 67324752l
      33: lcmp
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: lload_3
      40: ldc2_w        #28                 // long -1l
      43: lcmp
      44: ifne          49
      47: iconst_1
      48: ireturn
      49: aload         5
      51: bipush        26
      53: invokestatic  #64                 // Method getUnsignedShort:(Ljava/nio/ByteBuffer;I)I
      56: istore        6
      58: aload         5
      60: bipush        28
      62: invokestatic  #64                 // Method getUnsignedShort:(Ljava/nio/ByteBuffer;I)I
      65: istore        7
      67: lload_1
      68: ldc2_w        #84                 // long 30l
      71: ladd
      72: lload_3
      73: ladd
      74: iload         6
      76: i2l
      77: ladd
      78: iload         7
      80: i2l
      81: ladd
      82: lstore        8
      84: aload         5
      86: aload_0
      87: lload         8
      89: invokestatic  #59                 // Method read:(Ljava/nio/ByteBuffer;Ljava/nio/channels/FileChannel;J)V
      92: aload         5
      94: iconst_0
      95: invokestatic  #56                 // Method getUnsignedInt:(Ljava/nio/ByteBuffer;I)J
      98: lstore        10
     100: lload         10
     102: ldc2_w        #82                 // long 67324752l
     105: lcmp
     106: ifeq          127
     109: lload         10
     111: ldc2_w        #86                 // long 134695760l
     114: lcmp
     115: ifeq          127
     118: lload         10
     120: ldc2_w        #60                 // long 33639248l
     123: lcmp
     124: ifne          131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: ireturn

  private static java.nio.ByteBuffer getByteBuffer(int);
    Code:
       0: iload_0
       1: invokestatic  #37                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: getstatic     #38                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       9: invokevirtual #39                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      12: pop
      13: aload_1
      14: areturn

  private static void read(java.nio.ByteBuffer, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
       4: pop
       5: aload_1
       6: aload_0
       7: invokevirtual #89                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      10: pop
      11: aload_0
      12: invokevirtual #41                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      15: pop
      16: return

  private static void read(java.nio.ByteBuffer, java.nio.channels.FileChannel, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
       4: pop
       5: aload_1
       6: aload_0
       7: lload_2
       8: invokevirtual #90                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      11: pop
      12: aload_0
      13: invokevirtual #41                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      16: pop
      17: return

  private static long getUnsignedInt(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #91                 // Method java/nio/ByteBuffer.getInt:(I)I
       5: i2l
       6: ldc2_w        #57                 // long 4294967295l
       9: land
      10: lreturn

  private static int getUnsignedShort(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #92                 // Method java/nio/ByteBuffer.getShort:(I)S
       5: ldc           #93                 // int 65535
       7: iand
       8: ireturn

  private static void computeBadByteSkipArray(byte[], int[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: sipush        256
       6: if_icmpge     20
       9: aload_1
      10: iload_2
      11: aload_0
      12: arraylength
      13: iastore
      14: iinc          2, 1
      17: goto          2
      20: iconst_0
      21: istore_2
      22: iload_2
      23: aload_0
      24: arraylength
      25: iconst_1
      26: isub
      27: if_icmpge     50
      30: aload_1
      31: aload_0
      32: iload_2
      33: baload
      34: bipush        -128
      36: isub
      37: aload_0
      38: arraylength
      39: iload_2
      40: isub
      41: iconst_1
      42: isub
      43: iastore
      44: iinc          2, 1
      47: goto          22
      50: return

  private static void computeBadByteSkipArray(byte[], byte[], int[]);
    Code:
       0: getstatic     #94                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: arraylength
       8: aload_1
       9: arraylength
      10: if_icmpeq     21
      13: new           #95                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #96                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_3
      23: iload_3
      24: sipush        256
      27: if_icmpge     41
      30: aload_2
      31: iload_3
      32: aload_0
      33: arraylength
      34: iastore
      35: iinc          3, 1
      38: goto          23
      41: iconst_0
      42: istore_3
      43: iload_3
      44: aload_1
      45: arraylength
      46: iconst_1
      47: isub
      48: if_icmpge     71
      51: aload_2
      52: aload_0
      53: iload_3
      54: baload
      55: bipush        -128
      57: isub
      58: aload_0
      59: arraylength
      60: iload_3
      61: isub
      62: iconst_1
      63: isub
      64: iastore
      65: iinc          3, 1
      68: goto          43
      71: iconst_0
      72: istore_3
      73: iload_3
      74: aload_1
      75: arraylength
      76: iconst_1
      77: isub
      78: if_icmpge     101
      81: aload_2
      82: aload_1
      83: iload_3
      84: baload
      85: bipush        -128
      87: isub
      88: aload_1
      89: arraylength
      90: iload_3
      91: isub
      92: iconst_1
      93: isub
      94: iastore
      95: iinc          3, 1
      98: goto          73
     101: return

  private static void safeClose(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #97,  1           // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/patching/runner/PatchModuleInvalidationUtils
       2: invokevirtual #99                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #94                 // Field $assertionsDisabled:Z
      16: ldc           #100                // String org.wildfly.patching.jar.invalidation
      18: ldc           #101                // String false
      20: invokestatic  #102                // Method org/wildfly/security/manager/WildFlySecurityManager.getPropertyPrivileged:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      23: invokestatic  #103                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
      26: putstatic     #5                  // Field ENABLE_INVALIDATION:Z
      29: iconst_4
      30: newarray       byte
      32: dup
      33: iconst_0
      34: bipush        6
      36: bastore
      37: dup
      38: iconst_1
      39: iconst_5
      40: bastore
      41: dup
      42: iconst_2
      43: bipush        75
      45: bastore
      46: dup
      47: iconst_3
      48: bipush        80
      50: bastore
      51: putstatic     #6                  // Field GOOD_ENDSIG_PATTERN:[B
      54: iconst_4
      55: newarray       byte
      57: dup
      58: iconst_0
      59: bipush        7
      61: bastore
      62: dup
      63: iconst_1
      64: iconst_5
      65: bastore
      66: dup
      67: iconst_2
      68: bipush        75
      70: bastore
      71: dup
      72: iconst_3
      73: bipush        80
      75: bastore
      76: putstatic     #12                 // Field CRIPPLED_ENDSIG_PATTERN:[B
      79: sipush        256
      82: newarray       int
      84: putstatic     #7                  // Field BAD_BYTE_SKIP:[I
      87: iconst_4
      88: newarray       byte
      90: dup
      91: iconst_0
      92: bipush        80
      94: bastore
      95: dup
      96: iconst_1
      97: bipush        75
      99: bastore
     100: dup
     101: iconst_2
     102: iconst_3
     103: bastore
     104: dup
     105: iconst_3
     106: iconst_4
     107: bastore
     108: putstatic     #80                 // Field LOCSIG_PATTERN:[B
     111: sipush        256
     114: newarray       int
     116: putstatic     #81                 // Field LOC_BAD_BYTE_SKIP:[I
     119: getstatic     #6                  // Field GOOD_ENDSIG_PATTERN:[B
     122: getstatic     #12                 // Field CRIPPLED_ENDSIG_PATTERN:[B
     125: getstatic     #7                  // Field BAD_BYTE_SKIP:[I
     128: invokestatic  #104                // Method computeBadByteSkipArray:([B[B[I)V
     131: getstatic     #80                 // Field LOCSIG_PATTERN:[B
     134: getstatic     #81                 // Field LOC_BAD_BYTE_SKIP:[I
     137: invokestatic  #105                // Method computeBadByteSkipArray:([B[I)V
     140: return
}
