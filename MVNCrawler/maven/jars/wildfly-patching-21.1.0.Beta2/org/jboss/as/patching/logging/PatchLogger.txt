Compiled from "PatchLogger.java"
public interface org.jboss.as.patching.logging.PatchLogger extends org.jboss.logging.BasicLogger {
  public static final org.jboss.as.patching.logging.PatchLogger ROOT_LOGGER;

  public abstract void cannotDeleteFile(java.lang.String);

  public abstract void cannotInvalidateZip(java.lang.String);

  public abstract java.lang.String detectedConflicts();

  public abstract java.lang.IllegalStateException cliFailedToResolveDistribution();

  public abstract java.lang.IllegalStateException installationNoLayersConfigFound(java.lang.String);

  public abstract java.lang.IllegalStateException installationMissingLayer(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalStateException installationInvalidLayerConfiguration(java.lang.String);

  public abstract java.lang.IllegalStateException installationDuplicateLayer(java.lang.String, java.lang.String);

  public abstract java.lang.IllegalStateException notADirectory(java.lang.String);

  public abstract java.lang.IllegalStateException patchTypesDontMatch();

  public abstract org.jboss.as.patching.PatchingException invalidRollbackInformation();

  public abstract org.jboss.as.patching.PatchingException doesNotApply(java.lang.String, java.lang.String);

  public abstract java.io.IOException failedToDelete(java.lang.String);

  public abstract java.io.IOException cannotCreateDirectory(java.lang.String);

  public abstract java.lang.String fileDoesNotExist(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException cannotRollbackPatch(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException alreadyApplied(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException noSuchLayer(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException failedToResolvePatch(java.lang.String, java.lang.String);

  public abstract org.jboss.as.patching.PatchingException requiresPatch(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException incompatiblePatch(java.lang.String);

  public abstract org.jboss.as.patching.ContentConflictsException conflictsDetected(java.util.Collection<org.jboss.as.patching.metadata.ContentItem>);

  public abstract java.io.SyncFailedException wrongCopiedContent(org.jboss.as.patching.metadata.ContentItem);

  public abstract java.lang.IllegalArgumentException illegalPatchName(java.lang.String);

  public abstract java.lang.IllegalArgumentException noPatchesApplied();

  public abstract org.jboss.as.patching.PatchingException patchNotFoundInHistory(java.lang.String);

  public abstract org.jboss.as.controller.OperationFailedException failedToShowHistory(java.lang.Throwable);

  public abstract org.jboss.as.controller.OperationFailedException serverRequiresRestart();

  public abstract java.lang.String failedToLoadIdentity();

  public abstract java.lang.String noMorePatches();

  public abstract java.lang.String noPatchHistory(java.lang.String);

  public abstract java.lang.String patchIsMissingFile(java.lang.String);

  public abstract java.lang.String fileIsNotReadable(java.lang.String);

  public abstract java.lang.String layerNotFound(java.lang.String);

  public abstract void failedToUndoChange(java.lang.String);

  public abstract java.lang.String missingArtifact(org.jboss.as.patching.validation.PatchingArtifact$ArtifactState);

  public abstract java.lang.String inconsistentArtifact(org.jboss.as.patching.validation.PatchingArtifact$ArtifactState);

  public abstract java.lang.String artifactInError(org.jboss.as.patching.validation.PatchingArtifact$ArtifactState);

  public abstract void cannotRenameFile(java.lang.String);

  public abstract java.lang.IllegalStateException cannotRenameFileDuringBackup(java.lang.String);

  public abstract java.lang.IllegalStateException cannotRenameFileDuringRestore(java.lang.String);

  public abstract java.lang.IllegalStateException duplicateElementPatchId(java.lang.String);

  public abstract java.lang.String productVersionDidNotMatchInstalled(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String failedToLoadInfo(java.lang.String);

  public abstract java.lang.String patchIdFoundInMoreThanOneStream(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String patchBundleIsEmpty();

  public abstract org.jboss.as.patching.PatchingException contentItemTypeMissing(java.lang.String);

  public abstract java.lang.String unsupportedContentType(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException unrecognizedConditionFormat(java.lang.String);

  public abstract org.jboss.as.patching.PatchingException cannotCopyFilesToTempDir(java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract java.io.IOException cannotCopyFiles(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);

  public abstract void deleteRollbackError(java.lang.String, java.lang.String);

  public abstract java.io.IOException failedToDeleteBackup();

  public abstract void logPatchingInfo(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.io.IOException entryOutsideOfPatchDirectory(java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/jboss/as/patching/logging/PatchLogger
       2: ldc           #2                  // String org.jboss.as.patching
       4: invokestatic  #3                  // Method org/jboss/logging/Logger.getMessageLogger:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #1                  // class org/jboss/as/patching/logging/PatchLogger
      10: putstatic     #4                  // Field ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      13: return
}
