Compiled from "LayersFactory.java"
class org.jboss.as.patching.installation.LayersFactory$ProcessedLayers {
  private final org.jboss.as.patching.installation.LayersFactory$InstalledConfiguration conf;

  private final java.util.Map<java.lang.String, org.jboss.as.patching.installation.LayersFactory$LayerPathConfig> layers;

  private final java.util.Map<java.lang.String, org.jboss.as.patching.installation.LayersFactory$LayerPathConfig> addOns;

  org.jboss.as.patching.installation.LayersFactory$ProcessedLayers(org.jboss.as.patching.installation.LayersFactory$InstalledConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field layers:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #5                  // Field addOns:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field conf:Lorg/jboss/as/patching/installation/LayersFactory$InstalledConfiguration;
      31: return

  org.jboss.as.patching.installation.LayersFactory$InstalledConfiguration getConf();
    Code:
       0: aload_0
       1: getfield      #6                  // Field conf:Lorg/jboss/as/patching/installation/LayersFactory$InstalledConfiguration;
       4: areturn

  java.util.Map<java.lang.String, org.jboss.as.patching.installation.LayersFactory$LayerPathConfig> getLayers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field layers:Ljava/util/Map;
       4: areturn

  java.util.Map<java.lang.String, org.jboss.as.patching.installation.LayersFactory$LayerPathConfig> getAddOns();
    Code:
       0: aload_0
       1: getfield      #5                  // Field addOns:Ljava/util/Map;
       4: areturn

  void addLayer(java.lang.String, java.io.File, org.jboss.as.patching.installation.LayersFactory$LayerPathSetter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field layers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class org/jboss/as/patching/installation/LayersFactory$LayerPathConfig
      13: astore        4
      15: aload         4
      17: ifnonnull     43
      20: new           #8                  // class org/jboss/as/patching/installation/LayersFactory$LayerPathConfig
      23: dup
      24: aload_1
      25: invokespecial #9                  // Method org/jboss/as/patching/installation/LayersFactory$LayerPathConfig."<init>":(Ljava/lang/String;)V
      28: astore        4
      30: aload_0
      31: getfield      #4                  // Field layers:Ljava/util/Map;
      34: aload_1
      35: aload         4
      37: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_3
      44: aload         4
      46: aload_2
      47: invokeinterface #11,  3           // InterfaceMethod org/jboss/as/patching/installation/LayersFactory$LayerPathSetter.setPath:(Lorg/jboss/as/patching/installation/LayersFactory$LayerPathConfig;Ljava/io/File;)Z
      52: ifne          67
      55: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      58: ldc           #13                 // String layer
      60: aload_1
      61: invokeinterface #14,  3           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.installationDuplicateLayer:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalStateException;
      66: athrow
      67: return

  void addAddOn(java.lang.String, java.io.File, org.jboss.as.patching.installation.LayersFactory$LayerPathSetter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field addOns:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class org/jboss/as/patching/installation/LayersFactory$LayerPathConfig
      13: astore        4
      15: aload         4
      17: ifnonnull     43
      20: new           #8                  // class org/jboss/as/patching/installation/LayersFactory$LayerPathConfig
      23: dup
      24: aload_1
      25: invokespecial #9                  // Method org/jboss/as/patching/installation/LayersFactory$LayerPathConfig."<init>":(Ljava/lang/String;)V
      28: astore        4
      30: aload_0
      31: getfield      #5                  // Field addOns:Ljava/util/Map;
      34: aload_1
      35: aload         4
      37: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_3
      44: aload         4
      46: aload_2
      47: invokeinterface #11,  3           // InterfaceMethod org/jboss/as/patching/installation/LayersFactory$LayerPathSetter.setPath:(Lorg/jboss/as/patching/installation/LayersFactory$LayerPathConfig;Ljava/io/File;)Z
      52: ifne          67
      55: getstatic     #12                 // Field org/jboss/as/patching/logging/PatchLogger.ROOT_LOGGER:Lorg/jboss/as/patching/logging/PatchLogger;
      58: ldc           #15                 // String add-on
      60: aload_1
      61: invokeinterface #14,  3           // InterfaceMethod org/jboss/as/patching/logging/PatchLogger.installationDuplicateLayer:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalStateException;
      66: athrow
      67: return
}
