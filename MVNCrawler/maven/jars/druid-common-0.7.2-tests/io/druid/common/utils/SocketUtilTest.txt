Compiled from "SocketUtilTest.java"
public class io.druid.common.utils.SocketUtilTest {
  private final int MAX_PORT;

  public io.druid.common.utils.SocketUtilTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 65535
       7: putfield      #3                  // Field MAX_PORT:I
      10: return

  public void testSocketUtil();
    Code:
       0: iconst_0
       1: invokestatic  #4                  // Method io/druid/common/utils/SocketUtil.findOpenPort:(I)I
       4: istore_1
       5: ldc           #5                  // String Port is greater than the maximum port 0xffff
       7: iload_1
       8: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: ldc           #2                  // int 65535
      13: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokestatic  #7                  // Method org/hamcrest/number/OrderingComparison.lessThanOrEqualTo:(Ljava/lang/Comparable;)Lorg/hamcrest/Matcher;
      19: invokestatic  #8                  // Method org/junit/Assert.assertThat:(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      22: ldc           #9                  // String Port is less than minimum port 0
      24: iload_1
      25: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: iconst_0
      29: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: invokestatic  #10                 // Method org/hamcrest/number/OrderingComparison.greaterThanOrEqualTo:(Ljava/lang/Comparable;)Lorg/hamcrest/Matcher;
      35: invokestatic  #8                  // Method org/junit/Assert.assertThat:(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      38: return

  public void testIllegalArgument();
    Code:
       0: iconst_m1
       1: invokestatic  #4                  // Method io/druid/common/utils/SocketUtil.findOpenPort:(I)I
       4: pop
       5: return

  public void testISEexception();
    Code:
       0: ldc           #2                  // int 65535
       2: invokestatic  #4                  // Method io/druid/common/utils/SocketUtil.findOpenPort:(I)I
       5: pop
       6: return
}
