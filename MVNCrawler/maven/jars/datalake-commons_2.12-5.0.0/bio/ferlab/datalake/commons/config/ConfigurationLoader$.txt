Compiled from "ConfigurationLoader.scala"
public final class bio.ferlab.datalake.commons.config.ConfigurationLoader$ {
  public static bio.ferlab.datalake.commons.config.ConfigurationLoader$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class bio/ferlab/datalake/commons/config/ConfigurationLoader$
       3: invokespecial #17                 // Method "<init>":()V
       6: return

  public <T extends bio.ferlab.datalake.commons.config.Configuration> pureconfig.generic.ProductHint<T> hint();
    Code:
       0: getstatic     #25                 // Field pureconfig/generic/ProductHint$.MODULE$:Lpureconfig/generic/ProductHint$;
       3: getstatic     #30                 // Field pureconfig/ConfigFieldMapping$.MODULE$:Lpureconfig/ConfigFieldMapping$;
       6: getstatic     #35                 // Field pureconfig/CamelCase$.MODULE$:Lpureconfig/CamelCase$;
       9: getstatic     #35                 // Field pureconfig/CamelCase$.MODULE$:Lpureconfig/CamelCase$;
      12: invokevirtual #39                 // Method pureconfig/ConfigFieldMapping$.apply:(Lpureconfig/NamingConvention;Lpureconfig/NamingConvention;)Lpureconfig/ConfigFieldMapping;
      15: getstatic     #25                 // Field pureconfig/generic/ProductHint$.MODULE$:Lpureconfig/generic/ProductHint$;
      18: invokevirtual #43                 // Method pureconfig/generic/ProductHint$.apply$default$2:()Z
      21: getstatic     #25                 // Field pureconfig/generic/ProductHint$.MODULE$:Lpureconfig/generic/ProductHint$;
      24: invokevirtual #46                 // Method pureconfig/generic/ProductHint$.apply$default$3:()Z
      27: invokevirtual #49                 // Method pureconfig/generic/ProductHint$.apply:(Lpureconfig/ConfigFieldMapping;ZZ)Lpureconfig/generic/ProductHint;
      30: areturn

  public <T extends bio.ferlab.datalake.commons.config.Configuration> T resultToConfiguration(scala.util.Either<pureconfig.error.ConfigReaderFailures, T>, pureconfig.ConfigReader<T>);
    Code:
       0: aload_1
       1: aload_2
       2: invokedynamic #78,  0             // InvokeDynamic #0:apply:(Lpureconfig/ConfigReader;)Lscala/Function1;
       7: invokedynamic #87,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      12: invokevirtual #93                 // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      15: checkcast     #89                 // class scala/util/Either
      18: invokedynamic #100,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      23: invokedynamic #107,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      28: invokevirtual #93                 // Method scala/util/Either.fold:(Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
      31: checkcast     #109                // class bio/ferlab/datalake/commons/config/Configuration
      34: areturn

  public <T extends bio.ferlab.datalake.commons.config.Configuration> T loadFromResources(java.lang.String, pureconfig.ConfigReader<T>);
    Code:
       0: aload_0
       1: getstatic     #120                // Field pureconfig/ConfigSource$.MODULE$:Lpureconfig/ConfigSource$;
       4: aload_1
       5: invokevirtual #124                // Method pureconfig/ConfigSource$.resources:(Ljava/lang/String;)Lpureconfig/ConfigObjectSource;
       8: aload_2
       9: invokevirtual #130                // Method pureconfig/ConfigObjectSource.load:(Lpureconfig/ConfigReader;)Lscala/util/Either;
      12: aload_2
      13: invokevirtual #132                // Method resultToConfiguration:(Lscala/util/Either;Lpureconfig/ConfigReader;)Lbio/ferlab/datalake/commons/config/Configuration;
      16: areturn

  public <T extends bio.ferlab.datalake.commons.config.Configuration> T loadFromPath(java.lang.String, pureconfig.ConfigReader<T>);
    Code:
       0: aload_0
       1: getstatic     #120                // Field pureconfig/ConfigSource$.MODULE$:Lpureconfig/ConfigSource$;
       4: aload_1
       5: invokevirtual #138                // Method pureconfig/ConfigSource$.file:(Ljava/lang/String;)Lpureconfig/ConfigObjectSource;
       8: aload_2
       9: invokevirtual #130                // Method pureconfig/ConfigObjectSource.load:(Lpureconfig/ConfigReader;)Lscala/util/Either;
      12: aload_2
      13: invokevirtual #132                // Method resultToConfiguration:(Lscala/util/Either;Lpureconfig/ConfigReader;)Lbio/ferlab/datalake/commons/config/Configuration;
      16: areturn

  public <T extends bio.ferlab.datalake.commons.config.Configuration> T loadFromString(java.lang.String, pureconfig.ConfigReader<T>);
    Code:
       0: aload_0
       1: getstatic     #120                // Field pureconfig/ConfigSource$.MODULE$:Lpureconfig/ConfigSource$;
       4: aload_1
       5: invokevirtual #143                // Method pureconfig/ConfigSource$.string:(Ljava/lang/String;)Lpureconfig/ConfigObjectSource;
       8: aload_2
       9: invokevirtual #130                // Method pureconfig/ConfigObjectSource.load:(Lpureconfig/ConfigReader;)Lscala/util/Either;
      12: aload_2
      13: invokevirtual #132                // Method resultToConfiguration:(Lscala/util/Either;Lpureconfig/ConfigReader;)Lbio/ferlab/datalake/commons/config/Configuration;
      16: areturn

  public static final scala.util.Either $anonfun$resultToConfiguration$1(pureconfig.ConfigReader, pureconfig.error.ConfigReaderFailures);
    Code:
       0: getstatic     #120                // Field pureconfig/ConfigSource$.MODULE$:Lpureconfig/ConfigSource$;
       3: invokevirtual #149                // Method pureconfig/ConfigSource$.default:()Lpureconfig/ConfigObjectSource;
       6: aload_0
       7: invokevirtual #130                // Method pureconfig/ConfigObjectSource.load:(Lpureconfig/ConfigReader;)Lscala/util/Either;
      10: areturn

  public static final scala.util.Right $anonfun$resultToConfiguration$2(bio.ferlab.datalake.commons.config.Configuration);
    Code:
       0: getstatic     #156                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #160                // Method scala/package$.Right:()Lscala/util/Right$;
       6: aload_0
       7: invokevirtual #165                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
      10: areturn

  public static final scala.runtime.Nothing$ $anonfun$resultToConfiguration$3(pureconfig.error.ConfigReaderFailures);
    Code:
       0: new           #169                // class java/lang/IllegalArgumentException
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #175                // Method pureconfig/error/ConfigReaderFailures.prettyPrint$default$1:()I
       9: invokevirtual #179                // Method pureconfig/error/ConfigReaderFailures.prettyPrint:(I)Ljava/lang/String;
      12: invokespecial #182                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow

  public static final bio.ferlab.datalake.commons.config.Configuration $anonfun$resultToConfiguration$4(bio.ferlab.datalake.commons.config.Configuration);
    Code:
       0: aload_0
       1: areturn

  private bio.ferlab.datalake.commons.config.ConfigurationLoader$();
    Code:
       0: aload_0
       1: invokespecial #183                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #185                // Field MODULE$:Lbio/ferlab/datalake/commons/config/ConfigurationLoader$;
       8: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #197,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
