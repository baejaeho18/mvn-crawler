Compiled from "SpringReactiveMybatisExecutor.java"
public class pro.chenggang.project.reactive.mybatis.support.r2dbc.spring.executor.SpringReactiveMybatisExecutor extends pro.chenggang.project.reactive.mybatis.support.r2dbc.executor.DefaultReactiveMybatisExecutor {
  public pro.chenggang.project.reactive.mybatis.support.r2dbc.spring.executor.SpringReactiveMybatisExecutor(pro.chenggang.project.reactive.mybatis.support.r2dbc.delegate.R2dbcMybatisConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method pro/chenggang/project/reactive/mybatis/support/r2dbc/executor/DefaultReactiveMybatisExecutor."<init>":(Lpro/chenggang/project/reactive/mybatis/support/r2dbc/delegate/R2dbcMybatisConfiguration;)V
       5: return

  protected reactor.core.publisher.Mono<java.lang.Void> closeConnection(io.r2dbc.spi.Connection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field connectionFactory:Lio/r2dbc/spi/ConnectionFactory;
       4: invokestatic  #3                  // Method org/springframework/r2dbc/connection/ConnectionFactoryUtils.currentConnectionFactory:(Lio/r2dbc/spi/ConnectionFactory;)Lreactor/core/publisher/Mono;
       7: invokevirtual #4                  // Method reactor/core/publisher/Mono.then:()Lreactor/core/publisher/Mono;
      10: ldc           #5                  // class java/lang/Exception
      12: aload_1
      13: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lio/r2dbc/spi/Connection;)Ljava/util/function/Function;
      18: invokevirtual #7                  // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/lang/Class;Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      21: areturn

  private static reactor.core.publisher.Mono lambda$closeConnection$0(io.r2dbc.spi.Connection, java.lang.Exception);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod io/r2dbc/spi/Connection.close:()Lorg/reactivestreams/Publisher;
       6: invokestatic  #9                  // Method reactor/core/publisher/Mono.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
       9: areturn
}
