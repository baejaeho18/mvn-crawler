Compiled from "Properties.scala"
public final class almond.api.Properties$ {
  public static final almond.api.Properties$ MODULE$;

  private static java.util.Properties props;

  private static java.lang.String version;

  private static java.lang.String commitHash;

  private static java.lang.String ammoniteSparkVersion;

  private static scala.Option<java.lang.String> defaultScalafmtVersionOpt;

  private static java.lang.String actualScalaVersion;

  private static volatile byte bitmap$0;

  public static {};
    Code:
       0: new           #2                  // class almond/api/Properties$
       3: dup
       4: invokespecial #29                 // Method "<init>":()V
       7: putstatic     #31                 // Field MODULE$:Lalmond/api/Properties$;
      10: return

  private java.util.Properties props$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #35                 // Field bitmap$0:B
       7: iconst_1
       8: iand
       9: i2b
      10: iconst_0
      11: if_icmpne     40
      14: new           #37                 // class java/util/Properties
      17: dup
      18: invokespecial #38                 // Method java/util/Properties."<init>":()V
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokespecial #42                 // Method liftedTree1$1:(Ljava/util/Properties;)V
      27: aload_2
      28: putstatic     #44                 // Field props:Ljava/util/Properties;
      31: getstatic     #35                 // Field bitmap$0:B
      34: iconst_1
      35: ior
      36: i2b
      37: putstatic     #35                 // Field bitmap$0:B
      40: aload_1
      41: monitorexit
      42: goto          48
      45: aload_1
      46: monitorexit
      47: athrow
      48: getstatic     #44                 // Field props:Ljava/util/Properties;
      51: areturn
    Exception table:
       from    to  target type
           4    40    45   any

  private java.util.Properties props();
    Code:
       0: getstatic     #35                 // Field bitmap$0:B
       3: iconst_1
       4: iand
       5: i2b
       6: iconst_0
       7: if_icmpne     17
      10: aload_0
      11: invokespecial #50                 // Method props$lzycompute:()Ljava/util/Properties;
      14: goto          20
      17: getstatic     #44                 // Field props:Ljava/util/Properties;
      20: areturn

  private java.lang.String version$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #35                 // Field bitmap$0:B
       7: iconst_2
       8: iand
       9: i2b
      10: iconst_0
      11: if_icmpne     52
      14: getstatic     #57                 // Field scala/Option$.MODULE$:Lscala/Option$;
      17: aload_0
      18: invokespecial #59                 // Method props:()Ljava/util/Properties;
      21: ldc           #60                 // String version
      23: invokevirtual #64                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #68                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      29: invokedynamic #87,  0             // InvokeDynamic #0:apply:()Lscala/Function0;
      34: invokevirtual #93                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      37: checkcast     #95                 // class java/lang/String
      40: putstatic     #97                 // Field version:Ljava/lang/String;
      43: getstatic     #35                 // Field bitmap$0:B
      46: iconst_2
      47: ior
      48: i2b
      49: putstatic     #35                 // Field bitmap$0:B
      52: aload_1
      53: monitorexit
      54: goto          60
      57: aload_1
      58: monitorexit
      59: athrow
      60: getstatic     #97                 // Field version:Ljava/lang/String;
      63: areturn
    Exception table:
       from    to  target type
           4    52    57   any

  public java.lang.String version();
    Code:
       0: getstatic     #35                 // Field bitmap$0:B
       3: iconst_2
       4: iand
       5: i2b
       6: iconst_0
       7: if_icmpne     17
      10: aload_0
      11: invokespecial #99                 // Method version$lzycompute:()Ljava/lang/String;
      14: goto          20
      17: getstatic     #97                 // Field version:Ljava/lang/String;
      20: areturn

  private java.lang.String commitHash$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #35                 // Field bitmap$0:B
       7: iconst_4
       8: iand
       9: i2b
      10: iconst_0
      11: if_icmpne     52
      14: getstatic     #57                 // Field scala/Option$.MODULE$:Lscala/Option$;
      17: aload_0
      18: invokespecial #59                 // Method props:()Ljava/util/Properties;
      21: ldc           #102                // String commit-hash
      23: invokevirtual #64                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #68                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      29: invokedynamic #107,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      34: invokevirtual #93                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      37: checkcast     #95                 // class java/lang/String
      40: putstatic     #109                // Field commitHash:Ljava/lang/String;
      43: getstatic     #35                 // Field bitmap$0:B
      46: iconst_4
      47: ior
      48: i2b
      49: putstatic     #35                 // Field bitmap$0:B
      52: aload_1
      53: monitorexit
      54: goto          60
      57: aload_1
      58: monitorexit
      59: athrow
      60: getstatic     #109                // Field commitHash:Ljava/lang/String;
      63: areturn
    Exception table:
       from    to  target type
           4    52    57   any

  public java.lang.String commitHash();
    Code:
       0: getstatic     #35                 // Field bitmap$0:B
       3: iconst_4
       4: iand
       5: i2b
       6: iconst_0
       7: if_icmpne     17
      10: aload_0
      11: invokespecial #111                // Method commitHash$lzycompute:()Ljava/lang/String;
      14: goto          20
      17: getstatic     #109                // Field commitHash:Ljava/lang/String;
      20: areturn

  private java.lang.String ammoniteSparkVersion$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #35                 // Field bitmap$0:B
       7: bipush        8
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     54
      15: getstatic     #57                 // Field scala/Option$.MODULE$:Lscala/Option$;
      18: aload_0
      19: invokespecial #59                 // Method props:()Ljava/util/Properties;
      22: ldc           #114                // String ammonite-spark-version
      24: invokevirtual #64                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #68                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      30: invokedynamic #119,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      35: invokevirtual #93                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      38: checkcast     #95                 // class java/lang/String
      41: putstatic     #121                // Field ammoniteSparkVersion:Ljava/lang/String;
      44: getstatic     #35                 // Field bitmap$0:B
      47: bipush        8
      49: ior
      50: i2b
      51: putstatic     #35                 // Field bitmap$0:B
      54: aload_1
      55: monitorexit
      56: goto          62
      59: aload_1
      60: monitorexit
      61: athrow
      62: getstatic     #121                // Field ammoniteSparkVersion:Ljava/lang/String;
      65: areturn
    Exception table:
       from    to  target type
           4    54    59   any

  public java.lang.String ammoniteSparkVersion();
    Code:
       0: getstatic     #35                 // Field bitmap$0:B
       3: bipush        8
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #123                // Method ammoniteSparkVersion$lzycompute:()Ljava/lang/String;
      15: goto          21
      18: getstatic     #121                // Field ammoniteSparkVersion:Ljava/lang/String;
      21: areturn

  private scala.Option<java.lang.String> defaultScalafmtVersionOpt$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #35                 // Field bitmap$0:B
       7: bipush        16
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     43
      15: getstatic     #57                 // Field scala/Option$.MODULE$:Lscala/Option$;
      18: aload_0
      19: invokespecial #59                 // Method props:()Ljava/util/Properties;
      22: ldc           #128                // String default-scalafmt-version
      24: invokevirtual #64                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #68                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      30: putstatic     #130                // Field defaultScalafmtVersionOpt:Lscala/Option;
      33: getstatic     #35                 // Field bitmap$0:B
      36: bipush        16
      38: ior
      39: i2b
      40: putstatic     #35                 // Field bitmap$0:B
      43: aload_1
      44: monitorexit
      45: goto          51
      48: aload_1
      49: monitorexit
      50: athrow
      51: getstatic     #130                // Field defaultScalafmtVersionOpt:Lscala/Option;
      54: areturn
    Exception table:
       from    to  target type
           4    43    48   any

  public scala.Option<java.lang.String> defaultScalafmtVersionOpt();
    Code:
       0: getstatic     #35                 // Field bitmap$0:B
       3: bipush        16
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #132                // Method defaultScalafmtVersionOpt$lzycompute:()Lscala/Option;
      15: goto          21
      18: getstatic     #130                // Field defaultScalafmtVersionOpt:Lscala/Option;
      21: areturn

  private java.lang.String actualScalaVersion$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #35                 // Field bitmap$0:B
       7: bipush        32
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     54
      15: getstatic     #57                 // Field scala/Option$.MODULE$:Lscala/Option$;
      18: aload_0
      19: invokespecial #59                 // Method props:()Ljava/util/Properties;
      22: ldc           #135                // String scala-version
      24: invokevirtual #64                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #68                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      30: invokedynamic #140,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
      35: invokevirtual #93                 // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      38: checkcast     #95                 // class java/lang/String
      41: putstatic     #142                // Field actualScalaVersion:Ljava/lang/String;
      44: getstatic     #35                 // Field bitmap$0:B
      47: bipush        32
      49: ior
      50: i2b
      51: putstatic     #35                 // Field bitmap$0:B
      54: aload_1
      55: monitorexit
      56: goto          62
      59: aload_1
      60: monitorexit
      61: athrow
      62: getstatic     #142                // Field actualScalaVersion:Ljava/lang/String;
      65: areturn
    Exception table:
       from    to  target type
           4    54    59   any

  public java.lang.String actualScalaVersion();
    Code:
       0: getstatic     #35                 // Field bitmap$0:B
       3: bipush        32
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #144                // Method actualScalaVersion$lzycompute:()Ljava/lang/String;
      15: goto          21
      18: getstatic     #142                // Field actualScalaVersion:Ljava/lang/String;
      21: areturn

  private final void liftedTree1$1(java.util.Properties);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #151                // Method getClass:()Ljava/lang/Class;
       5: invokevirtual #157                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       8: ldc           #159                // String almond/almond.properties
      10: invokevirtual #165                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      13: invokevirtual #169                // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      16: goto          23
      19: pop
      20: goto          23
      23: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException

  public static final java.lang.String $anonfun$version$1();
    Code:
       0: ldc           #171                // String [unknown]
       2: areturn

  public static final java.lang.String $anonfun$commitHash$1();
    Code:
       0: ldc           #171                // String [unknown]
       2: areturn

  public static final java.lang.String $anonfun$ammoniteSparkVersion$1();
    Code:
       0: ldc           #171                // String [unknown]
       2: areturn

  public static final java.lang.String $anonfun$actualScalaVersion$1();
    Code:
       0: ldc           #171                // String [unknown]
       2: areturn

  private almond.api.Properties$();
    Code:
       0: aload_0
       1: invokespecial #172                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #184,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
