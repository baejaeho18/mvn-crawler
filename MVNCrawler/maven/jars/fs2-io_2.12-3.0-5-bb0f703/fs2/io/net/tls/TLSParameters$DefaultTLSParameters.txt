Compiled from "TLSParameters.scala"
public class fs2.io.net.tls.TLSParameters$DefaultTLSParameters implements fs2.io.net.tls.TLSParameters,scala.Product,scala.Serializable {
  private final scala.Option<java.security.AlgorithmConstraints> algorithmConstraints;

  private final scala.Option<scala.collection.immutable.List<java.lang.String>> applicationProtocols;

  private final scala.Option<scala.collection.immutable.List<java.lang.String>> cipherSuites;

  private final scala.Option<java.lang.Object> enableRetransmissions;

  private final scala.Option<java.lang.String> endpointIdentificationAlgorithm;

  private final scala.Option<java.lang.Object> maximumPacketSize;

  private final scala.Option<scala.collection.immutable.List<java.lang.String>> protocols;

  private final scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIServerName>> serverNames;

  private final scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIMatcher>> sniMatchers;

  private final boolean useCipherSuitesOrder;

  private final boolean needClientAuth;

  private final boolean wantClientAuth;

  private final scala.Option<scala.Function2<javax.net.ssl.SSLEngine, scala.collection.immutable.List<java.lang.String>, java.lang.String>> handshakeApplicationProtocolSelector;

  public javax.net.ssl.SSLParameters toSSLParameters();
    Code:
       0: aload_0
       1: invokestatic  #40                 // InterfaceMethod fs2/io/net/tls/TLSParameters.toSSLParameters$:(Lfs2/io/net/tls/TLSParameters;)Ljavax/net/ssl/SSLParameters;
       4: areturn

  public scala.Option<java.security.AlgorithmConstraints> algorithmConstraints();
    Code:
       0: aload_0
       1: getfield      #46                 // Field algorithmConstraints:Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<java.lang.String>> applicationProtocols();
    Code:
       0: aload_0
       1: getfield      #49                 // Field applicationProtocols:Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<java.lang.String>> cipherSuites();
    Code:
       0: aload_0
       1: getfield      #51                 // Field cipherSuites:Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> enableRetransmissions();
    Code:
       0: aload_0
       1: getfield      #54                 // Field enableRetransmissions:Lscala/Option;
       4: areturn

  public scala.Option<java.lang.String> endpointIdentificationAlgorithm();
    Code:
       0: aload_0
       1: getfield      #57                 // Field endpointIdentificationAlgorithm:Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> maximumPacketSize();
    Code:
       0: aload_0
       1: getfield      #59                 // Field maximumPacketSize:Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<java.lang.String>> protocols();
    Code:
       0: aload_0
       1: getfield      #61                 // Field protocols:Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIServerName>> serverNames();
    Code:
       0: aload_0
       1: getfield      #64                 // Field serverNames:Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIMatcher>> sniMatchers();
    Code:
       0: aload_0
       1: getfield      #67                 // Field sniMatchers:Lscala/Option;
       4: areturn

  public boolean useCipherSuitesOrder();
    Code:
       0: aload_0
       1: getfield      #70                 // Field useCipherSuitesOrder:Z
       4: ireturn

  public boolean needClientAuth();
    Code:
       0: aload_0
       1: getfield      #72                 // Field needClientAuth:Z
       4: ireturn

  public boolean wantClientAuth();
    Code:
       0: aload_0
       1: getfield      #74                 // Field wantClientAuth:Z
       4: ireturn

  public scala.Option<scala.Function2<javax.net.ssl.SSLEngine, scala.collection.immutable.List<java.lang.String>, java.lang.String>> handshakeApplicationProtocolSelector();
    Code:
       0: aload_0
       1: getfield      #77                 // Field handshakeApplicationProtocolSelector:Lscala/Option;
       4: areturn

  public fs2.io.net.tls.TLSParameters$DefaultTLSParameters copy(scala.Option<java.security.AlgorithmConstraints>, scala.Option<scala.collection.immutable.List<java.lang.String>>, scala.Option<scala.collection.immutable.List<java.lang.String>>, scala.Option<java.lang.Object>, scala.Option<java.lang.String>, scala.Option<java.lang.Object>, scala.Option<scala.collection.immutable.List<java.lang.String>>, scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIServerName>>, scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIMatcher>>, boolean, boolean, boolean, scala.Option<scala.Function2<javax.net.ssl.SSLEngine, scala.collection.immutable.List<java.lang.String>, java.lang.String>>);
    Code:
       0: new           #2                  // class fs2/io/net/tls/TLSParameters$DefaultTLSParameters
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: iload         10
      21: iload         11
      23: iload         12
      25: aload         13
      27: invokespecial #84                 // Method "<init>":(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;ZZZLscala/Option;)V
      30: areturn

  public scala.Option<java.security.AlgorithmConstraints> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method algorithmConstraints:()Lscala/Option;
       4: areturn

  public boolean copy$default$10();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method useCipherSuitesOrder:()Z
       4: ireturn

  public boolean copy$default$11();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method needClientAuth:()Z
       4: ireturn

  public boolean copy$default$12();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method wantClientAuth:()Z
       4: ireturn

  public scala.Option<scala.Function2<javax.net.ssl.SSLEngine, scala.collection.immutable.List<java.lang.String>, java.lang.String>> copy$default$13();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method handshakeApplicationProtocolSelector:()Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<java.lang.String>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method applicationProtocols:()Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<java.lang.String>> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method cipherSuites:()Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method enableRetransmissions:()Lscala/Option;
       4: areturn

  public scala.Option<java.lang.String> copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method endpointIdentificationAlgorithm:()Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> copy$default$6();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method maximumPacketSize:()Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<java.lang.String>> copy$default$7();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method protocols:()Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIServerName>> copy$default$8();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method serverNames:()Lscala/Option;
       4: areturn

  public scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIMatcher>> copy$default$9();
    Code:
       0: aload_0
       1: invokevirtual #123                // Method sniMatchers:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #126                // String DefaultTLSParameters
       2: areturn

  public int productArity();
    Code:
       0: bipush        13
       2: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 12
                     0: 68
                     1: 75
                     2: 82
                     3: 89
                     4: 96
                     5: 103
                     6: 110
                     7: 117
                     8: 124
                     9: 131
                    10: 141
                    11: 151
                    12: 161
               default: 168
          }
      68: aload_0
      69: invokevirtual #87                 // Method algorithmConstraints:()Lscala/Option;
      72: goto          180
      75: aload_0
      76: invokevirtual #102                // Method applicationProtocols:()Lscala/Option;
      79: goto          180
      82: aload_0
      83: invokevirtual #105                // Method cipherSuites:()Lscala/Option;
      86: goto          180
      89: aload_0
      90: invokevirtual #108                // Method enableRetransmissions:()Lscala/Option;
      93: goto          180
      96: aload_0
      97: invokevirtual #111                // Method endpointIdentificationAlgorithm:()Lscala/Option;
     100: goto          180
     103: aload_0
     104: invokevirtual #114                // Method maximumPacketSize:()Lscala/Option;
     107: goto          180
     110: aload_0
     111: invokevirtual #117                // Method protocols:()Lscala/Option;
     114: goto          180
     117: aload_0
     118: invokevirtual #120                // Method serverNames:()Lscala/Option;
     121: goto          180
     124: aload_0
     125: invokevirtual #123                // Method sniMatchers:()Lscala/Option;
     128: goto          180
     131: aload_0
     132: invokevirtual #90                 // Method useCipherSuitesOrder:()Z
     135: invokestatic  #137                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     138: goto          180
     141: aload_0
     142: invokevirtual #93                 // Method needClientAuth:()Z
     145: invokestatic  #137                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     148: goto          180
     151: aload_0
     152: invokevirtual #96                 // Method wantClientAuth:()Z
     155: invokestatic  #137                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     158: goto          180
     161: aload_0
     162: invokevirtual #99                 // Method handshakeApplicationProtocolSelector:()Lscala/Option;
     165: goto          180
     168: new           #139                // class java/lang/IndexOutOfBoundsException
     171: dup
     172: iload_1
     173: invokestatic  #145                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     176: invokespecial #148                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #158                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #162                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class fs2/io/net/tls/TLSParameters$DefaultTLSParameters
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #167                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #87                 // Method algorithmConstraints:()Lscala/Option;
       8: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #102                // Method applicationProtocols:()Lscala/Option;
      20: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #105                // Method cipherSuites:()Lscala/Option;
      32: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      35: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #108                // Method enableRetransmissions:()Lscala/Option;
      44: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      47: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      50: istore_1
      51: iload_1
      52: aload_0
      53: invokevirtual #111                // Method endpointIdentificationAlgorithm:()Lscala/Option;
      56: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      59: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      62: istore_1
      63: iload_1
      64: aload_0
      65: invokevirtual #114                // Method maximumPacketSize:()Lscala/Option;
      68: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      71: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      74: istore_1
      75: iload_1
      76: aload_0
      77: invokevirtual #117                // Method protocols:()Lscala/Option;
      80: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      83: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      86: istore_1
      87: iload_1
      88: aload_0
      89: invokevirtual #120                // Method serverNames:()Lscala/Option;
      92: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      95: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
      98: istore_1
      99: iload_1
     100: aload_0
     101: invokevirtual #123                // Method sniMatchers:()Lscala/Option;
     104: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
     107: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
     110: istore_1
     111: iload_1
     112: aload_0
     113: invokevirtual #90                 // Method useCipherSuitesOrder:()Z
     116: ifeq          125
     119: sipush        1231
     122: goto          128
     125: sipush        1237
     128: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
     131: istore_1
     132: iload_1
     133: aload_0
     134: invokevirtual #93                 // Method needClientAuth:()Z
     137: ifeq          146
     140: sipush        1231
     143: goto          149
     146: sipush        1237
     149: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
     152: istore_1
     153: iload_1
     154: aload_0
     155: invokevirtual #96                 // Method wantClientAuth:()Z
     158: ifeq          167
     161: sipush        1231
     164: goto          170
     167: sipush        1237
     170: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
     173: istore_1
     174: iload_1
     175: aload_0
     176: invokevirtual #99                 // Method handshakeApplicationProtocolSelector:()Lscala/Option;
     179: invokestatic  #173                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
     182: invokestatic  #177                // Method scala/runtime/Statics.mix:(II)I
     185: istore_1
     186: iload_1
     187: bipush        13
     189: invokestatic  #180                // Method scala/runtime/Statics.finalizeHash:(II)I
     192: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #158                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #184                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     410
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class fs2/io/net/tls/TLSParameters$DefaultTLSParameters
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          414
      31: aload_1
      32: checkcast     #2                  // class fs2/io/net/tls/TLSParameters$DefaultTLSParameters
      35: astore        4
      37: aload_0
      38: invokevirtual #87                 // Method algorithmConstraints:()Lscala/Option;
      41: aload         4
      43: invokevirtual #87                 // Method algorithmConstraints:()Lscala/Option;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          406
      61: aload         5
      63: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          406
      69: aload_0
      70: invokevirtual #102                // Method applicationProtocols:()Lscala/Option;
      73: aload         4
      75: invokevirtual #102                // Method applicationProtocols:()Lscala/Option;
      78: astore        6
      80: dup
      81: ifnonnull     93
      84: pop
      85: aload         6
      87: ifnull        101
      90: goto          406
      93: aload         6
      95: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      98: ifeq          406
     101: aload_0
     102: invokevirtual #105                // Method cipherSuites:()Lscala/Option;
     105: aload         4
     107: invokevirtual #105                // Method cipherSuites:()Lscala/Option;
     110: astore        7
     112: dup
     113: ifnonnull     125
     116: pop
     117: aload         7
     119: ifnull        133
     122: goto          406
     125: aload         7
     127: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     130: ifeq          406
     133: aload_0
     134: invokevirtual #108                // Method enableRetransmissions:()Lscala/Option;
     137: aload         4
     139: invokevirtual #108                // Method enableRetransmissions:()Lscala/Option;
     142: astore        8
     144: dup
     145: ifnonnull     157
     148: pop
     149: aload         8
     151: ifnull        165
     154: goto          406
     157: aload         8
     159: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     162: ifeq          406
     165: aload_0
     166: invokevirtual #111                // Method endpointIdentificationAlgorithm:()Lscala/Option;
     169: aload         4
     171: invokevirtual #111                // Method endpointIdentificationAlgorithm:()Lscala/Option;
     174: astore        9
     176: dup
     177: ifnonnull     189
     180: pop
     181: aload         9
     183: ifnull        197
     186: goto          406
     189: aload         9
     191: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     194: ifeq          406
     197: aload_0
     198: invokevirtual #114                // Method maximumPacketSize:()Lscala/Option;
     201: aload         4
     203: invokevirtual #114                // Method maximumPacketSize:()Lscala/Option;
     206: astore        10
     208: dup
     209: ifnonnull     221
     212: pop
     213: aload         10
     215: ifnull        229
     218: goto          406
     221: aload         10
     223: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     226: ifeq          406
     229: aload_0
     230: invokevirtual #117                // Method protocols:()Lscala/Option;
     233: aload         4
     235: invokevirtual #117                // Method protocols:()Lscala/Option;
     238: astore        11
     240: dup
     241: ifnonnull     253
     244: pop
     245: aload         11
     247: ifnull        261
     250: goto          406
     253: aload         11
     255: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     258: ifeq          406
     261: aload_0
     262: invokevirtual #120                // Method serverNames:()Lscala/Option;
     265: aload         4
     267: invokevirtual #120                // Method serverNames:()Lscala/Option;
     270: astore        12
     272: dup
     273: ifnonnull     285
     276: pop
     277: aload         12
     279: ifnull        293
     282: goto          406
     285: aload         12
     287: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     290: ifeq          406
     293: aload_0
     294: invokevirtual #123                // Method sniMatchers:()Lscala/Option;
     297: aload         4
     299: invokevirtual #123                // Method sniMatchers:()Lscala/Option;
     302: astore        13
     304: dup
     305: ifnonnull     317
     308: pop
     309: aload         13
     311: ifnull        325
     314: goto          406
     317: aload         13
     319: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     322: ifeq          406
     325: aload_0
     326: invokevirtual #90                 // Method useCipherSuitesOrder:()Z
     329: aload         4
     331: invokevirtual #90                 // Method useCipherSuitesOrder:()Z
     334: if_icmpne     406
     337: aload_0
     338: invokevirtual #93                 // Method needClientAuth:()Z
     341: aload         4
     343: invokevirtual #93                 // Method needClientAuth:()Z
     346: if_icmpne     406
     349: aload_0
     350: invokevirtual #96                 // Method wantClientAuth:()Z
     353: aload         4
     355: invokevirtual #96                 // Method wantClientAuth:()Z
     358: if_icmpne     406
     361: aload_0
     362: invokevirtual #99                 // Method handshakeApplicationProtocolSelector:()Lscala/Option;
     365: aload         4
     367: invokevirtual #99                 // Method handshakeApplicationProtocolSelector:()Lscala/Option;
     370: astore        14
     372: dup
     373: ifnonnull     385
     376: pop
     377: aload         14
     379: ifnull        393
     382: goto          406
     385: aload         14
     387: invokevirtual #187                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     390: ifeq          406
     393: aload         4
     395: aload_0
     396: invokevirtual #189                // Method canEqual:(Ljava/lang/Object;)Z
     399: ifeq          406
     402: iconst_1
     403: goto          407
     406: iconst_0
     407: ifeq          414
     410: iconst_1
     411: goto          415
     414: iconst_0
     415: ireturn

  public fs2.io.net.tls.TLSParameters$DefaultTLSParameters(scala.Option<java.security.AlgorithmConstraints>, scala.Option<scala.collection.immutable.List<java.lang.String>>, scala.Option<scala.collection.immutable.List<java.lang.String>>, scala.Option<java.lang.Object>, scala.Option<java.lang.String>, scala.Option<java.lang.Object>, scala.Option<scala.collection.immutable.List<java.lang.String>>, scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIServerName>>, scala.Option<scala.collection.immutable.List<javax.net.ssl.SNIMatcher>>, boolean, boolean, boolean, scala.Option<scala.Function2<javax.net.ssl.SSLEngine, scala.collection.immutable.List<java.lang.String>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field algorithmConstraints:Lscala/Option;
       5: aload_0
       6: aload_2
       7: putfield      #49                 // Field applicationProtocols:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #51                 // Field cipherSuites:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #54                 // Field enableRetransmissions:Lscala/Option;
      21: aload_0
      22: aload         5
      24: putfield      #57                 // Field endpointIdentificationAlgorithm:Lscala/Option;
      27: aload_0
      28: aload         6
      30: putfield      #59                 // Field maximumPacketSize:Lscala/Option;
      33: aload_0
      34: aload         7
      36: putfield      #61                 // Field protocols:Lscala/Option;
      39: aload_0
      40: aload         8
      42: putfield      #64                 // Field serverNames:Lscala/Option;
      45: aload_0
      46: aload         9
      48: putfield      #67                 // Field sniMatchers:Lscala/Option;
      51: aload_0
      52: iload         10
      54: putfield      #70                 // Field useCipherSuitesOrder:Z
      57: aload_0
      58: iload         11
      60: putfield      #72                 // Field needClientAuth:Z
      63: aload_0
      64: iload         12
      66: putfield      #74                 // Field wantClientAuth:Z
      69: aload_0
      70: aload         13
      72: putfield      #77                 // Field handshakeApplicationProtocolSelector:Lscala/Option;
      75: aload_0
      76: invokespecial #195                // Method java/lang/Object."<init>":()V
      79: aload_0
      80: invokestatic  #199                // InterfaceMethod fs2/io/net/tls/TLSParameters.$init$:(Lfs2/io/net/tls/TLSParameters;)V
      83: aload_0
      84: invokestatic  #202                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      87: return
}
