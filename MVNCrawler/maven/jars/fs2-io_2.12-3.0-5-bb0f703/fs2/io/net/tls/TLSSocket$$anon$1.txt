Compiled from "TLSSocket.scala"
public final class fs2.io.net.tls.TLSSocket$$anon$1 implements fs2.io.net.tls.TLSSocket<F> {
  private final fs2.io.net.tls.TLSEngine engine$2;

  private final cats.effect.std.Semaphore readSem$1;

  private final cats.effect.kernel.Async evidence$2$1;

  private final fs2.io.net.Socket socket$1;

  public F write(fs2.Chunk<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #47                 // Field engine$2:Lfs2/io/net/tls/TLSEngine;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod fs2/io/net/tls/TLSEngine.write:(Lfs2/Chunk;)Ljava/lang/Object;
      10: areturn

  private F read0(int);
    Code:
       0: aload_0
       1: getfield      #47                 // Field engine$2:Lfs2/io/net/tls/TLSEngine;
       4: iload_1
       5: invokeinterface #61,  2           // InterfaceMethod fs2/io/net/tls/TLSEngine.read:(I)Ljava/lang/Object;
      10: areturn

  public F readN(int);
    Code:
       0: aload_0
       1: getfield      #66                 // Field readSem$1:Lcats/effect/std/Semaphore;
       4: invokevirtual #72                 // Method cats/effect/std/Semaphore.permit:()Lcats/effect/kernel/Resource;
       7: aload_0
       8: iload_1
       9: invokedynamic #96,  0             // InvokeDynamic #0:apply:(Lfs2/io/net/tls/TLSSocket$$anon$1;I)Lscala/Function1;
      14: aload_0
      15: getfield      #98                 // Field evidence$2$1:Lcats/effect/kernel/Async;
      18: invokevirtual #104                // Method cats/effect/kernel/Resource.use:(Lscala/Function1;Lcats/effect/kernel/MonadCancel;)Ljava/lang/Object;
      21: areturn

  public F read(int);
    Code:
       0: aload_0
       1: getfield      #66                 // Field readSem$1:Lcats/effect/std/Semaphore;
       4: invokevirtual #72                 // Method cats/effect/std/Semaphore.permit:()Lcats/effect/kernel/Resource;
       7: aload_0
       8: iload_1
       9: invokedynamic #109,  0            // InvokeDynamic #1:apply:(Lfs2/io/net/tls/TLSSocket$$anon$1;I)Lscala/Function1;
      14: aload_0
      15: getfield      #98                 // Field evidence$2$1:Lcats/effect/kernel/Async;
      18: invokevirtual #104                // Method cats/effect/kernel/Resource.use:(Lscala/Function1;Lcats/effect/kernel/MonadCancel;)Ljava/lang/Object;
      21: areturn

  public fs2.Stream<F, java.lang.Object> reads();
    Code:
       0: getstatic     #116                // Field fs2/Stream$OptionStreamOps$.MODULE$:Lfs2/Stream$OptionStreamOps$;
       3: getstatic     #121                // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       6: getstatic     #121                // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       9: aload_0
      10: sipush        8192
      13: invokevirtual #122                // Method read:(I)Ljava/lang/Object;
      16: invokevirtual #126                // Method fs2/Stream$.repeatEval:(Ljava/lang/Object;)Lfs2/Stream;
      19: invokevirtual #130                // Method fs2/Stream$.OptionStreamOps:(Lfs2/Stream;)Lfs2/Stream;
      22: invokevirtual #133                // Method fs2/Stream$OptionStreamOps$.unNoneTerminate$extension:(Lfs2/Stream;)Lfs2/Stream;
      25: invokedynamic #142,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      30: getstatic     #147                // Field fs2/compat/NotGiven$.MODULE$:Lfs2/compat/NotGiven$;
      33: invokevirtual #151                // Method fs2/compat/NotGiven$.default:()Lfs2/compat/NotGiven;
      36: invokevirtual #155                // Method fs2/Stream.flatMap:(Lscala/Function1;Lfs2/compat/NotGiven;)Lfs2/Stream;
      39: areturn

  public scala.Function1<fs2.Stream<F, java.lang.Object>, fs2.Stream<F, scala.runtime.Nothing$>> writes();
    Code:
       0: aload_0
       1: invokedynamic #166,  0            // InvokeDynamic #3:apply:(Lfs2/io/net/tls/TLSSocket$$anon$1;)Lscala/Function1;
       6: areturn

  public F endOfOutput();
    Code:
       0: aload_0
       1: getfield      #171                // Field socket$1:Lfs2/io/net/Socket;
       4: invokeinterface #175,  1          // InterfaceMethod fs2/io/net/Socket.endOfOutput:()Ljava/lang/Object;
       9: areturn

  public F endOfInput();
    Code:
       0: aload_0
       1: getfield      #171                // Field socket$1:Lfs2/io/net/Socket;
       4: invokeinterface #178,  1          // InterfaceMethod fs2/io/net/Socket.endOfInput:()Ljava/lang/Object;
       9: areturn

  public F localAddress();
    Code:
       0: aload_0
       1: getfield      #171                // Field socket$1:Lfs2/io/net/Socket;
       4: invokeinterface #181,  1          // InterfaceMethod fs2/io/net/Socket.localAddress:()Ljava/lang/Object;
       9: areturn

  public F remoteAddress();
    Code:
       0: aload_0
       1: getfield      #171                // Field socket$1:Lfs2/io/net/Socket;
       4: invokeinterface #184,  1          // InterfaceMethod fs2/io/net/Socket.remoteAddress:()Ljava/lang/Object;
       9: areturn

  public F beginHandshake();
    Code:
       0: aload_0
       1: getfield      #47                 // Field engine$2:Lfs2/io/net/tls/TLSEngine;
       4: invokeinterface #187,  1          // InterfaceMethod fs2/io/net/tls/TLSEngine.beginHandshake:()Ljava/lang/Object;
       9: areturn

  public F session();
    Code:
       0: aload_0
       1: getfield      #47                 // Field engine$2:Lfs2/io/net/tls/TLSEngine;
       4: invokeinterface #190,  1          // InterfaceMethod fs2/io/net/tls/TLSEngine.session:()Ljava/lang/Object;
       9: areturn

  public F applicationProtocol();
    Code:
       0: aload_0
       1: getfield      #47                 // Field engine$2:Lfs2/io/net/tls/TLSEngine;
       4: invokeinterface #193,  1          // InterfaceMethod fs2/io/net/tls/TLSEngine.applicationProtocol:()Ljava/lang/Object;
       9: areturn

  public F isOpen();
    Code:
       0: aload_0
       1: getfield      #171                // Field socket$1:Lfs2/io/net/Socket;
       4: invokeinterface #196,  1          // InterfaceMethod fs2/io/net/Socket.isOpen:()Ljava/lang/Object;
       9: areturn

  public static final java.lang.Object $anonfun$readN$2(fs2.io.net.tls.TLSSocket$$anon$1, fs2.Chunk, int, scala.Option);
    Code:
       0: aload_3
       1: astore        5
       3: aload         5
       5: instanceof    #204                // class scala/Some
       8: ifeq          44
      11: aload         5
      13: checkcast     #204                // class scala/Some
      16: astore        6
      18: aload         6
      20: invokevirtual #207                // Method scala/Some.value:()Ljava/lang/Object;
      23: checkcast     #209                // class fs2/Chunk
      26: astore        7
      28: aload_0
      29: aload_1
      30: aload         7
      32: invokevirtual #213                // Method fs2/Chunk.$plus$plus:(Lfs2/Chunk;)Lfs2/Chunk;
      35: iload_2
      36: invokespecial #217                // Method go$1:(Lfs2/Chunk;I)Ljava/lang/Object;
      39: astore        4
      41: goto          92
      44: goto          47
      47: getstatic     #222                // Field scala/None$.MODULE$:Lscala/None$;
      50: aload         5
      52: invokevirtual #226                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifeq          79
      58: getstatic     #231                // Field cats/Applicative$.MODULE$:Lcats/Applicative$;
      61: aload_0
      62: getfield      #98                 // Field evidence$2$1:Lcats/effect/kernel/Async;
      65: invokevirtual #234                // Method cats/Applicative$.apply:(Lcats/Applicative;)Lcats/Applicative;
      68: aload_1
      69: invokeinterface #239,  2          // InterfaceMethod cats/Applicative.pure:(Ljava/lang/Object;)Ljava/lang/Object;
      74: astore        4
      76: goto          92
      79: goto          82
      82: new           #241                // class scala/MatchError
      85: dup
      86: aload         5
      88: invokespecial #245                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      91: athrow
      92: aload         4
      94: areturn

  private final java.lang.Object go$1(fs2.Chunk, int);
    Code:
       0: iload_2
       1: aload_1
       2: invokevirtual #254                // Method fs2/Chunk.size:()I
       5: isub
       6: istore_3
       7: iload_3
       8: iconst_0
       9: if_icmpgt     31
      12: getstatic     #231                // Field cats/Applicative$.MODULE$:Lcats/Applicative$;
      15: aload_0
      16: getfield      #98                 // Field evidence$2$1:Lcats/effect/kernel/Async;
      19: invokevirtual #234                // Method cats/Applicative$.apply:(Lcats/Applicative;)Lcats/Applicative;
      22: aload_1
      23: invokeinterface #239,  2          // InterfaceMethod cats/Applicative.pure:(Ljava/lang/Object;)Ljava/lang/Object;
      28: goto          59
      31: getstatic     #257                // Field cats/syntax/package$all$.MODULE$:Lcats/syntax/package$all$;
      34: aload_0
      35: iload_3
      36: invokespecial #259                // Method read0:(I)Ljava/lang/Object;
      39: aload_0
      40: getfield      #98                 // Field evidence$2$1:Lcats/effect/kernel/Async;
      43: invokevirtual #263                // Method cats/syntax/package$all$.toFlatMapOps:(Ljava/lang/Object;Lcats/FlatMap;)Lcats/FlatMap$Ops;
      46: aload_0
      47: aload_1
      48: iload_2
      49: invokedynamic #271,  0            // InvokeDynamic #4:apply:(Lfs2/io/net/tls/TLSSocket$$anon$1;Lfs2/Chunk;I)Lscala/Function1;
      54: invokeinterface #274,  2          // InterfaceMethod cats/FlatMap$Ops.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      59: areturn

  public static final java.lang.Object $anonfun$readN$1(fs2.io.net.tls.TLSSocket$$anon$1, int, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: getstatic     #281                // Field fs2/Chunk$.MODULE$:Lfs2/Chunk$;
       4: invokevirtual #285                // Method fs2/Chunk$.empty:()Lfs2/Chunk;
       7: iload_1
       8: invokespecial #217                // Method go$1:(Lfs2/Chunk;I)Ljava/lang/Object;
      11: areturn

  public static final java.lang.Object $anonfun$read$1(fs2.io.net.tls.TLSSocket$$anon$1, int, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #259                // Method read0:(I)Ljava/lang/Object;
       5: areturn

  public static final fs2.Stream $anonfun$reads$1(fs2.Chunk);
    Code:
       0: getstatic     #121                // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       3: aload_0
       4: invokevirtual #291                // Method fs2/Stream$.chunk:(Lfs2/Chunk;)Lfs2/Stream;
       7: areturn

  public static final java.lang.Object $anonfun$writes$2(fs2.io.net.tls.TLSSocket$$anon$1, fs2.Chunk);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #294                // Method write:(Lfs2/Chunk;)Ljava/lang/Object;
       5: areturn

  public static final fs2.Stream $anonfun$writes$1(fs2.io.net.tls.TLSSocket$$anon$1, fs2.Stream);
    Code:
       0: aload_1
       1: invokevirtual #298                // Method fs2/Stream.chunks:()Lfs2/Stream;
       4: aload_0
       5: invokedynamic #303,  0            // InvokeDynamic #5:apply:(Lfs2/io/net/tls/TLSSocket$$anon$1;)Lscala/Function1;
      10: invokevirtual #307                // Method fs2/Stream.foreach:(Lscala/Function1;)Lfs2/Stream;
      13: areturn

  public fs2.io.net.tls.TLSSocket$$anon$1(fs2.io.net.tls.TLSEngine, cats.effect.std.Semaphore, cats.effect.kernel.Async, fs2.io.net.Socket);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field engine$2:Lfs2/io/net/tls/TLSEngine;
       5: aload_0
       6: aload_2
       7: putfield      #66                 // Field readSem$1:Lcats/effect/std/Semaphore;
      10: aload_0
      11: aload_3
      12: putfield      #98                 // Field evidence$2$1:Lcats/effect/kernel/Async;
      15: aload_0
      16: aload         4
      18: putfield      #171                // Field socket$1:Lfs2/io/net/Socket;
      21: aload_0
      22: invokespecial #312                // Method java/lang/Object."<init>":()V
      25: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #324,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
