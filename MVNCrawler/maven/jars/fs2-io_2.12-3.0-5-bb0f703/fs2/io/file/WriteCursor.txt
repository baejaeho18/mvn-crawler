Compiled from "WriteCursor.scala"
public final class fs2.io.file.WriteCursor<F> implements scala.Product, scala.Serializable {
  private final fs2.io.file.FileHandle<F> file;

  private final long offset;

  public static <F> scala.Option<scala.Tuple2<fs2.io.file.FileHandle<F>, java.lang.Object>> unapply(fs2.io.file.WriteCursor<F>);
    Code:
       0: getstatic     #51                 // Field fs2/io/file/WriteCursor$.MODULE$:Lfs2/io/file/WriteCursor$;
       3: aload_0
       4: invokevirtual #53                 // Method fs2/io/file/WriteCursor$.unapply:(Lfs2/io/file/WriteCursor;)Lscala/Option;
       7: areturn

  public static <F> fs2.io.file.WriteCursor<F> apply(fs2.io.file.FileHandle<F>, long);
    Code:
       0: getstatic     #51                 // Field fs2/io/file/WriteCursor$.MODULE$:Lfs2/io/file/WriteCursor$;
       3: aload_0
       4: lload_1
       5: invokevirtual #58                 // Method fs2/io/file/WriteCursor$.apply:(Lfs2/io/file/FileHandle;J)Lfs2/io/file/WriteCursor;
       8: areturn

  public static <F> F fromFileHandle(fs2.io.file.FileHandle<F>, boolean, cats.effect.kernel.Async<F>);
    Code:
       0: getstatic     #51                 // Field fs2/io/file/WriteCursor$.MODULE$:Lfs2/io/file/WriteCursor$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #65                 // Method fs2/io/file/WriteCursor$.fromFileHandle:(Lfs2/io/file/FileHandle;ZLcats/effect/kernel/Async;)Ljava/lang/Object;
       9: areturn

  public static <F> scala.collection.Seq<java.nio.file.OpenOption> fromPath$default$2();
    Code:
       0: getstatic     #51                 // Field fs2/io/file/WriteCursor$.MODULE$:Lfs2/io/file/WriteCursor$;
       3: invokevirtual #70                 // Method fs2/io/file/WriteCursor$.fromPath$default$2:()Lscala/collection/Seq;
       6: areturn

  public static <F> cats.effect.kernel.Resource<F, fs2.io.file.WriteCursor<F>> fromPath(java.nio.file.Path, scala.collection.Seq<java.nio.file.OpenOption>, cats.effect.kernel.Async<F>);
    Code:
       0: getstatic     #51                 // Field fs2/io/file/WriteCursor$.MODULE$:Lfs2/io/file/WriteCursor$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #78                 // Method fs2/io/file/WriteCursor$.fromPath:(Ljava/nio/file/Path;Lscala/collection/Seq;Lcats/effect/kernel/Async;)Lcats/effect/kernel/Resource;
       9: areturn

  public fs2.io.file.FileHandle<F> file();
    Code:
       0: aload_0
       1: getfield      #82                 // Field file:Lfs2/io/file/FileHandle;
       4: areturn

  public long offset();
    Code:
       0: aload_0
       1: getfield      #87                 // Field offset:J
       4: lreturn

  public fs2.io.file.WriteCursor<F> seek(long);
    Code:
       0: new           #2                  // class fs2/io/file/WriteCursor
       3: dup
       4: aload_0
       5: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
       8: lload_1
       9: invokespecial #97                 // Method "<init>":(Lfs2/io/file/FileHandle;J)V
      12: areturn

  public F write(fs2.Chunk<java.lang.Object>, cats.Monad<F>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #106                // Field cats/arrow/FunctionK$.MODULE$:Lcats/arrow/FunctionK$;
       5: invokevirtual #110                // Method cats/arrow/FunctionK$.id:()Lcats/arrow/FunctionK;
       8: aload_2
       9: invokespecial #114                // Method write_:(Lfs2/Chunk;Lcats/arrow/FunctionK;Lcats/Monad;)Ljava/lang/Object;
      12: areturn

  public fs2.Pull<F, scala.runtime.Nothing$, fs2.io.file.WriteCursor<F>> writePull(fs2.Chunk<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #124                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
       5: invokevirtual #127                // Method fs2/Pull$.functionKInstance:()Lcats/arrow/FunctionK;
       8: getstatic     #124                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      11: invokevirtual #131                // Method fs2/Pull$.monadErrorInstance:()Lcats/MonadError;
      14: invokespecial #114                // Method write_:(Lfs2/Chunk;Lcats/arrow/FunctionK;Lcats/Monad;)Ljava/lang/Object;
      17: checkcast     #133                // class fs2/Pull
      20: areturn

  private <G> G write_(fs2.Chunk<java.lang.Object>, cats.arrow.FunctionK<F, G>, cats.Monad<G>);
    Code:
       0: getstatic     #139                // Field cats/syntax/package$all$.MODULE$:Lcats/syntax/package$all$;
       3: aload_2
       4: aload_0
       5: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
       8: aload_1
       9: aload_0
      10: invokevirtual #141                // Method offset:()J
      13: invokeinterface #146,  4          // InterfaceMethod fs2/io/file/FileHandle.write:(Lfs2/Chunk;J)Ljava/lang/Object;
      18: invokeinterface #151,  2          // InterfaceMethod cats/arrow/FunctionK.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: aload_3
      24: invokevirtual #155                // Method cats/syntax/package$all$.toFlatMapOps:(Ljava/lang/Object;Lcats/FlatMap;)Lcats/FlatMap$Ops;
      27: aload_0
      28: aload_1
      29: aload_3
      30: aload_2
      31: invokedynamic #173,  0            // InvokeDynamic #0:apply:(Lfs2/io/file/WriteCursor;Lfs2/Chunk;Lcats/Monad;Lcats/arrow/FunctionK;)Lscala/Function1;
      36: invokeinterface #177,  2          // InterfaceMethod cats/FlatMap$Ops.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      41: areturn

  public fs2.Pull<F, scala.runtime.Nothing$, fs2.io.file.WriteCursor<F>> writeAll(fs2.Stream<F, java.lang.Object>);
    Code:
       0: getstatic     #185                // Field fs2/Stream$ToPull$.MODULE$:Lfs2/Stream$ToPull$;
       3: getstatic     #188                // Field fs2/Stream$InvariantOps$.MODULE$:Lfs2/Stream$InvariantOps$;
       6: getstatic     #193                // Field fs2/Stream$.MODULE$:Lfs2/Stream$;
       9: aload_1
      10: invokevirtual #197                // Method fs2/Stream$.InvariantOps:(Lfs2/Stream;)Lfs2/Stream;
      13: invokevirtual #200                // Method fs2/Stream$InvariantOps$.pull$extension:(Lfs2/Stream;)Lfs2/Stream;
      16: invokevirtual #203                // Method fs2/Stream$ToPull$.uncons$extension:(Lfs2/Stream;)Lfs2/Pull;
      19: aload_0
      20: invokedynamic #214,  0            // InvokeDynamic #1:apply:(Lfs2/io/file/WriteCursor;)Lscala/Function1;
      25: invokevirtual #217                // Method fs2/Pull.flatMap:(Lscala/Function1;)Lfs2/Pull;
      28: areturn

  public <F> fs2.io.file.WriteCursor<F> copy(fs2.io.file.FileHandle<F>, long);
    Code:
       0: new           #2                  // class fs2/io/file/WriteCursor
       3: dup
       4: aload_1
       5: lload_2
       6: invokespecial #97                 // Method "<init>":(Lfs2/io/file/FileHandle;J)V
       9: areturn

  public <F> fs2.io.file.FileHandle<F> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
       4: areturn

  public <F> long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method offset:()J
       4: lreturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #227                // String WriteCursor
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 24
                     1: 31
               default: 41
          }
      24: aload_0
      25: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
      28: goto          53
      31: aload_0
      32: invokevirtual #141                // Method offset:()J
      35: invokestatic  #238                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      38: goto          53
      41: new           #240                // class java/lang/IndexOutOfBoundsException
      44: dup
      45: iload_1
      46: invokestatic  #246                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      49: invokespecial #249                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #258                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #262                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class fs2/io/file/WriteCursor
       4: ireturn

  public int hashCode();
    Code:
       0: ldc_w         #267                // int -889275714
       3: istore_1
       4: iload_1
       5: aload_0
       6: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
       9: invokestatic  #273                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      12: invokestatic  #277                // Method scala/runtime/Statics.mix:(II)I
      15: istore_1
      16: iload_1
      17: aload_0
      18: invokevirtual #141                // Method offset:()J
      21: invokestatic  #281                // Method scala/runtime/Statics.longHash:(J)I
      24: invokestatic  #277                // Method scala/runtime/Statics.mix:(II)I
      27: istore_1
      28: iload_1
      29: iconst_2
      30: invokestatic  #284                // Method scala/runtime/Statics.finalizeHash:(II)I
      33: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #258                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #288                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     90
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class fs2/io/file/WriteCursor
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          94
      31: aload_1
      32: checkcast     #2                  // class fs2/io/file/WriteCursor
      35: astore        4
      37: aload_0
      38: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
      41: aload         4
      43: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          86
      61: aload         5
      63: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          86
      69: aload_0
      70: invokevirtual #141                // Method offset:()J
      73: aload         4
      75: invokevirtual #141                // Method offset:()J
      78: lcmp
      79: ifne          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn

  public static final java.lang.Object $anonfun$write_$1(fs2.io.file.WriteCursor, fs2.Chunk, cats.Monad, cats.arrow.FunctionK, int);
    Code:
       0: new           #2                  // class fs2/io/file/WriteCursor
       3: dup
       4: aload_0
       5: invokevirtual #93                 // Method file:()Lfs2/io/file/FileHandle;
       8: aload_0
       9: invokevirtual #141                // Method offset:()J
      12: iload         4
      14: i2l
      15: ladd
      16: invokespecial #97                 // Method "<init>":(Lfs2/io/file/FileHandle;J)V
      19: astore        5
      21: iload         4
      23: aload_1
      24: invokevirtual #303                // Method fs2/Chunk.size:()I
      27: if_icmpne     48
      30: getstatic     #308                // Field cats/syntax/ApplicativeIdOps$.MODULE$:Lcats/syntax/ApplicativeIdOps$;
      33: getstatic     #139                // Field cats/syntax/package$all$.MODULE$:Lcats/syntax/package$all$;
      36: aload         5
      38: invokevirtual #311                // Method cats/syntax/package$all$.catsSyntaxApplicativeId:(Ljava/lang/Object;)Ljava/lang/Object;
      41: aload_2
      42: invokevirtual #315                // Method cats/syntax/ApplicativeIdOps$.pure$extension:(Ljava/lang/Object;Lcats/Applicative;)Ljava/lang/Object;
      45: goto          61
      48: aload         5
      50: aload_1
      51: iload         4
      53: invokevirtual #319                // Method fs2/Chunk.drop:(I)Lfs2/Chunk;
      56: aload_3
      57: aload_2
      58: invokespecial #114                // Method write_:(Lfs2/Chunk;Lcats/arrow/FunctionK;Lcats/Monad;)Ljava/lang/Object;
      61: areturn

  public static final fs2.Pull $anonfun$writeAll$2(fs2.Stream, fs2.io.file.WriteCursor);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #325                // Method writeAll:(Lfs2/Stream;)Lfs2/Pull;
       5: areturn

  public static final fs2.Pull $anonfun$writeAll$1(fs2.io.file.WriteCursor, scala.Option);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #328                // class scala/Some
       6: ifeq          73
       9: aload_3
      10: checkcast     #328                // class scala/Some
      13: astore        4
      15: aload         4
      17: invokevirtual #332                // Method scala/Some.value:()Ljava/lang/Object;
      20: checkcast     #334                // class scala/Tuple2
      23: astore        5
      25: aload         5
      27: ifnull        70
      30: aload         5
      32: invokevirtual #337                // Method scala/Tuple2._1:()Ljava/lang/Object;
      35: checkcast     #300                // class fs2/Chunk
      38: astore        6
      40: aload         5
      42: invokevirtual #340                // Method scala/Tuple2._2:()Ljava/lang/Object;
      45: checkcast     #27                 // class fs2/Stream
      48: astore        7
      50: aload_0
      51: aload         6
      53: invokevirtual #342                // Method writePull:(Lfs2/Chunk;)Lfs2/Pull;
      56: aload         7
      58: invokedynamic #350,  0            // InvokeDynamic #2:apply:(Lfs2/Stream;)Lscala/Function1;
      63: invokevirtual #217                // Method fs2/Pull.flatMap:(Lscala/Function1;)Lfs2/Pull;
      66: astore_2
      67: goto          109
      70: goto          76
      73: goto          76
      76: getstatic     #355                // Field scala/None$.MODULE$:Lscala/None$;
      79: aload_3
      80: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      83: ifeq          97
      86: getstatic     #124                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      89: aload_0
      90: invokevirtual #359                // Method fs2/Pull$.pure:(Ljava/lang/Object;)Lfs2/Pull;
      93: astore_2
      94: goto          109
      97: goto          100
     100: new           #361                // class scala/MatchError
     103: dup
     104: aload_3
     105: invokespecial #364                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     108: athrow
     109: aload_2
     110: areturn

  public fs2.io.file.WriteCursor(fs2.io.file.FileHandle<F>, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field file:Lfs2/io/file/FileHandle;
       5: aload_0
       6: lload_2
       7: putfield      #87                 // Field offset:J
      10: aload_0
      11: invokespecial #373                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #377                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      18: return

  public static final java.lang.Object $anonfun$write_$1$adapted(fs2.io.file.WriteCursor, fs2.Chunk, cats.Monad, cats.arrow.FunctionK, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #380                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokestatic  #382                // Method $anonfun$write_$1:(Lfs2/io/file/WriteCursor;Lfs2/Chunk;Lcats/Monad;Lcats/arrow/FunctionK;I)Ljava/lang/Object;
      12: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #394,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
