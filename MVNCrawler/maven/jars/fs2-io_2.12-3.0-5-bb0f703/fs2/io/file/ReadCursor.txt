Compiled from "ReadCursor.scala"
public final class fs2.io.file.ReadCursor<F> implements scala.Product, scala.Serializable {
  private final fs2.io.file.FileHandle<F> file;

  private final long offset;

  public static <F> scala.Option<scala.Tuple2<fs2.io.file.FileHandle<F>, java.lang.Object>> unapply(fs2.io.file.ReadCursor<F>);
    Code:
       0: getstatic     #43                 // Field fs2/io/file/ReadCursor$.MODULE$:Lfs2/io/file/ReadCursor$;
       3: aload_0
       4: invokevirtual #45                 // Method fs2/io/file/ReadCursor$.unapply:(Lfs2/io/file/ReadCursor;)Lscala/Option;
       7: areturn

  public static <F> fs2.io.file.ReadCursor<F> apply(fs2.io.file.FileHandle<F>, long);
    Code:
       0: getstatic     #43                 // Field fs2/io/file/ReadCursor$.MODULE$:Lfs2/io/file/ReadCursor$;
       3: aload_0
       4: lload_1
       5: invokevirtual #50                 // Method fs2/io/file/ReadCursor$.apply:(Lfs2/io/file/FileHandle;J)Lfs2/io/file/ReadCursor;
       8: areturn

  public static <F> scala.collection.Seq<java.nio.file.OpenOption> fromPath$default$2();
    Code:
       0: getstatic     #43                 // Field fs2/io/file/ReadCursor$.MODULE$:Lfs2/io/file/ReadCursor$;
       3: invokevirtual #55                 // Method fs2/io/file/ReadCursor$.fromPath$default$2:()Lscala/collection/Seq;
       6: areturn

  public static <F> cats.effect.kernel.Resource<F, fs2.io.file.ReadCursor<F>> fromPath(java.nio.file.Path, scala.collection.Seq<java.nio.file.OpenOption>, cats.effect.kernel.Async<F>);
    Code:
       0: getstatic     #43                 // Field fs2/io/file/ReadCursor$.MODULE$:Lfs2/io/file/ReadCursor$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #63                 // Method fs2/io/file/ReadCursor$.fromPath:(Ljava/nio/file/Path;Lscala/collection/Seq;Lcats/effect/kernel/Async;)Lcats/effect/kernel/Resource;
       9: areturn

  public fs2.io.file.FileHandle<F> file();
    Code:
       0: aload_0
       1: getfield      #67                 // Field file:Lfs2/io/file/FileHandle;
       4: areturn

  public long offset();
    Code:
       0: aload_0
       1: getfield      #72                 // Field offset:J
       4: lreturn

  public F read(int, cats.Functor<F>);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #82                 // Field cats/arrow/FunctionK$.MODULE$:Lcats/arrow/FunctionK$;
       5: invokevirtual #86                 // Method cats/arrow/FunctionK$.id:()Lcats/arrow/FunctionK;
       8: aload_2
       9: invokespecial #90                 // Method read_:(ILcats/arrow/FunctionK;Lcats/Functor;)Ljava/lang/Object;
      12: areturn

  public fs2.Pull<F, scala.runtime.Nothing$, scala.Option<scala.Tuple2<fs2.io.file.ReadCursor<F>, fs2.Chunk<java.lang.Object>>>> readPull(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
       5: invokevirtual #103                // Method fs2/Pull$.functionKInstance:()Lcats/arrow/FunctionK;
       8: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      11: invokevirtual #107                // Method fs2/Pull$.monadErrorInstance:()Lcats/MonadError;
      14: invokespecial #90                 // Method read_:(ILcats/arrow/FunctionK;Lcats/Functor;)Ljava/lang/Object;
      17: checkcast     #109                // class fs2/Pull
      20: areturn

  private <G> G read_(int, cats.arrow.FunctionK<F, G>, cats.Functor<G>);
    Code:
       0: getstatic     #115                // Field cats/syntax/package$all$.MODULE$:Lcats/syntax/package$all$;
       3: aload_2
       4: aload_0
       5: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
       8: iload_1
       9: aload_0
      10: invokevirtual #119                // Method offset:()J
      13: invokeinterface #124,  4          // InterfaceMethod fs2/io/file/FileHandle.read:(IJ)Ljava/lang/Object;
      18: invokeinterface #129,  2          // InterfaceMethod cats/arrow/FunctionK.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      23: aload_3
      24: invokevirtual #133                // Method cats/syntax/package$all$.toFunctorOps:(Ljava/lang/Object;Lcats/Functor;)Lcats/Functor$Ops;
      27: aload_0
      28: invokedynamic #153,  0            // InvokeDynamic #0:apply:(Lfs2/io/file/ReadCursor;)Lscala/Function1;
      33: invokeinterface #157,  2          // InterfaceMethod cats/Functor$Ops.map:(Lscala/Function1;)Ljava/lang/Object;
      38: areturn

  public fs2.Pull<F, java.lang.Object, fs2.io.file.ReadCursor<F>> readAll(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #162                // Method readPull:(I)Lfs2/Pull;
       5: aload_0
       6: iload_1
       7: invokedynamic #172,  0            // InvokeDynamic #1:apply:(Lfs2/io/file/ReadCursor;I)Lscala/Function1;
      12: invokevirtual #176                // Method fs2/Pull.flatMap:(Lscala/Function1;)Lfs2/Pull;
      15: areturn

  public fs2.Pull<F, java.lang.Object, fs2.io.file.ReadCursor<F>> readUntil(int, long);
    Code:
       0: aload_0
       1: invokevirtual #119                // Method offset:()J
       4: lload_2
       5: lcmp
       6: ifge          66
       9: getstatic     #185                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      12: getstatic     #190                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: getstatic     #195                // Field scala/runtime/RichLong$.MODULE$:Lscala/runtime/RichLong$;
      18: getstatic     #190                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: lload_2
      22: aload_0
      23: invokevirtual #119                // Method offset:()J
      26: lsub
      27: invokevirtual #199                // Method scala/Predef$.longWrapper:(J)J
      30: ldc2_w        #200                // long 2147483647l
      33: invokevirtual #205                // Method scala/runtime/RichLong$.min$extension:(JJ)J
      36: l2i
      37: invokevirtual #209                // Method scala/Predef$.intWrapper:(I)I
      40: iload_1
      41: invokevirtual #212                // Method scala/runtime/RichInt$.min$extension:(II)I
      44: istore        4
      46: aload_0
      47: iload         4
      49: invokevirtual #162                // Method readPull:(I)Lfs2/Pull;
      52: aload_0
      53: iload_1
      54: lload_2
      55: invokedynamic #220,  0            // InvokeDynamic #2:apply:(Lfs2/io/file/ReadCursor;IJ)Lscala/Function1;
      60: invokevirtual #176                // Method fs2/Pull.flatMap:(Lscala/Function1;)Lfs2/Pull;
      63: goto          73
      66: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      69: aload_0
      70: invokevirtual #224                // Method fs2/Pull$.pure:(Ljava/lang/Object;)Lfs2/Pull;
      73: areturn

  public fs2.io.file.ReadCursor<F> seek(long);
    Code:
       0: new           #2                  // class fs2/io/file/ReadCursor
       3: dup
       4: aload_0
       5: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
       8: lload_1
       9: invokespecial #233                // Method "<init>":(Lfs2/io/file/FileHandle;J)V
      12: areturn

  public fs2.Pull<F, java.lang.Object, fs2.io.file.ReadCursor<F>> tail(int, scala.concurrent.duration.FiniteDuration, cats.effect.kernel.GenTemporal<F, java.lang.Throwable>);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #162                // Method readPull:(I)Lfs2/Pull;
       5: aload_0
       6: iload_1
       7: aload_2
       8: aload_3
       9: invokedynamic #246,  0            // InvokeDynamic #3:apply:(Lfs2/io/file/ReadCursor;ILscala/concurrent/duration/FiniteDuration;Lcats/effect/kernel/GenTemporal;)Lscala/Function1;
      14: invokevirtual #176                // Method fs2/Pull.flatMap:(Lscala/Function1;)Lfs2/Pull;
      17: areturn

  public <F> fs2.io.file.ReadCursor<F> copy(fs2.io.file.FileHandle<F>, long);
    Code:
       0: new           #2                  // class fs2/io/file/ReadCursor
       3: dup
       4: aload_1
       5: lload_2
       6: invokespecial #233                // Method "<init>":(Lfs2/io/file/FileHandle;J)V
       9: areturn

  public <F> fs2.io.file.FileHandle<F> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
       4: areturn

  public <F> long copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method offset:()J
       4: lreturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #257                // String ReadCursor
       3: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 24
                     1: 31
               default: 41
          }
      24: aload_0
      25: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
      28: goto          53
      31: aload_0
      32: invokevirtual #119                // Method offset:()J
      35: invokestatic  #268                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      38: goto          53
      41: new           #270                // class java/lang/IndexOutOfBoundsException
      44: dup
      45: iload_1
      46: invokestatic  #276                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      49: invokespecial #279                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #287                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #291                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class fs2/io/file/ReadCursor
       4: ireturn

  public int hashCode();
    Code:
       0: ldc_w         #296                // int -889275714
       3: istore_1
       4: iload_1
       5: aload_0
       6: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
       9: invokestatic  #302                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      12: invokestatic  #305                // Method scala/runtime/Statics.mix:(II)I
      15: istore_1
      16: iload_1
      17: aload_0
      18: invokevirtual #119                // Method offset:()J
      21: invokestatic  #309                // Method scala/runtime/Statics.longHash:(J)I
      24: invokestatic  #305                // Method scala/runtime/Statics.mix:(II)I
      27: istore_1
      28: iload_1
      29: iconst_2
      30: invokestatic  #312                // Method scala/runtime/Statics.finalizeHash:(II)I
      33: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #287                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #316                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     90
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class fs2/io/file/ReadCursor
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          94
      31: aload_1
      32: checkcast     #2                  // class fs2/io/file/ReadCursor
      35: astore        4
      37: aload_0
      38: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
      41: aload         4
      43: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          86
      61: aload         5
      63: invokevirtual #319                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          86
      69: aload_0
      70: invokevirtual #119                // Method offset:()J
      73: aload         4
      75: invokevirtual #119                // Method offset:()J
      78: lcmp
      79: ifne          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn

  public static final scala.Tuple2 $anonfun$read_$2(fs2.io.file.ReadCursor, fs2.Chunk);
    Code:
       0: new           #2                  // class fs2/io/file/ReadCursor
       3: dup
       4: aload_0
       5: invokevirtual #117                // Method file:()Lfs2/io/file/FileHandle;
       8: aload_0
       9: invokevirtual #119                // Method offset:()J
      12: aload_1
      13: invokevirtual #328                // Method fs2/Chunk.size:()I
      16: i2l
      17: ladd
      18: invokespecial #233                // Method "<init>":(Lfs2/io/file/FileHandle;J)V
      21: astore_2
      22: new           #330                // class scala/Tuple2
      25: dup
      26: aload_2
      27: aload_1
      28: invokespecial #333                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      31: areturn

  public static final scala.Option $anonfun$read_$1(fs2.io.file.ReadCursor, scala.Option);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #341,  0            // InvokeDynamic #4:apply:(Lfs2/io/file/ReadCursor;)Lscala/Function1;
       7: invokevirtual #346                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      10: areturn

  public static final fs2.Pull $anonfun$readAll$2(fs2.io.file.ReadCursor, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #353                // Method readAll:(I)Lfs2/Pull;
       5: areturn

  public static final fs2.Pull $anonfun$readAll$1(fs2.io.file.ReadCursor, int, scala.Option);
    Code:
       0: aload_2
       1: astore        4
       3: aload         4
       5: instanceof    #356                // class scala/Some
       8: ifeq          79
      11: aload         4
      13: checkcast     #356                // class scala/Some
      16: astore        5
      18: aload         5
      20: invokevirtual #360                // Method scala/Some.value:()Ljava/lang/Object;
      23: checkcast     #330                // class scala/Tuple2
      26: astore        6
      28: aload         6
      30: ifnull        76
      33: aload         6
      35: invokevirtual #363                // Method scala/Tuple2._1:()Ljava/lang/Object;
      38: checkcast     #2                  // class fs2/io/file/ReadCursor
      41: astore        7
      43: aload         6
      45: invokevirtual #366                // Method scala/Tuple2._2:()Ljava/lang/Object;
      48: checkcast     #325                // class fs2/Chunk
      51: astore        8
      53: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      56: aload         8
      58: invokevirtual #370                // Method fs2/Pull$.output:(Lfs2/Chunk;)Lfs2/Pull;
      61: aload         7
      63: iload_1
      64: invokedynamic #379,  0            // InvokeDynamic #5:apply:(Lfs2/io/file/ReadCursor;I)Lscala/Function0;
      69: invokevirtual #383                // Method fs2/Pull.$greater$greater:(Lscala/Function0;)Lfs2/Pull;
      72: astore_3
      73: goto          117
      76: goto          82
      79: goto          82
      82: getstatic     #388                // Field scala/None$.MODULE$:Lscala/None$;
      85: aload         4
      87: invokevirtual #319                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifeq          104
      93: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      96: aload_0
      97: invokevirtual #224                // Method fs2/Pull$.pure:(Ljava/lang/Object;)Lfs2/Pull;
     100: astore_3
     101: goto          117
     104: goto          107
     107: new           #390                // class scala/MatchError
     110: dup
     111: aload         4
     113: invokespecial #393                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     116: athrow
     117: aload_3
     118: areturn

  public static final fs2.Pull $anonfun$readUntil$2(fs2.io.file.ReadCursor, int, long);
    Code:
       0: aload_0
       1: iload_1
       2: lload_2
       3: invokevirtual #400                // Method readUntil:(IJ)Lfs2/Pull;
       6: areturn

  public static final fs2.Pull $anonfun$readUntil$1(fs2.io.file.ReadCursor, int, long, scala.Option);
    Code:
       0: aload         4
       2: astore        6
       4: aload         6
       6: instanceof    #356                // class scala/Some
       9: ifeq          82
      12: aload         6
      14: checkcast     #356                // class scala/Some
      17: astore        7
      19: aload         7
      21: invokevirtual #360                // Method scala/Some.value:()Ljava/lang/Object;
      24: checkcast     #330                // class scala/Tuple2
      27: astore        8
      29: aload         8
      31: ifnull        79
      34: aload         8
      36: invokevirtual #363                // Method scala/Tuple2._1:()Ljava/lang/Object;
      39: checkcast     #2                  // class fs2/io/file/ReadCursor
      42: astore        9
      44: aload         8
      46: invokevirtual #366                // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #325                // class fs2/Chunk
      52: astore        10
      54: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      57: aload         10
      59: invokevirtual #370                // Method fs2/Pull$.output:(Lfs2/Chunk;)Lfs2/Pull;
      62: aload         9
      64: iload_1
      65: lload_2
      66: invokedynamic #406,  0            // InvokeDynamic #6:apply:(Lfs2/io/file/ReadCursor;IJ)Lscala/Function0;
      71: invokevirtual #383                // Method fs2/Pull.$greater$greater:(Lscala/Function0;)Lfs2/Pull;
      74: astore        5
      76: goto          121
      79: goto          85
      82: goto          85
      85: getstatic     #388                // Field scala/None$.MODULE$:Lscala/None$;
      88: aload         6
      90: invokevirtual #319                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      93: ifeq          108
      96: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      99: aload_0
     100: invokevirtual #224                // Method fs2/Pull$.pure:(Ljava/lang/Object;)Lfs2/Pull;
     103: astore        5
     105: goto          121
     108: goto          111
     111: new           #390                // class scala/MatchError
     114: dup
     115: aload         6
     117: invokespecial #393                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     120: athrow
     121: aload         5
     123: areturn

  public static final fs2.Pull $anonfun$tail$2(fs2.io.file.ReadCursor, int, scala.concurrent.duration.FiniteDuration, cats.effect.kernel.GenTemporal);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #414                // Method tail:(ILscala/concurrent/duration/FiniteDuration;Lcats/effect/kernel/GenTemporal;)Lfs2/Pull;
       7: areturn

  public static final fs2.Pull $anonfun$tail$3(fs2.io.file.ReadCursor, int, scala.concurrent.duration.FiniteDuration, cats.effect.kernel.GenTemporal);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #414                // Method tail:(ILscala/concurrent/duration/FiniteDuration;Lcats/effect/kernel/GenTemporal;)Lfs2/Pull;
       7: areturn

  public static final fs2.Pull $anonfun$tail$1(fs2.io.file.ReadCursor, int, scala.concurrent.duration.FiniteDuration, cats.effect.kernel.GenTemporal, scala.Option);
    Code:
       0: aload         4
       2: astore        6
       4: aload         6
       6: instanceof    #356                // class scala/Some
       9: ifeq          83
      12: aload         6
      14: checkcast     #356                // class scala/Some
      17: astore        7
      19: aload         7
      21: invokevirtual #360                // Method scala/Some.value:()Ljava/lang/Object;
      24: checkcast     #330                // class scala/Tuple2
      27: astore        8
      29: aload         8
      31: ifnull        80
      34: aload         8
      36: invokevirtual #363                // Method scala/Tuple2._1:()Ljava/lang/Object;
      39: checkcast     #2                  // class fs2/io/file/ReadCursor
      42: astore        9
      44: aload         8
      46: invokevirtual #366                // Method scala/Tuple2._2:()Ljava/lang/Object;
      49: checkcast     #325                // class fs2/Chunk
      52: astore        10
      54: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
      57: aload         10
      59: invokevirtual #370                // Method fs2/Pull$.output:(Lfs2/Chunk;)Lfs2/Pull;
      62: aload         9
      64: iload_1
      65: aload_2
      66: aload_3
      67: invokedynamic #421,  0            // InvokeDynamic #7:apply:(Lfs2/io/file/ReadCursor;ILscala/concurrent/duration/FiniteDuration;Lcats/effect/kernel/GenTemporal;)Lscala/Function0;
      72: invokevirtual #383                // Method fs2/Pull.$greater$greater:(Lscala/Function0;)Lfs2/Pull;
      75: astore        5
      77: goto          140
      80: goto          86
      83: goto          86
      86: getstatic     #388                // Field scala/None$.MODULE$:Lscala/None$;
      89: aload         6
      91: invokevirtual #319                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      94: ifeq          127
      97: getstatic     #100                // Field fs2/Pull$.MODULE$:Lfs2/Pull$;
     100: aload_3
     101: aload_2
     102: invokeinterface #427,  2          // InterfaceMethod cats/effect/kernel/GenTemporal.sleep:(Lscala/concurrent/duration/FiniteDuration;)Ljava/lang/Object;
     107: invokevirtual #430                // Method fs2/Pull$.eval:(Ljava/lang/Object;)Lfs2/Pull;
     110: aload_0
     111: iload_1
     112: aload_2
     113: aload_3
     114: invokedynamic #434,  0            // InvokeDynamic #8:apply:(Lfs2/io/file/ReadCursor;ILscala/concurrent/duration/FiniteDuration;Lcats/effect/kernel/GenTemporal;)Lscala/Function0;
     119: invokevirtual #383                // Method fs2/Pull.$greater$greater:(Lscala/Function0;)Lfs2/Pull;
     122: astore        5
     124: goto          140
     127: goto          130
     130: new           #390                // class scala/MatchError
     133: dup
     134: aload         6
     136: invokespecial #393                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     139: athrow
     140: aload         5
     142: areturn

  public fs2.io.file.ReadCursor(fs2.io.file.FileHandle<F>, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field file:Lfs2/io/file/FileHandle;
       5: aload_0
       6: lload_2
       7: putfield      #72                 // Field offset:J
      10: aload_0
      11: invokespecial #440                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #444                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      18: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #456,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
