Compiled from "FileHandle.scala"
public interface fs2.io.file.FileHandle<F> {
  public static <F> cats.effect.kernel.Resource<F, fs2.io.file.FileHandle<F>> fromFileChannel(F, cats.effect.kernel.Async<F>);
    Code:
       0: getstatic     #20                 // Field fs2/io/file/FileHandle$.MODULE$:Lfs2/io/file/FileHandle$;
       3: aload_0
       4: aload_1
       5: invokevirtual #22                 // Method fs2/io/file/FileHandle$.fromFileChannel:(Ljava/lang/Object;Lcats/effect/kernel/Async;)Lcats/effect/kernel/Resource;
       8: areturn

  public static <F> cats.effect.kernel.Resource<F, fs2.io.file.FileHandle<F>> fromPath(java.nio.file.Path, scala.collection.Seq<java.nio.file.OpenOption>, cats.effect.kernel.Async<F>);
    Code:
       0: getstatic     #20                 // Field fs2/io/file/FileHandle$.MODULE$:Lfs2/io/file/FileHandle$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #30                 // Method fs2/io/file/FileHandle$.fromPath:(Ljava/nio/file/Path;Lscala/collection/Seq;Lcats/effect/kernel/Async;)Lcats/effect/kernel/Resource;
       9: areturn

  public abstract F force(boolean);

  public abstract F lock();

  public abstract F lock(long, long, boolean);

  public abstract F read(int, long);

  public abstract F size();

  public abstract F truncate(long);

  public abstract F tryLock();

  public abstract F tryLock(long, long, boolean);

  public abstract F unlock(java.lang.Object);

  public abstract F write(fs2.Chunk<java.lang.Object>, long);
}
