Compiled from "VariablePlaceholderUtils.java"
public class de.theitshop.container.VariablePlaceholderUtils {
  private final java.util.regex.Pattern pattern;

  private static final java.lang.String openingBracket;

  public static final java.lang.String SELF;

  private static final java.lang.String CONTAINER_HOSTNAME;

  private static final java.lang.String MAPPED_PORT;

  private static final java.lang.String HOST_NETWORK_ALIAS;

  private static final java.lang.String HOST_ADDRESS;

  public de.theitshop.container.VariablePlaceholderUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #7                  // String \\$\\{\\{([^}]*)}}
       7: invokestatic  #9                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      10: putfield      #15                 // Field pattern:Ljava/util/regex/Pattern;
      13: return

  public java.util.Map$Entry<java.lang.String, java.lang.String> removeVariablePlaceholder(java.lang.String, java.lang.String, java.lang.String, de.theitshop.model.container.ProcessedServices, org.testcontainers.containers.GenericContainer<?>);
    Code:
       0: aload_3
       1: astore        6
       3: aload         6
       5: ldc           #21                 // String ${{
       7: invokevirtual #23                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      10: ifeq          307
      13: aload_0
      14: getfield      #15                 // Field pattern:Ljava/util/regex/Pattern;
      17: aload         6
      19: invokevirtual #29                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      22: astore        7
      24: aload         7
      26: invokevirtual #33                 // Method java/util/regex/Matcher.find:()Z
      29: ifeq          307
      32: aload         7
      34: invokevirtual #39                 // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      37: astore        8
      39: aload         8
      41: ldc           #21                 // String ${{
      43: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      46: ifeq          304
      49: aload         8
      51: ldc           #47                 // String }}
      53: invokevirtual #49                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      56: ifeq          304
      59: aload         8
      61: ldc           #52                 // String \\$\\{\\{
      63: ldc           #54                 // String
      65: invokevirtual #56                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      68: astore        8
      70: aload         8
      72: iconst_0
      73: aload         8
      75: invokevirtual #60                 // Method java/lang/String.length:()I
      78: iconst_2
      79: isub
      80: invokevirtual #64                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      83: astore        8
      85: aload         8
      87: ldc           #68                 // String \\.
      89: invokevirtual #70                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      92: invokestatic  #74                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      95: astore        9
      97: aload         9
      99: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     104: iconst_2
     105: if_icmpeq     118
     108: new           #85                 // class java/lang/IllegalArgumentException
     111: dup
     112: ldc           #87                 // String Placeholder variable should be of the format serviceName.placeholder
     114: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: aconst_null
     119: astore        10
     121: aconst_null
     122: astore        11
     124: new           #92                 // class java/util/HashMap
     127: dup
     128: invokespecial #94                 // Method java/util/HashMap."<init>":()V
     131: astore        12
     133: aload         9
     135: iconst_0
     136: invokeinterface #95,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     141: checkcast     #24                 // class java/lang/String
     144: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     147: astore        13
     149: aload         9
     151: iconst_1
     152: invokeinterface #95,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     157: checkcast     #24                 // class java/lang/String
     160: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     163: astore        14
     165: aload         4
     167: ifnull        250
     170: aload         4
     172: invokevirtual #102                // Method de/theitshop/model/container/ProcessedServices.getProcessedServices:()Ljava/util/Map;
     175: ifnull        250
     178: aload         4
     180: invokevirtual #102                // Method de/theitshop/model/container/ProcessedServices.getProcessedServices:()Ljava/util/Map;
     183: invokeinterface #108,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     188: ifne          250
     191: aload         4
     193: invokevirtual #102                // Method de/theitshop/model/container/ProcessedServices.getProcessedServices:()Ljava/util/Map;
     196: aload         13
     198: invokeinterface #113,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     203: ifeq          250
     206: aload         13
     208: astore        11
     210: aload         4
     212: invokevirtual #102                // Method de/theitshop/model/container/ProcessedServices.getProcessedServices:()Ljava/util/Map;
     215: aload         13
     217: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     222: checkcast     #120                // class de/theitshop/model/container/RunningContainer
     225: invokevirtual #122                // Method de/theitshop/model/container/RunningContainer.getContainer:()Lorg/testcontainers/containers/GenericContainer;
     228: astore        10
     230: aload         10
     232: invokevirtual #126                // Method org/testcontainers/containers/GenericContainer.getEnvMap:()Ljava/util/Map;
     235: aload         12
     237: invokedynamic #131,  0            // InvokeDynamic #0:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
     242: invokeinterface #135,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
     247: goto          275
     250: aload         5
     252: invokevirtual #139                // Method org/testcontainers/containers/GenericContainer.isRunning:()Z
     255: ifeq          275
     258: aload         5
     260: invokevirtual #126                // Method org/testcontainers/containers/GenericContainer.getEnvMap:()Ljava/util/Map;
     263: aload         12
     265: invokedynamic #142,  0            // InvokeDynamic #1:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
     270: invokeinterface #135,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
     275: aload         6
     277: aload         7
     279: invokevirtual #39                 // Method java/util/regex/Matcher.group:()Ljava/lang/String;
     282: aload_0
     283: aload         13
     285: aload         14
     287: aload         11
     289: aload_1
     290: aload         10
     292: aload         12
     294: aload         5
     296: invokevirtual #143                // Method commonPlaceholders:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/testcontainers/containers/GenericContainer;Ljava/util/Map;Lorg/testcontainers/containers/GenericContainer;)Ljava/lang/String;
     299: invokevirtual #147                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     302: astore        6
     304: goto          24
     307: aload_2
     308: aload         6
     310: invokestatic  #151                // InterfaceMethod java/util/Map.entry:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;
     313: areturn

  private java.lang.String commonPlaceholders(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.testcontainers.containers.GenericContainer<?>, java.util.Map<java.lang.String, java.lang.String>, org.testcontainers.containers.GenericContainer<?>);
    Code:
       0: aload_1
       1: ldc           #155                // String self
       3: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          25
       9: aload_2
      10: ldc           #160                // String container_hostname
      12: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      15: ifeq          25
      18: aload         4
      20: astore        8
      22: goto          265
      25: aload_1
      26: aload_3
      27: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      30: ifeq          48
      33: aload_2
      34: ldc           #160                // String container_hostname
      36: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifeq          48
      42: aload_3
      43: astore        8
      45: goto          265
      48: aload_1
      49: aload_3
      50: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      53: ifeq          99
      56: aload_2
      57: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      60: ldc           #162                // String external_port
      62: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      65: ifeq          99
      68: aload_2
      69: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      72: ldc           #164                // String external_port_
      74: ldc           #54                 // String
      76: invokevirtual #147                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      79: astore        9
      81: aload         5
      83: aload         9
      85: invokestatic  #166                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      88: invokevirtual #172                // Method org/testcontainers/containers/GenericContainer.getMappedPort:(I)Ljava/lang/Integer;
      91: invokevirtual #176                // Method java/lang/Integer.toString:()Ljava/lang/String;
      94: astore        8
      96: goto          265
      99: aload_1
     100: ldc           #155                // String self
     102: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     105: ifeq          163
     108: aload_2
     109: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     112: ldc           #162                // String external_port
     114: invokevirtual #43                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     117: ifeq          163
     120: aload_2
     121: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     124: ldc           #164                // String external_port_
     126: ldc           #54                 // String
     128: invokevirtual #147                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     131: invokestatic  #166                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     134: istore        9
     136: aload         7
     138: invokevirtual #139                // Method org/testcontainers/containers/GenericContainer.isRunning:()Z
     141: ifeq          157
     144: aload         7
     146: iload         9
     148: invokevirtual #172                // Method org/testcontainers/containers/GenericContainer.getMappedPort:(I)Ljava/lang/Integer;
     151: invokestatic  #179                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     154: goto          158
     157: aconst_null
     158: astore        8
     160: goto          265
     163: aload_1
     164: ldc           #155                // String self
     166: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     169: ifeq          212
     172: aload_2
     173: ldc           #183                // String container_host_alias
     175: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     178: ifeq          212
     181: aload         7
     183: invokevirtual #139                // Method org/testcontainers/containers/GenericContainer.isRunning:()Z
     186: ifeq          206
     189: aload         7
     191: invokevirtual #185                // Method org/testcontainers/containers/GenericContainer.getNetworkAliases:()Ljava/util/List;
     194: iconst_0
     195: invokeinterface #95,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     200: checkcast     #24                 // class java/lang/String
     203: goto          207
     206: aconst_null
     207: astore        8
     209: goto          265
     212: aload_1
     213: ldc           #155                // String self
     215: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     218: ifeq          252
     221: aload_2
     222: ldc           #189                // String container_host_address
     224: invokevirtual #157                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     227: ifeq          252
     230: aload         7
     232: invokevirtual #139                // Method org/testcontainers/containers/GenericContainer.isRunning:()Z
     235: ifeq          246
     238: aload         7
     240: invokevirtual #191                // Method org/testcontainers/containers/GenericContainer.getHost:()Ljava/lang/String;
     243: goto          247
     246: aconst_null
     247: astore        8
     249: goto          265
     252: aload         6
     254: aload_2
     255: invokeinterface #117,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     260: checkcast     #24                 // class java/lang/String
     263: astore        8
     265: aload         8
     267: areturn

  public void execAfterStartupCommand(java.lang.String, java.util.List<de.theitshop.model.config.ExecCommandAfterContainerStartup>, de.theitshop.model.container.ProcessedServices, org.testcontainers.containers.GenericContainer<?>) throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: new           #194                // class java/util/ArrayList
       3: dup
       4: invokespecial #196                // Method java/util/ArrayList."<init>":()V
       7: astore        5
       9: aload_2
      10: ifnull        165
      13: aload_2
      14: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
      19: ifle          165
      22: aload_2
      23: aload_0
      24: aload         5
      26: aload_1
      27: aload_3
      28: aload         4
      30: invokedynamic #197,  0            // InvokeDynamic #2:accept:(Lde/theitshop/container/VariablePlaceholderUtils;Ljava/util/List;Ljava/lang/String;Lde/theitshop/model/container/ProcessedServices;Lorg/testcontainers/containers/GenericContainer;)Ljava/util/function/Consumer;
      35: invokeinterface #200,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      40: ldc           #203                // String (\'.*?\'|\\\".*?\\\"|\\S+)
      42: invokestatic  #9                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      45: astore        6
      47: aload         5
      49: invokeinterface #205,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      54: astore        7
      56: aload         7
      58: invokeinterface #209,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          165
      66: aload         7
      68: invokeinterface #214,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #24                 // class java/lang/String
      76: astore        8
      78: aload         6
      80: aload         8
      82: invokevirtual #29                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      85: astore        9
      87: new           #194                // class java/util/ArrayList
      90: dup
      91: invokespecial #196                // Method java/util/ArrayList."<init>":()V
      94: astore        10
      96: aload         9
      98: invokevirtual #33                 // Method java/util/regex/Matcher.find:()Z
     101: ifeq          120
     104: aload         10
     106: aload         9
     108: invokevirtual #39                 // Method java/util/regex/Matcher.group:()Ljava/lang/String;
     111: invokeinterface #218,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          96
     120: aload         4
     122: aload         10
     124: iconst_0
     125: anewarray     #24                 // class java/lang/String
     128: invokeinterface #221,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     133: checkcast     #225                // class "[Ljava/lang/String;"
     136: invokevirtual #227                // Method org/testcontainers/containers/GenericContainer.execInContainer:([Ljava/lang/String;)Lorg/testcontainers/containers/Container$ExecResult;
     139: astore        11
     141: aload         11
     143: invokevirtual #231                // Method org/testcontainers/containers/Container$ExecResult.getExitCode:()I
     146: ifeq          162
     149: new           #236                // class java/lang/IllegalStateException
     152: dup
     153: aload         11
     155: invokevirtual #238                // Method org/testcontainers/containers/Container$ExecResult.getStderr:()Ljava/lang/String;
     158: invokespecial #241                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: goto          56
     165: return

  private void lambda$execAfterStartupCommand$2(java.util.List, java.lang.String, de.theitshop.model.container.ProcessedServices, org.testcontainers.containers.GenericContainer, de.theitshop.model.config.ExecCommandAfterContainerStartup);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: aload         5
       5: invokevirtual #242                // Method de/theitshop/model/config/ExecCommandAfterContainerStartup.getName:()Ljava/lang/String;
       8: aload         5
      10: invokevirtual #247                // Method de/theitshop/model/config/ExecCommandAfterContainerStartup.getCommand:()Ljava/lang/String;
      13: aload_3
      14: aload         4
      16: invokevirtual #250                // Method removeVariablePlaceholder:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lde/theitshop/model/container/ProcessedServices;Lorg/testcontainers/containers/GenericContainer;)Ljava/util/Map$Entry;
      19: invokeinterface #254,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      24: checkcast     #24                 // class java/lang/String
      27: invokeinterface #218,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      32: pop
      33: return

  private static void lambda$removeVariablePlaceholder$1(java.util.Map, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       5: aload_2
       6: invokeinterface #259,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private static void lambda$removeVariablePlaceholder$0(java.util.Map, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       5: aload_2
       6: invokeinterface #259,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return
}
