Compiled from "AbstractVersion.java"
public abstract class org.jumpmind.symmetric.util.AbstractVersion {
  final org.apache.commons.logging.Log log;

  public static final int MAJOR_INDEX;

  public static final int MINOR_INDEX;

  public static final int PATCH_INDEX;

  private java.lang.String version;

  public org.jumpmind.symmetric.util.AbstractVersion();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field version:Ljava/lang/String;
      20: return

  protected abstract java.lang.String getPropertiesFileLocation();

  public java.lang.String version();
    Code:
       0: aload_0
       1: getfield      #5                  // Field version:Ljava/lang/String;
       4: ifnonnull     75
       7: ldc_w         #6                  // class org/jumpmind/symmetric/util/AbstractVersion
      10: aload_0
      11: invokevirtual #7                  // Method getPropertiesFileLocation:()Ljava/lang/String;
      14: invokevirtual #8                  // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      17: astore_1
      18: aload_1
      19: ifnull        69
      22: new           #9                  // class java/util/Properties
      25: dup
      26: invokespecial #10                 // Method java/util/Properties."<init>":()V
      29: astore_2
      30: aload_2
      31: aload_1
      32: invokevirtual #11                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      35: aload_0
      36: aload_2
      37: ldc           #12                 // String version
      39: invokevirtual #13                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      42: putfield      #5                  // Field version:Ljava/lang/String;
      45: goto          66
      48: astore_3
      49: aload_0
      50: ldc           #15                 // String unknown
      52: putfield      #5                  // Field version:Ljava/lang/String;
      55: aload_0
      56: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      59: aload_3
      60: aload_3
      61: invokeinterface #16,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      66: goto          75
      69: aload_0
      70: ldc           #17                 // String development
      72: putfield      #5                  // Field version:Ljava/lang/String;
      75: aload_0
      76: getfield      #5                  // Field version:Ljava/lang/String;
      79: areturn
    Exception table:
       from    to  target type
          30    45    48   Class java/io/IOException

  public java.lang.String versionWithUnderscores();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method version:()Ljava/lang/String;
       4: ldc           #19                 // String [\\.\\-]
       6: ldc           #20                 // String _
       8: invokevirtual #21                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      11: areturn

  public int[] parseVersion(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #22                 // String [^0-9\\.]
       3: ldc           #23                 // String
       5: invokevirtual #24                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: iconst_3
      10: newarray       int
      12: astore_2
      13: aload_1
      14: invokestatic  #25                 // Method org/apache/commons/lang/StringUtils.isEmpty:(Ljava/lang/String;)Z
      17: ifne          75
      20: aload_1
      21: ldc           #26                 // String \\.
      23: invokevirtual #27                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      26: astore_3
      27: aload_3
      28: arraylength
      29: iconst_3
      30: if_icmplt     43
      33: aload_2
      34: iconst_2
      35: aload_0
      36: aload_3
      37: iconst_2
      38: aaload
      39: invokespecial #28                 // Method parseVersionComponent:(Ljava/lang/String;)I
      42: iastore
      43: aload_3
      44: arraylength
      45: iconst_2
      46: if_icmplt     59
      49: aload_2
      50: iconst_1
      51: aload_0
      52: aload_3
      53: iconst_1
      54: aaload
      55: invokespecial #28                 // Method parseVersionComponent:(Ljava/lang/String;)I
      58: iastore
      59: aload_3
      60: arraylength
      61: iconst_1
      62: if_icmplt     75
      65: aload_2
      66: iconst_0
      67: aload_0
      68: aload_3
      69: iconst_0
      70: aaload
      71: invokespecial #28                 // Method parseVersionComponent:(Ljava/lang/String;)I
      74: iastore
      75: aload_2
      76: areturn

  private int parseVersionComponent(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokestatic  #29                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       6: istore_2
       7: goto          11
      10: astore_3
      11: iload_2
      12: ireturn
    Exception table:
       from    to  target type
           2     7    10   Class java/lang/NumberFormatException

  protected boolean isOlderMajorVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #31                 // Method parseVersion:(Ljava/lang/String;)[I
       6: invokevirtual #32                 // Method isOlderMajorVersion:([I)Z
       9: ireturn

  protected boolean isOlderMajorVersion(int[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #18                 // Method version:()Ljava/lang/String;
       5: invokevirtual #31                 // Method parseVersion:(Ljava/lang/String;)[I
       8: astore_2
       9: aload_1
      10: iconst_0
      11: iaload
      12: aload_2
      13: iconst_0
      14: iaload
      15: if_icmpge     20
      18: iconst_1
      19: ireturn
      20: iconst_0
      21: ireturn

  public boolean isOlderVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #18                 // Method version:()Ljava/lang/String;
       6: invokevirtual #33                 // Method isOlderThanVersion:(Ljava/lang/String;Ljava/lang/String;)Z
       9: ireturn

  public boolean isOlderThanVersion(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #34                 // Method noVersion:(Ljava/lang/String;)Z
       5: ifne          16
       8: aload_0
       9: aload_1
      10: invokespecial #34                 // Method noVersion:(Ljava/lang/String;)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: aload_1
      20: invokevirtual #31                 // Method parseVersion:(Ljava/lang/String;)[I
      23: astore_3
      24: aload_0
      25: aload_2
      26: invokevirtual #31                 // Method parseVersion:(Ljava/lang/String;)[I
      29: astore        4
      31: aload_3
      32: iconst_0
      33: iaload
      34: aload         4
      36: iconst_0
      37: iaload
      38: if_icmpge     43
      41: iconst_1
      42: ireturn
      43: aload_3
      44: iconst_0
      45: iaload
      46: aload         4
      48: iconst_0
      49: iaload
      50: if_icmpne     65
      53: aload_3
      54: iconst_1
      55: iaload
      56: aload         4
      58: iconst_1
      59: iaload
      60: if_icmpge     65
      63: iconst_1
      64: ireturn
      65: aload_3
      66: iconst_0
      67: iaload
      68: aload         4
      70: iconst_0
      71: iaload
      72: if_icmpne     97
      75: aload_3
      76: iconst_1
      77: iaload
      78: aload         4
      80: iconst_1
      81: iaload
      82: if_icmpne     97
      85: aload_3
      86: iconst_2
      87: iaload
      88: aload         4
      90: iconst_2
      91: iaload
      92: if_icmpge     97
      95: iconst_1
      96: ireturn
      97: iconst_0
      98: ireturn

  private boolean noVersion(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #35                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
       4: ireturn
}
