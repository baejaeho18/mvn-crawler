Compiled from "AppUtils.java"
public class org.jumpmind.symmetric.util.AppUtils {
  private static java.lang.String UNKNOWN;

  private static org.slf4j.Logger log;

  private static java.lang.String serverId;

  private static org.apache.commons.lang.time.FastDateFormat timezoneFormatter;

  public org.jumpmind.symmetric.util.AppUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String getServerId();
    Code:
       0: getstatic     #2                  // Field serverId:Ljava/lang/String;
       3: invokestatic  #3                  // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
       6: ifeq          60
       9: ldc           #4                  // String runtime.symmetric.cluster.server.id
      11: aconst_null
      12: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: putstatic     #2                  // Field serverId:Ljava/lang/String;
      18: getstatic     #2                  // Field serverId:Ljava/lang/String;
      21: invokestatic  #3                  // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      24: ifeq          60
      27: ldc           #6                  // String bind.address
      29: aconst_null
      30: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      33: putstatic     #2                  // Field serverId:Ljava/lang/String;
      36: getstatic     #2                  // Field serverId:Ljava/lang/String;
      39: invokestatic  #3                  // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      42: ifeq          60
      45: invokestatic  #7                  // Method getHostName:()Ljava/lang/String;
      48: putstatic     #2                  // Field serverId:Ljava/lang/String;
      51: goto          60
      54: astore_0
      55: ldc           #9                  // String unknown
      57: putstatic     #2                  // Field serverId:Ljava/lang/String;
      60: getstatic     #2                  // Field serverId:Ljava/lang/String;
      63: areturn
    Exception table:
       from    to  target type
          45    51    54   Class java/lang/Exception

  public static java.lang.String getHostName();
    Code:
       0: ldc           #10                 // String host.name
       2: getstatic     #11                 // Field UNKNOWN:Ljava/lang/String;
       5: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_0
       9: getstatic     #11                 // Field UNKNOWN:Ljava/lang/String;
      12: aload_0
      13: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          43
      19: invokestatic  #13                 // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
      22: invokevirtual #14                 // Method java/net/InetAddress.getHostName:()Ljava/lang/String;
      25: astore_0
      26: goto          43
      29: astore_1
      30: getstatic     #15                 // Field log:Lorg/slf4j/Logger;
      33: aload_1
      34: invokevirtual #16                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      37: aload_1
      38: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: aload_0
      44: areturn
    Exception table:
       from    to  target type
          19    26    29   Class java/lang/Exception

  public static java.lang.String getIpAddress();
    Code:
       0: ldc           #18                 // String ip.address
       2: getstatic     #11                 // Field UNKNOWN:Ljava/lang/String;
       5: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_0
       9: getstatic     #11                 // Field UNKNOWN:Ljava/lang/String;
      12: aload_0
      13: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          43
      19: invokestatic  #13                 // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
      22: invokevirtual #19                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      25: astore_0
      26: goto          43
      29: astore_1
      30: getstatic     #15                 // Field log:Lorg/slf4j/Logger;
      33: aload_1
      34: invokevirtual #16                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      37: aload_1
      38: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: aload_0
      44: areturn
    Exception table:
       from    to  target type
          19    26    29   Class java/lang/Exception

  public static java.lang.String getTimezoneOffset();
    Code:
       0: getstatic     #20                 // Field timezoneFormatter:Lorg/apache/commons/lang/time/FastDateFormat;
       3: new           #21                 // class java/util/Date
       6: dup
       7: invokespecial #22                 // Method java/util/Date."<init>":()V
      10: invokevirtual #23                 // Method org/apache/commons/lang/time/FastDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      13: astore_0
      14: aload_0
      15: ifnull        60
      18: aload_0
      19: invokevirtual #24                 // Method java/lang/String.length:()I
      22: iconst_5
      23: if_icmpne     60
      26: new           #25                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      33: aload_0
      34: iconst_0
      35: iconst_3
      36: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #29                 // String :
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: iconst_3
      49: iconst_5
      50: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn
      60: aconst_null
      61: areturn

  public static java.util.Date getLocalDateForOffset(java.lang.String);
    Code:
       0: invokestatic  #31                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: invokestatic  #32                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
       7: lload_1
       8: invokevirtual #33                 // Method java/util/TimeZone.getOffset:(J)I
      11: istore_3
      12: new           #25                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #34                 // String GMT
      21: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokestatic  #35                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      34: lload_1
      35: invokevirtual #33                 // Method java/util/TimeZone.getOffset:(J)I
      38: istore        4
      40: new           #21                 // class java/util/Date
      43: dup
      44: lload_1
      45: iload_3
      46: i2l
      47: lsub
      48: iload         4
      50: i2l
      51: ladd
      52: invokespecial #36                 // Method java/util/Date."<init>":(J)V
      55: areturn

  public static void sleep(long);
    Code:
       0: lload_0
       1: invokestatic  #37                 // Method java/lang/Thread.sleep:(J)V
       4: goto          22
       7: astore_2
       8: getstatic     #15                 // Field log:Lorg/slf4j/Logger;
      11: ldc           #39                 // String {}
      13: aload_2
      14: invokevirtual #40                 // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
      17: invokeinterface #41,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      22: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/InterruptedException

  public static boolean isSystemPropertySet(java.lang.String, boolean);
    Code:
       0: ldc           #42                 // String true
       2: aload_0
       3: iload_1
       4: invokestatic  #43                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
       7: invokestatic  #5                  // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: invokevirtual #44                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ireturn

  public static void runBsh(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String);
    Code:
       0: new           #45                 // class bsh/Interpreter
       3: dup
       4: invokespecial #46                 // Method bsh/Interpreter."<init>":()V
       7: astore_2
       8: aload_0
       9: ifnull        61
      12: aload_0
      13: invokeinterface #47,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      18: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          61
      33: aload_3
      34: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #51                 // class java/lang/String
      42: astore        4
      44: aload_2
      45: aload         4
      47: aload_0
      48: aload         4
      50: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: invokevirtual #53                 // Method bsh/Interpreter.set:(Ljava/lang/String;Ljava/lang/Object;)V
      58: goto          24
      61: getstatic     #15                 // Field log:Lorg/slf4j/Logger;
      64: ldc           #39                 // String {}
      66: new           #25                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #54                 // String About to run: \n
      75: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #55,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      90: aload_2
      91: aload_1
      92: invokevirtual #56                 // Method bsh/Interpreter.eval:(Ljava/lang/String;)Ljava/lang/Object;
      95: pop
      96: goto          109
      99: astore_2
     100: new           #58                 // class java/lang/RuntimeException
     103: dup
     104: aload_2
     105: invokespecial #59                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     108: athrow
     109: return
    Exception table:
       from    to  target type
           0    96    99   Class bsh/EvalError

  public static boolean isPortAvailable(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmplt     11
       5: iload_0
       6: ldc           #60                 // int 65535
       8: if_icmple     38
      11: new           #61                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #25                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #62                 // String Invalid start port:
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_0
      28: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aconst_null
      39: astore_1
      40: aconst_null
      41: astore_2
      42: new           #65                 // class java/net/ServerSocket
      45: dup
      46: iload_0
      47: invokespecial #66                 // Method java/net/ServerSocket."<init>":(I)V
      50: astore_1
      51: aload_1
      52: iconst_1
      53: invokevirtual #67                 // Method java/net/ServerSocket.setReuseAddress:(Z)V
      56: new           #68                 // class java/net/DatagramSocket
      59: dup
      60: iload_0
      61: invokespecial #69                 // Method java/net/DatagramSocket."<init>":(I)V
      64: astore_2
      65: aload_2
      66: iconst_1
      67: invokevirtual #70                 // Method java/net/DatagramSocket.setReuseAddress:(Z)V
      70: iconst_1
      71: istore_3
      72: jsr           92
      75: iload_3
      76: ireturn
      77: astore_3
      78: jsr           92
      81: goto          117
      84: astore        4
      86: jsr           92
      89: aload         4
      91: athrow
      92: astore        5
      94: aload_2
      95: ifnull        102
      98: aload_2
      99: invokevirtual #72                 // Method java/net/DatagramSocket.close:()V
     102: aload_1
     103: ifnull        115
     106: aload_1
     107: invokevirtual #73                 // Method java/net/ServerSocket.close:()V
     110: goto          115
     113: astore        6
     115: ret           5
     117: iconst_0
     118: ireturn
    Exception table:
       from    to  target type
          42    75    77   Class java/io/IOException
          42    75    84   any
          77    81    84   any
          84    89    84   any
         106   110   113   Class java/io/IOException

  static {};
    Code:
       0: ldc           #9                  // String unknown
       2: putstatic     #11                 // Field UNKNOWN:Ljava/lang/String;
       5: ldc_w         #74                 // class org/jumpmind/symmetric/util/AppUtils
       8: invokestatic  #75                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putstatic     #15                 // Field log:Lorg/slf4j/Logger;
      14: ldc           #76                 // String Z
      16: invokestatic  #77                 // Method org/apache/commons/lang/time/FastDateFormat.getInstance:(Ljava/lang/String;)Lorg/apache/commons/lang/time/FastDateFormat;
      19: putstatic     #20                 // Field timezoneFormatter:Lorg/apache/commons/lang/time/FastDateFormat;
      22: return
}
