Compiled from "InternalOutgoingTransport.java"
public class org.jumpmind.symmetric.transport.internal.InternalOutgoingTransport implements org.jumpmind.symmetric.transport.IOutgoingTransport {
  java.io.BufferedWriter writer;

  org.jumpmind.symmetric.model.ChannelMap map;

  boolean open;

  public org.jumpmind.symmetric.transport.internal.InternalOutgoingTransport(java.io.OutputStream) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/jumpmind/symmetric/model/ChannelMap
       5: dup
       6: invokespecial #2                  // Method org/jumpmind/symmetric/model/ChannelMap."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;Lorg/jumpmind/symmetric/model/ChannelMap;)V
      12: return

  public org.jumpmind.symmetric.transport.internal.InternalOutgoingTransport(java.io.OutputStream, org.jumpmind.symmetric.model.ChannelMap) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field writer:Ljava/io/BufferedWriter;
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field map:Lorg/jumpmind/symmetric/model/ChannelMap;
      14: aload_0
      15: iconst_1
      16: putfield      #7                  // Field open:Z
      19: aload_0
      20: new           #8                  // class java/io/BufferedWriter
      23: dup
      24: new           #9                  // class java/io/OutputStreamWriter
      27: dup
      28: aload_1
      29: ldc           #10                 // String UTF-8
      31: invokespecial #11                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      34: invokespecial #12                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
      37: putfield      #5                  // Field writer:Ljava/io/BufferedWriter;
      40: aload_0
      41: aload_2
      42: putfield      #6                  // Field map:Lorg/jumpmind/symmetric/model/ChannelMap;
      45: return

  public org.jumpmind.symmetric.transport.internal.InternalOutgoingTransport(java.io.BufferedWriter);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #5                  // Field writer:Ljava/io/BufferedWriter;
       9: aload_0
      10: aconst_null
      11: putfield      #6                  // Field map:Lorg/jumpmind/symmetric/model/ChannelMap;
      14: aload_0
      15: iconst_1
      16: putfield      #7                  // Field open:Z
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field writer:Ljava/io/BufferedWriter;
      24: aload_0
      25: new           #1                  // class org/jumpmind/symmetric/model/ChannelMap
      28: dup
      29: invokespecial #2                  // Method org/jumpmind/symmetric/model/ChannelMap."<init>":()V
      32: putfield      #6                  // Field map:Lorg/jumpmind/symmetric/model/ChannelMap;
      35: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writer:Ljava/io/BufferedWriter;
       4: invokestatic  #13                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Writer;)V
       7: aload_0
       8: iconst_0
       9: putfield      #7                  // Field open:Z
      12: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #7                  // Field open:Z
       4: ireturn

  public java.io.BufferedWriter open();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writer:Ljava/io/BufferedWriter;
       4: areturn

  public org.jumpmind.symmetric.model.ChannelMap getSuspendIgnoreChannelLists(org.jumpmind.symmetric.service.IConfigurationService);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Lorg/jumpmind/symmetric/model/ChannelMap;
       4: areturn
}
