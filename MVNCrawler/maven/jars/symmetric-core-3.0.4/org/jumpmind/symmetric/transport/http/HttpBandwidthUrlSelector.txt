Compiled from "HttpBandwidthUrlSelector.java"
public class org.jumpmind.symmetric.transport.http.HttpBandwidthUrlSelector implements org.jumpmind.symmetric.transport.ISyncUrlExtension,org.jumpmind.extension.IBuiltInExtensionPoint {
  protected final org.slf4j.Logger log;

  public static java.lang.String PARAM_PRELOAD_ONLY;

  public static java.lang.String PARAM_SAMPLE_SIZE;

  public static java.lang.String PARAM_SAMPLE_TTL;

  public static java.lang.String PARAM_MAX_SAMPLE_DURATION;

  private long defaultSampleSize;

  private long defaultSampleTTL;

  private long defaultMaxSampleDuration;

  private boolean autoRegister;

  protected long lastSampleTs;

  private java.util.Map<java.net.URI, java.util.List<org.jumpmind.symmetric.transport.http.HttpBandwidthUrlSelector$SyncUrl>> cachedUrls;

  private org.jumpmind.symmetric.service.INodeService nodeService;

  private org.jumpmind.symmetric.service.IBandwidthService bandwidthService;

  public org.jumpmind.symmetric.transport.http.HttpBandwidthUrlSelector(org.jumpmind.symmetric.service.INodeService, org.jumpmind.symmetric.service.IBandwidthService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field log:Lorg/slf4j/Logger;
      15: aload_0
      16: ldc2_w        #5                  // long 1000l
      19: putfield      #7                  // Field defaultSampleSize:J
      22: aload_0
      23: ldc2_w        #8                  // long 60000l
      26: putfield      #10                 // Field defaultSampleTTL:J
      29: aload_0
      30: ldc2_w        #11                 // long 2000l
      33: putfield      #13                 // Field defaultMaxSampleDuration:J
      36: aload_0
      37: iconst_1
      38: putfield      #14                 // Field autoRegister:Z
      41: aload_0
      42: new           #15                 // class java/util/HashMap
      45: dup
      46: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      49: putfield      #17                 // Field cachedUrls:Ljava/util/Map;
      52: aload_0
      53: aload_1
      54: putfield      #18                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      57: aload_0
      58: aload_2
      59: putfield      #19                 // Field bandwidthService:Lorg/jumpmind/symmetric/service/IBandwidthService;
      62: return

  public java.lang.String resolveUrl(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method getParameters:(Ljava/net/URI;)Ljava/util/Map;
       5: astore_2
       6: aconst_null
       7: astore_3
       8: aload_0
       9: getfield      #17                 // Field cachedUrls:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #21,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      18: ifne          42
      21: aload_0
      22: aload_2
      23: invokevirtual #22                 // Method getUrls:(Ljava/util/Map;)Ljava/util/List;
      26: astore_3
      27: aload_0
      28: getfield      #17                 // Field cachedUrls:Ljava/util/Map;
      31: aload_1
      32: aload_3
      33: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: goto          56
      42: aload_0
      43: getfield      #17                 // Field cachedUrls:Ljava/util/Map;
      46: aload_1
      47: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #25                 // class java/util/List
      55: astore_3
      56: aload_0
      57: aload_2
      58: invokevirtual #26                 // Method isInitialLoadOnly:(Ljava/util/Map;)Z
      61: istore        4
      63: iload         4
      65: ifeq          87
      68: aload_0
      69: getfield      #18                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      72: ifnull        87
      75: aload_0
      76: getfield      #18                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      79: invokeinterface #27,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.isDataLoadCompleted:()Z
      84: ifeq          92
      87: iload         4
      89: ifne          207
      92: invokestatic  #28                 // Method java/lang/System.currentTimeMillis:()J
      95: lstore        5
      97: lload         5
      99: aload_0
     100: aload_2
     101: invokevirtual #29                 // Method getSampleTTL:(Ljava/util/Map;)J
     104: lsub
     105: aload_0
     106: getfield      #30                 // Field lastSampleTs:J
     109: lcmp
     110: ifle          193
     113: aload_3
     114: invokeinterface #31,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     119: astore        7
     121: aload         7
     123: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     128: ifeq          175
     131: aload         7
     133: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #34                 // class org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl
     141: astore        8
     143: aload         8
     145: aload_0
     146: getfield      #19                 // Field bandwidthService:Lorg/jumpmind/symmetric/service/IBandwidthService;
     149: aload         8
     151: getfield      #35                 // Field org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl.url:Ljava/lang/String;
     154: aload_0
     155: aload_2
     156: invokevirtual #36                 // Method getSampleSize:(Ljava/util/Map;)J
     159: aload_0
     160: aload_2
     161: invokevirtual #37                 // Method getMaxSampleDuration:(Ljava/util/Map;)J
     164: invokeinterface #38,  6           // InterfaceMethod org/jumpmind/symmetric/service/IBandwidthService.getDownloadKbpsFor:(Ljava/lang/String;JJ)D
     169: putfield      #39                 // Field org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl.kbps:D
     172: goto          121
     175: aload_0
     176: lload         5
     178: putfield      #30                 // Field lastSampleTs:J
     181: aload_3
     182: new           #40                 // class org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$BestBandwidthSorter
     185: dup
     186: aload_0
     187: invokespecial #41                 // Method org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$BestBandwidthSorter."<init>":(Lorg/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector;)V
     190: invokestatic  #42                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     193: aload_3
     194: iconst_0
     195: invokeinterface #43,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     200: checkcast     #34                 // class org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl
     203: getfield      #35                 // Field org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl.url:Ljava/lang/String;
     206: areturn
     207: aload_3
     208: new           #44                 // class org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$ListOrderSorter
     211: dup
     212: aload_0
     213: invokespecial #45                 // Method org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$ListOrderSorter."<init>":(Lorg/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector;)V
     216: invokestatic  #42                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     219: aload_3
     220: iconst_0
     221: invokeinterface #43,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     226: checkcast     #34                 // class org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl
     229: getfield      #35                 // Field org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl.url:Ljava/lang/String;
     232: areturn

  protected long getSampleSize(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field defaultSampleSize:J
       4: lstore_2
       5: aload_1
       6: getstatic     #46                 // Field PARAM_SAMPLE_SIZE:Ljava/lang/String;
       9: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #47                 // class java/lang/String
      17: astore        4
      19: aload         4
      21: ifnull        48
      24: aload         4
      26: invokestatic  #48                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lstore_2
      30: goto          48
      33: astore        5
      35: aload_0
      36: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      39: ldc           #50                 // String Unable to parse sampleSize of {}
      41: aload         4
      43: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      48: lload_2
      49: lreturn
    Exception table:
       from    to  target type
          24    30    33   Class java/lang/NumberFormatException

  protected long getMaxSampleDuration(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field defaultMaxSampleDuration:J
       4: lstore_2
       5: aload_1
       6: getstatic     #52                 // Field PARAM_MAX_SAMPLE_DURATION:Ljava/lang/String;
       9: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #47                 // class java/lang/String
      17: astore        4
      19: aload         4
      21: ifnull        48
      24: aload         4
      26: invokestatic  #48                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lstore_2
      30: goto          48
      33: astore        5
      35: aload_0
      36: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      39: ldc           #50                 // String Unable to parse sampleSize of {}
      41: aload         4
      43: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      48: lload_2
      49: lreturn
    Exception table:
       from    to  target type
          24    30    33   Class java/lang/NumberFormatException

  protected long getSampleTTL(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field defaultSampleTTL:J
       4: lstore_2
       5: aload_1
       6: getstatic     #53                 // Field PARAM_SAMPLE_TTL:Ljava/lang/String;
       9: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #47                 // class java/lang/String
      17: astore        4
      19: aload         4
      21: ifnull        48
      24: aload         4
      26: invokestatic  #48                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lstore_2
      30: goto          48
      33: astore        5
      35: aload_0
      36: getfield      #4                  // Field log:Lorg/slf4j/Logger;
      39: ldc           #54                 // String Unable to parse sampleTTL of {}
      41: aload         4
      43: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      48: lload_2
      49: lreturn
    Exception table:
       from    to  target type
          24    30    33   Class java/lang/NumberFormatException

  protected boolean isInitialLoadOnly(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: getstatic     #55                 // Field PARAM_PRELOAD_ONLY:Ljava/lang/String;
       4: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #47                 // class java/lang/String
      12: astore_2
      13: aload_2
      14: ifnull        30
      17: aload_2
      18: ldc           #56                 // String true
      20: invokevirtual #57                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  protected java.util.List<org.jumpmind.symmetric.transport.http.HttpBandwidthUrlSelector$SyncUrl> getUrls(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #58                 // class java/util/ArrayList
       3: dup
       4: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #60,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: invokeinterface #61,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          83
      29: aload_3
      30: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #47                 // class java/lang/String
      38: astore        4
      40: aload         4
      42: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      45: istore        5
      47: aload_2
      48: new           #34                 // class org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl
      51: dup
      52: aload_0
      53: aload_1
      54: aload         4
      56: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #47                 // class java/lang/String
      64: iload         5
      66: invokespecial #63                 // Method org/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector$SyncUrl."<init>":(Lorg/jumpmind/symmetric/transport/http/HttpBandwidthUrlSelector;Ljava/lang/String;I)V
      69: invokeinterface #64,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: goto          80
      78: astore        5
      80: goto          20
      83: aload_2
      84: areturn
    Exception table:
       from    to  target type
          40    75    78   Class java/lang/NumberFormatException

  protected java.util.Map<java.lang.String, java.lang.String> getParameters(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method java/net/URI.getQuery:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #66                 // String &
       8: invokevirtual #67                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      11: astore_3
      12: new           #15                 // class java/util/HashMap
      15: dup
      16: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      19: astore        4
      21: aload_3
      22: astore        5
      24: aload         5
      26: arraylength
      27: istore        6
      29: iconst_0
      30: istore        7
      32: iload         7
      34: iload         6
      36: if_icmpge     92
      39: aload         5
      41: iload         7
      43: aaload
      44: astore        8
      46: aload         8
      48: ldc           #68                 // String =
      50: invokevirtual #67                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      53: astore        9
      55: aload         9
      57: arraylength
      58: iconst_1
      59: if_icmple     86
      62: aload         9
      64: iconst_0
      65: aaload
      66: astore        10
      68: aload         9
      70: iconst_1
      71: aaload
      72: astore        11
      74: aload         4
      76: aload         10
      78: aload         11
      80: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: iinc          7, 1
      89: goto          32
      92: aload         4
      94: areturn

  public void setDefaultSampleSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field defaultSampleSize:J
       5: return

  public void setDefaultSampleTTL(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #10                 // Field defaultSampleTTL:J
       5: return

  public void setAutoRegister(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field autoRegister:Z
       5: return

  public void setDefaultMaxSampleDuration(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field defaultMaxSampleDuration:J
       5: return

  static {};
    Code:
       0: ldc           #69                 // String initialLoadOnly
       2: putstatic     #55                 // Field PARAM_PRELOAD_ONLY:Ljava/lang/String;
       5: ldc           #70                 // String sampleSize
       7: putstatic     #46                 // Field PARAM_SAMPLE_SIZE:Ljava/lang/String;
      10: ldc           #71                 // String sampleTTL
      12: putstatic     #53                 // Field PARAM_SAMPLE_TTL:Ljava/lang/String;
      15: ldc           #72                 // String maxSampleDuration
      17: putstatic     #52                 // Field PARAM_MAX_SAMPLE_DURATION:Ljava/lang/String;
      20: return
}
