Compiled from "DefaultOfflineServerListener.java"
public class org.jumpmind.symmetric.job.DefaultOfflineServerListener implements org.jumpmind.symmetric.ext.IOfflineServerListener,org.jumpmind.extension.IBuiltInExtensionPoint {
  protected static final org.slf4j.Logger log;

  protected org.jumpmind.symmetric.statistic.IStatisticManager statisticManager;

  protected org.jumpmind.symmetric.service.INodeService nodeService;

  protected org.jumpmind.symmetric.service.IOutgoingBatchService outgoingBatchService;

  public org.jumpmind.symmetric.job.DefaultOfflineServerListener(org.jumpmind.symmetric.statistic.IStatisticManager, org.jumpmind.symmetric.service.INodeService, org.jumpmind.symmetric.service.IOutgoingBatchService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
      19: return

  public void clientNodeOffline(org.jumpmind.symmetric.model.Node);
    Code:
       0: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
       3: ldc           #6                  // String Node {} is offline.  Last heartbeat was {}, timezone {}.  Syncing will be disabled and node security deleted.
       5: iconst_3
       6: anewarray     #7                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: invokevirtual #8                  // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: invokevirtual #9                  // Method org/jumpmind/symmetric/model/Node.getHeartbeatTime:()Ljava/util/Date;
      22: aastore
      23: dup
      24: iconst_2
      25: aload_1
      26: invokevirtual #10                 // Method org/jumpmind/symmetric/model/Node.getTimezoneOffset:()Ljava/lang/String;
      29: aastore
      30: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #2                  // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      39: lconst_1
      40: invokeinterface #12,  3           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementNodesDisabled:(J)V
      45: aload_1
      46: iconst_0
      47: invokevirtual #13                 // Method org/jumpmind/symmetric/model/Node.setSyncEnabled:(Z)V
      50: aload_0
      51: getfield      #3                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      54: aload_1
      55: invokeinterface #14,  2           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.save:(Lorg/jumpmind/symmetric/model/Node;)V
      60: aload_0
      61: getfield      #4                  // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
      64: aload_1
      65: invokeinterface #15,  2           // InterfaceMethod org/jumpmind/symmetric/service/IOutgoingBatchService.markAllAsSentForNode:(Lorg/jumpmind/symmetric/model/Node;)V
      70: aload_0
      71: getfield      #3                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      74: aload_1
      75: invokevirtual #8                  // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      78: invokeinterface #16,  2           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.deleteNodeSecurity:(Ljava/lang/String;)V
      83: return

  static {};
    Code:
       0: ldc_w         #17                 // class org/jumpmind/symmetric/job/DefaultOfflineServerListener
       3: invokestatic  #18                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #5                  // Field log:Lorg/slf4j/Logger;
       9: return
}
