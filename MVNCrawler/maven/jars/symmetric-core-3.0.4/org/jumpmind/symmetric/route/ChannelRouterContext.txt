Compiled from "ChannelRouterContext.java"
public class org.jumpmind.symmetric.route.ChannelRouterContext extends org.jumpmind.symmetric.route.SimpleRouterContext {
  public static final java.lang.String STAT_INSERT_DATA_EVENTS_MS;

  public static final java.lang.String STAT_DATA_ROUTER_MS;

  public static final java.lang.String STAT_QUERY_TIME_MS;

  public static final java.lang.String STAT_READ_DATA_MS;

  public static final java.lang.String STAT_REREAD_DATA_MS;

  public static final java.lang.String STAT_ENQUEUE_DATA_MS;

  public static final java.lang.String STAT_ENQUEUE_EOD_MS;

  public static final java.lang.String STAT_DATA_EVENTS_INSERTED;

  public static final java.lang.String STAT_DATA_ROUTED_COUNT;

  public static final java.lang.String STAT_ROUTE_TOTAL_TIME;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.model.OutgoingBatch> batchesByNodes;

  private java.util.Map<org.jumpmind.symmetric.model.TriggerRouter, java.util.Set<org.jumpmind.symmetric.model.Node>> availableNodes;

  private java.util.Set<org.jumpmind.symmetric.route.IDataRouter> usedDataRouters;

  private org.jumpmind.db.sql.ISqlTransaction sqlTransaction;

  private boolean needsCommitted;

  private long createdTimeInMs;

  private org.jumpmind.symmetric.model.Data lastDataProcessed;

  private java.util.List<org.jumpmind.symmetric.model.DataEvent> dataEventsToSend;

  private boolean produceCommonBatches;

  public org.jumpmind.symmetric.route.ChannelRouterContext(java.lang.String, org.jumpmind.symmetric.model.NodeChannel, org.jumpmind.db.sql.ISqlTransaction) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jumpmind/symmetric/route/SimpleRouterContext."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/model/NodeChannel;)V
       6: aload_0
       7: new           #2                  // class java/util/HashMap
      10: dup
      11: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      14: putfield      #4                  // Field batchesByNodes:Ljava/util/Map;
      17: aload_0
      18: new           #2                  // class java/util/HashMap
      21: dup
      22: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      25: putfield      #5                  // Field availableNodes:Ljava/util/Map;
      28: aload_0
      29: new           #6                  // class java/util/HashSet
      32: dup
      33: invokespecial #7                  // Method java/util/HashSet."<init>":()V
      36: putfield      #8                  // Field usedDataRouters:Ljava/util/Set;
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field needsCommitted:Z
      44: aload_0
      45: invokestatic  #10                 // Method java/lang/System.currentTimeMillis:()J
      48: putfield      #11                 // Field createdTimeInMs:J
      51: aload_0
      52: new           #12                 // class java/util/ArrayList
      55: dup
      56: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      59: putfield      #14                 // Field dataEventsToSend:Ljava/util/List;
      62: aload_0
      63: iconst_0
      64: putfield      #15                 // Field produceCommonBatches:Z
      67: aload_0
      68: aload_3
      69: putfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
      72: aload_0
      73: getfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
      76: iconst_1
      77: invokeinterface #17,  2           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.setInBatchMode:(Z)V
      82: return

  public java.util.List<org.jumpmind.symmetric.model.DataEvent> getDataEventList();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dataEventsToSend:Ljava/util/List;
       4: areturn

  public void clearDataEventsList();
    Code:
       0: aload_0
       1: getfield      #14                 // Field dataEventsToSend:Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  public void addDataEvent(long, long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field dataEventsToSend:Ljava/util/List;
       4: new           #19                 // class org/jumpmind/symmetric/model/DataEvent
       7: dup
       8: lload_1
       9: lload_3
      10: aload         5
      12: invokespecial #20                 // Method org/jumpmind/symmetric/model/DataEvent."<init>":(JJLjava/lang/String;)V
      15: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      20: pop
      21: return

  public java.util.Map<java.lang.String, org.jumpmind.symmetric.model.OutgoingBatch> getBatchesByNodes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field batchesByNodes:Ljava/util/Map;
       4: areturn

  public java.util.Map<org.jumpmind.symmetric.model.TriggerRouter, java.util.Set<org.jumpmind.symmetric.model.Node>> getAvailableNodes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field availableNodes:Ljava/util/Map;
       4: areturn

  public void commit();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
       4: invokeinterface #22,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
       9: jsr           21
      12: goto          28
      15: astore_1
      16: jsr           21
      19: aload_1
      20: athrow
      21: astore_2
      22: aload_0
      23: invokevirtual #23                 // Method clearState:()V
      26: ret           2
      28: return
    Exception table:
       from    to  target type
           0    12    15   any
          15    19    15   any

  protected void clearState();
    Code:
       0: aload_0
       1: getfield      #8                  // Field usedDataRouters:Ljava/util/Set;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: iconst_0
      11: putfield      #25                 // Field encountedTransactionBoundary:Z
      14: aload_0
      15: getfield      #4                  // Field batchesByNodes:Ljava/util/Map;
      18: invokeinterface #26,  1           // InterfaceMethod java/util/Map.clear:()V
      23: aload_0
      24: getfield      #5                  // Field availableNodes:Ljava/util/Map;
      27: invokeinterface #26,  1           // InterfaceMethod java/util/Map.clear:()V
      32: aload_0
      33: getfield      #14                 // Field dataEventsToSend:Ljava/util/List;
      36: invokeinterface #18,  1           // InterfaceMethod java/util/List.clear:()V
      41: return

  public void rollback();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
       4: invokeinterface #27,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.rollback:()V
       9: jsr           42
      12: goto          49
      15: astore_1
      16: aload_0
      17: getfield      #29                 // Field log:Lorg/slf4j/Logger;
      20: aload_1
      21: invokevirtual #30                 // Method org/jumpmind/db/sql/SqlException.getMessage:()Ljava/lang/String;
      24: aload_1
      25: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: jsr           42
      33: goto          49
      36: astore_2
      37: jsr           42
      40: aload_2
      41: athrow
      42: astore_3
      43: aload_0
      44: invokevirtual #23                 // Method clearState:()V
      47: ret           3
      49: return
    Exception table:
       from    to  target type
           0     9    15   Class org/jumpmind/db/sql/SqlException
           0    12    36   any
          15    33    36   any
          36    40    36   any

  public void cleanup();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
       4: invokeinterface #22,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
       9: jsr           42
      12: goto          54
      15: astore_1
      16: aload_0
      17: getfield      #29                 // Field log:Lorg/slf4j/Logger;
      20: aload_1
      21: invokevirtual #33                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      24: aload_1
      25: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: jsr           42
      33: goto          54
      36: astore_2
      37: jsr           42
      40: aload_2
      41: athrow
      42: astore_3
      43: aload_0
      44: getfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
      47: invokeinterface #34,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.close:()V
      52: ret           3
      54: return
    Exception table:
       from    to  target type
           0     9    15   Class java/lang/Exception
           0    12    36   any
          15    33    36   any
          36    40    36   any

  public void setNeedsCommitted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field needsCommitted:Z
       5: return

  public boolean isNeedsCommitted();
    Code:
       0: aload_0
       1: getfield      #9                  // Field needsCommitted:Z
       4: ireturn

  public java.util.Set<org.jumpmind.symmetric.route.IDataRouter> getUsedDataRouters();
    Code:
       0: aload_0
       1: getfield      #8                  // Field usedDataRouters:Ljava/util/Set;
       4: areturn

  public void addUsedDataRouter(org.jumpmind.symmetric.route.IDataRouter);
    Code:
       0: aload_0
       1: getfield      #8                  // Field usedDataRouters:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void resetForNextData();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #9                  // Field needsCommitted:Z
       5: return

  public long getCreatedTimeInMs();
    Code:
       0: aload_0
       1: getfield      #11                 // Field createdTimeInMs:J
       4: lreturn

  public void setLastDataProcessed(org.jumpmind.symmetric.model.Data);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field lastDataProcessed:Lorg/jumpmind/symmetric/model/Data;
       5: return

  public org.jumpmind.symmetric.model.Data getLastDataProcessed();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lastDataProcessed:Lorg/jumpmind/symmetric/model/Data;
       4: areturn

  public org.jumpmind.db.sql.ISqlTransaction getSqlTransaction();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sqlTransaction:Lorg/jumpmind/db/sql/ISqlTransaction;
       4: areturn

  public void setProduceCommonBatches(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field produceCommonBatches:Z
       5: return

  public boolean isProduceCommonBatches();
    Code:
       0: aload_0
       1: getfield      #15                 // Field produceCommonBatches:Z
       4: ireturn
}
