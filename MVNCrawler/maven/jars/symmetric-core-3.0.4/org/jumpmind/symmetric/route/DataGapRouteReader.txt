Compiled from "DataGapRouteReader.java"
public class org.jumpmind.symmetric.route.DataGapRouteReader implements org.jumpmind.symmetric.route.IDataToRouteReader {
  protected static final org.slf4j.Logger log;

  private static final java.lang.String SELECT_DATA_USING_GAPS_SQL;

  protected java.util.List<org.jumpmind.symmetric.model.DataGap> dataGaps;

  protected org.jumpmind.symmetric.model.DataGap currentGap;

  protected java.util.concurrent.BlockingQueue<org.jumpmind.symmetric.model.Data> dataQueue;

  protected org.jumpmind.symmetric.route.ChannelRouterContext context;

  protected org.jumpmind.symmetric.service.IDataService dataService;

  protected org.jumpmind.symmetric.service.IParameterService parameterService;

  protected org.jumpmind.symmetric.db.ISymmetricDialect symmetricDialect;

  protected org.jumpmind.symmetric.service.IRouterService routerService;

  protected boolean reading;

  public org.jumpmind.symmetric.route.DataGapRouteReader(org.jumpmind.symmetric.service.IRouterService, org.jumpmind.symmetric.route.ChannelRouterContext, org.jumpmind.symmetric.service.IDataService, org.jumpmind.symmetric.db.ISymmetricDialect, org.jumpmind.symmetric.service.IParameterService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field reading:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field routerService:Lorg/jumpmind/symmetric/service/IRouterService;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      20: aload_0
      21: new           #5                  // class java/util/concurrent/LinkedBlockingQueue
      24: dup
      25: aload         4
      27: ifnull        40
      30: aload         4
      32: invokeinterface #6,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getRouterDataPeekAheadCount:()I
      37: goto          43
      40: sipush        1000
      43: invokespecial #7                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      46: putfield      #8                  // Field dataQueue:Ljava/util/concurrent/BlockingQueue;
      49: aload_0
      50: aload_2
      51: putfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      54: aload_0
      55: aload_3
      56: putfield      #10                 // Field dataService:Lorg/jumpmind/symmetric/service/IDataService;
      59: aload_0
      60: aload         5
      62: putfield      #11                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      65: return

  public void run();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method execute:()V
       4: goto          21
       7: astore_1
       8: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
      11: aload_1
      12: invokevirtual #15                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      15: aload_1
      16: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  protected void execute();
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
       8: invokevirtual #17                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
      11: invokevirtual #18                 // Method org/jumpmind/symmetric/model/NodeChannel.getMaxDataToRoute:()I
      14: i2l
      15: lstore_3
      16: aload_0
      17: getfield      #4                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      20: invokeinterface #6,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getRouterDataPeekAheadCount:()I
      25: istore        5
      27: aconst_null
      28: astore        6
      30: new           #19                 // class java/util/ArrayList
      33: dup
      34: iload         5
      36: invokespecial #20                 // Method java/util/ArrayList."<init>":(I)V
      39: astore        7
      41: aload_0
      42: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      45: invokevirtual #17                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
      48: invokevirtual #21                 // Method org/jumpmind/symmetric/model/NodeChannel.getBatchAlgorithm:()Ljava/lang/String;
      51: ldc           #22                 // String nontransactional
      53: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifne          71
      59: aload_0
      60: getfield      #4                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      63: invokeinterface #24,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.supportsTransactionId:()Z
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore        8
      78: aload_0
      79: invokevirtual #25                 // Method prepareCursor:()Lorg/jumpmind/db/sql/ISqlReadCursor;
      82: astore_1
      83: iconst_1
      84: istore        9
      86: iload_2
      87: i2l
      88: lload_3
      89: lcmp
      90: ifle          98
      93: aload         6
      95: ifnull        274
      98: iload         9
     100: ifeq          114
     103: aload_0
     104: aload         7
     106: iload         5
     108: aload_1
     109: invokevirtual #26                 // Method fillPeekAheadQueue:(Ljava/util/List;ILorg/jumpmind/db/sql/ISqlReadCursor;)Z
     112: istore        9
     114: aload         6
     116: ifnull        124
     119: iload         8
     121: ifeq          166
     124: aload         7
     126: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     131: ifle          166
     134: aload         7
     136: iconst_0
     137: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     142: checkcast     #29                 // class org/jumpmind/symmetric/model/Data
     145: astore        10
     147: aload_0
     148: aload         10
     150: invokevirtual #30                 // Method copyToQueue:(Lorg/jumpmind/symmetric/model/Data;)V
     153: iinc          2, 1
     156: aload         10
     158: invokevirtual #31                 // Method org/jumpmind/symmetric/model/Data.getTransactionId:()Ljava/lang/String;
     161: astore        6
     163: goto          86
     166: aload         6
     168: ifnull        261
     171: aload         7
     173: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     178: ifle          261
     181: aload         7
     183: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     188: astore        10
     190: iconst_0
     191: istore        11
     193: aload         10
     195: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     200: ifeq          250
     203: aload         10
     205: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     210: checkcast     #29                 // class org/jumpmind/symmetric/model/Data
     213: astore        12
     215: aload         6
     217: aload         12
     219: invokevirtual #31                 // Method org/jumpmind/symmetric/model/Data.getTransactionId:()Ljava/lang/String;
     222: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     225: ifeq          247
     228: iinc          11, 1
     231: aload         10
     233: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.remove:()V
     238: aload_0
     239: aload         12
     241: invokevirtual #30                 // Method copyToQueue:(Lorg/jumpmind/symmetric/model/Data;)V
     244: iinc          2, 1
     247: goto          193
     250: iload         11
     252: ifne          258
     255: aconst_null
     256: astore        6
     258: goto          86
     261: aload         7
     263: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     268: ifne          86
     271: goto          274
     274: jsr           308
     277: goto          339
     280: astore_2
     281: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
     284: aload_2
     285: invokevirtual #15                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     288: aload_2
     289: invokeinterface #16,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     294: jsr           308
     297: goto          339
     300: astore        13
     302: jsr           308
     305: aload         13
     307: athrow
     308: astore        14
     310: aload_1
     311: ifnull        320
     314: aload_1
     315: invokeinterface #36,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlReadCursor.close:()V
     320: aload_0
     321: new           #37                 // class org/jumpmind/symmetric/route/DataGapRouteReader$EOD
     324: dup
     325: aload_0
     326: invokespecial #38                 // Method org/jumpmind/symmetric/route/DataGapRouteReader$EOD."<init>":(Lorg/jumpmind/symmetric/route/DataGapRouteReader;)V
     329: invokevirtual #30                 // Method copyToQueue:(Lorg/jumpmind/symmetric/model/Data;)V
     332: aload_0
     333: iconst_0
     334: putfield      #2                  // Field reading:Z
     337: ret           14
     339: return
    Exception table:
       from    to  target type
           2   274   280   Class java/lang/Throwable
           2   277   300   any
         280   297   300   any
         300   305   300   any

  protected boolean process(org.jumpmind.symmetric.model.Data);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Data.getDataId:()J
       4: lstore_2
       5: aload_0
       6: getfield      #40                 // Field currentGap:Lorg/jumpmind/symmetric/model/DataGap;
       9: ifnull        80
      12: lload_2
      13: aload_0
      14: getfield      #40                 // Field currentGap:Lorg/jumpmind/symmetric/model/DataGap;
      17: invokevirtual #41                 // Method org/jumpmind/symmetric/model/DataGap.getStartId:()J
      20: lcmp
      21: iflt          80
      24: lload_2
      25: aload_0
      26: getfield      #40                 // Field currentGap:Lorg/jumpmind/symmetric/model/DataGap;
      29: invokevirtual #42                 // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
      32: lcmp
      33: ifgt          38
      36: iconst_1
      37: ireturn
      38: aload_0
      39: getfield      #43                 // Field dataGaps:Ljava/util/List;
      42: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      47: ifle          73
      50: aload_0
      51: aload_0
      52: getfield      #43                 // Field dataGaps:Ljava/util/List;
      55: iconst_0
      56: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      61: checkcast     #44                 // class org/jumpmind/symmetric/model/DataGap
      64: putfield      #40                 // Field currentGap:Lorg/jumpmind/symmetric/model/DataGap;
      67: aload_0
      68: aload_1
      69: invokevirtual #45                 // Method process:(Lorg/jumpmind/symmetric/model/Data;)Z
      72: ireturn
      73: aload_0
      74: aconst_null
      75: putfield      #40                 // Field currentGap:Lorg/jumpmind/symmetric/model/DataGap;
      78: iconst_0
      79: ireturn
      80: iconst_0
      81: ireturn

  public org.jumpmind.symmetric.model.Data take() throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #11                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       6: ldc           #46                 // String routing.wait.for.data.timeout.seconds
       8: sipush        330
      11: invokeinterface #47,  3           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getInt:(Ljava/lang/String;I)I
      16: istore_2
      17: aload_0
      18: getfield      #8                  // Field dataQueue:Ljava/util/concurrent/BlockingQueue;
      21: iload_2
      22: i2l
      23: getstatic     #48                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokeinterface #49,  4           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      31: checkcast     #29                 // class org/jumpmind/symmetric/model/Data
      34: astore_1
      35: aload_1
      36: ifnonnull     53
      39: new           #50                 // class org/jumpmind/symmetric/SymmetricException
      42: dup
      43: ldc           #51                 // String The read of the data to route queue has timed out
      45: iconst_0
      46: anewarray     #52                 // class java/lang/Object
      49: invokespecial #53                 // Method org/jumpmind/symmetric/SymmetricException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      52: athrow
      53: aload_1
      54: instanceof    #37                 // class org/jumpmind/symmetric/route/DataGapRouteReader$EOD
      57: ifeq          62
      60: aconst_null
      61: astore_1
      62: aload_1
      63: areturn

  protected org.jumpmind.db.sql.ISqlReadCursor<org.jumpmind.symmetric.model.Data> prepareCursor();
    Code:
       0: aload_0
       1: getfield      #11                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #54                 // String routing.max.gaps.to.qualify.in.sql
       6: bipush        100
       8: invokeinterface #47,  3           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getInt:(Ljava/lang/String;I)I
      13: istore_1
      14: aload_0
      15: aload_0
      16: getfield      #10                 // Field dataService:Lorg/jumpmind/symmetric/service/IDataService;
      19: invokeinterface #55,  1           // InterfaceMethod org/jumpmind/symmetric/service/IDataService.findDataGaps:()Ljava/util/List;
      24: putfield      #43                 // Field dataGaps:Ljava/util/List;
      27: aload_0
      28: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      31: invokevirtual #17                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
      34: invokevirtual #56                 // Method org/jumpmind/symmetric/model/NodeChannel.getChannelId:()Ljava/lang/String;
      37: astore_2
      38: aload_0
      39: aload_0
      40: getfield      #43                 // Field dataGaps:Ljava/util/List;
      43: iload_1
      44: aload_0
      45: ldc           #57                 // String selectDataUsingGapsSql
      47: aload_0
      48: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      51: invokevirtual #17                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
      54: invokevirtual #58                 // Method org/jumpmind/symmetric/model/NodeChannel.getChannel:()Lorg/jumpmind/symmetric/model/Channel;
      57: invokevirtual #59                 // Method getSql:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/Channel;)Ljava/lang/String;
      60: invokevirtual #60                 // Method qualifyUsingDataGaps:(Ljava/util/List;ILjava/lang/String;)Ljava/lang/String;
      63: astore_3
      64: aload_0
      65: getfield      #4                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      68: invokeinterface #61,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      73: invokeinterface #62,  1           // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getSqlTemplate:()Lorg/jumpmind/db/sql/ISqlTemplate;
      78: astore        4
      80: iconst_1
      81: iconst_2
      82: iload_1
      83: aload_0
      84: getfield      #43                 // Field dataGaps:Ljava/util/List;
      87: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      92: if_icmpge     99
      95: iload_1
      96: goto          108
      99: aload_0
     100: getfield      #43                 // Field dataGaps:Ljava/util/List;
     103: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     108: imul
     109: iadd
     110: istore        5
     112: iload         5
     114: anewarray     #52                 // class java/lang/Object
     117: astore        6
     119: iload         5
     121: newarray       int
     123: astore        7
     125: aload         6
     127: iconst_0
     128: aload_2
     129: aastore
     130: aload         7
     132: iconst_0
     133: bipush        12
     135: iastore
     136: iconst_0
     137: istore        8
     139: iload         8
     141: iload_1
     142: if_icmpge     300
     145: iload         8
     147: aload_0
     148: getfield      #43                 // Field dataGaps:Ljava/util/List;
     151: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     156: if_icmpge     300
     159: aload_0
     160: getfield      #43                 // Field dataGaps:Ljava/util/List;
     163: iload         8
     165: invokeinterface #63,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     170: checkcast     #44                 // class org/jumpmind/symmetric/model/DataGap
     173: astore        9
     175: aload         6
     177: iload         8
     179: iconst_2
     180: imul
     181: iconst_1
     182: iadd
     183: aload         9
     185: invokevirtual #41                 // Method org/jumpmind/symmetric/model/DataGap.getStartId:()J
     188: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     191: aastore
     192: aload         7
     194: iload         8
     196: iconst_2
     197: imul
     198: iconst_1
     199: iadd
     200: iconst_2
     201: iastore
     202: iload         8
     204: iconst_1
     205: iadd
     206: iload_1
     207: if_icmpne     267
     210: iload         8
     212: iconst_1
     213: iadd
     214: aload_0
     215: getfield      #43                 // Field dataGaps:Ljava/util/List;
     218: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     223: if_icmpge     267
     226: aload         6
     228: iload         8
     230: iconst_2
     231: imul
     232: iconst_2
     233: iadd
     234: aload_0
     235: getfield      #43                 // Field dataGaps:Ljava/util/List;
     238: aload_0
     239: getfield      #43                 // Field dataGaps:Ljava/util/List;
     242: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     247: iconst_1
     248: isub
     249: invokeinterface #63,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     254: checkcast     #44                 // class org/jumpmind/symmetric/model/DataGap
     257: invokevirtual #42                 // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
     260: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     263: aastore
     264: goto          284
     267: aload         6
     269: iload         8
     271: iconst_2
     272: imul
     273: iconst_2
     274: iadd
     275: aload         9
     277: invokevirtual #42                 // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
     280: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     283: aastore
     284: aload         7
     286: iload         8
     288: iconst_2
     289: imul
     290: iconst_2
     291: iadd
     292: iconst_2
     293: iastore
     294: iinc          8, 1
     297: goto          139
     300: aload_0
     301: aload_0
     302: getfield      #43                 // Field dataGaps:Ljava/util/List;
     305: iconst_0
     306: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     311: checkcast     #44                 // class org/jumpmind/symmetric/model/DataGap
     314: putfield      #40                 // Field currentGap:Lorg/jumpmind/symmetric/model/DataGap;
     317: aload         4
     319: aload_3
     320: new           #65                 // class org/jumpmind/symmetric/route/DataGapRouteReader$1
     323: dup
     324: aload_0
     325: invokespecial #66                 // Method org/jumpmind/symmetric/route/DataGapRouteReader$1."<init>":(Lorg/jumpmind/symmetric/route/DataGapRouteReader;)V
     328: aload         6
     330: aload         7
     332: invokeinterface #67,  5           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForCursor:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;[I)Lorg/jumpmind/db/sql/ISqlReadCursor;
     337: areturn

  protected java.lang.String qualifyUsingDataGaps(java.util.List<org.jumpmind.symmetric.model.DataGap>, int, java.lang.String);
    Code:
       0: new           #68                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload_2
      15: if_icmpge     67
      18: iload         5
      20: aload_1
      21: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      26: if_icmpge     67
      29: iload         5
      31: ifne          45
      34: aload         4
      36: ldc           #70                 // String  and (
      38: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: goto          53
      45: aload         4
      47: ldc           #72                 // String  or
      49: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload         4
      55: ldc           #73                 // String (d.data_id between ? and ?)
      57: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: iinc          5, 1
      64: goto          12
      67: aload         4
      69: ldc           #74                 // String )
      71: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: ldc           #75                 // String dataRange
      77: aload         4
      79: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: aload_3
      83: invokestatic  #77                 // Method org/jumpmind/util/FormatUtils.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      86: areturn

  protected java.lang.String getSql(java.lang.String, org.jumpmind.symmetric.model.Channel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field routerService:Lorg/jumpmind/symmetric/service/IRouterService;
       4: iconst_1
       5: anewarray     #78                 // class java/lang/String
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: invokeinterface #79,  2           // InterfaceMethod org/jumpmind/symmetric/service/IRouterService.getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: astore_3
      18: aload_2
      19: invokevirtual #80                 // Method org/jumpmind/symmetric/model/Channel.isUseOldDataToRoute:()Z
      22: ifne          34
      25: aload_3
      26: ldc           #81                 // String d.old_data
      28: ldc           #82                 // String \'\'
      30: invokevirtual #83                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      33: astore_3
      34: aload_2
      35: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Channel.isUseRowDataToRoute:()Z
      38: ifne          50
      41: aload_3
      42: ldc           #85                 // String d.row_data
      44: ldc           #82                 // String \'\'
      46: invokevirtual #83                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      49: astore_3
      50: aload_2
      51: invokevirtual #86                 // Method org/jumpmind/symmetric/model/Channel.isUsePkDataToRoute:()Z
      54: ifne          66
      57: aload_3
      58: ldc           #87                 // String d.pk_data
      60: ldc           #82                 // String \'\'
      62: invokevirtual #83                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      65: astore_3
      66: aload_0
      67: getfield      #4                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      70: ifnonnull     77
      73: aload_3
      74: goto          88
      77: aload_0
      78: getfield      #4                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      81: aload_3
      82: aload_2
      83: invokeinterface #88,  3           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.massageDataExtractionSql:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/Channel;)Ljava/lang/String;
      88: areturn

  protected boolean fillPeekAheadQueue(java.util.List<org.jumpmind.symmetric.model.Data>, int, org.jumpmind.db.sql.ISqlReadCursor<org.jumpmind.symmetric.model.Data>) throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: istore        4
       3: iload_2
       4: aload_1
       5: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      10: isub
      11: istore        5
      13: iconst_0
      14: istore        6
      16: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
      19: lstore        7
      21: aload_0
      22: getfield      #2                  // Field reading:Z
      25: ifeq          122
      28: iload         6
      30: iload         5
      32: if_icmpge     122
      35: aload_3
      36: invokeinterface #90,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlReadCursor.next:()Ljava/lang/Object;
      41: checkcast     #29                 // class org/jumpmind/symmetric/model/Data
      44: astore        9
      46: aload         9
      48: ifnull        113
      51: aload_0
      52: aload         9
      54: invokevirtual #45                 // Method process:(Lorg/jumpmind/symmetric/model/Data;)Z
      57: ifeq          90
      60: aload_1
      61: aload         9
      63: invokeinterface #91,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: iinc          6, 1
      72: aload_0
      73: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      76: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
      79: lload         7
      81: lsub
      82: ldc           #92                 // String data.read.total.time.ms
      84: invokevirtual #93                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.incrementStat:(JLjava/lang/String;)V
      87: goto          105
      90: aload_0
      91: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      94: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
      97: lload         7
      99: lsub
     100: ldc           #94                 // String data.reread.time.ms
     102: invokevirtual #93                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.incrementStat:(JLjava/lang/String;)V
     105: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
     108: lstore        7
     110: goto          119
     113: iconst_0
     114: istore        4
     116: goto          122
     119: goto          21
     122: iload         4
     124: ireturn

  protected java.sql.ResultSet executeQuery(java.sql.PreparedStatement) throws java.sql.SQLException;
    Code:
       0: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: aload_1
       5: invokeinterface #95,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      10: astore        4
      12: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
      15: lload_2
      16: lsub
      17: lstore        5
      19: aload_0
      20: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      23: lload         5
      25: ldc           #96                 // String data.read.query.time.ms
      27: invokevirtual #93                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.incrementStat:(JLjava/lang/String;)V
      30: lload         5
      32: ldc2_w        #97                 // long 30000l
      35: lcmp
      36: ifle          67
      39: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
      42: ldc           #99                 // String Selected data to route in {} ms for {}
      44: lload         5
      46: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: aload_0
      50: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      53: invokevirtual #17                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
      56: invokevirtual #56                 // Method org/jumpmind/symmetric/model/NodeChannel.getChannelId:()Ljava/lang/String;
      59: invokeinterface #100,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      64: goto          103
      67: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
      70: invokeinterface #101,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      75: ifeq          103
      78: getstatic     #14                 // Field log:Lorg/slf4j/Logger;
      81: ldc           #99                 // String Selected data to route in {} ms for {}
      83: lload         5
      85: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      88: aload_0
      89: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      92: invokevirtual #17                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
      95: invokevirtual #56                 // Method org/jumpmind/symmetric/model/NodeChannel.getChannelId:()Ljava/lang/String;
      98: invokeinterface #102,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     103: aload         4
     105: areturn

  protected void copyToQueue(org.jumpmind.symmetric.model.Data);
    Code:
       0: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: aload_0
       5: getfield      #8                  // Field dataQueue:Ljava/util/concurrent/BlockingQueue;
       8: aload_1
       9: invokeinterface #103,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;)Z
      14: ifne          33
      17: aload_0
      18: getfield      #2                  // Field reading:Z
      21: ifeq          33
      24: ldc2_w        #104                // long 50l
      27: invokestatic  #106                // Method org/jumpmind/symmetric/util/AppUtils.sleep:(J)V
      30: goto          4
      33: aload_0
      34: getfield      #9                  // Field context:Lorg/jumpmind/symmetric/route/ChannelRouterContext;
      37: invokestatic  #89                 // Method java/lang/System.currentTimeMillis:()J
      40: lload_2
      41: lsub
      42: ldc           #107                // String data.enqueue.time.ms
      44: invokevirtual #93                 // Method org/jumpmind/symmetric/route/ChannelRouterContext.incrementStat:(JLjava/lang/String;)V
      47: return

  public boolean isReading();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reading:Z
       4: ireturn

  public void setReading(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field reading:Z
       5: return

  public java.util.concurrent.BlockingQueue<org.jumpmind.symmetric.model.Data> getDataQueue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field dataQueue:Ljava/util/concurrent/BlockingQueue;
       4: areturn

  static {};
    Code:
       0: ldc_w         #108                // class org/jumpmind/symmetric/route/DataGapRouteReader
       3: invokestatic  #109                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #14                 // Field log:Lorg/slf4j/Logger;
       9: return
}
