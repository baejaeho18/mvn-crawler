Compiled from "ConfigurationChangedFilter.java"
public class org.jumpmind.symmetric.load.ConfigurationChangedFilter extends org.jumpmind.symmetric.io.data.writer.DatabaseWriterFilterAdapter implements org.jumpmind.extension.IBuiltInExtensionPoint {
  static final org.slf4j.Logger log;

  final java.lang.String CTX_KEY_RESYNC_NEEDED;

  final java.lang.String CTX_KEY_FLUSH_CHANNELS_NEEDED;

  final java.lang.String CTX_KEY_FLUSH_TRANSFORMS_NEEDED;

  final java.lang.String CTX_KEY_FLUSH_PARAMETERS_NEEDED;

  final java.lang.String CTX_KEY_FLUSH_CONFLICTS_NEEDED;

  final java.lang.String CTX_KEY_RESTART_JOBMANAGER_NEEDED;

  private org.jumpmind.symmetric.ISymmetricEngine engine;

  public org.jumpmind.symmetric.load.ConfigurationChangedFilter(org.jumpmind.symmetric.ISymmetricEngine);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jumpmind/symmetric/io/data/writer/DatabaseWriterFilterAdapter."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #4                  // String Resync.
      14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
      20: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: putfield      #11                 // Field CTX_KEY_RESYNC_NEEDED:Ljava/lang/String;
      39: aload_0
      40: new           #2                  // class java/lang/StringBuilder
      43: dup
      44: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #12                 // String FlushChannels.
      49: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
      55: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      58: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
      65: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      68: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: putfield      #13                 // Field CTX_KEY_FLUSH_CHANNELS_NEEDED:Ljava/lang/String;
      74: aload_0
      75: new           #2                  // class java/lang/StringBuilder
      78: dup
      79: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #14                 // String FlushTransforms.
      84: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
      90: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      93: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
     100: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     103: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: putfield      #15                 // Field CTX_KEY_FLUSH_TRANSFORMS_NEEDED:Ljava/lang/String;
     109: aload_0
     110: new           #2                  // class java/lang/StringBuilder
     113: dup
     114: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #16                 // String FlushParameters.
     119: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
     125: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     128: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
     135: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     138: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: putfield      #17                 // Field CTX_KEY_FLUSH_PARAMETERS_NEEDED:Ljava/lang/String;
     144: aload_0
     145: new           #2                  // class java/lang/StringBuilder
     148: dup
     149: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
     152: ldc           #18                 // String FlushConflicts.
     154: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
     160: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     163: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
     170: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     173: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: putfield      #19                 // Field CTX_KEY_FLUSH_CONFLICTS_NEEDED:Ljava/lang/String;
     179: aload_0
     180: new           #2                  // class java/lang/StringBuilder
     183: dup
     184: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
     187: ldc           #20                 // String RestartJobManager.
     189: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
     195: invokevirtual #7                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     198: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload_0
     202: invokevirtual #8                  // Method java/lang/Object.hashCode:()I
     205: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     208: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: putfield      #21                 // Field CTX_KEY_RESTART_JOBMANAGER_NEEDED:Ljava/lang/String;
     214: aload_0
     215: aload_1
     216: putfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
     219: return

  public void afterWrite(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table, org.jumpmind.symmetric.io.data.CsvData);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #23                 // Method recordSyncNeeded:(Lorg/jumpmind/symmetric/io/data/DataContext;Lorg/jumpmind/db/model/Table;Lorg/jumpmind/symmetric/io/data/CsvData;)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #24                 // Method recordChannelFlushNeeded:(Lorg/jumpmind/symmetric/io/data/DataContext;Lorg/jumpmind/db/model/Table;)V
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #25                 // Method recordTransformFlushNeeded:(Lorg/jumpmind/symmetric/io/data/DataContext;Lorg/jumpmind/db/model/Table;)V
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokespecial #26                 // Method recordParametersFlushNeeded:(Lorg/jumpmind/symmetric/io/data/DataContext;Lorg/jumpmind/db/model/Table;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: invokespecial #27                 // Method recordJobManagerRestartNeeded:(Lorg/jumpmind/symmetric/io/data/DataContext;Lorg/jumpmind/db/model/Table;Lorg/jumpmind/symmetric/io/data/CsvData;)V
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #28                 // Method recordConflictFlushNeeded:(Lorg/jumpmind/symmetric/io/data/DataContext;Lorg/jumpmind/db/model/Table;)V
      38: return

  private void recordSyncNeeded(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table, org.jumpmind.symmetric.io.data.CsvData);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #29                 // Method isSyncTriggersNeeded:(Lorg/jumpmind/db/model/Table;)Z
       5: ifne          18
       8: aload_3
       9: invokevirtual #30                 // Method org/jumpmind/symmetric/io/data/CsvData.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
      12: getstatic     #31                 // Field org/jumpmind/symmetric/io/data/DataEventType.CREATE:Lorg/jumpmind/symmetric/io/data/DataEventType;
      15: if_acmpne     30
      18: aload_1
      19: aload_0
      20: getfield      #11                 // Field CTX_KEY_RESYNC_NEEDED:Ljava/lang/String;
      23: iconst_1
      24: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: invokevirtual #33                 // Method org/jumpmind/symmetric/io/data/DataContext.put:(Ljava/lang/String;Ljava/lang/Object;)V
      30: return

  private void recordJobManagerRestartNeeded(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table, org.jumpmind.symmetric.io.data.CsvData);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #34                 // Method isJobManagerRestartNeeded:(Lorg/jumpmind/db/model/Table;Lorg/jumpmind/symmetric/io/data/CsvData;)Z
       6: ifeq          21
       9: aload_1
      10: aload_0
      11: getfield      #21                 // Field CTX_KEY_RESTART_JOBMANAGER_NEEDED:Ljava/lang/String;
      14: iconst_1
      15: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #33                 // Method org/jumpmind/symmetric/io/data/DataContext.put:(Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  private void recordConflictFlushNeeded(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #35                 // Method isConflictFlushNeeded:(Lorg/jumpmind/db/model/Table;)Z
       5: ifeq          20
       8: aload_1
       9: aload_0
      10: getfield      #19                 // Field CTX_KEY_FLUSH_CONFLICTS_NEEDED:Ljava/lang/String;
      13: iconst_1
      14: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #33                 // Method org/jumpmind/symmetric/io/data/DataContext.put:(Ljava/lang/String;Ljava/lang/Object;)V
      20: return

  private void recordParametersFlushNeeded(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #36                 // Method isParameterFlushNeeded:(Lorg/jumpmind/db/model/Table;)Z
       5: ifeq          20
       8: aload_1
       9: aload_0
      10: getfield      #17                 // Field CTX_KEY_FLUSH_PARAMETERS_NEEDED:Ljava/lang/String;
      13: iconst_1
      14: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #33                 // Method org/jumpmind/symmetric/io/data/DataContext.put:(Ljava/lang/String;Ljava/lang/Object;)V
      20: return

  private void recordChannelFlushNeeded(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #37                 // Method isChannelFlushNeeded:(Lorg/jumpmind/db/model/Table;)Z
       5: ifeq          20
       8: aload_1
       9: aload_0
      10: getfield      #13                 // Field CTX_KEY_FLUSH_CHANNELS_NEEDED:Ljava/lang/String;
      13: iconst_1
      14: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #33                 // Method org/jumpmind/symmetric/io/data/DataContext.put:(Ljava/lang/String;Ljava/lang/Object;)V
      20: return

  private void recordTransformFlushNeeded(org.jumpmind.symmetric.io.data.DataContext, org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #38                 // Method isTransformFlushNeeded:(Lorg/jumpmind/db/model/Table;)Z
       5: ifeq          20
       8: aload_1
       9: aload_0
      10: getfield      #15                 // Field CTX_KEY_FLUSH_TRANSFORMS_NEEDED:Ljava/lang/String;
      13: iconst_1
      14: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      17: invokevirtual #33                 // Method org/jumpmind/symmetric/io/data/DataContext.put:(Ljava/lang/String;Ljava/lang/Object;)V
      20: return

  private boolean isSyncTriggersNeeded(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #39                 // String trigger
       4: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
       7: ifne          40
      10: aload_0
      11: aload_1
      12: ldc           #41                 // String router
      14: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
      17: ifne          40
      20: aload_0
      21: aload_1
      22: ldc           #42                 // String trigger_router
      24: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
      27: ifne          40
      30: aload_0
      31: aload_1
      32: ldc           #43                 // String node_group_link
      34: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  private boolean isChannelFlushNeeded(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #44                 // String channel
       4: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
       7: ireturn

  private boolean isConflictFlushNeeded(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #45                 // String conflict
       4: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
       7: ireturn

  private boolean isParameterFlushNeeded(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #46                 // String parameter
       4: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
       7: ireturn

  private boolean isJobManagerRestartNeeded(org.jumpmind.db.model.Table, org.jumpmind.symmetric.io.data.CsvData);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #46                 // String parameter
       4: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
       7: ifeq          37
      10: aload_2
      11: ldc           #47                 // String rowData
      13: invokevirtual #48                 // Method org/jumpmind/symmetric/io/data/CsvData.getCsvData:(Ljava/lang/String;)Ljava/lang/String;
      16: ifnull        37
      19: aload_2
      20: ldc           #47                 // String rowData
      22: invokevirtual #48                 // Method org/jumpmind/symmetric/io/data/CsvData.getCsvData:(Ljava/lang/String;)Ljava/lang/String;
      25: ldc           #49                 // String job.
      27: invokevirtual #50                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  private boolean isTransformFlushNeeded(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #51                 // String transform_column
       4: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
       7: ifne          20
      10: aload_0
      11: aload_1
      12: ldc           #52                 // String transform_table
      14: invokespecial #40                 // Method matchesTable:(Lorg/jumpmind/db/model/Table;Ljava/lang/String;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean matchesTable(org.jumpmind.db.model.Table, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        37
       4: aload_1
       5: invokevirtual #53                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
       8: ifnull        37
      11: aload_1
      12: invokevirtual #53                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
      15: aload_0
      16: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
      19: invokeinterface #54,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getParameterService:()Lorg/jumpmind/symmetric/service/IParameterService;
      24: invokeinterface #55,  1           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getTablePrefix:()Ljava/lang/String;
      29: aload_2
      30: invokestatic  #56                 // Method org/jumpmind/symmetric/common/TableConstants.getTableName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #57                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  public void batchCommitted(org.jumpmind.symmetric.io.data.DataContext);
    Code:
       0: aload_0
       1: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
       4: invokeinterface #54,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getParameterService:()Lorg/jumpmind/symmetric/service/IParameterService;
       9: astore_2
      10: aload_1
      11: aload_0
      12: getfield      #13                 // Field CTX_KEY_FLUSH_CHANNELS_NEEDED:Ljava/lang/String;
      15: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/DataContext.get:(Ljava/lang/String;)Ljava/lang/Object;
      18: ifnull        45
      21: getstatic     #59                 // Field log:Lorg/slf4j/Logger;
      24: ldc           #60                 // String Channels flushed because new channels came through the data loader
      26: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      31: aload_0
      32: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
      35: invokeinterface #62,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getConfigurationService:()Lorg/jumpmind/symmetric/service/IConfigurationService;
      40: invokeinterface #63,  1           // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.reloadChannels:()V
      45: aload_1
      46: aload_0
      47: getfield      #11                 // Field CTX_KEY_RESYNC_NEEDED:Ljava/lang/String;
      50: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/DataContext.get:(Ljava/lang/String;)Ljava/lang/Object;
      53: ifnull        91
      56: aload_2
      57: ldc           #64                 // String auto.sync.triggers
      59: invokeinterface #65,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      64: ifeq          91
      67: getstatic     #59                 // Field log:Lorg/slf4j/Logger;
      70: ldc           #66                 // String About to syncTriggers because new configuration came through the data loader
      72: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      77: aload_0
      78: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
      81: invokeinterface #67,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getTriggerRouterService:()Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      86: invokeinterface #68,  1           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.syncTriggers:()V
      91: aload_1
      92: aload_0
      93: getfield      #15                 // Field CTX_KEY_FLUSH_TRANSFORMS_NEEDED:Ljava/lang/String;
      96: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/DataContext.get:(Ljava/lang/String;)Ljava/lang/Object;
      99: ifnull        126
     102: getstatic     #59                 // Field log:Lorg/slf4j/Logger;
     105: ldc           #69                 // String About to refresh the cache of transformation because new configuration came through the data loader
     107: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     112: aload_0
     113: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
     116: invokeinterface #70,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getTransformService:()Lorg/jumpmind/symmetric/service/ITransformService;
     121: invokeinterface #71,  1           // InterfaceMethod org/jumpmind/symmetric/service/ITransformService.resetCache:()V
     126: aload_1
     127: aload_0
     128: getfield      #19                 // Field CTX_KEY_FLUSH_CONFLICTS_NEEDED:Ljava/lang/String;
     131: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/DataContext.get:(Ljava/lang/String;)Ljava/lang/Object;
     134: ifnull        161
     137: getstatic     #59                 // Field log:Lorg/slf4j/Logger;
     140: ldc           #72                 // String About to refresh the cache of conflict settings because new configuration came through the data loader
     142: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     147: aload_0
     148: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
     151: invokeinterface #73,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getDataLoaderService:()Lorg/jumpmind/symmetric/service/IDataLoaderService;
     156: invokeinterface #74,  1           // InterfaceMethod org/jumpmind/symmetric/service/IDataLoaderService.reloadConflictNodeGroupLinks:()V
     161: aload_1
     162: aload_0
     163: getfield      #17                 // Field CTX_KEY_FLUSH_PARAMETERS_NEEDED:Ljava/lang/String;
     166: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/DataContext.get:(Ljava/lang/String;)Ljava/lang/Object;
     169: ifnull        188
     172: getstatic     #59                 // Field log:Lorg/slf4j/Logger;
     175: ldc           #75                 // String About to refresh the cache of parameters because new configuration came through the data loader
     177: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     182: aload_2
     183: invokeinterface #76,  1           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.rereadParameters:()V
     188: aload_1
     189: aload_0
     190: getfield      #21                 // Field CTX_KEY_RESTART_JOBMANAGER_NEEDED:Ljava/lang/String;
     193: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/DataContext.get:(Ljava/lang/String;)Ljava/lang/Object;
     196: ifnull        235
     199: aload_0
     200: getfield      #22                 // Field engine:Lorg/jumpmind/symmetric/ISymmetricEngine;
     203: invokeinterface #77,  1           // InterfaceMethod org/jumpmind/symmetric/ISymmetricEngine.getJobManager:()Lorg/jumpmind/symmetric/job/IJobManager;
     208: astore_3
     209: aload_3
     210: ifnull        235
     213: getstatic     #59                 // Field log:Lorg/slf4j/Logger;
     216: ldc           #78                 // String About to restart jobs because a new schedule came through the data loader
     218: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     223: aload_3
     224: invokeinterface #79,  1           // InterfaceMethod org/jumpmind/symmetric/job/IJobManager.stopJobs:()V
     229: aload_3
     230: invokeinterface #80,  1           // InterfaceMethod org/jumpmind/symmetric/job/IJobManager.startJobs:()V
     235: return

  static {};
    Code:
       0: ldc_w         #6                  // class org/jumpmind/symmetric/load/ConfigurationChangedFilter
       3: invokestatic  #81                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #59                 // Field log:Lorg/slf4j/Logger;
       9: return
}
