Compiled from "DefaultDataLoaderFactory.java"
class org.jumpmind.symmetric.load.DefaultDataLoaderFactory$1 extends org.jumpmind.symmetric.io.data.writer.DefaultTransformWriterConflictResolver {
  final org.jumpmind.symmetric.db.ISymmetricDialect val$symmetricDialect;

  final java.lang.String val$sourceNodeId;

  final org.jumpmind.symmetric.load.DefaultDataLoaderFactory this$0;

  org.jumpmind.symmetric.load.DefaultDataLoaderFactory$1(org.jumpmind.symmetric.load.DefaultDataLoaderFactory, org.jumpmind.symmetric.io.data.writer.TransformWriter, org.jumpmind.symmetric.db.ISymmetricDialect, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/load/DefaultDataLoaderFactory;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field val$sourceNodeId:Ljava/lang/String;
      16: aload_0
      17: aload_2
      18: invokespecial #4                  // Method org/jumpmind/symmetric/io/data/writer/DefaultTransformWriterConflictResolver."<init>":(Lorg/jumpmind/symmetric/io/data/writer/TransformWriter;)V
      21: return

  protected void beforeResolutionAttempt(org.jumpmind.symmetric.io.data.writer.Conflict);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/jumpmind/symmetric/io/data/writer/Conflict.getPingBack:()Lorg/jumpmind/symmetric/io/data/writer/Conflict$PingBack;
       4: getstatic     #6                  // Field org/jumpmind/symmetric/io/data/writer/Conflict$PingBack.OFF:Lorg/jumpmind/symmetric/io/data/writer/Conflict$PingBack;
       7: if_acmpeq     40
      10: aload_0
      11: getfield      #7                  // Field transformWriter:Lorg/jumpmind/symmetric/io/data/writer/TransformWriter;
      14: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/writer/TransformWriter.getTargetWriter:()Lorg/jumpmind/symmetric/io/data/IDataWriter;
      17: checkcast     #9                  // class org/jumpmind/symmetric/io/data/writer/DatabaseWriter
      20: astore_2
      21: aload_2
      22: invokevirtual #10                 // Method org/jumpmind/symmetric/io/data/writer/DatabaseWriter.getTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      25: astore_3
      26: aload_3
      27: ifnull        40
      30: aload_0
      31: getfield      #2                  // Field val$symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      34: aload_3
      35: invokeinterface #11,  2           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.enableSyncTriggers:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      40: return

  protected void afterResolutionAttempt(org.jumpmind.symmetric.io.data.writer.Conflict);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/jumpmind/symmetric/io/data/writer/Conflict.getPingBack:()Lorg/jumpmind/symmetric/io/data/writer/Conflict$PingBack;
       4: getstatic     #12                 // Field org/jumpmind/symmetric/io/data/writer/Conflict$PingBack.SINGLE_ROW:Lorg/jumpmind/symmetric/io/data/writer/Conflict$PingBack;
       7: if_acmpne     44
      10: aload_0
      11: getfield      #7                  // Field transformWriter:Lorg/jumpmind/symmetric/io/data/writer/TransformWriter;
      14: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/writer/TransformWriter.getTargetWriter:()Lorg/jumpmind/symmetric/io/data/IDataWriter;
      17: checkcast     #9                  // class org/jumpmind/symmetric/io/data/writer/DatabaseWriter
      20: astore_2
      21: aload_2
      22: invokevirtual #10                 // Method org/jumpmind/symmetric/io/data/writer/DatabaseWriter.getTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      25: astore_3
      26: aload_3
      27: ifnull        44
      30: aload_0
      31: getfield      #2                  // Field val$symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      34: aload_3
      35: aload_0
      36: getfield      #3                  // Field val$sourceNodeId:Ljava/lang/String;
      39: invokeinterface #13,  3           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.disableSyncTriggers:(Lorg/jumpmind/db/sql/ISqlTransaction;Ljava/lang/String;)V
      44: return
}
