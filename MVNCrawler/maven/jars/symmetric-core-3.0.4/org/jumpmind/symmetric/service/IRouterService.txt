Compiled from "IRouterService.java"
public interface org.jumpmind.symmetric.service.IRouterService extends org.jumpmind.symmetric.service.IService {
  public abstract long routeData(boolean);

  public abstract long getUnroutedDataCount();

  public abstract boolean shouldDataBeRouted(org.jumpmind.symmetric.route.SimpleRouterContext, org.jumpmind.symmetric.model.DataMetaData, org.jumpmind.symmetric.model.Node, boolean);

  public abstract void addDataRouter(java.lang.String, org.jumpmind.symmetric.route.IDataRouter);

  public abstract void addBatchAlgorithm(java.lang.String, org.jumpmind.symmetric.route.IBatchAlgorithm);

  public abstract java.util.List<java.lang.String> getAvailableBatchAlgorithms();

  public abstract java.util.Map<java.lang.String, org.jumpmind.symmetric.route.IDataRouter> getRouters();

  public abstract void stop();
}
