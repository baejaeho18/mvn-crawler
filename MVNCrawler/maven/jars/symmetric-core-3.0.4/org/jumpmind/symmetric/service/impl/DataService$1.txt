Compiled from "DataService.java"
class org.jumpmind.symmetric.service.impl.DataService$1 implements java.util.Comparator<org.jumpmind.symmetric.model.TriggerHistory> {
  final java.util.Map val$triggerRoutersByHistoryId;

  final java.util.List val$sortedTables;

  final org.jumpmind.symmetric.service.impl.DataService this$0;

  org.jumpmind.symmetric.service.impl.DataService$1(org.jumpmind.symmetric.service.impl.DataService, java.util.Map, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataService;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$triggerRoutersByHistoryId:Ljava/util/Map;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$sortedTables:Ljava/util/List;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public int compare(org.jumpmind.symmetric.model.TriggerHistory, org.jumpmind.symmetric.model.TriggerHistory);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$triggerRoutersByHistoryId:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #5                  // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
       8: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #8                  // class java/util/List
      19: astore_3
      20: iconst_0
      21: istore        4
      23: aload_3
      24: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore        5
      31: aload         5
      33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          73
      41: aload         5
      43: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #12                 // class org/jumpmind/symmetric/model/TriggerRouter
      51: astore        6
      53: aload         6
      55: invokevirtual #13                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
      58: iload         4
      60: if_icmple     70
      63: aload         6
      65: invokevirtual #13                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
      68: istore        4
      70: goto          31
      73: aload_0
      74: getfield      #2                  // Field val$triggerRoutersByHistoryId:Ljava/util/Map;
      77: aload_2
      78: invokevirtual #5                  // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
      81: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #8                  // class java/util/List
      92: astore        5
      94: iconst_0
      95: istore        6
      97: aload         5
      99: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore        7
     106: aload         7
     108: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          148
     116: aload         7
     118: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #12                 // class org/jumpmind/symmetric/model/TriggerRouter
     126: astore        8
     128: aload         8
     130: invokevirtual #13                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
     133: iload         6
     135: if_icmple     145
     138: aload         8
     140: invokevirtual #13                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
     143: istore        6
     145: goto          106
     148: iload         4
     150: iload         6
     152: if_icmpge     157
     155: iconst_m1
     156: ireturn
     157: iload         4
     159: iload         6
     161: if_icmple     166
     164: iconst_1
     165: ireturn
     166: aload_0
     167: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataService;
     170: getfield      #14                 // Field org/jumpmind/symmetric/service/impl/DataService.platform:Lorg/jumpmind/db/platform/IDatabasePlatform;
     173: aload_1
     174: invokevirtual #15                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     177: aload_1
     178: invokevirtual #16                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     181: aload_1
     182: invokevirtual #17                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     185: iconst_0
     186: invokeinterface #18,  5           // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getTableFromCache:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jumpmind/db/model/Table;
     191: astore        7
     193: aload_0
     194: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataService;
     197: getfield      #14                 // Field org/jumpmind/symmetric/service/impl/DataService.platform:Lorg/jumpmind/db/platform/IDatabasePlatform;
     200: aload_2
     201: invokevirtual #15                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     204: aload_2
     205: invokevirtual #16                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     208: aload_2
     209: invokevirtual #17                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     212: iconst_0
     213: invokeinterface #18,  5           // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getTableFromCache:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jumpmind/db/model/Table;
     218: astore        8
     220: new           #19                 // class java/lang/Integer
     223: dup
     224: aload_0
     225: getfield      #3                  // Field val$sortedTables:Ljava/util/List;
     228: aload         7
     230: invokeinterface #20,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     235: invokespecial #21                 // Method java/lang/Integer."<init>":(I)V
     238: new           #19                 // class java/lang/Integer
     241: dup
     242: aload_0
     243: getfield      #3                  // Field val$sortedTables:Ljava/util/List;
     246: aload         8
     248: invokeinterface #20,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     253: invokespecial #21                 // Method java/lang/Integer."<init>":(I)V
     256: invokevirtual #22                 // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I
     259: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/jumpmind/symmetric/model/TriggerHistory
       5: aload_2
       6: checkcast     #23                 // class org/jumpmind/symmetric/model/TriggerHistory
       9: invokevirtual #24                 // Method compare:(Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/TriggerHistory;)I
      12: ireturn
}
