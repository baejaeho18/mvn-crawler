Compiled from "OutgoingBatchService.java"
class org.jumpmind.symmetric.service.impl.OutgoingBatchService$OutgoingBatchMapper implements org.jumpmind.db.sql.ISqlRowMapper<org.jumpmind.symmetric.model.OutgoingBatch> {
  private boolean includeDisabledChannels;

  private boolean limitBasedOnMaxBatchToSend;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.model.Channel> channels;

  private java.util.Map<java.lang.String, java.lang.Integer> countByChannel;

  final org.jumpmind.symmetric.service.impl.OutgoingBatchService this$0;

  public org.jumpmind.symmetric.service.impl.OutgoingBatchService$OutgoingBatchMapper(org.jumpmind.symmetric.service.impl.OutgoingBatchService, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/OutgoingBatchService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field includeDisabledChannels:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field limitBasedOnMaxBatchToSend:Z
      19: aload_0
      20: iload_2
      21: putfield      #3                  // Field includeDisabledChannels:Z
      24: aload_0
      25: iload_3
      26: putfield      #4                  // Field limitBasedOnMaxBatchToSend:Z
      29: aload_0
      30: aload_1
      31: invokestatic  #5                  // Method org/jumpmind/symmetric/service/impl/OutgoingBatchService.access$000:(Lorg/jumpmind/symmetric/service/impl/OutgoingBatchService;)Lorg/jumpmind/symmetric/service/IConfigurationService;
      34: iconst_0
      35: invokeinterface #6,  2            // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getChannels:(Z)Ljava/util/Map;
      40: putfield      #7                  // Field channels:Ljava/util/Map;
      43: aload_0
      44: new           #8                  // class java/util/HashMap
      47: dup
      48: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      51: putfield      #10                 // Field countByChannel:Ljava/util/Map;
      54: return

  public org.jumpmind.symmetric.model.OutgoingBatch mapRow(org.jumpmind.db.sql.Row);
    Code:
       0: aload_1
       1: ldc           #11                 // String channel_id
       3: invokevirtual #12                 // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: getfield      #7                  // Field channels:Ljava/util/Map;
      11: aload_2
      12: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #14                 // class org/jumpmind/symmetric/model/Channel
      20: astore_3
      21: aload_0
      22: getfield      #10                 // Field countByChannel:Ljava/util/Map;
      25: aload_2
      26: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #15                 // class java/lang/Integer
      34: astore        4
      36: aload         4
      38: ifnonnull     47
      41: iconst_0
      42: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: astore        4
      47: aload_3
      48: ifnull        443
      51: aload_0
      52: getfield      #3                  // Field includeDisabledChannels:Z
      55: ifne          65
      58: aload_3
      59: invokevirtual #17                 // Method org/jumpmind/symmetric/model/Channel.isEnabled:()Z
      62: ifeq          443
      65: aload_0
      66: getfield      #4                  // Field limitBasedOnMaxBatchToSend:Z
      69: ifeq          84
      72: aload         4
      74: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      77: aload_3
      78: invokevirtual #19                 // Method org/jumpmind/symmetric/model/Channel.getMaxBatchToSend:()I
      81: if_icmpgt     443
      84: aload         4
      86: astore        5
      88: aload         4
      90: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      93: iconst_1
      94: iadd
      95: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: dup
      99: astore        4
     101: astore        6
     103: aload         5
     105: pop
     106: new           #20                 // class org/jumpmind/symmetric/model/OutgoingBatch
     109: dup
     110: invokespecial #21                 // Method org/jumpmind/symmetric/model/OutgoingBatch."<init>":()V
     113: astore        5
     115: aload         5
     117: aload_2
     118: invokevirtual #22                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setChannelId:(Ljava/lang/String;)V
     121: aload         5
     123: aload_1
     124: ldc           #23                 // String node_id
     126: invokevirtual #12                 // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     129: invokevirtual #24                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setNodeId:(Ljava/lang/String;)V
     132: aload         5
     134: aload_1
     135: ldc           #25                 // String status
     137: invokevirtual #12                 // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     140: invokevirtual #26                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setStatus:(Ljava/lang/String;)V
     143: aload         5
     145: aload_1
     146: ldc           #27                 // String byte_count
     148: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     151: invokevirtual #29                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setByteCount:(J)V
     154: aload         5
     156: aload_1
     157: ldc           #30                 // String extract_count
     159: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     162: invokevirtual #31                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setExtractCount:(J)V
     165: aload         5
     167: aload_1
     168: ldc           #32                 // String sent_count
     170: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     173: invokevirtual #33                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSentCount:(J)V
     176: aload         5
     178: aload_1
     179: ldc           #34                 // String load_count
     181: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     184: invokevirtual #35                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setLoadCount:(J)V
     187: aload         5
     189: aload_1
     190: ldc           #36                 // String data_event_count
     192: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     195: invokevirtual #37                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setDataEventCount:(J)V
     198: aload         5
     200: aload_1
     201: ldc           #38                 // String reload_event_count
     203: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     206: invokevirtual #39                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setReloadEventCount:(J)V
     209: aload         5
     211: aload_1
     212: ldc           #40                 // String insert_event_count
     214: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     217: invokevirtual #41                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setInsertEventCount:(J)V
     220: aload         5
     222: aload_1
     223: ldc           #42                 // String update_event_count
     225: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     228: invokevirtual #43                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setUpdateEventCount:(J)V
     231: aload         5
     233: aload_1
     234: ldc           #44                 // String delete_event_count
     236: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     239: invokevirtual #45                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setDeleteEventCount:(J)V
     242: aload         5
     244: aload_1
     245: ldc           #46                 // String other_event_count
     247: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     250: invokevirtual #47                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setOtherEventCount:(J)V
     253: aload         5
     255: aload_1
     256: ldc           #48                 // String ignore_count
     258: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     261: invokevirtual #49                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setIgnoreCount:(J)V
     264: aload         5
     266: aload_1
     267: ldc           #50                 // String router_millis
     269: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     272: invokevirtual #51                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setRouterMillis:(J)V
     275: aload         5
     277: aload_1
     278: ldc           #52                 // String network_millis
     280: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     283: invokevirtual #53                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setNetworkMillis:(J)V
     286: aload         5
     288: aload_1
     289: ldc           #54                 // String filter_millis
     291: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     294: invokevirtual #55                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setFilterMillis:(J)V
     297: aload         5
     299: aload_1
     300: ldc           #56                 // String load_millis
     302: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     305: invokevirtual #57                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setLoadMillis:(J)V
     308: aload         5
     310: aload_1
     311: ldc           #58                 // String extract_millis
     313: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     316: invokevirtual #59                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setExtractMillis:(J)V
     319: aload         5
     321: aload_1
     322: ldc           #60                 // String sql_state
     324: invokevirtual #12                 // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     327: invokevirtual #61                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSqlState:(Ljava/lang/String;)V
     330: aload         5
     332: aload_1
     333: ldc           #62                 // String sql_code
     335: invokevirtual #63                 // Method org/jumpmind/db/sql/Row.getInt:(Ljava/lang/String;)I
     338: invokevirtual #64                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSqlCode:(I)V
     341: aload         5
     343: aload_1
     344: ldc           #65                 // String sql_message
     346: invokevirtual #12                 // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     349: invokevirtual #66                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSqlMessage:(Ljava/lang/String;)V
     352: aload         5
     354: aload_1
     355: ldc           #67                 // String failed_data_id
     357: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     360: invokevirtual #68                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setFailedDataId:(J)V
     363: aload         5
     365: aload_1
     366: ldc           #69                 // String last_update_hostname
     368: invokevirtual #12                 // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     371: invokevirtual #70                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setLastUpdatedHostName:(Ljava/lang/String;)V
     374: aload         5
     376: aload_1
     377: ldc           #71                 // String last_update_time
     379: invokevirtual #72                 // Method org/jumpmind/db/sql/Row.getDateTime:(Ljava/lang/String;)Ljava/util/Date;
     382: invokevirtual #73                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setLastUpdatedTime:(Ljava/util/Date;)V
     385: aload         5
     387: aload_1
     388: ldc           #74                 // String create_time
     390: invokevirtual #72                 // Method org/jumpmind/db/sql/Row.getDateTime:(Ljava/lang/String;)Ljava/util/Date;
     393: invokevirtual #75                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setCreateTime:(Ljava/util/Date;)V
     396: aload         5
     398: aload_1
     399: ldc           #76                 // String batch_id
     401: invokevirtual #28                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     404: invokevirtual #77                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setBatchId:(J)V
     407: aload         5
     409: aload_1
     410: ldc           #78                 // String load_flag
     412: invokevirtual #79                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
     415: invokevirtual #80                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setLoadFlag:(Z)V
     418: aload         5
     420: aload_1
     421: ldc           #81                 // String error_flag
     423: invokevirtual #79                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
     426: invokevirtual #82                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setErrorFlag:(Z)V
     429: aload         5
     431: aload_1
     432: ldc           #83                 // String common_flag
     434: invokevirtual #79                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
     437: invokevirtual #84                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setCommonFlag:(Z)V
     440: aload         5
     442: areturn
     443: aconst_null
     444: areturn

  public java.lang.Object mapRow(org.jumpmind.db.sql.Row);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #85                 // Method mapRow:(Lorg/jumpmind/db/sql/Row;)Lorg/jumpmind/symmetric/model/OutgoingBatch;
       5: areturn
}
