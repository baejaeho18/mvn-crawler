Compiled from "IIncomingBatchService.java"
public interface org.jumpmind.symmetric.service.IIncomingBatchService {
  public abstract int countIncomingBatchesInError();

  public abstract org.jumpmind.symmetric.model.IncomingBatch findIncomingBatch(long, java.lang.String);

  public abstract java.util.List<org.jumpmind.symmetric.model.IncomingBatch> findIncomingBatchErrors(int);

  public abstract boolean acquireIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);

  public abstract void insertIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);

  public abstract int updateIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);

  public abstract int deleteIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);

  public abstract java.util.List<java.util.Date> listIncomingBatchTimes(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<org.jumpmind.symmetric.model.IncomingBatch$Status>, boolean);

  public abstract java.util.List<org.jumpmind.symmetric.model.IncomingBatch> listIncomingBatches(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<org.jumpmind.symmetric.model.IncomingBatch$Status>, java.util.Date, int, boolean);

  public abstract void markIncomingBatchesOk(java.lang.String);

  public abstract java.util.List<org.jumpmind.symmetric.model.IncomingBatch> listIncomingBatchesInErrorFor(java.lang.String);
}
