Compiled from "DataExtractorService.java"
class org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource$1 implements org.jumpmind.db.sql.ISqlRowMapper<org.jumpmind.symmetric.model.Data> {
  final org.jumpmind.symmetric.model.TriggerHistory val$triggerHistory;

  final org.jumpmind.symmetric.model.TriggerRouter val$triggerRouter;

  final org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource this$1;

  org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource$1(org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource, org.jumpmind.symmetric.model.TriggerHistory, org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$triggerHistory:Lorg/jumpmind/symmetric/model/TriggerHistory;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public org.jumpmind.symmetric.model.Data mapRow(org.jumpmind.db.sql.Row);
    Code:
       0: new           #5                  // class org/jumpmind/symmetric/model/Data
       3: dup
       4: lconst_0
       5: aconst_null
       6: aload_1
       7: invokevirtual #6                  // Method org/jumpmind/db/sql/Row.stringValue:()Ljava/lang/String;
      10: getstatic     #7                  // Field org/jumpmind/symmetric/io/data/DataEventType.INSERT:Lorg/jumpmind/symmetric/io/data/DataEventType;
      13: aload_0
      14: getfield      #2                  // Field val$triggerHistory:Lorg/jumpmind/symmetric/model/TriggerHistory;
      17: invokevirtual #8                  // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      20: aconst_null
      21: aload_0
      22: getfield      #2                  // Field val$triggerHistory:Lorg/jumpmind/symmetric/model/TriggerHistory;
      25: aload_0
      26: getfield      #1                  // Field this$1:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      29: invokestatic  #9                  // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.access$500:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;)Lorg/jumpmind/symmetric/io/data/Batch;
      32: invokevirtual #10                 // Method org/jumpmind/symmetric/io/data/Batch.getChannelId:()Ljava/lang/String;
      35: aconst_null
      36: aconst_null
      37: invokespecial #11                 // Method org/jumpmind/symmetric/model/Data."<init>":(JLjava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/util/Date;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      40: astore_2
      41: aload_2
      42: ldc           #12                 // String routerId
      44: aload_0
      45: getfield      #3                  // Field val$triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
      48: invokevirtual #13                 // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      51: invokevirtual #14                 // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
      54: invokevirtual #15                 // Method org/jumpmind/symmetric/model/Data.putAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      57: aload_2
      58: areturn

  public java.lang.Object mapRow(org.jumpmind.db.sql.Row);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method mapRow:(Lorg/jumpmind/db/sql/Row;)Lorg/jumpmind/symmetric/model/Data;
       5: areturn
}
