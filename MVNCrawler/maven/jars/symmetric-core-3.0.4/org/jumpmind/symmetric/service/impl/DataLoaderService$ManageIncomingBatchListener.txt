Compiled from "DataLoaderService.java"
class org.jumpmind.symmetric.service.impl.DataLoaderService$ManageIncomingBatchListener implements org.jumpmind.symmetric.io.data.IDataProcessorListener {
  protected java.util.List<org.jumpmind.symmetric.model.IncomingBatch> batchesProcessed;

  protected org.jumpmind.symmetric.model.IncomingBatch currentBatch;

  final org.jumpmind.symmetric.service.impl.DataLoaderService this$0;

  org.jumpmind.symmetric.service.impl.DataLoaderService$ManageIncomingBatchListener(org.jumpmind.symmetric.service.impl.DataLoaderService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/ArrayList
      13: dup
      14: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #5                  // Field batchesProcessed:Ljava/util/List;
      20: return

  public void beforeBatchEnd(org.jumpmind.symmetric.io.data.DataContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method enableSyncTriggers:(Lorg/jumpmind/symmetric/io/data/DataContext;)V
       5: return

  public boolean beforeBatchStarted(org.jumpmind.symmetric.io.data.DataContext);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
       5: aload_1
       6: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/DataContext.getBatch:()Lorg/jumpmind/symmetric/io/data/Batch;
       9: astore_2
      10: aload_0
      11: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      14: getfield      #9                  // Field org/jumpmind/symmetric/service/impl/DataLoaderService.parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      17: ldc           #10                 // String dataloader.enable
      19: invokeinterface #11,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      24: ifne          46
      27: aload_2
      28: invokevirtual #12                 // Method org/jumpmind/symmetric/io/data/Batch.getChannelId:()Ljava/lang/String;
      31: ifnull        89
      34: aload_2
      35: invokevirtual #12                 // Method org/jumpmind/symmetric/io/data/Batch.getChannelId:()Ljava/lang/String;
      38: ldc           #13                 // String config
      40: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          89
      46: new           #15                 // class org/jumpmind/symmetric/model/IncomingBatch
      49: dup
      50: aload_2
      51: invokespecial #16                 // Method org/jumpmind/symmetric/model/IncomingBatch."<init>":(Lorg/jumpmind/symmetric/io/data/Batch;)V
      54: astore_3
      55: aload_0
      56: getfield      #5                  // Field batchesProcessed:Ljava/util/List;
      59: aload_3
      60: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      70: invokestatic  #18                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$200:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/service/IIncomingBatchService;
      73: aload_3
      74: invokeinterface #19,  2           // InterfaceMethod org/jumpmind/symmetric/service/IIncomingBatchService.acquireIncomingBatch:(Lorg/jumpmind/symmetric/model/IncomingBatch;)Z
      79: ifeq          89
      82: aload_0
      83: aload_3
      84: putfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      87: iconst_1
      88: ireturn
      89: iconst_0
      90: ireturn

  public void afterBatchStarted(org.jumpmind.symmetric.io.data.DataContext);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/DataContext.getBatch:()Lorg/jumpmind/symmetric/io/data/Batch;
       4: astore_2
       5: aload_0
       6: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
       9: getfield      #20                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      12: aload_1
      13: invokevirtual #21                 // Method org/jumpmind/symmetric/io/data/DataContext.findTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      16: aload_2
      17: invokevirtual #22                 // Method org/jumpmind/symmetric/io/data/Batch.getNodeId:()Ljava/lang/String;
      20: invokeinterface #23,  3           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.disableSyncTriggers:(Lorg/jumpmind/db/sql/ISqlTransaction;Ljava/lang/String;)V
      25: return

  public void batchSuccessful(org.jumpmind.symmetric.io.data.DataContext);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/DataContext.getBatch:()Lorg/jumpmind/symmetric/io/data/Batch;
       4: astore_2
       5: aload_0
       6: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
       9: aload_1
      10: invokevirtual #24                 // Method org/jumpmind/symmetric/io/data/DataContext.getReader:()Lorg/jumpmind/symmetric/io/data/IDataReader;
      13: invokeinterface #25,  1           // InterfaceMethod org/jumpmind/symmetric/io/data/IDataReader.getStatistics:()Ljava/util/Map;
      18: aload_2
      19: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #27                 // class org/jumpmind/util/Statistics
      27: aload_1
      28: invokevirtual #28                 // Method org/jumpmind/symmetric/io/data/DataContext.getWriter:()Lorg/jumpmind/symmetric/io/data/IDataWriter;
      31: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/symmetric/io/data/IDataWriter.getStatistics:()Ljava/util/Map;
      36: aload_2
      37: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #27                 // class org/jumpmind/util/Statistics
      45: iconst_1
      46: invokevirtual #30                 // Method org/jumpmind/symmetric/model/IncomingBatch.setValues:(Lorg/jumpmind/util/Statistics;Lorg/jumpmind/util/Statistics;Z)V
      49: aload_0
      50: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      53: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      56: aload_0
      57: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      60: invokevirtual #32                 // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
      63: aload_0
      64: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      67: invokevirtual #33                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatementCount:()J
      70: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementDataLoaded:(Ljava/lang/String;J)V
      75: aload_0
      76: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      79: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      82: aload_0
      83: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      86: invokevirtual #32                 // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
      89: aload_0
      90: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      93: invokevirtual #35                 // Method org/jumpmind/symmetric/model/IncomingBatch.getByteCount:()J
      96: invokeinterface #36,  4           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementDataBytesLoaded:(Ljava/lang/String;J)V
     101: aload_0
     102: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     105: invokevirtual #37                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     108: astore_3
     109: aload_0
     110: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     113: getstatic     #38                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.OK:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     116: invokevirtual #39                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
     119: aload_0
     120: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     123: invokestatic  #18                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$200:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/service/IIncomingBatchService;
     126: aload_0
     127: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     130: invokeinterface #40,  2           // InterfaceMethod org/jumpmind/symmetric/service/IIncomingBatchService.updateIncomingBatch:(Lorg/jumpmind/symmetric/model/IncomingBatch;)I
     135: pop
     136: goto          152
     139: astore        4
     141: aload_0
     142: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     145: aload_3
     146: invokevirtual #39                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
     149: aload         4
     151: athrow
     152: return
    Exception table:
       from    to  target type
         109   136   139   Class java/lang/RuntimeException

  protected void enableSyncTriggers(org.jumpmind.symmetric.io.data.DataContext);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method org/jumpmind/symmetric/io/data/DataContext.findTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
       4: astore_2
       5: aload_2
       6: ifnull        22
       9: aload_0
      10: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      13: getfield      #20                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      16: aload_2
      17: invokeinterface #42,  2           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.enableSyncTriggers:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      22: goto          43
      25: astore_2
      26: aload_0
      27: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      30: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
      33: aload_2
      34: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      37: aload_2
      38: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: return
    Exception table:
       from    to  target type
           0    22    25   Class java/lang/Exception

  public void batchInError(org.jumpmind.symmetric.io.data.DataContext, java.lang.Exception);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/DataContext.getBatch:()Lorg/jumpmind/symmetric/io/data/Batch;
       4: astore_3
       5: aload_1
       6: invokevirtual #28                 // Method org/jumpmind/symmetric/io/data/DataContext.getWriter:()Lorg/jumpmind/symmetric/io/data/IDataWriter;
       9: ifnull        131
      12: aload_0
      13: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      16: aload_1
      17: invokevirtual #24                 // Method org/jumpmind/symmetric/io/data/DataContext.getReader:()Lorg/jumpmind/symmetric/io/data/IDataReader;
      20: invokeinterface #25,  1           // InterfaceMethod org/jumpmind/symmetric/io/data/IDataReader.getStatistics:()Ljava/util/Map;
      25: aload_3
      26: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #27                 // class org/jumpmind/util/Statistics
      34: aload_1
      35: invokevirtual #28                 // Method org/jumpmind/symmetric/io/data/DataContext.getWriter:()Lorg/jumpmind/symmetric/io/data/IDataWriter;
      38: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/symmetric/io/data/IDataWriter.getStatistics:()Ljava/util/Map;
      43: aload_3
      44: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #27                 // class org/jumpmind/util/Statistics
      52: iconst_0
      53: invokevirtual #30                 // Method org/jumpmind/symmetric/model/IncomingBatch.setValues:(Lorg/jumpmind/util/Statistics;Lorg/jumpmind/util/Statistics;Z)V
      56: aload_0
      57: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      60: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      63: aload_0
      64: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      67: invokevirtual #32                 // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
      70: aload_0
      71: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      74: invokevirtual #33                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatementCount:()J
      77: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementDataLoaded:(Ljava/lang/String;J)V
      82: aload_0
      83: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
      86: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      89: aload_0
      90: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
      93: invokevirtual #32                 // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
      96: aload_0
      97: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     100: invokevirtual #35                 // Method org/jumpmind/symmetric/model/IncomingBatch.getByteCount:()J
     103: invokeinterface #36,  4           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementDataBytesLoaded:(Ljava/lang/String;J)V
     108: aload_0
     109: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     112: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/statistic/IStatisticManager;
     115: aload_0
     116: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     119: invokevirtual #32                 // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
     122: lconst_1
     123: invokeinterface #47,  4           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementDataLoadedErrors:(Ljava/lang/String;J)V
     128: goto          146
     131: aload_0
     132: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     135: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
     138: ldc           #48                 // String An error caused a batch to fail without attempting to load data
     140: aload_2
     141: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     146: aload_0
     147: aload_1
     148: invokevirtual #6                  // Method enableSyncTriggers:(Lorg/jumpmind/symmetric/io/data/DataContext;)V
     151: aload_0
     152: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     155: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/statistic/IStatisticManager;
     158: aload_0
     159: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     162: invokevirtual #32                 // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
     165: lconst_1
     166: invokeinterface #47,  4           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementDataLoadedErrors:(Ljava/lang/String;J)V
     171: aload_2
     172: instanceof    #49                 // class java/io/IOException
     175: ifne          192
     178: aload_2
     179: instanceof    #50                 // class org/jumpmind/symmetric/transport/TransportException
     182: ifne          192
     185: aload_2
     186: instanceof    #51                 // class org/jumpmind/exception/IoException
     189: ifeq          231
     192: aload_0
     193: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     196: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
     199: ldc           #52                 // String Failed to load batch {} because: {}
     201: aload_0
     202: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     205: invokevirtual #53                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeBatchId:()Ljava/lang/String;
     208: aload_2
     209: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     212: invokeinterface #54,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     217: aload_0
     218: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     221: aload_2
     222: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     225: invokevirtual #55                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlMessage:(Ljava/lang/String;)V
     228: goto          403
     231: aload_0
     232: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     235: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
     238: ldc           #52                 // String Failed to load batch {} because: {}
     240: iconst_2
     241: anewarray     #56                 // class java/lang/Object
     244: dup
     245: iconst_0
     246: aload_0
     247: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     250: invokevirtual #53                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeBatchId:()Ljava/lang/String;
     253: aastore
     254: dup
     255: iconst_1
     256: aload_2
     257: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     260: aastore
     261: invokeinterface #57,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     266: aload_0
     267: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     270: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
     273: invokeinterface #58,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     278: ifeq          298
     281: aload_0
     282: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     285: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
     288: aload_2
     289: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     292: aload_2
     293: invokeinterface #59,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     298: aload_0
     299: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     302: aload_2
     303: invokevirtual #60                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.unwrapSqlException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     306: astore        4
     308: aload         4
     310: ifnull        352
     313: aload_0
     314: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     317: aload         4
     319: invokevirtual #61                 // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     322: invokevirtual #62                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlState:(Ljava/lang/String;)V
     325: aload_0
     326: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     329: aload         4
     331: invokevirtual #63                 // Method java/sql/SQLException.getErrorCode:()I
     334: invokevirtual #64                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlCode:(I)V
     337: aload_0
     338: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     341: aload         4
     343: invokevirtual #65                 // Method java/sql/SQLException.getMessage:()Ljava/lang/String;
     346: invokevirtual #55                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlMessage:(Ljava/lang/String;)V
     349: goto          403
     352: aload_2
     353: instanceof    #66                 // class org/jumpmind/symmetric/io/data/writer/ConflictException
     356: ifeq          392
     359: aload_0
     360: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     363: aload_2
     364: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     367: invokevirtual #55                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlMessage:(Ljava/lang/String;)V
     370: aload_0
     371: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     374: ldc           #67                 // String CONFLICT
     376: invokevirtual #62                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlState:(Ljava/lang/String;)V
     379: aload_0
     380: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     383: sipush        -999
     386: invokevirtual #64                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlCode:(I)V
     389: goto          403
     392: aload_0
     393: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     396: aload_2
     397: invokevirtual #45                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     400: invokevirtual #55                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSqlMessage:(Ljava/lang/String;)V
     403: aload_0
     404: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     407: invokevirtual #37                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     410: getstatic     #38                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.OK:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     413: if_acmpeq     603
     416: aload_0
     417: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     420: getstatic     #68                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.ER:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     423: invokevirtual #39                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
     426: aload_1
     427: invokevirtual #69                 // Method org/jumpmind/symmetric/io/data/DataContext.getTable:()Lorg/jumpmind/db/model/Table;
     430: ifnull        603
     433: new           #70                 // class org/jumpmind/symmetric/model/IncomingError
     436: dup
     437: invokespecial #71                 // Method org/jumpmind/symmetric/model/IncomingError."<init>":()V
     440: astore        4
     442: aload         4
     444: aload_0
     445: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     448: invokevirtual #72                 // Method org/jumpmind/symmetric/model/IncomingBatch.getBatchId:()J
     451: invokevirtual #73                 // Method org/jumpmind/symmetric/model/IncomingError.setBatchId:(J)V
     454: aload         4
     456: aload_0
     457: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     460: invokevirtual #74                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeId:()Ljava/lang/String;
     463: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingError.setNodeId:(Ljava/lang/String;)V
     466: aload         4
     468: aload_1
     469: invokevirtual #69                 // Method org/jumpmind/symmetric/io/data/DataContext.getTable:()Lorg/jumpmind/db/model/Table;
     472: invokevirtual #76                 // Method org/jumpmind/db/model/Table.getColumns:()[Lorg/jumpmind/db/model/Column;
     475: invokestatic  #77                 // Method org/jumpmind/db/model/Table.getCommaDeliminatedColumns:([Lorg/jumpmind/db/model/Column;)Ljava/lang/String;
     478: invokevirtual #78                 // Method org/jumpmind/symmetric/model/IncomingError.setColumnNames:(Ljava/lang/String;)V
     481: aload         4
     483: aload_1
     484: invokevirtual #69                 // Method org/jumpmind/symmetric/io/data/DataContext.getTable:()Lorg/jumpmind/db/model/Table;
     487: invokevirtual #79                 // Method org/jumpmind/db/model/Table.getPrimaryKeyColumns:()[Lorg/jumpmind/db/model/Column;
     490: invokestatic  #77                 // Method org/jumpmind/db/model/Table.getCommaDeliminatedColumns:([Lorg/jumpmind/db/model/Column;)Ljava/lang/String;
     493: invokevirtual #80                 // Method org/jumpmind/symmetric/model/IncomingError.setPrimaryKeyColumnNames:(Ljava/lang/String;)V
     496: aload         4
     498: aload_1
     499: invokevirtual #81                 // Method org/jumpmind/symmetric/io/data/DataContext.getData:()Lorg/jumpmind/symmetric/io/data/CsvData;
     502: invokevirtual #82                 // Method org/jumpmind/symmetric/model/IncomingError.setCsvData:(Lorg/jumpmind/symmetric/io/data/CsvData;)V
     505: aload         4
     507: aload_1
     508: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/DataContext.getBatch:()Lorg/jumpmind/symmetric/io/data/Batch;
     511: invokevirtual #83                 // Method org/jumpmind/symmetric/io/data/Batch.getBinaryEncoding:()Lorg/jumpmind/db/util/BinaryEncoding;
     514: invokevirtual #84                 // Method org/jumpmind/symmetric/model/IncomingError.setBinaryEncoding:(Lorg/jumpmind/db/util/BinaryEncoding;)V
     517: aload         4
     519: aload_1
     520: invokevirtual #81                 // Method org/jumpmind/symmetric/io/data/DataContext.getData:()Lorg/jumpmind/symmetric/io/data/CsvData;
     523: invokevirtual #85                 // Method org/jumpmind/symmetric/io/data/CsvData.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
     526: invokevirtual #86                 // Method org/jumpmind/symmetric/model/IncomingError.setEventType:(Lorg/jumpmind/symmetric/io/data/DataEventType;)V
     529: aload         4
     531: aload_0
     532: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     535: invokevirtual #87                 // Method org/jumpmind/symmetric/model/IncomingBatch.getFailedLineNumber:()J
     538: invokevirtual #88                 // Method org/jumpmind/symmetric/model/IncomingError.setFailedLineNumber:(J)V
     541: aload         4
     543: aload_0
     544: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     547: invokevirtual #89                 // Method org/jumpmind/symmetric/model/IncomingBatch.getFailedRowNumber:()J
     550: invokevirtual #90                 // Method org/jumpmind/symmetric/model/IncomingError.setFailedRowNumber:(J)V
     553: aload         4
     555: aload_1
     556: invokevirtual #69                 // Method org/jumpmind/symmetric/io/data/DataContext.getTable:()Lorg/jumpmind/db/model/Table;
     559: invokevirtual #91                 // Method org/jumpmind/db/model/Table.getCatalog:()Ljava/lang/String;
     562: invokevirtual #92                 // Method org/jumpmind/symmetric/model/IncomingError.setTargetCatalogName:(Ljava/lang/String;)V
     565: aload         4
     567: aload_1
     568: invokevirtual #69                 // Method org/jumpmind/symmetric/io/data/DataContext.getTable:()Lorg/jumpmind/db/model/Table;
     571: invokevirtual #93                 // Method org/jumpmind/db/model/Table.getSchema:()Ljava/lang/String;
     574: invokevirtual #94                 // Method org/jumpmind/symmetric/model/IncomingError.setTargetSchemaName:(Ljava/lang/String;)V
     577: aload         4
     579: aload_1
     580: invokevirtual #69                 // Method org/jumpmind/symmetric/io/data/DataContext.getTable:()Lorg/jumpmind/db/model/Table;
     583: invokevirtual #95                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     586: invokevirtual #96                 // Method org/jumpmind/symmetric/model/IncomingError.setTargetTableName:(Ljava/lang/String;)V
     589: aload_0
     590: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     593: aload         4
     595: invokevirtual #97                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.insertIncomingError:(Lorg/jumpmind/symmetric/model/IncomingError;)V
     598: goto          603
     601: astore        4
     603: aload_0
     604: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     607: invokestatic  #18                 // Method org/jumpmind/symmetric/service/impl/DataLoaderService.access$200:(Lorg/jumpmind/symmetric/service/impl/DataLoaderService;)Lorg/jumpmind/symmetric/service/IIncomingBatchService;
     610: aload_0
     611: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     614: invokeinterface #40,  2           // InterfaceMethod org/jumpmind/symmetric/service/IIncomingBatchService.updateIncomingBatch:(Lorg/jumpmind/symmetric/model/IncomingBatch;)I
     619: pop
     620: goto          663
     623: astore_3
     624: aload_0
     625: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataLoaderService;
     628: getfield      #44                 // Field org/jumpmind/symmetric/service/impl/DataLoaderService.log:Lorg/slf4j/Logger;
     631: ldc           #99                 // String Failed to record status of batch {}
     633: aload_0
     634: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     637: ifnull        650
     640: aload_0
     641: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
     644: invokevirtual #53                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeBatchId:()Ljava/lang/String;
     647: goto          657
     650: aload_1
     651: invokevirtual #8                  // Method org/jumpmind/symmetric/io/data/DataContext.getBatch:()Lorg/jumpmind/symmetric/io/data/Batch;
     654: invokevirtual #100                // Method org/jumpmind/symmetric/io/data/Batch.getNodeBatchId:()Ljava/lang/String;
     657: aload_3
     658: invokeinterface #101,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     663: return
    Exception table:
       from    to  target type
         433   598   601   Class org/jumpmind/db/sql/UniqueKeyException
           0   620   623   Class java/lang/Exception

  public java.util.List<org.jumpmind.symmetric.model.IncomingBatch> getBatchesProcessed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field batchesProcessed:Ljava/util/List;
       4: areturn

  public org.jumpmind.symmetric.model.IncomingBatch getCurrentBatch();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentBatch:Lorg/jumpmind/symmetric/model/IncomingBatch;
       4: areturn
}
