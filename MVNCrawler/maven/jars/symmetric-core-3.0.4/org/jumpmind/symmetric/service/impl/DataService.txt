Compiled from "DataService.java"
public class org.jumpmind.symmetric.service.impl.DataService extends org.jumpmind.symmetric.service.impl.AbstractService implements org.jumpmind.symmetric.service.IDataService {
  private java.lang.String deploymentType;

  private org.jumpmind.symmetric.service.ITriggerRouterService triggerRouterService;

  private org.jumpmind.symmetric.service.INodeService nodeService;

  private org.jumpmind.symmetric.service.IPurgeService purgeService;

  private org.jumpmind.symmetric.service.IConfigurationService configurationService;

  private org.jumpmind.symmetric.service.IOutgoingBatchService outgoingBatchService;

  private java.util.List<org.jumpmind.symmetric.load.IReloadListener> reloadListeners;

  private java.util.List<org.jumpmind.symmetric.ext.IHeartbeatListener> heartbeatListeners;

  private org.jumpmind.symmetric.statistic.IStatisticManager statisticManager;

  private org.jumpmind.symmetric.service.impl.DataService$DataMapper dataMapper;

  protected java.util.Map<org.jumpmind.symmetric.ext.IHeartbeatListener, java.lang.Long> lastHeartbeatTimestamps;

  public org.jumpmind.symmetric.service.impl.DataService(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect, java.lang.String, org.jumpmind.symmetric.service.ITriggerRouterService, org.jumpmind.symmetric.service.INodeService, org.jumpmind.symmetric.service.IPurgeService, org.jumpmind.symmetric.service.IConfigurationService, org.jumpmind.symmetric.service.IOutgoingBatchService, org.jumpmind.symmetric.statistic.IStatisticManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/jumpmind/symmetric/service/impl/AbstractService."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
       6: aload_0
       7: new           #3                  // class java/util/HashMap
      10: dup
      11: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      14: putfield      #5                  // Field lastHeartbeatTimestamps:Ljava/util/Map;
      17: aload_0
      18: aload_3
      19: putfield      #6                  // Field deploymentType:Ljava/lang/String;
      22: aload_0
      23: aload         4
      25: putfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      28: aload_0
      29: aload         5
      31: putfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      34: aload_0
      35: aload         6
      37: putfield      #8                  // Field purgeService:Lorg/jumpmind/symmetric/service/IPurgeService;
      40: aload_0
      41: aload         7
      43: putfield      #9                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      46: aload_0
      47: aload         8
      49: putfield      #10                 // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
      52: aload_0
      53: aload         9
      55: putfield      #11                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      58: aload_0
      59: new           #12                 // class java/util/ArrayList
      62: dup
      63: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      66: putfield      #14                 // Field reloadListeners:Ljava/util/List;
      69: aload_0
      70: new           #12                 // class java/util/ArrayList
      73: dup
      74: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      77: putfield      #15                 // Field heartbeatListeners:Ljava/util/List;
      80: aload_0
      81: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
      84: new           #16                 // class org/jumpmind/symmetric/job/PushHeartbeatListener
      87: dup
      88: aload_1
      89: aload_0
      90: aload         5
      92: aload_2
      93: invokespecial #17                 // Method org/jumpmind/symmetric/job/PushHeartbeatListener."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/service/IDataService;Lorg/jumpmind/symmetric/service/INodeService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
      96: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     101: pop
     102: aload_0
     103: new           #19                 // class org/jumpmind/symmetric/service/impl/DataService$DataMapper
     106: dup
     107: aload_0
     108: invokespecial #20                 // Method org/jumpmind/symmetric/service/impl/DataService$DataMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/DataService;)V
     111: putfield      #21                 // Field dataMapper:Lorg/jumpmind/symmetric/service/impl/DataService$DataMapper;
     114: aload_0
     115: new           #22                 // class org/jumpmind/symmetric/service/impl/DataServiceSqlMap
     118: dup
     119: aload_2
     120: invokeinterface #23,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
     125: aload_0
     126: invokevirtual #24                 // Method createSqlReplacementTokens:()Ljava/util/Map;
     129: invokespecial #25                 // Method org/jumpmind/symmetric/service/impl/DataServiceSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
     132: invokevirtual #26                 // Method setSqlMap:(Lorg/jumpmind/symmetric/service/impl/ISqlMap;)V
     135: return

  public void insertReloadEvent(org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #27                 // Method insertReloadEvent:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;)V
       7: return

  public void insertReloadEvent(org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter, java.lang.String);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       7: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      12: astore        4
      14: aload_0
      15: aload         4
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokevirtual #30                 // Method insertReloadEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;)V
      23: aload         4
      25: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      30: jsr           44
      33: goto          54
      36: astore        5
      38: jsr           44
      41: aload         5
      43: athrow
      44: astore        6
      46: aload_0
      47: aload         4
      49: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      52: ret           6
      54: return
    Exception table:
       from    to  target type
           3    33    36   any
          36    41    36   any

  public void insertReloadEvent(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
       5: invokespecial #34                 // Method lookupTriggerHistory:(Lorg/jumpmind/symmetric/model/Trigger;)Lorg/jumpmind/symmetric/model/TriggerHistory;
       8: astore        5
      10: new           #35                 // class org/jumpmind/symmetric/model/Data
      13: dup
      14: aload         5
      16: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      19: getstatic     #37                 // Field org/jumpmind/symmetric/io/data/DataEventType.RELOAD:Lorg/jumpmind/symmetric/io/data/DataEventType;
      22: aload         4
      24: ifnull        32
      27: aload         4
      29: goto          36
      32: aload_3
      33: invokevirtual #38                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadSelect:()Ljava/lang/String;
      36: aconst_null
      37: aload         5
      39: aload_3
      40: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      43: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      46: aconst_null
      47: aconst_null
      48: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      51: astore        6
      53: aload_0
      54: aload_1
      55: aload         6
      57: aload_2
      58: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      61: aload_3
      62: invokevirtual #42                 // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      65: invokevirtual #43                 // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
      68: iconst_1
      69: invokevirtual #44                 // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      72: return

  public void insertReloadEvents(org.jumpmind.symmetric.model.Node);
    Code:
       0: aload_0
       1: getfield      #10                 // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod org/jumpmind/symmetric/service/IOutgoingBatchService.markAllAsSentForNode:(Lorg/jumpmind/symmetric/model/Node;)V
      10: aload_0
      11: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      14: invokeinterface #46,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findIdentity:()Lorg/jumpmind/symmetric/model/Node;
      19: astore_2
      20: aload_0
      21: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      24: ldc           #48                 // String datareload.batch.insert.transactional
      26: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      31: istore_3
      32: aconst_null
      33: astore        4
      35: aload_0
      36: getfield      #50                 // Field platform:Lorg/jumpmind/db/platform/IDatabasePlatform;
      39: invokeinterface #51,  1           // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getSqlTemplate:()Lorg/jumpmind/db/sql/ISqlTemplate;
      44: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      49: astore        4
      51: aload_0
      52: getfield      #14                 // Field reloadListeners:Ljava/util/List;
      55: ifnull        115
      58: aload_0
      59: getfield      #14                 // Field reloadListeners:Ljava/util/List;
      62: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: astore        5
      69: aload         5
      71: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          115
      79: aload         5
      81: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #55                 // class org/jumpmind/symmetric/load/IReloadListener
      89: astore        6
      91: aload         6
      93: aload         4
      95: aload_1
      96: invokeinterface #56,  3           // InterfaceMethod org/jumpmind/symmetric/load/IReloadListener.beforeReload:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;)V
     101: iload_3
     102: ifne          112
     105: aload         4
     107: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     112: goto          69
     115: aload_0
     116: aload         4
     118: aload_1
     119: iconst_1
     120: invokespecial #57                 // Method insertNodeSecurityUpdate:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Z)V
     123: aload_0
     124: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
     127: invokeinterface #58,  1           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getActiveTriggerHistories:()Ljava/util/List;
     132: astore        5
     134: aload_0
     135: aload_2
     136: aload_1
     137: aload         5
     139: invokespecial #59                 // Method fillTriggerRoutersByHistIdAndSortHist:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/Node;Ljava/util/List;)Ljava/util/Map;
     142: astore        6
     144: aload_0
     145: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     148: ldc           #60                 // String initial.load.create.first
     150: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     155: ifeq          290
     158: aload         5
     160: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     165: astore        7
     167: aload         7
     169: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     174: ifeq          290
     177: aload         7
     179: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     184: checkcast     #61                 // class org/jumpmind/symmetric/model/TriggerHistory
     187: astore        8
     189: aload         6
     191: aload         8
     193: invokevirtual #62                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     196: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     199: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     204: checkcast     #65                 // class java/util/List
     207: astore        9
     209: aload         9
     211: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     216: astore        10
     218: aload         10
     220: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     225: ifeq          287
     228: aload         10
     230: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     235: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     238: astore        11
     240: aload         11
     242: invokevirtual #67                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
     245: iflt          284
     248: aload_0
     249: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     252: aload         11
     254: invokeinterface #69,  2           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getCreateTableXML:(Lorg/jumpmind/symmetric/model/TriggerRouter;)Ljava/lang/String;
     259: astore        12
     261: aload_0
     262: aload         4
     264: aload_1
     265: aload         11
     267: aload         12
     269: iconst_1
     270: invokevirtual #70                 // Method insertCreateEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;Z)V
     273: iload_3
     274: ifne          284
     277: aload         4
     279: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     284: goto          218
     287: goto          167
     290: aload_0
     291: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     294: ldc           #71                 // String initial.load.delete.first
     296: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     301: ifeq          435
     304: aload         5
     306: aload         5
     308: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
     313: invokeinterface #73,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
     318: astore        7
     320: aload         7
     322: invokeinterface #74,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
     327: ifeq          435
     330: aload         7
     332: invokeinterface #75,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     337: checkcast     #61                 // class org/jumpmind/symmetric/model/TriggerHistory
     340: astore        8
     342: aload         6
     344: aload         8
     346: invokevirtual #62                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     349: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     352: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     357: checkcast     #65                 // class java/util/List
     360: astore        9
     362: aload         9
     364: aload         9
     366: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
     371: invokeinterface #73,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
     376: astore        10
     378: aload         10
     380: invokeinterface #74,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
     385: ifeq          432
     388: aload         10
     390: invokeinterface #75,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     395: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     398: astore        11
     400: aload         11
     402: invokevirtual #67                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
     405: iflt          429
     408: aload_0
     409: aload         4
     411: aload_1
     412: aload         11
     414: iconst_1
     415: invokevirtual #76                 // Method insertPurgeEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Z)V
     418: iload_3
     419: ifne          429
     422: aload         4
     424: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     429: goto          378
     432: goto          320
     435: aload         5
     437: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     442: astore        7
     444: aload         7
     446: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     451: ifeq          552
     454: aload         7
     456: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     461: checkcast     #61                 // class org/jumpmind/symmetric/model/TriggerHistory
     464: astore        8
     466: aload         6
     468: aload         8
     470: invokevirtual #62                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     473: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     476: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     481: checkcast     #65                 // class java/util/List
     484: astore        9
     486: aload         9
     488: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     493: astore        10
     495: aload         10
     497: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     502: ifeq          549
     505: aload         10
     507: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     512: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     515: astore        11
     517: aload         11
     519: invokevirtual #67                 // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
     522: iflt          546
     525: aload_0
     526: aload         4
     528: aload_1
     529: aload         11
     531: aconst_null
     532: invokevirtual #30                 // Method insertReloadEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;)V
     535: iload_3
     536: ifne          546
     539: aload         4
     541: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     546: goto          495
     549: goto          444
     552: aload_0
     553: getfield      #14                 // Field reloadListeners:Ljava/util/List;
     556: ifnull        616
     559: aload_0
     560: getfield      #14                 // Field reloadListeners:Ljava/util/List;
     563: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     568: astore        7
     570: aload         7
     572: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     577: ifeq          616
     580: aload         7
     582: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     587: checkcast     #55                 // class org/jumpmind/symmetric/load/IReloadListener
     590: astore        8
     592: aload         8
     594: aload         4
     596: aload_1
     597: invokeinterface #77,  3           // InterfaceMethod org/jumpmind/symmetric/load/IReloadListener.afterReload:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;)V
     602: iload_3
     603: ifne          613
     606: aload         4
     608: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     613: goto          570
     616: aload_0
     617: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
     620: aload         4
     622: aload_1
     623: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     626: iconst_0
     627: invokeinterface #78,  4           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.setInitialLoadEnabled:(Lorg/jumpmind/db/sql/ISqlTransaction;Ljava/lang/String;Z)Z
     632: pop
     633: aload_0
     634: aload         4
     636: aload_1
     637: aload_0
     638: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     641: ldc           #79                 // String initial.load.use.reload.channel
     643: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     648: invokespecial #57                 // Method insertNodeSecurityUpdate:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Z)V
     651: aload_0
     652: getfield      #11                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
     655: lconst_1
     656: invokeinterface #80,  3           // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementNodesLoaded:(J)V
     661: aload         4
     663: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     668: jsr           682
     671: goto          692
     674: astore        13
     676: jsr           682
     679: aload         13
     681: athrow
     682: astore        14
     684: aload_0
     685: aload         4
     687: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
     690: ret           14
     692: aload_0
     693: getfield      #8                  // Field purgeService:Lorg/jumpmind/symmetric/service/IPurgeService;
     696: aload_1
     697: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     700: invokeinterface #81,  2           // InterfaceMethod org/jumpmind/symmetric/service/IPurgeService.purgeAllIncomingEventsForNode:(Ljava/lang/String;)V
     705: return
    Exception table:
       from    to  target type
          35   671   674   any
         674   679   674   any

  private org.jumpmind.symmetric.model.TriggerHistory lookupTriggerHistory(org.jumpmind.symmetric.model.Trigger);
    Code:
       0: aload_0
       1: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
       4: aload_1
       5: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #83                 // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      12: aload_1
      13: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      20: invokeinterface #86,  5           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      25: astore_2
      26: aload_2
      27: ifnonnull     56
      30: aload_0
      31: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      34: invokeinterface #87,  1           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.syncTriggers:()V
      39: aload_0
      40: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      43: aload_1
      44: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      47: aconst_null
      48: aconst_null
      49: aconst_null
      50: invokeinterface #86,  5           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      55: astore_2
      56: aload_2
      57: ifnonnull     102
      60: new           #88                 // class java/lang/RuntimeException
      63: dup
      64: new           #89                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #91                 // String Cannot find history for trigger
      73: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      80: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #93                 // String ,
      85: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      92: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #95                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_2
     103: areturn

  public void insertPurgeEvent(org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter, boolean);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       7: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      12: astore        4
      14: aload_0
      15: aload         4
      17: aload_1
      18: aload_2
      19: iload_3
      20: invokevirtual #76                 // Method insertPurgeEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Z)V
      23: aload         4
      25: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      30: jsr           44
      33: goto          54
      36: astore        5
      38: jsr           44
      41: aload         5
      43: athrow
      44: astore        6
      46: aload_0
      47: aload         4
      49: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      52: ret           6
      54: return
    Exception table:
       from    to  target type
           3    33    36   any
          36    41    36   any

  protected void insertPurgeEvent(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter, boolean);
    Code:
       0: aload_0
       1: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
       4: aload_2
       5: aload_3
       6: invokeinterface #96,  3           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.createPurgeSqlFor:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;)Ljava/lang/String;
      11: astore        5
      13: aload_3
      14: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      17: astore        6
      19: aload_0
      20: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      23: aload         6
      25: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      28: aload         6
      30: invokevirtual #83                 // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      33: aload         6
      35: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      38: aload         6
      40: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      43: invokeinterface #86,  5           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      48: astore        7
      50: new           #35                 // class org/jumpmind/symmetric/model/Data
      53: dup
      54: aload         7
      56: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      59: getstatic     #97                 // Field org/jumpmind/symmetric/io/data/DataEventType.SQL:Lorg/jumpmind/symmetric/io/data/DataEventType;
      62: aload         5
      64: invokestatic  #98                 // Method org/jumpmind/symmetric/io/data/CsvUtils.escapeCsvData:(Ljava/lang/String;)Ljava/lang/String;
      67: aconst_null
      68: aload         7
      70: aload_3
      71: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      74: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      77: aconst_null
      78: aconst_null
      79: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      82: astore        8
      84: aload_0
      85: aload_1
      86: aload         8
      88: aload_2
      89: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      92: aload_3
      93: invokevirtual #42                 // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      96: invokevirtual #43                 // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
      99: iload         4
     101: invokevirtual #44                 // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
     104: return

  public void insertSqlEvent(org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.Trigger, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
       4: aload_2
       5: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #83                 // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      12: aload_2
      13: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      16: aload_2
      17: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      20: invokeinterface #86,  5           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      25: astore        5
      27: new           #35                 // class org/jumpmind/symmetric/model/Data
      30: dup
      31: aload         5
      33: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      36: getstatic     #97                 // Field org/jumpmind/symmetric/io/data/DataEventType.SQL:Lorg/jumpmind/symmetric/io/data/DataEventType;
      39: aload_3
      40: invokestatic  #98                 // Method org/jumpmind/symmetric/io/data/CsvUtils.escapeCsvData:(Ljava/lang/String;)Ljava/lang/String;
      43: aconst_null
      44: aload         5
      46: aload_2
      47: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      50: aconst_null
      51: aconst_null
      52: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      55: astore        6
      57: aload_0
      58: aload         6
      60: aload_1
      61: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      64: ldc           #99                 // String ?
      66: iload         4
      68: invokevirtual #100                // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      71: return

  private org.jumpmind.symmetric.model.TriggerHistory findTriggerHistoryForGenericSync();
    Code:
       0: aload_0
       1: getfield      #101                // Field tablePrefix:Ljava/lang/String;
       4: ldc           #102                // String trigger
       6: invokestatic  #103                // Method org/jumpmind/symmetric/common/TableConstants.getTableName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: astore_1
      10: aload_0
      11: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      14: aload_1
      15: invokevirtual #104                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      18: invokeinterface #105,  2          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.findTriggerHistory:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      23: astore_2
      24: aload_2
      25: ifnonnull     39
      28: aload_0
      29: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      32: aload_1
      33: invokeinterface #105,  2          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.findTriggerHistory:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      38: astore_2
      39: aload_2
      40: areturn

  public void insertSqlEvent(org.jumpmind.symmetric.model.Node, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #106                // Method findTriggerHistoryForGenericSync:()Lorg/jumpmind/symmetric/model/TriggerHistory;
       4: astore        4
       6: new           #35                 // class org/jumpmind/symmetric/model/Data
       9: dup
      10: aload         4
      12: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      15: getstatic     #97                 // Field org/jumpmind/symmetric/io/data/DataEventType.SQL:Lorg/jumpmind/symmetric/io/data/DataEventType;
      18: aload_2
      19: invokestatic  #98                 // Method org/jumpmind/symmetric/io/data/CsvUtils.escapeCsvData:(Ljava/lang/String;)Ljava/lang/String;
      22: aconst_null
      23: aload         4
      25: ldc           #107                // String config
      27: aconst_null
      28: aconst_null
      29: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: astore        5
      34: aload_0
      35: aload         5
      37: aload_1
      38: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      41: ldc           #99                 // String ?
      43: iload_3
      44: invokevirtual #100                // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      47: return

  public void insertSqlEvent(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Node, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #106                // Method findTriggerHistoryForGenericSync:()Lorg/jumpmind/symmetric/model/TriggerHistory;
       4: astore        5
       6: new           #35                 // class org/jumpmind/symmetric/model/Data
       9: dup
      10: aload         5
      12: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      15: getstatic     #97                 // Field org/jumpmind/symmetric/io/data/DataEventType.SQL:Lorg/jumpmind/symmetric/io/data/DataEventType;
      18: aload_3
      19: invokestatic  #98                 // Method org/jumpmind/symmetric/io/data/CsvUtils.escapeCsvData:(Ljava/lang/String;)Ljava/lang/String;
      22: aconst_null
      23: aload         5
      25: ldc           #107                // String config
      27: aconst_null
      28: aconst_null
      29: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: astore        6
      34: aload_0
      35: aload_1
      36: aload         6
      38: aload_2
      39: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      42: ldc           #99                 // String ?
      44: iload         4
      46: invokevirtual #44                 // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      49: return

  public int countDataInRange(long, long);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #109                // String countDataInRangeSql
      13: aastore
      14: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_2
      18: anewarray     #111                // class java/lang/Object
      21: dup
      22: iconst_0
      23: lload_1
      24: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: aastore
      28: dup
      29: iconst_1
      30: lload_3
      31: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      34: aastore
      35: invokeinterface #113,  3          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      40: ireturn

  public void checkForAndUpdateMissingChannelIds(long, long);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #114                // String checkForAndUpdateMissingChannelIdSql
      13: aastore
      14: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_3
      18: anewarray     #111                // class java/lang/Object
      21: dup
      22: iconst_0
      23: ldc           #115                // String default
      25: aastore
      26: dup
      27: iconst_1
      28: lload_1
      29: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: dup
      34: iconst_2
      35: lload_3
      36: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      39: aastore
      40: invokeinterface #116,  3          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      45: istore        5
      47: iload         5
      49: ifle          94
      52: aload_0
      53: getfield      #117                // Field log:Lorg/slf4j/Logger;
      56: ldc           #118                // String There were {} data records found between {} and {} that an invalid channel_id.  Updating them to be on the \'{}\' channel.
      58: iconst_4
      59: anewarray     #111                // class java/lang/Object
      62: dup
      63: iconst_0
      64: iload         5
      66: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: aastore
      70: dup
      71: iconst_1
      72: lload_1
      73: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      76: aastore
      77: dup
      78: iconst_2
      79: lload_3
      80: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      83: aastore
      84: dup
      85: iconst_3
      86: ldc           #115                // String default
      88: aastore
      89: invokeinterface #119,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      94: return

  public void insertCreateEvent(org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter, java.lang.String, boolean);
    Code:
       0: aconst_null
       1: astore        5
       3: aload_0
       4: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       7: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      12: astore        5
      14: aload_0
      15: aload         5
      17: aload_1
      18: aload_2
      19: aload_3
      20: iload         4
      22: invokevirtual #70                 // Method insertCreateEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;Z)V
      25: aload         5
      27: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      32: jsr           46
      35: goto          56
      38: astore        6
      40: jsr           46
      43: aload         6
      45: athrow
      46: astore        7
      48: aload_0
      49: aload         5
      51: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      54: ret           7
      56: return
    Exception table:
       from    to  target type
           3    35    38   any
          38    43    38   any

  public void insertCreateEvent(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.TriggerRouter, java.lang.String, boolean);
    Code:
       0: aload_3
       1: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
       4: astore        6
       6: aload_0
       7: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      10: aload         6
      12: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      15: aload         6
      17: invokevirtual #83                 // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      20: aload         6
      22: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      25: aload         6
      27: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      30: invokeinterface #86,  5           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      35: astore        7
      37: new           #35                 // class org/jumpmind/symmetric/model/Data
      40: dup
      41: aload_3
      42: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      45: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      48: getstatic     #120                // Field org/jumpmind/symmetric/io/data/DataEventType.CREATE:Lorg/jumpmind/symmetric/io/data/DataEventType;
      51: aload         4
      53: invokestatic  #98                 // Method org/jumpmind/symmetric/io/data/CsvUtils.escapeCsvData:(Ljava/lang/String;)Ljava/lang/String;
      56: aconst_null
      57: aload         7
      59: aload_0
      60: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      63: ldc           #79                 // String initial.load.use.reload.channel
      65: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      70: ifeq          83
      73: iload         5
      75: ifeq          83
      78: ldc           #121                // String reload
      80: goto          90
      83: aload_3
      84: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      87: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      90: aconst_null
      91: aconst_null
      92: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      95: astore        8
      97: aload_0
      98: aload_1
      99: aload         8
     101: aload_2
     102: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     105: ldc           #99                 // String ?
     107: iload         5
     109: invokevirtual #44                 // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
     112: goto          150
     115: astore        9
     117: aload         9
     119: invokevirtual #123                // Method org/jumpmind/db/sql/UniqueKeyException.getRootCause:()Ljava/lang/Throwable;
     122: ifnull        147
     125: aload         9
     127: invokevirtual #123                // Method org/jumpmind/db/sql/UniqueKeyException.getRootCause:()Ljava/lang/Throwable;
     130: instanceof    #124                // class java/sql/DataTruncation
     133: ifeq          147
     136: aload_0
     137: getfield      #117                // Field log:Lorg/slf4j/Logger;
     140: ldc           #125                // String Table data definition XML was too large and failed.  The feature to send table creates during the initial load may be limited on your platform.  You may need to set the initial.load.create.first parameter to false.
     142: invokeinterface #126,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     147: aload         9
     149: athrow
     150: return
    Exception table:
       from    to  target type
          97   112   115   Class org/jumpmind/db/sql/UniqueKeyException

  public long insertData(org.jumpmind.symmetric.model.Data);
    Code:
       0: aconst_null
       1: astore_2
       2: ldc2_w        #127                // long -1l
       5: lstore_3
       6: aload_0
       7: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      10: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      15: astore_2
      16: aload_0
      17: aload_2
      18: aload_1
      19: invokevirtual #129                // Method insertData:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;)J
      22: lstore_3
      23: aload_2
      24: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      29: lload_3
      30: lstore        5
      32: jsr           46
      35: lload         5
      37: lreturn
      38: astore        7
      40: jsr           46
      43: aload         7
      45: athrow
      46: astore        8
      48: aload_0
      49: aload_2
      50: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      53: ret           8
    Exception table:
       from    to  target type
           6    35    38   any
          38    43    38   any

  protected long insertData(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Data);
    Code:
       0: aload_1
       1: aload_0
       2: iconst_1
       3: anewarray     #108                // class java/lang/String
       6: dup
       7: iconst_0
       8: ldc           #130                // String insertIntoDataSql
      10: aastore
      11: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      14: aload_0
      15: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      18: getstatic     #131                // Field org/jumpmind/symmetric/db/SequenceIdentifier.DATA:Lorg/jumpmind/symmetric/db/SequenceIdentifier;
      21: invokeinterface #132,  2          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getSequenceKeyName:(Lorg/jumpmind/symmetric/db/SequenceIdentifier;)Ljava/lang/String;
      26: aload_0
      27: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      30: getstatic     #131                // Field org/jumpmind/symmetric/db/SequenceIdentifier.DATA:Lorg/jumpmind/symmetric/db/SequenceIdentifier;
      33: invokeinterface #133,  2          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getSequenceName:(Lorg/jumpmind/symmetric/db/SequenceIdentifier;)Ljava/lang/String;
      38: bipush        7
      40: anewarray     #111                // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_2
      46: invokevirtual #134                // Method org/jumpmind/symmetric/model/Data.getTableName:()Ljava/lang/String;
      49: aastore
      50: dup
      51: iconst_1
      52: aload_2
      53: invokevirtual #135                // Method org/jumpmind/symmetric/model/Data.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
      56: invokevirtual #136                // Method org/jumpmind/symmetric/io/data/DataEventType.getCode:()Ljava/lang/String;
      59: aastore
      60: dup
      61: iconst_2
      62: aload_2
      63: invokevirtual #137                // Method org/jumpmind/symmetric/model/Data.getRowData:()Ljava/lang/String;
      66: aastore
      67: dup
      68: iconst_3
      69: aload_2
      70: invokevirtual #138                // Method org/jumpmind/symmetric/model/Data.getPkData:()Ljava/lang/String;
      73: aastore
      74: dup
      75: iconst_4
      76: aload_2
      77: invokevirtual #139                // Method org/jumpmind/symmetric/model/Data.getOldData:()Ljava/lang/String;
      80: aastore
      81: dup
      82: iconst_5
      83: aload_2
      84: invokevirtual #140                // Method org/jumpmind/symmetric/model/Data.getTriggerHistory:()Lorg/jumpmind/symmetric/model/TriggerHistory;
      87: ifnull        100
      90: aload_2
      91: invokevirtual #140                // Method org/jumpmind/symmetric/model/Data.getTriggerHistory:()Lorg/jumpmind/symmetric/model/TriggerHistory;
      94: invokevirtual #62                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
      97: goto          101
     100: iconst_m1
     101: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: aastore
     105: dup
     106: bipush        6
     108: aload_2
     109: invokevirtual #141                // Method org/jumpmind/symmetric/model/Data.getChannelId:()Ljava/lang/String;
     112: aastore
     113: bipush        7
     115: newarray       int
     117: dup
     118: iconst_0
     119: bipush        12
     121: iastore
     122: dup
     123: iconst_1
     124: iconst_1
     125: iastore
     126: dup
     127: iconst_2
     128: bipush        12
     130: iastore
     131: dup
     132: iconst_3
     133: bipush        12
     135: iastore
     136: dup
     137: iconst_4
     138: bipush        12
     140: iastore
     141: dup
     142: iconst_5
     143: iconst_2
     144: iastore
     145: dup
     146: bipush        6
     148: bipush        12
     150: iastore
     151: invokeinterface #142,  6          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.insertWithGeneratedKey:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[I)J
     156: lstore_3
     157: aload_2
     158: lload_3
     159: invokevirtual #143                // Method org/jumpmind/symmetric/model/Data.setDataId:(J)V
     162: lload_3
     163: lreturn

  protected void insertDataEvent(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.DataEvent);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #144                // Method org/jumpmind/symmetric/model/DataEvent.getDataId:()J
       6: aload_2
       7: invokevirtual #145                // Method org/jumpmind/symmetric/model/DataEvent.getBatchId:()J
      10: aload_2
      11: invokevirtual #146                // Method org/jumpmind/symmetric/model/DataEvent.getRouterId:()Ljava/lang/String;
      14: invokevirtual #147                // Method insertDataEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;JJLjava/lang/String;)V
      17: return

  protected void insertDataEvent(org.jumpmind.db.sql.ISqlTransaction, long, long, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: iconst_1
       3: anewarray     #108                // class java/lang/String
       6: dup
       7: iconst_0
       8: ldc           #148                // String insertIntoDataEventSql
      10: aastore
      11: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      14: iconst_3
      15: anewarray     #111                // class java/lang/Object
      18: dup
      19: iconst_0
      20: lload_2
      21: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      24: aastore
      25: dup
      26: iconst_1
      27: lload         4
      29: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: dup
      34: iconst_2
      35: aload         6
      37: invokestatic  #149                // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      40: ifeq          48
      43: ldc           #99                 // String ?
      45: goto          50
      48: aload         6
      50: aastore
      51: iconst_3
      52: newarray       int
      54: dup
      55: iconst_0
      56: iconst_2
      57: iastore
      58: dup
      59: iconst_1
      60: iconst_2
      61: iastore
      62: dup
      63: iconst_2
      64: bipush        12
      66: iastore
      67: invokeinterface #150,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.prepareAndExecute:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      72: pop
      73: goto          132
      76: astore        7
      78: aload_0
      79: getfield      #117                // Field log:Lorg/slf4j/Logger;
      82: ldc           #151                // String Could not insert a data event: data_id={} batch_id={} router_id={}
      84: iconst_3
      85: anewarray     #111                // class java/lang/Object
      88: dup
      89: iconst_0
      90: lload_2
      91: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      94: aastore
      95: dup
      96: iconst_1
      97: lload         4
      99: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     102: aastore
     103: dup
     104: iconst_2
     105: aload         6
     107: aastore
     108: invokeinterface #152,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     113: aload_0
     114: getfield      #117                // Field log:Lorg/slf4j/Logger;
     117: aload         7
     119: invokevirtual #153                // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
     122: aload         7
     124: invokeinterface #154,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     129: aload         7
     131: athrow
     132: return
    Exception table:
       from    to  target type
           0    73    76   Class java/lang/RuntimeException

  public void insertDataEvents(org.jumpmind.db.sql.ISqlTransaction, java.util.List<org.jumpmind.symmetric.model.DataEvent>);
    Code:
       0: aload_2
       1: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
       6: ifle          141
       9: aload_1
      10: aload_0
      11: iconst_1
      12: anewarray     #108                // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #148                // String insertIntoDataEventSql
      19: aastore
      20: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      23: invokeinterface #155,  2          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.prepare:(Ljava/lang/String;)V
      28: aload_2
      29: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore_3
      35: aload_3
      36: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          134
      44: aload_3
      45: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #156                // class org/jumpmind/symmetric/model/DataEvent
      53: astore        4
      55: aload         4
      57: invokevirtual #146                // Method org/jumpmind/symmetric/model/DataEvent.getRouterId:()Ljava/lang/String;
      60: astore        5
      62: aload_1
      63: aload         4
      65: iconst_3
      66: anewarray     #111                // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload         4
      73: invokevirtual #144                // Method org/jumpmind/symmetric/model/DataEvent.getDataId:()J
      76: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      79: aastore
      80: dup
      81: iconst_1
      82: aload         4
      84: invokevirtual #145                // Method org/jumpmind/symmetric/model/DataEvent.getBatchId:()J
      87: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      90: aastore
      91: dup
      92: iconst_2
      93: aload         5
      95: invokestatic  #149                // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      98: ifeq          106
     101: ldc           #99                 // String ?
     103: goto          108
     106: aload         5
     108: aastore
     109: iconst_3
     110: newarray       int
     112: dup
     113: iconst_0
     114: iconst_2
     115: iastore
     116: dup
     117: iconst_1
     118: iconst_2
     119: iastore
     120: dup
     121: iconst_2
     122: bipush        12
     124: iastore
     125: invokeinterface #157,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.addRow:(Ljava/lang/Object;[Ljava/lang/Object;[I)I
     130: pop
     131: goto          35
     134: aload_1
     135: invokeinterface #158,  1          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.flush:()I
     140: pop
     141: return

  public void insertDataAndDataEventAndOutgoingBatch(org.jumpmind.symmetric.model.Data, java.lang.String, java.util.List<org.jumpmind.symmetric.model.Node>, java.lang.String, boolean);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       7: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      12: astore        6
      14: aload_0
      15: aload         6
      17: aload_1
      18: invokevirtual #129                // Method insertData:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;)J
      21: lstore        7
      23: aload_3
      24: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore        9
      31: aload         9
      33: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          78
      41: aload         9
      43: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #159                // class org/jumpmind/symmetric/model/Node
      51: astore        10
      53: aload_0
      54: aload         6
      56: lload         7
      58: aload_2
      59: aload         10
      61: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      64: aload_1
      65: invokevirtual #135                // Method org/jumpmind/symmetric/model/Data.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
      68: aload         4
      70: iload         5
      72: invokevirtual #160                // Method insertDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;JLjava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Z)V
      75: goto          31
      78: aload         6
      80: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      85: jsr           99
      88: goto          109
      91: astore        11
      93: jsr           99
      96: aload         11
      98: athrow
      99: astore        12
     101: aload_0
     102: aload         6
     104: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
     107: ret           12
     109: return
    Exception table:
       from    to  target type
           3    88    91   any
          91    96    91   any

  public void insertDataAndDataEventAndOutgoingBatch(org.jumpmind.symmetric.model.Data, java.lang.String, java.lang.String, boolean);
    Code:
       0: aconst_null
       1: astore        5
       3: aload_0
       4: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       7: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      12: astore        5
      14: aload_0
      15: aload         5
      17: aload_1
      18: aload_2
      19: aload_3
      20: iload         4
      22: invokevirtual #44                 // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      25: aload         5
      27: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      32: jsr           46
      35: goto          56
      38: astore        6
      40: jsr           46
      43: aload         6
      45: athrow
      46: astore        7
      48: aload_0
      49: aload         5
      51: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      54: ret           7
      56: return
    Exception table:
       from    to  target type
           3    35    38   any
          38    43    38   any

  protected void insertDataAndDataEventAndOutgoingBatch(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Data, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #129                // Method insertData:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;)J
       6: lstore        6
       8: aload_0
       9: aload_1
      10: lload         6
      12: aload_2
      13: invokevirtual #141                // Method org/jumpmind/symmetric/model/Data.getChannelId:()Ljava/lang/String;
      16: aload_3
      17: aload_2
      18: invokevirtual #135                // Method org/jumpmind/symmetric/model/Data.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
      21: aload         4
      23: iload         5
      25: invokevirtual #160                // Method insertDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;JLjava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Z)V
      28: return

  protected void insertDataEventAndOutgoingBatch(org.jumpmind.db.sql.ISqlTransaction, long, java.lang.String, java.lang.String, org.jumpmind.symmetric.io.data.DataEventType, java.lang.String, boolean);
    Code:
       0: new           #161                // class org/jumpmind/symmetric/model/OutgoingBatch
       3: dup
       4: aload         5
       6: aload_0
       7: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      10: ldc           #79                 // String initial.load.use.reload.channel
      12: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      17: ifeq          30
      20: iload         8
      22: ifeq          30
      25: ldc           #121                // String reload
      27: goto          32
      30: aload         4
      32: getstatic     #162                // Field org/jumpmind/symmetric/model/OutgoingBatch$Status.NE:Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;
      35: invokespecial #163                // Method org/jumpmind/symmetric/model/OutgoingBatch."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;)V
      38: astore        9
      40: aload         9
      42: iload         8
      44: invokevirtual #164                // Method org/jumpmind/symmetric/model/OutgoingBatch.setLoadFlag:(Z)V
      47: aload         9
      49: aload         6
      51: invokevirtual #165                // Method org/jumpmind/symmetric/model/OutgoingBatch.incrementEventCount:(Lorg/jumpmind/symmetric/io/data/DataEventType;)V
      54: aload_0
      55: getfield      #10                 // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
      58: aload_1
      59: aload         9
      61: invokeinterface #166,  3          // InterfaceMethod org/jumpmind/symmetric/service/IOutgoingBatchService.insertOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/OutgoingBatch;)V
      66: aload_0
      67: aload_1
      68: new           #156                // class org/jumpmind/symmetric/model/DataEvent
      71: dup
      72: lload_2
      73: aload         9
      75: invokevirtual #167                // Method org/jumpmind/symmetric/model/OutgoingBatch.getBatchId:()J
      78: aload         7
      80: invokespecial #168                // Method org/jumpmind/symmetric/model/DataEvent."<init>":(JJLjava/lang/String;)V
      83: invokevirtual #169                // Method insertDataEvent:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/DataEvent;)V
      86: return

  public java.lang.String reloadNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
       4: aload_1
       5: invokeinterface #170,  2          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findNode:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Node;
      10: astore_2
      11: aload_2
      12: ifnonnull     29
      15: ldc           #171                // String Unknown node %s
      17: iconst_1
      18: anewarray     #111                // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokestatic  #172                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: areturn
      29: aload_0
      30: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      33: aload_1
      34: iconst_1
      35: invokeinterface #173,  3          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.setInitialLoadEnabled:(Ljava/lang/String;Z)Z
      40: ifeq          57
      43: ldc           #174                // String Successfully opened initial load for node %s
      45: iconst_1
      46: anewarray     #111                // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_1
      52: aastore
      53: invokestatic  #172                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      56: areturn
      57: ldc           #175                // String Could not open initial load for %s
      59: iconst_1
      60: anewarray     #111                // class java/lang/Object
      63: dup
      64: iconst_0
      65: aload_1
      66: aastore
      67: invokestatic  #172                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: areturn

  private java.util.Map<java.lang.Integer, java.util.List<org.jumpmind.symmetric.model.TriggerRouter>> fillTriggerRoutersByHistIdAndSortHist(org.jumpmind.symmetric.model.Node, org.jumpmind.symmetric.model.Node, java.util.List<org.jumpmind.symmetric.model.TriggerHistory>);
    Code:
       0: new           #12                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
       8: aload_1
       9: invokevirtual #176                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
      12: aload_2
      13: invokevirtual #176                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
      16: invokeinterface #177,  3          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getAllTriggerRoutersForReloadForCurrentNode:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
      21: invokespecial #178                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: astore        4
      26: aload         4
      28: invokeinterface #179,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore        5
      35: aload         5
      37: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          132
      45: aload         5
      47: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
      55: astore        6
      57: aload         6
      59: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      62: astore        7
      64: aload_0
      65: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      68: invokeinterface #23,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      73: aload         7
      75: invokevirtual #83                 // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      78: aload         7
      80: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      83: aload         7
      85: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      88: iconst_0
      89: invokeinterface #180,  5          // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getTableFromCache:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jumpmind/db/model/Table;
      94: astore        8
      96: aload         8
      98: ifnonnull     129
     101: aload_0
     102: getfield      #117                // Field log:Lorg/slf4j/Logger;
     105: ldc           #181                // String Could not find the table {} represented by trigger {}
     107: aload         7
     109: invokevirtual #182                // Method org/jumpmind/symmetric/model/Trigger.qualifiedSourceTableName:()Ljava/lang/String;
     112: aload         7
     114: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     117: invokeinterface #183,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     122: aload         5
     124: invokeinterface #184,  1          // InterfaceMethod java/util/Iterator.remove:()V
     129: goto          35
     132: new           #3                  // class java/util/HashMap
     135: dup
     136: aload_3
     137: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
     142: invokespecial #185                // Method java/util/HashMap."<init>":(I)V
     145: astore        5
     147: aload_3
     148: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     153: astore        6
     155: aload         6
     157: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     162: ifeq          274
     165: aload         6
     167: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     172: checkcast     #61                 // class org/jumpmind/symmetric/model/TriggerHistory
     175: astore        7
     177: new           #12                 // class java/util/ArrayList
     180: dup
     181: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
     184: astore        8
     186: aload         5
     188: aload         7
     190: invokevirtual #62                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     193: invokestatic  #63                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     196: aload         8
     198: invokeinterface #186,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     203: pop
     204: aload         7
     206: invokevirtual #187                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
     209: astore        9
     211: aload         4
     213: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     218: astore        10
     220: aload         10
     222: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     227: ifeq          271
     230: aload         10
     232: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     237: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     240: astore        11
     242: aload         11
     244: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     247: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     250: aload         9
     252: invokevirtual #188                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     255: ifeq          268
     258: aload         8
     260: aload         11
     262: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     267: pop
     268: goto          220
     271: goto          155
     274: aload_0
     275: aload_3
     276: invokevirtual #189                // Method getSortedTablesFor:(Ljava/util/List;)Ljava/util/List;
     279: astore        6
     281: new           #190                // class org/jumpmind/symmetric/service/impl/DataService$1
     284: dup
     285: aload_0
     286: aload         5
     288: aload         6
     290: invokespecial #191                // Method org/jumpmind/symmetric/service/impl/DataService$1."<init>":(Lorg/jumpmind/symmetric/service/impl/DataService;Ljava/util/Map;Ljava/util/List;)V
     293: astore        7
     295: aload_3
     296: aload         7
     298: invokestatic  #192                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     301: aload         5
     303: areturn

  protected java.util.List<org.jumpmind.db.model.Table> getSortedTablesFor(java.util.List<org.jumpmind.symmetric.model.TriggerHistory>);
    Code:
       0: new           #12                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #193                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          85
      30: aload_3
      31: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #61                 // class org/jumpmind/symmetric/model/TriggerHistory
      39: astore        4
      41: aload_0
      42: getfield      #50                 // Field platform:Lorg/jumpmind/db/platform/IDatabasePlatform;
      45: aload         4
      47: invokevirtual #194                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
      50: aload         4
      52: invokevirtual #195                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
      55: aload         4
      57: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      60: iconst_0
      61: invokeinterface #180,  5          // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getTableFromCache:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jumpmind/db/model/Table;
      66: astore        5
      68: aload         5
      70: ifnull        82
      73: aload_2
      74: aload         5
      76: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          21
      85: aload_2
      86: invokestatic  #196                // Method org/jumpmind/db/model/Database.sortByForeignKeys:(Ljava/util/List;)Ljava/util/List;
      89: areturn

  private void insertNodeSecurityUpdate(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Node, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: new           #89                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: getfield      #101                // Field tablePrefix:Ljava/lang/String;
      15: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #197                // String _node_security
      20: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: new           #89                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #198                // String  t.node_id = \'
      35: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      42: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #199                // String \'
      47: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #200                // Method createData:(Lorg/jumpmind/db/sql/ISqlTransaction;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Data;
      56: astore        4
      58: aload         4
      60: ifnull        77
      63: aload_0
      64: aload_1
      65: aload         4
      67: aload_2
      68: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      71: ldc           #99                 // String ?
      73: iload_3
      74: invokevirtual #44                 // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      77: return

  public void sendScript(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
       4: aload_1
       5: invokeinterface #170,  2          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findNode:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Node;
      10: astore        4
      12: aload_0
      13: invokespecial #106                // Method findTriggerHistoryForGenericSync:()Lorg/jumpmind/symmetric/model/TriggerHistory;
      16: astore        5
      18: new           #35                 // class org/jumpmind/symmetric/model/Data
      21: dup
      22: aload         5
      24: invokevirtual #36                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      27: getstatic     #201                // Field org/jumpmind/symmetric/io/data/DataEventType.BSH:Lorg/jumpmind/symmetric/io/data/DataEventType;
      30: aload_2
      31: invokestatic  #98                 // Method org/jumpmind/symmetric/io/data/CsvUtils.escapeCsvData:(Ljava/lang/String;)Ljava/lang/String;
      34: aconst_null
      35: aload         5
      37: ldc           #107                // String config
      39: aconst_null
      40: aconst_null
      41: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      44: astore        6
      46: aload_0
      47: aload         6
      49: aload         4
      51: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      54: ldc           #99                 // String ?
      56: iload_3
      57: invokevirtual #100                // Method insertDataAndDataEventAndOutgoingBatch:(Lorg/jumpmind/symmetric/model/Data;Ljava/lang/String;Ljava/lang/String;Z)V
      60: return

  public java.lang.String sendSQL(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
       4: invokeinterface #46,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findIdentity:()Lorg/jumpmind/symmetric/model/Node;
       9: astore        7
      11: aload_0
      12: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      15: aload_1
      16: invokeinterface #170,  2          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findNode:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Node;
      21: astore        8
      23: aload         8
      25: ifnonnull     48
      28: new           #89                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #202                // String Unknown node
      37: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn
      48: aload_0
      49: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      52: aload_2
      53: aload_3
      54: aload         4
      56: iconst_1
      57: invokeinterface #203,  5          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getTriggerRouterForTableForCurrentNode:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Set;
      62: astore        9
      64: aload         9
      66: ifnull        79
      69: aload         9
      71: invokeinterface #204,  1          // InterfaceMethod java/util/Set.size:()I
      76: ifne          113
      79: new           #89                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #205                // String Trigger for table
      88: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload         4
      93: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #206                // String  does not exist from node
      98: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload         7
     103: invokevirtual #176                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
     106: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: areturn
     113: aload_0
     114: aload         8
     116: aload         9
     118: invokeinterface #207,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     123: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     131: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     134: aload         5
     136: iload         6
     138: invokevirtual #208                // Method insertSqlEvent:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/Trigger;Ljava/lang/String;Z)V
     141: new           #89                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
     148: ldc           #209                // String Successfully create SQL event for node
     150: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload         8
     155: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     158: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: areturn

  public java.lang.String reloadTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokevirtual #210                // Method reloadTable:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.lang.String reloadTable(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
       4: invokeinterface #46,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findIdentity:()Lorg/jumpmind/symmetric/model/Node;
       9: astore        6
      11: aload_0
      12: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      15: aload_1
      16: invokeinterface #170,  2          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findNode:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Node;
      21: astore        7
      23: aload         7
      25: ifnonnull     48
      28: new           #89                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #202                // String Unknown node
      37: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn
      48: aload_0
      49: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      52: aload_2
      53: aload_3
      54: aload         4
      56: iconst_1
      57: invokeinterface #203,  5          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getTriggerRouterForTableForCurrentNode:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Set;
      62: astore        8
      64: aload         8
      66: ifnull        79
      69: aload         8
      71: invokeinterface #204,  1          // InterfaceMethod java/util/Set.size:()I
      76: ifne          113
      79: new           #89                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #205                // String Trigger for table
      88: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload         4
      93: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #206                // String  does not exist from node
      98: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload         6
     103: invokevirtual #176                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
     106: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: areturn
     113: aload         8
     115: invokeinterface #211,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     120: astore        9
     122: aload         9
     124: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     129: ifeq          221
     132: aload         9
     134: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     139: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     142: astore        10
     144: aload_0
     145: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     148: ldc           #60                 // String initial.load.create.first
     150: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     155: ifeq          185
     158: aload_0
     159: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     162: aload         10
     164: invokeinterface #69,  2           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getCreateTableXML:(Lorg/jumpmind/symmetric/model/TriggerRouter;)Ljava/lang/String;
     169: astore        11
     171: aload_0
     172: aload         7
     174: aload         10
     176: aload         11
     178: iconst_1
     179: invokevirtual #212                // Method insertCreateEvent:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;Z)V
     182: goto          208
     185: aload_0
     186: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     189: ldc           #71                 // String initial.load.delete.first
     191: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     196: ifeq          208
     199: aload_0
     200: aload         7
     202: aload         10
     204: iconst_1
     205: invokevirtual #213                // Method insertPurgeEvent:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Z)V
     208: aload_0
     209: aload         7
     211: aload         10
     213: aload         5
     215: invokevirtual #27                 // Method insertReloadEvent:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Ljava/lang/String;)V
     218: goto          122
     221: new           #89                 // class java/lang/StringBuilder
     224: dup
     225: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
     228: ldc           #214                // String Successfully created event to reload table
     230: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload         4
     235: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: ldc           #215                // String  for node
     240: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload         7
     245: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     248: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: areturn

  public void insertHeartbeatEvent(org.jumpmind.symmetric.model.Node, boolean);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       6: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      11: astore_3
      12: aload_0
      13: getfield      #101                // Field tablePrefix:Ljava/lang/String;
      16: ldc           #216                // String node
      18: invokestatic  #103                // Method org/jumpmind/symmetric/common/TableConstants.getTableName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      21: astore        4
      23: aload_0
      24: getfield      #9                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      27: aload_0
      28: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      31: invokeinterface #217,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getNodeGroupId:()Ljava/lang/String;
      36: invokeinterface #218,  2          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getNodeGroupLinksFor:(Ljava/lang/String;)Ljava/util/List;
      41: astore        5
      43: aload         5
      45: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore        6
      52: aload         6
      54: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          207
      62: aload         6
      64: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #219                // class org/jumpmind/symmetric/model/NodeGroupLink
      72: astore        7
      74: aload         7
      76: invokevirtual #220                // Method org/jumpmind/symmetric/model/NodeGroupLink.getDataEventAction:()Lorg/jumpmind/symmetric/model/NodeGroupLinkAction;
      79: getstatic     #221                // Field org/jumpmind/symmetric/model/NodeGroupLinkAction.P:Lorg/jumpmind/symmetric/model/NodeGroupLinkAction;
      82: if_acmpne     204
      85: aload_0
      86: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      89: aload         7
      91: aconst_null
      92: aconst_null
      93: aload         4
      95: iconst_0
      96: invokeinterface #222,  6          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getTriggerRouterForTableForCurrentNode:(Lorg/jumpmind/symmetric/model/NodeGroupLink;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Set;
     101: astore        8
     103: aload         8
     105: ifnull        191
     108: aload         8
     110: invokeinterface #204,  1          // InterfaceMethod java/util/Set.size:()I
     115: ifle          191
     118: aload_0
     119: aload_3
     120: aload         8
     122: invokeinterface #207,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     127: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     132: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
     135: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     138: ldc           #223                // String  t.node_id = \'%s\'
     140: iconst_1
     141: anewarray     #111                // class java/lang/Object
     144: dup
     145: iconst_0
     146: aload_1
     147: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     150: aastore
     151: invokestatic  #172                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     154: invokevirtual #224                // Method createData:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Trigger;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Data;
     157: astore        9
     159: aload         9
     161: ifnull        175
     164: aload_0
     165: aload_3
     166: aload         9
     168: invokevirtual #129                // Method insertData:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Data;)J
     171: pop2
     172: goto          188
     175: aload_0
     176: getfield      #117                // Field log:Lorg/slf4j/Logger;
     179: ldc           #225                // String Not generating data/data events for table {} because a trigger or trigger hist is not created yet.
     181: aload         4
     183: invokeinterface #226,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     188: goto          204
     191: aload_0
     192: getfield      #117                // Field log:Lorg/slf4j/Logger;
     195: ldc           #225                // String Not generating data/data events for table {} because a trigger or trigger hist is not created yet.
     197: aload         4
     199: invokeinterface #226,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     204: goto          52
     207: aload_3
     208: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
     213: jsr           227
     216: goto          236
     219: astore        10
     221: jsr           227
     224: aload         10
     226: athrow
     227: astore        11
     229: aload_0
     230: aload_3
     231: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
     234: ret           11
     236: return
    Exception table:
       from    to  target type
           2   216   219   any
         219   224   219   any

  public org.jumpmind.symmetric.model.Data createData(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #227                // Method createData:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Data;
       8: areturn

  public org.jumpmind.symmetric.model.Data createData(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore        5
       3: aload_0
       4: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       7: invokeinterface #29,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      12: astore        5
      14: aload_0
      15: aload         5
      17: aload_1
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokevirtual #200                // Method createData:(Lorg/jumpmind/db/sql/ISqlTransaction;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Data;
      25: astore        6
      27: aload         5
      29: invokeinterface #31,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      34: aload         6
      36: astore        7
      38: jsr           52
      41: aload         7
      43: areturn
      44: astore        8
      46: jsr           52
      49: aload         8
      51: athrow
      52: astore        9
      54: aload_0
      55: aload         5
      57: invokevirtual #32                 // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      60: ret           9
    Exception table:
       from    to  target type
           3    41    44   any
          44    49    44   any

  public org.jumpmind.symmetric.model.Data createData(org.jumpmind.db.sql.ISqlTransaction, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore        6
       3: aload_0
       4: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
       7: aload_2
       8: aload_3
       9: aload         4
      11: iconst_0
      12: invokeinterface #203,  5          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getTriggerRouterForTableForCurrentNode:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Set;
      17: astore        7
      19: aload         7
      21: ifnull        61
      24: aload         7
      26: invokeinterface #204,  1          // InterfaceMethod java/util/Set.size:()I
      31: ifle          61
      34: aload_0
      35: aload_1
      36: aload         7
      38: invokeinterface #207,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #66                 // class org/jumpmind/symmetric/model/TriggerRouter
      51: invokevirtual #33                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      54: aload         5
      56: invokevirtual #224                // Method createData:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/Trigger;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Data;
      59: astore        6
      61: aload         6
      63: areturn

  protected org.jumpmind.symmetric.model.Data createData(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.Trigger, java.lang.String);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_2
       4: ifnull        232
       7: aload_0
       8: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      11: aload_2
      12: invokevirtual #82                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #83                 // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      19: aload_2
      20: invokevirtual #84                 // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      23: aload_2
      24: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      27: invokeinterface #86,  5           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      32: astore        5
      34: aload         5
      36: ifnonnull     77
      39: aload_0
      40: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      43: aload_2
      44: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      47: invokeinterface #105,  2          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.findTriggerHistory:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      52: astore        5
      54: aload         5
      56: ifnonnull     77
      59: aload_0
      60: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
      63: aload_2
      64: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      67: invokevirtual #104                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      70: invokeinterface #105,  2          // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.findTriggerHistory:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
      75: astore        5
      77: aload         5
      79: ifnull        232
      82: aconst_null
      83: astore        6
      85: aconst_null
      86: astore        7
      88: aload_3
      89: ifnull        204
      92: aload_1
      93: aload_0
      94: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      97: aload_2
      98: aload         5
     100: aload_0
     101: getfield      #9                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
     104: aload_2
     105: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
     108: invokeinterface #228,  2          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getChannel:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Channel;
     113: aload_3
     114: invokeinterface #229,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.createCsvDataSql:(Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/Channel;Ljava/lang/String;)Ljava/lang/String;
     119: ldc_w         #108                // class java/lang/String
     122: iconst_0
     123: anewarray     #111                // class java/lang/Object
     126: invokeinterface #230,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.queryForObject:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     131: checkcast     #108                // class java/lang/String
     134: astore        6
     136: aload         6
     138: ifnull        148
     141: aload         6
     143: invokevirtual #231                // Method java/lang/String.trim:()Ljava/lang/String;
     146: astore        6
     148: aload_1
     149: aload_0
     150: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     153: aload_2
     154: aload         5
     156: aload_0
     157: getfield      #9                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
     160: aload_2
     161: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
     164: invokeinterface #228,  2          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getChannel:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Channel;
     169: aload_3
     170: invokeinterface #232,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.createCsvPrimaryKeySql:(Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/Channel;Ljava/lang/String;)Ljava/lang/String;
     175: ldc_w         #108                // class java/lang/String
     178: iconst_0
     179: anewarray     #111                // class java/lang/Object
     182: invokeinterface #230,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.queryForObject:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
     187: checkcast     #108                // class java/lang/String
     190: astore        7
     192: aload         7
     194: ifnull        204
     197: aload         7
     199: invokevirtual #231                // Method java/lang/String.trim:()Ljava/lang/String;
     202: astore        7
     204: new           #35                 // class org/jumpmind/symmetric/model/Data
     207: dup
     208: aload_2
     209: invokevirtual #85                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     212: getstatic     #233                // Field org/jumpmind/symmetric/io/data/DataEventType.UPDATE:Lorg/jumpmind/symmetric/io/data/DataEventType;
     215: aload         6
     217: aload         7
     219: aload         5
     221: aload_2
     222: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
     225: aconst_null
     226: aconst_null
     227: invokespecial #40                 // Method org/jumpmind/symmetric/model/Data."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/io/data/DataEventType;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     230: astore        4
     232: aload         4
     234: areturn

  public java.util.List<org.jumpmind.symmetric.model.DataGap> findDataGapsByStatus(org.jumpmind.symmetric.model.DataGap$Status);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #234                // String findDataGapsByStatusSql
      13: aastore
      14: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: new           #235                // class org/jumpmind/symmetric/service/impl/DataService$2
      20: dup
      21: aload_0
      22: invokespecial #236                // Method org/jumpmind/symmetric/service/impl/DataService$2."<init>":(Lorg/jumpmind/symmetric/service/impl/DataService;)V
      25: iconst_1
      26: anewarray     #111                // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_1
      32: invokevirtual #237                // Method org/jumpmind/symmetric/model/DataGap$Status.name:()Ljava/lang/String;
      35: aastore
      36: invokeinterface #238,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      41: areturn

  public java.util.List<org.jumpmind.symmetric.model.DataGap> findDataGaps();
    Code:
       0: aload_0
       1: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #239                // String routing.largest.gap.size
       6: invokeinterface #240,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getInt:(Ljava/lang/String;)I
      11: i2l
      12: lstore_1
      13: aload_0
      14: getstatic     #241                // Field org/jumpmind/symmetric/model/DataGap$Status.GP:Lorg/jumpmind/symmetric/model/DataGap$Status;
      17: invokevirtual #242                // Method findDataGapsByStatus:(Lorg/jumpmind/symmetric/model/DataGap$Status;)Ljava/util/List;
      20: astore_3
      21: iconst_0
      22: istore        4
      24: aload_3
      25: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: astore        5
      32: aload         5
      34: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          79
      42: aload         5
      44: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #243                // class org/jumpmind/symmetric/model/DataGap
      52: astore        6
      54: iload         4
      56: aload         6
      58: invokevirtual #244                // Method org/jumpmind/symmetric/model/DataGap.gapSize:()J
      61: lload_1
      62: lconst_1
      63: lsub
      64: lcmp
      65: iflt          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ior
      74: istore        4
      76: goto          32
      79: iload         4
      81: ifne          125
      84: aload_0
      85: invokevirtual #245                // Method findMaxDataEventDataId:()J
      88: lstore        5
      90: lload         5
      92: lconst_0
      93: lcmp
      94: ifle          103
      97: lload         5
      99: lconst_1
     100: ladd
     101: lstore        5
     103: aload_0
     104: new           #243                // class org/jumpmind/symmetric/model/DataGap
     107: dup
     108: lload         5
     110: lload         5
     112: lload_1
     113: ladd
     114: invokespecial #246                // Method org/jumpmind/symmetric/model/DataGap."<init>":(JJ)V
     117: invokevirtual #247                // Method insertDataGap:(Lorg/jumpmind/symmetric/model/DataGap;)V
     120: aload_0
     121: invokevirtual #248                // Method findDataGaps:()Ljava/util/List;
     124: astore_3
     125: aload_3
     126: areturn

  public long findMaxDataEventDataId();
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #249                // String selectMaxDataEventDataIdSql
      13: aastore
      14: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_0
      18: anewarray     #111                // class java/lang/Object
      21: invokeinterface #250,  3          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;)J
      26: lreturn

  public void insertDataGap(org.jumpmind.symmetric.model.DataGap);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #251                // String insertDataGapSql
      13: aastore
      14: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_4
      18: anewarray     #111                // class java/lang/Object
      21: dup
      22: iconst_0
      23: getstatic     #241                // Field org/jumpmind/symmetric/model/DataGap$Status.GP:Lorg/jumpmind/symmetric/model/DataGap$Status;
      26: invokevirtual #237                // Method org/jumpmind/symmetric/model/DataGap$Status.name:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_1
      32: invokestatic  #252                // Method org/jumpmind/symmetric/util/AppUtils.getHostName:()Ljava/lang/String;
      35: aastore
      36: dup
      37: iconst_2
      38: aload_1
      39: invokevirtual #253                // Method org/jumpmind/symmetric/model/DataGap.getStartId:()J
      42: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aastore
      46: dup
      47: iconst_3
      48: aload_1
      49: invokevirtual #254                // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
      52: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: aastore
      56: iconst_4
      57: newarray       int
      59: dup
      60: iconst_0
      61: bipush        12
      63: iastore
      64: dup
      65: iconst_1
      66: bipush        12
      68: iastore
      69: dup
      70: iconst_2
      71: iconst_2
      72: iastore
      73: dup
      74: iconst_3
      75: iconst_2
      76: iastore
      77: invokeinterface #255,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      82: pop
      83: goto          121
      86: astore_2
      87: aload_0
      88: getfield      #117                // Field log:Lorg/slf4j/Logger;
      91: ldc_w         #256                // String A gap already existed for {} to {}.  Updating instead.
      94: aload_1
      95: invokevirtual #253                // Method org/jumpmind/symmetric/model/DataGap.getStartId:()J
      98: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     101: aload_1
     102: invokevirtual #254                // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
     105: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     108: invokeinterface #183,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     113: aload_0
     114: aload_1
     115: getstatic     #241                // Field org/jumpmind/symmetric/model/DataGap$Status.GP:Lorg/jumpmind/symmetric/model/DataGap$Status;
     118: invokevirtual #257                // Method updateDataGap:(Lorg/jumpmind/symmetric/model/DataGap;Lorg/jumpmind/symmetric/model/DataGap$Status;)V
     121: return
    Exception table:
       from    to  target type
           0    83    86   Class org/jumpmind/db/sql/UniqueKeyException

  public void updateDataGap(org.jumpmind.symmetric.model.DataGap, org.jumpmind.symmetric.model.DataGap$Status);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc_w         #258                // String updateDataGapSql
      14: aastore
      15: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      18: iconst_4
      19: anewarray     #111                // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_2
      25: invokevirtual #237                // Method org/jumpmind/symmetric/model/DataGap$Status.name:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: invokestatic  #252                // Method org/jumpmind/symmetric/util/AppUtils.getHostName:()Ljava/lang/String;
      34: aastore
      35: dup
      36: iconst_2
      37: aload_1
      38: invokevirtual #253                // Method org/jumpmind/symmetric/model/DataGap.getStartId:()J
      41: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      44: aastore
      45: dup
      46: iconst_3
      47: aload_1
      48: invokevirtual #254                // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
      51: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      54: aastore
      55: iconst_4
      56: newarray       int
      58: dup
      59: iconst_0
      60: bipush        12
      62: iastore
      63: dup
      64: iconst_1
      65: bipush        12
      67: iastore
      68: dup
      69: iconst_2
      70: iconst_2
      71: iastore
      72: dup
      73: iconst_3
      74: iconst_2
      75: iastore
      76: invokeinterface #255,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      81: pop
      82: return

  public void deleteDataGap(org.jumpmind.symmetric.model.DataGap);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc_w         #259                // String deleteDataGapSql
      14: aastore
      15: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      18: iconst_2
      19: anewarray     #111                // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #253                // Method org/jumpmind/symmetric/model/DataGap.getStartId:()J
      28: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_1
      35: invokevirtual #254                // Method org/jumpmind/symmetric/model/DataGap.getEndId:()J
      38: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: iconst_2
      43: newarray       int
      45: dup
      46: iconst_0
      47: iconst_2
      48: iastore
      49: dup
      50: iconst_1
      51: iconst_2
      52: iastore
      53: invokeinterface #255,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      58: pop
      59: return

  public java.util.Date findCreateTimeOfEvent(long);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc_w         #260                // String findDataEventCreateTimeSql
      14: aastore
      15: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      18: ldc_w         #261                // class java/util/Date
      21: iconst_1
      22: anewarray     #111                // class java/lang/Object
      25: dup
      26: iconst_0
      27: lload_1
      28: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokeinterface #262,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForObject:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #261                // class java/util/Date
      40: areturn

  public java.util.Date findCreateTimeOfData(long);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc_w         #263                // String findDataCreateTimeSql
      14: aastore
      15: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      18: ldc_w         #261                // class java/util/Date
      21: iconst_1
      22: anewarray     #111                // class java/lang/Object
      25: dup
      26: iconst_0
      27: lload_1
      28: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokeinterface #262,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForObject:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #261                // class java/util/Date
      40: areturn

  public java.util.Map<java.lang.String, java.lang.String> getRowDataAsMap(org.jumpmind.symmetric.model.Data);
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #140                // Method org/jumpmind/symmetric/model/Data.getTriggerHistory:()Lorg/jumpmind/symmetric/model/TriggerHistory;
      12: invokevirtual #264                // Method org/jumpmind/symmetric/model/TriggerHistory.getColumnNames:()Ljava/lang/String;
      15: invokestatic  #265                // Method org/jumpmind/symmetric/io/data/CsvUtils.tokenizeCsvData:(Ljava/lang/String;)[Ljava/lang/String;
      18: astore_3
      19: aload_1
      20: invokevirtual #137                // Method org/jumpmind/symmetric/model/Data.getRowData:()Ljava/lang/String;
      23: invokestatic  #265                // Method org/jumpmind/symmetric/io/data/CsvUtils.tokenizeCsvData:(Ljava/lang/String;)[Ljava/lang/String;
      26: astore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: aload_3
      34: arraylength
      35: if_icmpge     63
      38: aload_2
      39: aload_3
      40: iload         5
      42: aaload
      43: invokevirtual #266                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      46: aload         4
      48: iload         5
      50: aaload
      51: invokeinterface #186,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: iinc          5, 1
      60: goto          31
      63: aload_2
      64: areturn

  public void setRowDataFromMap(org.jumpmind.symmetric.model.Data, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokevirtual #140                // Method org/jumpmind/symmetric/model/Data.getTriggerHistory:()Lorg/jumpmind/symmetric/model/TriggerHistory;
       4: invokevirtual #264                // Method org/jumpmind/symmetric/model/TriggerHistory.getColumnNames:()Ljava/lang/String;
       7: invokestatic  #265                // Method org/jumpmind/symmetric/io/data/CsvUtils.tokenizeCsvData:(Ljava/lang/String;)[Ljava/lang/String;
      10: astore_3
      11: new           #267                // class java/io/ByteArrayOutputStream
      14: dup
      15: invokespecial #268                // Method java/io/ByteArrayOutputStream."<init>":()V
      18: astore        4
      20: new           #269                // class org/jumpmind/symmetric/csv/CsvWriter
      23: dup
      24: new           #270                // class java/io/OutputStreamWriter
      27: dup
      28: aload         4
      30: invokespecial #271                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;)V
      33: bipush        44
      35: invokespecial #272                // Method org/jumpmind/symmetric/csv/CsvWriter."<init>":(Ljava/io/Writer;C)V
      38: astore        5
      40: aload         5
      42: iconst_2
      43: invokevirtual #273                // Method org/jumpmind/symmetric/csv/CsvWriter.setEscapeMode:(I)V
      46: aload_3
      47: astore        6
      49: aload         6
      51: arraylength
      52: istore        7
      54: iconst_0
      55: istore        8
      57: iload         8
      59: iload         7
      61: if_icmpge     102
      64: aload         6
      66: iload         8
      68: aaload
      69: astore        9
      71: aload         5
      73: aload_2
      74: aload         9
      76: invokevirtual #266                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      79: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #108                // class java/lang/String
      87: iconst_1
      88: invokevirtual #274                // Method org/jumpmind/symmetric/csv/CsvWriter.write:(Ljava/lang/String;Z)V
      91: goto          96
      94: astore        10
      96: iinc          8, 1
      99: goto          57
     102: aload         5
     104: invokevirtual #276                // Method org/jumpmind/symmetric/csv/CsvWriter.close:()V
     107: aload_1
     108: aload         4
     110: invokevirtual #277                // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
     113: invokevirtual #278                // Method org/jumpmind/symmetric/model/Data.setRowData:(Ljava/lang/String;)V
     116: return
    Exception table:
       from    to  target type
          71    91    94   Class java/io/IOException

  protected java.util.List<org.jumpmind.symmetric.ext.IHeartbeatListener> getHeartbeatListeners(boolean);
    Code:
       0: iload_1
       1: ifeq          9
       4: aload_0
       5: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
       8: areturn
       9: new           #12                 // class java/util/ArrayList
      12: dup
      13: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      16: astore_2
      17: aload_2
      18: ifnull        113
      21: invokestatic  #279                // Method java/lang/System.currentTimeMillis:()J
      24: lstore_3
      25: aload_0
      26: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
      29: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore        5
      36: aload         5
      38: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          113
      46: aload         5
      48: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #280                // class org/jumpmind/symmetric/ext/IHeartbeatListener
      56: astore        6
      58: aload_0
      59: getfield      #5                  // Field lastHeartbeatTimestamps:Ljava/util/Map;
      62: aload         6
      64: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #281                // class java/lang/Long
      72: astore        7
      74: aload         7
      76: ifnull        101
      79: aload         7
      81: invokevirtual #282                // Method java/lang/Long.longValue:()J
      84: lload_3
      85: aload         6
      87: invokeinterface #283,  1          // InterfaceMethod org/jumpmind/symmetric/ext/IHeartbeatListener.getTimeBetweenHeartbeatsInSeconds:()J
      92: ldc2_w        #284                // long 1000l
      95: lmul
      96: lsub
      97: lcmp
      98: ifgt          110
     101: aload_2
     102: aload         6
     104: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: goto          36
     113: aload_2
     114: areturn

  protected void updateLastHeartbeatTime(java.util.List<org.jumpmind.symmetric.ext.IHeartbeatListener>);
    Code:
       0: aload_1
       1: ifnull        54
       4: invokestatic  #279                // Method java/lang/System.currentTimeMillis:()J
       7: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: astore_2
      11: aload_1
      12: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          54
      27: aload_3
      28: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #280                // class org/jumpmind/symmetric/ext/IHeartbeatListener
      36: astore        4
      38: aload_0
      39: getfield      #5                  // Field lastHeartbeatTimestamps:Ljava/util/Map;
      42: aload         4
      44: aload_2
      45: invokeinterface #186,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          18
      54: return

  public void heartbeat(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #286                // Method getHeartbeatListeners:(Z)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: invokeinterface #72,  1           // InterfaceMethod java/util/List.size:()I
      12: ifle          330
      15: aload_0
      16: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      19: invokeinterface #46,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findIdentity:()Lorg/jumpmind/symmetric/model/Node;
      24: astore_3
      25: aload_3
      26: ifnull        318
      29: aload_0
      30: getfield      #117                // Field log:Lorg/slf4j/Logger;
      33: ldc_w         #287                // String Updating time and version node info
      36: invokeinterface #288,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      41: invokestatic  #289                // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      44: astore        4
      46: aload         4
      48: bipush        14
      50: iconst_0
      51: invokevirtual #290                // Method java/util/Calendar.set:(II)V
      54: aload_3
      55: aload_0
      56: getfield      #6                  // Field deploymentType:Ljava/lang/String;
      59: invokevirtual #291                // Method org/jumpmind/symmetric/model/Node.setDeploymentType:(Ljava/lang/String;)V
      62: aload_3
      63: aload         4
      65: invokevirtual #292                // Method java/util/Calendar.getTime:()Ljava/util/Date;
      68: invokevirtual #293                // Method org/jumpmind/symmetric/model/Node.setHeartbeatTime:(Ljava/util/Date;)V
      71: aload_3
      72: invokestatic  #294                // Method org/jumpmind/symmetric/util/AppUtils.getTimezoneOffset:()Ljava/lang/String;
      75: invokevirtual #295                // Method org/jumpmind/symmetric/model/Node.setTimezoneOffset:(Ljava/lang/String;)V
      78: aload_3
      79: invokestatic  #296                // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      82: invokevirtual #297                // Method org/jumpmind/symmetric/model/Node.setSymmetricVersion:(Ljava/lang/String;)V
      85: aload_3
      86: aload_0
      87: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      90: invokeinterface #298,  1          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getName:()Ljava/lang/String;
      95: invokevirtual #299                // Method org/jumpmind/symmetric/model/Node.setDatabaseType:(Ljava/lang/String;)V
      98: aload_3
      99: aload_0
     100: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     103: invokeinterface #300,  1          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getVersion:()Ljava/lang/String;
     108: invokevirtual #301                // Method org/jumpmind/symmetric/model/Node.setDatabaseVersion:(Ljava/lang/String;)V
     111: aload_3
     112: aload_0
     113: getfield      #10                 // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
     116: invokeinterface #302,  1          // InterfaceMethod org/jumpmind/symmetric/service/IOutgoingBatchService.countOutgoingBatchesInError:()I
     121: invokevirtual #303                // Method org/jumpmind/symmetric/model/Node.setBatchInErrorCount:(I)V
     124: aload_0
     125: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     128: ldc_w         #304                // String auto.update.node.values.from.properties
     131: invokeinterface #49,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     136: ifeq          221
     139: aload_0
     140: getfield      #117                // Field log:Lorg/slf4j/Logger;
     143: ldc_w         #305                // String Updating my node configuration info according to the symmetric properties
     146: invokeinterface #288,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     151: aload_3
     152: aload_0
     153: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     156: ldc_w         #306                // String schema.version
     159: invokeinterface #307,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getString:(Ljava/lang/String;)Ljava/lang/String;
     164: invokevirtual #308                // Method org/jumpmind/symmetric/model/Node.setSchemaVersion:(Ljava/lang/String;)V
     167: aload_3
     168: aload_0
     169: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     172: invokeinterface #309,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getExternalId:()Ljava/lang/String;
     177: invokevirtual #310                // Method org/jumpmind/symmetric/model/Node.setExternalId:(Ljava/lang/String;)V
     180: aload_3
     181: aload_0
     182: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     185: invokeinterface #217,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getNodeGroupId:()Ljava/lang/String;
     190: invokevirtual #311                // Method org/jumpmind/symmetric/model/Node.setNodeGroupId:(Ljava/lang/String;)V
     193: aload_0
     194: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     197: invokeinterface #312,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getSyncUrl:()Ljava/lang/String;
     202: invokestatic  #149                // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
     205: ifne          221
     208: aload_3
     209: aload_0
     210: getfield      #47                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     213: invokeinterface #312,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getSyncUrl:()Ljava/lang/String;
     218: invokevirtual #313                // Method org/jumpmind/symmetric/model/Node.setSyncUrl:(Ljava/lang/String;)V
     221: aload_0
     222: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
     225: aload_3
     226: invokeinterface #314,  2          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.save:(Lorg/jumpmind/symmetric/model/Node;)V
     231: aload_0
     232: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
     235: invokeinterface #315,  1          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.updateNodeHostForCurrentNode:()V
     240: aload_0
     241: getfield      #117                // Field log:Lorg/slf4j/Logger;
     244: ldc_w         #316                // String Done updating my node info.
     247: invokeinterface #288,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     252: aload_0
     253: getfield      #7                  // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
     256: aload_3
     257: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     260: invokeinterface #317,  2          // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findNodesThatOriginatedFromNodeId:(Ljava/lang/String;)Ljava/util/Set;
     265: astore        5
     267: aload_2
     268: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     273: astore        6
     275: aload         6
     277: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     282: ifeq          310
     285: aload         6
     287: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     292: checkcast     #280                // class org/jumpmind/symmetric/ext/IHeartbeatListener
     295: astore        7
     297: aload         7
     299: aload_3
     300: aload         5
     302: invokeinterface #318,  3          // InterfaceMethod org/jumpmind/symmetric/ext/IHeartbeatListener.heartbeat:(Lorg/jumpmind/symmetric/model/Node;Ljava/util/Set;)V
     307: goto          275
     310: aload_0
     311: aload_2
     312: invokevirtual #319                // Method updateLastHeartbeatTime:(Ljava/util/List;)V
     315: goto          330
     318: aload_0
     319: getfield      #117                // Field log:Lorg/slf4j/Logger;
     322: ldc_w         #320                // String Did not run the heartbeat process because the node has not been configured
     325: invokeinterface #321,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     330: return

  public void setReloadListeners(java.util.List<org.jumpmind.symmetric.load.IReloadListener>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field reloadListeners:Ljava/util/List;
       5: return

  public void addReloadListener(org.jumpmind.symmetric.load.IReloadListener);
    Code:
       0: aload_0
       1: getfield      #14                 // Field reloadListeners:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #12                 // class java/util/ArrayList
      11: dup
      12: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #14                 // Field reloadListeners:Ljava/util/List;
      18: aload_0
      19: getfield      #14                 // Field reloadListeners:Ljava/util/List;
      22: aload_1
      23: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public boolean removeReloadListener(org.jumpmind.symmetric.load.IReloadListener);
    Code:
       0: aload_0
       1: getfield      #14                 // Field reloadListeners:Ljava/util/List;
       4: ifnull        18
       7: aload_0
       8: getfield      #14                 // Field reloadListeners:Ljava/util/List;
      11: aload_1
      12: invokeinterface #322,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: ireturn
      18: iconst_0
      19: ireturn

  public void setHeartbeatListeners(java.util.List<org.jumpmind.symmetric.ext.IHeartbeatListener>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field heartbeatListeners:Ljava/util/List;
       5: return

  public void addHeartbeatListener(org.jumpmind.symmetric.ext.IHeartbeatListener);
    Code:
       0: aload_0
       1: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #12                 // class java/util/ArrayList
      11: dup
      12: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #15                 // Field heartbeatListeners:Ljava/util/List;
      18: aload_0
      19: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
      22: aload_1
      23: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public boolean removeHeartbeatListener(org.jumpmind.symmetric.ext.IHeartbeatListener);
    Code:
       0: aload_0
       1: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
       4: ifnull        18
       7: aload_0
       8: getfield      #15                 // Field heartbeatListeners:Ljava/util/List;
      11: aload_1
      12: invokeinterface #322,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: ireturn
      18: iconst_0
      19: ireturn

  public java.util.List<java.lang.Number> listDataIds(long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc_w         #323                // String selectEventDataIdsSql
      14: aastore
      15: dup
      16: iconst_1
      17: ldc_w         #324                // String  order by d.data_id asc
      20: aastore
      21: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      24: new           #325                // class org/jumpmind/db/sql/mapper/NumberMapper
      27: dup
      28: invokespecial #326                // Method org/jumpmind/db/sql/mapper/NumberMapper."<init>":()V
      31: iconst_2
      32: anewarray     #111                // class java/lang/Object
      35: dup
      36: iconst_0
      37: lload_1
      38: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: dup
      43: iconst_1
      44: aload_3
      45: aastore
      46: invokeinterface #238,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      51: areturn

  public java.util.List<org.jumpmind.symmetric.model.Data> listData(long, java.lang.String, long, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: lload_1
       6: lload         4
       8: aload         6
      10: invokevirtual #327                // Method getDataSelectSql:(JJLjava/lang/String;)Ljava/lang/String;
      13: iload         7
      15: aload_0
      16: getfield      #21                 // Field dataMapper:Lorg/jumpmind/symmetric/service/impl/DataService$DataMapper;
      19: iconst_3
      20: anewarray     #111                // class java/lang/Object
      23: dup
      24: iconst_0
      25: lload_1
      26: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_3
      33: aastore
      34: dup
      35: iconst_2
      36: lload         4
      38: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: invokeinterface #328,  5          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;ILorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      47: areturn

  public org.jumpmind.symmetric.model.Data mapData(org.jumpmind.db.sql.Row);
    Code:
       0: aload_0
       1: getfield      #21                 // Field dataMapper:Lorg/jumpmind/symmetric/service/impl/DataService$DataMapper;
       4: aload_1
       5: invokevirtual #329                // Method org/jumpmind/symmetric/service/impl/DataService$DataMapper.mapRow:(Lorg/jumpmind/db/sql/Row;)Lorg/jumpmind/symmetric/model/Data;
       8: areturn

  public org.jumpmind.db.sql.ISqlReadCursor<org.jumpmind.symmetric.model.Data> selectDataFor(org.jumpmind.symmetric.io.data.Batch);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: aload_1
       6: invokevirtual #330                // Method org/jumpmind/symmetric/io/data/Batch.getBatchId:()J
       9: ldc2_w        #127                // long -1l
      12: aload_1
      13: invokevirtual #331                // Method org/jumpmind/symmetric/io/data/Batch.getChannelId:()Ljava/lang/String;
      16: invokevirtual #327                // Method getDataSelectSql:(JJLjava/lang/String;)Ljava/lang/String;
      19: aload_0
      20: getfield      #21                 // Field dataMapper:Lorg/jumpmind/symmetric/service/impl/DataService$DataMapper;
      23: iconst_2
      24: anewarray     #111                // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: invokevirtual #330                // Method org/jumpmind/symmetric/io/data/Batch.getBatchId:()J
      33: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_1
      40: invokevirtual #332                // Method org/jumpmind/symmetric/io/data/Batch.getNodeId:()Ljava/lang/String;
      43: aastore
      44: iconst_1
      45: newarray       int
      47: dup
      48: iconst_0
      49: iconst_2
      50: iastore
      51: invokeinterface #333,  5          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForCursor:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;[I)Lorg/jumpmind/db/sql/ISqlReadCursor;
      56: areturn

  protected java.lang.String getDataSelectSql(long, long, java.lang.String);
    Code:
       0: lload_3
       1: lconst_0
       2: lcmp
       3: iflt          12
       6: ldc_w         #334                // String  and d.data_id >= ?
       9: goto          15
      12: ldc_w         #335                // String
      15: astore        6
      17: aload_0
      18: getfield      #68                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      21: aload_0
      22: iconst_3
      23: anewarray     #108                // class java/lang/String
      26: dup
      27: iconst_0
      28: ldc_w         #336                // String selectEventDataToExtractSql
      31: aastore
      32: dup
      33: iconst_1
      34: aload         6
      36: aastore
      37: dup
      38: iconst_2
      39: ldc_w         #324                // String  order by d.data_id asc
      42: aastore
      43: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      46: aload_0
      47: getfield      #9                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      50: aload         5
      52: iconst_0
      53: invokeinterface #337,  3          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getNodeChannel:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/NodeChannel;
      58: invokevirtual #338                // Method org/jumpmind/symmetric/model/NodeChannel.getChannel:()Lorg/jumpmind/symmetric/model/Channel;
      61: invokeinterface #339,  3          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.massageDataExtractionSql:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/Channel;)Ljava/lang/String;
      66: areturn

  public long findMaxDataId();
    Code:
       0: aload_0
       1: getfield      #28                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #108                // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc_w         #340                // String selectMaxDataIdSql
      14: aastore
      15: invokevirtual #110                // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      18: iconst_0
      19: anewarray     #111                // class java/lang/Object
      22: invokeinterface #250,  3          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForLong:(Ljava/lang/String;[Ljava/lang/Object;)J
      27: lreturn

  static org.jumpmind.symmetric.service.ITriggerRouterService access$000(org.jumpmind.symmetric.service.impl.DataService);
    Code:
       0: aload_0
       1: getfield      #1                  // Field triggerRouterService:Lorg/jumpmind/symmetric/service/ITriggerRouterService;
       4: areturn
}
