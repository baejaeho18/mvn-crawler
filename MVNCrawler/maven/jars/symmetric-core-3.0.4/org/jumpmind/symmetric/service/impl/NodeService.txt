Compiled from "NodeService.java"
public class org.jumpmind.symmetric.service.impl.NodeService extends org.jumpmind.symmetric.service.impl.AbstractService implements org.jumpmind.symmetric.service.INodeService {
  private org.jumpmind.symmetric.model.Node cachedNodeIdentity;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.model.NodeSecurity> securityCache;

  private long securityCacheTime;

  private org.jumpmind.symmetric.config.INodeIdGenerator nodeIdGenerator;

  private org.jumpmind.symmetric.security.INodePasswordFilter nodePasswordFilter;

  private org.jumpmind.symmetric.model.NodeHost nodeHostForCurrentNode;

  private java.util.List<org.jumpmind.symmetric.ext.IOfflineServerListener> offlineServerListeners;

  public org.jumpmind.symmetric.service.impl.NodeService(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/jumpmind/symmetric/service/impl/AbstractService."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
       6: aload_0
       7: aconst_null
       8: putfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      11: aload_0
      12: new           #4                  // class org/jumpmind/symmetric/util/DefaultNodeIdGenerator
      15: dup
      16: invokespecial #5                  // Method org/jumpmind/symmetric/util/DefaultNodeIdGenerator."<init>":()V
      19: putfield      #6                  // Field nodeIdGenerator:Lorg/jumpmind/symmetric/config/INodeIdGenerator;
      22: aload_0
      23: new           #7                  // class org/jumpmind/symmetric/service/impl/NodeServiceSqlMap
      26: dup
      27: aload_0
      28: getfield      #8                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      31: invokeinterface #9,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      36: aload_0
      37: invokevirtual #10                 // Method createSqlReplacementTokens:()Ljava/util/Map;
      40: invokespecial #11                 // Method org/jumpmind/symmetric/service/impl/NodeServiceSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
      43: invokevirtual #12                 // Method setSqlMap:(Lorg/jumpmind/symmetric/service/impl/ISqlMap;)V
      46: return

  public java.lang.String findSymmetricVersion();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #15                 // String findSymmetricVersionSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: ldc_w         #14                 // class java/lang/String
      20: iconst_0
      21: anewarray     #17                 // class java/lang/Object
      24: invokeinterface #18,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForObject:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #14                 // class java/lang/String
      32: areturn

  public java.lang.String findIdentityNodeId();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method findIdentity:()Lorg/jumpmind/symmetric/model/Node;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      13: goto          17
      16: aconst_null
      17: areturn

  public java.util.Collection<org.jumpmind.symmetric.model.Node> findEnabledNodesFromNodeGroup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #21                 // String selectNodePrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #22                 // String findEnabledNodesFromNodeGroupSql
      18: aastore
      19: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      25: dup
      26: aload_0
      27: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      30: iconst_1
      31: anewarray     #17                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      43: areturn

  public java.util.Set<org.jumpmind.symmetric.model.Node> findNodesThatOriginatedFromNodeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #26                 // Method findNodesThatOriginatedFromNodeId:(Ljava/lang/String;Z)Ljava/util/Set;
       6: areturn

  public java.util.Collection<org.jumpmind.symmetric.model.Node> findNodesWithOpenRegistration();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #21                 // String selectNodePrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #27                 // String findNodesWithOpenRegistrationSql
      18: aastore
      19: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      25: dup
      26: aload_0
      27: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      30: iconst_0
      31: anewarray     #17                 // class java/lang/Object
      34: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      39: areturn

  public java.util.Set<org.jumpmind.symmetric.model.Node> findNodesThatOriginatedFromNodeId(java.lang.String, boolean);
    Code:
       0: new           #28                 // class java/util/HashSet
       3: dup
       4: invokespecial #29                 // Method java/util/HashSet."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      12: aload_0
      13: iconst_2
      14: anewarray     #14                 // class java/lang/String
      17: dup
      18: iconst_0
      19: ldc           #21                 // String selectNodePrefixSql
      21: aastore
      22: dup
      23: iconst_1
      24: ldc           #30                 // String findNodesCreatedByMeSql
      26: aastore
      27: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      30: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      33: dup
      34: aload_0
      35: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      38: iconst_1
      39: anewarray     #17                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_1
      45: aastore
      46: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      51: astore        4
      53: aload         4
      55: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      60: ifle          126
      63: aload_3
      64: aload         4
      66: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      71: pop
      72: iload_2
      73: ifeq          126
      76: aload         4
      78: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      83: astore        5
      85: aload         5
      87: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          126
      95: aload         5
      97: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
     105: astore        6
     107: aload_3
     108: aload_0
     109: aload         6
     111: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     114: invokevirtual #37                 // Method findNodesThatOriginatedFromNodeId:(Ljava/lang/String;)Ljava/util/Set;
     117: invokeinterface #32,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     122: pop
     123: goto          85
     126: aload_3
     127: areturn

  public org.jumpmind.symmetric.model.Node findNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #21                 // String selectNodePrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #38                 // String findNodeSql
      18: aastore
      19: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      25: dup
      26: aload_0
      27: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      30: iconst_1
      31: anewarray     #17                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      43: astore_2
      44: aload_0
      45: aload_2
      46: invokevirtual #39                 // Method getFirstEntry:(Ljava/util/List;)Ljava/lang/Object;
      49: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
      52: areturn

  public org.jumpmind.symmetric.model.Node findNodeByExternalId(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #21                 // String selectNodePrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #40                 // String findNodeByExternalIdSql
      18: aastore
      19: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      25: dup
      26: aload_0
      27: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      30: iconst_2
      31: anewarray     #17                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: dup
      39: iconst_1
      40: aload_2
      41: aastore
      42: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      47: astore_3
      48: aload_0
      49: aload_3
      50: invokevirtual #39                 // Method getFirstEntry:(Ljava/util/List;)Ljava/lang/Object;
      53: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
      56: areturn

  public void ignoreNodeChannelForExternalId(boolean, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: aload         4
       4: invokevirtual #41                 // Method findNodeByExternalId:(Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Node;
       7: astore        5
       9: aload_0
      10: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      13: aload_0
      14: iconst_1
      15: anewarray     #14                 // class java/lang/String
      18: dup
      19: iconst_0
      20: ldc           #42                 // String nodeChannelControlIgnoreSql
      22: aastore
      23: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      26: iconst_3
      27: anewarray     #17                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_1
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: aastore
      45: dup
      46: iconst_1
      47: aload         5
      49: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      52: aastore
      53: dup
      54: iconst_2
      55: aload_2
      56: aastore
      57: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      62: ifne          126
      65: aload_0
      66: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      69: aload_0
      70: iconst_1
      71: anewarray     #14                 // class java/lang/String
      74: dup
      75: iconst_0
      76: ldc           #45                 // String insertNodeChannelControlSql
      78: aastore
      79: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      82: iconst_4
      83: anewarray     #17                 // class java/lang/Object
      86: dup
      87: iconst_0
      88: aload         5
      90: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      93: aastore
      94: dup
      95: iconst_1
      96: aload_2
      97: aastore
      98: dup
      99: iconst_2
     100: iload_1
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     112: aastore
     113: dup
     114: iconst_3
     115: iconst_0
     116: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     119: aastore
     120: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
     125: pop
     126: return

  public boolean isRegistrationEnabled(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method findNodeSecurity:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/NodeSecurity;
       5: astore_2
       6: aload_2
       7: ifnull        15
      10: aload_2
      11: invokevirtual #47                 // Method org/jumpmind/symmetric/model/NodeSecurity.isRegistrationEnabled:()Z
      14: ireturn
      15: iconst_0
      16: ireturn

  public org.jumpmind.symmetric.model.NodeSecurity findNodeSecurity(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #48                 // Method findNodeSecurity:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/NodeSecurity;
       6: areturn

  public java.util.List<org.jumpmind.symmetric.model.NodeHost> findNodeHosts(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #49                 // String selectNodeHostPrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #50                 // String selectNodeHostByNodeIdSql
      18: aastore
      19: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #51                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeHostRowMapper
      25: dup
      26: aload_0
      27: invokespecial #52                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeHostRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      30: iconst_1
      31: anewarray     #17                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      43: areturn

  public void updateNodeHostForCurrentNode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
       4: ifnonnull     22
       7: aload_0
       8: new           #53                 // class org/jumpmind/symmetric/model/NodeHost
      11: dup
      12: aload_0
      13: invokevirtual #54                 // Method findIdentityNodeId:()Ljava/lang/String;
      16: invokespecial #55                 // Method org/jumpmind/symmetric/model/NodeHost."<init>":(Ljava/lang/String;)V
      19: putfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      22: aload_0
      23: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      26: invokevirtual #56                 // Method org/jumpmind/symmetric/model/NodeHost.refresh:()V
      29: bipush        17
      31: anewarray     #17                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_0
      37: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      40: invokevirtual #57                 // Method org/jumpmind/symmetric/model/NodeHost.getIpAddress:()Ljava/lang/String;
      43: aastore
      44: dup
      45: iconst_1
      46: aload_0
      47: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      50: invokevirtual #58                 // Method org/jumpmind/symmetric/model/NodeHost.getOsUser:()Ljava/lang/String;
      53: aastore
      54: dup
      55: iconst_2
      56: aload_0
      57: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      60: invokevirtual #59                 // Method org/jumpmind/symmetric/model/NodeHost.getOsName:()Ljava/lang/String;
      63: aastore
      64: dup
      65: iconst_3
      66: aload_0
      67: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      70: invokevirtual #60                 // Method org/jumpmind/symmetric/model/NodeHost.getOsArch:()Ljava/lang/String;
      73: aastore
      74: dup
      75: iconst_4
      76: aload_0
      77: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      80: invokevirtual #61                 // Method org/jumpmind/symmetric/model/NodeHost.getOsVersion:()Ljava/lang/String;
      83: aastore
      84: dup
      85: iconst_5
      86: aload_0
      87: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
      90: invokevirtual #62                 // Method org/jumpmind/symmetric/model/NodeHost.getAvailableProcessors:()I
      93: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: aastore
      97: dup
      98: bipush        6
     100: aload_0
     101: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     104: invokevirtual #63                 // Method org/jumpmind/symmetric/model/NodeHost.getFreeMemoryBytes:()J
     107: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     110: aastore
     111: dup
     112: bipush        7
     114: aload_0
     115: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     118: invokevirtual #65                 // Method org/jumpmind/symmetric/model/NodeHost.getTotalMemoryBytes:()J
     121: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     124: aastore
     125: dup
     126: bipush        8
     128: aload_0
     129: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     132: invokevirtual #66                 // Method org/jumpmind/symmetric/model/NodeHost.getMaxMemoryBytes:()J
     135: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     138: aastore
     139: dup
     140: bipush        9
     142: aload_0
     143: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     146: invokevirtual #67                 // Method org/jumpmind/symmetric/model/NodeHost.getJavaVersion:()Ljava/lang/String;
     149: aastore
     150: dup
     151: bipush        10
     153: aload_0
     154: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     157: invokevirtual #68                 // Method org/jumpmind/symmetric/model/NodeHost.getJavaVendor:()Ljava/lang/String;
     160: aastore
     161: dup
     162: bipush        11
     164: aload_0
     165: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     168: invokevirtual #69                 // Method org/jumpmind/symmetric/model/NodeHost.getSymmetricVersion:()Ljava/lang/String;
     171: aastore
     172: dup
     173: bipush        12
     175: aload_0
     176: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     179: invokevirtual #70                 // Method org/jumpmind/symmetric/model/NodeHost.getTimezoneOffset:()Ljava/lang/String;
     182: aastore
     183: dup
     184: bipush        13
     186: aload_0
     187: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     190: invokevirtual #71                 // Method org/jumpmind/symmetric/model/NodeHost.getHeartbeatTime:()Ljava/util/Date;
     193: aastore
     194: dup
     195: bipush        14
     197: aload_0
     198: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     201: invokevirtual #72                 // Method org/jumpmind/symmetric/model/NodeHost.getLastRestartTime:()Ljava/util/Date;
     204: aastore
     205: dup
     206: bipush        15
     208: aload_0
     209: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     212: invokevirtual #73                 // Method org/jumpmind/symmetric/model/NodeHost.getNodeId:()Ljava/lang/String;
     215: aastore
     216: dup
     217: bipush        16
     219: aload_0
     220: getfield      #3                  // Field nodeHostForCurrentNode:Lorg/jumpmind/symmetric/model/NodeHost;
     223: invokevirtual #74                 // Method org/jumpmind/symmetric/model/NodeHost.getHostName:()Ljava/lang/String;
     226: aastore
     227: astore_1
     228: aload_0
     229: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     232: aload_0
     233: iconst_1
     234: anewarray     #14                 // class java/lang/String
     237: dup
     238: iconst_0
     239: ldc           #75                 // String updateNodeHostSql
     241: aastore
     242: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     245: aload_1
     246: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
     251: ifne          278
     254: aload_0
     255: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     258: aload_0
     259: iconst_1
     260: anewarray     #14                 // class java/lang/String
     263: dup
     264: iconst_0
     265: ldc           #76                 // String insertNodeHostSql
     267: aastore
     268: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     271: aload_1
     272: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
     277: pop
     278: return

  public org.jumpmind.symmetric.model.NodeSecurity findNodeSecurity(java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnull        86
       4: aload_0
       5: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       8: aload_0
       9: iconst_1
      10: anewarray     #14                 // class java/lang/String
      13: dup
      14: iconst_0
      15: ldc           #77                 // String findNodeSecuritySql
      17: aastore
      18: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      21: new           #78                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeSecurityRowMapper
      24: dup
      25: aload_0
      26: invokespecial #79                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeSecurityRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      29: iconst_1
      30: anewarray     #17                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_1
      36: aastore
      37: iconst_1
      38: newarray       int
      40: dup
      41: iconst_0
      42: bipush        12
      44: iastore
      45: invokeinterface #80,  5           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;[I)Ljava/util/List;
      50: astore_3
      51: aload_0
      52: aload_3
      53: invokevirtual #39                 // Method getFirstEntry:(Ljava/util/List;)Ljava/lang/Object;
      56: checkcast     #81                 // class org/jumpmind/symmetric/model/NodeSecurity
      59: astore        4
      61: aload         4
      63: ifnonnull     83
      66: iload_2
      67: ifeq          83
      70: aload_0
      71: aload_1
      72: invokevirtual #82                 // Method insertNodeSecurity:(Ljava/lang/String;)V
      75: aload_0
      76: aload_1
      77: iconst_0
      78: invokevirtual #48                 // Method findNodeSecurity:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/NodeSecurity;
      81: astore        4
      83: aload         4
      85: areturn
      86: aload_0
      87: getfield      #83                 // Field log:Lorg/slf4j/Logger;
      90: ldc           #84                 // String A \'null\' node id was passed into findNodeSecurity
      92: invokeinterface #85,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      97: aconst_null
      98: areturn
      99: astore_3
     100: aload_0
     101: getfield      #83                 // Field log:Lorg/slf4j/Logger;
     104: ldc           #87                 // String Could not find a node security row for \'{}\'
     106: aload_1
     107: invokeinterface #88,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     112: aload_3
     113: athrow
    Exception table:
       from    to  target type
           0    85    99   Class org/jumpmind/db/sql/UniqueKeyException
          86    98    99   Class org/jumpmind/db/sql/UniqueKeyException

  public void deleteNodeSecurity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #89                 // String deleteNodeSecuritySql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #17                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: pop
      31: return

  public void deleteNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #90                 // String deleteNodeHostSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #17                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: pop
      31: aload_0
      32: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      35: aload_0
      36: iconst_1
      37: anewarray     #14                 // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #91                 // String deleteNodeSql
      44: aastore
      45: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      48: iconst_1
      49: anewarray     #17                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_1
      55: aastore
      56: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      61: pop
      62: return

  public void insertNodeSecurity(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method flushNodeAuthorizedCache:()V
       4: aload_0
       5: getfield      #6                  // Field nodeIdGenerator:Lorg/jumpmind/symmetric/config/INodeIdGenerator;
       8: aload_0
       9: new           #36                 // class org/jumpmind/symmetric/model/Node
      12: dup
      13: aload_1
      14: aconst_null
      15: aconst_null
      16: invokespecial #93                 // Method org/jumpmind/symmetric/model/Node."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      19: invokeinterface #94,  3           // InterfaceMethod org/jumpmind/symmetric/config/INodeIdGenerator.generatePassword:(Lorg/jumpmind/symmetric/service/INodeService;Lorg/jumpmind/symmetric/model/Node;)Ljava/lang/String;
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokespecial #95                 // Method filterPasswordOnSaveIfNeeded:(Ljava/lang/String;)Ljava/lang/String;
      30: astore_2
      31: aload_0
      32: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      35: aload_0
      36: iconst_1
      37: anewarray     #14                 // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #96                 // String insertNodeSecuritySql
      44: aastore
      45: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      48: iconst_3
      49: anewarray     #17                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_1
      55: aastore
      56: dup
      57: iconst_1
      58: aload_2
      59: aastore
      60: dup
      61: iconst_2
      62: aload_0
      63: invokevirtual #19                 // Method findIdentity:()Lorg/jumpmind/symmetric/model/Node;
      66: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      69: aastore
      70: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      75: pop
      76: return

  public void insertNodeIdentity(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #97                 // String insertNodeIdentitySql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #17                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: pop
      31: return

  public void deleteIdentity();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #98                 // String deleteNodeIdentitySql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_0
      18: anewarray     #17                 // class java/lang/Object
      21: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      26: pop
      27: aload_0
      28: aconst_null
      29: putfield      #99                 // Field cachedNodeIdentity:Lorg/jumpmind/symmetric/model/Node;
      32: return

  public void insertNodeGroup(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #100                // String doesNodeGroupExistSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #17                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #101,  3          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: ifne          68
      33: aload_0
      34: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      37: aload_0
      38: iconst_1
      39: anewarray     #14                 // class java/lang/String
      42: dup
      43: iconst_0
      44: ldc           #102                // String insertNodeGroupSql
      46: aastore
      47: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      50: iconst_2
      51: anewarray     #17                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_2
      57: aastore
      58: dup
      59: iconst_1
      60: aload_1
      61: aastore
      62: invokeinterface #44,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      67: pop
      68: return

  public void save(org.jumpmind.symmetric.model.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #103                // Method updateNode:(Lorg/jumpmind/symmetric/model/Node;)Z
       5: ifne          252
       8: aload_0
       9: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      12: aload_0
      13: iconst_1
      14: anewarray     #14                 // class java/lang/String
      17: dup
      18: iconst_0
      19: ldc           #104                // String insertNodeSql
      21: aastore
      22: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      25: bipush        15
      27: anewarray     #17                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: invokevirtual #105                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_1
      40: invokevirtual #106                // Method org/jumpmind/symmetric/model/Node.getExternalId:()Ljava/lang/String;
      43: aastore
      44: dup
      45: iconst_2
      46: aload_1
      47: invokevirtual #107                // Method org/jumpmind/symmetric/model/Node.getDatabaseType:()Ljava/lang/String;
      50: aastore
      51: dup
      52: iconst_3
      53: aload_1
      54: invokevirtual #108                // Method org/jumpmind/symmetric/model/Node.getDatabaseVersion:()Ljava/lang/String;
      57: aastore
      58: dup
      59: iconst_4
      60: aload_1
      61: invokevirtual #109                // Method org/jumpmind/symmetric/model/Node.getSchemaVersion:()Ljava/lang/String;
      64: aastore
      65: dup
      66: iconst_5
      67: aload_1
      68: invokevirtual #110                // Method org/jumpmind/symmetric/model/Node.getSymmetricVersion:()Ljava/lang/String;
      71: aastore
      72: dup
      73: bipush        6
      75: aload_1
      76: invokevirtual #111                // Method org/jumpmind/symmetric/model/Node.getSyncUrl:()Ljava/lang/String;
      79: aastore
      80: dup
      81: bipush        7
      83: aload_1
      84: invokevirtual #112                // Method org/jumpmind/symmetric/model/Node.getHeartbeatTime:()Ljava/util/Date;
      87: aastore
      88: dup
      89: bipush        8
      91: aload_1
      92: invokevirtual #113                // Method org/jumpmind/symmetric/model/Node.isSyncEnabled:()Z
      95: ifeq          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     106: aastore
     107: dup
     108: bipush        9
     110: aload_1
     111: invokevirtual #114                // Method org/jumpmind/symmetric/model/Node.getTimezoneOffset:()Ljava/lang/String;
     114: aastore
     115: dup
     116: bipush        10
     118: aload_1
     119: invokevirtual #115                // Method org/jumpmind/symmetric/model/Node.getBatchToSendCount:()I
     122: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     125: aastore
     126: dup
     127: bipush        11
     129: aload_1
     130: invokevirtual #116                // Method org/jumpmind/symmetric/model/Node.getBatchInErrorCount:()I
     133: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     136: aastore
     137: dup
     138: bipush        12
     140: aload_1
     141: invokevirtual #117                // Method org/jumpmind/symmetric/model/Node.getCreatedAtNodeId:()Ljava/lang/String;
     144: aastore
     145: dup
     146: bipush        13
     148: aload_1
     149: invokevirtual #118                // Method org/jumpmind/symmetric/model/Node.getDeploymentType:()Ljava/lang/String;
     152: aastore
     153: dup
     154: bipush        14
     156: aload_1
     157: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     160: aastore
     161: bipush        15
     163: newarray       int
     165: dup
     166: iconst_0
     167: bipush        12
     169: iastore
     170: dup
     171: iconst_1
     172: bipush        12
     174: iastore
     175: dup
     176: iconst_2
     177: bipush        12
     179: iastore
     180: dup
     181: iconst_3
     182: bipush        12
     184: iastore
     185: dup
     186: iconst_4
     187: bipush        12
     189: iastore
     190: dup
     191: iconst_5
     192: bipush        12
     194: iastore
     195: dup
     196: bipush        6
     198: bipush        12
     200: iastore
     201: dup
     202: bipush        7
     204: bipush        93
     206: iastore
     207: dup
     208: bipush        8
     210: iconst_4
     211: iastore
     212: dup
     213: bipush        9
     215: bipush        12
     217: iastore
     218: dup
     219: bipush        10
     221: iconst_4
     222: iastore
     223: dup
     224: bipush        11
     226: iconst_4
     227: iastore
     228: dup
     229: bipush        12
     231: bipush        12
     233: iastore
     234: dup
     235: bipush        13
     237: bipush        12
     239: iastore
     240: dup
     241: bipush        14
     243: bipush        12
     245: iastore
     246: invokeinterface #119,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     251: pop
     252: return

  public boolean updateNode(org.jumpmind.symmetric.model.Node);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #120                // String updateNodeSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: bipush        15
      19: anewarray     #17                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #105                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: invokevirtual #106                // Method org/jumpmind/symmetric/model/Node.getExternalId:()Ljava/lang/String;
      35: aastore
      36: dup
      37: iconst_2
      38: aload_1
      39: invokevirtual #107                // Method org/jumpmind/symmetric/model/Node.getDatabaseType:()Ljava/lang/String;
      42: aastore
      43: dup
      44: iconst_3
      45: aload_1
      46: invokevirtual #108                // Method org/jumpmind/symmetric/model/Node.getDatabaseVersion:()Ljava/lang/String;
      49: aastore
      50: dup
      51: iconst_4
      52: aload_1
      53: invokevirtual #109                // Method org/jumpmind/symmetric/model/Node.getSchemaVersion:()Ljava/lang/String;
      56: aastore
      57: dup
      58: iconst_5
      59: aload_1
      60: invokevirtual #110                // Method org/jumpmind/symmetric/model/Node.getSymmetricVersion:()Ljava/lang/String;
      63: aastore
      64: dup
      65: bipush        6
      67: aload_1
      68: invokevirtual #111                // Method org/jumpmind/symmetric/model/Node.getSyncUrl:()Ljava/lang/String;
      71: aastore
      72: dup
      73: bipush        7
      75: aload_1
      76: invokevirtual #112                // Method org/jumpmind/symmetric/model/Node.getHeartbeatTime:()Ljava/util/Date;
      79: aastore
      80: dup
      81: bipush        8
      83: aload_1
      84: invokevirtual #113                // Method org/jumpmind/symmetric/model/Node.isSyncEnabled:()Z
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: aastore
      99: dup
     100: bipush        9
     102: aload_1
     103: invokevirtual #114                // Method org/jumpmind/symmetric/model/Node.getTimezoneOffset:()Ljava/lang/String;
     106: aastore
     107: dup
     108: bipush        10
     110: aload_1
     111: invokevirtual #115                // Method org/jumpmind/symmetric/model/Node.getBatchToSendCount:()I
     114: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     117: aastore
     118: dup
     119: bipush        11
     121: aload_1
     122: invokevirtual #116                // Method org/jumpmind/symmetric/model/Node.getBatchInErrorCount:()I
     125: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     128: aastore
     129: dup
     130: bipush        12
     132: aload_1
     133: invokevirtual #117                // Method org/jumpmind/symmetric/model/Node.getCreatedAtNodeId:()Ljava/lang/String;
     136: aastore
     137: dup
     138: bipush        13
     140: aload_1
     141: invokevirtual #118                // Method org/jumpmind/symmetric/model/Node.getDeploymentType:()Ljava/lang/String;
     144: aastore
     145: dup
     146: bipush        14
     148: aload_1
     149: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     152: aastore
     153: bipush        15
     155: newarray       int
     157: dup
     158: iconst_0
     159: bipush        12
     161: iastore
     162: dup
     163: iconst_1
     164: bipush        12
     166: iastore
     167: dup
     168: iconst_2
     169: bipush        12
     171: iastore
     172: dup
     173: iconst_3
     174: bipush        12
     176: iastore
     177: dup
     178: iconst_4
     179: bipush        12
     181: iastore
     182: dup
     183: iconst_5
     184: bipush        12
     186: iastore
     187: dup
     188: bipush        6
     190: bipush        12
     192: iastore
     193: dup
     194: bipush        7
     196: bipush        93
     198: iastore
     199: dup
     200: bipush        8
     202: iconst_4
     203: iastore
     204: dup
     205: bipush        9
     207: bipush        12
     209: iastore
     210: dup
     211: bipush        10
     213: iconst_4
     214: iastore
     215: dup
     216: bipush        11
     218: iconst_4
     219: iastore
     220: dup
     221: bipush        12
     223: bipush        12
     225: iastore
     226: dup
     227: bipush        13
     229: bipush        12
     231: iastore
     232: dup
     233: bipush        14
     235: bipush        12
     237: iastore
     238: invokeinterface #119,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     243: iconst_1
     244: if_icmpne     251
     247: iconst_1
     248: goto          252
     251: iconst_0
     252: istore_2
     253: iload_2
     254: ireturn

  protected <T> T getFirstEntry(java.util.List<T>);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      10: ifle          21
      13: aload_1
      14: iconst_0
      15: invokeinterface #121,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: areturn
      21: aconst_null
      22: areturn

  public java.util.Map<java.lang.String, org.jumpmind.symmetric.model.NodeSecurity> findAllNodeSecurity(boolean);
    Code:
       0: aload_0
       1: getfield      #122                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #123                // String cache.node.security.time.ms
       6: invokeinterface #124,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      11: lstore_2
      12: aload_0
      13: getfield      #125                // Field securityCache:Ljava/util/Map;
      16: astore        4
      18: aload         4
      20: ifnull        49
      23: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J
      26: aload_0
      27: getfield      #127                // Field securityCacheTime:J
      30: lsub
      31: lload_2
      32: lcmp
      33: ifge          49
      36: aload_0
      37: getfield      #127                // Field securityCacheTime:J
      40: lconst_0
      41: lcmp
      42: ifeq          49
      45: iload_1
      46: ifne          100
      49: aload_0
      50: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      53: aload_0
      54: iconst_1
      55: anewarray     #14                 // class java/lang/String
      58: dup
      59: iconst_0
      60: ldc           #128                // String findAllNodeSecuritySql
      62: aastore
      63: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      66: new           #78                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeSecurityRowMapper
      69: dup
      70: aload_0
      71: invokespecial #79                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeSecurityRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      74: ldc           #129                // String node_id
      76: iconst_0
      77: anewarray     #17                 // class java/lang/Object
      80: invokeinterface #130,  5          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForMap:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;
      85: astore        4
      87: aload_0
      88: aload         4
      90: putfield      #125                // Field securityCache:Ljava/util/Map;
      93: aload_0
      94: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J
      97: putfield      #127                // Field securityCacheTime:J
     100: aload         4
     102: areturn

  public boolean isNodeAuthorized(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #131                // Method findAllNodeSecurity:(Z)Ljava/util/Map;
       5: astore_3
       6: aload_3
       7: aload_1
       8: invokeinterface #132,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #81                 // class org/jumpmind/symmetric/model/NodeSecurity
      16: astore        4
      18: aload         4
      20: ifnull        66
      23: aload         4
      25: invokevirtual #133                // Method org/jumpmind/symmetric/model/NodeSecurity.getNodePassword:()Ljava/lang/String;
      28: ifnull        56
      31: aload         4
      33: invokevirtual #133                // Method org/jumpmind/symmetric/model/NodeSecurity.getNodePassword:()Ljava/lang/String;
      36: ldc           #134                // String
      38: invokevirtual #135                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifne          56
      44: aload         4
      46: invokevirtual #133                // Method org/jumpmind/symmetric/model/NodeSecurity.getNodePassword:()Ljava/lang/String;
      49: aload_2
      50: invokevirtual #135                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifne          64
      56: aload         4
      58: invokevirtual #47                 // Method org/jumpmind/symmetric/model/NodeSecurity.isRegistrationEnabled:()Z
      61: ifeq          66
      64: iconst_1
      65: ireturn
      66: iconst_0
      67: ireturn

  public void flushNodeAuthorizedCache();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #127                // Field securityCacheTime:J
       5: return

  public org.jumpmind.symmetric.model.Node getCachedIdentity();
    Code:
       0: aload_0
       1: getfield      #99                 // Field cachedNodeIdentity:Lorg/jumpmind/symmetric/model/Node;
       4: areturn

  public org.jumpmind.symmetric.model.Node findIdentity();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #136                // Method findIdentity:(Z)Lorg/jumpmind/symmetric/model/Node;
       5: areturn

  public org.jumpmind.symmetric.model.Node findIdentity(boolean);
    Code:
       0: aload_0
       1: getfield      #99                 // Field cachedNodeIdentity:Lorg/jumpmind/symmetric/model/Node;
       4: ifnull        11
       7: iload_1
       8: ifne          63
      11: aload_0
      12: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      15: aload_0
      16: iconst_2
      17: anewarray     #14                 // class java/lang/String
      20: dup
      21: iconst_0
      22: ldc           #21                 // String selectNodePrefixSql
      24: aastore
      25: dup
      26: iconst_1
      27: ldc           #137                // String findNodeIdentitySql
      29: aastore
      30: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      33: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      36: dup
      37: aload_0
      38: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      41: iconst_0
      42: anewarray     #17                 // class java/lang/Object
      45: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      50: astore_2
      51: aload_0
      52: aload_0
      53: aload_2
      54: invokevirtual #39                 // Method getFirstEntry:(Ljava/util/List;)Ljava/lang/Object;
      57: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
      60: putfield      #99                 // Field cachedNodeIdentity:Lorg/jumpmind/symmetric/model/Node;
      63: aload_0
      64: getfield      #99                 // Field cachedNodeIdentity:Lorg/jumpmind/symmetric/model/Node;
      67: areturn

  public java.util.List<org.jumpmind.symmetric.model.Node> findNodesToPull();
    Code:
       0: aload_0
       1: getstatic     #138                // Field org/jumpmind/symmetric/model/NodeGroupLinkAction.W:Lorg/jumpmind/symmetric/model/NodeGroupLinkAction;
       4: invokevirtual #139                // Method findSourceNodesFor:(Lorg/jumpmind/symmetric/model/NodeGroupLinkAction;)Ljava/util/List;
       7: areturn

  public java.util.List<org.jumpmind.symmetric.model.Node> findNodesToPushTo();
    Code:
       0: aload_0
       1: getstatic     #140                // Field org/jumpmind/symmetric/model/NodeGroupLinkAction.P:Lorg/jumpmind/symmetric/model/NodeGroupLinkAction;
       4: invokevirtual #141                // Method findTargetNodesFor:(Lorg/jumpmind/symmetric/model/NodeGroupLinkAction;)Ljava/util/List;
       7: areturn

  public java.util.List<org.jumpmind.symmetric.model.Node> findSourceNodesFor(org.jumpmind.symmetric.model.NodeGroupLinkAction);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method findIdentity:()Lorg/jumpmind/symmetric/model/Node;
       4: astore_2
       5: aload_2
       6: ifnull        63
       9: aload_0
      10: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      13: aload_0
      14: iconst_2
      15: anewarray     #14                 // class java/lang/String
      18: dup
      19: iconst_0
      20: ldc           #21                 // String selectNodePrefixSql
      22: aastore
      23: dup
      24: iconst_1
      25: ldc           #142                // String findNodesWhoTargetMeSql
      27: aastore
      28: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      31: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      34: dup
      35: aload_0
      36: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      39: iconst_2
      40: anewarray     #17                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_2
      46: invokevirtual #105                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
      49: aastore
      50: dup
      51: iconst_1
      52: aload_1
      53: invokevirtual #143                // Method org/jumpmind/symmetric/model/NodeGroupLinkAction.name:()Ljava/lang/String;
      56: aastore
      57: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      62: areturn
      63: invokestatic  #144                // Method java/util/Collections.emptyList:()Ljava/util/List;
      66: areturn

  public java.util.List<org.jumpmind.symmetric.model.Node> findTargetNodesFor(org.jumpmind.symmetric.model.NodeGroupLinkAction);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method findIdentity:()Lorg/jumpmind/symmetric/model/Node;
       4: astore_2
       5: aload_2
       6: ifnull        63
       9: aload_0
      10: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      13: aload_0
      14: iconst_2
      15: anewarray     #14                 // class java/lang/String
      18: dup
      19: iconst_0
      20: ldc           #21                 // String selectNodePrefixSql
      22: aastore
      23: dup
      24: iconst_1
      25: ldc           #145                // String findNodesWhoITargetSql
      27: aastore
      28: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      31: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      34: dup
      35: aload_0
      36: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      39: iconst_2
      40: anewarray     #17                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_2
      46: invokevirtual #105                // Method org/jumpmind/symmetric/model/Node.getNodeGroupId:()Ljava/lang/String;
      49: aastore
      50: dup
      51: iconst_1
      52: aload_1
      53: invokevirtual #143                // Method org/jumpmind/symmetric/model/NodeGroupLinkAction.name:()Ljava/lang/String;
      56: aastore
      57: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      62: areturn
      63: invokestatic  #144                // Method java/util/Collections.emptyList:()Ljava/util/List;
      66: areturn

  public java.util.List<java.lang.String> findAllExternalIds();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #146                // String selectExternalIdsSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: new           #147                // class org/jumpmind/db/sql/mapper/StringMapper
      20: dup
      21: invokespecial #148                // Method org/jumpmind/db/sql/mapper/StringMapper."<init>":()V
      24: iconst_0
      25: anewarray     #17                 // class java/lang/Object
      28: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      33: areturn

  public java.util.List<org.jumpmind.symmetric.model.Node> findAllNodes();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #21                 // String selectNodePrefixSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      20: dup
      21: aload_0
      22: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      25: iconst_0
      26: anewarray     #17                 // class java/lang/Object
      29: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      34: areturn

  public java.util.Map<java.lang.String, org.jumpmind.symmetric.model.Node> findAllNodesAsMap();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method findAllNodes:()Ljava/util/List;
       4: astore_1
       5: new           #150                // class java/util/HashMap
       8: dup
       9: aload_1
      10: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      15: invokespecial #151                // Method java/util/HashMap."<init>":(I)V
      18: astore_2
      19: aload_1
      20: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          63
      35: aload_3
      36: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      52: aload         4
      54: invokeinterface #152,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          26
      63: aload_2
      64: areturn

  public org.jumpmind.symmetric.model.NetworkedNode getRootNetworkedNode();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method findAllNodesAsMap:()Ljava/util/Map;
       4: astore_1
       5: new           #150                // class java/util/HashMap
       8: dup
       9: aload_1
      10: invokeinterface #154,  1          // InterfaceMethod java/util/Map.size:()I
      15: invokespecial #151                // Method java/util/HashMap."<init>":(I)V
      18: astore_2
      19: aconst_null
      20: astore_3
      21: aload_1
      22: invokeinterface #155,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      27: invokeinterface #156,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore        4
      34: aload         4
      36: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          107
      44: aload         4
      46: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
      54: astore        5
      56: aload_2
      57: aload         5
      59: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      62: invokeinterface #132,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #157                // class org/jumpmind/symmetric/model/NetworkedNode
      70: astore_3
      71: aload_3
      72: ifnonnull     104
      75: new           #157                // class org/jumpmind/symmetric/model/NetworkedNode
      78: dup
      79: aload         5
      81: invokespecial #158                // Method org/jumpmind/symmetric/model/NetworkedNode."<init>":(Lorg/jumpmind/symmetric/model/Node;)V
      84: astore_3
      85: aload_3
      86: aload_1
      87: aload_2
      88: invokevirtual #159                // Method org/jumpmind/symmetric/model/NetworkedNode.addParents:(Ljava/util/Map;Ljava/util/Map;)V
      91: aload_2
      92: aload         5
      94: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      97: aload_3
      98: invokeinterface #152,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: goto          34
     107: aload_3
     108: invokevirtual #160                // Method org/jumpmind/symmetric/model/NetworkedNode.getRoot:()Lorg/jumpmind/symmetric/model/NetworkedNode;
     111: areturn

  public boolean updateNodeSecurity(org.jumpmind.symmetric.model.NodeSecurity);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       6: invokeinterface #161,  1          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      11: astore_2
      12: aload_0
      13: aload_2
      14: aload_1
      15: invokevirtual #162                // Method updateNodeSecurity:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/NodeSecurity;)Z
      18: istore_3
      19: aload_2
      20: invokeinterface #163,  1          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      25: iload_3
      26: istore        4
      28: jsr           42
      31: iload         4
      33: ireturn
      34: astore        5
      36: jsr           42
      39: aload         5
      41: athrow
      42: astore        6
      44: aload_0
      45: aload_2
      46: invokevirtual #164                // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      49: ret           6
    Exception table:
       from    to  target type
           2    31    34   any
          34    39    34   any

  public boolean updateNodeSecurity(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.NodeSecurity);
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method flushNodeAuthorizedCache:()V
       4: aload_2
       5: aload_0
       6: aload_2
       7: invokevirtual #133                // Method org/jumpmind/symmetric/model/NodeSecurity.getNodePassword:()Ljava/lang/String;
      10: invokespecial #95                 // Method filterPasswordOnSaveIfNeeded:(Ljava/lang/String;)Ljava/lang/String;
      13: invokevirtual #165                // Method org/jumpmind/symmetric/model/NodeSecurity.setNodePassword:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: iconst_1
      19: anewarray     #14                 // class java/lang/String
      22: dup
      23: iconst_0
      24: ldc           #166                // String updateNodeSecuritySql
      26: aastore
      27: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      30: bipush        7
      32: anewarray     #17                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_2
      38: invokevirtual #133                // Method org/jumpmind/symmetric/model/NodeSecurity.getNodePassword:()Ljava/lang/String;
      41: aastore
      42: dup
      43: iconst_1
      44: aload_2
      45: invokevirtual #47                 // Method org/jumpmind/symmetric/model/NodeSecurity.isRegistrationEnabled:()Z
      48: ifeq          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: aastore
      60: dup
      61: iconst_2
      62: aload_2
      63: invokevirtual #167                // Method org/jumpmind/symmetric/model/NodeSecurity.getRegistrationTime:()Ljava/util/Date;
      66: aastore
      67: dup
      68: iconst_3
      69: aload_2
      70: invokevirtual #168                // Method org/jumpmind/symmetric/model/NodeSecurity.isInitialLoadEnabled:()Z
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      84: aastore
      85: dup
      86: iconst_4
      87: aload_2
      88: invokevirtual #169                // Method org/jumpmind/symmetric/model/NodeSecurity.getInitialLoadTime:()Ljava/util/Date;
      91: aastore
      92: dup
      93: iconst_5
      94: aload_2
      95: invokevirtual #170                // Method org/jumpmind/symmetric/model/NodeSecurity.getCreatedAtNodeId:()Ljava/lang/String;
      98: aastore
      99: dup
     100: bipush        6
     102: aload_2
     103: invokevirtual #171                // Method org/jumpmind/symmetric/model/NodeSecurity.getNodeId:()Ljava/lang/String;
     106: aastore
     107: bipush        7
     109: newarray       int
     111: dup
     112: iconst_0
     113: bipush        12
     115: iastore
     116: dup
     117: iconst_1
     118: iconst_4
     119: iastore
     120: dup
     121: iconst_2
     122: bipush        93
     124: iastore
     125: dup
     126: iconst_3
     127: iconst_4
     128: iastore
     129: dup
     130: iconst_4
     131: bipush        93
     133: iastore
     134: dup
     135: iconst_5
     136: bipush        12
     138: iastore
     139: dup
     140: bipush        6
     142: bipush        12
     144: iastore
     145: invokeinterface #172,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.prepareAndExecute:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     150: iconst_1
     151: if_icmpne     158
     154: iconst_1
     155: goto          159
     158: iconst_0
     159: ireturn

  public boolean setInitialLoadEnabled(org.jumpmind.db.sql.ISqlTransaction, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: iconst_1
       3: invokevirtual #48                 // Method findNodeSecurity:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/NodeSecurity;
       6: astore        4
       8: aload         4
      10: ifnull        52
      13: aload         4
      15: iload_3
      16: invokevirtual #173                // Method org/jumpmind/symmetric/model/NodeSecurity.setInitialLoadEnabled:(Z)V
      19: iload_3
      20: ifeq          32
      23: aload         4
      25: aconst_null
      26: invokevirtual #174                // Method org/jumpmind/symmetric/model/NodeSecurity.setInitialLoadTime:(Ljava/util/Date;)V
      29: goto          44
      32: aload         4
      34: new           #175                // class java/util/Date
      37: dup
      38: invokespecial #176                // Method java/util/Date."<init>":()V
      41: invokevirtual #174                // Method org/jumpmind/symmetric/model/NodeSecurity.setInitialLoadTime:(Ljava/util/Date;)V
      44: aload_0
      45: aload_1
      46: aload         4
      48: invokevirtual #162                // Method updateNodeSecurity:(Lorg/jumpmind/db/sql/ISqlTransaction;Lorg/jumpmind/symmetric/model/NodeSecurity;)Z
      51: ireturn
      52: iconst_0
      53: ireturn

  public boolean setInitialLoadEnabled(java.lang.String, boolean);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       6: invokeinterface #161,  1          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.startSqlTransaction:()Lorg/jumpmind/db/sql/ISqlTransaction;
      11: astore_3
      12: aload_0
      13: aload_3
      14: aload_1
      15: iload_2
      16: invokevirtual #177                // Method setInitialLoadEnabled:(Lorg/jumpmind/db/sql/ISqlTransaction;Ljava/lang/String;Z)Z
      19: istore        4
      21: aload_3
      22: invokeinterface #163,  1          // InterfaceMethod org/jumpmind/db/sql/ISqlTransaction.commit:()V
      27: iload         4
      29: istore        5
      31: jsr           45
      34: iload         5
      36: ireturn
      37: astore        6
      39: jsr           45
      42: aload         6
      44: athrow
      45: astore        7
      47: aload_0
      48: aload_3
      49: invokevirtual #164                // Method close:(Lorg/jumpmind/db/sql/ISqlTransaction;)V
      52: ret           7
    Exception table:
       from    to  target type
           2    34    37   any
          37    42    37   any

  public boolean isExternalIdRegistered(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #14                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #178                // String isNodeRegisteredSql
      13: aastore
      14: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_2
      18: anewarray     #17                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: dup
      26: iconst_1
      27: aload_2
      28: aastore
      29: invokeinterface #101,  3          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      34: ifle          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public org.jumpmind.symmetric.config.INodeIdGenerator getNodeIdGenerator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nodeIdGenerator:Lorg/jumpmind/symmetric/config/INodeIdGenerator;
       4: areturn

  public void setNodeIdGenerator(org.jumpmind.symmetric.config.INodeIdGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field nodeIdGenerator:Lorg/jumpmind/symmetric/config/INodeIdGenerator;
       5: return

  public boolean isDataLoadCompleted();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getNodeStatus:()Lorg/jumpmind/symmetric/model/NodeStatus;
       4: getstatic     #180                // Field org/jumpmind/symmetric/model/NodeStatus.DATA_LOAD_COMPLETED:Lorg/jumpmind/symmetric/model/NodeStatus;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDataLoadStarted();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getNodeStatus:()Lorg/jumpmind/symmetric/model/NodeStatus;
       4: getstatic     #181                // Field org/jumpmind/symmetric/model/NodeStatus.DATA_LOAD_STARTED:Lorg/jumpmind/symmetric/model/NodeStatus;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isRegistrationServer();
    Code:
       0: aload_0
       1: getfield      #122                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: invokeinterface #182,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getRegistrationUrl:()Ljava/lang/String;
       9: invokestatic  #183                // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      12: ifne          39
      15: aload_0
      16: getfield      #122                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      19: invokeinterface #182,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getRegistrationUrl:()Ljava/lang/String;
      24: aload_0
      25: getfield      #122                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      28: invokeinterface #184,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getSyncUrl:()Ljava/lang/String;
      33: invokevirtual #135                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public org.jumpmind.symmetric.model.NodeStatus getNodeStatus();
    Code:
       0: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       8: aload_0
       9: iconst_1
      10: anewarray     #14                 // class java/lang/String
      13: dup
      14: iconst_0
      15: ldc           #185                // String getDataLoadStatusSql
      17: aastore
      18: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      21: new           #186                // class org/jumpmind/symmetric/service/impl/NodeService$1
      24: dup
      25: aload_0
      26: invokespecial #187                // Method org/jumpmind/symmetric/service/impl/NodeService$1."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      29: iconst_0
      30: anewarray     #17                 // class java/lang/Object
      33: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      38: astore_3
      39: aload_3
      40: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      45: ifle          85
      48: aload_3
      49: iconst_0
      50: invokeinterface #121,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      55: checkcast     #188                // class org/jumpmind/symmetric/service/impl/NodeService$1DataLoadStatus
      58: astore        4
      60: aload         4
      62: getfield      #189                // Field org/jumpmind/symmetric/service/impl/NodeService$1DataLoadStatus.initialLoadEnabled:I
      65: iconst_1
      66: if_icmpne     73
      69: getstatic     #181                // Field org/jumpmind/symmetric/model/NodeStatus.DATA_LOAD_STARTED:Lorg/jumpmind/symmetric/model/NodeStatus;
      72: areturn
      73: aload         4
      75: getfield      #190                // Field org/jumpmind/symmetric/service/impl/NodeService$1DataLoadStatus.initialLoadTime:Ljava/util/Date;
      78: ifnull        85
      81: getstatic     #180                // Field org/jumpmind/symmetric/model/NodeStatus.DATA_LOAD_COMPLETED:Lorg/jumpmind/symmetric/model/NodeStatus;
      84: areturn
      85: getstatic     #191                // Field org/jumpmind/symmetric/model/NodeStatus.DATA_LOAD_NOT_STARTED:Lorg/jumpmind/symmetric/model/NodeStatus;
      88: areturn
      89: astore_3
      90: aload_0
      91: getfield      #83                 // Field log:Lorg/slf4j/Logger;
      94: ldc           #193                // String Could not query table after {} ms.  The status is unknown.
      96: invokestatic  #126                // Method java/lang/System.currentTimeMillis:()J
      99: lload_1
     100: lsub
     101: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     104: aload_3
     105: invokeinterface #194,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     110: getstatic     #195                // Field org/jumpmind/symmetric/model/NodeStatus.STATUS_UNKNOWN:Lorg/jumpmind/symmetric/model/NodeStatus;
     113: areturn
    Exception table:
       from    to  target type
           4    72    89   Class org/jumpmind/db/sql/SqlException
          73    84    89   Class org/jumpmind/db/sql/SqlException
          85    88    89   Class org/jumpmind/db/sql/SqlException

  public void setNodePasswordFilter(org.jumpmind.symmetric.security.INodePasswordFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #196                // Field nodePasswordFilter:Lorg/jumpmind/symmetric/security/INodePasswordFilter;
       5: return

  private java.lang.String filterPasswordOnSaveIfNeeded(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #196                // Field nodePasswordFilter:Lorg/jumpmind/symmetric/security/INodePasswordFilter;
       6: ifnull        20
       9: aload_0
      10: getfield      #196                // Field nodePasswordFilter:Lorg/jumpmind/symmetric/security/INodePasswordFilter;
      13: aload_1
      14: invokeinterface #197,  2          // InterfaceMethod org/jumpmind/symmetric/security/INodePasswordFilter.onNodeSecuritySave:(Ljava/lang/String;)Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: areturn

  private java.lang.String filterPasswordOnRenderIfNeeded(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #196                // Field nodePasswordFilter:Lorg/jumpmind/symmetric/security/INodePasswordFilter;
       6: ifnull        20
       9: aload_0
      10: getfield      #196                // Field nodePasswordFilter:Lorg/jumpmind/symmetric/security/INodePasswordFilter;
      13: aload_1
      14: invokeinterface #198,  2          // InterfaceMethod org/jumpmind/symmetric/security/INodePasswordFilter.onNodeSecurityRender:(Ljava/lang/String;)Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: areturn

  public void checkForOfflineNodes();
    Code:
       0: aload_0
       1: getfield      #122                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #199                // String offline.node.detection.period.minutes
       6: invokeinterface #124,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      11: lstore_1
      12: aload_0
      13: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
      16: ifnull        44
      19: lload_1
      20: lconst_0
      21: lcmp
      22: ifle          44
      25: aload_0
      26: invokevirtual #201                // Method findOfflineNodes:()Ljava/util/List;
      29: astore_3
      30: aload_3
      31: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      36: ifle          44
      39: aload_0
      40: aload_3
      41: invokevirtual #202                // Method fireOffline:(Ljava/util/List;)V
      44: return

  public java.util.List<org.jumpmind.symmetric.model.Node> findOfflineNodes();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #122                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       5: ldc           #199                // String offline.node.detection.period.minutes
       7: invokeinterface #124,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      12: invokevirtual #203                // Method findOfflineNodes:(J)Ljava/util/List;
      15: areturn

  public java.util.List<org.jumpmind.symmetric.model.Node> findOfflineNodes(long);
    Code:
       0: new           #204                // class java/util/ArrayList
       3: dup
       4: invokespecial #205                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #19                 // Method findIdentity:()Lorg/jumpmind/symmetric/model/Node;
      12: astore        4
      14: aload         4
      16: ifnull        195
      19: lload_1
      20: ldc2_w        #206                // long 60l
      23: lmul
      24: ldc2_w        #208                // long 1000l
      27: lmul
      28: lstore        5
      30: aload_0
      31: getfield      #13                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      34: aload_0
      35: iconst_2
      36: anewarray     #14                 // class java/lang/String
      39: dup
      40: iconst_0
      41: ldc           #21                 // String selectNodePrefixSql
      43: aastore
      44: dup
      45: iconst_1
      46: ldc           #210                // String findOfflineNodesSql
      48: aastore
      49: invokevirtual #16                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      52: new           #23                 // class org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper
      55: dup
      56: aload_0
      57: invokespecial #24                 // Method org/jumpmind/symmetric/service/impl/NodeService$NodeRowMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/NodeService;)V
      60: iconst_2
      61: anewarray     #17                 // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload         4
      68: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      71: aastore
      72: dup
      73: iconst_1
      74: aload         4
      76: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      79: aastore
      80: invokeinterface #25,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      85: astore        7
      87: aload         7
      89: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      94: astore        8
      96: aload         8
      98: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifeq          195
     106: aload         8
     108: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
     116: astore        9
     118: aconst_null
     119: astore        10
     121: aload         9
     123: invokevirtual #114                // Method org/jumpmind/symmetric/model/Node.getTimezoneOffset:()Ljava/lang/String;
     126: ifnull        142
     129: aload         9
     131: invokevirtual #114                // Method org/jumpmind/symmetric/model/Node.getTimezoneOffset:()Ljava/lang/String;
     134: invokestatic  #211                // Method org/jumpmind/symmetric/util/AppUtils.getLocalDateForOffset:(Ljava/lang/String;)Ljava/util/Date;
     137: astore        10
     139: goto          151
     142: new           #175                // class java/util/Date
     145: dup
     146: invokespecial #176                // Method java/util/Date."<init>":()V
     149: astore        10
     151: aload         10
     153: invokevirtual #212                // Method java/util/Date.getTime:()J
     156: lload         5
     158: lsub
     159: lstore        11
     161: aload         9
     163: invokevirtual #112                // Method org/jumpmind/symmetric/model/Node.getHeartbeatTime:()Ljava/util/Date;
     166: ifnull        183
     169: aload         9
     171: invokevirtual #112                // Method org/jumpmind/symmetric/model/Node.getHeartbeatTime:()Ljava/util/Date;
     174: invokevirtual #212                // Method java/util/Date.getTime:()J
     177: lload         11
     179: lcmp
     180: ifge          192
     183: aload_3
     184: aload         9
     186: invokeinterface #213,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     191: pop
     192: goto          96
     195: aload_3
     196: areturn

  public void setOfflineServerListeners(java.util.List<org.jumpmind.symmetric.ext.IOfflineServerListener>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #200                // Field offlineServerListeners:Ljava/util/List;
       5: return

  public void addOfflineServerListener(org.jumpmind.symmetric.ext.IOfflineServerListener);
    Code:
       0: aload_0
       1: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #204                // class java/util/ArrayList
      11: dup
      12: invokespecial #205                // Method java/util/ArrayList."<init>":()V
      15: putfield      #200                // Field offlineServerListeners:Ljava/util/List;
      18: aload_0
      19: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
      22: aload_1
      23: invokeinterface #213,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public boolean removeOfflineServerListener(org.jumpmind.symmetric.ext.IOfflineServerListener);
    Code:
       0: aload_0
       1: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
       4: ifnull        18
       7: aload_0
       8: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
      11: aload_1
      12: invokeinterface #214,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: ireturn
      18: iconst_0
      19: ireturn

  protected void fireOffline(java.util.List<org.jumpmind.symmetric.model.Node>);
    Code:
       0: aload_0
       1: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
       4: ifnull        80
       7: aload_0
       8: getfield      #200                // Field offlineServerListeners:Ljava/util/List;
      11: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          80
      26: aload_2
      27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #215                // class org/jumpmind/symmetric/ext/IOfflineServerListener
      35: astore_3
      36: aload_1
      37: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          77
      54: aload         4
      56: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #36                 // class org/jumpmind/symmetric/model/Node
      64: astore        5
      66: aload_3
      67: aload         5
      69: invokeinterface #216,  2          // InterfaceMethod org/jumpmind/symmetric/ext/IOfflineServerListener.clientNodeOffline:(Lorg/jumpmind/symmetric/model/Node;)V
      74: goto          44
      77: goto          17
      80: return

  static java.lang.String access$000(org.jumpmind.symmetric.service.impl.NodeService, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method filterPasswordOnRenderIfNeeded:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn
}
