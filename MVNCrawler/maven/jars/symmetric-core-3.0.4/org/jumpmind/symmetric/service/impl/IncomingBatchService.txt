Compiled from "IncomingBatchService.java"
public class org.jumpmind.symmetric.service.impl.IncomingBatchService extends org.jumpmind.symmetric.service.impl.AbstractService implements org.jumpmind.symmetric.service.IIncomingBatchService {
  public org.jumpmind.symmetric.service.impl.IncomingBatchService(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jumpmind/symmetric/service/impl/AbstractService."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
       6: aload_0
       7: new           #2                  // class org/jumpmind/symmetric/service/impl/IncomingBatchServiceSqlMap
      10: dup
      11: aload_2
      12: invokeinterface #3,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      17: aload_0
      18: invokevirtual #4                  // Method createSqlReplacementTokens:()Ljava/util/Map;
      21: invokespecial #5                  // Method org/jumpmind/symmetric/service/impl/IncomingBatchServiceSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
      24: invokevirtual #6                  // Method setSqlMap:(Lorg/jumpmind/symmetric/service/impl/ISqlMap;)V
      27: return

  public org.jumpmind.symmetric.model.IncomingBatch findIncomingBatch(long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #8                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #9                  // String selectIncomingBatchPrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #10                 // String findIncomingBatchSql
      18: aastore
      19: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #12                 // class org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper
      25: dup
      26: aload_0
      27: invokespecial #13                 // Method org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/IncomingBatchService;)V
      30: iconst_2
      31: anewarray     #14                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: lload_1
      37: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: aastore
      41: dup
      42: iconst_1
      43: aload_3
      44: aastore
      45: invokeinterface #16,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForObject:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #17                 // class org/jumpmind/symmetric/model/IncomingBatch
      53: areturn

  public int countIncomingBatchesInError();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #8                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #18                 // String countIncomingBatchesErrorsSql
      13: aastore
      14: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_0
      18: anewarray     #14                 // class java/lang/Object
      21: invokeinterface #19,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      26: ireturn

  public java.util.List<org.jumpmind.symmetric.model.IncomingBatch> findIncomingBatchErrors(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #8                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #9                  // String selectIncomingBatchPrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #20                 // String findIncomingBatchErrorsSql
      18: aastore
      19: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: iload_1
      23: new           #12                 // class org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper
      26: dup
      27: aload_0
      28: invokespecial #13                 // Method org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/IncomingBatchService;)V
      31: iconst_0
      32: anewarray     #14                 // class java/lang/Object
      35: invokeinterface #21,  5           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;ILorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      40: areturn

  public void markIncomingBatchesOk(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method listIncomingBatchesInErrorFor:(Ljava/lang/String;)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          57
      22: aload_3
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #17                 // class org/jumpmind/symmetric/model/IncomingBatch
      31: astore        4
      33: aload         4
      35: iconst_0
      36: invokevirtual #26                 // Method org/jumpmind/symmetric/model/IncomingBatch.setErrorFlag:(Z)V
      39: aload         4
      41: getstatic     #27                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.OK:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      44: invokevirtual #28                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
      47: aload_0
      48: aload         4
      50: invokevirtual #29                 // Method updateIncomingBatch:(Lorg/jumpmind/symmetric/model/IncomingBatch;)I
      53: pop
      54: goto          13
      57: return

  public java.util.List<org.jumpmind.symmetric.model.IncomingBatch> listIncomingBatchesInErrorFor(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #8                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #9                  // String selectIncomingBatchPrefixSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #30                 // String listIncomingBatchesInErrorForNodeSql
      18: aastore
      19: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #12                 // class org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper
      25: dup
      26: aload_0
      27: invokespecial #13                 // Method org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/IncomingBatchService;)V
      30: iconst_1
      31: anewarray     #14                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: aastore
      38: invokeinterface #31,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      43: areturn

  public java.util.List<java.util.Date> listIncomingBatchTimes(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<org.jumpmind.symmetric.model.IncomingBatch$Status>, boolean);
    Code:
       0: aload_1
       1: ifnull        154
       4: aload_1
       5: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      10: ifle          154
      13: aload_2
      14: ifnull        154
      17: aload_2
      18: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      23: ifle          154
      26: aload_3
      27: ifnull        154
      30: aload_3
      31: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      36: ifle          154
      39: new           #33                 // class java/util/HashMap
      42: dup
      43: invokespecial #34                 // Method java/util/HashMap."<init>":()V
      46: astore        5
      48: aload         5
      50: ldc           #35                 // String NODES
      52: aload_1
      53: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload         5
      61: ldc           #37                 // String CHANNELS
      63: aload_2
      64: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload         5
      72: ldc           #38                 // String STATUSES
      74: aload_0
      75: aload_3
      76: invokevirtual #39                 // Method toStringList:(Ljava/util/List;)Ljava/util/List;
      79: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_0
      86: iconst_3
      87: anewarray     #8                  // class java/lang/String
      90: dup
      91: iconst_0
      92: ldc           #40                 // String selectCreateTimePrefixSql
      94: aastore
      95: dup
      96: iconst_1
      97: aload_0
      98: aload_3
      99: invokevirtual #41                 // Method containsOnlyErrorStatus:(Ljava/util/List;)Z
     102: ifeq          110
     105: ldc           #42                 // String listIncomingBatchesInErrorSql
     107: goto          112
     110: ldc           #43                 // String listIncomingBatchesSql
     112: aastore
     113: dup
     114: iconst_2
     115: iload         4
     117: ifeq          125
     120: ldc           #44                 // String  order by create_time
     122: goto          127
     125: ldc           #45                 // String  order by create_time desc
     127: aastore
     128: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     131: astore        6
     133: aload_0
     134: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     137: aload         6
     139: new           #46                 // class org/jumpmind/db/sql/mapper/DateMapper
     142: dup
     143: invokespecial #47                 // Method org/jumpmind/db/sql/mapper/DateMapper."<init>":()V
     146: aload         5
     148: invokeinterface #48,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;Ljava/util/Map;)Ljava/util/List;
     153: areturn
     154: new           #49                 // class java/util/ArrayList
     157: dup
     158: iconst_0
     159: invokespecial #50                 // Method java/util/ArrayList."<init>":(I)V
     162: areturn

  public java.util.List<org.jumpmind.symmetric.model.IncomingBatch> listIncomingBatches(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<org.jumpmind.symmetric.model.IncomingBatch$Status>, java.util.Date, int, boolean);
    Code:
       0: aload_1
       1: ifnull        220
       4: aload_1
       5: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      10: ifle          220
      13: aload_2
      14: ifnull        220
      17: aload_2
      18: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      23: ifle          220
      26: aload_3
      27: ifnull        220
      30: aload_3
      31: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      36: ifle          220
      39: new           #33                 // class java/util/HashMap
      42: dup
      43: invokespecial #34                 // Method java/util/HashMap."<init>":()V
      46: astore        7
      48: aload         7
      50: ldc           #35                 // String NODES
      52: aload_1
      53: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload         7
      61: ldc           #37                 // String CHANNELS
      63: aload_2
      64: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: aload         7
      72: ldc           #38                 // String STATUSES
      74: aload_0
      75: aload_3
      76: invokevirtual #39                 // Method toStringList:(Ljava/util/List;)Ljava/util/List;
      79: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload         7
      87: ldc           #51                 // String CREATE_TIME
      89: aload         4
      91: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: ldc           #52                 // String
      99: astore        8
     101: aload         4
     103: ifnull        143
     106: new           #53                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #55                 // String  and create_time
     115: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: iload         6
     120: ifeq          128
     123: ldc           #57                 // String >=
     125: goto          130
     128: ldc           #58                 // String <=
     130: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #59                 // String  :CREATE_TIME
     135: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: astore        8
     143: aload_0
     144: iconst_4
     145: anewarray     #8                  // class java/lang/String
     148: dup
     149: iconst_0
     150: ldc           #9                  // String selectIncomingBatchPrefixSql
     152: aastore
     153: dup
     154: iconst_1
     155: aload_0
     156: aload_3
     157: invokevirtual #41                 // Method containsOnlyErrorStatus:(Ljava/util/List;)Z
     160: ifeq          168
     163: ldc           #42                 // String listIncomingBatchesInErrorSql
     165: goto          170
     168: ldc           #43                 // String listIncomingBatchesSql
     170: aastore
     171: dup
     172: iconst_2
     173: aload         8
     175: aastore
     176: dup
     177: iconst_3
     178: iload         6
     180: ifeq          188
     183: ldc           #44                 // String  order by create_time
     185: goto          190
     188: ldc           #45                 // String  order by create_time desc
     190: aastore
     191: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     194: astore        9
     196: aload_0
     197: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     200: aload         9
     202: iload         5
     204: new           #12                 // class org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper
     207: dup
     208: aload_0
     209: invokespecial #13                 // Method org/jumpmind/symmetric/service/impl/IncomingBatchService$IncomingBatchMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/IncomingBatchService;)V
     212: aload         7
     214: invokeinterface #61,  5           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;ILorg/jumpmind/db/sql/ISqlRowMapper;Ljava/util/Map;)Ljava/util/List;
     219: areturn
     220: new           #49                 // class java/util/ArrayList
     223: dup
     224: iconst_0
     225: invokespecial #50                 // Method java/util/ArrayList."<init>":(I)V
     228: areturn

  protected boolean containsOnlyErrorStatus(java.util.List<org.jumpmind.symmetric.model.IncomingBatch$Status>);
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmpne     27
      10: aload_1
      11: iconst_0
      12: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: getstatic     #63                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.ER:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      20: if_acmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected java.util.List<java.lang.String> toStringList(java.util.List<org.jumpmind.symmetric.model.IncomingBatch$Status>);
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #50                 // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          56
      30: aload_3
      31: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #64                 // class org/jumpmind/symmetric/model/IncomingBatch$Status
      39: astore        4
      41: aload_2
      42: aload         4
      44: invokevirtual #65                 // Method org/jumpmind/symmetric/model/IncomingBatch$Status.name:()Ljava/lang/String;
      47: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          21
      56: aload_2
      57: areturn

  public boolean acquireIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: invokevirtual #67                 // Method org/jumpmind/symmetric/model/IncomingBatch.isPersistable:()Z
       6: ifeq          239
       9: aconst_null
      10: astore_3
      11: aload_0
      12: aload_1
      13: invokevirtual #68                 // Method insertIncomingBatch:(Lorg/jumpmind/symmetric/model/IncomingBatch;)V
      16: goto          39
      19: astore        4
      21: aload_1
      22: iconst_1
      23: invokevirtual #70                 // Method org/jumpmind/symmetric/model/IncomingBatch.setRetry:(Z)V
      26: aload_0
      27: aload_1
      28: invokevirtual #71                 // Method org/jumpmind/symmetric/model/IncomingBatch.getBatchId:()J
      31: aload_1
      32: invokevirtual #72                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeId:()Ljava/lang/String;
      35: invokevirtual #73                 // Method findIncomingBatch:(JLjava/lang/String;)Lorg/jumpmind/symmetric/model/IncomingBatch;
      38: astore_3
      39: aload_1
      40: invokevirtual #74                 // Method org/jumpmind/symmetric/model/IncomingBatch.isRetry:()Z
      43: ifeq          239
      46: aload_3
      47: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      50: getstatic     #63                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.ER:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      53: if_acmpeq     80
      56: aload_3
      57: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      60: getstatic     #76                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.LD:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      63: if_acmpeq     80
      66: aload_0
      67: getfield      #77                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      70: ldc           #78                 // String incoming.batches.skip.duplicates
      72: invokeinterface #79,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      77: ifne          107
      80: iconst_1
      81: istore_2
      82: aload_3
      83: getstatic     #76                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.LD:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      86: invokevirtual #28                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
      89: aload_0
      90: getfield      #80                 // Field log:Lorg/slf4j/Logger;
      93: ldc           #81                 // String Retrying batch {}
      95: aload_1
      96: invokevirtual #82                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeBatchId:()Ljava/lang/String;
      99: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     104: goto          233
     107: aload_3
     108: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     111: getstatic     #84                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.IG:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     114: if_acmpne     148
     117: iconst_0
     118: istore_2
     119: aload_1
     120: getstatic     #27                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.OK:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     123: invokevirtual #28                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
     126: aload_1
     127: invokevirtual #85                 // Method org/jumpmind/symmetric/model/IncomingBatch.incrementIgnoreCount:()V
     130: aload_0
     131: getfield      #80                 // Field log:Lorg/slf4j/Logger;
     134: ldc           #86                 // String Ignoring batch {}
     136: aload_1
     137: invokevirtual #82                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeBatchId:()Ljava/lang/String;
     140: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     145: goto          233
     148: iconst_0
     149: istore_2
     150: aload_1
     151: aload_3
     152: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
     155: invokevirtual #28                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatus:(Lorg/jumpmind/symmetric/model/IncomingBatch$Status;)V
     158: aload_1
     159: aload_3
     160: invokevirtual #87                 // Method org/jumpmind/symmetric/model/IncomingBatch.getByteCount:()J
     163: invokevirtual #88                 // Method org/jumpmind/symmetric/model/IncomingBatch.setByteCount:(J)V
     166: aload_1
     167: aload_3
     168: invokevirtual #89                 // Method org/jumpmind/symmetric/model/IncomingBatch.getDatabaseMillis:()J
     171: invokevirtual #90                 // Method org/jumpmind/symmetric/model/IncomingBatch.setDatabaseMillis:(J)V
     174: aload_1
     175: aload_3
     176: invokevirtual #91                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNetworkMillis:()J
     179: invokevirtual #92                 // Method org/jumpmind/symmetric/model/IncomingBatch.setNetworkMillis:(J)V
     182: aload_1
     183: aload_3
     184: invokevirtual #93                 // Method org/jumpmind/symmetric/model/IncomingBatch.getFilterMillis:()J
     187: invokevirtual #94                 // Method org/jumpmind/symmetric/model/IncomingBatch.setFilterMillis:(J)V
     190: aload_1
     191: aload_3
     192: invokevirtual #95                 // Method org/jumpmind/symmetric/model/IncomingBatch.getSkipCount:()J
     195: lconst_1
     196: ladd
     197: invokevirtual #96                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSkipCount:(J)V
     200: aload_1
     201: aload_3
     202: invokevirtual #97                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatementCount:()J
     205: invokevirtual #98                 // Method org/jumpmind/symmetric/model/IncomingBatch.setStatementCount:(J)V
     208: aload_3
     209: aload_3
     210: invokevirtual #95                 // Method org/jumpmind/symmetric/model/IncomingBatch.getSkipCount:()J
     213: lconst_1
     214: ladd
     215: invokevirtual #96                 // Method org/jumpmind/symmetric/model/IncomingBatch.setSkipCount:(J)V
     218: aload_0
     219: getfield      #80                 // Field log:Lorg/slf4j/Logger;
     222: ldc           #99                 // String Skipping batch {}
     224: aload_1
     225: invokevirtual #82                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeBatchId:()Ljava/lang/String;
     228: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     233: aload_0
     234: aload_3
     235: invokevirtual #29                 // Method updateIncomingBatch:(Lorg/jumpmind/symmetric/model/IncomingBatch;)I
     238: pop
     239: iload_2
     240: ireturn
    Exception table:
       from    to  target type
          11    16    19   Class org/jumpmind/db/sql/UniqueKeyException

  public void insertIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);
    Code:
       0: aload_1
       1: invokevirtual #67                 // Method org/jumpmind/symmetric/model/IncomingBatch.isPersistable:()Z
       4: ifeq          375
       7: aload_1
       8: invokestatic  #100                // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      11: invokevirtual #101                // Method org/jumpmind/symmetric/model/IncomingBatch.setLastUpdatedHostName:(Ljava/lang/String;)V
      14: aload_1
      15: new           #102                // class java/util/Date
      18: dup
      19: invokespecial #103                // Method java/util/Date."<init>":()V
      22: invokevirtual #104                // Method org/jumpmind/symmetric/model/IncomingBatch.setLastUpdatedTime:(Ljava/util/Date;)V
      25: aload_0
      26: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      29: aload_0
      30: iconst_1
      31: anewarray     #8                  // class java/lang/String
      34: dup
      35: iconst_0
      36: ldc           #105                // String insertIncomingBatchSql
      38: aastore
      39: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      42: bipush        21
      44: anewarray     #14                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_1
      50: invokevirtual #71                 // Method org/jumpmind/symmetric/model/IncomingBatch.getBatchId:()J
      53: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: aastore
      57: dup
      58: iconst_1
      59: aload_1
      60: invokevirtual #72                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeId:()Ljava/lang/String;
      63: aastore
      64: dup
      65: iconst_2
      66: aload_1
      67: invokevirtual #106                // Method org/jumpmind/symmetric/model/IncomingBatch.getChannelId:()Ljava/lang/String;
      70: aastore
      71: dup
      72: iconst_3
      73: aload_1
      74: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      77: invokevirtual #65                 // Method org/jumpmind/symmetric/model/IncomingBatch$Status.name:()Ljava/lang/String;
      80: aastore
      81: dup
      82: iconst_4
      83: aload_1
      84: invokevirtual #91                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNetworkMillis:()J
      87: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      90: aastore
      91: dup
      92: iconst_5
      93: aload_1
      94: invokevirtual #93                 // Method org/jumpmind/symmetric/model/IncomingBatch.getFilterMillis:()J
      97: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     100: aastore
     101: dup
     102: bipush        6
     104: aload_1
     105: invokevirtual #89                 // Method org/jumpmind/symmetric/model/IncomingBatch.getDatabaseMillis:()J
     108: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     111: aastore
     112: dup
     113: bipush        7
     115: aload_1
     116: invokevirtual #107                // Method org/jumpmind/symmetric/model/IncomingBatch.getFailedRowNumber:()J
     119: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     122: aastore
     123: dup
     124: bipush        8
     126: aload_1
     127: invokevirtual #108                // Method org/jumpmind/symmetric/model/IncomingBatch.getFailedLineNumber:()J
     130: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     133: aastore
     134: dup
     135: bipush        9
     137: aload_1
     138: invokevirtual #87                 // Method org/jumpmind/symmetric/model/IncomingBatch.getByteCount:()J
     141: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     144: aastore
     145: dup
     146: bipush        10
     148: aload_1
     149: invokevirtual #97                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatementCount:()J
     152: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     155: aastore
     156: dup
     157: bipush        11
     159: aload_1
     160: invokevirtual #109                // Method org/jumpmind/symmetric/model/IncomingBatch.getFallbackInsertCount:()J
     163: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     166: aastore
     167: dup
     168: bipush        12
     170: aload_1
     171: invokevirtual #110                // Method org/jumpmind/symmetric/model/IncomingBatch.getFallbackUpdateCount:()J
     174: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     177: aastore
     178: dup
     179: bipush        13
     181: aload_1
     182: invokevirtual #111                // Method org/jumpmind/symmetric/model/IncomingBatch.getIgnoreCount:()J
     185: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     188: aastore
     189: dup
     190: bipush        14
     192: aload_1
     193: invokevirtual #112                // Method org/jumpmind/symmetric/model/IncomingBatch.getMissingDeleteCount:()J
     196: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     199: aastore
     200: dup
     201: bipush        15
     203: aload_1
     204: invokevirtual #95                 // Method org/jumpmind/symmetric/model/IncomingBatch.getSkipCount:()J
     207: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     210: aastore
     211: dup
     212: bipush        16
     214: aload_1
     215: invokevirtual #113                // Method org/jumpmind/symmetric/model/IncomingBatch.getSqlState:()Ljava/lang/String;
     218: aastore
     219: dup
     220: bipush        17
     222: aload_1
     223: invokevirtual #114                // Method org/jumpmind/symmetric/model/IncomingBatch.getSqlCode:()I
     226: invokestatic  #115                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     229: aastore
     230: dup
     231: bipush        18
     233: aload_1
     234: invokevirtual #116                // Method org/jumpmind/symmetric/model/IncomingBatch.getSqlMessage:()Ljava/lang/String;
     237: sipush        1000
     240: invokestatic  #117                // Method org/apache/commons/lang/StringUtils.abbreviate:(Ljava/lang/String;I)Ljava/lang/String;
     243: aastore
     244: dup
     245: bipush        19
     247: aload_1
     248: invokevirtual #118                // Method org/jumpmind/symmetric/model/IncomingBatch.getLastUpdatedHostName:()Ljava/lang/String;
     251: aastore
     252: dup
     253: bipush        20
     255: aload_1
     256: invokevirtual #119                // Method org/jumpmind/symmetric/model/IncomingBatch.getLastUpdatedTime:()Ljava/util/Date;
     259: aastore
     260: bipush        21
     262: newarray       int
     264: dup
     265: iconst_0
     266: iconst_2
     267: iastore
     268: dup
     269: iconst_1
     270: bipush        12
     272: iastore
     273: dup
     274: iconst_2
     275: bipush        12
     277: iastore
     278: dup
     279: iconst_3
     280: iconst_1
     281: iastore
     282: dup
     283: iconst_4
     284: iconst_2
     285: iastore
     286: dup
     287: iconst_5
     288: iconst_2
     289: iastore
     290: dup
     291: bipush        6
     293: iconst_2
     294: iastore
     295: dup
     296: bipush        7
     298: iconst_2
     299: iastore
     300: dup
     301: bipush        8
     303: iconst_2
     304: iastore
     305: dup
     306: bipush        9
     308: iconst_2
     309: iastore
     310: dup
     311: bipush        10
     313: iconst_2
     314: iastore
     315: dup
     316: bipush        11
     318: iconst_2
     319: iastore
     320: dup
     321: bipush        12
     323: iconst_2
     324: iastore
     325: dup
     326: bipush        13
     328: iconst_2
     329: iastore
     330: dup
     331: bipush        14
     333: iconst_2
     334: iastore
     335: dup
     336: bipush        15
     338: iconst_2
     339: iastore
     340: dup
     341: bipush        16
     343: bipush        12
     345: iastore
     346: dup
     347: bipush        17
     349: iconst_2
     350: iastore
     351: dup
     352: bipush        18
     354: bipush        12
     356: iastore
     357: dup
     358: bipush        19
     360: bipush        12
     362: iastore
     363: dup
     364: bipush        20
     366: bipush        93
     368: iastore
     369: invokeinterface #120,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     374: pop
     375: return

  public int deleteIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);
    Code:
       0: aload_0
       1: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #8                  // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #121                // String deleteIncomingBatchSql
      13: aastore
      14: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_2
      18: anewarray     #14                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #71                 // Method org/jumpmind/symmetric/model/IncomingBatch.getBatchId:()J
      27: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: invokevirtual #72                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeId:()Ljava/lang/String;
      37: aastore
      38: iconst_2
      39: newarray       int
      41: dup
      42: iconst_0
      43: iconst_2
      44: iastore
      45: dup
      46: iconst_1
      47: bipush        12
      49: iastore
      50: invokeinterface #120,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      55: ireturn

  public int updateIncomingBatch(org.jumpmind.symmetric.model.IncomingBatch);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #67                 // Method org/jumpmind/symmetric/model/IncomingBatch.isPersistable:()Z
       6: ifeq          420
       9: aload_1
      10: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      13: getstatic     #63                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.ER:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      16: if_acmpne     27
      19: aload_1
      20: iconst_1
      21: invokevirtual #26                 // Method org/jumpmind/symmetric/model/IncomingBatch.setErrorFlag:(Z)V
      24: goto          42
      27: aload_1
      28: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      31: getstatic     #27                 // Field org/jumpmind/symmetric/model/IncomingBatch$Status.OK:Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      34: if_acmpne     42
      37: aload_1
      38: iconst_0
      39: invokevirtual #26                 // Method org/jumpmind/symmetric/model/IncomingBatch.setErrorFlag:(Z)V
      42: aload_1
      43: invokestatic  #100                // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      46: invokevirtual #101                // Method org/jumpmind/symmetric/model/IncomingBatch.setLastUpdatedHostName:(Ljava/lang/String;)V
      49: aload_1
      50: new           #102                // class java/util/Date
      53: dup
      54: invokespecial #103                // Method java/util/Date."<init>":()V
      57: invokevirtual #104                // Method org/jumpmind/symmetric/model/IncomingBatch.setLastUpdatedTime:(Ljava/util/Date;)V
      60: aload_0
      61: getfield      #7                  // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      64: aload_0
      65: iconst_1
      66: anewarray     #8                  // class java/lang/String
      69: dup
      70: iconst_0
      71: ldc           #122                // String updateIncomingBatchSql
      73: aastore
      74: invokevirtual #11                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      77: bipush        21
      79: anewarray     #14                 // class java/lang/Object
      82: dup
      83: iconst_0
      84: aload_1
      85: invokevirtual #75                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatus:()Lorg/jumpmind/symmetric/model/IncomingBatch$Status;
      88: invokevirtual #65                 // Method org/jumpmind/symmetric/model/IncomingBatch$Status.name:()Ljava/lang/String;
      91: aastore
      92: dup
      93: iconst_1
      94: aload_1
      95: invokevirtual #123                // Method org/jumpmind/symmetric/model/IncomingBatch.isErrorFlag:()Z
      98: ifeq          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: invokestatic  #115                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: aastore
     110: dup
     111: iconst_2
     112: aload_1
     113: invokevirtual #91                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNetworkMillis:()J
     116: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: aastore
     120: dup
     121: iconst_3
     122: aload_1
     123: invokevirtual #93                 // Method org/jumpmind/symmetric/model/IncomingBatch.getFilterMillis:()J
     126: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     129: aastore
     130: dup
     131: iconst_4
     132: aload_1
     133: invokevirtual #89                 // Method org/jumpmind/symmetric/model/IncomingBatch.getDatabaseMillis:()J
     136: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     139: aastore
     140: dup
     141: iconst_5
     142: aload_1
     143: invokevirtual #107                // Method org/jumpmind/symmetric/model/IncomingBatch.getFailedRowNumber:()J
     146: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     149: aastore
     150: dup
     151: bipush        6
     153: aload_1
     154: invokevirtual #108                // Method org/jumpmind/symmetric/model/IncomingBatch.getFailedLineNumber:()J
     157: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     160: aastore
     161: dup
     162: bipush        7
     164: aload_1
     165: invokevirtual #87                 // Method org/jumpmind/symmetric/model/IncomingBatch.getByteCount:()J
     168: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     171: aastore
     172: dup
     173: bipush        8
     175: aload_1
     176: invokevirtual #97                 // Method org/jumpmind/symmetric/model/IncomingBatch.getStatementCount:()J
     179: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     182: aastore
     183: dup
     184: bipush        9
     186: aload_1
     187: invokevirtual #109                // Method org/jumpmind/symmetric/model/IncomingBatch.getFallbackInsertCount:()J
     190: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     193: aastore
     194: dup
     195: bipush        10
     197: aload_1
     198: invokevirtual #110                // Method org/jumpmind/symmetric/model/IncomingBatch.getFallbackUpdateCount:()J
     201: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     204: aastore
     205: dup
     206: bipush        11
     208: aload_1
     209: invokevirtual #111                // Method org/jumpmind/symmetric/model/IncomingBatch.getIgnoreCount:()J
     212: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     215: aastore
     216: dup
     217: bipush        12
     219: aload_1
     220: invokevirtual #112                // Method org/jumpmind/symmetric/model/IncomingBatch.getMissingDeleteCount:()J
     223: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     226: aastore
     227: dup
     228: bipush        13
     230: aload_1
     231: invokevirtual #95                 // Method org/jumpmind/symmetric/model/IncomingBatch.getSkipCount:()J
     234: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     237: aastore
     238: dup
     239: bipush        14
     241: aload_1
     242: invokevirtual #113                // Method org/jumpmind/symmetric/model/IncomingBatch.getSqlState:()Ljava/lang/String;
     245: aastore
     246: dup
     247: bipush        15
     249: aload_1
     250: invokevirtual #114                // Method org/jumpmind/symmetric/model/IncomingBatch.getSqlCode:()I
     253: invokestatic  #115                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     256: aastore
     257: dup
     258: bipush        16
     260: aload_1
     261: invokevirtual #116                // Method org/jumpmind/symmetric/model/IncomingBatch.getSqlMessage:()Ljava/lang/String;
     264: sipush        1000
     267: invokestatic  #117                // Method org/apache/commons/lang/StringUtils.abbreviate:(Ljava/lang/String;I)Ljava/lang/String;
     270: aastore
     271: dup
     272: bipush        17
     274: aload_1
     275: invokevirtual #118                // Method org/jumpmind/symmetric/model/IncomingBatch.getLastUpdatedHostName:()Ljava/lang/String;
     278: aastore
     279: dup
     280: bipush        18
     282: aload_1
     283: invokevirtual #119                // Method org/jumpmind/symmetric/model/IncomingBatch.getLastUpdatedTime:()Ljava/util/Date;
     286: aastore
     287: dup
     288: bipush        19
     290: aload_1
     291: invokevirtual #71                 // Method org/jumpmind/symmetric/model/IncomingBatch.getBatchId:()J
     294: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     297: aastore
     298: dup
     299: bipush        20
     301: aload_1
     302: invokevirtual #72                 // Method org/jumpmind/symmetric/model/IncomingBatch.getNodeId:()Ljava/lang/String;
     305: aastore
     306: bipush        21
     308: newarray       int
     310: dup
     311: iconst_0
     312: iconst_1
     313: iastore
     314: dup
     315: iconst_1
     316: iconst_5
     317: iastore
     318: dup
     319: iconst_2
     320: iconst_2
     321: iastore
     322: dup
     323: iconst_3
     324: iconst_2
     325: iastore
     326: dup
     327: iconst_4
     328: iconst_2
     329: iastore
     330: dup
     331: iconst_5
     332: iconst_2
     333: iastore
     334: dup
     335: bipush        6
     337: iconst_2
     338: iastore
     339: dup
     340: bipush        7
     342: iconst_2
     343: iastore
     344: dup
     345: bipush        8
     347: iconst_2
     348: iastore
     349: dup
     350: bipush        9
     352: iconst_2
     353: iastore
     354: dup
     355: bipush        10
     357: iconst_2
     358: iastore
     359: dup
     360: bipush        11
     362: iconst_2
     363: iastore
     364: dup
     365: bipush        12
     367: iconst_2
     368: iastore
     369: dup
     370: bipush        13
     372: iconst_2
     373: iastore
     374: dup
     375: bipush        14
     377: bipush        12
     379: iastore
     380: dup
     381: bipush        15
     383: iconst_2
     384: iastore
     385: dup
     386: bipush        16
     388: bipush        12
     390: iastore
     391: dup
     392: bipush        17
     394: bipush        12
     396: iastore
     397: dup
     398: bipush        18
     400: bipush        93
     402: iastore
     403: dup
     404: bipush        19
     406: iconst_2
     407: iastore
     408: dup
     409: bipush        20
     411: bipush        12
     413: iastore
     414: invokeinterface #120,  4          // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     419: istore_2
     420: iload_2
     421: ireturn
}
