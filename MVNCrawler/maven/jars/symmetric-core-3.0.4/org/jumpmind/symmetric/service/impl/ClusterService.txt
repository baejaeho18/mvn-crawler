Compiled from "ClusterService.java"
public class org.jumpmind.symmetric.service.impl.ClusterService extends org.jumpmind.symmetric.service.impl.AbstractService implements org.jumpmind.symmetric.service.IClusterService {
  private java.lang.String serverId;

  public org.jumpmind.symmetric.service.impl.ClusterService(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jumpmind/symmetric/service/impl/AbstractService."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
       6: aload_0
       7: invokestatic  #2                  // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      10: putfield      #3                  // Field serverId:Ljava/lang/String;
      13: aload_0
      14: new           #4                  // class org/jumpmind/symmetric/service/impl/ClusterServiceSqlMap
      17: dup
      18: aload_0
      19: getfield      #5                  // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      22: invokeinterface #6,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      27: aload_0
      28: invokevirtual #7                  // Method createSqlReplacementTokens:()Ljava/util/Map;
      31: invokespecial #8                  // Method org/jumpmind/symmetric/service/impl/ClusterServiceSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
      34: invokevirtual #9                  // Method setSqlMap:(Lorg/jumpmind/symmetric/service/impl/ISqlMap;)V
      37: return

  public void init();
    Code:
       0: aload_0
       1: ldc           #10                 // String ROUTE
       3: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
       6: aload_0
       7: ldc           #12                 // String PULL
       9: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      12: aload_0
      13: ldc           #13                 // String PUSH
      15: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      18: aload_0
      19: ldc           #14                 // String HEARTBEAT
      21: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      24: aload_0
      25: ldc           #15                 // String PURGE_INCOMING
      27: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      30: aload_0
      31: ldc           #16                 // String PURGE_OUTGOING
      33: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      36: aload_0
      37: ldc           #17                 // String PURGE_STATISTICS
      39: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      42: aload_0
      43: ldc           #18                 // String SYNCTRIGGERS
      45: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      48: aload_0
      49: ldc           #19                 // String PURGE_DATA_GAPS
      51: invokevirtual #11                 // Method initLockTable:(Ljava/lang/String;)V
      54: return

  public void initLockTable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #21                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #22                 // String insertLockSql
      13: aastore
      14: invokevirtual #23                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #24                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #25,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: pop
      31: aload_0
      32: getfield      #26                 // Field log:Lorg/slf4j/Logger;
      35: ldc           #27                 // String Inserted into the NODE_LOCK table for {}
      37: aload_1
      38: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      43: goto          59
      46: astore_2
      47: aload_0
      48: getfield      #26                 // Field log:Lorg/slf4j/Logger;
      51: ldc           #30                 // String Failed to insert to the NODE_LOCK table for {}.  Must be initialized already.
      53: aload_1
      54: invokeinterface #28,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      59: return
    Exception table:
       from    to  target type
           0    43    46   Class org/jumpmind/db/sql/UniqueKeyException

  public void clearAllLocks();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #21                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #31                 // String clearAllLocksSql
      13: aastore
      14: invokevirtual #23                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_0
      18: anewarray     #24                 // class java/lang/Object
      21: invokeinterface #25,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      26: pop
      27: return

  public boolean lock(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isClusteringEnabled:()Z
       4: ifeq          51
       7: new           #33                 // class java/util/Date
      10: dup
      11: invokespecial #34                 // Method java/util/Date."<init>":()V
      14: bipush        14
      16: aload_0
      17: getfield      #35                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      20: ldc           #36                 // String cluster.lock.timeout.ms
      22: invokeinterface #37,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      27: lneg
      28: l2i
      29: invokestatic  #38                 // Method org/apache/commons/lang/time/DateUtils.add:(Ljava/util/Date;II)Ljava/util/Date;
      32: astore_2
      33: aload_0
      34: aload_1
      35: aload_2
      36: new           #33                 // class java/util/Date
      39: dup
      40: invokespecial #34                 // Method java/util/Date."<init>":()V
      43: aload_0
      44: getfield      #3                  // Field serverId:Ljava/lang/String;
      47: invokevirtual #39                 // Method lock:(Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;)Z
      50: ireturn
      51: iconst_1
      52: ireturn

  protected boolean lock(java.lang.String, java.util.Date, java.util.Date, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #21                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #40                 // String aquireLockSql
      13: aastore
      14: invokevirtual #23                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_5
      18: anewarray     #24                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload         4
      25: aastore
      26: dup
      27: iconst_1
      28: aload_3
      29: aastore
      30: dup
      31: iconst_2
      32: aload_1
      33: aastore
      34: dup
      35: iconst_3
      36: aload_2
      37: aastore
      38: dup
      39: iconst_4
      40: aload         4
      42: aastore
      43: invokeinterface #25,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      48: iconst_1
      49: if_icmpne     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  public java.util.Map<java.lang.String, org.jumpmind.symmetric.model.Lock> findLocks();
    Code:
       0: new           #41                 // class java/util/HashMap
       3: dup
       4: invokespecial #42                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #32                 // Method isClusteringEnabled:()Z
      12: ifeq          51
      15: aload_0
      16: getfield      #20                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      19: aload_0
      20: iconst_1
      21: anewarray     #21                 // class java/lang/String
      24: dup
      25: iconst_0
      26: ldc           #43                 // String findLocksSql
      28: aastore
      29: invokevirtual #23                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      32: new           #44                 // class org/jumpmind/symmetric/service/impl/ClusterService$1
      35: dup
      36: aload_0
      37: aload_1
      38: invokespecial #45                 // Method org/jumpmind/symmetric/service/impl/ClusterService$1."<init>":(Lorg/jumpmind/symmetric/service/impl/ClusterService;Ljava/util/Map;)V
      41: iconst_0
      42: anewarray     #24                 // class java/lang/Object
      45: invokeinterface #46,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      50: pop
      51: aload_1
      52: areturn

  public java.lang.String getServerId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field serverId:Ljava/lang/String;
       4: areturn

  public void unlock(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isClusteringEnabled:()Z
       4: ifeq          35
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field serverId:Ljava/lang/String;
      13: invokevirtual #47                 // Method unlock:(Ljava/lang/String;Ljava/lang/String;)Z
      16: ifne          35
      19: aload_0
      20: getfield      #26                 // Field log:Lorg/slf4j/Logger;
      23: ldc           #48                 // String Failed to release lock for action:{} server:{}
      25: aload_1
      26: aload_0
      27: getfield      #3                  // Field serverId:Ljava/lang/String;
      30: invokeinterface #49,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: return

  protected boolean unlock(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #21                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #50                 // String releaseLockSql
      13: aastore
      14: invokevirtual #23                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_3
      18: anewarray     #24                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_2
      24: aastore
      25: dup
      26: iconst_1
      27: aload_1
      28: aastore
      29: dup
      30: iconst_2
      31: aload_2
      32: aastore
      33: invokeinterface #25,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      38: ifle          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  public boolean isClusteringEnabled();
    Code:
       0: aload_0
       1: getfield      #35                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #51                 // String cluster.lock.enabled
       6: invokeinterface #52,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      11: ireturn

  public boolean isInfiniteLocked(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method findLocks:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #54,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #55                 // class org/jumpmind/symmetric/model/Lock
      15: astore_3
      16: aload_3
      17: ifnull        58
      20: aload_3
      21: invokevirtual #56                 // Method org/jumpmind/symmetric/model/Lock.getLockTime:()Ljava/util/Date;
      24: ifnull        58
      27: new           #33                 // class java/util/Date
      30: dup
      31: invokespecial #34                 // Method java/util/Date."<init>":()V
      34: aload_3
      35: invokevirtual #56                 // Method org/jumpmind/symmetric/model/Lock.getLockTime:()Ljava/util/Date;
      38: invokevirtual #57                 // Method java/util/Date.before:(Ljava/util/Date;)Z
      41: ifeq          58
      44: ldc           #58                 // String STOPPED
      46: aload_3
      47: invokevirtual #59                 // Method org/jumpmind/symmetric/model/Lock.getLockingServerId:()Ljava/lang/String;
      50: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          58
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  public void aquireInfiniteLock(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isClusteringEnabled:()Z
       4: ifeq          63
       7: bipush        60
       9: istore_2
      10: new           #33                 // class java/util/Date
      13: dup
      14: invokespecial #34                 // Method java/util/Date."<init>":()V
      17: iconst_1
      18: bipush        100
      20: invokestatic  #38                 // Method org/apache/commons/lang/time/DateUtils.add:(Ljava/util/Date;II)Ljava/util/Date;
      23: astore_3
      24: iload_2
      25: ifle          63
      28: aload_0
      29: aload_1
      30: new           #33                 // class java/util/Date
      33: dup
      34: invokespecial #34                 // Method java/util/Date."<init>":()V
      37: aload_3
      38: ldc           #58                 // String STOPPED
      40: invokevirtual #39                 // Method lock:(Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;)Z
      43: ifne          58
      46: ldc2_w        #61                 // long 1000l
      49: invokestatic  #63                 // Method org/jumpmind/symmetric/util/AppUtils.sleep:(J)V
      52: iinc          2, -1
      55: goto          24
      58: iconst_0
      59: istore_2
      60: goto          24
      63: return

  public void clearInfiniteLock(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method findLocks:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #54,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #55                 // class org/jumpmind/symmetric/model/Lock
      15: astore_3
      16: aload_3
      17: ifnull        40
      20: ldc           #58                 // String STOPPED
      22: aload_3
      23: invokevirtual #59                 // Method org/jumpmind/symmetric/model/Lock.getLockingServerId:()Ljava/lang/String;
      26: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          40
      32: aload_0
      33: aload_1
      34: ldc           #58                 // String STOPPED
      36: invokevirtual #47                 // Method unlock:(Ljava/lang/String;Ljava/lang/String;)Z
      39: pop
      40: return
}
