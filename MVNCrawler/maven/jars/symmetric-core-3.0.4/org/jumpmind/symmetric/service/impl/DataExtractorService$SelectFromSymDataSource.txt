Compiled from "DataExtractorService.java"
class org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromSymDataSource implements org.jumpmind.symmetric.io.data.reader.IExtractDataReaderSource {
  private org.jumpmind.symmetric.io.data.Batch batch;

  private org.jumpmind.symmetric.model.OutgoingBatch outgoingBatch;

  private org.jumpmind.db.model.Table currentTable;

  private boolean requiresLobSelectedFromSource;

  private org.jumpmind.db.sql.ISqlReadCursor<org.jumpmind.symmetric.model.Data> cursor;

  private org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource reloadSource;

  private org.jumpmind.symmetric.model.Node targetNode;

  final org.jumpmind.symmetric.service.impl.DataExtractorService this$0;

  public org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromSymDataSource(org.jumpmind.symmetric.service.impl.DataExtractorService, org.jumpmind.symmetric.model.OutgoingBatch, org.jumpmind.symmetric.model.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field outgoingBatch:Lorg/jumpmind/symmetric/model/OutgoingBatch;
      14: aload_0
      15: new           #4                  // class org/jumpmind/symmetric/io/data/Batch
      18: dup
      19: aload_2
      20: invokevirtual #5                  // Method org/jumpmind/symmetric/model/OutgoingBatch.getBatchId:()J
      23: aload_2
      24: invokevirtual #6                  // Method org/jumpmind/symmetric/model/OutgoingBatch.getChannelId:()Ljava/lang/String;
      27: aload_1
      28: getfield      #7                  // Field org/jumpmind/symmetric/service/impl/DataExtractorService.symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      31: invokeinterface #8,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getBinaryEncoding:()Lorg/jumpmind/db/util/BinaryEncoding;
      36: aload_2
      37: invokevirtual #9                  // Method org/jumpmind/symmetric/model/OutgoingBatch.getNodeId:()Ljava/lang/String;
      40: aload_2
      41: invokevirtual #10                 // Method org/jumpmind/symmetric/model/OutgoingBatch.isCommonFlag:()Z
      44: invokespecial #11                 // Method org/jumpmind/symmetric/io/data/Batch."<init>":(JLjava/lang/String;Lorg/jumpmind/db/util/BinaryEncoding;Ljava/lang/String;Z)V
      47: putfield      #12                 // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
      50: aload_0
      51: aload_3
      52: putfield      #13                 // Field targetNode:Lorg/jumpmind/symmetric/model/Node;
      55: return

  public org.jumpmind.symmetric.io.data.Batch getBatch();
    Code:
       0: aload_0
       1: getfield      #12                 // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
       4: areturn

  public org.jumpmind.db.model.Table getTable();
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentTable:Lorg/jumpmind/db/model/Table;
       4: areturn

  public org.jumpmind.symmetric.io.data.CsvData next();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
       4: ifnonnull     27
       7: aload_0
       8: aload_0
       9: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
      12: invokestatic  #16                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$000:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/IDataService;
      15: aload_0
      16: getfield      #12                 // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
      19: invokeinterface #17,  2           // InterfaceMethod org/jumpmind/symmetric/service/IDataService.selectDataFor:(Lorg/jumpmind/symmetric/io/data/Batch;)Lorg/jumpmind/db/sql/ISqlReadCursor;
      24: putfield      #15                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      27: aconst_null
      28: astore_1
      29: aload_0
      30: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      33: ifnull        74
      36: aload_0
      37: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      40: invokevirtual #19                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.next:()Lorg/jumpmind/symmetric/io/data/CsvData;
      43: checkcast     #20                 // class org/jumpmind/symmetric/model/Data
      46: astore_1
      47: aload_0
      48: aload_0
      49: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      52: invokevirtual #21                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.getTable:()Lorg/jumpmind/db/model/Table;
      55: putfield      #14                 // Field currentTable:Lorg/jumpmind/db/model/Table;
      58: aload_1
      59: ifnonnull     74
      62: aload_0
      63: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      66: invokevirtual #22                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.close:()V
      69: aload_0
      70: aconst_null
      71: putfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      74: aload_1
      75: ifnonnull     327
      78: aload_0
      79: getfield      #15                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      82: invokeinterface #23,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlReadCursor.next:()Ljava/lang/Object;
      87: checkcast     #20                 // class org/jumpmind/symmetric/model/Data
      90: astore_1
      91: aload_1
      92: ifnull        323
      95: aload_1
      96: invokevirtual #24                 // Method org/jumpmind/symmetric/model/Data.getTriggerHistory:()Lorg/jumpmind/symmetric/model/TriggerHistory;
      99: astore_2
     100: aload_1
     101: ldc           #25                 // String routerId
     103: invokevirtual #26                 // Method org/jumpmind/symmetric/model/Data.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
     106: checkcast     #27                 // class java/lang/String
     109: astore_3
     110: aload_1
     111: invokevirtual #28                 // Method org/jumpmind/symmetric/model/Data.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
     114: getstatic     #29                 // Field org/jumpmind/symmetric/io/data/DataEventType.RELOAD:Lorg/jumpmind/symmetric/io/data/DataEventType;
     117: if_acmpne     224
     120: aload_2
     121: invokevirtual #30                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
     124: astore        4
     126: aload_0
     127: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     130: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$100:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/ITriggerRouterService;
     133: aload         4
     135: aload_3
     136: invokeinterface #32,  3           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.findTriggerRouterById:(Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerRouter;
     141: astore        5
     143: new           #33                 // class org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent
     146: dup
     147: aload_0
     148: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     151: aload_0
     152: getfield      #13                 // Field targetNode:Lorg/jumpmind/symmetric/model/Node;
     155: aload         5
     157: aload_2
     158: invokespecial #34                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent."<init>":(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     161: astore        6
     163: aload_0
     164: new           #35                 // class org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource
     167: dup
     168: aload_0
     169: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     172: aload_0
     173: getfield      #3                  // Field outgoingBatch:Lorg/jumpmind/symmetric/model/OutgoingBatch;
     176: aload_0
     177: getfield      #12                 // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
     180: aload         6
     182: invokespecial #36                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource."<init>":(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;Lorg/jumpmind/symmetric/model/OutgoingBatch;Lorg/jumpmind/symmetric/io/data/Batch;Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;)V
     185: putfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
     188: aload_0
     189: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
     192: invokevirtual #19                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.next:()Lorg/jumpmind/symmetric/io/data/CsvData;
     195: checkcast     #20                 // class org/jumpmind/symmetric/model/Data
     198: astore_1
     199: aload_0
     200: aload_0
     201: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
     204: invokevirtual #21                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.getTable:()Lorg/jumpmind/db/model/Table;
     207: putfield      #14                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     210: aload_0
     211: aload_0
     212: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
     215: invokevirtual #37                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.requiresLobsSelectedFromSource:()Z
     218: putfield      #38                 // Field requiresLobSelectedFromSource:Z
     221: goto          320
     224: aload_0
     225: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     228: invokestatic  #31                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$100:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/ITriggerRouterService;
     231: aload_2
     232: invokevirtual #30                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
     235: iconst_0
     236: invokeinterface #39,  3           // InterfaceMethod org/jumpmind/symmetric/service/ITriggerRouterService.getTriggerById:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/Trigger;
     241: astore        4
     243: aload         4
     245: ifnull        278
     248: aload_0
     249: aload_0
     250: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     253: aload_3
     254: aload_2
     255: aload_0
     256: getfield      #14                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     259: iconst_1
     260: invokevirtual #40                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.lookupAndOrderColumnsAccordingToTriggerHistory:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/db/model/Table;Z)Lorg/jumpmind/db/model/Table;
     263: putfield      #14                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     266: aload_0
     267: aload         4
     269: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Trigger.isUseStreamLobs:()Z
     272: putfield      #38                 // Field requiresLobSelectedFromSource:Z
     275: goto          320
     278: aload_0
     279: getfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     282: getfield      #42                 // Field org/jumpmind/symmetric/service/impl/DataExtractorService.log:Lorg/slf4j/Logger;
     285: ldc           #43                 // String Could not locate a trigger with the id of {} for {}.  It was recorded in the hist table with a hist id of {}
     287: iconst_3
     288: anewarray     #44                 // class java/lang/Object
     291: dup
     292: iconst_0
     293: aload_2
     294: invokevirtual #30                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
     297: aastore
     298: dup
     299: iconst_1
     300: aload_2
     301: invokevirtual #45                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     304: aastore
     305: dup
     306: iconst_2
     307: aload_2
     308: invokevirtual #46                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     311: invokestatic  #47                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     314: aastore
     315: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     320: goto          327
     323: aload_0
     324: invokevirtual #49                 // Method closeCursor:()V
     327: aload_1
     328: areturn

  public boolean requiresLobsSelectedFromSource();
    Code:
       0: aload_0
       1: getfield      #38                 // Field requiresLobSelectedFromSource:Z
       4: ireturn

  protected void closeCursor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
       4: ifnull        21
       7: aload_0
       8: getfield      #15                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      11: invokeinterface #50,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlReadCursor.close:()V
      16: aload_0
      17: aconst_null
      18: putfield      #15                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      21: return

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method closeCursor:()V
       4: aload_0
       5: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
       8: ifnull        18
      11: aload_0
      12: getfield      #18                 // Field reloadSource:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;
      15: invokevirtual #22                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource.close:()V
      18: return
}
