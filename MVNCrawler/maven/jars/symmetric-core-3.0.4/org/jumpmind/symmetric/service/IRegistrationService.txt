Compiled from "IRegistrationService.java"
public interface org.jumpmind.symmetric.service.IRegistrationService {
  public abstract boolean registerNode(org.jumpmind.symmetric.model.Node, java.lang.String, java.lang.String, java.io.OutputStream, boolean) throws java.io.IOException;

  public abstract boolean registerNode(org.jumpmind.symmetric.model.Node, java.io.OutputStream, boolean) throws java.io.IOException;

  public abstract java.lang.String openRegistration(java.lang.String, java.lang.String);

  public abstract boolean isRegistrationOpen(java.lang.String, java.lang.String);

  public abstract void reOpenRegistration(java.lang.String);

  public abstract void markNodeAsRegistered(java.lang.String);

  public abstract boolean isAutoRegistration();

  public abstract void registerWithServer();

  public abstract java.util.List<org.jumpmind.symmetric.model.RegistrationRequest> getRegistrationRequests(boolean);

  public abstract boolean deleteRegistrationRequest(org.jumpmind.symmetric.model.RegistrationRequest);

  public abstract void saveRegisgtrationRequest(org.jumpmind.symmetric.model.RegistrationRequest);

  public abstract boolean isRegisteredWithServer();

  public abstract void setNodePasswordFilter(org.jumpmind.symmetric.security.INodePasswordFilter);

  public abstract void saveRegistrationRedirect(java.lang.String, java.lang.String);

  public abstract java.lang.String getRedirectionUrlFor(java.lang.String);
}
