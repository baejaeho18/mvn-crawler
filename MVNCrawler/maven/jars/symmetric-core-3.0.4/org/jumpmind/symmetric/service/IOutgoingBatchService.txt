Compiled from "IOutgoingBatchService.java"
public interface org.jumpmind.symmetric.service.IOutgoingBatchService {
  public abstract void markAllAsSentForNode(org.jumpmind.symmetric.model.Node);

  public abstract void updateAbandonedRoutingBatches();

  public abstract org.jumpmind.symmetric.model.OutgoingBatch findOutgoingBatch(long, java.lang.String);

  public abstract org.jumpmind.symmetric.model.OutgoingBatches getOutgoingBatches(org.jumpmind.symmetric.model.Node, boolean);

  public abstract org.jumpmind.symmetric.model.OutgoingBatches getOutgoingBatchRange(java.lang.String, java.lang.String);

  public abstract org.jumpmind.symmetric.model.OutgoingBatches getOutgoingBatchErrors(int);

  public abstract boolean isInitialLoadComplete(java.lang.String);

  public abstract boolean areAllLoadBatchesComplete(java.lang.String);

  public abstract boolean isUnsentDataOnChannelForNode(java.lang.String, java.lang.String);

  public abstract void updateOutgoingBatch(org.jumpmind.symmetric.model.OutgoingBatch);

  public abstract void updateOutgoingBatches(java.util.List<org.jumpmind.symmetric.model.OutgoingBatch>);

  public abstract void insertOutgoingBatch(org.jumpmind.symmetric.model.OutgoingBatch);

  public abstract void insertOutgoingBatch(org.jumpmind.db.sql.ISqlTransaction, org.jumpmind.symmetric.model.OutgoingBatch);

  public abstract int countOutgoingBatchesInError();

  public abstract java.util.List<org.jumpmind.symmetric.model.OutgoingBatchSummary> findOutgoingBatchSummary(org.jumpmind.symmetric.model.OutgoingBatch$Status...);

  public abstract int countOutgoingBatches(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<org.jumpmind.symmetric.model.OutgoingBatch$Status>);

  public abstract java.util.List<org.jumpmind.symmetric.model.OutgoingBatch> listOutgoingBatches(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<org.jumpmind.symmetric.model.OutgoingBatch$Status>, long, int, boolean);
}
