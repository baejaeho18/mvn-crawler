Compiled from "ConfigurationService.java"
class org.jumpmind.symmetric.service.impl.ConfigurationService$3 implements org.jumpmind.db.sql.ISqlRowMapper<org.jumpmind.symmetric.model.Channel> {
  final org.jumpmind.symmetric.service.impl.ConfigurationService this$0;

  org.jumpmind.symmetric.service.impl.ConfigurationService$3(org.jumpmind.symmetric.service.impl.ConfigurationService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/ConfigurationService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public org.jumpmind.symmetric.model.Channel mapRow(org.jumpmind.db.sql.Row);
    Code:
       0: new           #3                  // class org/jumpmind/symmetric/model/Channel
       3: dup
       4: invokespecial #4                  // Method org/jumpmind/symmetric/model/Channel."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: ldc           #5                  // String channel_id
      12: invokevirtual #6                  // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
      15: invokevirtual #7                  // Method org/jumpmind/symmetric/model/Channel.setChannelId:(Ljava/lang/String;)V
      18: aload_2
      19: aload_1
      20: ldc           #8                  // String processing_order
      22: invokevirtual #9                  // Method org/jumpmind/db/sql/Row.getInt:(Ljava/lang/String;)I
      25: invokevirtual #10                 // Method org/jumpmind/symmetric/model/Channel.setProcessingOrder:(I)V
      28: aload_2
      29: aload_1
      30: ldc           #11                 // String max_batch_size
      32: invokevirtual #9                  // Method org/jumpmind/db/sql/Row.getInt:(Ljava/lang/String;)I
      35: invokevirtual #12                 // Method org/jumpmind/symmetric/model/Channel.setMaxBatchSize:(I)V
      38: aload_2
      39: aload_1
      40: ldc           #13                 // String enabled
      42: invokevirtual #14                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
      45: invokevirtual #15                 // Method org/jumpmind/symmetric/model/Channel.setEnabled:(Z)V
      48: aload_2
      49: aload_1
      50: ldc           #16                 // String max_batch_to_send
      52: invokevirtual #9                  // Method org/jumpmind/db/sql/Row.getInt:(Ljava/lang/String;)I
      55: invokevirtual #17                 // Method org/jumpmind/symmetric/model/Channel.setMaxBatchToSend:(I)V
      58: aload_2
      59: aload_1
      60: ldc           #18                 // String max_data_to_route
      62: invokevirtual #9                  // Method org/jumpmind/db/sql/Row.getInt:(Ljava/lang/String;)I
      65: invokevirtual #19                 // Method org/jumpmind/symmetric/model/Channel.setMaxDataToRoute:(I)V
      68: aload_2
      69: aload_1
      70: ldc           #20                 // String use_old_data_to_route
      72: invokevirtual #14                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
      75: invokevirtual #21                 // Method org/jumpmind/symmetric/model/Channel.setUseOldDataToRoute:(Z)V
      78: aload_2
      79: aload_1
      80: ldc           #22                 // String use_row_data_to_route
      82: invokevirtual #14                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
      85: invokevirtual #23                 // Method org/jumpmind/symmetric/model/Channel.setUseRowDataToRoute:(Z)V
      88: aload_2
      89: aload_1
      90: ldc           #24                 // String use_pk_data_to_route
      92: invokevirtual #14                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
      95: invokevirtual #25                 // Method org/jumpmind/symmetric/model/Channel.setUsePkDataToRoute:(Z)V
      98: aload_2
      99: aload_1
     100: ldc           #26                 // String contains_big_lob
     102: invokevirtual #14                 // Method org/jumpmind/db/sql/Row.getBoolean:(Ljava/lang/String;)Z
     105: invokevirtual #27                 // Method org/jumpmind/symmetric/model/Channel.setContainsBigLob:(Z)V
     108: aload_2
     109: aload_1
     110: ldc           #28                 // String batch_algorithm
     112: invokevirtual #6                  // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     115: invokevirtual #29                 // Method org/jumpmind/symmetric/model/Channel.setBatchAlgorithm:(Ljava/lang/String;)V
     118: aload_2
     119: aload_1
     120: ldc           #30                 // String extract_period_millis
     122: invokevirtual #31                 // Method org/jumpmind/db/sql/Row.getLong:(Ljava/lang/String;)J
     125: invokevirtual #32                 // Method org/jumpmind/symmetric/model/Channel.setExtractPeriodMillis:(J)V
     128: aload_2
     129: aload_1
     130: ldc           #33                 // String data_loader_type
     132: invokevirtual #6                  // Method org/jumpmind/db/sql/Row.getString:(Ljava/lang/String;)Ljava/lang/String;
     135: invokevirtual #34                 // Method org/jumpmind/symmetric/model/Channel.setDataLoaderType:(Ljava/lang/String;)V
     138: aload_2
     139: areturn

  public java.lang.Object mapRow(org.jumpmind.db.sql.Row);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method mapRow:(Lorg/jumpmind/db/sql/Row;)Lorg/jumpmind/symmetric/model/Channel;
       5: areturn
}
