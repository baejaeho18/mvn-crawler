Compiled from "IConfigurationService.java"
public interface org.jumpmind.symmetric.service.IConfigurationService {
  public abstract java.util.List<org.jumpmind.symmetric.model.NodeGroup> getNodeGroups();

  public abstract void saveNodeGroup(org.jumpmind.symmetric.model.NodeGroup);

  public abstract void saveNodeGroupLink(org.jumpmind.symmetric.model.NodeGroupLink);

  public abstract void deleteNodeGroup(java.lang.String);

  public abstract void deleteNodeGroupLink(org.jumpmind.symmetric.model.NodeGroupLink);

  public abstract java.util.List<org.jumpmind.symmetric.model.NodeGroupLink> getNodeGroupLinks();

  public abstract java.util.List<org.jumpmind.symmetric.model.NodeGroupLink> getNodeGroupLinksFor(java.lang.String);

  public abstract org.jumpmind.symmetric.model.NodeGroupLink getNodeGroupLinkFor(java.lang.String, java.lang.String);

  public abstract boolean isChannelInUse(java.lang.String);

  public abstract void saveChannel(org.jumpmind.symmetric.model.Channel, boolean);

  public abstract void saveChannel(org.jumpmind.symmetric.model.NodeChannel, boolean);

  public abstract void saveNodeChannel(org.jumpmind.symmetric.model.NodeChannel, boolean);

  public abstract void saveNodeChannelControl(org.jumpmind.symmetric.model.NodeChannel, boolean);

  public abstract void deleteChannel(org.jumpmind.symmetric.model.Channel);

  public abstract java.util.List<org.jumpmind.symmetric.model.NodeGroupChannelWindow> getNodeGroupChannelWindows(java.lang.String, java.lang.String);

  public abstract org.jumpmind.symmetric.model.NodeGroupLinkAction getDataEventActionByGroupLinkId(java.lang.String, java.lang.String);

  public abstract java.util.List<org.jumpmind.symmetric.model.NodeChannel> getNodeChannels(boolean);

  public abstract java.util.List<org.jumpmind.symmetric.model.NodeChannel> getNodeChannels(java.lang.String, boolean);

  public abstract org.jumpmind.symmetric.model.NodeChannel getNodeChannel(java.lang.String, boolean);

  public abstract org.jumpmind.symmetric.model.Channel getChannel(java.lang.String);

  public abstract java.util.Map<java.lang.String, org.jumpmind.symmetric.model.Channel> getChannels(boolean);

  public abstract org.jumpmind.symmetric.model.NodeChannel getNodeChannel(java.lang.String, java.lang.String, boolean);

  public abstract void reloadChannels();

  public abstract void initDefaultChannels();

  public abstract org.jumpmind.symmetric.model.ChannelMap getSuspendIgnoreChannelLists(java.lang.String);

  public abstract org.jumpmind.symmetric.model.ChannelMap getSuspendIgnoreChannelLists();

  public abstract java.util.Map<java.lang.String, java.lang.String> getRegistrationRedirectMap();
}
