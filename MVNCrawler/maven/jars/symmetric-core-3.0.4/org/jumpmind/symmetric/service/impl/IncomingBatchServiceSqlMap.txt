Compiled from "IncomingBatchServiceSqlMap.java"
public class org.jumpmind.symmetric.service.impl.IncomingBatchServiceSqlMap extends org.jumpmind.symmetric.service.impl.AbstractSqlMap {
  public org.jumpmind.symmetric.service.impl.IncomingBatchServiceSqlMap(org.jumpmind.db.platform.IDatabasePlatform, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jumpmind/symmetric/service/impl/AbstractSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
       6: aload_0
       7: ldc           #2                  // String selectIncomingBatchPrefixSql
       9: ldc           #3                  // String select batch_id, node_id, channel_id, status, network_millis, filter_millis, database_millis, failed_row_number, failed_line_number, byte_count,             statement_count, fallback_insert_count, fallback_update_count, ignore_count, missing_delete_count, skip_count, sql_state, sql_code, sql_message,     last_update_hostname, last_update_time, create_time, error_flag from $(incoming_batch)
      11: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      14: aload_0
      15: ldc           #5                  // String selectCreateTimePrefixSql
      17: ldc           #6                  // String select create_time from $(incoming_batch)
      19: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      22: aload_0
      23: ldc           #7                  // String findIncomingBatchSql
      25: ldc           #8                  // String where batch_id = ? and node_id = ?
      27: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      30: aload_0
      31: ldc           #9                  // String listIncomingBatchesSql
      33: ldc           #10                 // String where node_id in (:NODES) and channel_id in (:CHANNELS) and status in (:STATUSES)
      35: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      38: aload_0
      39: ldc           #11                 // String listIncomingBatchesInErrorSql
      41: ldc           #12                 // String where node_id in (:NODES) and channel_id in (:CHANNELS) and error_flag=1
      43: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      46: aload_0
      47: ldc           #13                 // String listIncomingBatchesInErrorForNodeSql
      49: ldc           #14                 // String where node_id=? and error_flag=1
      51: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: ldc           #15                 // String findIncomingBatchErrorsSql
      57: ldc           #16                 // String where status = \'ER\' order by batch_id
      59: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      62: aload_0
      63: ldc           #17                 // String countIncomingBatchesErrorsSql
      65: ldc           #18                 // String select count(*) from $(incoming_batch) where error_flag=1
      67: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      70: aload_0
      71: ldc           #19                 // String insertIncomingBatchSql
      73: ldc           #20                 // String insert into $(incoming_batch) (batch_id, node_id, channel_id, status, network_millis, filter_millis, database_millis, failed_row_number, failed_line_number, byte_count,     statement_count, fallback_insert_count, fallback_update_count, ignore_count, missing_delete_count, skip_count, sql_state, sql_code, sql_message,                           last_update_hostname, last_update_time, create_time)                                                                                                         values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp)
      75: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      78: aload_0
      79: ldc           #21                 // String updateIncomingBatchSql
      81: ldc           #22                 // String update $(incoming_batch) set status = ?, error_flag=?, network_millis = ?, filter_millis = ?, database_millis = ?, failed_row_number = ?, failed_line_number = ?, byte_count = ?,           statement_count = ?, fallback_insert_count = ?, fallback_update_count = ?, ignore_count = ?, missing_delete_count = ?, skip_count = ?,  sql_state = ?, sql_code = ?, sql_message = ?,     last_update_hostname = ?, last_update_time = ? where batch_id = ? and node_id = ?
      83: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      86: aload_0
      87: ldc           #23                 // String deleteIncomingBatchSql
      89: ldc           #24                 // String delete from $(incoming_batch) where batch_id = ? and node_id = ?
      91: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      94: return
}
