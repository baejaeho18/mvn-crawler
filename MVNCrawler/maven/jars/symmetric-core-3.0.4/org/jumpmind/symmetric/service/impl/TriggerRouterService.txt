Compiled from "TriggerRouterService.java"
public class org.jumpmind.symmetric.service.impl.TriggerRouterService extends org.jumpmind.symmetric.service.impl.AbstractService implements org.jumpmind.symmetric.service.ITriggerRouterService {
  private org.jumpmind.symmetric.service.IClusterService clusterService;

  private org.jumpmind.symmetric.service.IConfigurationService configurationService;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.model.Router> routersCache;

  private long routersCacheTime;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.model.Trigger> triggersCache;

  private long triggersCacheTime;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.service.impl.TriggerRouterService$TriggerRoutersCache> triggerRouterCacheByNodeGroupId;

  private long triggerRouterCacheTime;

  private java.util.List<org.jumpmind.symmetric.config.ITriggerCreationListener> triggerCreationListeners;

  private org.jumpmind.symmetric.config.TriggerFailureListener failureListener;

  private org.jumpmind.symmetric.statistic.IStatisticManager statisticManager;

  private java.util.List<java.lang.String> extraConfigTables;

  private java.util.HashMap<java.lang.Integer, org.jumpmind.symmetric.model.TriggerHistory> historyMap;

  public org.jumpmind.symmetric.service.impl.TriggerRouterService(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect, org.jumpmind.symmetric.service.IClusterService, org.jumpmind.symmetric.service.IConfigurationService, org.jumpmind.symmetric.statistic.IStatisticManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/jumpmind/symmetric/service/impl/AbstractService."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
       6: aload_0
       7: new           #3                  // class java/util/HashMap
      10: dup
      11: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      14: putfield      #5                  // Field triggerRouterCacheByNodeGroupId:Ljava/util/Map;
      17: aload_0
      18: new           #6                  // class org/jumpmind/symmetric/config/TriggerFailureListener
      21: dup
      22: invokespecial #7                  // Method org/jumpmind/symmetric/config/TriggerFailureListener."<init>":()V
      25: putfield      #8                  // Field failureListener:Lorg/jumpmind/symmetric/config/TriggerFailureListener;
      28: aload_0
      29: new           #9                  // class java/util/ArrayList
      32: dup
      33: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      36: putfield      #11                 // Field extraConfigTables:Ljava/util/List;
      39: aload_0
      40: new           #3                  // class java/util/HashMap
      43: dup
      44: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      47: putfield      #12                 // Field historyMap:Ljava/util/HashMap;
      50: aload_0
      51: aload_3
      52: putfield      #13                 // Field clusterService:Lorg/jumpmind/symmetric/service/IClusterService;
      55: aload_0
      56: aload         4
      58: putfield      #1                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      61: aload_0
      62: aload         5
      64: putfield      #14                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      67: aload_0
      68: aload_0
      69: getfield      #8                  // Field failureListener:Lorg/jumpmind/symmetric/config/TriggerFailureListener;
      72: invokevirtual #15                 // Method addTriggerCreationListeners:(Lorg/jumpmind/symmetric/config/ITriggerCreationListener;)V
      75: aload_0
      76: new           #16                 // class org/jumpmind/symmetric/service/impl/TriggerRouterServiceSqlMap
      79: dup
      80: aload_2
      81: invokeinterface #17,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      86: aload_0
      87: invokevirtual #18                 // Method createSqlReplacementTokens:()Ljava/util/Map;
      90: invokespecial #19                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterServiceSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
      93: invokevirtual #20                 // Method setSqlMap:(Lorg/jumpmind/symmetric/service/impl/ISqlMap;)V
      96: return

  public java.util.List<org.jumpmind.symmetric.model.Trigger> getTriggers();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: new           #22                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #24                 // String select
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: iconst_2
      18: anewarray     #26                 // class java/lang/String
      21: dup
      22: iconst_0
      23: ldc           #27                 // String selectTriggersColumnList
      25: aastore
      26: dup
      27: iconst_1
      28: ldc           #28                 // String selectTriggersSql
      30: aastore
      31: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: new           #31                 // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerMapper
      43: dup
      44: aload_0
      45: invokespecial #32                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      48: iconst_0
      49: anewarray     #33                 // class java/lang/Object
      52: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      57: areturn

  public boolean isTriggerBeingUsed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #35                 // String countTriggerRoutersByTriggerIdSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #36,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: ifle          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean doesTriggerExist(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #37                 // String countTriggerByTriggerIdSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #36,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: ifle          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean doesTriggerExistForTable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #38                 // String countTriggerByTableNameSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #36,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: ifle          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void deleteTrigger(org.jumpmind.symmetric.model.Trigger);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #39                 // String deleteTriggerSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      27: aastore
      28: invokeinterface #41,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      33: pop
      34: return

  protected void deleteTriggerHistory(org.jumpmind.symmetric.model.TriggerHistory);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #42                 // String deleteTriggerHistorySql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #43                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
      27: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: invokeinterface #41,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      36: pop
      37: return

  public void createTriggersOnChannelForTables(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.lang.String);
    Code:
       0: aload         4
       2: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       7: astore        6
       9: aload         6
      11: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          112
      19: aload         6
      21: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #26                 // class java/lang/String
      29: astore        7
      31: new           #48                 // class org/jumpmind/symmetric/model/Trigger
      34: dup
      35: invokespecial #49                 // Method org/jumpmind/symmetric/model/Trigger."<init>":()V
      38: astore        8
      40: aload         8
      42: aload_1
      43: invokevirtual #50                 // Method org/jumpmind/symmetric/model/Trigger.setChannelId:(Ljava/lang/String;)V
      46: aload         8
      48: aload_2
      49: invokevirtual #51                 // Method org/jumpmind/symmetric/model/Trigger.setSourceCatalogName:(Ljava/lang/String;)V
      52: aload         8
      54: aload_3
      55: invokevirtual #52                 // Method org/jumpmind/symmetric/model/Trigger.setSourceSchemaName:(Ljava/lang/String;)V
      58: aload         8
      60: aload         7
      62: invokevirtual #53                 // Method org/jumpmind/symmetric/model/Trigger.setSourceTableName:(Ljava/lang/String;)V
      65: aload         8
      67: aload         7
      69: invokevirtual #54                 // Method org/jumpmind/symmetric/model/Trigger.setTriggerId:(Ljava/lang/String;)V
      72: aload         8
      74: aload         5
      76: invokevirtual #55                 // Method org/jumpmind/symmetric/model/Trigger.setLastUpdateBy:(Ljava/lang/String;)V
      79: aload         8
      81: new           #56                 // class java/util/Date
      84: dup
      85: invokespecial #57                 // Method java/util/Date."<init>":()V
      88: invokevirtual #58                 // Method org/jumpmind/symmetric/model/Trigger.setLastUpdateTime:(Ljava/util/Date;)V
      91: aload         8
      93: new           #56                 // class java/util/Date
      96: dup
      97: invokespecial #57                 // Method java/util/Date."<init>":()V
     100: invokevirtual #59                 // Method org/jumpmind/symmetric/model/Trigger.setCreateTime:(Ljava/util/Date;)V
     103: aload_0
     104: aload         8
     106: invokevirtual #60                 // Method saveTrigger:(Lorg/jumpmind/symmetric/model/Trigger;)V
     109: goto          9
     112: return

  public void createTriggersOnChannelForTables(java.lang.String, java.util.Set<org.jumpmind.db.model.Table>, java.lang.String);
    Code:
       0: aload_2
       1: invokeinterface #61,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          104
      18: aload         4
      20: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #62                 // class org/jumpmind/db/model/Table
      28: astore        5
      30: new           #48                 // class org/jumpmind/symmetric/model/Trigger
      33: dup
      34: invokespecial #49                 // Method org/jumpmind/symmetric/model/Trigger."<init>":()V
      37: astore        6
      39: aload         6
      41: aload_1
      42: invokevirtual #50                 // Method org/jumpmind/symmetric/model/Trigger.setChannelId:(Ljava/lang/String;)V
      45: aload         6
      47: aload         5
      49: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
      52: invokevirtual #53                 // Method org/jumpmind/symmetric/model/Trigger.setSourceTableName:(Ljava/lang/String;)V
      55: aload         6
      57: aload         5
      59: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
      62: invokevirtual #54                 // Method org/jumpmind/symmetric/model/Trigger.setTriggerId:(Ljava/lang/String;)V
      65: aload         6
      67: aload_3
      68: invokevirtual #55                 // Method org/jumpmind/symmetric/model/Trigger.setLastUpdateBy:(Ljava/lang/String;)V
      71: aload         6
      73: new           #56                 // class java/util/Date
      76: dup
      77: invokespecial #57                 // Method java/util/Date."<init>":()V
      80: invokevirtual #58                 // Method org/jumpmind/symmetric/model/Trigger.setLastUpdateTime:(Ljava/util/Date;)V
      83: aload         6
      85: new           #56                 // class java/util/Date
      88: dup
      89: invokespecial #57                 // Method java/util/Date."<init>":()V
      92: invokevirtual #59                 // Method org/jumpmind/symmetric/model/Trigger.setCreateTime:(Ljava/util/Date;)V
      95: aload_0
      96: aload         6
      98: invokevirtual #60                 // Method saveTrigger:(Lorg/jumpmind/symmetric/model/Trigger;)V
     101: goto          8
     104: return

  public void inactivateTriggerHistory(org.jumpmind.symmetric.model.TriggerHistory);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #64                 // String inactivateTriggerHistorySql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_2
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #65                 // Method org/jumpmind/symmetric/model/TriggerHistory.getErrorMessage:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_1
      30: aload_1
      31: invokevirtual #43                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
      34: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: aastore
      38: iconst_2
      39: newarray       int
      41: dup
      42: iconst_0
      43: bipush        12
      45: iastore
      46: dup
      47: iconst_1
      48: iconst_4
      49: iastore
      50: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      55: pop
      56: return

  public java.util.Map<java.lang.Long, org.jumpmind.symmetric.model.TriggerHistory> getHistoryRecords();
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      12: aload_0
      13: iconst_1
      14: anewarray     #26                 // class java/lang/String
      17: dup
      18: iconst_0
      19: ldc           #67                 // String allTriggerHistSql
      21: aastore
      22: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      25: new           #68                 // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper
      28: dup
      29: aload_0
      30: aload_1
      31: invokespecial #69                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;Ljava/util/Map;)V
      34: iconst_0
      35: anewarray     #33                 // class java/lang/Object
      38: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      43: pop
      44: aload_1
      45: areturn

  protected boolean isTriggerNameInUse(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #70                 // String selectTriggerNameInUseSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_4
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_2
      24: aastore
      25: dup
      26: iconst_1
      27: aload_2
      28: aastore
      29: dup
      30: iconst_2
      31: aload_2
      32: aastore
      33: dup
      34: iconst_3
      35: aload_1
      36: aastore
      37: invokeinterface #36,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      42: ifle          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public org.jumpmind.symmetric.model.TriggerHistory findTriggerHistory(java.lang.String);
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      12: aload_0
      13: iconst_2
      14: anewarray     #26                 // class java/lang/String
      17: dup
      18: iconst_0
      19: ldc           #67                 // String allTriggerHistSql
      21: aastore
      22: dup
      23: iconst_1
      24: ldc           #71                 // String triggerHistBySourceTableWhereSql
      26: aastore
      27: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      30: new           #68                 // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper
      33: dup
      34: aload_0
      35: aload_2
      36: invokespecial #69                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;Ljava/util/Map;)V
      39: iconst_1
      40: anewarray     #33                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_1
      46: aastore
      47: iconst_1
      48: newarray       int
      50: dup
      51: iconst_0
      52: bipush        12
      54: iastore
      55: invokeinterface #72,  5           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;[I)Ljava/util/List;
      60: pop
      61: aload_2
      62: invokeinterface #73,  1           // InterfaceMethod java/util/Map.size:()I
      67: ifle          90
      70: aload_2
      71: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      76: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      81: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #76                 // class org/jumpmind/symmetric/model/TriggerHistory
      89: areturn
      90: aconst_null
      91: areturn

  public org.jumpmind.symmetric.model.TriggerHistory getTriggerHistory(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field historyMap:Ljava/util/HashMap;
       4: iload_1
       5: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #77                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #76                 // class org/jumpmind/symmetric/model/TriggerHistory
      14: astore_2
      15: aload_2
      16: ifnonnull     81
      19: iload_1
      20: iflt          81
      23: aload_0
      24: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      27: aload_0
      28: iconst_1
      29: anewarray     #26                 // class java/lang/String
      32: dup
      33: iconst_0
      34: ldc           #78                 // String triggerHistSql
      36: aastore
      37: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      40: new           #68                 // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper
      43: dup
      44: aload_0
      45: invokespecial #79                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      48: iconst_1
      49: anewarray     #33                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: iload_1
      55: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aastore
      59: invokeinterface #80,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForObject:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #76                 // class org/jumpmind/symmetric/model/TriggerHistory
      67: astore_2
      68: aload_0
      69: getfield      #12                 // Field historyMap:Ljava/util/HashMap;
      72: iload_1
      73: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: aload_2
      77: invokevirtual #81                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: aload_2
      82: areturn

  public org.jumpmind.symmetric.model.TriggerHistory getNewestTriggerHistoryForTrigger(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #82                 // String latestTriggerHistSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: new           #68                 // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper
      20: dup
      21: aload_0
      22: invokespecial #79                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      25: iconst_2
      26: anewarray     #33                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_1
      32: aastore
      33: dup
      34: iconst_1
      35: aload         4
      37: aastore
      38: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      43: astore        5
      45: aload         5
      47: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore        6
      54: aload         6
      56: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          156
      64: aload         6
      66: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #76                 // class org/jumpmind/symmetric/model/TriggerHistory
      74: astore        7
      76: aload_2
      77: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      80: ifeq          94
      83: aload         7
      85: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
      88: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      91: ifne          113
      94: aload_2
      95: invokestatic  #85                 // Method org/apache/commons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      98: ifeq          153
     101: aload_2
     102: aload         7
     104: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     107: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifeq          153
     113: aload_3
     114: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
     117: ifeq          131
     120: aload         7
     122: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     125: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
     128: ifne          150
     131: aload_3
     132: invokestatic  #85                 // Method org/apache/commons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
     135: ifeq          153
     138: aload_2
     139: aload         7
     141: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     144: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     147: ifeq          153
     150: aload         7
     152: areturn
     153: goto          54
     156: aconst_null
     157: areturn

  public java.util.List<org.jumpmind.symmetric.model.TriggerHistory> getActiveTriggerHistories();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_2
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #67                 // String allTriggerHistSql
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #88                 // String activeTriggerHistSql
      18: aastore
      19: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      22: new           #68                 // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper
      25: dup
      26: aload_0
      27: invokespecial #79                 // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerHistoryMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      30: iconst_0
      31: anewarray     #33                 // class java/lang/Object
      34: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      39: areturn

  protected java.util.List<org.jumpmind.symmetric.model.Trigger> buildTriggersForSymmetricTables(java.lang.String, java.lang.String...);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: aload_0
      13: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      16: invokeinterface #90,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getTablePrefix:()Ljava/lang/String;
      21: invokestatic  #91                 // Method org/jumpmind/symmetric/common/TableConstants.getConfigTables:(Ljava/lang/String;)Ljava/util/List;
      24: invokespecial #92                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field extraConfigTables:Ljava/util/List;
      33: ifnull        82
      36: aload_0
      37: getfield      #11                 // Field extraConfigTables:Ljava/util/List;
      40: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore        5
      47: aload         5
      49: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          82
      57: aload         5
      59: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #26                 // class java/lang/String
      67: astore        6
      69: aload         4
      71: aload         6
      73: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: goto          47
      82: aload_2
      83: ifnull        168
      86: aload_2
      87: astore        5
      89: aload         5
      91: arraylength
      92: istore        6
      94: iconst_0
      95: istore        7
      97: iload         7
      99: iload         6
     101: if_icmpge     168
     104: aload         5
     106: iload         7
     108: aaload
     109: astore        8
     111: aload_0
     112: getfield      #94                 // Field tablePrefix:Ljava/lang/String;
     115: aload         8
     117: invokestatic  #95                 // Method org/jumpmind/symmetric/common/TableConstants.getTableName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     120: astore        9
     122: aload         4
     124: aload         9
     126: invokeinterface #96,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     131: ifne          162
     134: aload         4
     136: aload         9
     138: invokevirtual #97                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     141: invokeinterface #96,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     146: ifne          162
     149: aload         4
     151: aload         9
     153: invokevirtual #98                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     156: invokeinterface #96,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     161: pop
     162: iinc          7, 1
     165: goto          97
     168: aload         4
     170: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     175: astore        5
     177: aload         5
     179: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     184: ifeq          219
     187: aload         5
     189: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     194: checkcast     #26                 // class java/lang/String
     197: astore        6
     199: aload_0
     200: aload         6
     202: invokevirtual #99                 // Method buildTriggerForSymmetricTable:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Trigger;
     205: astore        7
     207: aload_3
     208: aload         7
     210: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     215: pop
     216: goto          177
     219: aload_3
     220: areturn

  protected org.jumpmind.symmetric.model.Trigger buildTriggerForSymmetricTable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #94                 // Field tablePrefix:Ljava/lang/String;
       4: invokestatic  #100                // Method org/jumpmind/symmetric/common/TableConstants.getTablesThatDoNotSync:(Ljava/lang/String;)Ljava/util/List;
       7: aload_1
       8: invokeinterface #101,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      13: ifne          34
      16: aload_0
      17: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      20: ldc           #103                // String auto.sync.configuration
      22: invokeinterface #104,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: istore_2
      36: new           #48                 // class org/jumpmind/symmetric/model/Trigger
      39: dup
      40: invokespecial #49                 // Method org/jumpmind/symmetric/model/Trigger."<init>":()V
      43: astore_3
      44: aload_3
      45: aload_1
      46: invokevirtual #105                // Method java/lang/String.hashCode:()I
      49: invokestatic  #106                // Method java/lang/Math.abs:(I)I
      52: invokestatic  #107                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      55: invokevirtual #54                 // Method org/jumpmind/symmetric/model/Trigger.setTriggerId:(Ljava/lang/String;)V
      58: aload_3
      59: iload_2
      60: invokevirtual #108                // Method org/jumpmind/symmetric/model/Trigger.setSyncOnDelete:(Z)V
      63: aload_3
      64: iload_2
      65: invokevirtual #109                // Method org/jumpmind/symmetric/model/Trigger.setSyncOnInsert:(Z)V
      68: aload_3
      69: iload_2
      70: invokevirtual #110                // Method org/jumpmind/symmetric/model/Trigger.setSyncOnUpdate:(Z)V
      73: aload_3
      74: iconst_1
      75: invokevirtual #111                // Method org/jumpmind/symmetric/model/Trigger.setSyncOnIncomingBatch:(Z)V
      78: aload_3
      79: aload_1
      80: invokevirtual #53                 // Method org/jumpmind/symmetric/model/Trigger.setSourceTableName:(Ljava/lang/String;)V
      83: aload_3
      84: iconst_0
      85: invokevirtual #112                // Method org/jumpmind/symmetric/model/Trigger.setUseCaptureOldData:(Z)V
      88: aload_3
      89: ldc           #113                // String config
      91: invokevirtual #50                 // Method org/jumpmind/symmetric/model/Trigger.setChannelId:(Ljava/lang/String;)V
      94: aload_3
      95: new           #56                 // class java/util/Date
      98: dup
      99: invokestatic  #114                // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
     102: invokevirtual #105                // Method java/lang/String.hashCode:()I
     105: i2l
     106: invokespecial #115                // Method java/util/Date."<init>":(J)V
     109: invokevirtual #58                 // Method org/jumpmind/symmetric/model/Trigger.setLastUpdateTime:(Ljava/util/Date;)V
     112: aload_3
     113: areturn

  public java.util.List<org.jumpmind.symmetric.model.TriggerRouter> buildTriggerRoutersForSymmetricTables(java.lang.String, org.jumpmind.symmetric.model.NodeGroupLink, java.lang.String...);
    Code:
       0: iconst_1
       1: istore        4
       3: aload_0
       4: aload_1
       5: aload_3
       6: invokevirtual #116                // Method buildTriggersForSymmetricTables:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
       9: astore        5
      11: new           #9                  // class java/util/ArrayList
      14: dup
      15: aload         5
      17: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      22: invokespecial #118                // Method java/util/ArrayList."<init>":(I)V
      25: astore        6
      27: iconst_0
      28: istore        7
      30: iload         7
      32: aload         5
      34: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      39: if_icmpge     92
      42: aload         5
      44: iload         7
      46: invokeinterface #119,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #48                 // class org/jumpmind/symmetric/model/Trigger
      54: astore        8
      56: aload_0
      57: aload_1
      58: aload         8
      60: aload_2
      61: invokevirtual #120                // Method buildTriggerRoutersForSymmetricTables:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/NodeGroupLink;)Lorg/jumpmind/symmetric/model/TriggerRouter;
      64: astore        9
      66: aload         9
      68: iload         4
      70: iinc          4, 1
      73: invokevirtual #121                // Method org/jumpmind/symmetric/model/TriggerRouter.setInitialLoadOrder:(I)V
      76: aload         6
      78: aload         9
      80: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: iinc          7, 1
      89: goto          30
      92: aload         6
      94: areturn

  protected org.jumpmind.symmetric.model.TriggerRouter buildTriggerRoutersForSymmetricTables(java.lang.String, org.jumpmind.symmetric.model.Trigger, org.jumpmind.symmetric.model.NodeGroupLink);
    Code:
       0: new           #122                // class org/jumpmind/symmetric/model/TriggerRouter
       3: dup
       4: invokespecial #123                // Method org/jumpmind/symmetric/model/TriggerRouter."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #124                // Method org/jumpmind/symmetric/model/TriggerRouter.setTrigger:(Lorg/jumpmind/symmetric/model/Trigger;)V
      15: aload         4
      17: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      20: astore        5
      22: aload         5
      24: ldc           #126                // String configurationChanged
      26: invokevirtual #127                // Method org/jumpmind/symmetric/model/Router.setRouterType:(Ljava/lang/String;)V
      29: aload         5
      31: aload_3
      32: invokevirtual #128                // Method org/jumpmind/symmetric/model/Router.setNodeGroupLink:(Lorg/jumpmind/symmetric/model/NodeGroupLink;)V
      35: aload         5
      37: aload_2
      38: invokevirtual #129                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateTime:()Ljava/util/Date;
      41: invokevirtual #130                // Method org/jumpmind/symmetric/model/Router.setLastUpdateTime:(Ljava/util/Date;)V
      44: aload         4
      46: aload_2
      47: invokevirtual #129                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateTime:()Ljava/util/Date;
      50: invokevirtual #131                // Method org/jumpmind/symmetric/model/TriggerRouter.setLastUpdateTime:(Ljava/util/Date;)V
      53: aload_2
      54: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      57: aload_0
      58: getfield      #94                 // Field tablePrefix:Ljava/lang/String;
      61: ldc           #133                // String trigger
      63: invokestatic  #95                 // Method org/jumpmind/symmetric/common/TableConstants.getTableName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      66: invokevirtual #134                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      69: ifeq          79
      72: aload         5
      74: ldc           #126                // String configurationChanged
      76: invokevirtual #127                // Method org/jumpmind/symmetric/model/Router.setRouterType:(Ljava/lang/String;)V
      79: aload         4
      81: areturn

  private java.lang.String getTriggerRouterSql();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #135                // Method getTriggerRouterSql:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  private java.lang.String getTriggerRouterSql(java.lang.String);
    Code:
       0: aload_0
       1: bipush        8
       3: anewarray     #26                 // class java/lang/String
       6: dup
       7: iconst_0
       8: ldc           #24                 // String select
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #27                 // String selectTriggersColumnList
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #136                // String ,
      20: aastore
      21: dup
      22: iconst_3
      23: ldc           #137                // String selectRoutersColumnList
      25: aastore
      26: dup
      27: iconst_4
      28: ldc           #136                // String ,
      30: aastore
      31: dup
      32: iconst_5
      33: ldc           #138                // String selectTriggerRoutersColumnList
      35: aastore
      36: dup
      37: bipush        6
      39: ldc           #139                // String selectTriggerRoutersSql
      41: aastore
      42: dup
      43: bipush        7
      45: aload_1
      46: aastore
      47: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      50: areturn

  public java.util.List<org.jumpmind.symmetric.model.TriggerRouter> getTriggerRouters();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: invokespecial #140                // Method getTriggerRouterSql:()Ljava/lang/String;
       8: new           #141                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper
      11: dup
      12: aload_0
      13: invokespecial #142                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      16: iconst_0
      17: anewarray     #33                 // class java/lang/Object
      20: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      25: areturn

  public java.util.Set<org.jumpmind.symmetric.model.TriggerRouter> getTriggerRouterForTableForCurrentNode(java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: iload         4
       7: invokevirtual #143                // Method getTriggerRouterForTableForCurrentNode:(Lorg/jumpmind/symmetric/model/NodeGroupLink;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Set;
      10: areturn

  public java.util.Set<org.jumpmind.symmetric.model.TriggerRouter> getTriggerRouterForTableForCurrentNode(org.jumpmind.symmetric.model.NodeGroupLink, java.lang.String, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload         5
       3: invokevirtual #144                // Method getTriggerRoutersCacheForCurrentNode:(Z)Lorg/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache;
       6: astore        6
       8: aload         6
      10: getfield      #145                // Field org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache.triggerRoutersByTriggerId:Ljava/util/Map;
      13: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      18: astore        7
      20: new           #146                // class java/util/HashSet
      23: dup
      24: invokespecial #147                // Method java/util/HashSet."<init>":()V
      27: astore        8
      29: aload         7
      31: invokeinterface #148,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore        9
      38: aload         9
      40: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          131
      48: aload         9
      50: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #149                // class java/util/List
      58: astore        10
      60: aload         10
      62: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: astore        11
      69: aload         11
      71: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          128
      79: aload         11
      81: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
      89: astore        12
      91: aload_0
      92: aload_1
      93: aload         12
      95: invokevirtual #150                // Method isMatch:(Lorg/jumpmind/symmetric/model/NodeGroupLink;Lorg/jumpmind/symmetric/model/TriggerRouter;)Z
      98: ifeq          125
     101: aload_0
     102: aload_2
     103: aload_3
     104: aload         4
     106: aload         12
     108: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     111: invokevirtual #152                // Method isMatch:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/Trigger;)Z
     114: ifeq          125
     117: aload         8
     119: aload         12
     121: invokevirtual #153                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     124: pop
     125: goto          69
     128: goto          38
     131: aload         8
     133: areturn

  protected boolean isMatch(org.jumpmind.symmetric.model.NodeGroupLink, org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_1
       1: ifnull        61
       4: aload_2
       5: ifnull        61
       8: aload_2
       9: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      12: ifnull        61
      15: aload_1
      16: invokevirtual #154                // Method org/jumpmind/symmetric/model/NodeGroupLink.getSourceNodeGroupId:()Ljava/lang/String;
      19: aload_2
      20: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      23: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
      26: invokevirtual #154                // Method org/jumpmind/symmetric/model/NodeGroupLink.getSourceNodeGroupId:()Ljava/lang/String;
      29: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          59
      35: aload_1
      36: invokevirtual #156                // Method org/jumpmind/symmetric/model/NodeGroupLink.getTargetNodeGroupId:()Ljava/lang/String;
      39: aload_2
      40: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      43: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
      46: invokevirtual #156                // Method org/jumpmind/symmetric/model/NodeGroupLink.getTargetNodeGroupId:()Ljava/lang/String;
      49: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: iconst_1
      62: ireturn

  protected boolean isMatch(java.lang.String, java.lang.String, java.lang.String, org.jumpmind.symmetric.model.Trigger);
    Code:
       0: aload_3
       1: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
       4: ifne          21
       7: aload_3
       8: aload         4
      10: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      13: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          21
      19: iconst_0
      20: ireturn
      21: aload_3
      22: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      25: ifeq          41
      28: aload         4
      30: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      33: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      36: ifne          41
      39: iconst_0
      40: ireturn
      41: aload_1
      42: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      45: ifne          62
      48: aload_1
      49: aload         4
      51: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      54: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifne          62
      60: iconst_0
      61: ireturn
      62: aload_1
      63: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      66: ifeq          82
      69: aload         4
      71: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      74: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_2
      83: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      86: ifne          103
      89: aload_2
      90: aload         4
      92: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      95: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifne          103
     101: iconst_0
     102: ireturn
     103: aload_2
     104: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
     107: ifeq          123
     110: aload         4
     112: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     115: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
     118: ifne          123
     121: iconst_0
     122: ireturn
     123: iconst_1
     124: ireturn

  protected java.util.List<org.jumpmind.symmetric.model.TriggerRouter> getConfigurationTablesTriggerRoutersForCurrentNode(java.lang.String);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      12: aload_1
      13: invokeinterface #159,  2          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getNodeGroupLinksFor:(Ljava/lang/String;)Ljava/util/List;
      18: astore_3
      19: aload_3
      20: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          72
      37: aload         4
      39: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #160                // class org/jumpmind/symmetric/model/NodeGroupLink
      47: astore        5
      49: aload_2
      50: aload_0
      51: invokestatic  #114                // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      54: aload         5
      56: iconst_0
      57: anewarray     #26                 // class java/lang/String
      60: invokevirtual #161                // Method buildTriggerRoutersForSymmetricTables:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/NodeGroupLink;[Ljava/lang/String;)Ljava/util/List;
      63: invokeinterface #162,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      68: pop
      69: goto          27
      72: aload_2
      73: areturn

  protected void mergeInConfigurationTablesTriggerRoutersForCurrentNode(java.lang.String, java.util.List<org.jumpmind.symmetric.model.TriggerRouter>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #163                // Method getConfigurationTablesTriggerRoutersForCurrentNode:(Ljava/lang/String;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore        4
      14: aload         4
      16: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          76
      24: aload         4
      26: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
      34: astore        5
      36: aload         5
      38: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      41: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
      44: invokevirtual #154                // Method org/jumpmind/symmetric/model/NodeGroupLink.getSourceNodeGroupId:()Ljava/lang/String;
      47: aload_1
      48: invokevirtual #134                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      51: ifeq          73
      54: aload_0
      55: aload_2
      56: aload         5
      58: invokevirtual #164                // Method doesTriggerRouterExistInList:(Ljava/util/List;Lorg/jumpmind/symmetric/model/TriggerRouter;)Z
      61: ifne          73
      64: aload_2
      65: aload         5
      67: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          14
      76: return

  protected boolean doesTriggerRouterExistInList(java.util.List<org.jumpmind.symmetric.model.TriggerRouter>, org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_1
       1: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_3
      17: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
      25: astore        4
      27: aload         4
      29: aload_2
      30: invokevirtual #165                // Method org/jumpmind/symmetric/model/TriggerRouter.isSame:(Lorg/jumpmind/symmetric/model/TriggerRouter;)Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: goto          7
      41: iconst_0
      42: ireturn

  public java.util.Map<java.lang.String, java.util.List<org.jumpmind.symmetric.model.TriggerRouter>> getTriggerRoutersForCurrentNode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #144                // Method getTriggerRoutersCacheForCurrentNode:(Z)Lorg/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache;
       5: getfield      #145                // Field org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache.triggerRoutersByTriggerId:Ljava/util/Map;
       8: areturn

  public java.util.List<org.jumpmind.symmetric.model.Trigger> getTriggersForCurrentNode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #166                // Method getTriggerRoutersForCurrentNode:(Z)Ljava/util/Map;
       5: astore_2
       6: new           #9                  // class java/util/ArrayList
       9: dup
      10: aload_2
      11: invokeinterface #73,  1           // InterfaceMethod java/util/Map.size:()I
      16: invokespecial #118                // Method java/util/ArrayList."<init>":(I)V
      19: astore_3
      20: aload_2
      21: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      26: invokeinterface #148,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          89
      43: aload         4
      45: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #149                // class java/util/List
      53: astore        5
      55: aload         5
      57: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      62: ifle          86
      65: aload_3
      66: aload         5
      68: iconst_0
      69: invokeinterface #119,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
      77: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      80: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          33
      89: aload_3
      90: areturn

  protected org.jumpmind.symmetric.service.impl.TriggerRouterService$TriggerRoutersCache getTriggerRoutersCacheForCurrentNode(boolean);
    Code:
       0: aload_0
       1: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: invokeinterface #167,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getNodeGroupId:()Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      14: ldc           #168                // String cache.trigger.router.time.ms
      16: invokeinterface #169,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      21: lstore_3
      22: aload_0
      23: getfield      #5                  // Field triggerRouterCacheByNodeGroupId:Ljava/util/Map;
      26: ifnonnull     33
      29: aconst_null
      30: goto          46
      33: aload_0
      34: getfield      #5                  // Field triggerRouterCacheByNodeGroupId:Ljava/util/Map;
      37: aload_2
      38: invokeinterface #170,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #171                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache
      46: astore        5
      48: aload         5
      50: ifnull        70
      53: iload_1
      54: ifne          70
      57: invokestatic  #172                // Method java/lang/System.currentTimeMillis:()J
      60: aload_0
      61: getfield      #173                // Field triggerRouterCacheTime:J
      64: lsub
      65: lload_3
      66: lcmp
      67: ifle          312
      70: aload_0
      71: dup
      72: astore        6
      74: monitorenter
      75: aload_0
      76: invokestatic  #172                // Method java/lang/System.currentTimeMillis:()J
      79: putfield      #173                // Field triggerRouterCacheTime:J
      82: new           #3                  // class java/util/HashMap
      85: dup
      86: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      89: astore        7
      91: aload_0
      92: aload_2
      93: invokevirtual #174                // Method getAllTriggerRoutersForCurrentNode:(Ljava/lang/String;)Ljava/util/List;
      96: astore        8
      98: new           #3                  // class java/util/HashMap
     101: dup
     102: aload         8
     104: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
     109: invokespecial #175                // Method java/util/HashMap."<init>":(I)V
     112: astore        9
     114: new           #3                  // class java/util/HashMap
     117: dup
     118: aload         8
     120: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
     125: invokespecial #175                // Method java/util/HashMap."<init>":(I)V
     128: astore        10
     130: aload         8
     132: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     137: astore        11
     139: aload         11
     141: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          245
     149: aload         11
     151: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
     159: astore        12
     161: aload         12
     163: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     166: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     169: astore        13
     171: aload         9
     173: aload         13
     175: invokeinterface #170,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: checkcast     #149                // class java/util/List
     183: astore        14
     185: aload         14
     187: ifnonnull     211
     190: new           #9                  // class java/util/ArrayList
     193: dup
     194: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
     197: astore        14
     199: aload         9
     201: aload         13
     203: aload         14
     205: invokeinterface #176,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     210: pop
     211: aload         14
     213: aload         12
     215: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     220: pop
     221: aload         10
     223: aload         12
     225: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
     228: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     231: aload         12
     233: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
     236: invokeinterface #176,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     241: pop
     242: goto          139
     245: aload         7
     247: aload_2
     248: new           #171                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache
     251: dup
     252: aload_0
     253: aload         9
     255: aload         10
     257: invokespecial #178                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;Ljava/util/Map;Ljava/util/Map;)V
     260: invokeinterface #176,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     265: pop
     266: aload_0
     267: aload         7
     269: putfield      #5                  // Field triggerRouterCacheByNodeGroupId:Ljava/util/Map;
     272: aload_0
     273: getfield      #5                  // Field triggerRouterCacheByNodeGroupId:Ljava/util/Map;
     276: ifnonnull     283
     279: aconst_null
     280: goto          296
     283: aload_0
     284: getfield      #5                  // Field triggerRouterCacheByNodeGroupId:Ljava/util/Map;
     287: aload_2
     288: invokeinterface #170,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     293: checkcast     #171                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache
     296: astore        5
     298: aload         6
     300: monitorexit
     301: goto          312
     304: astore        15
     306: aload         6
     308: monitorexit
     309: aload         15
     311: athrow
     312: aload         5
     314: areturn
    Exception table:
       from    to  target type
          75   301   304   any
         304   309   304   any

  public org.jumpmind.symmetric.model.Router getActiveRouterByIdForCurrentNode(java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #144                // Method getTriggerRoutersCacheForCurrentNode:(Z)Lorg/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache;
       5: getfield      #179                // Field org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRoutersCache.routersByRouterId:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #170,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #180                // class org/jumpmind/symmetric/model/Router
      17: areturn

  public java.util.List<org.jumpmind.symmetric.model.Router> getRoutersByGroupLink(org.jumpmind.symmetric.model.NodeGroupLink);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_3
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #181                // String select
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #137                // String selectRoutersColumnList
      18: aastore
      19: dup
      20: iconst_2
      21: ldc           #182                // String selectRouterByNodeGroupLinkWhereSql
      23: aastore
      24: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      27: new           #183                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$RouterMapper
      30: dup
      31: aload_0
      32: invokespecial #184                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$RouterMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      35: iconst_2
      36: anewarray     #33                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_1
      42: invokevirtual #154                // Method org/jumpmind/symmetric/model/NodeGroupLink.getSourceNodeGroupId:()Ljava/lang/String;
      45: aastore
      46: dup
      47: iconst_1
      48: aload_1
      49: invokevirtual #156                // Method org/jumpmind/symmetric/model/NodeGroupLink.getTargetNodeGroupId:()Ljava/lang/String;
      52: aastore
      53: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      58: areturn

  public org.jumpmind.symmetric.model.Trigger getTriggerById(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #185                // Method getTriggerById:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/Trigger;
       6: areturn

  public org.jumpmind.symmetric.model.Trigger getTriggerById(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #168                // String cache.trigger.router.time.ms
       6: invokeinterface #169,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      11: lstore_3
      12: aload_0
      13: getfield      #186                // Field triggersCache:Ljava/util/Map;
      16: astore        5
      18: aload         5
      20: ifnull        51
      23: aload         5
      25: aload_1
      26: invokeinterface #187,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      31: ifeq          51
      34: iload_2
      35: ifne          51
      38: invokestatic  #172                // Method java/lang/System.currentTimeMillis:()J
      41: aload_0
      42: getfield      #188                // Field triggersCacheTime:J
      45: lsub
      46: lload_3
      47: lcmp
      48: ifle          180
      51: aload_0
      52: dup
      53: astore        6
      55: monitorenter
      56: aload_0
      57: invokestatic  #172                // Method java/lang/System.currentTimeMillis:()J
      60: putfield      #188                // Field triggersCacheTime:J
      63: new           #9                  // class java/util/ArrayList
      66: dup
      67: aload_0
      68: invokevirtual #189                // Method getTriggers:()Ljava/util/List;
      71: invokespecial #92                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      74: astore        7
      76: aload         7
      78: aload_0
      79: invokestatic  #114                // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      82: iconst_0
      83: anewarray     #26                 // class java/lang/String
      86: invokevirtual #116                // Method buildTriggersForSymmetricTables:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
      89: invokeinterface #162,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      94: pop
      95: new           #3                  // class java/util/HashMap
      98: dup
      99: aload         7
     101: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
     106: invokespecial #175                // Method java/util/HashMap."<init>":(I)V
     109: astore        5
     111: aload         7
     113: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     118: astore        8
     120: aload         8
     122: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     127: ifeq          160
     130: aload         8
     132: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #48                 // class org/jumpmind/symmetric/model/Trigger
     140: astore        9
     142: aload         5
     144: aload         9
     146: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     149: aload         9
     151: invokeinterface #176,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: goto          120
     160: aload_0
     161: aload         5
     163: putfield      #186                // Field triggersCache:Ljava/util/Map;
     166: aload         6
     168: monitorexit
     169: goto          180
     172: astore        10
     174: aload         6
     176: monitorexit
     177: aload         10
     179: athrow
     180: aload         5
     182: aload_1
     183: invokeinterface #170,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     188: checkcast     #48                 // class org/jumpmind/symmetric/model/Trigger
     191: areturn
    Exception table:
       from    to  target type
          56   169   172   any
         172   177   172   any

  public org.jumpmind.symmetric.model.Router getRouterById(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #190                // Method getRouterById:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/Router;
       6: areturn

  public org.jumpmind.symmetric.model.Router getRouterById(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #168                // String cache.trigger.router.time.ms
       6: invokeinterface #169,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getLong:(Ljava/lang/String;)J
      11: lstore_3
      12: aload_0
      13: getfield      #191                // Field routersCache:Ljava/util/Map;
      16: astore        5
      18: aload         5
      20: ifnull        40
      23: iload_2
      24: ifne          40
      27: invokestatic  #172                // Method java/lang/System.currentTimeMillis:()J
      30: aload_0
      31: getfield      #192                // Field routersCacheTime:J
      34: lsub
      35: lload_3
      36: lcmp
      37: ifle          143
      40: aload_0
      41: dup
      42: astore        6
      44: monitorenter
      45: aload_0
      46: invokestatic  #172                // Method java/lang/System.currentTimeMillis:()J
      49: putfield      #192                // Field routersCacheTime:J
      52: aload_0
      53: invokevirtual #193                // Method getRouters:()Ljava/util/List;
      56: astore        7
      58: new           #3                  // class java/util/HashMap
      61: dup
      62: aload         7
      64: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      69: invokespecial #175                // Method java/util/HashMap."<init>":(I)V
      72: astore        5
      74: aload         7
      76: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      81: astore        8
      83: aload         8
      85: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          123
      93: aload         8
      95: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #180                // class org/jumpmind/symmetric/model/Router
     103: astore        9
     105: aload         5
     107: aload         9
     109: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     112: aload         9
     114: invokeinterface #176,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: goto          83
     123: aload_0
     124: aload         5
     126: putfield      #191                // Field routersCache:Ljava/util/Map;
     129: aload         6
     131: monitorexit
     132: goto          143
     135: astore        10
     137: aload         6
     139: monitorexit
     140: aload         10
     142: athrow
     143: aload         5
     145: aload_1
     146: invokeinterface #170,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     151: checkcast     #180                // class org/jumpmind/symmetric/model/Router
     154: areturn
    Exception table:
       from    to  target type
          45   132   135   any
         135   140   135   any

  public java.util.List<org.jumpmind.symmetric.model.Router> getRouters();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_3
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #24                 // String select
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #137                // String selectRoutersColumnList
      18: aastore
      19: dup
      20: iconst_2
      21: ldc           #194                // String selectRoutersSql
      23: aastore
      24: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      27: new           #183                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$RouterMapper
      30: dup
      31: aload_0
      32: invokespecial #184                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$RouterMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      35: iconst_0
      36: anewarray     #33                 // class java/lang/Object
      39: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      44: areturn

  public java.util.List<org.jumpmind.symmetric.model.TriggerRouter> getAllTriggerRoutersForCurrentNode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: ldc           #195                // String activeTriggersForSourceNodeGroupSql
       7: invokespecial #135                // Method getTriggerRouterSql:(Ljava/lang/String;)Ljava/lang/String;
      10: new           #141                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper
      13: dup
      14: aload_0
      15: invokespecial #142                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      18: iconst_1
      19: anewarray     #33                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      31: astore_2
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokevirtual #196                // Method mergeInConfigurationTablesTriggerRoutersForCurrentNode:(Ljava/lang/String;Ljava/util/List;)V
      38: aload_2
      39: areturn

  public java.util.List<org.jumpmind.symmetric.model.TriggerRouter> getAllTriggerRoutersForReloadForCurrentNode(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: ldc           #197                // String activeTriggersForReloadSql
       7: invokespecial #135                // Method getTriggerRouterSql:(Ljava/lang/String;)Ljava/lang/String;
      10: new           #141                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper
      13: dup
      14: aload_0
      15: invokespecial #142                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      18: iconst_3
      19: anewarray     #33                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: dup
      27: iconst_1
      28: aload_2
      29: aastore
      30: dup
      31: iconst_2
      32: ldc           #113                // String config
      34: aastore
      35: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      40: areturn

  public org.jumpmind.symmetric.model.TriggerRouter findTriggerRouterById(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: ldc           #198                // String selectTriggerRouterSql
       7: invokespecial #135                // Method getTriggerRouterSql:(Ljava/lang/String;)Ljava/lang/String;
      10: new           #141                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper
      13: dup
      14: aload_0
      15: invokespecial #142                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$TriggerRouterMapper."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;)V
      18: iconst_2
      19: anewarray     #33                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: dup
      27: iconst_1
      28: aload_2
      29: aastore
      30: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      35: astore_3
      36: aload_3
      37: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      42: ifle          56
      45: aload_3
      46: iconst_0
      47: invokeinterface #119,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      52: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
      55: areturn
      56: aconst_null
      57: areturn

  public java.util.Map<java.lang.String, java.util.List<org.jumpmind.symmetric.model.TriggerRouter>> getTriggerRoutersByChannel(java.lang.String);
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      12: aload_0
      13: ldc           #199                // String selectGroupTriggersSql
      15: invokespecial #135                // Method getTriggerRouterSql:(Ljava/lang/String;)Ljava/lang/String;
      18: new           #200                // class org/jumpmind/symmetric/service/impl/TriggerRouterService$1
      21: dup
      22: aload_0
      23: aload_2
      24: invokespecial #201                // Method org/jumpmind/symmetric/service/impl/TriggerRouterService$1."<init>":(Lorg/jumpmind/symmetric/service/impl/TriggerRouterService;Ljava/util/Map;)V
      27: iconst_2
      28: anewarray     #33                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: dup
      36: iconst_1
      37: aload_1
      38: aastore
      39: invokeinterface #34,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
      44: pop
      45: aload_2
      46: areturn

  public void insert(org.jumpmind.symmetric.model.TriggerHistory);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #202                // String insertTriggerHistorySql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: bipush        14
      19: anewarray     #33                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #203                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      35: aastore
      36: dup
      37: iconst_2
      38: aload_1
      39: invokevirtual #205                // Method org/jumpmind/symmetric/model/TriggerHistory.getTableHash:()I
      42: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: aastore
      46: dup
      47: iconst_3
      48: aload_1
      49: invokevirtual #206                // Method org/jumpmind/symmetric/model/TriggerHistory.getCreateTime:()Ljava/util/Date;
      52: aastore
      53: dup
      54: iconst_4
      55: aload_1
      56: invokevirtual #207                // Method org/jumpmind/symmetric/model/TriggerHistory.getColumnNames:()Ljava/lang/String;
      59: aastore
      60: dup
      61: iconst_5
      62: aload_1
      63: invokevirtual #208                // Method org/jumpmind/symmetric/model/TriggerHistory.getPkColumnNames:()Ljava/lang/String;
      66: aastore
      67: dup
      68: bipush        6
      70: aload_1
      71: invokevirtual #209                // Method org/jumpmind/symmetric/model/TriggerHistory.getLastTriggerBuildReason:()Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
      74: invokevirtual #210                // Method org/jumpmind/symmetric/model/TriggerReBuildReason.getCode:()Ljava/lang/String;
      77: aastore
      78: dup
      79: bipush        7
      81: aload_1
      82: invokevirtual #211                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForDeleteTrigger:()Ljava/lang/String;
      85: aastore
      86: dup
      87: bipush        8
      89: aload_1
      90: invokevirtual #212                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForInsertTrigger:()Ljava/lang/String;
      93: aastore
      94: dup
      95: bipush        9
      97: aload_1
      98: invokevirtual #213                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForUpdateTrigger:()Ljava/lang/String;
     101: aastore
     102: dup
     103: bipush        10
     105: aload_1
     106: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     109: aastore
     110: dup
     111: bipush        11
     113: aload_1
     114: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     117: aastore
     118: dup
     119: bipush        12
     121: aload_1
     122: invokevirtual #214                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerRowHash:()J
     125: invokestatic  #215                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     128: aastore
     129: dup
     130: bipush        13
     132: aload_1
     133: invokevirtual #65                 // Method org/jumpmind/symmetric/model/TriggerHistory.getErrorMessage:()Ljava/lang/String;
     136: aastore
     137: bipush        14
     139: newarray       int
     141: dup
     142: iconst_0
     143: bipush        12
     145: iastore
     146: dup
     147: iconst_1
     148: bipush        12
     150: iastore
     151: dup
     152: iconst_2
     153: bipush        -5
     155: iastore
     156: dup
     157: iconst_3
     158: bipush        93
     160: iastore
     161: dup
     162: iconst_4
     163: bipush        12
     165: iastore
     166: dup
     167: iconst_5
     168: bipush        12
     170: iastore
     171: dup
     172: bipush        6
     174: iconst_1
     175: iastore
     176: dup
     177: bipush        7
     179: bipush        12
     181: iastore
     182: dup
     183: bipush        8
     185: bipush        12
     187: iastore
     188: dup
     189: bipush        9
     191: bipush        12
     193: iastore
     194: dup
     195: bipush        10
     197: bipush        12
     199: iastore
     200: dup
     201: bipush        11
     203: bipush        12
     205: iastore
     206: dup
     207: bipush        12
     209: bipush        -5
     211: iastore
     212: dup
     213: bipush        13
     215: bipush        12
     217: iastore
     218: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     223: pop
     224: return

  public void deleteTriggerRouter(org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #216                // String deleteTriggerRouterSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_2
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      27: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      37: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
      40: aastore
      41: invokeinterface #41,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      46: pop
      47: return

  public void saveTriggerRouter(org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #217                // Method saveTriggerRouter:(Lorg/jumpmind/symmetric/model/TriggerRouter;Z)V
       6: return

  public void saveTriggerRouter(org.jumpmind.symmetric.model.TriggerRouter, boolean);
    Code:
       0: iload_2
       1: ifne          20
       4: aload_0
       5: aload_1
       6: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
       9: invokevirtual #60                 // Method saveTrigger:(Lorg/jumpmind/symmetric/model/Trigger;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
      17: invokevirtual #218                // Method saveRouter:(Lorg/jumpmind/symmetric/model/Router;)V
      20: aload_1
      21: new           #56                 // class java/util/Date
      24: dup
      25: invokespecial #57                 // Method java/util/Date."<init>":()V
      28: invokevirtual #131                // Method org/jumpmind/symmetric/model/TriggerRouter.setLastUpdateTime:(Ljava/util/Date;)V
      31: iconst_0
      32: aload_0
      33: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      36: aload_0
      37: iconst_1
      38: anewarray     #26                 // class java/lang/String
      41: dup
      42: iconst_0
      43: ldc           #219                // String updateTriggerRouterSql
      45: aastore
      46: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      49: bipush        7
      51: anewarray     #33                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: invokevirtual #220                // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
      60: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: aastore
      64: dup
      65: iconst_1
      66: aload_1
      67: invokevirtual #221                // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadSelect:()Ljava/lang/String;
      70: aastore
      71: dup
      72: iconst_2
      73: aload_1
      74: invokevirtual #222                // Method org/jumpmind/symmetric/model/TriggerRouter.isPingBackEnabled:()Z
      77: ifeq          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aastore
      89: dup
      90: iconst_3
      91: aload_1
      92: invokevirtual #223                // Method org/jumpmind/symmetric/model/TriggerRouter.getLastUpdateBy:()Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_4
      98: aload_1
      99: invokevirtual #224                // Method org/jumpmind/symmetric/model/TriggerRouter.getLastUpdateTime:()Ljava/util/Date;
     102: aastore
     103: dup
     104: iconst_5
     105: aload_1
     106: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     109: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     112: aastore
     113: dup
     114: bipush        6
     116: aload_1
     117: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
     120: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     123: aastore
     124: bipush        7
     126: newarray       int
     128: dup
     129: iconst_0
     130: iconst_2
     131: iastore
     132: dup
     133: iconst_1
     134: bipush        12
     136: iastore
     137: dup
     138: iconst_2
     139: iconst_5
     140: iastore
     141: dup
     142: iconst_3
     143: bipush        12
     145: iastore
     146: dup
     147: iconst_4
     148: bipush        93
     150: iastore
     151: dup
     152: iconst_5
     153: bipush        12
     155: iastore
     156: dup
     157: bipush        6
     159: bipush        12
     161: iastore
     162: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     167: if_icmpne     328
     170: aload_1
     171: aload_1
     172: invokevirtual #224                // Method org/jumpmind/symmetric/model/TriggerRouter.getLastUpdateTime:()Ljava/util/Date;
     175: invokevirtual #225                // Method org/jumpmind/symmetric/model/TriggerRouter.setCreateTime:(Ljava/util/Date;)V
     178: aload_0
     179: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     182: aload_0
     183: iconst_1
     184: anewarray     #26                 // class java/lang/String
     187: dup
     188: iconst_0
     189: ldc           #226                // String insertTriggerRouterSql
     191: aastore
     192: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     195: bipush        8
     197: anewarray     #33                 // class java/lang/Object
     200: dup
     201: iconst_0
     202: aload_1
     203: invokevirtual #220                // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadOrder:()I
     206: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     209: aastore
     210: dup
     211: iconst_1
     212: aload_1
     213: invokevirtual #221                // Method org/jumpmind/symmetric/model/TriggerRouter.getInitialLoadSelect:()Ljava/lang/String;
     216: aastore
     217: dup
     218: iconst_2
     219: aload_1
     220: invokevirtual #222                // Method org/jumpmind/symmetric/model/TriggerRouter.isPingBackEnabled:()Z
     223: ifeq          230
     226: iconst_1
     227: goto          231
     230: iconst_0
     231: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     234: aastore
     235: dup
     236: iconst_3
     237: aload_1
     238: invokevirtual #227                // Method org/jumpmind/symmetric/model/TriggerRouter.getCreateTime:()Ljava/util/Date;
     241: aastore
     242: dup
     243: iconst_4
     244: aload_1
     245: invokevirtual #223                // Method org/jumpmind/symmetric/model/TriggerRouter.getLastUpdateBy:()Ljava/lang/String;
     248: aastore
     249: dup
     250: iconst_5
     251: aload_1
     252: invokevirtual #224                // Method org/jumpmind/symmetric/model/TriggerRouter.getLastUpdateTime:()Ljava/util/Date;
     255: aastore
     256: dup
     257: bipush        6
     259: aload_1
     260: invokevirtual #151                // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     263: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     266: aastore
     267: dup
     268: bipush        7
     270: aload_1
     271: invokevirtual #125                // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
     274: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     277: aastore
     278: bipush        8
     280: newarray       int
     282: dup
     283: iconst_0
     284: iconst_2
     285: iastore
     286: dup
     287: iconst_1
     288: bipush        12
     290: iastore
     291: dup
     292: iconst_2
     293: iconst_5
     294: iastore
     295: dup
     296: iconst_3
     297: bipush        93
     299: iastore
     300: dup
     301: iconst_4
     302: bipush        12
     304: iastore
     305: dup
     306: iconst_5
     307: bipush        93
     309: iastore
     310: dup
     311: bipush        6
     313: bipush        12
     315: iastore
     316: dup
     317: bipush        7
     319: bipush        12
     321: iastore
     322: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     327: pop
     328: return

  protected void resetTriggerRouterCacheByNodeGroupId();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #173                // Field triggerRouterCacheTime:J
       5: return

  public void saveRouter(org.jumpmind.symmetric.model.Router);
    Code:
       0: aload_1
       1: new           #56                 // class java/util/Date
       4: dup
       5: invokespecial #57                 // Method java/util/Date."<init>":()V
       8: invokevirtual #130                // Method org/jumpmind/symmetric/model/Router.setLastUpdateTime:(Ljava/util/Date;)V
      11: aload_1
      12: invokevirtual #228                // Method org/jumpmind/symmetric/model/Router.nullOutBlankFields:()V
      15: iconst_0
      16: aload_0
      17: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      20: aload_0
      21: iconst_1
      22: anewarray     #26                 // class java/lang/String
      25: dup
      26: iconst_0
      27: ldc           #229                // String updateRouterSql
      29: aastore
      30: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      33: bipush        13
      35: anewarray     #33                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: invokevirtual #230                // Method org/jumpmind/symmetric/model/Router.getTargetCatalogName:()Ljava/lang/String;
      44: aastore
      45: dup
      46: iconst_1
      47: aload_1
      48: invokevirtual #231                // Method org/jumpmind/symmetric/model/Router.getTargetSchemaName:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_2
      54: aload_1
      55: invokevirtual #232                // Method org/jumpmind/symmetric/model/Router.getTargetTableName:()Ljava/lang/String;
      58: aastore
      59: dup
      60: iconst_3
      61: aload_1
      62: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
      65: invokevirtual #154                // Method org/jumpmind/symmetric/model/NodeGroupLink.getSourceNodeGroupId:()Ljava/lang/String;
      68: aastore
      69: dup
      70: iconst_4
      71: aload_1
      72: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
      75: invokevirtual #156                // Method org/jumpmind/symmetric/model/NodeGroupLink.getTargetNodeGroupId:()Ljava/lang/String;
      78: aastore
      79: dup
      80: iconst_5
      81: aload_1
      82: invokevirtual #233                // Method org/jumpmind/symmetric/model/Router.getRouterType:()Ljava/lang/String;
      85: aastore
      86: dup
      87: bipush        6
      89: aload_1
      90: invokevirtual #234                // Method org/jumpmind/symmetric/model/Router.getRouterExpression:()Ljava/lang/String;
      93: aastore
      94: dup
      95: bipush        7
      97: aload_1
      98: invokevirtual #235                // Method org/jumpmind/symmetric/model/Router.isSyncOnUpdate:()Z
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     112: aastore
     113: dup
     114: bipush        8
     116: aload_1
     117: invokevirtual #236                // Method org/jumpmind/symmetric/model/Router.isSyncOnInsert:()Z
     120: ifeq          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     131: aastore
     132: dup
     133: bipush        9
     135: aload_1
     136: invokevirtual #237                // Method org/jumpmind/symmetric/model/Router.isSyncOnDelete:()Z
     139: ifeq          146
     142: iconst_1
     143: goto          147
     146: iconst_0
     147: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     150: aastore
     151: dup
     152: bipush        10
     154: aload_1
     155: invokevirtual #238                // Method org/jumpmind/symmetric/model/Router.getLastUpdateBy:()Ljava/lang/String;
     158: aastore
     159: dup
     160: bipush        11
     162: aload_1
     163: invokevirtual #239                // Method org/jumpmind/symmetric/model/Router.getLastUpdateTime:()Ljava/util/Date;
     166: aastore
     167: dup
     168: bipush        12
     170: aload_1
     171: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     174: aastore
     175: bipush        13
     177: newarray       int
     179: dup
     180: iconst_0
     181: bipush        12
     183: iastore
     184: dup
     185: iconst_1
     186: bipush        12
     188: iastore
     189: dup
     190: iconst_2
     191: bipush        12
     193: iastore
     194: dup
     195: iconst_3
     196: bipush        12
     198: iastore
     199: dup
     200: iconst_4
     201: bipush        12
     203: iastore
     204: dup
     205: iconst_5
     206: bipush        12
     208: iastore
     209: dup
     210: bipush        6
     212: bipush        12
     214: iastore
     215: dup
     216: bipush        7
     218: iconst_5
     219: iastore
     220: dup
     221: bipush        8
     223: iconst_5
     224: iastore
     225: dup
     226: bipush        9
     228: iconst_5
     229: iastore
     230: dup
     231: bipush        10
     233: bipush        12
     235: iastore
     236: dup
     237: bipush        11
     239: bipush        93
     241: iastore
     242: dup
     243: bipush        12
     245: bipush        12
     247: iastore
     248: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     253: if_icmpne     516
     256: aload_1
     257: aload_1
     258: invokevirtual #239                // Method org/jumpmind/symmetric/model/Router.getLastUpdateTime:()Ljava/util/Date;
     261: invokevirtual #240                // Method org/jumpmind/symmetric/model/Router.setCreateTime:(Ljava/util/Date;)V
     264: aload_0
     265: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     268: aload_0
     269: iconst_1
     270: anewarray     #26                 // class java/lang/String
     273: dup
     274: iconst_0
     275: ldc           #241                // String insertRouterSql
     277: aastore
     278: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     281: bipush        14
     283: anewarray     #33                 // class java/lang/Object
     286: dup
     287: iconst_0
     288: aload_1
     289: invokevirtual #230                // Method org/jumpmind/symmetric/model/Router.getTargetCatalogName:()Ljava/lang/String;
     292: aastore
     293: dup
     294: iconst_1
     295: aload_1
     296: invokevirtual #231                // Method org/jumpmind/symmetric/model/Router.getTargetSchemaName:()Ljava/lang/String;
     299: aastore
     300: dup
     301: iconst_2
     302: aload_1
     303: invokevirtual #232                // Method org/jumpmind/symmetric/model/Router.getTargetTableName:()Ljava/lang/String;
     306: aastore
     307: dup
     308: iconst_3
     309: aload_1
     310: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
     313: invokevirtual #154                // Method org/jumpmind/symmetric/model/NodeGroupLink.getSourceNodeGroupId:()Ljava/lang/String;
     316: aastore
     317: dup
     318: iconst_4
     319: aload_1
     320: invokevirtual #155                // Method org/jumpmind/symmetric/model/Router.getNodeGroupLink:()Lorg/jumpmind/symmetric/model/NodeGroupLink;
     323: invokevirtual #156                // Method org/jumpmind/symmetric/model/NodeGroupLink.getTargetNodeGroupId:()Ljava/lang/String;
     326: aastore
     327: dup
     328: iconst_5
     329: aload_1
     330: invokevirtual #233                // Method org/jumpmind/symmetric/model/Router.getRouterType:()Ljava/lang/String;
     333: aastore
     334: dup
     335: bipush        6
     337: aload_1
     338: invokevirtual #234                // Method org/jumpmind/symmetric/model/Router.getRouterExpression:()Ljava/lang/String;
     341: aastore
     342: dup
     343: bipush        7
     345: aload_1
     346: invokevirtual #235                // Method org/jumpmind/symmetric/model/Router.isSyncOnUpdate:()Z
     349: ifeq          356
     352: iconst_1
     353: goto          357
     356: iconst_0
     357: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     360: aastore
     361: dup
     362: bipush        8
     364: aload_1
     365: invokevirtual #236                // Method org/jumpmind/symmetric/model/Router.isSyncOnInsert:()Z
     368: ifeq          375
     371: iconst_1
     372: goto          376
     375: iconst_0
     376: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     379: aastore
     380: dup
     381: bipush        9
     383: aload_1
     384: invokevirtual #237                // Method org/jumpmind/symmetric/model/Router.isSyncOnDelete:()Z
     387: ifeq          394
     390: iconst_1
     391: goto          395
     394: iconst_0
     395: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     398: aastore
     399: dup
     400: bipush        10
     402: aload_1
     403: invokevirtual #242                // Method org/jumpmind/symmetric/model/Router.getCreateTime:()Ljava/util/Date;
     406: aastore
     407: dup
     408: bipush        11
     410: aload_1
     411: invokevirtual #238                // Method org/jumpmind/symmetric/model/Router.getLastUpdateBy:()Ljava/lang/String;
     414: aastore
     415: dup
     416: bipush        12
     418: aload_1
     419: invokevirtual #239                // Method org/jumpmind/symmetric/model/Router.getLastUpdateTime:()Ljava/util/Date;
     422: aastore
     423: dup
     424: bipush        13
     426: aload_1
     427: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     430: aastore
     431: bipush        14
     433: newarray       int
     435: dup
     436: iconst_0
     437: bipush        12
     439: iastore
     440: dup
     441: iconst_1
     442: bipush        12
     444: iastore
     445: dup
     446: iconst_2
     447: bipush        12
     449: iastore
     450: dup
     451: iconst_3
     452: bipush        12
     454: iastore
     455: dup
     456: iconst_4
     457: bipush        12
     459: iastore
     460: dup
     461: iconst_5
     462: bipush        12
     464: iastore
     465: dup
     466: bipush        6
     468: bipush        12
     470: iastore
     471: dup
     472: bipush        7
     474: iconst_5
     475: iastore
     476: dup
     477: bipush        8
     479: iconst_5
     480: iastore
     481: dup
     482: bipush        9
     484: iconst_5
     485: iastore
     486: dup
     487: bipush        10
     489: bipush        93
     491: iastore
     492: dup
     493: bipush        11
     495: bipush        12
     497: iastore
     498: dup
     499: bipush        12
     501: bipush        93
     503: iastore
     504: dup
     505: bipush        13
     507: bipush        12
     509: iastore
     510: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     515: pop
     516: aload_0
     517: invokevirtual #243                // Method resetTriggerRouterCacheByNodeGroupId:()V
     520: return

  public boolean isRouterBeingUsed(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       4: aload_0
       5: iconst_1
       6: anewarray     #26                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #244                // String countTriggerRoutersByRouterIdSql
      13: aastore
      14: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokeinterface #36,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/Object;)I
      30: ifle          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void deleteRouter(org.jumpmind.symmetric.model.Router);
    Code:
       0: aload_1
       1: ifnull        38
       4: aload_0
       5: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
       8: aload_0
       9: iconst_1
      10: anewarray     #26                 // class java/lang/String
      13: dup
      14: iconst_0
      15: ldc           #245                // String deleteRouterSql
      17: aastore
      18: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      21: iconst_1
      22: anewarray     #33                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_1
      28: invokevirtual #177                // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
      31: aastore
      32: invokeinterface #41,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;)I
      37: pop
      38: return

  public void saveTrigger(org.jumpmind.symmetric.model.Trigger);
    Code:
       0: aload_1
       1: new           #56                 // class java/util/Date
       4: dup
       5: invokespecial #57                 // Method java/util/Date."<init>":()V
       8: invokevirtual #58                 // Method org/jumpmind/symmetric/model/Trigger.setLastUpdateTime:(Ljava/util/Date;)V
      11: aload_1
      12: invokevirtual #246                // Method org/jumpmind/symmetric/model/Trigger.nullOutBlankFields:()V
      15: iconst_0
      16: aload_0
      17: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      20: aload_0
      21: iconst_1
      22: anewarray     #26                 // class java/lang/String
      25: dup
      26: iconst_0
      27: ldc           #247                // String updateTriggerSql
      29: aastore
      30: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
      33: bipush        23
      35: anewarray     #33                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      44: aastore
      45: dup
      46: iconst_1
      47: aload_1
      48: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      51: aastore
      52: dup
      53: iconst_2
      54: aload_1
      55: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      58: aastore
      59: dup
      60: iconst_3
      61: aload_1
      62: invokevirtual #248                // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      65: aastore
      66: dup
      67: iconst_4
      68: aload_1
      69: invokevirtual #249                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnUpdate:()Z
      72: ifeq          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: aastore
      84: dup
      85: iconst_5
      86: aload_1
      87: invokevirtual #250                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnInsert:()Z
      90: ifeq          97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     101: aastore
     102: dup
     103: bipush        6
     105: aload_1
     106: invokevirtual #251                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnDelete:()Z
     109: ifeq          116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     120: aastore
     121: dup
     122: bipush        7
     124: aload_1
     125: invokevirtual #252                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnIncomingBatch:()Z
     128: ifeq          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     139: aastore
     140: dup
     141: bipush        8
     143: aload_1
     144: invokevirtual #253                // Method org/jumpmind/symmetric/model/Trigger.isUseStreamLobs:()Z
     147: ifeq          154
     150: iconst_1
     151: goto          155
     154: iconst_0
     155: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     158: aastore
     159: dup
     160: bipush        9
     162: aload_1
     163: invokevirtual #254                // Method org/jumpmind/symmetric/model/Trigger.isUseCaptureLobs:()Z
     166: ifeq          173
     169: iconst_1
     170: goto          174
     173: iconst_0
     174: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     177: aastore
     178: dup
     179: bipush        10
     181: aload_1
     182: invokevirtual #255                // Method org/jumpmind/symmetric/model/Trigger.isUseCaptureOldData:()Z
     185: ifeq          192
     188: iconst_1
     189: goto          193
     192: iconst_0
     193: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     196: aastore
     197: dup
     198: bipush        11
     200: aload_1
     201: invokevirtual #256                // Method org/jumpmind/symmetric/model/Trigger.getNameForUpdateTrigger:()Ljava/lang/String;
     204: aastore
     205: dup
     206: bipush        12
     208: aload_1
     209: invokevirtual #257                // Method org/jumpmind/symmetric/model/Trigger.getNameForInsertTrigger:()Ljava/lang/String;
     212: aastore
     213: dup
     214: bipush        13
     216: aload_1
     217: invokevirtual #258                // Method org/jumpmind/symmetric/model/Trigger.getNameForDeleteTrigger:()Ljava/lang/String;
     220: aastore
     221: dup
     222: bipush        14
     224: aload_1
     225: invokevirtual #259                // Method org/jumpmind/symmetric/model/Trigger.getSyncOnUpdateCondition:()Ljava/lang/String;
     228: aastore
     229: dup
     230: bipush        15
     232: aload_1
     233: invokevirtual #260                // Method org/jumpmind/symmetric/model/Trigger.getSyncOnInsertCondition:()Ljava/lang/String;
     236: aastore
     237: dup
     238: bipush        16
     240: aload_1
     241: invokevirtual #261                // Method org/jumpmind/symmetric/model/Trigger.getSyncOnDeleteCondition:()Ljava/lang/String;
     244: aastore
     245: dup
     246: bipush        17
     248: aload_1
     249: invokevirtual #262                // Method org/jumpmind/symmetric/model/Trigger.getTxIdExpression:()Ljava/lang/String;
     252: aastore
     253: dup
     254: bipush        18
     256: aload_1
     257: invokevirtual #263                // Method org/jumpmind/symmetric/model/Trigger.getExcludedColumnNames:()Ljava/lang/String;
     260: aastore
     261: dup
     262: bipush        19
     264: aload_1
     265: invokevirtual #264                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateBy:()Ljava/lang/String;
     268: aastore
     269: dup
     270: bipush        20
     272: aload_1
     273: invokevirtual #129                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateTime:()Ljava/util/Date;
     276: aastore
     277: dup
     278: bipush        21
     280: aload_1
     281: invokevirtual #265                // Method org/jumpmind/symmetric/model/Trigger.getExternalSelect:()Ljava/lang/String;
     284: aastore
     285: dup
     286: bipush        22
     288: aload_1
     289: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     292: aastore
     293: bipush        23
     295: newarray       int
     297: dup
     298: iconst_0
     299: bipush        12
     301: iastore
     302: dup
     303: iconst_1
     304: bipush        12
     306: iastore
     307: dup
     308: iconst_2
     309: bipush        12
     311: iastore
     312: dup
     313: iconst_3
     314: bipush        12
     316: iastore
     317: dup
     318: iconst_4
     319: iconst_5
     320: iastore
     321: dup
     322: iconst_5
     323: iconst_5
     324: iastore
     325: dup
     326: bipush        6
     328: iconst_5
     329: iastore
     330: dup
     331: bipush        7
     333: iconst_5
     334: iastore
     335: dup
     336: bipush        8
     338: iconst_5
     339: iastore
     340: dup
     341: bipush        9
     343: iconst_5
     344: iastore
     345: dup
     346: bipush        10
     348: iconst_5
     349: iastore
     350: dup
     351: bipush        11
     353: bipush        12
     355: iastore
     356: dup
     357: bipush        12
     359: bipush        12
     361: iastore
     362: dup
     363: bipush        13
     365: bipush        12
     367: iastore
     368: dup
     369: bipush        14
     371: bipush        12
     373: iastore
     374: dup
     375: bipush        15
     377: bipush        12
     379: iastore
     380: dup
     381: bipush        16
     383: bipush        12
     385: iastore
     386: dup
     387: bipush        17
     389: bipush        12
     391: iastore
     392: dup
     393: bipush        18
     395: bipush        12
     397: iastore
     398: dup
     399: bipush        19
     401: bipush        12
     403: iastore
     404: dup
     405: bipush        20
     407: bipush        93
     409: iastore
     410: dup
     411: bipush        21
     413: bipush        12
     415: iastore
     416: dup
     417: bipush        22
     419: bipush        12
     421: iastore
     422: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     427: if_icmpne     865
     430: aload_1
     431: aload_1
     432: invokevirtual #129                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateTime:()Ljava/util/Date;
     435: invokevirtual #59                 // Method org/jumpmind/symmetric/model/Trigger.setCreateTime:(Ljava/util/Date;)V
     438: aload_0
     439: getfield      #21                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     442: aload_0
     443: iconst_1
     444: anewarray     #26                 // class java/lang/String
     447: dup
     448: iconst_0
     449: ldc_w         #266                // String insertTriggerSql
     452: aastore
     453: invokevirtual #29                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     456: bipush        24
     458: anewarray     #33                 // class java/lang/Object
     461: dup
     462: iconst_0
     463: aload_1
     464: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     467: aastore
     468: dup
     469: iconst_1
     470: aload_1
     471: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     474: aastore
     475: dup
     476: iconst_2
     477: aload_1
     478: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     481: aastore
     482: dup
     483: iconst_3
     484: aload_1
     485: invokevirtual #248                // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
     488: aastore
     489: dup
     490: iconst_4
     491: aload_1
     492: invokevirtual #249                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnUpdate:()Z
     495: ifeq          502
     498: iconst_1
     499: goto          503
     502: iconst_0
     503: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     506: aastore
     507: dup
     508: iconst_5
     509: aload_1
     510: invokevirtual #250                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnInsert:()Z
     513: ifeq          520
     516: iconst_1
     517: goto          521
     520: iconst_0
     521: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     524: aastore
     525: dup
     526: bipush        6
     528: aload_1
     529: invokevirtual #251                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnDelete:()Z
     532: ifeq          539
     535: iconst_1
     536: goto          540
     539: iconst_0
     540: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     543: aastore
     544: dup
     545: bipush        7
     547: aload_1
     548: invokevirtual #252                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnIncomingBatch:()Z
     551: ifeq          558
     554: iconst_1
     555: goto          559
     558: iconst_0
     559: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     562: aastore
     563: dup
     564: bipush        8
     566: aload_1
     567: invokevirtual #253                // Method org/jumpmind/symmetric/model/Trigger.isUseStreamLobs:()Z
     570: ifeq          577
     573: iconst_1
     574: goto          578
     577: iconst_0
     578: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     581: aastore
     582: dup
     583: bipush        9
     585: aload_1
     586: invokevirtual #254                // Method org/jumpmind/symmetric/model/Trigger.isUseCaptureLobs:()Z
     589: ifeq          596
     592: iconst_1
     593: goto          597
     596: iconst_0
     597: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     600: aastore
     601: dup
     602: bipush        10
     604: aload_1
     605: invokevirtual #255                // Method org/jumpmind/symmetric/model/Trigger.isUseCaptureOldData:()Z
     608: ifeq          615
     611: iconst_1
     612: goto          616
     615: iconst_0
     616: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     619: aastore
     620: dup
     621: bipush        11
     623: aload_1
     624: invokevirtual #256                // Method org/jumpmind/symmetric/model/Trigger.getNameForUpdateTrigger:()Ljava/lang/String;
     627: aastore
     628: dup
     629: bipush        12
     631: aload_1
     632: invokevirtual #257                // Method org/jumpmind/symmetric/model/Trigger.getNameForInsertTrigger:()Ljava/lang/String;
     635: aastore
     636: dup
     637: bipush        13
     639: aload_1
     640: invokevirtual #258                // Method org/jumpmind/symmetric/model/Trigger.getNameForDeleteTrigger:()Ljava/lang/String;
     643: aastore
     644: dup
     645: bipush        14
     647: aload_1
     648: invokevirtual #259                // Method org/jumpmind/symmetric/model/Trigger.getSyncOnUpdateCondition:()Ljava/lang/String;
     651: aastore
     652: dup
     653: bipush        15
     655: aload_1
     656: invokevirtual #260                // Method org/jumpmind/symmetric/model/Trigger.getSyncOnInsertCondition:()Ljava/lang/String;
     659: aastore
     660: dup
     661: bipush        16
     663: aload_1
     664: invokevirtual #261                // Method org/jumpmind/symmetric/model/Trigger.getSyncOnDeleteCondition:()Ljava/lang/String;
     667: aastore
     668: dup
     669: bipush        17
     671: aload_1
     672: invokevirtual #262                // Method org/jumpmind/symmetric/model/Trigger.getTxIdExpression:()Ljava/lang/String;
     675: aastore
     676: dup
     677: bipush        18
     679: aload_1
     680: invokevirtual #263                // Method org/jumpmind/symmetric/model/Trigger.getExcludedColumnNames:()Ljava/lang/String;
     683: aastore
     684: dup
     685: bipush        19
     687: aload_1
     688: invokevirtual #267                // Method org/jumpmind/symmetric/model/Trigger.getCreateTime:()Ljava/util/Date;
     691: aastore
     692: dup
     693: bipush        20
     695: aload_1
     696: invokevirtual #264                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateBy:()Ljava/lang/String;
     699: aastore
     700: dup
     701: bipush        21
     703: aload_1
     704: invokevirtual #129                // Method org/jumpmind/symmetric/model/Trigger.getLastUpdateTime:()Ljava/util/Date;
     707: aastore
     708: dup
     709: bipush        22
     711: aload_1
     712: invokevirtual #265                // Method org/jumpmind/symmetric/model/Trigger.getExternalSelect:()Ljava/lang/String;
     715: aastore
     716: dup
     717: bipush        23
     719: aload_1
     720: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     723: aastore
     724: bipush        24
     726: newarray       int
     728: dup
     729: iconst_0
     730: bipush        12
     732: iastore
     733: dup
     734: iconst_1
     735: bipush        12
     737: iastore
     738: dup
     739: iconst_2
     740: bipush        12
     742: iastore
     743: dup
     744: iconst_3
     745: bipush        12
     747: iastore
     748: dup
     749: iconst_4
     750: iconst_5
     751: iastore
     752: dup
     753: iconst_5
     754: iconst_5
     755: iastore
     756: dup
     757: bipush        6
     759: iconst_5
     760: iastore
     761: dup
     762: bipush        7
     764: iconst_5
     765: iastore
     766: dup
     767: bipush        8
     769: iconst_5
     770: iastore
     771: dup
     772: bipush        9
     774: iconst_5
     775: iastore
     776: dup
     777: bipush        10
     779: iconst_5
     780: iastore
     781: dup
     782: bipush        11
     784: bipush        12
     786: iastore
     787: dup
     788: bipush        12
     790: bipush        12
     792: iastore
     793: dup
     794: bipush        13
     796: bipush        12
     798: iastore
     799: dup
     800: bipush        14
     802: bipush        12
     804: iastore
     805: dup
     806: bipush        15
     808: bipush        12
     810: iastore
     811: dup
     812: bipush        16
     814: bipush        12
     816: iastore
     817: dup
     818: bipush        17
     820: bipush        12
     822: iastore
     823: dup
     824: bipush        18
     826: bipush        12
     828: iastore
     829: dup
     830: bipush        19
     832: bipush        93
     834: iastore
     835: dup
     836: bipush        20
     838: bipush        12
     840: iastore
     841: dup
     842: bipush        21
     844: bipush        93
     846: iastore
     847: dup
     848: bipush        22
     850: bipush        12
     852: iastore
     853: dup
     854: bipush        23
     856: bipush        12
     858: iastore
     859: invokeinterface #66,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
     864: pop
     865: return

  public void syncTriggers();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: invokevirtual #268                // Method syncTriggers:(Ljava/lang/StringBuilder;Z)V
       6: return

  public void syncTriggers(java.lang.StringBuilder, boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field clusterService:Lorg/jumpmind/symmetric/service/IClusterService;
       4: ldc_w         #269                // String SYNCTRIGGERS
       7: invokeinterface #270,  2          // InterfaceMethod org/jumpmind/symmetric/service/IClusterService.lock:(Ljava/lang/String;)Z
      12: ifeq          131
      15: aload_0
      16: dup
      17: astore_3
      18: monitorenter
      19: aload_0
      20: getfield      #271                // Field log:Lorg/slf4j/Logger;
      23: ldc_w         #272                // String Synchronizing triggers
      26: invokeinterface #273,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      31: aload_0
      32: getfield      #274                // Field platform:Lorg/jumpmind/db/platform/IDatabasePlatform;
      35: invokeinterface #275,  1          // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.resetCachedTableModel:()V
      40: aload_0
      41: getfield      #1                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      44: invokeinterface #276,  1          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.reloadChannels:()V
      49: aload_0
      50: invokevirtual #277                // Method getTriggersForCurrentNode:()Ljava/util/List;
      53: astore        4
      55: aload_0
      56: aload         4
      58: aload_1
      59: invokevirtual #278                // Method inactivateTriggers:(Ljava/util/List;Ljava/lang/StringBuilder;)V
      62: aload_0
      63: aload         4
      65: aload_1
      66: iload_2
      67: invokevirtual #279                // Method updateOrCreateDatabaseTriggers:(Ljava/util/List;Ljava/lang/StringBuilder;Z)V
      70: aload_0
      71: invokevirtual #243                // Method resetTriggerRouterCacheByNodeGroupId:()V
      74: jsr           88
      77: goto          116
      80: astore        5
      82: jsr           88
      85: aload         5
      87: athrow
      88: astore        6
      90: aload_0
      91: getfield      #13                 // Field clusterService:Lorg/jumpmind/symmetric/service/IClusterService;
      94: ldc_w         #269                // String SYNCTRIGGERS
      97: invokeinterface #280,  2          // InterfaceMethod org/jumpmind/symmetric/service/IClusterService.unlock:(Ljava/lang/String;)V
     102: aload_0
     103: getfield      #271                // Field log:Lorg/slf4j/Logger;
     106: ldc_w         #281                // String Done synchronizing triggers
     109: invokeinterface #273,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     114: ret           6
     116: aload_3
     117: monitorexit
     118: goto          128
     121: astore        7
     123: aload_3
     124: monitorexit
     125: aload         7
     127: athrow
     128: goto          143
     131: aload_0
     132: getfield      #271                // Field log:Lorg/slf4j/Logger;
     135: ldc_w         #282                // String Failed to synchronize trigger for {}
     138: invokeinterface #273,  2          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     143: return
    Exception table:
       from    to  target type
          19    77    80   any
          80    85    80   any
          19   118   121   any
         121   125   121   any

  protected java.util.Set<java.lang.String> getTriggerIdsFrom(java.util.List<org.jumpmind.symmetric.model.Trigger>);
    Code:
       0: new           #146                // class java/util/HashSet
       3: dup
       4: aload_1
       5: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I
      10: invokespecial #283                // Method java/util/HashSet."<init>":(I)V
      13: astore_2
      14: aload_1
      15: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          56
      30: aload_3
      31: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #48                 // class org/jumpmind/symmetric/model/Trigger
      39: astore        4
      41: aload_2
      42: aload         4
      44: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      47: invokeinterface #284,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: goto          21
      56: aload_2
      57: areturn

  protected void inactivateTriggers(java.util.List<org.jumpmind.symmetric.model.Trigger>, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #285                // Method getActiveTriggerHistories:()Ljava/util/List;
       4: astore_3
       5: aload_0
       6: aload_1
       7: invokevirtual #286                // Method getTriggerIdsFrom:(Ljava/util/List;)Ljava/util/Set;
      10: astore        4
      12: aload_3
      13: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        5
      20: aload         5
      22: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          379
      30: aload         5
      32: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #76                 // class org/jumpmind/symmetric/model/TriggerHistory
      40: astore        6
      42: aload         4
      44: aload         6
      46: invokevirtual #203                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
      49: invokeinterface #287,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      54: ifne          376
      57: aload_0
      58: getfield      #271                // Field log:Lorg/slf4j/Logger;
      61: ldc_w         #288                // String About to remove triggers for inactivated table: {}
      64: aload         6
      66: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      69: invokeinterface #289,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      74: aload_0
      75: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      78: aload_2
      79: aload         6
      81: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
      84: aload         6
      86: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
      89: aload         6
      91: invokevirtual #212                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForInsertTrigger:()Ljava/lang/String;
      94: aload         6
      96: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
      99: aload         6
     101: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     106: aload_0
     107: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     110: aload_2
     111: aload         6
     113: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     116: aload         6
     118: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     121: aload         6
     123: invokevirtual #211                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForDeleteTrigger:()Ljava/lang/String;
     126: aload         6
     128: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     131: aload         6
     133: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     138: aload_0
     139: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     142: aload_2
     143: aload         6
     145: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     148: aload         6
     150: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     153: aload         6
     155: invokevirtual #213                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForUpdateTrigger:()Ljava/lang/String;
     158: aload         6
     160: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     163: aload         6
     165: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     170: aload_0
     171: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     174: ldc_w         #291                // String auto.sync.triggers
     177: invokeinterface #104,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     182: ifeq          238
     185: aload_0
     186: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     189: ifnull        238
     192: aload_0
     193: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     196: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     201: astore        7
     203: aload         7
     205: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     210: ifeq          238
     213: aload         7
     215: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     220: checkcast     #293                // class org/jumpmind/symmetric/config/ITriggerCreationListener
     223: astore        8
     225: aload         8
     227: aconst_null
     228: aload         6
     230: invokeinterface #294,  3          // InterfaceMethod org/jumpmind/symmetric/config/ITriggerCreationListener.triggerInactivated:(Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     235: goto          203
     238: aload_0
     239: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     242: aload         6
     244: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     247: aload         6
     249: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     252: aload         6
     254: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     257: aload         6
     259: invokevirtual #212                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForInsertTrigger:()Ljava/lang/String;
     262: invokeinterface #295,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.doesTriggerExist:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     267: istore        7
     269: iload         7
     271: aload_0
     272: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     275: aload         6
     277: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     280: aload         6
     282: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     285: aload         6
     287: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     290: aload         6
     292: invokevirtual #213                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForUpdateTrigger:()Ljava/lang/String;
     295: invokeinterface #295,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.doesTriggerExist:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     300: ior
     301: istore        7
     303: iload         7
     305: aload_0
     306: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     309: aload         6
     311: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     314: aload         6
     316: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     319: aload         6
     321: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     324: aload         6
     326: invokevirtual #211                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForDeleteTrigger:()Ljava/lang/String;
     329: invokeinterface #295,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.doesTriggerExist:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     334: ior
     335: istore        7
     337: iload         7
     339: ifeq          370
     342: aload_0
     343: getfield      #271                // Field log:Lorg/slf4j/Logger;
     346: ldc_w         #296                // String There are triggers that have been marked as inactive.  Please remove triggers represented by trigger_id={} and trigger_hist_id={}
     349: aload         6
     351: invokevirtual #203                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerId:()Ljava/lang/String;
     354: aload         6
     356: invokevirtual #43                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     359: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     362: invokeinterface #297,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     367: goto          376
     370: aload_0
     371: aload         6
     373: invokevirtual #298                // Method inactivateTriggerHistory:(Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     376: goto          20
     379: return

  protected java.util.List<org.jumpmind.symmetric.model.TriggerRouter> toList(java.util.Collection<java.util.List<org.jumpmind.symmetric.model.TriggerRouter>>);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #148,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          79
      24: aload_3
      25: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #149                // class java/util/List
      33: astore        4
      35: aload         4
      37: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore        5
      44: aload         5
      46: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          76
      54: aload         5
      56: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #122                // class org/jumpmind/symmetric/model/TriggerRouter
      64: astore        6
      66: aload_2
      67: aload         6
      69: invokevirtual #299                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          44
      76: goto          15
      79: aload_2
      80: areturn

  protected java.util.List<org.jumpmind.symmetric.model.Trigger> getTriggersForCurrentNode();
    Code:
       0: new           #300                // class org/jumpmind/symmetric/config/TriggerSelector
       3: dup
       4: aload_0
       5: aload_0
       6: iconst_1
       7: invokevirtual #166                // Method getTriggerRoutersForCurrentNode:(Z)Ljava/util/Map;
      10: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokevirtual #301                // Method toList:(Ljava/util/Collection;)Ljava/util/List;
      18: invokespecial #302                // Method org/jumpmind/symmetric/config/TriggerSelector."<init>":(Ljava/util/Collection;)V
      21: invokevirtual #303                // Method org/jumpmind/symmetric/config/TriggerSelector.select:()Ljava/util/List;
      24: areturn

  protected java.util.Set<org.jumpmind.db.model.Table> getTablesForTrigger(org.jumpmind.symmetric.model.Trigger, java.util.List<org.jumpmind.symmetric.model.Trigger>);
    Code:
       0: new           #146                // class java/util/HashSet
       3: dup
       4: invokespecial #147                // Method java/util/HashSet."<init>":()V
       7: astore_3
       8: aload_1
       9: invokevirtual #304                // Method org/jumpmind/symmetric/model/Trigger.isSourceTableNameWildcarded:()Z
      12: ifeq          199
      15: aload_0
      16: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      19: invokeinterface #17,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      24: aload_1
      25: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
      32: iconst_1
      33: anewarray     #26                 // class java/lang/String
      36: dup
      37: iconst_0
      38: ldc_w         #305                // String TABLE
      41: aastore
      42: invokeinterface #306,  4          // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.readDatabase:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/jumpmind/db/model/Database;
      47: astore        4
      49: aload         4
      51: invokevirtual #307                // Method org/jumpmind/db/model/Database.getTables:()[Lorg/jumpmind/db/model/Table;
      54: astore        5
      56: aload_1
      57: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      60: ldc           #136                // String ,
      62: invokevirtual #308                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      65: astore        6
      67: aload         6
      69: astore        7
      71: aload         7
      73: arraylength
      74: istore        8
      76: iconst_0
      77: istore        9
      79: iload         9
      81: iload         8
      83: if_icmpge     196
      86: aload         7
      88: iload         9
      90: aaload
      91: astore        10
      93: aload         5
      95: astore        11
      97: aload         11
      99: arraylength
     100: istore        12
     102: iconst_0
     103: istore        13
     105: iload         13
     107: iload         12
     109: if_icmpge     190
     112: aload         11
     114: iload         13
     116: aaload
     117: astore        14
     119: aload         14
     121: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     124: aload         10
     126: invokestatic  #309                // Method org/jumpmind/util/FormatUtils.isWildCardMatch:(Ljava/lang/String;Ljava/lang/String;)Z
     129: ifeq          175
     132: aload_0
     133: aload         14
     135: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     138: aload_2
     139: invokespecial #310                // Method containsExactMatchForSourceTableName:(Ljava/lang/String;Ljava/util/List;)Z
     142: ifne          175
     145: aload         14
     147: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     150: invokevirtual #98                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     153: aload_0
     154: getfield      #94                 // Field tablePrefix:Ljava/lang/String;
     157: invokevirtual #311                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     160: ifne          175
     163: aload_3
     164: aload         14
     166: invokeinterface #284,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     171: pop
     172: goto          184
     175: aload_3
     176: aload         14
     178: invokeinterface #312,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     183: pop
     184: iinc          13, 1
     187: goto          105
     190: iinc          9, 1
     193: goto          79
     196: goto          242
     199: aload_0
     200: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     203: invokeinterface #17,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
     208: aload_1
     209: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     212: aload_1
     213: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     216: aload_1
     217: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     220: iconst_1
     221: invokeinterface #313,  5          // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getTableFromCache:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jumpmind/db/model/Table;
     226: astore        4
     228: aload         4
     230: ifnull        242
     233: aload_3
     234: aload         4
     236: invokeinterface #284,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     241: pop
     242: aload_3
     243: areturn

  private boolean containsExactMatchForSourceTableName(java.lang.String, java.util.List<org.jumpmind.symmetric.model.Trigger>);
    Code:
       0: aload_2
       1: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_3
      17: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #48                 // class org/jumpmind/symmetric/model/Trigger
      25: astore        4
      27: aload         4
      29: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      32: aload_1
      33: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          7
      44: iconst_0
      45: ireturn

  protected void updateOrCreateDatabaseTriggers(java.util.List<org.jumpmind.symmetric.model.Trigger>, java.lang.StringBuilder, boolean);
    Code:
       0: aload_1
       1: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          822
      18: aload         4
      20: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #48                 // class org/jumpmind/symmetric/model/Trigger
      28: astore        5
      30: aconst_null
      31: astore        6
      33: getstatic     #314                // Field org/jumpmind/symmetric/model/TriggerReBuildReason.NEW_TRIGGERS:Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
      36: astore        7
      38: aconst_null
      39: astore        8
      41: aload_0
      42: getfield      #1                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      45: aload         5
      47: invokevirtual #248                // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      50: invokeinterface #315,  2          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getChannel:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Channel;
      55: astore        9
      57: aload         9
      59: ifnonnull     115
      62: ldc_w         #316                // String Trigger %s had an unrecognized channel_id of \'%s\'.  Please check to make sure the channel exists.  Creating trigger on the \'%s\' channel
      65: iconst_3
      66: anewarray     #33                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload         5
      73: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
      76: aastore
      77: dup
      78: iconst_1
      79: aload         5
      81: invokevirtual #248                // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      84: aastore
      85: dup
      86: iconst_2
      87: ldc_w         #317                // String default
      90: aastore
      91: invokestatic  #318                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      94: astore        8
      96: aload_0
      97: getfield      #271                // Field log:Lorg/slf4j/Logger;
     100: aload         8
     102: invokeinterface #319,  2          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     107: aload         5
     109: ldc_w         #317                // String default
     112: invokevirtual #50                 // Method org/jumpmind/symmetric/model/Trigger.setChannelId:(Ljava/lang/String;)V
     115: aload_0
     116: aload         5
     118: aload_1
     119: invokevirtual #320                // Method getTablesForTrigger:(Lorg/jumpmind/symmetric/model/Trigger;Ljava/util/List;)Ljava/util/Set;
     122: astore        10
     124: aload         10
     126: invokeinterface #321,  1          // InterfaceMethod java/util/Set.size:()I
     131: ifle          561
     134: aload         10
     136: invokeinterface #61,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     141: astore        11
     143: aload         11
     145: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     150: ifeq          558
     153: aload         11
     155: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     160: checkcast     #62                 // class org/jumpmind/db/model/Table
     163: astore        12
     165: aload         12
     167: invokevirtual #322                // Method org/jumpmind/db/model/Table.getPrimaryKeyColumnCount:()I
     170: ifne          185
     173: aload         12
     175: invokevirtual #323                // Method org/jumpmind/db/model/Table.copy:()Lorg/jumpmind/db/model/Table;
     178: astore        12
     180: aload         12
     182: invokevirtual #324                // Method org/jumpmind/db/model/Table.makeAllColumnsPrimaryKeys:()V
     185: aload_0
     186: aload         5
     188: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     191: aload         5
     193: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     196: aload         5
     198: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     201: aload         5
     203: invokevirtual #304                // Method org/jumpmind/symmetric/model/Trigger.isSourceTableNameWildcarded:()Z
     206: ifeq          217
     209: aload         12
     211: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     214: goto          222
     217: aload         5
     219: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     222: invokevirtual #325                // Method getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
     225: astore        13
     227: iconst_0
     228: istore        14
     230: aload         13
     232: ifnonnull     246
     235: getstatic     #314                // Field org/jumpmind/symmetric/model/TriggerReBuildReason.NEW_TRIGGERS:Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
     238: astore        7
     240: iconst_1
     241: istore        14
     243: goto          320
     246: aload         12
     248: invokevirtual #326                // Method org/jumpmind/db/model/Table.calculateTableHashcode:()I
     251: aload         13
     253: invokevirtual #205                // Method org/jumpmind/symmetric/model/TriggerHistory.getTableHash:()I
     256: if_icmpeq     270
     259: getstatic     #327                // Field org/jumpmind/symmetric/model/TriggerReBuildReason.TABLE_SCHEMA_CHANGED:Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
     262: astore        7
     264: iconst_1
     265: istore        14
     267: goto          320
     270: aload         5
     272: aload         13
     274: invokevirtual #206                // Method org/jumpmind/symmetric/model/TriggerHistory.getCreateTime:()Ljava/util/Date;
     277: invokevirtual #328                // Method org/jumpmind/symmetric/model/Trigger.hasChangedSinceLastTriggerBuild:(Ljava/util/Date;)Z
     280: ifne          297
     283: aload         5
     285: invokevirtual #329                // Method org/jumpmind/symmetric/model/Trigger.toHashedValue:()J
     288: aload         13
     290: invokevirtual #214                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerRowHash:()J
     293: lcmp
     294: ifeq          308
     297: getstatic     #330                // Field org/jumpmind/symmetric/model/TriggerReBuildReason.TABLE_SYNC_CONFIGURATION_CHANGED:Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
     300: astore        7
     302: iconst_1
     303: istore        14
     305: goto          320
     308: iload_3
     309: ifeq          320
     312: getstatic     #331                // Field org/jumpmind/symmetric/model/TriggerReBuildReason.FORCED:Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
     315: astore        7
     317: iconst_1
     318: istore        14
     320: aload_0
     321: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     324: invokeinterface #17,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
     329: invokeinterface #332,  1          // InterfaceMethod org/jumpmind/db/platform/IDatabasePlatform.getDatabaseInfo:()Lorg/jumpmind/db/platform/DatabaseInfo;
     334: invokevirtual #333                // Method org/jumpmind/db/platform/DatabaseInfo.isTriggersSupported:()Z
     337: istore        15
     339: aload_0
     340: aload_2
     341: iload         14
     343: aload         5
     345: getstatic     #334                // Field org/jumpmind/symmetric/io/data/DataEventType.INSERT:Lorg/jumpmind/symmetric/io/data/DataEventType;
     348: aload         7
     350: aload         13
     352: aconst_null
     353: aload         5
     355: invokevirtual #250                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnInsert:()Z
     358: ifeq          370
     361: iload         15
     363: ifeq          370
     366: iconst_1
     367: goto          371
     370: iconst_0
     371: aload         12
     373: invokevirtual #335                // Method rebuildTriggerIfNecessary:(Ljava/lang/StringBuilder;ZLorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/io/data/DataEventType;Lorg/jumpmind/symmetric/model/TriggerReBuildReason;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/TriggerHistory;ZLorg/jumpmind/db/model/Table;)Lorg/jumpmind/symmetric/model/TriggerHistory;
     376: astore        6
     378: aload_0
     379: aload_2
     380: iload         14
     382: aload         5
     384: getstatic     #336                // Field org/jumpmind/symmetric/io/data/DataEventType.UPDATE:Lorg/jumpmind/symmetric/io/data/DataEventType;
     387: aload         7
     389: aload         13
     391: aload         6
     393: aload         5
     395: invokevirtual #249                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnUpdate:()Z
     398: ifeq          410
     401: iload         15
     403: ifeq          410
     406: iconst_1
     407: goto          411
     410: iconst_0
     411: aload         12
     413: invokevirtual #335                // Method rebuildTriggerIfNecessary:(Ljava/lang/StringBuilder;ZLorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/io/data/DataEventType;Lorg/jumpmind/symmetric/model/TriggerReBuildReason;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/TriggerHistory;ZLorg/jumpmind/db/model/Table;)Lorg/jumpmind/symmetric/model/TriggerHistory;
     416: astore        6
     418: aload_0
     419: aload_2
     420: iload         14
     422: aload         5
     424: getstatic     #337                // Field org/jumpmind/symmetric/io/data/DataEventType.DELETE:Lorg/jumpmind/symmetric/io/data/DataEventType;
     427: aload         7
     429: aload         13
     431: aload         6
     433: aload         5
     435: invokevirtual #251                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnDelete:()Z
     438: ifeq          450
     441: iload         15
     443: ifeq          450
     446: iconst_1
     447: goto          451
     450: iconst_0
     451: aload         12
     453: invokevirtual #335                // Method rebuildTriggerIfNecessary:(Ljava/lang/StringBuilder;ZLorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/io/data/DataEventType;Lorg/jumpmind/symmetric/model/TriggerReBuildReason;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/TriggerHistory;ZLorg/jumpmind/db/model/Table;)Lorg/jumpmind/symmetric/model/TriggerHistory;
     456: astore        6
     458: aload         13
     460: ifnull        474
     463: aload         6
     465: ifnull        474
     468: aload_0
     469: aload         13
     471: invokevirtual #298                // Method inactivateTriggerHistory:(Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     474: aload         6
     476: ifnull        555
     479: aload         6
     481: aload         8
     483: invokevirtual #338                // Method org/jumpmind/symmetric/model/TriggerHistory.setErrorMessage:(Ljava/lang/String;)V
     486: aload_0
     487: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     490: ldc_w         #291                // String auto.sync.triggers
     493: invokeinterface #104,  2          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;)Z
     498: ifeq          555
     501: aload_0
     502: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     505: ifnull        555
     508: aload_0
     509: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     512: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     517: astore        16
     519: aload         16
     521: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     526: ifeq          555
     529: aload         16
     531: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     536: checkcast     #293                // class org/jumpmind/symmetric/config/ITriggerCreationListener
     539: astore        17
     541: aload         17
     543: aload         5
     545: aload         6
     547: invokeinterface #339,  3          // InterfaceMethod org/jumpmind/symmetric/config/ITriggerCreationListener.triggerCreated:(Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     552: goto          519
     555: goto          143
     558: goto          630
     561: aload_0
     562: getfield      #271                // Field log:Lorg/slf4j/Logger;
     565: ldc_w         #340                // String The configured table does not exist in the datasource that is configured: {}
     568: aload         5
     570: invokevirtual #341                // Method org/jumpmind/symmetric/model/Trigger.qualifiedSourceTableName:()Ljava/lang/String;
     573: invokeinterface #342,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
     578: aload_0
     579: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     582: ifnull        630
     585: aload_0
     586: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     589: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     594: astore        11
     596: aload         11
     598: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     603: ifeq          630
     606: aload         11
     608: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     613: checkcast     #293                // class org/jumpmind/symmetric/config/ITriggerCreationListener
     616: astore        12
     618: aload         12
     620: aload         5
     622: invokeinterface #343,  2          // InterfaceMethod org/jumpmind/symmetric/config/ITriggerCreationListener.tableDoesNotExist:(Lorg/jumpmind/symmetric/model/Trigger;)V
     627: goto          596
     630: goto          819
     633: astore        7
     635: aload_0
     636: getfield      #271                // Field log:Lorg/slf4j/Logger;
     639: ldc_w         #345                // String Failed to create triggers for %s
     642: iconst_1
     643: anewarray     #33                 // class java/lang/Object
     646: dup
     647: iconst_0
     648: aload         5
     650: invokevirtual #341                // Method org/jumpmind/symmetric/model/Trigger.qualifiedSourceTableName:()Ljava/lang/String;
     653: aastore
     654: invokestatic  #318                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     657: aload         7
     659: invokeinterface #346,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     664: aload         6
     666: ifnull        765
     669: aload_0
     670: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     673: aconst_null
     674: aload         5
     676: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     679: aload         5
     681: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     684: aload         6
     686: invokevirtual #212                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForInsertTrigger:()Ljava/lang/String;
     689: aload         5
     691: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     694: aload         6
     696: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     701: aload_0
     702: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     705: aconst_null
     706: aload         5
     708: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     711: aload         5
     713: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     716: aload         6
     718: invokevirtual #213                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForUpdateTrigger:()Ljava/lang/String;
     721: aload         5
     723: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     726: aload         6
     728: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     733: aload_0
     734: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     737: aconst_null
     738: aload         5
     740: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     743: aload         5
     745: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     748: aload         6
     750: invokevirtual #211                // Method org/jumpmind/symmetric/model/TriggerHistory.getNameForDeleteTrigger:()Ljava/lang/String;
     753: aload         5
     755: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     758: aload         6
     760: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     765: aload_0
     766: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     769: ifnull        819
     772: aload_0
     773: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
     776: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     781: astore        8
     783: aload         8
     785: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     790: ifeq          819
     793: aload         8
     795: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     800: checkcast     #293                // class org/jumpmind/symmetric/config/ITriggerCreationListener
     803: astore        9
     805: aload         9
     807: aload         5
     809: aload         7
     811: invokeinterface #347,  3          // InterfaceMethod org/jumpmind/symmetric/config/ITriggerCreationListener.triggerFailed:(Lorg/jumpmind/symmetric/model/Trigger;Ljava/lang/Exception;)V
     816: goto          783
     819: goto          8
     822: return
    Exception table:
       from    to  target type
          33   630   633   Class java/lang/Exception

  protected org.jumpmind.symmetric.model.TriggerHistory rebuildTriggerIfNecessary(java.lang.StringBuilder, boolean, org.jumpmind.symmetric.model.Trigger, org.jumpmind.symmetric.io.data.DataEventType, org.jumpmind.symmetric.model.TriggerReBuildReason, org.jumpmind.symmetric.model.TriggerHistory, org.jumpmind.symmetric.model.TriggerHistory, boolean, org.jumpmind.db.model.Table);
    Code:
       0: iconst_0
       1: istore        10
       3: iconst_0
       4: istore        11
       6: new           #76                 // class org/jumpmind/symmetric/model/TriggerHistory
       9: dup
      10: aload         9
      12: aload_3
      13: aload         5
      15: invokespecial #348                // Method org/jumpmind/symmetric/model/TriggerHistory."<init>":(Lorg/jumpmind/db/model/Table;Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/TriggerReBuildReason;)V
      18: astore        12
      20: aload_0
      21: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
      24: invokeinterface #349,  1          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getMaxTriggerNameLength:()I
      29: istore        13
      31: aload         12
      33: aload_0
      34: getstatic     #334                // Field org/jumpmind/symmetric/io/data/DataEventType.INSERT:Lorg/jumpmind/symmetric/io/data/DataEventType;
      37: iload         13
      39: aload_3
      40: aload         9
      42: invokevirtual #350                // Method getTriggerName:(Lorg/jumpmind/symmetric/io/data/DataEventType;ILorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/db/model/Table;)Ljava/lang/String;
      45: invokevirtual #97                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      48: invokevirtual #351                // Method org/jumpmind/symmetric/model/TriggerHistory.setNameForInsertTrigger:(Ljava/lang/String;)V
      51: aload         12
      53: aload_0
      54: getstatic     #336                // Field org/jumpmind/symmetric/io/data/DataEventType.UPDATE:Lorg/jumpmind/symmetric/io/data/DataEventType;
      57: iload         13
      59: aload_3
      60: aload         9
      62: invokevirtual #350                // Method getTriggerName:(Lorg/jumpmind/symmetric/io/data/DataEventType;ILorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/db/model/Table;)Ljava/lang/String;
      65: invokevirtual #97                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      68: invokevirtual #352                // Method org/jumpmind/symmetric/model/TriggerHistory.setNameForUpdateTrigger:(Ljava/lang/String;)V
      71: aload         12
      73: aload_0
      74: getstatic     #337                // Field org/jumpmind/symmetric/io/data/DataEventType.DELETE:Lorg/jumpmind/symmetric/io/data/DataEventType;
      77: iload         13
      79: aload_3
      80: aload         9
      82: invokevirtual #350                // Method getTriggerName:(Lorg/jumpmind/symmetric/io/data/DataEventType;ILorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/db/model/Table;)Ljava/lang/String;
      85: invokevirtual #97                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      88: invokevirtual #353                // Method org/jumpmind/symmetric/model/TriggerHistory.setNameForDeleteTrigger:(Ljava/lang/String;)V
      91: aconst_null
      92: astore        14
      94: aconst_null
      95: astore        15
      97: aconst_null
      98: astore        16
     100: aload         6
     102: ifnull        153
     105: aload         6
     107: aload         4
     109: invokevirtual #354                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerNameForDmlType:(Lorg/jumpmind/symmetric/io/data/DataEventType;)Ljava/lang/String;
     112: astore        14
     114: aload         6
     116: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     119: astore        15
     121: aload         6
     123: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     126: astore        16
     128: aload_0
     129: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     132: aload         16
     134: aload         15
     136: aload         6
     138: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     141: aload         14
     143: invokeinterface #295,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.doesTriggerExist:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     148: istore        10
     150: goto          195
     153: aload         12
     155: aload         4
     157: invokevirtual #354                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerNameForDmlType:(Lorg/jumpmind/symmetric/io/data/DataEventType;)Ljava/lang/String;
     160: astore        14
     162: aload_3
     163: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     166: astore        15
     168: aload_3
     169: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     172: astore        16
     174: aload_0
     175: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     178: aload         16
     180: aload         15
     182: aload_3
     183: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     186: aload         14
     188: invokeinterface #295,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.doesTriggerExist:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     193: istore        10
     195: iload         10
     197: ifne          209
     200: iload_2
     201: ifeq          209
     204: getstatic     #355                // Field org/jumpmind/symmetric/model/TriggerReBuildReason.TRIGGERS_MISSING:Lorg/jumpmind/symmetric/model/TriggerReBuildReason;
     207: astore        5
     209: iload_2
     210: ifne          218
     213: iload         8
     215: ifne          251
     218: iload         10
     220: ifeq          251
     223: aload_0
     224: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     227: aload_1
     228: aload         16
     230: aload         15
     232: aload         14
     234: aload_3
     235: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     238: aload         6
     240: invokeinterface #290,  7          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.removeTrigger:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     245: iconst_0
     246: istore        10
     248: iconst_1
     249: istore        11
     251: aload_3
     252: invokevirtual #250                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnInsert:()Z
     255: ifne          276
     258: aload_3
     259: invokevirtual #249                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnUpdate:()Z
     262: ifne          276
     265: aload_3
     266: invokevirtual #251                // Method org/jumpmind/symmetric/model/Trigger.isSyncOnDelete:()Z
     269: ifne          276
     272: iconst_1
     273: goto          277
     276: iconst_0
     277: istore        17
     279: aload         7
     281: ifnonnull     351
     284: aload         6
     286: ifnull        308
     289: iload         10
     291: ifne          299
     294: iload         8
     296: ifne          308
     299: iload         17
     301: ifeq          351
     304: iload_2
     305: ifeq          351
     308: aload_0
     309: aload         12
     311: invokevirtual #356                // Method insert:(Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     314: aload_0
     315: aload_3
     316: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     319: aload_3
     320: invokevirtual #157                // Method org/jumpmind/symmetric/model/Trigger.getSourceCatalogName:()Ljava/lang/String;
     323: aload_3
     324: invokevirtual #158                // Method org/jumpmind/symmetric/model/Trigger.getSourceSchemaName:()Ljava/lang/String;
     327: aload_3
     328: invokevirtual #304                // Method org/jumpmind/symmetric/model/Trigger.isSourceTableNameWildcarded:()Z
     331: ifeq          342
     334: aload         9
     336: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     339: goto          346
     342: aload_3
     343: invokevirtual #132                // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
     346: invokevirtual #325                // Method getNewestTriggerHistoryForTrigger:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jumpmind/symmetric/model/TriggerHistory;
     349: astore        7
     351: iload         10
     353: ifne          426
     356: iload         8
     358: ifeq          426
     361: aload_0
     362: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     365: aload_1
     366: aload         4
     368: aload_3
     369: aload         7
     371: aload_0
     372: getfield      #1                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
     375: aload_3
     376: invokevirtual #248                // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
     379: invokeinterface #315,  2          // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getChannel:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Channel;
     384: aload_0
     385: getfield      #94                 // Field tablePrefix:Ljava/lang/String;
     388: aload         9
     390: invokeinterface #357,  8          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.createTrigger:(Ljava/lang/StringBuilder;Lorg/jumpmind/symmetric/io/data/DataEventType;Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/Channel;Ljava/lang/String;Lorg/jumpmind/db/model/Table;)V
     395: iload         11
     397: ifeq          413
     400: aload_0
     401: getfield      #14                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
     404: lconst_1
     405: invokeinterface #358,  3          // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementTriggersRebuiltCount:(J)V
     410: goto          441
     413: aload_0
     414: getfield      #14                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
     417: lconst_1
     418: invokeinterface #359,  3          // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementTriggersCreatedCount:(J)V
     423: goto          441
     426: iload         11
     428: ifeq          441
     431: aload_0
     432: getfield      #14                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
     435: lconst_1
     436: invokeinterface #360,  3          // InterfaceMethod org/jumpmind/symmetric/statistic/IStatisticManager.incrementTriggersRemovedCount:(J)V
     441: goto          524
     444: astore        18
     446: aload         7
     448: ifnull        521
     451: aload_0
     452: getfield      #89                 // Field symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
     455: aload         7
     457: invokevirtual #84                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceCatalogName:()Ljava/lang/String;
     460: aload         7
     462: invokevirtual #87                 // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceSchemaName:()Ljava/lang/String;
     465: aload         7
     467: invokevirtual #204                // Method org/jumpmind/symmetric/model/TriggerHistory.getSourceTableName:()Ljava/lang/String;
     470: aload         7
     472: aload         4
     474: invokevirtual #354                // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerNameForDmlType:(Lorg/jumpmind/symmetric/io/data/DataEventType;)Ljava/lang/String;
     477: invokeinterface #295,  5          // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.doesTriggerExist:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     482: ifne          521
     485: aload_0
     486: getfield      #271                // Field log:Lorg/slf4j/Logger;
     489: ldc_w         #362                // String Cleaning up trigger hist row of {} after failing to create the associated trigger
     492: aload         7
     494: invokevirtual #43                 // Method org/jumpmind/symmetric/model/TriggerHistory.getTriggerHistoryId:()I
     497: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     500: invokeinterface #363,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     505: aload         7
     507: aload         18
     509: invokevirtual #364                // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
     512: invokevirtual #338                // Method org/jumpmind/symmetric/model/TriggerHistory.setErrorMessage:(Ljava/lang/String;)V
     515: aload_0
     516: aload         7
     518: invokevirtual #298                // Method inactivateTriggerHistory:(Lorg/jumpmind/symmetric/model/TriggerHistory;)V
     521: aload         18
     523: athrow
     524: aload         7
     526: areturn
    Exception table:
       from    to  target type
         351   441   444   Class java/lang/RuntimeException

  protected static java.lang.String replaceCharsForTriggerName(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #365                // String [^a-zA-Z0-9_]|[a|e|i|o|u|A|E|I|O|U]
       4: ldc_w         #366                // String
       7: invokevirtual #367                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  protected java.lang.String getTriggerName(org.jumpmind.symmetric.io.data.DataEventType, int, org.jumpmind.symmetric.model.Trigger, org.jumpmind.db.model.Table);
    Code:
       0: aconst_null
       1: astore        5
       3: getstatic     #368                // Field org/jumpmind/symmetric/service/impl/TriggerRouterService$2.$SwitchMap$org$jumpmind$symmetric$io$data$DataEventType:[I
       6: aload_1
       7: invokevirtual #369                // Method org/jumpmind/symmetric/io/data/DataEventType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 55
                     3: 74
               default: 90
          }
      36: aload_3
      37: invokevirtual #257                // Method org/jumpmind/symmetric/model/Trigger.getNameForInsertTrigger:()Ljava/lang/String;
      40: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      43: ifne          90
      46: aload_3
      47: invokevirtual #257                // Method org/jumpmind/symmetric/model/Trigger.getNameForInsertTrigger:()Ljava/lang/String;
      50: astore        5
      52: goto          90
      55: aload_3
      56: invokevirtual #256                // Method org/jumpmind/symmetric/model/Trigger.getNameForUpdateTrigger:()Ljava/lang/String;
      59: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      62: ifne          90
      65: aload_3
      66: invokevirtual #256                // Method org/jumpmind/symmetric/model/Trigger.getNameForUpdateTrigger:()Ljava/lang/String;
      69: astore        5
      71: goto          90
      74: aload_3
      75: invokevirtual #258                // Method org/jumpmind/symmetric/model/Trigger.getNameForDeleteTrigger:()Ljava/lang/String;
      78: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      81: ifne          90
      84: aload_3
      85: invokevirtual #258                // Method org/jumpmind/symmetric/model/Trigger.getNameForDeleteTrigger:()Ljava/lang/String;
      88: astore        5
      90: aload         5
      92: invokestatic  #83                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      95: ifeq          288
      98: new           #22                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     105: aload_0
     106: getfield      #94                 // Field tablePrefix:Ljava/lang/String;
     109: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc_w         #370                // String _
     115: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: astore        6
     123: new           #22                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc_w         #371                // String on_
     133: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_1
     137: invokevirtual #372                // Method org/jumpmind/symmetric/io/data/DataEventType.getCode:()Ljava/lang/String;
     140: invokevirtual #98                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     143: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: ldc_w         #373                // String _for_
     149: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: astore        7
     157: aload_3
     158: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     161: invokestatic  #374                // Method replaceCharsForTriggerName:(Ljava/lang/String;)Ljava/lang/String;
     164: astore        8
     166: aload_3
     167: invokevirtual #304                // Method org/jumpmind/symmetric/model/Trigger.isSourceTableNameWildcarded:()Z
     170: ifeq          183
     173: aload         4
     175: invokevirtual #63                 // Method org/jumpmind/db/model/Table.getName:()Ljava/lang/String;
     178: invokestatic  #374                // Method replaceCharsForTriggerName:(Ljava/lang/String;)Ljava/lang/String;
     181: astore        8
     183: new           #22                 // class java/lang/StringBuilder
     186: dup
     187: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     190: ldc_w         #370                // String _
     193: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_0
     197: getfield      #102                // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
     200: invokeinterface #167,  1          // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getNodeGroupId:()Ljava/lang/String;
     205: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokestatic  #374                // Method replaceCharsForTriggerName:(Ljava/lang/String;)Ljava/lang/String;
     214: astore        9
     216: new           #22                 // class java/lang/StringBuilder
     219: dup
     220: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     223: aload         6
     225: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload         7
     230: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload         8
     235: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload         9
     240: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     246: astore        5
     248: aload         5
     250: invokevirtual #375                // Method java/lang/String.length:()I
     253: iload_2
     254: if_icmple     288
     257: iload_2
     258: ifle          288
     261: new           #22                 // class java/lang/StringBuilder
     264: dup
     265: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     268: aload         6
     270: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: aload         7
     275: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: aload         8
     280: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     286: astore        5
     288: aload         5
     290: invokevirtual #97                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     293: astore        5
     295: aload         5
     297: invokevirtual #375                // Method java/lang/String.length:()I
     300: iload_2
     301: if_icmple     359
     304: iload_2
     305: ifle          359
     308: aload         5
     310: iconst_0
     311: iload_2
     312: iconst_1
     313: isub
     314: invokevirtual #376                // Method java/lang/String.substring:(II)Ljava/lang/String;
     317: astore        5
     319: aload_0
     320: getfield      #271                // Field log:Lorg/slf4j/Logger;
     323: ldc_w         #377                // String We just truncated the trigger name for the {} trigger id={}.  You might want to consider manually providing a name for the trigger that is less than {} characters long
     326: iconst_3
     327: anewarray     #33                 // class java/lang/Object
     330: dup
     331: iconst_0
     332: aload_1
     333: invokevirtual #378                // Method org/jumpmind/symmetric/io/data/DataEventType.name:()Ljava/lang/String;
     336: invokevirtual #98                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     339: aastore
     340: dup
     341: iconst_1
     342: aload_3
     343: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     346: aastore
     347: dup
     348: iconst_2
     349: iload_2
     350: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     353: aastore
     354: invokeinterface #379,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     359: iconst_0
     360: istore        6
     362: aload_0
     363: aload_3
     364: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.getTriggerId:()Ljava/lang/String;
     367: aload         5
     369: invokevirtual #380                // Method isTriggerNameInUse:(Ljava/lang/String;Ljava/lang/String;)Z
     372: ifeq          465
     375: iinc          6, 1
     378: iload         6
     380: invokestatic  #107                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     383: astore        7
     385: aload         5
     387: invokevirtual #375                // Method java/lang/String.length:()I
     390: aload         7
     392: invokevirtual #375                // Method java/lang/String.length:()I
     395: iadd
     396: iload_2
     397: if_icmple     440
     400: new           #22                 // class java/lang/StringBuilder
     403: dup
     404: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     407: aload         5
     409: iconst_0
     410: aload         5
     412: invokevirtual #375                // Method java/lang/String.length:()I
     415: aload         7
     417: invokevirtual #375                // Method java/lang/String.length:()I
     420: isub
     421: invokevirtual #376                // Method java/lang/String.substring:(II)Ljava/lang/String;
     424: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     427: aload         7
     429: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     435: astore        5
     437: goto          462
     440: new           #22                 // class java/lang/StringBuilder
     443: dup
     444: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     447: aload         5
     449: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     452: aload         7
     454: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     457: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     460: astore        5
     462: goto          362
     465: aload         5
     467: areturn

  public void setTriggerCreationListeners(java.util.List<org.jumpmind.symmetric.config.ITriggerCreationListener>);
    Code:
       0: aload_0
       1: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
       4: ifnull        44
       7: aload_0
       8: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
      11: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          44
      26: aload_2
      27: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #293                // class org/jumpmind/symmetric/config/ITriggerCreationListener
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokevirtual #15                 // Method addTriggerCreationListeners:(Lorg/jumpmind/symmetric/config/ITriggerCreationListener;)V
      41: goto          17
      44: return

  public void addTriggerCreationListeners(org.jumpmind.symmetric.config.ITriggerCreationListener);
    Code:
       0: aload_0
       1: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #292                // Field triggerCreationListeners:Ljava/util/List;
      18: aload_0
      19: getfield      #292                // Field triggerCreationListeners:Ljava/util/List;
      22: aload_1
      23: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public void addExtraConfigTable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field extraConfigTables:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/util/ArrayList
      11: dup
      12: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #11                 // Field extraConfigTables:Ljava/util/List;
      18: aload_0
      19: getfield      #11                 // Field extraConfigTables:Ljava/util/List;
      22: aload_1
      23: invokeinterface #93,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public java.util.Map<org.jumpmind.symmetric.model.Trigger, java.lang.Exception> getFailedTriggers();
    Code:
       0: aload_0
       1: getfield      #8                  // Field failureListener:Lorg/jumpmind/symmetric/config/TriggerFailureListener;
       4: invokevirtual #381                // Method org/jumpmind/symmetric/config/TriggerFailureListener.getFailures:()Ljava/util/Map;
       7: areturn

  public void setStatisticManager(org.jumpmind.symmetric.statistic.IStatisticManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
       5: return

  static org.jumpmind.symmetric.service.IConfigurationService access$000(org.jumpmind.symmetric.service.impl.TriggerRouterService);
    Code:
       0: aload_0
       1: getfield      #1                  // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
       4: areturn
}
