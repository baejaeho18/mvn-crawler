Compiled from "RouterServiceSqlMap.java"
public class org.jumpmind.symmetric.service.impl.RouterServiceSqlMap extends org.jumpmind.symmetric.service.impl.AbstractSqlMap {
  public org.jumpmind.symmetric.service.impl.RouterServiceSqlMap(org.jumpmind.db.platform.IDatabasePlatform, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jumpmind/symmetric/service/impl/AbstractSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
       6: aload_0
       7: ldc           #2                  // String selectDataToBatchSql
       9: ldc           #3                  // String select d.data_id, d.table_name, d.event_type, d.row_data, d.pk_data, d.old_data,                                                                          d.create_time, d.trigger_hist_id, d.channel_id, d.transaction_id, d.source_node_id, d.external_data, e.data_id from $(data) d left outer join     $(data_event) e on d.data_id=e.data_id where d.channel_id=? and d.data_id > ? order by d.data_id asc
      11: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      14: aload_0
      15: ldc           #5                  // String selectDataUsingGapsSql
      17: ldc           #6                  // String select d.data_id, d.table_name, d.event_type, d.row_data, d.pk_data, d.old_data,                          d.create_time, d.trigger_hist_id, d.channel_id, d.transaction_id, d.source_node_id, d.external_data     from $(data) d where d.channel_id=? $(dataRange)                                                  order by d.data_id asc
      19: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      22: aload_0
      23: ldc           #7                  // String selectDistinctDataIdFromDataEventSql
      25: ldc           #8                  // String select distinct(data_id) from $(data_event) where data_id > ? order by data_id asc
      27: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      30: aload_0
      31: ldc           #9                  // String selectDistinctDataIdFromDataEventUsingGapsSql
      33: ldc           #10                 // String select distinct(data_id) from $(data_event) where data_id >=? and data_id <= ? order by data_id asc
      35: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      38: aload_0
      39: ldc           #11                 // String selectUnroutedCountForChannelSql
      41: ldc           #12                 // String select count(*) from $(data) where channel_id=? and data_id >=?
      43: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      46: aload_0
      47: ldc           #13                 // String selectLastDataIdRoutedUsingDataRefSql
      49: ldc           #14                 // String select max(ref_data_id) from $(data)_ref
      51: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      54: aload_0
      55: ldc           #15                 // String selectLastDataIdRoutedUsingDataGapSql
      57: ldc           #16                 // String select max(end_id) from $(data_gap)
      59: invokevirtual #4                  // Method putSql:(Ljava/lang/String;Ljava/lang/String;)V
      62: return
}
