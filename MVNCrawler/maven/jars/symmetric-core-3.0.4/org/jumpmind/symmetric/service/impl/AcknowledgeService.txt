Compiled from "AcknowledgeService.java"
public class org.jumpmind.symmetric.service.impl.AcknowledgeService extends org.jumpmind.symmetric.service.impl.AbstractService implements org.jumpmind.symmetric.service.IAcknowledgeService {
  private org.jumpmind.symmetric.service.IOutgoingBatchService outgoingBatchService;

  private java.util.List<org.jumpmind.symmetric.transport.IAcknowledgeEventListener> batchEventListeners;

  private org.jumpmind.symmetric.service.IRegistrationService registrationService;

  private org.jumpmind.symmetric.io.stage.IStagingManager stagingManger;

  public org.jumpmind.symmetric.service.impl.AcknowledgeService(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect, org.jumpmind.symmetric.service.IOutgoingBatchService, org.jumpmind.symmetric.service.IRegistrationService, org.jumpmind.symmetric.io.stage.IStagingManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/jumpmind/symmetric/service/impl/AbstractService."<init>":(Lorg/jumpmind/symmetric/service/IParameterService;Lorg/jumpmind/symmetric/db/ISymmetricDialect;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
      11: aload_0
      12: aload         4
      14: putfield      #3                  // Field registrationService:Lorg/jumpmind/symmetric/service/IRegistrationService;
      17: aload_0
      18: aload         5
      20: putfield      #4                  // Field stagingManger:Lorg/jumpmind/symmetric/io/stage/IStagingManager;
      23: aload_0
      24: new           #5                  // class org/jumpmind/symmetric/service/impl/AcknowledgeServiceSqlMap
      27: dup
      28: aload_2
      29: invokeinterface #6,  1            // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getPlatform:()Lorg/jumpmind/db/platform/IDatabasePlatform;
      34: aload_0
      35: invokevirtual #7                  // Method createSqlReplacementTokens:()Ljava/util/Map;
      38: invokespecial #8                  // Method org/jumpmind/symmetric/service/impl/AcknowledgeServiceSqlMap."<init>":(Lorg/jumpmind/db/platform/IDatabasePlatform;Ljava/util/Map;)V
      41: invokevirtual #9                  // Method setSqlMap:(Lorg/jumpmind/symmetric/service/impl/ISqlMap;)V
      44: return

  public void ack(org.jumpmind.symmetric.model.BatchAck);
    Code:
       0: aload_0
       1: getfield      #10                 // Field batchEventListeners:Ljava/util/List;
       4: ifnull        46
       7: aload_0
       8: getfield      #10                 // Field batchEventListeners:Ljava/util/List;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_2
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #14                 // class org/jumpmind/symmetric/transport/IAcknowledgeEventListener
      35: astore_3
      36: aload_3
      37: aload_1
      38: invokeinterface #15,  2           // InterfaceMethod org/jumpmind/symmetric/transport/IAcknowledgeEventListener.onAcknowledgeEvent:(Lorg/jumpmind/symmetric/model/BatchAck;)V
      43: goto          17
      46: aload_1
      47: invokevirtual #16                 // Method org/jumpmind/symmetric/model/BatchAck.getBatchId:()J
      50: ldc2_w        #17                 // long -9999l
      53: lcmp
      54: ifne          80
      57: aload_1
      58: invokevirtual #19                 // Method org/jumpmind/symmetric/model/BatchAck.isOk:()Z
      61: ifeq          476
      64: aload_0
      65: getfield      #3                  // Field registrationService:Lorg/jumpmind/symmetric/service/IRegistrationService;
      68: aload_1
      69: invokevirtual #20                 // Method org/jumpmind/symmetric/model/BatchAck.getNodeId:()Ljava/lang/String;
      72: invokeinterface #21,  2           // InterfaceMethod org/jumpmind/symmetric/service/IRegistrationService.markNodeAsRegistered:(Ljava/lang/String;)V
      77: goto          476
      80: aload_0
      81: getfield      #2                  // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
      84: aload_1
      85: invokevirtual #16                 // Method org/jumpmind/symmetric/model/BatchAck.getBatchId:()J
      88: aload_1
      89: invokevirtual #20                 // Method org/jumpmind/symmetric/model/BatchAck.getNodeId:()Ljava/lang/String;
      92: invokeinterface #22,  4           // InterfaceMethod org/jumpmind/symmetric/service/IOutgoingBatchService.findOutgoingBatch:(JLjava/lang/String;)Lorg/jumpmind/symmetric/model/OutgoingBatch;
      97: astore_2
      98: aload_1
      99: invokevirtual #19                 // Method org/jumpmind/symmetric/model/BatchAck.isOk:()Z
     102: ifeq          111
     105: getstatic     #23                 // Field org/jumpmind/symmetric/model/OutgoingBatch$Status.OK:Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;
     108: goto          114
     111: getstatic     #24                 // Field org/jumpmind/symmetric/model/OutgoingBatch$Status.ER:Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;
     114: astore_3
     115: aload_2
     116: ifnull        437
     119: aload_2
     120: invokevirtual #25                 // Method org/jumpmind/symmetric/model/OutgoingBatch.getStatus:()Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;
     123: getstatic     #23                 // Field org/jumpmind/symmetric/model/OutgoingBatch$Status.OK:Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;
     126: if_acmpeq     153
     129: aload_2
     130: aload_3
     131: invokevirtual #26                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setStatus:(Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;)V
     134: aload_2
     135: aload_1
     136: invokevirtual #19                 // Method org/jumpmind/symmetric/model/BatchAck.isOk:()Z
     139: ifne          146
     142: iconst_1
     143: goto          147
     146: iconst_0
     147: invokevirtual #27                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setErrorFlag:(Z)V
     150: goto          180
     153: aload_2
     154: iconst_0
     155: invokevirtual #27                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setErrorFlag:(Z)V
     158: aload_0
     159: getfield      #28                 // Field log:Lorg/slf4j/Logger;
     162: ldc           #29                 // String Batch {} was already set to OK.  Not updating to {}.
     164: aload_1
     165: invokevirtual #16                 // Method org/jumpmind/symmetric/model/BatchAck.getBatchId:()J
     168: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     171: aload_3
     172: invokevirtual #31                 // Method org/jumpmind/symmetric/model/OutgoingBatch$Status.name:()Ljava/lang/String;
     175: invokeinterface #32,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     180: aload_1
     181: invokevirtual #33                 // Method org/jumpmind/symmetric/model/BatchAck.isIgnored:()Z
     184: ifeq          191
     187: aload_2
     188: invokevirtual #34                 // Method org/jumpmind/symmetric/model/OutgoingBatch.incrementIgnoreCount:()V
     191: aload_2
     192: aload_1
     193: invokevirtual #35                 // Method org/jumpmind/symmetric/model/BatchAck.getNetworkMillis:()J
     196: invokevirtual #36                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setNetworkMillis:(J)V
     199: aload_2
     200: aload_1
     201: invokevirtual #37                 // Method org/jumpmind/symmetric/model/BatchAck.getFilterMillis:()J
     204: invokevirtual #38                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setFilterMillis:(J)V
     207: aload_2
     208: aload_1
     209: invokevirtual #39                 // Method org/jumpmind/symmetric/model/BatchAck.getDatabaseMillis:()J
     212: invokevirtual #40                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setLoadMillis:(J)V
     215: aload_1
     216: invokevirtual #19                 // Method org/jumpmind/symmetric/model/BatchAck.isOk:()Z
     219: ifne          340
     222: aload_1
     223: invokevirtual #41                 // Method org/jumpmind/symmetric/model/BatchAck.getErrorLine:()J
     226: lconst_0
     227: lcmp
     228: ifeq          340
     231: aload_0
     232: getfield      #42                 // Field sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
     235: aload_0
     236: iconst_1
     237: anewarray     #43                 // class java/lang/String
     240: dup
     241: iconst_0
     242: ldc           #44                 // String selectDataIdSql
     244: aastore
     245: invokevirtual #45                 // Method getSql:([Ljava/lang/String;)Ljava/lang/String;
     248: new           #46                 // class org/jumpmind/db/sql/mapper/NumberMapper
     251: dup
     252: invokespecial #47                 // Method org/jumpmind/db/sql/mapper/NumberMapper."<init>":()V
     255: iconst_1
     256: anewarray     #48                 // class java/lang/Object
     259: dup
     260: iconst_0
     261: aload_2
     262: invokevirtual #49                 // Method org/jumpmind/symmetric/model/OutgoingBatch.getBatchId:()J
     265: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     268: aastore
     269: invokeinterface #50,  4           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.query:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;[Ljava/lang/Object;)Ljava/util/List;
     274: astore        4
     276: aload         4
     278: invokeinterface #51,  1           // InterfaceMethod java/util/List.size:()I
     283: i2l
     284: aload_1
     285: invokevirtual #41                 // Method org/jumpmind/symmetric/model/BatchAck.getErrorLine:()J
     288: lcmp
     289: iflt          316
     292: aload_2
     293: aload         4
     295: aload_1
     296: invokevirtual #41                 // Method org/jumpmind/symmetric/model/BatchAck.getErrorLine:()J
     299: l2i
     300: iconst_1
     301: isub
     302: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     307: checkcast     #53                 // class java/lang/Number
     310: invokevirtual #54                 // Method java/lang/Number.longValue:()J
     313: invokevirtual #55                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setFailedDataId:(J)V
     316: aload_2
     317: aload_1
     318: invokevirtual #56                 // Method org/jumpmind/symmetric/model/BatchAck.getSqlCode:()I
     321: invokevirtual #57                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSqlCode:(I)V
     324: aload_2
     325: aload_1
     326: invokevirtual #58                 // Method org/jumpmind/symmetric/model/BatchAck.getSqlState:()Ljava/lang/String;
     329: invokevirtual #59                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSqlState:(Ljava/lang/String;)V
     332: aload_2
     333: aload_1
     334: invokevirtual #60                 // Method org/jumpmind/symmetric/model/BatchAck.getSqlMessage:()Ljava/lang/String;
     337: invokevirtual #61                 // Method org/jumpmind/symmetric/model/OutgoingBatch.setSqlMessage:(Ljava/lang/String;)V
     340: aload_3
     341: getstatic     #24                 // Field org/jumpmind/symmetric/model/OutgoingBatch$Status.ER:Lorg/jumpmind/symmetric/model/OutgoingBatch$Status;
     344: if_acmpne     372
     347: aload_0
     348: getfield      #28                 // Field log:Lorg/slf4j/Logger;
     351: ldc           #62                 // String Received an error from node {} for batch {}.  Check the outgoing_batch table for more info.
     353: aload_2
     354: invokevirtual #63                 // Method org/jumpmind/symmetric/model/OutgoingBatch.getNodeId:()Ljava/lang/String;
     357: aload_2
     358: invokevirtual #49                 // Method org/jumpmind/symmetric/model/OutgoingBatch.getBatchId:()J
     361: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     364: invokeinterface #64,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     369: goto          424
     372: aload_0
     373: getfield      #4                  // Field stagingManger:Lorg/jumpmind/symmetric/io/stage/IStagingManager;
     376: iconst_3
     377: anewarray     #48                 // class java/lang/Object
     380: dup
     381: iconst_0
     382: ldc           #65                 // String outgoing
     384: aastore
     385: dup
     386: iconst_1
     387: aload_2
     388: invokevirtual #63                 // Method org/jumpmind/symmetric/model/OutgoingBatch.getNodeId:()Ljava/lang/String;
     391: aastore
     392: dup
     393: iconst_2
     394: aload_2
     395: invokevirtual #49                 // Method org/jumpmind/symmetric/model/OutgoingBatch.getBatchId:()J
     398: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     401: aastore
     402: invokeinterface #66,  2           // InterfaceMethod org/jumpmind/symmetric/io/stage/IStagingManager.find:([Ljava/lang/Object;)Lorg/jumpmind/symmetric/io/stage/IStagedResource;
     407: astore        4
     409: aload         4
     411: ifnull        424
     414: aload         4
     416: getstatic     #67                 // Field org/jumpmind/symmetric/io/stage/IStagedResource$State.DONE:Lorg/jumpmind/symmetric/io/stage/IStagedResource$State;
     419: invokeinterface #68,  2           // InterfaceMethod org/jumpmind/symmetric/io/stage/IStagedResource.setState:(Lorg/jumpmind/symmetric/io/stage/IStagedResource$State;)V
     424: aload_0
     425: getfield      #2                  // Field outgoingBatchService:Lorg/jumpmind/symmetric/service/IOutgoingBatchService;
     428: aload_2
     429: invokeinterface #69,  2           // InterfaceMethod org/jumpmind/symmetric/service/IOutgoingBatchService.updateOutgoingBatch:(Lorg/jumpmind/symmetric/model/OutgoingBatch;)V
     434: goto          476
     437: aload_0
     438: getfield      #28                 // Field log:Lorg/slf4j/Logger;
     441: ldc           #70                 // String Could not find batch {}-{} to acknowledge as {}
     443: iconst_3
     444: anewarray     #48                 // class java/lang/Object
     447: dup
     448: iconst_0
     449: aload_1
     450: invokevirtual #20                 // Method org/jumpmind/symmetric/model/BatchAck.getNodeId:()Ljava/lang/String;
     453: aastore
     454: dup
     455: iconst_1
     456: aload_1
     457: invokevirtual #16                 // Method org/jumpmind/symmetric/model/BatchAck.getBatchId:()J
     460: invokestatic  #30                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     463: aastore
     464: dup
     465: iconst_2
     466: aload_3
     467: invokevirtual #31                 // Method org/jumpmind/symmetric/model/OutgoingBatch$Status.name:()Ljava/lang/String;
     470: aastore
     471: invokeinterface #71,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     476: return

  public void addAcknowledgeEventListener(org.jumpmind.symmetric.transport.IAcknowledgeEventListener);
    Code:
       0: aload_0
       1: getfield      #10                 // Field batchEventListeners:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #72                 // class java/util/ArrayList
      11: dup
      12: invokespecial #73                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #10                 // Field batchEventListeners:Ljava/util/List;
      18: aload_0
      19: getfield      #10                 // Field batchEventListeners:Ljava/util/List;
      22: aload_1
      23: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return
}
