Compiled from "DataExtractorService.java"
class org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource implements org.jumpmind.symmetric.io.data.reader.IExtractDataReaderSource {
  private org.jumpmind.symmetric.model.OutgoingBatch outgoingBatch;

  private org.jumpmind.symmetric.io.data.Batch batch;

  private org.jumpmind.db.model.Table currentTable;

  private java.util.List<org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableEvent> selectFromTableEventsToSend;

  private org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableEvent currentInitialLoadEvent;

  private org.jumpmind.db.sql.ISqlReadCursor<org.jumpmind.symmetric.model.Data> cursor;

  private org.jumpmind.symmetric.route.SimpleRouterContext routingContext;

  private org.jumpmind.symmetric.model.Node node;

  private org.jumpmind.symmetric.model.TriggerRouter triggerRouter;

  final org.jumpmind.symmetric.service.impl.DataExtractorService this$0;

  public org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource(org.jumpmind.symmetric.service.impl.DataExtractorService, org.jumpmind.symmetric.model.OutgoingBatch, org.jumpmind.symmetric.io.data.Batch, org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableEvent);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field outgoingBatch:Lorg/jumpmind/symmetric/model/OutgoingBatch;
      14: new           #5                  // class java/util/ArrayList
      17: dup
      18: iconst_1
      19: invokespecial #6                  // Method java/util/ArrayList."<init>":(I)V
      22: astore        5
      24: aload         5
      26: aload         4
      28: invokeinterface #7,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: aload_3
      36: aload         5
      38: invokevirtual #8                  // Method init:(Lorg/jumpmind/symmetric/io/data/Batch;Ljava/util/List;)V
      41: return

  public org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource(org.jumpmind.symmetric.io.data.Batch, java.util.List<org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableEvent>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokevirtual #8                  // Method init:(Lorg/jumpmind/symmetric/io/data/Batch;Ljava/util/List;)V
      15: return

  protected void init(org.jumpmind.symmetric.io.data.Batch, java.util.List<org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableEvent>);
    Code:
       0: aload_0
       1: new           #5                  // class java/util/ArrayList
       4: dup
       5: aload_2
       6: invokespecial #9                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       9: putfield      #10                 // Field selectFromTableEventsToSend:Ljava/util/List;
      12: aload_0
      13: aload_1
      14: putfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
      17: aload_0
      18: aload_0
      19: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
      22: invokestatic  #11                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$200:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/INodeService;
      25: aload_1
      26: invokevirtual #12                 // Method org/jumpmind/symmetric/io/data/Batch.getNodeId:()Ljava/lang/String;
      29: invokeinterface #13,  2           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.findNode:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Node;
      34: putfield      #14                 // Field node:Lorg/jumpmind/symmetric/model/Node;
      37: aload_0
      38: getfield      #14                 // Field node:Lorg/jumpmind/symmetric/model/Node;
      41: ifnonnull     68
      44: new           #15                 // class org/jumpmind/symmetric/SymmetricException
      47: dup
      48: ldc           #16                 // String Could not find a node represented by %s
      50: iconst_1
      51: anewarray     #17                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_0
      57: getfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
      60: invokevirtual #12                 // Method org/jumpmind/symmetric/io/data/Batch.getNodeId:()Ljava/lang/String;
      63: aastore
      64: invokespecial #18                 // Method org/jumpmind/symmetric/SymmetricException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      67: athrow
      68: return

  public org.jumpmind.symmetric.io.data.Batch getBatch();
    Code:
       0: aload_0
       1: getfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
       4: areturn

  public org.jumpmind.db.model.Table getTable();
    Code:
       0: aload_0
       1: getfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
       4: areturn

  public org.jumpmind.symmetric.io.data.CsvData next();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
       6: ifnonnull     239
       9: aload_0
      10: getfield      #10                 // Field selectFromTableEventsToSend:Ljava/util/List;
      13: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
      18: ifle          239
      21: aload_0
      22: aload_0
      23: getfield      #10                 // Field selectFromTableEventsToSend:Ljava/util/List;
      26: iconst_0
      27: invokeinterface #22,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      32: checkcast     #23                 // class org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent
      35: putfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      38: aload_0
      39: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      42: invokevirtual #24                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.getTriggerHistory:()Lorg/jumpmind/symmetric/model/TriggerHistory;
      45: astore_2
      46: aload_0
      47: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      50: invokevirtual #25                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.containsData:()Z
      53: ifeq          98
      56: aload_0
      57: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      60: invokevirtual #26                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.getData:()Lorg/jumpmind/symmetric/model/Data;
      63: astore_1
      64: aload_0
      65: aconst_null
      66: putfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      69: aload_0
      70: aload_0
      71: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
      74: aload_1
      75: ldc           #27                 // String routerId
      77: invokevirtual #28                 // Method org/jumpmind/symmetric/io/data/CsvData.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      80: checkcast     #29                 // class java/lang/String
      83: aload_2
      84: aload_0
      85: getfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
      88: iconst_1
      89: invokevirtual #30                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.lookupAndOrderColumnsAccordingToTriggerHistory:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/db/model/Table;Z)Lorg/jumpmind/db/model/Table;
      92: putfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
      95: goto          239
      98: aload_0
      99: aload_0
     100: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
     103: invokevirtual #31                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.getTriggerRouter:()Lorg/jumpmind/symmetric/model/TriggerRouter;
     106: putfield      #32                 // Field triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
     109: aload_0
     110: getfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
     113: ifnull        139
     116: aload_0
     117: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     120: invokestatic  #33                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/IConfigurationService;
     123: aload_0
     124: getfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
     127: invokevirtual #34                 // Method org/jumpmind/symmetric/io/data/Batch.getChannelId:()Ljava/lang/String;
     130: iconst_0
     131: invokeinterface #35,  3           // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getNodeChannel:(Ljava/lang/String;Z)Lorg/jumpmind/symmetric/model/NodeChannel;
     136: goto          156
     139: new           #36                 // class org/jumpmind/symmetric/model/NodeChannel
     142: dup
     143: aload_0
     144: getfield      #32                 // Field triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
     147: invokevirtual #37                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
     150: invokevirtual #38                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
     153: invokespecial #39                 // Method org/jumpmind/symmetric/model/NodeChannel."<init>":(Ljava/lang/String;)V
     156: astore_3
     157: aload_0
     158: new           #40                 // class org/jumpmind/symmetric/route/SimpleRouterContext
     161: dup
     162: aload_0
     163: getfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
     166: invokevirtual #12                 // Method org/jumpmind/symmetric/io/data/Batch.getNodeId:()Ljava/lang/String;
     169: aload_3
     170: invokespecial #41                 // Method org/jumpmind/symmetric/route/SimpleRouterContext."<init>":(Ljava/lang/String;Lorg/jumpmind/symmetric/model/NodeChannel;)V
     173: putfield      #42                 // Field routingContext:Lorg/jumpmind/symmetric/route/SimpleRouterContext;
     176: aload_0
     177: aload_0
     178: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     181: aload_0
     182: getfield      #32                 // Field triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
     185: invokevirtual #43                 // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
     188: invokevirtual #44                 // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     191: aload_2
     192: aload_0
     193: getfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     196: iconst_0
     197: invokevirtual #30                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.lookupAndOrderColumnsAccordingToTriggerHistory:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/db/model/Table;Z)Lorg/jumpmind/db/model/Table;
     200: putfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     203: aload_0
     204: aload_2
     205: aload_0
     206: getfield      #32                 // Field triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
     209: invokevirtual #45                 // Method startNewCursor:(Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/TriggerRouter;)V
     212: aload_0
     213: aload_0
     214: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     217: aload_0
     218: getfield      #32                 // Field triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
     221: invokevirtual #43                 // Method org/jumpmind/symmetric/model/TriggerRouter.getRouter:()Lorg/jumpmind/symmetric/model/Router;
     224: invokevirtual #44                 // Method org/jumpmind/symmetric/model/Router.getRouterId:()Ljava/lang/String;
     227: aload_2
     228: aload_0
     229: getfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     232: iconst_1
     233: invokevirtual #30                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.lookupAndOrderColumnsAccordingToTriggerHistory:(Ljava/lang/String;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/db/model/Table;Z)Lorg/jumpmind/db/model/Table;
     236: putfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     239: aload_0
     240: getfield      #46                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
     243: ifnull        330
     246: aload_0
     247: getfield      #46                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
     250: invokeinterface #47,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlReadCursor.next:()Ljava/lang/Object;
     255: checkcast     #48                 // class org/jumpmind/symmetric/io/data/CsvData
     258: astore_1
     259: aload_1
     260: ifnull        321
     263: aload_0
     264: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
     267: invokestatic  #49                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$400:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/IRouterService;
     270: aload_0
     271: getfield      #42                 // Field routingContext:Lorg/jumpmind/symmetric/route/SimpleRouterContext;
     274: new           #50                 // class org/jumpmind/symmetric/model/DataMetaData
     277: dup
     278: aload_1
     279: checkcast     #51                 // class org/jumpmind/symmetric/model/Data
     282: aload_0
     283: getfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
     286: aload_0
     287: getfield      #32                 // Field triggerRouter:Lorg/jumpmind/symmetric/model/TriggerRouter;
     290: aload_0
     291: getfield      #42                 // Field routingContext:Lorg/jumpmind/symmetric/route/SimpleRouterContext;
     294: invokevirtual #52                 // Method org/jumpmind/symmetric/route/SimpleRouterContext.getChannel:()Lorg/jumpmind/symmetric/model/NodeChannel;
     297: invokespecial #53                 // Method org/jumpmind/symmetric/model/DataMetaData."<init>":(Lorg/jumpmind/symmetric/model/Data;Lorg/jumpmind/db/model/Table;Lorg/jumpmind/symmetric/model/TriggerRouter;Lorg/jumpmind/symmetric/model/NodeChannel;)V
     300: aload_0
     301: getfield      #14                 // Field node:Lorg/jumpmind/symmetric/model/Node;
     304: iconst_1
     305: invokeinterface #54,  5           // InterfaceMethod org/jumpmind/symmetric/service/IRouterService.shouldDataBeRouted:(Lorg/jumpmind/symmetric/route/SimpleRouterContext;Lorg/jumpmind/symmetric/model/DataMetaData;Lorg/jumpmind/symmetric/model/Node;Z)Z
     310: ifne          330
     313: aload_0
     314: invokevirtual #55                 // Method next:()Lorg/jumpmind/symmetric/io/data/CsvData;
     317: astore_1
     318: goto          330
     321: aload_0
     322: invokevirtual #56                 // Method closeCursor:()V
     325: aload_0
     326: invokevirtual #55                 // Method next:()Lorg/jumpmind/symmetric/io/data/CsvData;
     329: astore_1
     330: aload_1
     331: ifnull        359
     334: aload_0
     335: getfield      #4                  // Field outgoingBatch:Lorg/jumpmind/symmetric/model/OutgoingBatch;
     338: ifnull        359
     341: aload_0
     342: getfield      #4                  // Field outgoingBatch:Lorg/jumpmind/symmetric/model/OutgoingBatch;
     345: invokevirtual #57                 // Method org/jumpmind/symmetric/model/OutgoingBatch.incrementDataEventCount:()V
     348: aload_0
     349: getfield      #4                  // Field outgoingBatch:Lorg/jumpmind/symmetric/model/OutgoingBatch;
     352: aload_1
     353: invokevirtual #58                 // Method org/jumpmind/symmetric/io/data/CsvData.getDataEventType:()Lorg/jumpmind/symmetric/io/data/DataEventType;
     356: invokevirtual #59                 // Method org/jumpmind/symmetric/model/OutgoingBatch.incrementEventCount:(Lorg/jumpmind/symmetric/io/data/DataEventType;)V
     359: aload_1
     360: areturn

  protected void closeCursor();
    Code:
       0: aload_0
       1: getfield      #46                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
       4: ifnull        26
       7: aload_0
       8: getfield      #46                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      11: invokeinterface #60,  1           // InterfaceMethod org/jumpmind/db/sql/ISqlReadCursor.close:()V
      16: aload_0
      17: aconst_null
      18: putfield      #46                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      21: aload_0
      22: aconst_null
      23: putfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      26: return

  protected void startNewCursor(org.jumpmind.symmetric.model.TriggerHistory, org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
       4: getfield      #61                 // Field org/jumpmind/symmetric/service/impl/DataExtractorService.symmetricDialect:Lorg/jumpmind/symmetric/db/ISymmetricDialect;
       7: aload_0
       8: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      11: invokevirtual #62                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.getNode:()Lorg/jumpmind/symmetric/model/Node;
      14: aload_2
      15: aload_0
      16: getfield      #19                 // Field currentTable:Lorg/jumpmind/db/model/Table;
      19: aload_1
      20: aload_0
      21: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
      24: invokestatic  #33                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService.access$300:(Lorg/jumpmind/symmetric/service/impl/DataExtractorService;)Lorg/jumpmind/symmetric/service/IConfigurationService;
      27: aload_2
      28: invokevirtual #37                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      31: invokevirtual #38                 // Method org/jumpmind/symmetric/model/Trigger.getChannelId:()Ljava/lang/String;
      34: invokeinterface #63,  2           // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getChannel:(Ljava/lang/String;)Lorg/jumpmind/symmetric/model/Channel;
      39: invokeinterface #64,  6           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.createInitialLoadSqlFor:(Lorg/jumpmind/symmetric/model/Node;Lorg/jumpmind/symmetric/model/TriggerRouter;Lorg/jumpmind/db/model/Table;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/Channel;)Ljava/lang/String;
      44: astore_3
      45: aload_0
      46: aload_0
      47: getfield      #2                  // Field this$0:Lorg/jumpmind/symmetric/service/impl/DataExtractorService;
      50: getfield      #65                 // Field org/jumpmind/symmetric/service/impl/DataExtractorService.sqlTemplate:Lorg/jumpmind/db/sql/ISqlTemplate;
      53: aload_3
      54: new           #66                 // class org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource$1
      57: dup
      58: aload_0
      59: aload_1
      60: aload_2
      61: invokespecial #67                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource$1."<init>":(Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableSource;Lorg/jumpmind/symmetric/model/TriggerHistory;Lorg/jumpmind/symmetric/model/TriggerRouter;)V
      64: invokeinterface #68,  3           // InterfaceMethod org/jumpmind/db/sql/ISqlTemplate.queryForCursor:(Ljava/lang/String;Lorg/jumpmind/db/sql/ISqlRowMapper;)Lorg/jumpmind/db/sql/ISqlReadCursor;
      69: putfield      #46                 // Field cursor:Lorg/jumpmind/db/sql/ISqlReadCursor;
      72: return

  public boolean requiresLobsSelectedFromSource();
    Code:
       0: aload_0
       1: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
       4: ifnull        31
       7: aload_0
       8: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      11: invokevirtual #31                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.getTriggerRouter:()Lorg/jumpmind/symmetric/model/TriggerRouter;
      14: ifnull        31
      17: aload_0
      18: getfield      #20                 // Field currentInitialLoadEvent:Lorg/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent;
      21: invokevirtual #31                 // Method org/jumpmind/symmetric/service/impl/DataExtractorService$SelectFromTableEvent.getTriggerRouter:()Lorg/jumpmind/symmetric/model/TriggerRouter;
      24: invokevirtual #37                 // Method org/jumpmind/symmetric/model/TriggerRouter.getTrigger:()Lorg/jumpmind/symmetric/model/Trigger;
      27: invokevirtual #69                 // Method org/jumpmind/symmetric/model/Trigger.isUseStreamLobs:()Z
      30: ireturn
      31: iconst_0
      32: ireturn

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method closeCursor:()V
       4: return

  static org.jumpmind.symmetric.io.data.Batch access$500(org.jumpmind.symmetric.service.impl.DataExtractorService$SelectFromTableSource);
    Code:
       0: aload_0
       1: getfield      #1                  // Field batch:Lorg/jumpmind/symmetric/io/data/Batch;
       4: areturn
}
