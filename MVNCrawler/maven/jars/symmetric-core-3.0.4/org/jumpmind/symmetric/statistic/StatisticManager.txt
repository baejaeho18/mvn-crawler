Compiled from "StatisticManager.java"
public class org.jumpmind.symmetric.statistic.StatisticManager implements org.jumpmind.symmetric.statistic.IStatisticManager {
  private static final java.lang.String UNKNOWN;

  private java.util.Map<java.lang.String, org.jumpmind.symmetric.statistic.ChannelStats> channelStats;

  private java.util.List<org.jumpmind.symmetric.statistic.JobStats> jobStats;

  private org.jumpmind.symmetric.statistic.HostStats hostStats;

  protected org.jumpmind.symmetric.service.INodeService nodeService;

  protected org.jumpmind.symmetric.service.IStatisticService statisticService;

  protected org.jumpmind.symmetric.service.IParameterService parameterService;

  protected org.jumpmind.symmetric.service.IConfigurationService configurationService;

  private static final int NUMBER_OF_PERMITS;

  java.util.concurrent.Semaphore channelStatsLock;

  java.util.concurrent.Semaphore hostStatsLock;

  java.util.concurrent.Semaphore jobStatsLock;

  public org.jumpmind.symmetric.statistic.StatisticManager(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.service.INodeService, org.jumpmind.symmetric.service.IConfigurationService, org.jumpmind.symmetric.service.IStatisticService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field channelStats:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field jobStats:Ljava/util/List;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/Semaphore
      30: dup
      31: sipush        1000
      34: iconst_1
      35: invokespecial #9                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      38: putfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      41: aload_0
      42: new           #8                  // class java/util/concurrent/Semaphore
      45: dup
      46: sipush        1000
      49: iconst_1
      50: invokespecial #9                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      53: putfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      56: aload_0
      57: new           #8                  // class java/util/concurrent/Semaphore
      60: dup
      61: sipush        1000
      64: iconst_1
      65: invokespecial #9                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      68: putfield      #12                 // Field jobStatsLock:Ljava/util/concurrent/Semaphore;
      71: aload_0
      72: aload_1
      73: putfield      #13                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
      76: aload_0
      77: aload_2
      78: putfield      #14                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      81: aload_0
      82: aload_3
      83: putfield      #15                 // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      86: aload_0
      87: aload         4
      89: putfield      #16                 // Field statisticService:Lorg/jumpmind/symmetric/service/IStatisticService;
      92: return

  protected void init();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method incrementRestart:()V
       4: return

  public void addJobStats(java.lang.String, long, long, long);
    Code:
       0: aload_0
       1: getfield      #12                 // Field jobStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: new           #19                 // class org/jumpmind/symmetric/statistic/JobStats
      10: dup
      11: aload_1
      12: lload_2
      13: lload         4
      15: lload         6
      17: invokespecial #20                 // Method org/jumpmind/symmetric/statistic/JobStats."<init>":(Ljava/lang/String;JJJ)V
      20: astore        8
      22: aload_0
      23: getfield      #7                  // Field jobStats:Ljava/util/List;
      26: aload         8
      28: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: jsr           48
      37: goto          59
      40: astore        9
      42: jsr           48
      45: aload         9
      47: athrow
      48: astore        10
      50: aload_0
      51: getfield      #12                 // Field jobStatsLock:Ljava/util/concurrent/Semaphore;
      54: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      57: ret           10
      59: return
    Exception table:
       from    to  target type
           7    37    40   any
          40    45    40   any

  public void incrementDataRouted(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #24                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataRouted:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void setDataUnRouted(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #25                 // Method org/jumpmind/symmetric/statistic/ChannelStats.setDataUnRouted:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataExtracted(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #26                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataExtracted:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataBytesExtracted(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #27                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataBytesExtracted:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataExtractedErrors(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #28                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataExtractedErrors:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataEventInserted(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #29                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataEventInserted:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataSent(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #30                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataSent:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataBytesSent(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #31                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataBytesSent:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataSentErrors(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #32                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataSentErrors:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataLoaded(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #33                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataLoaded:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataBytesLoaded(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #34                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataBytesLoaded:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementDataLoadedErrors(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      12: lload_2
      13: invokevirtual #35                 // Method org/jumpmind/symmetric/statistic/ChannelStats.incrementDataLoadedErrors:(J)V
      16: jsr           30
      19: goto          41
      22: astore        4
      24: jsr           30
      27: aload         4
      29: athrow
      30: astore        5
      32: aload_0
      33: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      36: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      39: ret           5
      41: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    27    22   any

  public void incrementRestart();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lconst_1
      12: invokevirtual #37                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementRestarted:(J)V
      15: jsr           27
      18: goto          37
      21: astore_1
      22: jsr           27
      25: aload_1
      26: athrow
      27: astore_2
      28: aload_0
      29: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      32: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      35: ret           2
      37: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementNodesPulled(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #38                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementNodesPulled:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementNodesPushed(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #39                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementNodesPushed:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementTotalNodesPulledTime(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #40                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementTotalNodesPullTime:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementTotalNodesPushedTime(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #41                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementTotalNodesPushTime:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementNodesRejected(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #42                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementNodesRejected:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementNodesRegistered(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #43                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementNodesRegistered:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementNodesLoaded(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #44                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementNodesLoaded:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementNodesDisabled(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #45                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementNodesDisabled:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementPurgedBatchIncomingRows(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #46                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementPurgedBatchIncomingRows:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementPurgedBatchOutgoingRows(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #47                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementPurgedBatchOutgoingRows:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementPurgedDataRows(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #48                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementPurgedDataRows:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementPurgedDataEventRows(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #49                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementPurgedDataEventRows:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementTriggersRemovedCount(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #50                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementTriggersRemovedCount:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementTriggersRebuiltCount(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #51                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementTriggersRebuiltCount:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void incrementTriggersCreatedCount(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
       4: invokevirtual #18                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
       7: aload_0
       8: invokevirtual #36                 // Method getHostStats:()Lorg/jumpmind/symmetric/statistic/HostStats;
      11: lload_1
      12: invokevirtual #52                 // Method org/jumpmind/symmetric/statistic/HostStats.incrementTriggersCreatedCount:(J)V
      15: jsr           27
      18: goto          38
      21: astore_3
      22: jsr           27
      25: aload_3
      26: athrow
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
      33: invokevirtual #22                 // Method java/util/concurrent/Semaphore.release:()V
      36: ret           4
      38: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    25    21   any

  public void flush();
    Code:
       0: aload_0
       1: getfield      #13                 // Field parameterService:Lorg/jumpmind/symmetric/service/IParameterService;
       4: ldc           #53                 // String statistic.record.enable
       6: iconst_0
       7: invokeinterface #54,  3           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.is:(Ljava/lang/String;Z)Z
      12: istore_1
      13: aload_0
      14: getfield      #4                  // Field channelStats:Ljava/util/Map;
      17: ifnull        169
      20: aload_0
      21: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
      24: sipush        1000
      27: invokevirtual #55                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:(I)V
      30: iload_1
      31: ifeq          136
      34: new           #56                 // class java/util/Date
      37: dup
      38: invokespecial #57                 // Method java/util/Date."<init>":()V
      41: astore_2
      42: aload_0
      43: getfield      #4                  // Field channelStats:Ljava/util/Map;
      46: invokeinterface #58,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      51: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      56: astore_3
      57: aload_3
      58: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          136
      66: aload_3
      67: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #62                 // class org/jumpmind/symmetric/statistic/ChannelStats
      75: astore        4
      77: aload         4
      79: invokevirtual #63                 // Method org/jumpmind/symmetric/statistic/ChannelStats.getNodeId:()Ljava/lang/String;
      82: ldc           #64                 // String Unknown
      84: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      87: ifeq          116
      90: aload_0
      91: getfield      #14                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      94: invokeinterface #66,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.getCachedIdentity:()Lorg/jumpmind/symmetric/model/Node;
      99: astore        5
     101: aload         5
     103: ifnull        116
     106: aload         4
     108: aload         5
     110: invokevirtual #67                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     113: invokevirtual #68                 // Method org/jumpmind/symmetric/statistic/ChannelStats.setNodeId:(Ljava/lang/String;)V
     116: aload         4
     118: aload_2
     119: invokevirtual #69                 // Method org/jumpmind/symmetric/statistic/ChannelStats.setEndTime:(Ljava/util/Date;)V
     122: aload_0
     123: getfield      #16                 // Field statisticService:Lorg/jumpmind/symmetric/service/IStatisticService;
     126: aload         4
     128: invokeinterface #70,  2           // InterfaceMethod org/jumpmind/symmetric/service/IStatisticService.save:(Lorg/jumpmind/symmetric/statistic/ChannelStats;)V
     133: goto          57
     136: aload_0
     137: iconst_1
     138: invokevirtual #71                 // Method resetChannelStats:(Z)V
     141: jsr           155
     144: goto          169
     147: astore        6
     149: jsr           155
     152: aload         6
     154: athrow
     155: astore        7
     157: aload_0
     158: getfield      #10                 // Field channelStatsLock:Ljava/util/concurrent/Semaphore;
     161: sipush        1000
     164: invokevirtual #72                 // Method java/util/concurrent/Semaphore.release:(I)V
     167: ret           7
     169: aload_0
     170: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
     173: ifnull        290
     176: aload_0
     177: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
     180: sipush        1000
     183: invokevirtual #55                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:(I)V
     186: iload_1
     187: ifeq          257
     190: aload_0
     191: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
     194: invokevirtual #74                 // Method org/jumpmind/symmetric/statistic/HostStats.getNodeId:()Ljava/lang/String;
     197: ldc           #64                 // String Unknown
     199: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     202: ifeq          230
     205: aload_0
     206: getfield      #14                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
     209: invokeinterface #66,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.getCachedIdentity:()Lorg/jumpmind/symmetric/model/Node;
     214: astore_2
     215: aload_2
     216: ifnull        230
     219: aload_0
     220: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
     223: aload_2
     224: invokevirtual #67                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     227: invokevirtual #75                 // Method org/jumpmind/symmetric/statistic/HostStats.setNodeId:(Ljava/lang/String;)V
     230: aload_0
     231: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
     234: new           #56                 // class java/util/Date
     237: dup
     238: invokespecial #57                 // Method java/util/Date."<init>":()V
     241: invokevirtual #76                 // Method org/jumpmind/symmetric/statistic/HostStats.setEndTime:(Ljava/util/Date;)V
     244: aload_0
     245: getfield      #16                 // Field statisticService:Lorg/jumpmind/symmetric/service/IStatisticService;
     248: aload_0
     249: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
     252: invokeinterface #77,  2           // InterfaceMethod org/jumpmind/symmetric/service/IStatisticService.save:(Lorg/jumpmind/symmetric/statistic/HostStats;)V
     257: aload_0
     258: aconst_null
     259: putfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
     262: jsr           276
     265: goto          290
     268: astore        8
     270: jsr           276
     273: aload         8
     275: athrow
     276: astore        9
     278: aload_0
     279: getfield      #11                 // Field hostStatsLock:Ljava/util/concurrent/Semaphore;
     282: sipush        1000
     285: invokevirtual #72                 // Method java/util/concurrent/Semaphore.release:(I)V
     288: ret           9
     290: aload_0
     291: getfield      #7                  // Field jobStats:Ljava/util/List;
     294: ifnull        444
     297: aconst_null
     298: astore_2
     299: aload_0
     300: getfield      #12                 // Field jobStatsLock:Ljava/util/concurrent/Semaphore;
     303: sipush        1000
     306: invokevirtual #55                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:(I)V
     309: aload_0
     310: getfield      #7                  // Field jobStats:Ljava/util/List;
     313: astore_2
     314: aload_0
     315: new           #5                  // class java/util/ArrayList
     318: dup
     319: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
     322: putfield      #7                  // Field jobStats:Ljava/util/List;
     325: jsr           339
     328: goto          353
     331: astore        10
     333: jsr           339
     336: aload         10
     338: athrow
     339: astore        11
     341: aload_0
     342: getfield      #12                 // Field jobStatsLock:Ljava/util/concurrent/Semaphore;
     345: sipush        1000
     348: invokevirtual #72                 // Method java/util/concurrent/Semaphore.release:(I)V
     351: ret           11
     353: aload_2
     354: ifnull        444
     357: iload_1
     358: ifeq          444
     361: aload_0
     362: getfield      #14                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
     365: invokeinterface #66,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.getCachedIdentity:()Lorg/jumpmind/symmetric/model/Node;
     370: astore_3
     371: aload_3
     372: ifnull        444
     375: aload_3
     376: invokevirtual #67                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
     379: astore        4
     381: invokestatic  #78                 // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
     384: astore        5
     386: aload_2
     387: invokeinterface #79,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     392: astore        6
     394: aload         6
     396: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     401: ifeq          444
     404: aload         6
     406: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     411: checkcast     #19                 // class org/jumpmind/symmetric/statistic/JobStats
     414: astore        7
     416: aload         7
     418: aload         4
     420: invokevirtual #80                 // Method org/jumpmind/symmetric/statistic/JobStats.setNodeId:(Ljava/lang/String;)V
     423: aload         7
     425: aload         5
     427: invokevirtual #81                 // Method org/jumpmind/symmetric/statistic/JobStats.setHostName:(Ljava/lang/String;)V
     430: aload_0
     431: getfield      #16                 // Field statisticService:Lorg/jumpmind/symmetric/service/IStatisticService;
     434: aload         7
     436: invokeinterface #82,  2           // InterfaceMethod org/jumpmind/symmetric/service/IStatisticService.save:(Lorg/jumpmind/symmetric/statistic/JobStats;)V
     441: goto          394
     444: return
    Exception table:
       from    to  target type
          30   144   147   any
         147   152   147   any
         186   265   268   any
         268   273   268   any
         309   328   331   any
         331   336   331   any

  public java.util.Map<java.lang.String, org.jumpmind.symmetric.statistic.ChannelStats> getWorkingChannelStats();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channelStats:Ljava/util/Map;
       4: ifnull        19
       7: new           #2                  // class java/util/HashMap
      10: dup
      11: aload_0
      12: getfield      #4                  // Field channelStats:Ljava/util/Map;
      15: invokespecial #83                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      18: areturn
      19: new           #2                  // class java/util/HashMap
      22: dup
      23: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      26: areturn

  public org.jumpmind.symmetric.statistic.HostStats getWorkingHostStats();
    Code:
       0: aload_0
       1: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
       4: ifnull        19
       7: new           #84                 // class org/jumpmind/symmetric/statistic/HostStats
      10: dup
      11: aload_0
      12: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
      15: invokespecial #85                 // Method org/jumpmind/symmetric/statistic/HostStats."<init>":(Lorg/jumpmind/symmetric/statistic/HostStats;)V
      18: areturn
      19: new           #84                 // class org/jumpmind/symmetric/statistic/HostStats
      22: dup
      23: invokespecial #86                 // Method org/jumpmind/symmetric/statistic/HostStats."<init>":()V
      26: areturn

  protected void resetChannelStats(boolean);
    Code:
       0: iload_1
       1: ifeq          9
       4: aload_0
       5: aconst_null
       6: putfield      #4                  // Field channelStats:Ljava/util/Map;
       9: aload_0
      10: getfield      #4                  // Field channelStats:Ljava/util/Map;
      13: ifnonnull     84
      16: aload_0
      17: getfield      #15                 // Field configurationService:Lorg/jumpmind/symmetric/service/IConfigurationService;
      20: iconst_0
      21: invokeinterface #87,  2           // InterfaceMethod org/jumpmind/symmetric/service/IConfigurationService.getNodeChannels:(Z)Ljava/util/List;
      26: astore_2
      27: aload_0
      28: new           #2                  // class java/util/HashMap
      31: dup
      32: aload_2
      33: invokeinterface #88,  1           // InterfaceMethod java/util/List.size:()I
      38: invokespecial #89                 // Method java/util/HashMap."<init>":(I)V
      41: putfield      #4                  // Field channelStats:Ljava/util/Map;
      44: aload_2
      45: invokeinterface #79,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore_3
      51: aload_3
      52: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          84
      60: aload_3
      61: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #90                 // class org/jumpmind/symmetric/model/NodeChannel
      69: astore        4
      71: aload_0
      72: aload         4
      74: invokevirtual #91                 // Method org/jumpmind/symmetric/model/NodeChannel.getChannelId:()Ljava/lang/String;
      77: invokevirtual #23                 // Method getChannelStats:(Ljava/lang/String;)Lorg/jumpmind/symmetric/statistic/ChannelStats;
      80: pop
      81: goto          51
      84: return

  protected org.jumpmind.symmetric.statistic.ChannelStats getChannelStats(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #71                 // Method resetChannelStats:(Z)V
       5: aload_0
       6: getfield      #4                  // Field channelStats:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #92,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #62                 // class org/jumpmind/symmetric/statistic/ChannelStats
      18: astore_2
      19: aload_2
      20: ifnonnull     98
      23: aload_0
      24: getfield      #14                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      27: invokeinterface #66,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.getCachedIdentity:()Lorg/jumpmind/symmetric/model/Node;
      32: astore_3
      33: aload_3
      34: ifnull        76
      37: new           #62                 // class org/jumpmind/symmetric/statistic/ChannelStats
      40: dup
      41: aload_3
      42: invokevirtual #67                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      45: invokestatic  #78                 // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      48: new           #56                 // class java/util/Date
      51: dup
      52: invokespecial #57                 // Method java/util/Date."<init>":()V
      55: aconst_null
      56: aload_1
      57: invokespecial #93                 // Method org/jumpmind/symmetric/statistic/ChannelStats."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;)V
      60: astore_2
      61: aload_0
      62: getfield      #4                  // Field channelStats:Ljava/util/Map;
      65: aload_1
      66: aload_2
      67: invokeinterface #94,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: goto          98
      76: new           #62                 // class org/jumpmind/symmetric/statistic/ChannelStats
      79: dup
      80: ldc           #64                 // String Unknown
      82: invokestatic  #78                 // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      85: new           #56                 // class java/util/Date
      88: dup
      89: invokespecial #57                 // Method java/util/Date."<init>":()V
      92: aconst_null
      93: aload_1
      94: invokespecial #93                 // Method org/jumpmind/symmetric/statistic/ChannelStats."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;Ljava/lang/String;)V
      97: astore_2
      98: aload_2
      99: areturn

  protected org.jumpmind.symmetric.statistic.HostStats getHostStats();
    Code:
       0: aload_0
       1: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
       4: ifnonnull     74
       7: aload_0
       8: getfield      #14                 // Field nodeService:Lorg/jumpmind/symmetric/service/INodeService;
      11: invokeinterface #66,  1           // InterfaceMethod org/jumpmind/symmetric/service/INodeService.getCachedIdentity:()Lorg/jumpmind/symmetric/model/Node;
      16: astore_1
      17: aload_1
      18: ifnull        50
      21: aload_0
      22: new           #84                 // class org/jumpmind/symmetric/statistic/HostStats
      25: dup
      26: aload_1
      27: invokevirtual #67                 // Method org/jumpmind/symmetric/model/Node.getNodeId:()Ljava/lang/String;
      30: invokestatic  #78                 // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      33: new           #56                 // class java/util/Date
      36: dup
      37: invokespecial #57                 // Method java/util/Date."<init>":()V
      40: aconst_null
      41: invokespecial #95                 // Method org/jumpmind/symmetric/statistic/HostStats."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;)V
      44: putfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
      47: goto          74
      50: aload_0
      51: new           #84                 // class org/jumpmind/symmetric/statistic/HostStats
      54: dup
      55: ldc           #64                 // String Unknown
      57: invokestatic  #78                 // Method org/jumpmind/symmetric/util/AppUtils.getServerId:()Ljava/lang/String;
      60: new           #56                 // class java/util/Date
      63: dup
      64: invokespecial #57                 // Method java/util/Date."<init>":()V
      67: aconst_null
      68: invokespecial #95                 // Method org/jumpmind/symmetric/statistic/HostStats."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Date;Ljava/util/Date;)V
      71: putfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
      74: aload_0
      75: getfield      #73                 // Field hostStats:Lorg/jumpmind/symmetric/statistic/HostStats;
      78: areturn
}
