Compiled from "AbstractStatisticsWriter.java"
abstract class org.jumpmind.symmetric.statistic.AbstractStatisticsWriter extends java.io.FilterWriter {
  protected org.jumpmind.symmetric.statistic.IStatisticManager statisticManager;

  protected java.lang.String channelId;

  protected long byteCount;

  protected long lineCount;

  private int notifyAfterByteCount;

  private int notifyAfterLineCount;

  public org.jumpmind.symmetric.statistic.AbstractStatisticsWriter(org.jumpmind.symmetric.statistic.IStatisticManager, java.io.Writer, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
       5: aload_0
       6: lconst_0
       7: putfield      #2                  // Field byteCount:J
      10: aload_0
      11: lconst_0
      12: putfield      #3                  // Field lineCount:J
      15: aload_0
      16: aload_1
      17: putfield      #4                  // Field statisticManager:Lorg/jumpmind/symmetric/statistic/IStatisticManager;
      20: aload_0
      21: iload_3
      22: putfield      #5                  // Field notifyAfterByteCount:I
      25: aload_0
      26: iload         4
      28: putfield      #6                  // Field notifyAfterLineCount:I
      31: return

  public void setChannelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field channelId:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #8                  // Method flushCounts:()V
       9: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #9                  // Method java/io/FilterWriter.write:(I)V
       5: aload_0
       6: dup
       7: getfield      #2                  // Field byteCount:J
      10: lconst_1
      11: ladd
      12: putfield      #2                  // Field byteCount:J
      15: aload_0
      16: getfield      #2                  // Field byteCount:J
      19: aload_0
      20: getfield      #5                  // Field notifyAfterByteCount:I
      23: i2l
      24: lrem
      25: lconst_0
      26: lcmp
      27: ifne          43
      30: aload_0
      31: aload_0
      32: getfield      #2                  // Field byteCount:J
      35: invokevirtual #10                 // Method processNumberOfBytesSoFar:(J)V
      38: aload_0
      39: lconst_0
      40: putfield      #2                  // Field byteCount:J
      43: iload_1
      44: i2c
      45: bipush        10
      47: if_icmpne     88
      50: aload_0
      51: dup
      52: getfield      #3                  // Field lineCount:J
      55: lconst_1
      56: ladd
      57: putfield      #3                  // Field lineCount:J
      60: aload_0
      61: getfield      #3                  // Field lineCount:J
      64: aload_0
      65: getfield      #6                  // Field notifyAfterLineCount:I
      68: i2l
      69: lrem
      70: lconst_0
      71: lcmp
      72: ifne          88
      75: aload_0
      76: aload_0
      77: getfield      #3                  // Field lineCount:J
      80: invokevirtual #11                 // Method processNumberOfLinesSoFar:(J)V
      83: aload_0
      84: lconst_0
      85: putfield      #3                  // Field lineCount:J
      88: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #12                 // Method java/io/FilterWriter.write:([CII)V
       7: aload_0
       8: dup
       9: getfield      #2                  // Field byteCount:J
      12: iload_3
      13: i2l
      14: ladd
      15: putfield      #2                  // Field byteCount:J
      18: aload_0
      19: getfield      #2                  // Field byteCount:J
      22: aload_0
      23: getfield      #5                  // Field notifyAfterByteCount:I
      26: i2l
      27: lrem
      28: lconst_0
      29: lcmp
      30: ifne          46
      33: aload_0
      34: aload_0
      35: getfield      #2                  // Field byteCount:J
      38: invokevirtual #10                 // Method processNumberOfBytesSoFar:(J)V
      41: aload_0
      42: lconst_0
      43: putfield      #2                  // Field byteCount:J
      46: iconst_0
      47: istore        4
      49: iload         4
      51: iload_3
      52: if_icmpge     114
      55: aload_1
      56: iload         4
      58: iload_2
      59: iadd
      60: caload
      61: istore        5
      63: iload         5
      65: bipush        10
      67: if_icmpne     108
      70: aload_0
      71: dup
      72: getfield      #3                  // Field lineCount:J
      75: lconst_1
      76: ladd
      77: putfield      #3                  // Field lineCount:J
      80: aload_0
      81: getfield      #3                  // Field lineCount:J
      84: aload_0
      85: getfield      #6                  // Field notifyAfterLineCount:I
      88: i2l
      89: lrem
      90: lconst_0
      91: lcmp
      92: ifne          108
      95: aload_0
      96: aload_0
      97: getfield      #3                  // Field lineCount:J
     100: invokevirtual #11                 // Method processNumberOfLinesSoFar:(J)V
     103: aload_0
     104: lconst_0
     105: putfield      #3                  // Field lineCount:J
     108: iinc          4, 1
     111: goto          49
     114: return

  public void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #13                 // Method java/io/FilterWriter.write:(Ljava/lang/String;II)V
       7: aload_0
       8: dup
       9: getfield      #2                  // Field byteCount:J
      12: iload_3
      13: i2l
      14: ladd
      15: putfield      #2                  // Field byteCount:J
      18: aload_0
      19: getfield      #2                  // Field byteCount:J
      22: aload_0
      23: getfield      #5                  // Field notifyAfterByteCount:I
      26: i2l
      27: lrem
      28: lconst_0
      29: lcmp
      30: ifne          46
      33: aload_0
      34: aload_0
      35: getfield      #2                  // Field byteCount:J
      38: invokevirtual #10                 // Method processNumberOfBytesSoFar:(J)V
      41: aload_0
      42: lconst_0
      43: putfield      #2                  // Field byteCount:J
      46: iconst_0
      47: istore        4
      49: iload         4
      51: iload_3
      52: if_icmpge     116
      55: aload_1
      56: iload         4
      58: iload_2
      59: iadd
      60: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      63: istore        5
      65: iload         5
      67: bipush        10
      69: if_icmpne     110
      72: aload_0
      73: dup
      74: getfield      #3                  // Field lineCount:J
      77: lconst_1
      78: ladd
      79: putfield      #3                  // Field lineCount:J
      82: aload_0
      83: getfield      #3                  // Field lineCount:J
      86: aload_0
      87: getfield      #6                  // Field notifyAfterLineCount:I
      90: i2l
      91: lrem
      92: lconst_0
      93: lcmp
      94: ifne          110
      97: aload_0
      98: aload_0
      99: getfield      #3                  // Field lineCount:J
     102: invokevirtual #11                 // Method processNumberOfLinesSoFar:(J)V
     105: aload_0
     106: lconst_0
     107: putfield      #3                  // Field lineCount:J
     110: iinc          4, 1
     113: goto          49
     116: return

  protected void flushCounts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineCount:J
       4: lconst_0
       5: lcmp
       6: ifle          22
       9: aload_0
      10: aload_0
      11: getfield      #3                  // Field lineCount:J
      14: invokevirtual #11                 // Method processNumberOfLinesSoFar:(J)V
      17: aload_0
      18: lconst_0
      19: putfield      #3                  // Field lineCount:J
      22: aload_0
      23: getfield      #2                  // Field byteCount:J
      26: lconst_0
      27: lcmp
      28: ifle          44
      31: aload_0
      32: aload_0
      33: getfield      #2                  // Field byteCount:J
      36: invokevirtual #10                 // Method processNumberOfBytesSoFar:(J)V
      39: aload_0
      40: lconst_0
      41: putfield      #2                  // Field byteCount:J
      44: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/io/FilterWriter.flush:()V
       4: aload_0
       5: invokevirtual #8                  // Method flushCounts:()V
       8: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/io/FilterWriter.close:()V
       4: aload_0
       5: invokevirtual #8                  // Method flushCounts:()V
       8: return

  protected abstract void processNumberOfBytesSoFar(long);

  protected abstract void processNumberOfLinesSoFar(long);
}
