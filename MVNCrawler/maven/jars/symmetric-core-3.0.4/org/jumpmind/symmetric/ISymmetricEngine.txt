Compiled from "ISymmetricEngine.java"
public interface org.jumpmind.symmetric.ISymmetricEngine {
  public abstract void stop();

  public abstract void destroy();

  public abstract java.lang.String getSyncUrl();

  public abstract java.util.Properties getProperties();

  public abstract java.lang.String getEngineName();

  public abstract void setup();

  public abstract boolean start();

  public abstract boolean start(boolean);

  public abstract java.lang.String reloadNode(java.lang.String);

  public abstract java.lang.String sendSQL(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract org.jumpmind.symmetric.model.RemoteNodeStatuses push();

  public abstract void syncTriggers();

  public abstract void forceTriggerRebuild();

  public abstract org.jumpmind.symmetric.model.NodeStatus getNodeStatus();

  public abstract org.jumpmind.symmetric.model.RemoteNodeStatuses pull();

  public abstract void route();

  public abstract void purge();

  public abstract boolean isConfigured();

  public abstract void heartbeat(boolean);

  public abstract void openRegistration(java.lang.String, java.lang.String);

  public abstract void reOpenRegistration(java.lang.String);

  public abstract boolean isRegistered();

  public abstract boolean isStarted();

  public abstract boolean isStarting();

  public abstract void setupDatabase(boolean);

  public abstract org.jumpmind.symmetric.service.IConfigurationService getConfigurationService();

  public abstract org.jumpmind.symmetric.service.IParameterService getParameterService();

  public abstract org.jumpmind.symmetric.service.INodeService getNodeService();

  public abstract org.jumpmind.symmetric.service.IRegistrationService getRegistrationService();

  public abstract org.jumpmind.symmetric.service.IClusterService getClusterService();

  public abstract org.jumpmind.symmetric.service.IPurgeService getPurgeService();

  public abstract org.jumpmind.symmetric.service.IDataService getDataService();

  public abstract org.jumpmind.symmetric.db.ISymmetricDialect getSymmetricDialect();

  public abstract org.jumpmind.symmetric.job.IJobManager getJobManager();

  public abstract org.jumpmind.symmetric.service.IOutgoingBatchService getOutgoingBatchService();

  public abstract org.jumpmind.symmetric.service.IAcknowledgeService getAcknowledgeService();

  public abstract org.jumpmind.symmetric.service.IBandwidthService getBandwidthService();

  public abstract org.jumpmind.symmetric.service.IDataExtractorService getDataExtractorService();

  public abstract org.jumpmind.symmetric.service.IDataLoaderService getDataLoaderService();

  public abstract org.jumpmind.symmetric.service.IIncomingBatchService getIncomingBatchService();

  public abstract org.jumpmind.symmetric.service.IPullService getPullService();

  public abstract org.jumpmind.symmetric.service.IPushService getPushService();

  public abstract org.jumpmind.symmetric.service.IRouterService getRouterService();

  public abstract org.jumpmind.symmetric.service.ISecurityService getSecurityService();

  public abstract org.jumpmind.symmetric.service.IStatisticService getStatisticService();

  public abstract org.jumpmind.symmetric.service.ITriggerRouterService getTriggerRouterService();

  public abstract org.jumpmind.symmetric.statistic.IStatisticManager getStatisticManager();

  public abstract java.lang.String getDeploymentType();

  public abstract org.jumpmind.symmetric.transport.IConcurrentConnectionManager getConcurrentConnectionManager();

  public abstract org.jumpmind.symmetric.service.ITransformService getTransformService();

  public abstract org.jumpmind.symmetric.transport.ITransportManager getTransportManager();

  public abstract org.jumpmind.symmetric.service.INodeCommunicationService getNodeCommunicationService();

  public abstract java.lang.String getTablePrefix();

  public abstract org.slf4j.Logger getLog();

  public abstract org.jumpmind.symmetric.ext.IExtensionPointManager getExtensionPointManager();

  public abstract org.jumpmind.symmetric.io.stage.IStagingManager getStagingManager();

  public abstract org.jumpmind.db.sql.ISqlTemplate getSqlTemplate();

  public abstract java.util.Date getLastRestartTime();

  public abstract <T> T getDataSource();
}
