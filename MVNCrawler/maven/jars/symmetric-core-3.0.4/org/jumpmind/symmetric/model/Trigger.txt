Compiled from "Trigger.java"
public class org.jumpmind.symmetric.model.Trigger implements java.io.Serializable {
  private static final long serialVersionUID;

  static final org.slf4j.Logger logger;

  private static int maxTriggerId;

  private static final java.lang.String DEFAULT_CONDITION;

  private java.lang.String triggerId;

  private java.lang.String sourceTableName;

  private java.lang.String sourceSchemaName;

  private java.lang.String sourceCatalogName;

  private java.lang.String channelId;

  private boolean syncOnUpdate;

  private boolean syncOnInsert;

  private boolean syncOnDelete;

  private boolean syncOnIncomingBatch;

  private boolean useStreamLobs;

  private boolean useCaptureLobs;

  private boolean useCaptureOldData;

  private java.lang.String nameForInsertTrigger;

  private java.lang.String nameForUpdateTrigger;

  private java.lang.String nameForDeleteTrigger;

  private java.lang.String syncOnUpdateCondition;

  private java.lang.String syncOnInsertCondition;

  private java.lang.String syncOnDeleteCondition;

  private java.lang.String excludedColumnNames;

  private java.lang.String txIdExpression;

  private java.lang.String externalSelect;

  private java.util.Date createTime;

  private java.util.Date lastUpdateTime;

  private java.lang.String lastUpdateBy;

  public org.jumpmind.symmetric.model.Trigger();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String default
       7: putfield      #3                  // Field channelId:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #4                  // Field syncOnUpdate:Z
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field syncOnInsert:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field syncOnDelete:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field syncOnIncomingBatch:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field useStreamLobs:Z
      35: aload_0
      36: iconst_0
      37: putfield      #9                  // Field useCaptureLobs:Z
      40: aload_0
      41: iconst_1
      42: putfield      #10                 // Field useCaptureOldData:Z
      45: aload_0
      46: ldc           #11                 // String 1=1
      48: putfield      #12                 // Field syncOnUpdateCondition:Ljava/lang/String;
      51: aload_0
      52: ldc           #11                 // String 1=1
      54: putfield      #13                 // Field syncOnInsertCondition:Ljava/lang/String;
      57: aload_0
      58: ldc           #11                 // String 1=1
      60: putfield      #14                 // Field syncOnDeleteCondition:Ljava/lang/String;
      63: aload_0
      64: aconst_null
      65: putfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
      68: aload_0
      69: aconst_null
      70: putfield      #16                 // Field txIdExpression:Ljava/lang/String;
      73: aload_0
      74: aconst_null
      75: putfield      #17                 // Field externalSelect:Ljava/lang/String;
      78: aload_0
      79: getstatic     #18                 // Field maxTriggerId:I
      82: dup
      83: iconst_1
      84: iadd
      85: putstatic     #18                 // Field maxTriggerId:I
      88: invokestatic  #19                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      91: putfield      #20                 // Field triggerId:Ljava/lang/String;
      94: return

  public org.jumpmind.symmetric.model.Trigger(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String default
       7: putfield      #3                  // Field channelId:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #4                  // Field syncOnUpdate:Z
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field syncOnInsert:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field syncOnDelete:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field syncOnIncomingBatch:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field useStreamLobs:Z
      35: aload_0
      36: iconst_0
      37: putfield      #9                  // Field useCaptureLobs:Z
      40: aload_0
      41: iconst_1
      42: putfield      #10                 // Field useCaptureOldData:Z
      45: aload_0
      46: ldc           #11                 // String 1=1
      48: putfield      #12                 // Field syncOnUpdateCondition:Ljava/lang/String;
      51: aload_0
      52: ldc           #11                 // String 1=1
      54: putfield      #13                 // Field syncOnInsertCondition:Ljava/lang/String;
      57: aload_0
      58: ldc           #11                 // String 1=1
      60: putfield      #14                 // Field syncOnDeleteCondition:Ljava/lang/String;
      63: aload_0
      64: aconst_null
      65: putfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
      68: aload_0
      69: aconst_null
      70: putfield      #16                 // Field txIdExpression:Ljava/lang/String;
      73: aload_0
      74: aconst_null
      75: putfield      #17                 // Field externalSelect:Ljava/lang/String;
      78: aload_0
      79: aload_1
      80: putfield      #20                 // Field triggerId:Ljava/lang/String;
      83: aload_0
      84: aload_1
      85: putfield      #21                 // Field sourceTableName:Ljava/lang/String;
      88: aload_0
      89: aload_2
      90: putfield      #3                  // Field channelId:Ljava/lang/String;
      93: return

  public final java.lang.String qualifiedSourceTableName();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #24                 // Method qualifiedSourceTablePrefix:()Ljava/lang/String;
      11: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
      18: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public final java.lang.String qualifiedSourceTablePrefix();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method getSourceSchemaName:()Ljava/lang/String;
       4: ifnull        32
       7: new           #22                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: invokevirtual #27                 // Method getSourceSchemaName:()Ljava/lang/String;
      18: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #28                 // String .
      23: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: goto          34
      32: ldc           #29                 // String
      34: astore_1
      35: new           #22                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_0
      43: invokevirtual #30                 // Method getSourceCatalogName:()Ljava/lang/String;
      46: ifnull        74
      49: new           #22                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      56: aload_0
      57: invokevirtual #30                 // Method getSourceCatalogName:()Ljava/lang/String;
      60: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #28                 // String .
      65: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: goto          76
      74: ldc           #29                 // String
      76: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: astore_2
      87: aload_2
      88: areturn

  public void nullOutBlankFields();
    Code:
       0: aload_0
       1: getfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
       4: invokestatic  #32                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: aconst_null
      12: putfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
      15: aload_0
      16: getfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
      19: invokestatic  #32                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      22: ifeq          30
      25: aload_0
      26: aconst_null
      27: putfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
      30: return

  public org.jumpmind.db.model.Column[] orderColumnsForTable(org.jumpmind.db.model.Table);
    Code:
       0: aload_1
       1: ifnull        140
       4: aload_0
       5: invokespecial #34                 // Method getExcludedColumnNamesAsList:()Ljava/util/List;
       8: astore_2
       9: aload_1
      10: invokevirtual #35                 // Method org/jumpmind/db/model/Table.getPrimaryKeyColumns:()[Lorg/jumpmind/db/model/Column;
      13: astore_3
      14: aload_1
      15: invokevirtual #36                 // Method org/jumpmind/db/model/Table.getColumns:()[Lorg/jumpmind/db/model/Column;
      18: astore        4
      20: new           #37                 // class java/util/ArrayList
      23: dup
      24: aload         4
      26: arraylength
      27: invokespecial #38                 // Method java/util/ArrayList."<init>":(I)V
      30: astore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: aload_3
      38: arraylength
      39: if_icmpge     60
      42: aload         5
      44: aload_3
      45: iload         6
      47: aaload
      48: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: iinc          6, 1
      57: goto          35
      60: iconst_0
      61: istore        6
      63: iload         6
      65: aload         4
      67: arraylength
      68: if_icmpge     119
      71: aload         4
      73: iload         6
      75: aaload
      76: astore        7
      78: aload         7
      80: invokevirtual #40                 // Method org/jumpmind/db/model/Column.isPrimaryKey:()Z
      83: ifne          113
      86: aload_2
      87: aload         7
      89: invokevirtual #41                 // Method org/jumpmind/db/model/Column.getName:()Ljava/lang/String;
      92: invokevirtual #42                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      95: invokeinterface #43,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     100: ifne          113
     103: aload         5
     105: aload         7
     107: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: iinc          6, 1
     116: goto          63
     119: aload         5
     121: aload         5
     123: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
     128: anewarray     #45                 // class org/jumpmind/db/model/Column
     131: invokeinterface #46,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     136: checkcast     #47                 // class "[Lorg/jumpmind/db/model/Column;"
     139: areturn
     140: iconst_0
     141: anewarray     #45                 // class org/jumpmind/db/model/Column
     144: areturn

  public int[] getExcludedColumnIndexes(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
       4: ifnull        140
       7: aload_0
       8: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
      11: invokevirtual #48                 // Method java/lang/String.length:()I
      14: ifle          140
      17: new           #49                 // class java/util/StringTokenizer
      20: dup
      21: aload_0
      22: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
      25: ldc           #50                 // String ,
      27: invokespecial #51                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: astore_2
      31: aload_2
      32: invokevirtual #52                 // Method java/util/StringTokenizer.countTokens:()I
      35: newarray       int
      37: astore_3
      38: aload_1
      39: invokevirtual #36                 // Method org/jumpmind/db/model/Table.getColumns:()[Lorg/jumpmind/db/model/Column;
      42: astore        4
      44: new           #37                 // class java/util/ArrayList
      47: dup
      48: aload         4
      50: arraylength
      51: invokespecial #38                 // Method java/util/ArrayList."<init>":(I)V
      54: astore        5
      56: aload         4
      58: astore        6
      60: aload         6
      62: arraylength
      63: istore        7
      65: iconst_0
      66: istore        8
      68: iload         8
      70: iload         7
      72: if_icmpge     104
      75: aload         6
      77: iload         8
      79: aaload
      80: astore        9
      82: aload         5
      84: aload         9
      86: invokevirtual #41                 // Method org/jumpmind/db/model/Column.getName:()Ljava/lang/String;
      89: invokevirtual #42                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      92: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: iinc          8, 1
     101: goto          68
     104: iconst_0
     105: istore        6
     107: aload_2
     108: invokevirtual #53                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     111: ifeq          138
     114: aload_3
     115: iload         6
     117: iinc          6, 1
     120: aload         5
     122: aload_2
     123: invokevirtual #54                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     126: invokevirtual #42                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     129: invokeinterface #55,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
     134: iastore
     135: goto          107
     138: aload_3
     139: areturn
     140: iconst_0
     141: newarray       int
     143: areturn

  private java.util.List<java.lang.String> getExcludedColumnNamesAsList();
    Code:
       0: aload_0
       1: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
       4: ifnull        72
       7: aload_0
       8: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
      11: invokevirtual #48                 // Method java/lang/String.length:()I
      14: ifle          72
      17: new           #49                 // class java/util/StringTokenizer
      20: dup
      21: aload_0
      22: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
      25: ldc           #50                 // String ,
      27: invokespecial #51                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      30: astore_1
      31: new           #37                 // class java/util/ArrayList
      34: dup
      35: aload_1
      36: invokevirtual #52                 // Method java/util/StringTokenizer.countTokens:()I
      39: invokespecial #38                 // Method java/util/ArrayList."<init>":(I)V
      42: astore_2
      43: aload_1
      44: invokevirtual #53                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      47: ifeq          70
      50: aload_2
      51: aload_1
      52: invokevirtual #54                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      55: invokevirtual #42                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      58: invokevirtual #56                 // Method java/lang/String.trim:()Ljava/lang/String;
      61: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          43
      70: aload_2
      71: areturn
      72: getstatic     #57                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      75: areturn

  public boolean hasChangedSinceLastTriggerBuild(java.util.Date);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_0
       5: invokevirtual #58                 // Method getLastUpdateTime:()Ljava/util/Date;
       8: ifnull        22
      11: aload_1
      12: aload_0
      13: invokevirtual #58                 // Method getLastUpdateTime:()Ljava/util/Date;
      16: invokevirtual #59                 // Method java/util/Date.before:(Ljava/util/Date;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public java.lang.String getTriggerId();
    Code:
       0: aload_0
       1: getfield      #20                 // Field triggerId:Ljava/lang/String;
       4: areturn

  public void setTriggerId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field triggerId:Ljava/lang/String;
       5: aload_1
       6: invokestatic  #60                 // Method org/apache/commons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
       9: ifeq          37
      12: aload_1
      13: invokestatic  #61                 // Method org/apache/commons/lang/StringUtils.isNumeric:(Ljava/lang/String;)Z
      16: ifeq          37
      19: aload_1
      20: invokestatic  #62                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      23: istore_2
      24: iload_2
      25: getstatic     #18                 // Field maxTriggerId:I
      28: if_icmplt     37
      31: iload_2
      32: iconst_1
      33: iadd
      34: putstatic     #18                 // Field maxTriggerId:I
      37: return

  public java.lang.String getSourceTableName();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
       4: areturn

  public boolean isSourceTableNameWildcarded();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
       4: ifnull        23
       7: aload_0
       8: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
      11: ldc           #63                 // String *
      13: invokevirtual #64                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void setSourceTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field sourceTableName:Ljava/lang/String;
       5: return

  public java.lang.String getSourceSchemaName();
    Code:
       0: aload_0
       1: getfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
       4: areturn

  public void setSourceSchemaName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
       5: return

  public java.lang.String getSourceCatalogName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
       4: areturn

  public void setSourceCatalogName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
       5: return

  public java.lang.String getChannelId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field channelId:Ljava/lang/String;
       4: areturn

  public void setChannelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field channelId:Ljava/lang/String;
       5: return

  public boolean isSyncOnUpdate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field syncOnUpdate:Z
       4: ireturn

  public void setSyncOnUpdate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field syncOnUpdate:Z
       5: return

  public boolean isSyncOnInsert();
    Code:
       0: aload_0
       1: getfield      #5                  // Field syncOnInsert:Z
       4: ireturn

  public void setSyncOnInsert(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field syncOnInsert:Z
       5: return

  public boolean isSyncOnDelete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field syncOnDelete:Z
       4: ireturn

  public void setSyncOnDelete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field syncOnDelete:Z
       5: return

  public boolean isSyncOnIncomingBatch();
    Code:
       0: aload_0
       1: getfield      #7                  // Field syncOnIncomingBatch:Z
       4: ireturn

  public void setSyncOnIncomingBatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field syncOnIncomingBatch:Z
       5: return

  public java.lang.String getNameForInsertTrigger();
    Code:
       0: aload_0
       1: getfield      #65                 // Field nameForInsertTrigger:Ljava/lang/String;
       4: areturn

  public void setNameForInsertTrigger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field nameForInsertTrigger:Ljava/lang/String;
       5: return

  public java.lang.String getNameForUpdateTrigger();
    Code:
       0: aload_0
       1: getfield      #66                 // Field nameForUpdateTrigger:Ljava/lang/String;
       4: areturn

  public void setNameForUpdateTrigger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field nameForUpdateTrigger:Ljava/lang/String;
       5: return

  public java.lang.String getNameForDeleteTrigger();
    Code:
       0: aload_0
       1: getfield      #67                 // Field nameForDeleteTrigger:Ljava/lang/String;
       4: areturn

  public void setNameForDeleteTrigger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field nameForDeleteTrigger:Ljava/lang/String;
       5: return

  public java.lang.String getSyncOnUpdateCondition();
    Code:
       0: aload_0
       1: getfield      #12                 // Field syncOnUpdateCondition:Ljava/lang/String;
       4: areturn

  public void setSyncOnUpdateCondition(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field syncOnUpdateCondition:Ljava/lang/String;
       5: return

  public java.lang.String getSyncOnInsertCondition();
    Code:
       0: aload_0
       1: getfield      #13                 // Field syncOnInsertCondition:Ljava/lang/String;
       4: areturn

  public void setSyncOnInsertCondition(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field syncOnInsertCondition:Ljava/lang/String;
       5: return

  public java.lang.String getSyncOnDeleteCondition();
    Code:
       0: aload_0
       1: getfield      #14                 // Field syncOnDeleteCondition:Ljava/lang/String;
       4: areturn

  public void setSyncOnDeleteCondition(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field syncOnDeleteCondition:Ljava/lang/String;
       5: return

  public java.lang.String getExcludedColumnNames();
    Code:
       0: aload_0
       1: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
       4: areturn

  public void setExcludedColumnNames(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
       5: return

  public java.lang.String getTxIdExpression();
    Code:
       0: aload_0
       1: getfield      #16                 // Field txIdExpression:Ljava/lang/String;
       4: areturn

  public void setTxIdExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field txIdExpression:Ljava/lang/String;
       5: return

  public java.lang.String getExternalSelect();
    Code:
       0: aload_0
       1: getfield      #17                 // Field externalSelect:Ljava/lang/String;
       4: areturn

  public void setExternalSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field externalSelect:Ljava/lang/String;
       5: return

  public void setLastUpdateBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field lastUpdateBy:Ljava/lang/String;
       5: return

  public java.lang.String getLastUpdateBy();
    Code:
       0: aload_0
       1: getfield      #68                 // Field lastUpdateBy:Ljava/lang/String;
       4: areturn

  public java.util.Date getLastUpdateTime();
    Code:
       0: aload_0
       1: getfield      #69                 // Field lastUpdateTime:Ljava/util/Date;
       4: areturn

  public void setLastUpdateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field lastUpdateTime:Ljava/util/Date;
       5: return

  public java.util.Date getCreateTime();
    Code:
       0: aload_0
       1: getfield      #70                 // Field createTime:Ljava/util/Date;
       4: areturn

  public void setCreateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field createTime:Ljava/util/Date;
       5: return

  public void setUseStreamLobs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field useStreamLobs:Z
       5: return

  public boolean isUseStreamLobs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field useStreamLobs:Z
       4: ireturn

  public void setUseCaptureLobs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field useCaptureLobs:Z
       5: return

  public boolean isUseCaptureLobs();
    Code:
       0: aload_0
       1: getfield      #9                  // Field useCaptureLobs:Z
       4: ireturn

  public void setUseCaptureOldData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field useCaptureOldData:Z
       5: return

  public boolean isUseCaptureOldData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field useCaptureOldData:Z
       4: ireturn

  public long toHashedValue();
    Code:
       0: aload_0
       1: getfield      #20                 // Field triggerId:Ljava/lang/String;
       4: ifnull        18
       7: aload_0
       8: getfield      #20                 // Field triggerId:Ljava/lang/String;
      11: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      14: i2l
      15: goto          19
      18: lconst_0
      19: lstore_1
      20: aconst_null
      21: aload_0
      22: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
      25: if_acmpeq     39
      28: lload_1
      29: aload_0
      30: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
      33: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      36: i2l
      37: ladd
      38: lstore_1
      39: aconst_null
      40: aload_0
      41: getfield      #3                  // Field channelId:Ljava/lang/String;
      44: if_acmpeq     58
      47: lload_1
      48: aload_0
      49: getfield      #3                  // Field channelId:Ljava/lang/String;
      52: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      55: i2l
      56: ladd
      57: lstore_1
      58: aconst_null
      59: aload_0
      60: getfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
      63: if_acmpeq     77
      66: lload_1
      67: aload_0
      68: getfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
      71: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      74: i2l
      75: ladd
      76: lstore_1
      77: aconst_null
      78: aload_0
      79: getfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
      82: if_acmpeq     96
      85: lload_1
      86: aload_0
      87: getfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
      90: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      93: i2l
      94: ladd
      95: lstore_1
      96: lload_1
      97: aload_0
      98: getfield      #4                  // Field syncOnUpdate:Z
     101: ifeq          113
     104: ldc           #72                 // String syncOnUpdate
     106: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     109: i2l
     110: goto          114
     113: lconst_0
     114: ladd
     115: lstore_1
     116: lload_1
     117: aload_0
     118: getfield      #5                  // Field syncOnInsert:Z
     121: ifeq          133
     124: ldc           #73                 // String syncOnInsert
     126: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     129: i2l
     130: goto          134
     133: lconst_0
     134: ladd
     135: lstore_1
     136: lload_1
     137: aload_0
     138: getfield      #6                  // Field syncOnDelete:Z
     141: ifeq          153
     144: ldc           #74                 // String syncOnDelete
     146: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     149: i2l
     150: goto          154
     153: lconst_0
     154: ladd
     155: lstore_1
     156: lload_1
     157: aload_0
     158: getfield      #7                  // Field syncOnIncomingBatch:Z
     161: ifeq          173
     164: ldc           #75                 // String syncOnIncomingBatch
     166: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     169: i2l
     170: goto          174
     173: lconst_0
     174: ladd
     175: lstore_1
     176: lload_1
     177: aload_0
     178: getfield      #8                  // Field useStreamLobs:Z
     181: ifeq          193
     184: ldc           #76                 // String useStreamLobs
     186: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     189: i2l
     190: goto          194
     193: lconst_0
     194: ladd
     195: lstore_1
     196: lload_1
     197: aload_0
     198: getfield      #9                  // Field useCaptureLobs:Z
     201: ifeq          213
     204: ldc           #77                 // String useCaptureLobs
     206: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     209: i2l
     210: goto          214
     213: lconst_0
     214: ladd
     215: lstore_1
     216: lload_1
     217: aload_0
     218: getfield      #10                 // Field useCaptureOldData:Z
     221: ifeq          233
     224: ldc           #78                 // String useCaptureOldData
     226: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     229: i2l
     230: goto          234
     233: lconst_0
     234: ladd
     235: lstore_1
     236: aconst_null
     237: aload_0
     238: getfield      #65                 // Field nameForInsertTrigger:Ljava/lang/String;
     241: if_acmpeq     255
     244: lload_1
     245: aload_0
     246: getfield      #65                 // Field nameForInsertTrigger:Ljava/lang/String;
     249: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     252: i2l
     253: ladd
     254: lstore_1
     255: aconst_null
     256: aload_0
     257: getfield      #66                 // Field nameForUpdateTrigger:Ljava/lang/String;
     260: if_acmpeq     274
     263: lload_1
     264: aload_0
     265: getfield      #66                 // Field nameForUpdateTrigger:Ljava/lang/String;
     268: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     271: i2l
     272: ladd
     273: lstore_1
     274: aconst_null
     275: aload_0
     276: getfield      #67                 // Field nameForDeleteTrigger:Ljava/lang/String;
     279: if_acmpeq     293
     282: lload_1
     283: aload_0
     284: getfield      #67                 // Field nameForDeleteTrigger:Ljava/lang/String;
     287: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     290: i2l
     291: ladd
     292: lstore_1
     293: aconst_null
     294: aload_0
     295: getfield      #12                 // Field syncOnUpdateCondition:Ljava/lang/String;
     298: if_acmpeq     312
     301: lload_1
     302: aload_0
     303: getfield      #12                 // Field syncOnUpdateCondition:Ljava/lang/String;
     306: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     309: i2l
     310: ladd
     311: lstore_1
     312: aconst_null
     313: aload_0
     314: getfield      #13                 // Field syncOnInsertCondition:Ljava/lang/String;
     317: if_acmpeq     331
     320: lload_1
     321: aload_0
     322: getfield      #13                 // Field syncOnInsertCondition:Ljava/lang/String;
     325: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     328: i2l
     329: ladd
     330: lstore_1
     331: aconst_null
     332: aload_0
     333: getfield      #14                 // Field syncOnDeleteCondition:Ljava/lang/String;
     336: if_acmpeq     350
     339: lload_1
     340: aload_0
     341: getfield      #14                 // Field syncOnDeleteCondition:Ljava/lang/String;
     344: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     347: i2l
     348: ladd
     349: lstore_1
     350: aconst_null
     351: aload_0
     352: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
     355: if_acmpeq     369
     358: lload_1
     359: aload_0
     360: getfield      #15                 // Field excludedColumnNames:Ljava/lang/String;
     363: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     366: i2l
     367: ladd
     368: lstore_1
     369: aconst_null
     370: aload_0
     371: getfield      #16                 // Field txIdExpression:Ljava/lang/String;
     374: if_acmpeq     388
     377: lload_1
     378: aload_0
     379: getfield      #16                 // Field txIdExpression:Ljava/lang/String;
     382: invokevirtual #71                 // Method java/lang/String.hashCode:()I
     385: i2l
     386: ladd
     387: lstore_1
     388: lload_1
     389: lreturn

  public boolean isSame(org.jumpmind.symmetric.model.Trigger);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
       5: aload_1
       6: getfield      #31                 // Field sourceCatalogName:Ljava/lang/String;
       9: invokevirtual #79                 // Method isSame:(Ljava/lang/String;Ljava/lang/String;)Z
      12: ifeq          48
      15: aload_0
      16: aload_0
      17: getfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
      20: aload_1
      21: getfield      #33                 // Field sourceSchemaName:Ljava/lang/String;
      24: invokevirtual #79                 // Method isSame:(Ljava/lang/String;Ljava/lang/String;)Z
      27: ifeq          48
      30: aload_1
      31: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
      34: aload_0
      35: getfield      #21                 // Field sourceTableName:Ljava/lang/String;
      38: invokevirtual #80                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  protected boolean isSame(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_2
       5: ifnull        24
       8: aload_1
       9: ifnull        28
      12: aload_2
      13: ifnull        28
      16: aload_1
      17: aload_2
      18: invokevirtual #81                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #82                 // class org/jumpmind/symmetric/model/Trigger
       4: ifeq          29
       7: aload_0
       8: getfield      #20                 // Field triggerId:Ljava/lang/String;
      11: ifnull        29
      14: aload_0
      15: getfield      #20                 // Field triggerId:Ljava/lang/String;
      18: aload_1
      19: checkcast     #82                 // class org/jumpmind/symmetric/model/Trigger
      22: getfield      #20                 // Field triggerId:Ljava/lang/String;
      25: invokevirtual #81                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ireturn
      29: aload_0
      30: aload_1
      31: invokespecial #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #20                 // Field triggerId:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #20                 // Field triggerId:Ljava/lang/String;
      11: invokevirtual #71                 // Method java/lang/String.hashCode:()I
      14: goto          21
      17: aload_0
      18: invokespecial #84                 // Method java/lang/Object.hashCode:()I
      21: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #20                 // Field triggerId:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #20                 // Field triggerId:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: invokespecial #85                 // Method java/lang/Object.toString:()Ljava/lang/String;
      16: areturn

  static {};
    Code:
       0: ldc_w         #82                 // class org/jumpmind/symmetric/model/Trigger
       3: invokestatic  #86                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #87                 // Field logger:Lorg/slf4j/Logger;
       9: return
}
