Compiled from "Node.java"
public class org.jumpmind.symmetric.model.Node implements java.io.Serializable {
  private static final long serialVersionUID;

  private int MAX_VERSION_SIZE;

  private java.lang.String nodeId;

  private java.lang.String nodeGroupId;

  private java.lang.String externalId;

  private java.lang.String syncUrl;

  private java.lang.String schemaVersion;

  private java.lang.String databaseType;

  private java.lang.String symmetricVersion;

  private java.lang.String databaseVersion;

  private boolean syncEnabled;

  private java.lang.String timezoneOffset;

  private java.util.Date heartbeatTime;

  private java.lang.String createdAtNodeId;

  private int batchToSendCount;

  private int batchInErrorCount;

  private java.lang.String deploymentType;

  public org.jumpmind.symmetric.model.Node();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        50
       7: putfield      #2                  // Field MAX_VERSION_SIZE:I
      10: aload_0
      11: invokestatic  #3                  // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      14: putfield      #4                  // Field symmetricVersion:Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field syncEnabled:Z
      22: aload_0
      23: new           #6                  // class java/util/Date
      26: dup
      27: invokespecial #7                  // Method java/util/Date."<init>":()V
      30: putfield      #8                  // Field heartbeatTime:Ljava/util/Date;
      33: return

  public org.jumpmind.symmetric.model.Node(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        50
       7: putfield      #2                  // Field MAX_VERSION_SIZE:I
      10: aload_0
      11: invokestatic  #3                  // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      14: putfield      #4                  // Field symmetricVersion:Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field syncEnabled:Z
      22: aload_0
      23: new           #6                  // class java/util/Date
      26: dup
      27: invokespecial #7                  // Method java/util/Date."<init>":()V
      30: putfield      #8                  // Field heartbeatTime:Ljava/util/Date;
      33: aload_0
      34: aload_1
      35: putfield      #9                  // Field nodeId:Ljava/lang/String;
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field externalId:Ljava/lang/String;
      43: aload_0
      44: aload_2
      45: putfield      #11                 // Field nodeGroupId:Ljava/lang/String;
      48: return

  public org.jumpmind.symmetric.model.Node(org.jumpmind.symmetric.service.IParameterService, org.jumpmind.symmetric.db.ISymmetricDialect);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        50
       7: putfield      #2                  // Field MAX_VERSION_SIZE:I
      10: aload_0
      11: invokestatic  #3                  // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      14: putfield      #4                  // Field symmetricVersion:Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field syncEnabled:Z
      22: aload_0
      23: new           #6                  // class java/util/Date
      26: dup
      27: invokespecial #7                  // Method java/util/Date."<init>":()V
      30: putfield      #8                  // Field heartbeatTime:Ljava/util/Date;
      33: aload_0
      34: aload_1
      35: invokeinterface #12,  1           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getNodeGroupId:()Ljava/lang/String;
      40: invokevirtual #13                 // Method setNodeGroupId:(Ljava/lang/String;)V
      43: aload_0
      44: aload_1
      45: invokeinterface #14,  1           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getExternalId:()Ljava/lang/String;
      50: invokevirtual #15                 // Method setExternalId:(Ljava/lang/String;)V
      53: aload_0
      54: aload_2
      55: invokeinterface #16,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getName:()Ljava/lang/String;
      60: invokevirtual #17                 // Method setDatabaseType:(Ljava/lang/String;)V
      63: aload_0
      64: aload_2
      65: invokeinterface #18,  1           // InterfaceMethod org/jumpmind/symmetric/db/ISymmetricDialect.getVersion:()Ljava/lang/String;
      70: invokevirtual #19                 // Method setDatabaseVersion:(Ljava/lang/String;)V
      73: aload_0
      74: aload_1
      75: invokeinterface #20,  1           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getSyncUrl:()Ljava/lang/String;
      80: invokevirtual #21                 // Method setSyncUrl:(Ljava/lang/String;)V
      83: aload_0
      84: aload_1
      85: ldc           #22                 // String schema.version
      87: invokeinterface #23,  2           // InterfaceMethod org/jumpmind/symmetric/service/IParameterService.getString:(Ljava/lang/String;)Ljava/lang/String;
      92: invokevirtual #24                 // Method setSchemaVersion:(Ljava/lang/String;)V
      95: return

  public org.jumpmind.symmetric.model.Node(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        50
       7: putfield      #2                  // Field MAX_VERSION_SIZE:I
      10: aload_0
      11: invokestatic  #3                  // Method org/jumpmind/symmetric/Version.version:()Ljava/lang/String;
      14: putfield      #4                  // Field symmetricVersion:Ljava/lang/String;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field syncEnabled:Z
      22: aload_0
      23: new           #6                  // class java/util/Date
      26: dup
      27: invokespecial #7                  // Method java/util/Date."<init>":()V
      30: putfield      #8                  // Field heartbeatTime:Ljava/util/Date;
      33: aload_0
      34: aload_1
      35: putfield      #9                  // Field nodeId:Ljava/lang/String;
      38: aload_0
      39: aload_2
      40: putfield      #25                 // Field syncUrl:Ljava/lang/String;
      43: aload_0
      44: aload_3
      45: putfield      #26                 // Field schemaVersion:Ljava/lang/String;
      48: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        39
       4: aload_1
       5: instanceof    #27                 // class org/jumpmind/symmetric/model/Node
       8: ifeq          39
      11: aload_0
      12: getfield      #9                  // Field nodeId:Ljava/lang/String;
      15: ifnull        39
      18: aload_0
      19: getfield      #9                  // Field nodeId:Ljava/lang/String;
      22: aload_1
      23: checkcast     #27                 // class org/jumpmind/symmetric/model/Node
      26: invokevirtual #28                 // Method getNodeId:()Ljava/lang/String;
      29: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field nodeId:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #9                  // Field nodeId:Ljava/lang/String;
      11: invokevirtual #30                 // Method java/lang/String.hashCode:()I
      14: goto          21
      17: aload_0
      18: invokespecial #31                 // Method java/lang/Object.hashCode:()I
      21: ireturn

  public java.lang.String getNodeId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field nodeId:Ljava/lang/String;
       4: areturn

  public void setNodeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field nodeId:Ljava/lang/String;
       5: return

  public java.lang.String getSyncUrl();
    Code:
       0: aload_0
       1: getfield      #25                 // Field syncUrl:Ljava/lang/String;
       4: areturn

  public void setSyncUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field syncUrl:Ljava/lang/String;
       5: return

  public java.lang.String getSchemaVersion();
    Code:
       0: aload_0
       1: getfield      #26                 // Field schemaVersion:Ljava/lang/String;
       4: areturn

  public void setSchemaVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field MAX_VERSION_SIZE:I
       6: invokestatic  #32                 // Method org/apache/commons/lang/StringUtils.abbreviate:(Ljava/lang/String;I)Ljava/lang/String;
       9: putfield      #26                 // Field schemaVersion:Ljava/lang/String;
      12: return

  public boolean isSyncEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field syncEnabled:Z
       4: ireturn

  public void setSyncEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field syncEnabled:Z
       5: return

  public java.lang.String getDatabaseType();
    Code:
       0: aload_0
       1: getfield      #33                 // Field databaseType:Ljava/lang/String;
       4: areturn

  public void setDatabaseType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field databaseType:Ljava/lang/String;
       5: return

  public java.lang.String getDatabaseVersion();
    Code:
       0: aload_0
       1: getfield      #34                 // Field databaseVersion:Ljava/lang/String;
       4: areturn

  public void setDatabaseVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field databaseVersion:Ljava/lang/String;
       5: return

  public java.lang.String getExternalId();
    Code:
       0: aload_0
       1: getfield      #10                 // Field externalId:Ljava/lang/String;
       4: areturn

  public void setExternalId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field externalId:Ljava/lang/String;
       5: return

  public java.lang.String getNodeGroupId();
    Code:
       0: aload_0
       1: getfield      #11                 // Field nodeGroupId:Ljava/lang/String;
       4: areturn

  public void setNodeGroupId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field nodeGroupId:Ljava/lang/String;
       5: return

  public java.lang.String getSymmetricVersion();
    Code:
       0: aload_0
       1: getfield      #4                  // Field symmetricVersion:Ljava/lang/String;
       4: areturn

  public void setSymmetricVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field symmetricVersion:Ljava/lang/String;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #11                 // Field nodeGroupId:Ljava/lang/String;
      11: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #38                 // String :
      16: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #10                 // Field externalId:Ljava/lang/String;
      23: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #38                 // String :
      28: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #9                  // Field nodeId:Ljava/lang/String;
      35: ifnonnull     43
      38: ldc           #39                 // String ?
      40: goto          47
      43: aload_0
      44: getfield      #9                  // Field nodeId:Ljava/lang/String;
      47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: areturn

  public java.util.Date getHeartbeatTime();
    Code:
       0: aload_0
       1: getfield      #8                  // Field heartbeatTime:Ljava/util/Date;
       4: areturn

  public void setHeartbeatTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field heartbeatTime:Ljava/util/Date;
       5: return

  public java.lang.String getTimezoneOffset();
    Code:
       0: aload_0
       1: getfield      #41                 // Field timezoneOffset:Ljava/lang/String;
       4: areturn

  public void setTimezoneOffset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field timezoneOffset:Ljava/lang/String;
       5: return

  public java.lang.String getCreatedAtNodeId();
    Code:
       0: aload_0
       1: getfield      #42                 // Field createdAtNodeId:Ljava/lang/String;
       4: areturn

  public void setCreatedAtNodeId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field createdAtNodeId:Ljava/lang/String;
       5: return

  public void setBatchInErrorCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field batchInErrorCount:I
       5: return

  public int getBatchInErrorCount();
    Code:
       0: aload_0
       1: getfield      #43                 // Field batchInErrorCount:I
       4: ireturn

  public void setBatchToSendCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field batchToSendCount:I
       5: return

  public int getBatchToSendCount();
    Code:
       0: aload_0
       1: getfield      #44                 // Field batchToSendCount:I
       4: ireturn

  public void setDeploymentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field deploymentType:Ljava/lang/String;
       5: return

  public java.lang.String getDeploymentType();
    Code:
       0: aload_0
       1: getfield      #45                 // Field deploymentType:Ljava/lang/String;
       4: areturn

  public boolean isVersionGreaterThanOrEqualTo(int...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field symmetricVersion:Ljava/lang/String;
       4: ifnull        76
       7: aload_0
       8: getfield      #4                  // Field symmetricVersion:Ljava/lang/String;
      11: ldc           #46                 // String development
      13: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: getfield      #4                  // Field symmetricVersion:Ljava/lang/String;
      25: invokestatic  #47                 // Method org/jumpmind/symmetric/Version.parseVersion:(Ljava/lang/String;)[I
      28: astore_2
      29: iconst_0
      30: istore_3
      31: iload_3
      32: aload_2
      33: arraylength
      34: if_icmpge     74
      37: aload_2
      38: iload_3
      39: iaload
      40: istore        4
      42: aload_1
      43: arraylength
      44: iload_3
      45: if_icmple     68
      48: iload         4
      50: aload_1
      51: iload_3
      52: iaload
      53: if_icmple     58
      56: iconst_1
      57: ireturn
      58: iload         4
      60: aload_1
      61: iload_3
      62: iaload
      63: if_icmpge     68
      66: iconst_0
      67: ireturn
      68: iinc          3, 1
      71: goto          31
      74: iconst_1
      75: ireturn
      76: iconst_0
      77: ireturn
}
