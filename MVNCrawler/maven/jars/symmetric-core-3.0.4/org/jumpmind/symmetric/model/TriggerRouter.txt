Compiled from "TriggerRouter.java"
public class org.jumpmind.symmetric.model.TriggerRouter implements java.io.Serializable {
  private static final long serialVersionUID;

  static final org.slf4j.Logger logger;

  private int initialLoadOrder;

  private java.lang.String initialLoadSelect;

  private org.jumpmind.symmetric.model.Trigger trigger;

  private org.jumpmind.symmetric.model.Router router;

  private java.util.Date createTime;

  private java.util.Date lastUpdateTime;

  private java.lang.String lastUpdateBy;

  private boolean pingBackEnabled;

  public org.jumpmind.symmetric.model.TriggerRouter();
    Code:
       0: aload_0
       1: new           #1                  // class org/jumpmind/symmetric/model/Trigger
       4: dup
       5: invokespecial #2                  // Method org/jumpmind/symmetric/model/Trigger."<init>":()V
       8: new           #3                  // class org/jumpmind/symmetric/model/Router
      11: dup
      12: invokespecial #4                  // Method org/jumpmind/symmetric/model/Router."<init>":()V
      15: invokespecial #5                  // Method "<init>":(Lorg/jumpmind/symmetric/model/Trigger;Lorg/jumpmind/symmetric/model/Router;)V
      18: return

  public org.jumpmind.symmetric.model.TriggerRouter(org.jumpmind.symmetric.model.Trigger, org.jumpmind.symmetric.model.Router);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field pingBackEnabled:Z
       9: aload_0
      10: aload_1
      11: putfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      14: aload_0
      15: aload_2
      16: putfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      19: aload_0
      20: new           #10                 // class java/util/Date
      23: dup
      24: invokespecial #11                 // Method java/util/Date."<init>":()V
      27: putfield      #12                 // Field createTime:Ljava/util/Date;
      30: aload_0
      31: new           #10                 // class java/util/Date
      34: dup
      35: invokespecial #11                 // Method java/util/Date."<init>":()V
      38: putfield      #13                 // Field lastUpdateTime:Ljava/util/Date;
      41: return

  public java.util.Date getCreateTime();
    Code:
       0: aload_0
       1: getfield      #12                 // Field createTime:Ljava/util/Date;
       4: areturn

  public java.util.Date getLastUpdateTime();
    Code:
       0: aload_0
       1: getfield      #13                 // Field lastUpdateTime:Ljava/util/Date;
       4: areturn

  public java.lang.String getLastUpdateBy();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lastUpdateBy:Ljava/lang/String;
       4: areturn

  public void setCreateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field createTime:Ljava/util/Date;
       5: return

  public void setLastUpdateTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field lastUpdateTime:Ljava/util/Date;
       5: return

  public void setLastUpdateBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field lastUpdateBy:Ljava/lang/String;
       5: return

  public org.jumpmind.db.model.Column[] orderColumnsForTable(org.jumpmind.db.model.Table);
    Code:
       0: aload_0
       1: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
       4: aload_1
       5: invokevirtual #15                 // Method org/jumpmind/symmetric/model/Trigger.orderColumnsForTable:(Lorg/jumpmind/db/model/Table;)[Lorg/jumpmind/db/model/Column;
       8: areturn

  public int getInitialLoadOrder();
    Code:
       0: aload_0
       1: getfield      #16                 // Field initialLoadOrder:I
       4: ireturn

  public void setInitialLoadOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field initialLoadOrder:I
       5: return

  public void setRouter(org.jumpmind.symmetric.model.Router);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
       5: return

  public org.jumpmind.symmetric.model.Router getRouter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
       4: areturn

  public void setTrigger(org.jumpmind.symmetric.model.Trigger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
       5: return

  public org.jumpmind.symmetric.model.Trigger getTrigger();
    Code:
       0: aload_0
       1: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
       4: areturn

  public void setInitialLoadSelect(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field initialLoadSelect:Ljava/lang/String;
       5: return

  public java.lang.String getInitialLoadSelect();
    Code:
       0: aload_0
       1: getfield      #17                 // Field initialLoadSelect:Ljava/lang/String;
       4: areturn

  public boolean isRouted(org.jumpmind.symmetric.io.data.DataEventType);
    Code:
       0: getstatic     #18                 // Field org/jumpmind/symmetric/model/TriggerRouter$1.$SwitchMap$org$jumpmind$symmetric$io$data$DataEventType:[I
       3: aload_1
       4: invokevirtual #19                 // Method org/jumpmind/symmetric/io/data/DataEventType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 44
                     3: 52
               default: 60
          }
      36: aload_0
      37: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      40: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Router.isSyncOnInsert:()Z
      43: ireturn
      44: aload_0
      45: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      48: invokevirtual #21                 // Method org/jumpmind/symmetric/model/Router.isSyncOnDelete:()Z
      51: ireturn
      52: aload_0
      53: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      56: invokevirtual #22                 // Method org/jumpmind/symmetric/model/Router.isSyncOnUpdate:()Z
      59: ireturn
      60: iconst_1
      61: ireturn

  public java.lang.String getTargetSchema(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
       4: ifnull        28
       7: aload_0
       8: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      11: invokevirtual #23                 // Method org/jumpmind/symmetric/model/Router.getTargetSchemaName:()Ljava/lang/String;
      14: invokestatic  #24                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      17: ifne          28
      20: aload_0
      21: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      24: invokevirtual #23                 // Method org/jumpmind/symmetric/model/Router.getTargetSchemaName:()Ljava/lang/String;
      27: areturn
      28: aload_1
      29: areturn

  public java.lang.String getTargetCatalog(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
       4: ifnull        28
       7: aload_0
       8: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      11: invokevirtual #25                 // Method org/jumpmind/symmetric/model/Router.getTargetCatalogName:()Ljava/lang/String;
      14: invokestatic  #24                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      17: ifne          28
      20: aload_0
      21: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      24: invokevirtual #25                 // Method org/jumpmind/symmetric/model/Router.getTargetCatalogName:()Ljava/lang/String;
      27: areturn
      28: aload_1
      29: areturn

  public java.lang.String getTargetTable();
    Code:
       0: aload_0
       1: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
       4: ifnull        28
       7: aload_0
       8: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      11: invokevirtual #26                 // Method org/jumpmind/symmetric/model/Router.getTargetTableName:()Ljava/lang/String;
      14: invokestatic  #24                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      17: ifne          28
      20: aload_0
      21: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      24: invokevirtual #26                 // Method org/jumpmind/symmetric/model/Router.getTargetTableName:()Ljava/lang/String;
      27: areturn
      28: aload_0
      29: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      32: ifnull        56
      35: aload_0
      36: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      39: invokevirtual #27                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      42: invokestatic  #24                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      45: ifne          56
      48: aload_0
      49: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      52: invokevirtual #27                 // Method org/jumpmind/symmetric/model/Trigger.getSourceTableName:()Ljava/lang/String;
      55: areturn
      56: aconst_null
      57: areturn

  public java.lang.String qualifiedSourceTableName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
       4: invokevirtual #28                 // Method org/jumpmind/symmetric/model/Trigger.qualifiedSourceTableName:()Ljava/lang/String;
       7: areturn

  public java.lang.String qualifiedSourceTablePrefix();
    Code:
       0: aload_0
       1: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
       4: invokevirtual #29                 // Method org/jumpmind/symmetric/model/Trigger.qualifiedSourceTablePrefix:()Ljava/lang/String;
       7: areturn

  public java.lang.String qualifiedTargetTableName();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #30                 // Method getTargetCatalog:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: aconst_null
       8: invokevirtual #31                 // Method getTargetSchema:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_0
      13: invokevirtual #32                 // Method getTargetTable:()Ljava/lang/String;
      16: astore_3
      17: aload_2
      18: invokestatic  #24                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      21: ifne          48
      24: new           #33                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      31: aload_2
      32: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #36                 // String .
      37: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_3
      41: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_3
      48: aload_1
      49: invokestatic  #24                 // Method org/apache/commons/lang/StringUtils.isBlank:(Ljava/lang/String;)Z
      52: ifne          79
      55: new           #33                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      62: aload_1
      63: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #36                 // String .
      68: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_3
      72: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: astore_3
      79: aload_3
      80: areturn

  public void setPingBackEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field pingBackEnabled:Z
       5: return

  public boolean isPingBackEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pingBackEnabled:Z
       4: ireturn

  public boolean isSame(org.jumpmind.symmetric.model.TriggerRouter);
    Code:
       0: aload_0
       1: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
       4: ifnonnull     14
       7: aload_1
       8: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      11: ifnull        84
      14: aload_0
      15: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      18: ifnull        56
      21: aload_1
      22: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      25: ifnull        56
      28: aload_0
      29: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      32: aload_1
      33: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      36: invokevirtual #38                 // Method org/jumpmind/symmetric/model/Trigger.isSame:(Lorg/jumpmind/symmetric/model/Trigger;)Z
      39: ifeq          56
      42: aload_0
      43: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      46: ifnonnull     56
      49: aload_1
      50: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      53: ifnull        84
      56: aload_0
      57: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      60: ifnull        88
      63: aload_1
      64: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      67: ifnull        88
      70: aload_0
      71: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      74: aload_1
      75: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      78: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Router.equals:(Ljava/lang/Object;)Z
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      11: ifnull        24
      14: aload_0
      15: getfield      #8                  // Field trigger:Lorg/jumpmind/symmetric/model/Trigger;
      18: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Trigger.toString:()Ljava/lang/String;
      21: goto          26
      24: ldc           #41                 // String
      26: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #42                 // String :
      31: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      38: ifnull        51
      41: aload_0
      42: getfield      #9                  // Field router:Lorg/jumpmind/symmetric/model/Router;
      45: invokevirtual #43                 // Method org/jumpmind/symmetric/model/Router.toString:()Ljava/lang/String;
      48: goto          53
      51: ldc           #41                 // String
      53: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  static {};
    Code:
       0: ldc_w         #44                 // class org/jumpmind/symmetric/model/TriggerRouter
       3: invokestatic  #45                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #46                 // Field logger:Lorg/slf4j/Logger;
       9: return
}
