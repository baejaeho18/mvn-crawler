Compiled from "Channel.java"
public class org.jumpmind.symmetric.model.Channel implements java.io.Serializable {
  private static final long serialVersionUID;

  private java.lang.String channelId;

  private int processingOrder;

  private int maxBatchSize;

  private int maxBatchToSend;

  private int maxDataToRoute;

  private boolean enabled;

  private boolean useOldDataToRoute;

  private boolean useRowDataToRoute;

  private boolean usePkDataToRoute;

  private boolean containsBigLob;

  private java.lang.String batchAlgorithm;

  private long extractPeriodMillis;

  private java.lang.String dataLoaderType;

  public org.jumpmind.symmetric.model.Channel();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        10000
       8: putfield      #2                  // Field maxDataToRoute:I
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field useOldDataToRoute:Z
      16: aload_0
      17: iconst_1
      18: putfield      #4                  // Field useRowDataToRoute:Z
      21: aload_0
      22: iconst_1
      23: putfield      #5                  // Field usePkDataToRoute:Z
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field containsBigLob:Z
      31: aload_0
      32: ldc           #7                  // String default
      34: putfield      #8                  // Field batchAlgorithm:Ljava/lang/String;
      37: aload_0
      38: lconst_0
      39: putfield      #9                  // Field extractPeriodMillis:J
      42: aload_0
      43: ldc           #7                  // String default
      45: putfield      #10                 // Field dataLoaderType:Ljava/lang/String;
      48: return

  public org.jumpmind.symmetric.model.Channel(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        10000
       8: putfield      #2                  // Field maxDataToRoute:I
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field useOldDataToRoute:Z
      16: aload_0
      17: iconst_1
      18: putfield      #4                  // Field useRowDataToRoute:Z
      21: aload_0
      22: iconst_1
      23: putfield      #5                  // Field usePkDataToRoute:Z
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field containsBigLob:Z
      31: aload_0
      32: ldc           #7                  // String default
      34: putfield      #8                  // Field batchAlgorithm:Ljava/lang/String;
      37: aload_0
      38: lconst_0
      39: putfield      #9                  // Field extractPeriodMillis:J
      42: aload_0
      43: ldc           #7                  // String default
      45: putfield      #10                 // Field dataLoaderType:Ljava/lang/String;
      48: aload_0
      49: aload_1
      50: putfield      #11                 // Field channelId:Ljava/lang/String;
      53: aload_0
      54: iload_2
      55: putfield      #12                 // Field processingOrder:I
      58: return

  public org.jumpmind.symmetric.model.Channel(java.lang.String, int, int, int, boolean, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #13                 // Method "<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #14                 // Field maxBatchSize:I
      11: aload_0
      12: iload         4
      14: putfield      #15                 // Field maxBatchToSend:I
      17: aload_0
      18: iload         5
      20: putfield      #16                 // Field enabled:Z
      23: aload_0
      24: lload         6
      26: putfield      #9                  // Field extractPeriodMillis:J
      29: return

  public java.lang.String getChannelId();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channelId:Ljava/lang/String;
       4: areturn

  public void setChannelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field channelId:Ljava/lang/String;
       5: return

  public int getProcessingOrder();
    Code:
       0: aload_0
       1: getfield      #12                 // Field processingOrder:I
       4: ireturn

  public void setProcessingOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field processingOrder:I
       5: return

  public void setMaxDataToRoute(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxDataToRoute:I
       5: return

  public int getMaxDataToRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxDataToRoute:I
       4: ireturn

  public int getMaxBatchSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxBatchSize:I
       4: ireturn

  public void setMaxBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field maxBatchSize:I
       5: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field enabled:Z
       4: ireturn

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field enabled:Z
       5: return

  public int getMaxBatchToSend();
    Code:
       0: aload_0
       1: getfield      #15                 // Field maxBatchToSend:I
       4: ireturn

  public void setMaxBatchToSend(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field maxBatchToSend:I
       5: return

  public boolean isInList(java.util.Collection<? extends org.jumpmind.symmetric.model.NodeChannel>);
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_1
       5: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          49
      20: aload_2
      21: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #20                 // class org/jumpmind/symmetric/model/NodeChannel
      29: astore_3
      30: aload_3
      31: invokevirtual #21                 // Method org/jumpmind/symmetric/model/NodeChannel.getChannelId:()Ljava/lang/String;
      34: aload_0
      35: getfield      #11                 // Field channelId:Ljava/lang/String;
      38: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          11
      49: iconst_0
      50: ireturn

  public void setBatchAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field batchAlgorithm:Ljava/lang/String;
       5: return

  public java.lang.String getBatchAlgorithm();
    Code:
       0: aload_0
       1: getfield      #8                  // Field batchAlgorithm:Ljava/lang/String;
       4: areturn

  public long getExtractPeriodMillis();
    Code:
       0: aload_0
       1: getfield      #9                  // Field extractPeriodMillis:J
       4: lreturn

  public void setExtractPeriodMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field extractPeriodMillis:J
       5: return

  public void setUseOldDataToRoute(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field useOldDataToRoute:Z
       5: return

  public boolean isUseOldDataToRoute();
    Code:
       0: aload_0
       1: getfield      #3                  // Field useOldDataToRoute:Z
       4: ireturn

  public void setUseRowDataToRoute(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useRowDataToRoute:Z
       5: return

  public boolean isUseRowDataToRoute();
    Code:
       0: aload_0
       1: getfield      #4                  // Field useRowDataToRoute:Z
       4: ireturn

  public void setUsePkDataToRoute(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field usePkDataToRoute:Z
       5: return

  public boolean isUsePkDataToRoute();
    Code:
       0: aload_0
       1: getfield      #5                  // Field usePkDataToRoute:Z
       4: ireturn

  public void setContainsBigLob(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field containsBigLob:Z
       5: return

  public boolean isContainsBigLob();
    Code:
       0: aload_0
       1: getfield      #6                  // Field containsBigLob:Z
       4: ireturn

  public void setDataLoaderType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field dataLoaderType:Ljava/lang/String;
       5: return

  public java.lang.String getDataLoaderType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dataLoaderType:Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channelId:Ljava/lang/String;
       4: ifnull        15
       7: aload_0
       8: getfield      #11                 // Field channelId:Ljava/lang/String;
      11: invokevirtual #23                 // Method java/lang/String.hashCode:()I
      14: ireturn
      15: aload_0
      16: invokespecial #24                 // Method java/lang/Object.hashCode:()I
      19: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field channelId:Ljava/lang/String;
       4: ifnull        31
       7: aload_1
       8: instanceof    #25                 // class org/jumpmind/symmetric/model/Channel
      11: ifeq          29
      14: aload_0
      15: getfield      #11                 // Field channelId:Ljava/lang/String;
      18: aload_1
      19: checkcast     #25                 // class org/jumpmind/symmetric/model/Channel
      22: getfield      #11                 // Field channelId:Ljava/lang/String;
      25: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ireturn
      29: iconst_0
      30: ireturn
      31: aload_0
      32: aload_1
      33: invokespecial #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channelId:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #11                 // Field channelId:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: invokespecial #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
      16: areturn
}
