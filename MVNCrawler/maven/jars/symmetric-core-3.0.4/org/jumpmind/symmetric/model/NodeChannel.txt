Compiled from "NodeChannel.java"
public class org.jumpmind.symmetric.model.NodeChannel implements java.io.Serializable {
  private static final long serialVersionUID;

  private org.jumpmind.symmetric.model.Channel channel;

  private org.jumpmind.symmetric.model.NodeChannelControl nodeChannelControl;

  public org.jumpmind.symmetric.model.NodeChannel();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jumpmind/symmetric/model/Channel
       8: dup
       9: invokespecial #3                  // Method org/jumpmind/symmetric/model/Channel."<init>":()V
      12: putfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
      15: aload_0
      16: new           #5                  // class org/jumpmind/symmetric/model/NodeChannelControl
      19: dup
      20: invokespecial #6                  // Method org/jumpmind/symmetric/model/NodeChannelControl."<init>":()V
      23: putfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
      26: return

  public org.jumpmind.symmetric.model.NodeChannel(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/jumpmind/symmetric/model/Channel
       8: dup
       9: invokespecial #3                  // Method org/jumpmind/symmetric/model/Channel."<init>":()V
      12: putfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
      15: aload_0
      16: new           #5                  // class org/jumpmind/symmetric/model/NodeChannelControl
      19: dup
      20: invokespecial #6                  // Method org/jumpmind/symmetric/model/NodeChannelControl."<init>":()V
      23: putfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
      26: aload_0
      27: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
      30: aload_1
      31: invokevirtual #8                  // Method org/jumpmind/symmetric/model/NodeChannelControl.setChannelId:(Ljava/lang/String;)V
      34: aload_0
      35: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
      38: aload_1
      39: invokevirtual #9                  // Method org/jumpmind/symmetric/model/Channel.setChannelId:(Ljava/lang/String;)V
      42: return

  public java.lang.String getChannelId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #10                 // Method org/jumpmind/symmetric/model/Channel.getChannelId:()Ljava/lang/String;
       7: areturn

  public int getMaxBatchSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #11                 // Method org/jumpmind/symmetric/model/Channel.getMaxBatchSize:()I
       7: ireturn

  public void setMaxBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #12                 // Method org/jumpmind/symmetric/model/Channel.setMaxBatchSize:(I)V
       8: return

  public int getMaxBatchToSend();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #13                 // Method org/jumpmind/symmetric/model/Channel.getMaxBatchToSend:()I
       7: ireturn

  public void setMaxBatchToSend(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #14                 // Method org/jumpmind/symmetric/model/Channel.setMaxBatchToSend:(I)V
       8: return

  public void setMaxDataToRoute(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #15                 // Method org/jumpmind/symmetric/model/Channel.setMaxDataToRoute:(I)V
       8: return

  public int getMaxDataToRoute();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #16                 // Method org/jumpmind/symmetric/model/Channel.getMaxDataToRoute:()I
       7: ireturn

  public void setUseOldDataToRoute(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #17                 // Method org/jumpmind/symmetric/model/Channel.setUseOldDataToRoute:(Z)V
       8: return

  public boolean isUseOldDataToRoute();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #18                 // Method org/jumpmind/symmetric/model/Channel.isUseOldDataToRoute:()Z
       7: ireturn

  public void setUseRowDataToRoute(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #19                 // Method org/jumpmind/symmetric/model/Channel.setUseRowDataToRoute:(Z)V
       8: return

  public boolean isUseRowDataToRoute();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #20                 // Method org/jumpmind/symmetric/model/Channel.isUseRowDataToRoute:()Z
       7: ireturn

  public void setUsePkDataToRoute(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #21                 // Method org/jumpmind/symmetric/model/Channel.setUsePkDataToRoute:(Z)V
       8: return

  public boolean isUsePkDataToRoute();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #22                 // Method org/jumpmind/symmetric/model/Channel.isUsePkDataToRoute:()Z
       7: ireturn

  public int getProcessingOrder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #23                 // Method org/jumpmind/symmetric/model/Channel.getProcessingOrder:()I
       7: ireturn

  public java.lang.String getBatchAlgorithm();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #24                 // Method org/jumpmind/symmetric/model/Channel.getBatchAlgorithm:()Ljava/lang/String;
       7: areturn

  public void setBatchAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: aload_1
       5: invokevirtual #25                 // Method org/jumpmind/symmetric/model/Channel.setBatchAlgorithm:(Ljava/lang/String;)V
       8: return

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #26                 // Method org/jumpmind/symmetric/model/Channel.setEnabled:(Z)V
       8: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #27                 // Method org/jumpmind/symmetric/model/Channel.isEnabled:()Z
       7: ireturn

  public boolean isSuspendEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: invokevirtual #28                 // Method org/jumpmind/symmetric/model/NodeChannelControl.isSuspendEnabled:()Z
       7: ireturn

  public boolean isIgnoreEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: invokevirtual #29                 // Method org/jumpmind/symmetric/model/NodeChannelControl.isIgnoreEnabled:()Z
       7: ireturn

  public java.lang.String getNodeId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: invokevirtual #30                 // Method org/jumpmind/symmetric/model/NodeChannelControl.getNodeId:()Ljava/lang/String;
       7: areturn

  public void setNodeId(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: aload_1
       5: invokevirtual #31                 // Method org/jumpmind/symmetric/model/NodeChannelControl.setNodeId:(Ljava/lang/String;)V
       8: return

  public void setLastExtractTime(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: aload_1
       5: invokevirtual #32                 // Method org/jumpmind/symmetric/model/NodeChannelControl.setLastExtractTime:(Ljava/util/Date;)V
       8: return

  public java.util.Date getLastExtractTime();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: invokevirtual #33                 // Method org/jumpmind/symmetric/model/NodeChannelControl.getLastExtractTime:()Ljava/util/Date;
       7: areturn

  public void setIgnoreEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: iload_1
       5: invokevirtual #34                 // Method org/jumpmind/symmetric/model/NodeChannelControl.setIgnoreEnabled:(Z)V
       8: return

  public void setProcessingOrder(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #35                 // Method org/jumpmind/symmetric/model/Channel.setProcessingOrder:(I)V
       8: return

  public void setChannelId(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: aload_1
       5: invokevirtual #9                  // Method org/jumpmind/symmetric/model/Channel.setChannelId:(Ljava/lang/String;)V
       8: aload_0
       9: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
      12: aload_1
      13: invokevirtual #8                  // Method org/jumpmind/symmetric/model/NodeChannelControl.setChannelId:(Ljava/lang/String;)V
      16: return

  public void setSuspendEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: iload_1
       5: invokevirtual #36                 // Method org/jumpmind/symmetric/model/NodeChannelControl.setSuspendEnabled:(Z)V
       8: return

  public org.jumpmind.symmetric.model.Channel getChannel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: areturn

  public org.jumpmind.symmetric.model.NodeChannelControl getNodeChannelControl();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeChannelControl:Lorg/jumpmind/symmetric/model/NodeChannelControl;
       4: areturn

  public long getExtractPeriodMillis();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #37                 // Method org/jumpmind/symmetric/model/Channel.getExtractPeriodMillis:()J
       7: lreturn

  public void setExtractPeriodMillis(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: lload_1
       5: invokevirtual #38                 // Method org/jumpmind/symmetric/model/Channel.setExtractPeriodMillis:(J)V
       8: return

  public void setContainsBigLobs(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: iload_1
       5: invokevirtual #39                 // Method org/jumpmind/symmetric/model/Channel.setContainsBigLob:(Z)V
       8: return

  public boolean isContainsBigLob();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #40                 // Method org/jumpmind/symmetric/model/Channel.isContainsBigLob:()Z
       7: ireturn

  public void setDataLoaderType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: aload_1
       5: invokevirtual #41                 // Method org/jumpmind/symmetric/model/Channel.setDataLoaderType:(Ljava/lang/String;)V
       8: return

  public java.lang.String getDataLoaderType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Lorg/jumpmind/symmetric/model/Channel;
       4: invokevirtual #42                 // Method org/jumpmind/symmetric/model/Channel.getDataLoaderType:()Ljava/lang/String;
       7: areturn
}
