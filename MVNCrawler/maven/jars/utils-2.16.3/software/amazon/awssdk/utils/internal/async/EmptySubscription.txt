Compiled from "EmptySubscription.java"
public final class software.amazon.awssdk.utils.internal.async.EmptySubscription implements org.reactivestreams.Subscription {
  private final java.util.concurrent.atomic.AtomicBoolean isTerminated;

  private final org.reactivestreams.Subscriber<?> subscriber;

  public software.amazon.awssdk.utils.internal.async.EmptySubscription(org.reactivestreams.Subscriber<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field isTerminated:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field subscriber:Lorg/reactivestreams/Subscriber;
      21: return

  public void request(long);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method isTerminated:()Z
       4: ifeq          8
       7: return
       8: lload_1
       9: lconst_0
      10: lcmp
      11: ifgt          24
      14: new           #7                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #8                  // String Non-positive request signals are illegal
      20: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokespecial #10                 // Method terminate:()Z
      28: ifeq          40
      31: aload_0
      32: getfield      #5                  // Field subscriber:Lorg/reactivestreams/Subscriber;
      35: invokeinterface #11,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      40: return

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method terminate:()Z
       4: pop
       5: return

  private boolean terminate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isTerminated:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ireturn

  private boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isTerminated:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn
}
