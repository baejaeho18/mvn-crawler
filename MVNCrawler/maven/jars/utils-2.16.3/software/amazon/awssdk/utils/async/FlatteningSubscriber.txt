Compiled from "FlatteningSubscriber.java"
public class software.amazon.awssdk.utils.async.FlatteningSubscriber<U> extends software.amazon.awssdk.utils.async.DelegatingSubscriber<java.lang.Iterable<U>, U> {
  private final java.util.concurrent.atomic.AtomicLong demand;

  private final java.lang.Object lock;

  private boolean requestedNextBatch;

  private java.util.Queue<U> currentBatch;

  private boolean onCompleteCalled;

  private org.reactivestreams.Subscription sourceSubscription;

  public software.amazon.awssdk.utils.async.FlatteningSubscriber(org.reactivestreams.Subscriber<? super U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method software/amazon/awssdk/utils/async/DelegatingSubscriber."<init>":(Lorg/reactivestreams/Subscriber;)V
       5: aload_0
       6: new           #7                  // class java/util/concurrent/atomic/AtomicLong
       9: dup
      10: lconst_0
      11: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      14: putfield      #4                  // Field demand:Ljava/util/concurrent/atomic/AtomicLong;
      17: aload_0
      18: new           #9                  // class java/lang/Object
      21: dup
      22: invokespecial #10                 // Method java/lang/Object."<init>":()V
      25: putfield      #5                  // Field lock:Ljava/lang/Object;
      28: aload_0
      29: iconst_0
      30: putfield      #11                 // Field onCompleteCalled:Z
      33: aload_0
      34: new           #12                 // class java/util/LinkedList
      37: dup
      38: invokespecial #13                 // Method java/util/LinkedList."<init>":()V
      41: putfield      #14                 // Field currentBatch:Ljava/util/Queue;
      44: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field sourceSubscription:Lorg/reactivestreams/Subscription;
       5: aload_0
       6: getfield      #15                 // Field subscriber:Lorg/reactivestreams/Subscriber;
       9: new           #16                 // class software/amazon/awssdk/utils/async/FlatteningSubscriber$1
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #17                 // Method software/amazon/awssdk/utils/async/FlatteningSubscriber$1."<init>":(Lsoftware/amazon/awssdk/utils/async/FlatteningSubscriber;Lorg/reactivestreams/Subscription;)V
      18: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      23: return

  public void onNext(java.lang.Iterable<U>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.spliterator:()Ljava/util/Spliterator;
      14: iconst_0
      15: invokestatic  #20                 // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      18: invokedynamic #21,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      23: invokestatic  #22                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      26: invokeinterface #23,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #24                 // class java/util/Queue
      34: putfield      #14                 // Field currentBatch:Ljava/util/Queue;
      37: aload_0
      38: invokespecial #1                  // Method fulfillDemand:()V
      41: aload_2
      42: monitorexit
      43: goto          51
      46: astore_3
      47: aload_2
      48: monitorexit
      49: aload_3
      50: athrow
      51: return
    Exception table:
       from    to  target type
           7    43    46   any
          46    49    46   any

  private void fulfillDemand();
    Code:
       0: aload_0
       1: getfield      #4                  // Field demand:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lconst_0
       8: lcmp
       9: ifle          53
      12: aload_0
      13: getfield      #14                 // Field currentBatch:Ljava/util/Queue;
      16: invokeinterface #26,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      21: ifne          53
      24: aload_0
      25: getfield      #4                  // Field demand:Ljava/util/concurrent/atomic/AtomicLong;
      28: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      31: pop2
      32: aload_0
      33: getfield      #15                 // Field subscriber:Lorg/reactivestreams/Subscriber;
      36: aload_0
      37: getfield      #14                 // Field currentBatch:Ljava/util/Queue;
      40: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      45: invokeinterface #29,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      50: goto          0
      53: aload_0
      54: getfield      #11                 // Field onCompleteCalled:Z
      57: ifeq          84
      60: aload_0
      61: getfield      #14                 // Field currentBatch:Ljava/util/Queue;
      64: invokeinterface #26,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      69: ifeq          84
      72: aload_0
      73: getfield      #15                 // Field subscriber:Lorg/reactivestreams/Subscriber;
      76: invokeinterface #30,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      81: goto          123
      84: aload_0
      85: getfield      #14                 // Field currentBatch:Ljava/util/Queue;
      88: invokeinterface #26,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      93: ifeq          123
      96: aload_0
      97: getfield      #4                  // Field demand:Ljava/util/concurrent/atomic/AtomicLong;
     100: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     103: lconst_0
     104: lcmp
     105: ifle          123
     108: aload_0
     109: iconst_1
     110: putfield      #3                  // Field requestedNextBatch:Z
     113: aload_0
     114: getfield      #2                  // Field sourceSubscription:Lorg/reactivestreams/Subscription;
     117: lconst_1
     118: invokeinterface #31,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     123: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #11                 // Field onCompleteCalled:Z
      12: aload_0
      13: getfield      #14                 // Field currentBatch:Ljava/util/Queue;
      16: invokeinterface #26,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      21: ifeq          33
      24: aload_0
      25: getfield      #15                 // Field subscriber:Lorg/reactivestreams/Subscriber;
      28: invokeinterface #30,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      33: aload_1
      34: monitorexit
      35: goto          43
      38: astore_2
      39: aload_1
      40: monitorexit
      41: aload_2
      42: athrow
      43: return
    Exception table:
       from    to  target type
           7    35    38   any
          38    41    38   any

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class java/lang/Iterable
       5: invokevirtual #33                 // Method onNext:(Ljava/lang/Iterable;)V
       8: return

  static java.lang.Object access$000(software.amazon.awssdk.utils.async.FlatteningSubscriber);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/lang/Object;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$100(software.amazon.awssdk.utils.async.FlatteningSubscriber);
    Code:
       0: aload_0
       1: getfield      #4                  // Field demand:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static boolean access$200(software.amazon.awssdk.utils.async.FlatteningSubscriber);
    Code:
       0: aload_0
       1: getfield      #3                  // Field requestedNextBatch:Z
       4: ireturn

  static boolean access$202(software.amazon.awssdk.utils.async.FlatteningSubscriber, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field requestedNextBatch:Z
       6: ireturn

  static org.reactivestreams.Subscription access$300(software.amazon.awssdk.utils.async.FlatteningSubscriber);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sourceSubscription:Lorg/reactivestreams/Subscription;
       4: areturn

  static void access$400(software.amazon.awssdk.utils.async.FlatteningSubscriber);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method fulfillDemand:()V
       4: return
}
