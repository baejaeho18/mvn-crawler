Compiled from "CollectionUtils.java"
public final class software.amazon.awssdk.utils.CollectionUtils {
  private software.amazon.awssdk.utils.CollectionUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isNullOrEmpty(java.util.Collection<?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #2,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isNullOrEmpty(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #3,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static <T> java.util.List<T> mergeLists(java.util.List<T>, java.util.List<T>);
    Code:
       0: new           #4                  // class java/util/LinkedList
       3: dup
       4: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: aload_0
       9: ifnull        20
      12: aload_2
      13: aload_0
      14: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_1
      21: ifnull        32
      24: aload_2
      25: aload_1
      26: invokeinterface #6,  2            // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      31: pop
      32: aload_2
      33: areturn

  public static <T> T firstIfPresent(java.util.List<T>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifeq          15
      13: aconst_null
      14: areturn
      15: aload_0
      16: iconst_0
      17: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: areturn

  public static <T, U> java.util.Map<T, java.util.List<U>> deepCopyMap(java.util.Map<T, ? extends java.util.List<U>>);
    Code:
       0: aload_0
       1: invokedynamic #9,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
       6: invokestatic  #10                 // Method deepCopyMap:(Ljava/util/Map;Ljava/util/function/Supplier;)Ljava/util/Map;
       9: areturn

  public static <T, U> java.util.Map<T, java.util.List<U>> deepCopyMap(java.util.Map<T, ? extends java.util.List<U>>, java.util.function.Supplier<java.util.Map<T, java.util.List<U>>>);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #12                 // class java/util/Map
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokedynamic #13,  0             // InvokeDynamic #1:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      17: invokeinterface #14,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      22: aload_2
      23: areturn

  public static <T, U> java.util.Map<T, java.util.List<U>> unmodifiableMapOfLists(java.util.Map<T, java.util.List<U>>);
    Code:
       0: new           #15                 // class software/amazon/awssdk/utils/UnmodifiableMapOfLists
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method software/amazon/awssdk/utils/UnmodifiableMapOfLists."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <T, U> java.util.Map<T, java.util.List<U>> deepUnmodifiableMap(java.util.Map<T, ? extends java.util.List<U>>);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method deepCopyMap:(Ljava/util/Map;)Ljava/util/Map;
       4: invokestatic  #18                 // Method unmodifiableMapOfLists:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public static <T, U> java.util.Map<T, java.util.List<U>> deepUnmodifiableMap(java.util.Map<T, ? extends java.util.List<U>>, java.util.function.Supplier<java.util.Map<T, java.util.List<U>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #10                 // Method deepCopyMap:(Ljava/util/Map;Ljava/util/function/Supplier;)Ljava/util/Map;
       5: invokestatic  #18                 // Method unmodifiableMapOfLists:(Ljava/util/Map;)Ljava/util/Map;
       8: areturn

  public static <K, V> java.util.stream.Collector<java.util.Map$Entry<K, V>, ?, java.util.Map<K, V>> toMap();
    Code:
       0: invokedynamic #19,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
       5: invokedynamic #20,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      10: invokestatic  #21                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      13: areturn

  public static <K, VInT, VOutT> java.util.Map<K, VOutT> mapValues(java.util.Map<K, VInT>, java.util.function.Function<VInT, VOutT>);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #23,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      11: invokedynamic #19,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      16: aload_1
      17: invokedynamic #24,  0             // InvokeDynamic #4:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      22: invokestatic  #21                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      25: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      30: checkcast     #12                 // class java/util/Map
      33: areturn

  private static java.lang.Object lambda$mapValues$2(java.util.function.Function, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       7: invokeinterface #27,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  private static void lambda$deepCopyMap$1(java.util.Map, java.lang.Object, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: new           #28                 // class java/util/ArrayList
       5: dup
       6: aload_2
       7: invokespecial #29                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      10: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #31                 // class java/util/List
      18: pop
      19: return

  private static java.util.Map lambda$deepCopyMap$0();
    Code:
       0: new           #32                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #33                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn
}
