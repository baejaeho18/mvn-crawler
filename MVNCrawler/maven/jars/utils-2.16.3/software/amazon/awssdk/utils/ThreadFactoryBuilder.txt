Compiled from "ThreadFactoryBuilder.java"
public class software.amazon.awssdk.utils.ThreadFactoryBuilder {
  private static final int POOL_NUMBER_MAX;

  private static final java.util.concurrent.atomic.AtomicLong POOL_NUMBER;

  private java.lang.String threadNamePrefix;

  private java.lang.Boolean daemonThreads;

  public software.amazon.awssdk.utils.ThreadFactoryBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String aws-java-sdk
       7: putfield      #3                  // Field threadNamePrefix:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: invokestatic  #4                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      15: putfield      #5                  // Field daemonThreads:Ljava/lang/Boolean;
      18: return

  public software.amazon.awssdk.utils.ThreadFactoryBuilder threadNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field threadNamePrefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public software.amazon.awssdk.utils.ThreadFactoryBuilder daemonThreads(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field daemonThreads:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  static void resetPoolNumber();
    Code:
       0: getstatic     #6                  // Field POOL_NUMBER:Ljava/util/concurrent/atomic/AtomicLong;
       3: lconst_0
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       7: return

  public java.util.concurrent.ThreadFactory build();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #3                  // Field threadNamePrefix:Ljava/lang/String;
      11: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #11                 // String -
      16: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: getstatic     #6                  // Field POOL_NUMBER:Ljava/util/concurrent/atomic/AtomicLong;
      22: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      25: ldc2_w        #14                 // long 10000l
      28: lrem
      29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: astore_1
      36: new           #18                 // class software/amazon/awssdk/utils/NamedThreadFactory
      39: dup
      40: invokestatic  #19                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      43: aload_1
      44: invokespecial #20                 // Method software/amazon/awssdk/utils/NamedThreadFactory."<init>":(Ljava/util/concurrent/ThreadFactory;Ljava/lang/String;)V
      47: astore_2
      48: aload_0
      49: getfield      #5                  // Field daemonThreads:Ljava/lang/Boolean;
      52: invokevirtual #21                 // Method java/lang/Boolean.booleanValue:()Z
      55: ifeq          67
      58: new           #22                 // class software/amazon/awssdk/utils/DaemonThreadFactory
      61: dup
      62: aload_2
      63: invokespecial #23                 // Method software/amazon/awssdk/utils/DaemonThreadFactory."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      66: astore_2
      67: aload_2
      68: areturn

  static {};
    Code:
       0: new           #24                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #25                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #6                  // Field POOL_NUMBER:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
