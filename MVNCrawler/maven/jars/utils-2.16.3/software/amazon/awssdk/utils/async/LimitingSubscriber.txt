Compiled from "LimitingSubscriber.java"
public class software.amazon.awssdk.utils.async.LimitingSubscriber<T> extends software.amazon.awssdk.utils.async.DelegatingSubscriber<T, T> {
  private final int limit;

  private final java.util.concurrent.atomic.AtomicInteger delivered;

  private org.reactivestreams.Subscription subscription;

  public software.amazon.awssdk.utils.async.LimitingSubscriber(org.reactivestreams.Subscriber<? super T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method software/amazon/awssdk/utils/async/DelegatingSubscriber."<init>":(Lorg/reactivestreams/Subscriber;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       9: dup
      10: iconst_0
      11: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      14: putfield      #4                  // Field delivered:Ljava/util/concurrent/atomic/AtomicInteger;
      17: aload_0
      18: iload_2
      19: putfield      #5                  // Field limit:I
      22: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field subscription:Lorg/reactivestreams/Subscription;
       5: aload_0
       6: getfield      #5                  // Field limit:I
       9: ifne          36
      12: aload_1
      13: invokeinterface #7,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      18: aload_0
      19: new           #8                  // class software/amazon/awssdk/utils/internal/async/EmptySubscription
      22: dup
      23: aload_0
      24: getfield      #9                  // Field software/amazon/awssdk/utils/async/DelegatingSubscriber.subscriber:Lorg/reactivestreams/Subscriber;
      27: invokespecial #10                 // Method software/amazon/awssdk/utils/internal/async/EmptySubscription."<init>":(Lorg/reactivestreams/Subscriber;)V
      30: invokespecial #11                 // Method software/amazon/awssdk/utils/async/DelegatingSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      33: goto          41
      36: aload_0
      37: aload_1
      38: invokespecial #11                 // Method software/amazon/awssdk/utils/async/DelegatingSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      41: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delivered:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: istore_2
       8: iload_2
       9: aload_0
      10: getfield      #5                  // Field limit:I
      13: if_icmpgt     52
      16: aload_0
      17: getfield      #13                 // Field subscriber:Lorg/reactivestreams/Subscriber;
      20: aload_1
      21: invokeinterface #14,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      26: iload_2
      27: aload_0
      28: getfield      #5                  // Field limit:I
      31: if_icmpne     52
      34: aload_0
      35: getfield      #6                  // Field subscription:Lorg/reactivestreams/Subscription;
      38: invokeinterface #7,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: aload_0
      44: getfield      #13                 // Field subscriber:Lorg/reactivestreams/Subscriber;
      47: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      52: return
}
