Compiled from "AbstractSessionInputBuffer.java"
public abstract class org.apache.http.impl.io.AbstractSessionInputBuffer implements org.apache.http.io.SessionInputBuffer,org.apache.http.io.BufferInfo {
  private static final java.nio.charset.Charset ASCII;

  private java.io.InputStream instream;

  private byte[] buffer;

  private int bufferpos;

  private int bufferlen;

  private org.apache.http.util.ByteArrayBuffer linebuffer;

  private java.nio.charset.Charset charset;

  private java.nio.charset.CharsetDecoder decoder;

  private java.nio.CharBuffer cbuf;

  private boolean ascii;

  private int maxLineLen;

  private int minChunkLimit;

  private org.apache.http.impl.io.HttpTransportMetricsImpl metrics;

  private java.nio.charset.CodingErrorAction onMalformedInputAction;

  private java.nio.charset.CodingErrorAction onUnMappableInputAction;

  public org.apache.http.impl.io.AbstractSessionInputBuffer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field ascii:Z
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field maxLineLen:I
      19: aload_0
      20: sipush        512
      23: putfield      #5                  // Field minChunkLimit:I
      26: return

  protected void init(java.io.InputStream, int, org.apache.http.params.HttpParams);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #7                  // String Input stream may not be null
      10: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifgt          28
      18: new           #6                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #9                  // String Buffer size may not be negative or zero
      24: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_3
      29: ifnonnull     42
      32: new           #6                  // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #10                 // String HTTP parameters may not be null
      38: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: putfield      #11                 // Field instream:Ljava/io/InputStream;
      47: aload_0
      48: iload_2
      49: newarray       byte
      51: putfield      #12                 // Field buffer:[B
      54: aload_0
      55: iconst_0
      56: putfield      #13                 // Field bufferpos:I
      59: aload_0
      60: iconst_0
      61: putfield      #14                 // Field bufferlen:I
      64: aload_0
      65: new           #15                 // class org/apache/http/util/ByteArrayBuffer
      68: dup
      69: iload_2
      70: invokespecial #16                 // Method org/apache/http/util/ByteArrayBuffer."<init>":(I)V
      73: putfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      76: aload_0
      77: aload_3
      78: invokestatic  #17                 // Method org/apache/http/params/HttpProtocolParams.getHttpElementCharset:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;
      81: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      84: putfield      #19                 // Field charset:Ljava/nio/charset/Charset;
      87: aload_0
      88: aload_0
      89: getfield      #19                 // Field charset:Ljava/nio/charset/Charset;
      92: getstatic     #20                 // Field ASCII:Ljava/nio/charset/Charset;
      95: invokevirtual #21                 // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
      98: putfield      #3                  // Field ascii:Z
     101: aload_0
     102: aconst_null
     103: putfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
     106: aload_0
     107: aload_3
     108: ldc           #23                 // String http.connection.max-line-length
     110: iconst_m1
     111: invokeinterface #24,  3           // InterfaceMethod org/apache/http/params/HttpParams.getIntParameter:(Ljava/lang/String;I)I
     116: putfield      #4                  // Field maxLineLen:I
     119: aload_0
     120: aload_3
     121: ldc           #25                 // String http.connection.min-chunk-limit
     123: sipush        512
     126: invokeinterface #24,  3           // InterfaceMethod org/apache/http/params/HttpParams.getIntParameter:(Ljava/lang/String;I)I
     131: putfield      #5                  // Field minChunkLimit:I
     134: aload_0
     135: aload_0
     136: invokevirtual #26                 // Method createTransportMetrics:()Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
     139: putfield      #27                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
     142: aload_0
     143: aload_3
     144: invokestatic  #28                 // Method org/apache/http/params/HttpProtocolParams.getMalformedInputAction:(Lorg/apache/http/params/HttpParams;)Ljava/nio/charset/CodingErrorAction;
     147: putfield      #29                 // Field onMalformedInputAction:Ljava/nio/charset/CodingErrorAction;
     150: aload_0
     151: aload_3
     152: invokestatic  #30                 // Method org/apache/http/params/HttpProtocolParams.getUnmappableInputAction:(Lorg/apache/http/params/HttpParams;)Ljava/nio/charset/CodingErrorAction;
     155: putfield      #31                 // Field onUnMappableInputAction:Ljava/nio/charset/CodingErrorAction;
     158: return

  protected org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics();
    Code:
       0: new           #32                 // class org/apache/http/impl/io/HttpTransportMetricsImpl
       3: dup
       4: invokespecial #33                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl."<init>":()V
       7: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field buffer:[B
       4: arraylength
       5: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bufferlen:I
       4: aload_0
       5: getfield      #13                 // Field bufferpos:I
       8: isub
       9: ireturn

  public int available();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method capacity:()I
       4: aload_0
       5: invokevirtual #35                 // Method length:()I
       8: isub
       9: ireturn

  protected int fillBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field bufferpos:I
       4: ifle          48
       7: aload_0
       8: getfield      #14                 // Field bufferlen:I
      11: aload_0
      12: getfield      #13                 // Field bufferpos:I
      15: isub
      16: istore_1
      17: iload_1
      18: ifle          38
      21: aload_0
      22: getfield      #12                 // Field buffer:[B
      25: aload_0
      26: getfield      #13                 // Field bufferpos:I
      29: aload_0
      30: getfield      #12                 // Field buffer:[B
      33: iconst_0
      34: iload_1
      35: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_0
      39: iconst_0
      40: putfield      #13                 // Field bufferpos:I
      43: aload_0
      44: iload_1
      45: putfield      #14                 // Field bufferlen:I
      48: aload_0
      49: getfield      #14                 // Field bufferlen:I
      52: istore_2
      53: aload_0
      54: getfield      #12                 // Field buffer:[B
      57: arraylength
      58: iload_2
      59: isub
      60: istore_3
      61: aload_0
      62: getfield      #11                 // Field instream:Ljava/io/InputStream;
      65: aload_0
      66: getfield      #12                 // Field buffer:[B
      69: iload_2
      70: iload_3
      71: invokevirtual #37                 // Method java/io/InputStream.read:([BII)I
      74: istore_1
      75: iload_1
      76: iconst_m1
      77: if_icmpne     82
      80: iconst_m1
      81: ireturn
      82: aload_0
      83: iload_2
      84: iload_1
      85: iadd
      86: putfield      #14                 // Field bufferlen:I
      89: aload_0
      90: getfield      #27                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      93: iload_1
      94: i2l
      95: invokevirtual #38                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl.incrementBytesTransferred:(J)V
      98: iload_1
      99: ireturn

  protected boolean hasBufferedData();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bufferpos:I
       4: aload_0
       5: getfield      #14                 // Field bufferlen:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #39                 // Method hasBufferedData:()Z
       6: ifne          21
       9: aload_0
      10: invokevirtual #40                 // Method fillBuffer:()I
      13: istore_1
      14: iload_1
      15: iconst_m1
      16: if_icmpne     2
      19: iconst_m1
      20: ireturn
      21: aload_0
      22: getfield      #12                 // Field buffer:[B
      25: aload_0
      26: dup
      27: getfield      #13                 // Field bufferpos:I
      30: dup_x1
      31: iconst_1
      32: iadd
      33: putfield      #13                 // Field bufferpos:I
      36: baload
      37: sipush        255
      40: iand
      41: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #39                 // Method hasBufferedData:()Z
      10: ifeq          57
      13: iload_3
      14: aload_0
      15: getfield      #14                 // Field bufferlen:I
      18: aload_0
      19: getfield      #13                 // Field bufferpos:I
      22: isub
      23: invokestatic  #41                 // Method java/lang/Math.min:(II)I
      26: istore        4
      28: aload_0
      29: getfield      #12                 // Field buffer:[B
      32: aload_0
      33: getfield      #13                 // Field bufferpos:I
      36: aload_1
      37: iload_2
      38: iload         4
      40: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_0
      44: dup
      45: getfield      #13                 // Field bufferpos:I
      48: iload         4
      50: iadd
      51: putfield      #13                 // Field bufferpos:I
      54: iload         4
      56: ireturn
      57: iload_3
      58: aload_0
      59: getfield      #5                  // Field minChunkLimit:I
      62: if_icmple     95
      65: aload_0
      66: getfield      #11                 // Field instream:Ljava/io/InputStream;
      69: aload_1
      70: iload_2
      71: iload_3
      72: invokevirtual #37                 // Method java/io/InputStream.read:([BII)I
      75: istore        4
      77: iload         4
      79: ifle          92
      82: aload_0
      83: getfield      #27                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      86: iload         4
      88: i2l
      89: invokevirtual #38                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl.incrementBytesTransferred:(J)V
      92: iload         4
      94: ireturn
      95: aload_0
      96: invokevirtual #39                 // Method hasBufferedData:()Z
      99: ifne          119
     102: aload_0
     103: invokevirtual #40                 // Method fillBuffer:()I
     106: istore        4
     108: iload         4
     110: iconst_m1
     111: if_icmpne     116
     114: iconst_m1
     115: ireturn
     116: goto          95
     119: iload_3
     120: aload_0
     121: getfield      #14                 // Field bufferlen:I
     124: aload_0
     125: getfield      #13                 // Field bufferpos:I
     128: isub
     129: invokestatic  #41                 // Method java/lang/Math.min:(II)I
     132: istore        4
     134: aload_0
     135: getfield      #12                 // Field buffer:[B
     138: aload_0
     139: getfield      #13                 // Field bufferpos:I
     142: aload_1
     143: iload_2
     144: iload         4
     146: invokestatic  #36                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     149: aload_0
     150: dup
     151: getfield      #13                 // Field bufferpos:I
     154: iload         4
     156: iadd
     157: putfield      #13                 // Field bufferpos:I
     160: iload         4
     162: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: iconst_0
       9: aload_1
      10: arraylength
      11: invokevirtual #42                 // Method read:([BII)I
      14: ireturn

  private int locateLF();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bufferpos:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #14                 // Field bufferlen:I
      10: if_icmpge     32
      13: aload_0
      14: getfield      #12                 // Field buffer:[B
      17: iload_1
      18: baload
      19: bipush        10
      21: if_icmpne     26
      24: iload_1
      25: ireturn
      26: iinc          1, 1
      29: goto          5
      32: iconst_m1
      33: ireturn

  public int readLine(org.apache.http.util.CharArrayBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #43                 // String Char array buffer may not be null
      10: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iconst_0
      15: istore_2
      16: iconst_1
      17: istore_3
      18: iload_3
      19: ifeq          182
      22: aload_0
      23: invokespecial #44                 // Method locateLF:()I
      26: istore        4
      28: iload         4
      30: iconst_m1
      31: if_icmpeq     93
      34: aload_0
      35: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      38: invokevirtual #45                 // Method org/apache/http/util/ByteArrayBuffer.isEmpty:()Z
      41: ifeq          52
      44: aload_0
      45: aload_1
      46: iload         4
      48: invokespecial #46                 // Method lineFromReadBuffer:(Lorg/apache/http/util/CharArrayBuffer;I)I
      51: ireturn
      52: iconst_0
      53: istore_3
      54: iload         4
      56: iconst_1
      57: iadd
      58: aload_0
      59: getfield      #13                 // Field bufferpos:I
      62: isub
      63: istore        5
      65: aload_0
      66: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      69: aload_0
      70: getfield      #12                 // Field buffer:[B
      73: aload_0
      74: getfield      #13                 // Field bufferpos:I
      77: iload         5
      79: invokevirtual #47                 // Method org/apache/http/util/ByteArrayBuffer.append:([BII)V
      82: aload_0
      83: iload         4
      85: iconst_1
      86: iadd
      87: putfield      #13                 // Field bufferpos:I
      90: goto          148
      93: aload_0
      94: invokevirtual #39                 // Method hasBufferedData:()Z
      97: ifeq          136
     100: aload_0
     101: getfield      #14                 // Field bufferlen:I
     104: aload_0
     105: getfield      #13                 // Field bufferpos:I
     108: isub
     109: istore        5
     111: aload_0
     112: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
     115: aload_0
     116: getfield      #12                 // Field buffer:[B
     119: aload_0
     120: getfield      #13                 // Field bufferpos:I
     123: iload         5
     125: invokevirtual #47                 // Method org/apache/http/util/ByteArrayBuffer.append:([BII)V
     128: aload_0
     129: aload_0
     130: getfield      #14                 // Field bufferlen:I
     133: putfield      #13                 // Field bufferpos:I
     136: aload_0
     137: invokevirtual #40                 // Method fillBuffer:()I
     140: istore_2
     141: iload_2
     142: iconst_m1
     143: if_icmpne     148
     146: iconst_0
     147: istore_3
     148: aload_0
     149: getfield      #4                  // Field maxLineLen:I
     152: ifle          179
     155: aload_0
     156: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
     159: invokevirtual #48                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
     162: aload_0
     163: getfield      #4                  // Field maxLineLen:I
     166: if_icmplt     179
     169: new           #49                 // class java/io/IOException
     172: dup
     173: ldc           #50                 // String Maximum line length limit exceeded
     175: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     178: athrow
     179: goto          18
     182: iload_2
     183: iconst_m1
     184: if_icmpne     199
     187: aload_0
     188: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
     191: invokevirtual #45                 // Method org/apache/http/util/ByteArrayBuffer.isEmpty:()Z
     194: ifeq          199
     197: iconst_m1
     198: ireturn
     199: aload_0
     200: aload_1
     201: invokespecial #52                 // Method lineFromLineBuffer:(Lorg/apache/http/util/CharArrayBuffer;)I
     204: ireturn

  private int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #48                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
       7: istore_2
       8: iload_2
       9: ifle          52
      12: aload_0
      13: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      16: iload_2
      17: iconst_1
      18: isub
      19: invokevirtual #53                 // Method org/apache/http/util/ByteArrayBuffer.byteAt:(I)I
      22: bipush        10
      24: if_icmpne     30
      27: iinc          2, -1
      30: iload_2
      31: ifle          52
      34: aload_0
      35: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      38: iload_2
      39: iconst_1
      40: isub
      41: invokevirtual #53                 // Method org/apache/http/util/ByteArrayBuffer.byteAt:(I)I
      44: bipush        13
      46: if_icmpne     52
      49: iinc          2, -1
      52: aload_0
      53: getfield      #3                  // Field ascii:Z
      56: ifeq          72
      59: aload_1
      60: aload_0
      61: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      64: iconst_0
      65: iload_2
      66: invokevirtual #54                 // Method org/apache/http/util/CharArrayBuffer.append:(Lorg/apache/http/util/ByteArrayBuffer;II)V
      69: goto          92
      72: aload_0
      73: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      76: invokevirtual #55                 // Method org/apache/http/util/ByteArrayBuffer.buffer:()[B
      79: iconst_0
      80: iload_2
      81: invokestatic  #56                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      84: astore_3
      85: aload_0
      86: aload_1
      87: aload_3
      88: invokespecial #57                 // Method appendDecoded:(Lorg/apache/http/util/CharArrayBuffer;Ljava/nio/ByteBuffer;)I
      91: istore_2
      92: aload_0
      93: getfield      #2                  // Field linebuffer:Lorg/apache/http/util/ByteArrayBuffer;
      96: invokevirtual #58                 // Method org/apache/http/util/ByteArrayBuffer.clear:()V
      99: iload_2
     100: ireturn

  private int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field bufferpos:I
       4: istore_3
       5: aload_0
       6: iload_2
       7: iconst_1
       8: iadd
       9: putfield      #13                 // Field bufferpos:I
      12: iload_2
      13: iload_3
      14: if_icmple     33
      17: aload_0
      18: getfield      #12                 // Field buffer:[B
      21: iload_2
      22: iconst_1
      23: isub
      24: baload
      25: bipush        13
      27: if_icmpne     33
      30: iinc          2, -1
      33: iload_2
      34: iload_3
      35: isub
      36: istore        4
      38: aload_0
      39: getfield      #3                  // Field ascii:Z
      42: ifeq          59
      45: aload_1
      46: aload_0
      47: getfield      #12                 // Field buffer:[B
      50: iload_3
      51: iload         4
      53: invokevirtual #59                 // Method org/apache/http/util/CharArrayBuffer.append:([BII)V
      56: goto          80
      59: aload_0
      60: getfield      #12                 // Field buffer:[B
      63: iload_3
      64: iload         4
      66: invokestatic  #56                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      69: astore        5
      71: aload_0
      72: aload_1
      73: aload         5
      75: invokespecial #57                 // Method appendDecoded:(Lorg/apache/http/util/CharArrayBuffer;Ljava/nio/ByteBuffer;)I
      78: istore        4
      80: iload         4
      82: ireturn

  private int appendDecoded(org.apache.http.util.CharArrayBuffer, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #60                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
      13: ifnonnull     51
      16: aload_0
      17: aload_0
      18: getfield      #19                 // Field charset:Ljava/nio/charset/Charset;
      21: invokevirtual #61                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      24: putfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
      27: aload_0
      28: getfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
      31: aload_0
      32: getfield      #29                 // Field onMalformedInputAction:Ljava/nio/charset/CodingErrorAction;
      35: invokevirtual #62                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      38: pop
      39: aload_0
      40: getfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
      43: aload_0
      44: getfield      #31                 // Field onUnMappableInputAction:Ljava/nio/charset/CodingErrorAction;
      47: invokevirtual #63                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
      50: pop
      51: aload_0
      52: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      55: ifnonnull     68
      58: aload_0
      59: sipush        1024
      62: invokestatic  #65                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      65: putfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      68: aload_0
      69: getfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
      72: invokevirtual #66                 // Method java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
      75: pop
      76: iconst_0
      77: istore_3
      78: aload_2
      79: invokevirtual #60                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      82: ifeq          114
      85: aload_0
      86: getfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
      89: aload_2
      90: aload_0
      91: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      94: iconst_1
      95: invokevirtual #67                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      98: astore        4
     100: iload_3
     101: aload_0
     102: aload         4
     104: aload_1
     105: aload_2
     106: invokespecial #68                 // Method handleDecodingResult:(Ljava/nio/charset/CoderResult;Lorg/apache/http/util/CharArrayBuffer;Ljava/nio/ByteBuffer;)I
     109: iadd
     110: istore_3
     111: goto          78
     114: aload_0
     115: getfield      #22                 // Field decoder:Ljava/nio/charset/CharsetDecoder;
     118: aload_0
     119: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
     122: invokevirtual #69                 // Method java/nio/charset/CharsetDecoder.flush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;
     125: astore        4
     127: iload_3
     128: aload_0
     129: aload         4
     131: aload_1
     132: aload_2
     133: invokespecial #68                 // Method handleDecodingResult:(Ljava/nio/charset/CoderResult;Lorg/apache/http/util/CharArrayBuffer;Ljava/nio/ByteBuffer;)I
     136: iadd
     137: istore_3
     138: aload_0
     139: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
     142: invokevirtual #70                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
     145: pop
     146: iload_3
     147: ireturn

  private int handleDecodingResult(java.nio.charset.CoderResult, org.apache.http.util.CharArrayBuffer, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #71                 // Method java/nio/charset/CoderResult.isError:()Z
       4: ifeq          11
       7: aload_1
       8: invokevirtual #72                 // Method java/nio/charset/CoderResult.throwException:()V
      11: aload_0
      12: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      15: invokevirtual #73                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      23: invokevirtual #74                 // Method java/nio/CharBuffer.remaining:()I
      26: istore        4
      28: aload_0
      29: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      32: invokevirtual #75                 // Method java/nio/CharBuffer.hasRemaining:()Z
      35: ifeq          52
      38: aload_2
      39: aload_0
      40: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      43: invokevirtual #76                 // Method java/nio/CharBuffer.get:()C
      46: invokevirtual #77                 // Method org/apache/http/util/CharArrayBuffer.append:(C)V
      49: goto          28
      52: aload_0
      53: getfield      #64                 // Field cbuf:Ljava/nio/CharBuffer;
      56: invokevirtual #78                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
      59: pop
      60: iload         4
      62: ireturn

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: new           #79                 // class org/apache/http/util/CharArrayBuffer
       3: dup
       4: bipush        64
       6: invokespecial #80                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokevirtual #81                 // Method readLine:(Lorg/apache/http/util/CharArrayBuffer;)I
      15: istore_2
      16: iload_2
      17: iconst_m1
      18: if_icmpeq     26
      21: aload_1
      22: invokevirtual #82                 // Method org/apache/http/util/CharArrayBuffer.toString:()Ljava/lang/String;
      25: areturn
      26: aconst_null
      27: areturn

  public org.apache.http.io.HttpTransportMetrics getMetrics();
    Code:
       0: aload_0
       1: getfield      #27                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
       4: areturn

  static {};
    Code:
       0: ldc           #83                 // String US-ASCII
       2: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #20                 // Field ASCII:Ljava/nio/charset/Charset;
       8: return
}
