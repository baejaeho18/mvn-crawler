Compiled from "AbstractConnPool.java"
public abstract class org.apache.http.pool.AbstractConnPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> implements org.apache.http.pool.ConnPool<T, E>, org.apache.http.pool.ConnPoolControl<T> {
  private final java.util.concurrent.locks.Lock lock;

  private final org.apache.http.pool.ConnFactory<T, C> connFactory;

  private final java.util.Map<T, org.apache.http.pool.RouteSpecificPool<T, C, E>> routeToPool;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.LinkedList<org.apache.http.pool.PoolEntryFuture<E>> pending;

  private final java.util.Map<T, java.lang.Integer> maxPerRoute;

  private volatile boolean isShutDown;

  private volatile int defaultMaxPerRoute;

  private volatile int maxTotal;

  public org.apache.http.pool.AbstractConnPool(org.apache.http.pool.ConnFactory<T, C>, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String Connection factory may not null
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_2
      19: ifgt          32
      22: new           #3                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #6                  // String Max per route value may not be negative or zero
      28: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_3
      33: ifgt          46
      36: new           #3                  // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #7                  // String Max total value may not be negative or zero
      42: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      50: dup
      51: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      54: putfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      57: aload_0
      58: aload_1
      59: putfield      #11                 // Field connFactory:Lorg/apache/http/pool/ConnFactory;
      62: aload_0
      63: new           #12                 // class java/util/HashMap
      66: dup
      67: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      70: putfield      #14                 // Field routeToPool:Ljava/util/Map;
      73: aload_0
      74: new           #15                 // class java/util/HashSet
      77: dup
      78: invokespecial #16                 // Method java/util/HashSet."<init>":()V
      81: putfield      #17                 // Field leased:Ljava/util/Set;
      84: aload_0
      85: new           #18                 // class java/util/LinkedList
      88: dup
      89: invokespecial #19                 // Method java/util/LinkedList."<init>":()V
      92: putfield      #20                 // Field available:Ljava/util/LinkedList;
      95: aload_0
      96: new           #18                 // class java/util/LinkedList
      99: dup
     100: invokespecial #19                 // Method java/util/LinkedList."<init>":()V
     103: putfield      #21                 // Field pending:Ljava/util/LinkedList;
     106: aload_0
     107: new           #12                 // class java/util/HashMap
     110: dup
     111: invokespecial #13                 // Method java/util/HashMap."<init>":()V
     114: putfield      #22                 // Field maxPerRoute:Ljava/util/Map;
     117: aload_0
     118: iload_2
     119: putfield      #23                 // Field defaultMaxPerRoute:I
     122: aload_0
     123: iload_3
     124: putfield      #24                 // Field maxTotal:I
     127: return

  protected abstract E createEntry(T, C);

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #25                 // Field isShutDown:Z
       4: ireturn

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field isShutDown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #25                 // Field isShutDown:Z
      13: aload_0
      14: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      17: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: getfield      #20                 // Field available:Ljava/util/LinkedList;
      26: invokevirtual #27                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          56
      39: aload_1
      40: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #30                 // class org/apache/http/pool/PoolEntry
      48: astore_2
      49: aload_2
      50: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
      53: goto          30
      56: aload_0
      57: getfield      #17                 // Field leased:Ljava/util/Set;
      60: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore_1
      66: aload_1
      67: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          92
      75: aload_1
      76: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #30                 // class org/apache/http/pool/PoolEntry
      84: astore_2
      85: aload_2
      86: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
      89: goto          66
      92: aload_0
      93: getfield      #14                 // Field routeToPool:Ljava/util/Map;
      96: invokeinterface #33,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     101: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     106: astore_1
     107: aload_1
     108: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          133
     116: aload_1
     117: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #35                 // class org/apache/http/pool/RouteSpecificPool
     125: astore_2
     126: aload_2
     127: invokevirtual #36                 // Method org/apache/http/pool/RouteSpecificPool.shutdown:()V
     130: goto          107
     133: aload_0
     134: getfield      #14                 // Field routeToPool:Ljava/util/Map;
     137: invokeinterface #37,  1           // InterfaceMethod java/util/Map.clear:()V
     142: aload_0
     143: getfield      #17                 // Field leased:Ljava/util/Set;
     146: invokeinterface #38,  1           // InterfaceMethod java/util/Set.clear:()V
     151: aload_0
     152: getfield      #20                 // Field available:Ljava/util/LinkedList;
     155: invokevirtual #39                 // Method java/util/LinkedList.clear:()V
     158: aload_0
     159: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     162: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     167: goto          182
     170: astore_3
     171: aload_0
     172: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     175: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     180: aload_3
     181: athrow
     182: return
    Exception table:
       from    to  target type
          22   158   170   any
         170   171   170   any

  private org.apache.http.pool.RouteSpecificPool<T, C, E> getPool(T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field routeToPool:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #35                 // class org/apache/http/pool/RouteSpecificPool
      13: astore_2
      14: aload_2
      15: ifnonnull     41
      18: new           #42                 // class org/apache/http/pool/AbstractConnPool$1
      21: dup
      22: aload_0
      23: aload_1
      24: aload_1
      25: invokespecial #43                 // Method org/apache/http/pool/AbstractConnPool$1."<init>":(Lorg/apache/http/pool/AbstractConnPool;Ljava/lang/Object;Ljava/lang/Object;)V
      28: astore_2
      29: aload_0
      30: getfield      #14                 // Field routeToPool:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_2
      42: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object, org.apache.http.concurrent.FutureCallback<E>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #45                 // String Route may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #25                 // Field isShutDown:Z
      18: ifeq          31
      21: new           #46                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #47                 // String Connection pool shut down
      27: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: new           #49                 // class org/apache/http/pool/AbstractConnPool$2
      34: dup
      35: aload_0
      36: aload_0
      37: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      40: aload_3
      41: aload_1
      42: aload_2
      43: invokespecial #50                 // Method org/apache/http/pool/AbstractConnPool$2."<init>":(Lorg/apache/http/pool/AbstractConnPool;Ljava/util/concurrent/locks/Lock;Lorg/apache/http/concurrent/FutureCallback;Ljava/lang/Object;Ljava/lang/Object;)V
      46: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #51                 // Method lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
       7: areturn

  private E getPoolEntryBlocking(T, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.pool.PoolEntryFuture<E>) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aconst_null
       1: astore        7
       3: lload_3
       4: lconst_0
       5: lcmp
       6: ifle          28
       9: new           #52                 // class java/util/Date
      12: dup
      13: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
      16: aload         5
      18: lload_3
      19: invokevirtual #54                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      22: ladd
      23: invokespecial #55                 // Method java/util/Date."<init>":(J)V
      26: astore        7
      28: aload_0
      29: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: aload_1
      39: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      42: astore        8
      44: aconst_null
      45: astore        9
      47: aload         9
      49: ifnonnull     506
      52: aload_0
      53: getfield      #25                 // Field isShutDown:Z
      56: ifeq          69
      59: new           #46                 // class java/lang/IllegalStateException
      62: dup
      63: ldc           #47                 // String Connection pool shut down
      65: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload         8
      71: aload_2
      72: invokevirtual #57                 // Method org/apache/http/pool/RouteSpecificPool.getFree:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
      75: astore        9
      77: aload         9
      79: ifnonnull     85
      82: goto          130
      85: aload         9
      87: invokevirtual #58                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
      90: ifne          104
      93: aload         9
      95: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
      98: invokevirtual #59                 // Method org/apache/http/pool/PoolEntry.isExpired:(J)Z
     101: ifeq          130
     104: aload         9
     106: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
     109: aload_0
     110: getfield      #20                 // Field available:Ljava/util/LinkedList;
     113: aload         9
     115: invokevirtual #60                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     118: pop
     119: aload         8
     121: aload         9
     123: iconst_0
     124: invokevirtual #61                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
     127: goto          69
     130: aload         9
     132: ifnull        173
     135: aload_0
     136: getfield      #20                 // Field available:Ljava/util/LinkedList;
     139: aload         9
     141: invokevirtual #60                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     144: pop
     145: aload_0
     146: getfield      #17                 // Field leased:Ljava/util/Set;
     149: aload         9
     151: invokeinterface #62,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     156: pop
     157: aload         9
     159: astore        10
     161: aload_0
     162: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     165: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     170: aload         10
     172: areturn
     173: aload_0
     174: aload_1
     175: invokespecial #63                 // Method getMax:(Ljava/lang/Object;)I
     178: istore        10
     180: iconst_0
     181: aload         8
     183: invokevirtual #64                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     186: iconst_1
     187: iadd
     188: iload         10
     190: isub
     191: invokestatic  #65                 // Method java/lang/Math.max:(II)I
     194: istore        11
     196: iload         11
     198: ifle          255
     201: iconst_0
     202: istore        12
     204: iload         12
     206: iload         11
     208: if_icmpge     255
     211: aload         8
     213: invokevirtual #66                 // Method org/apache/http/pool/RouteSpecificPool.getLastUsed:()Lorg/apache/http/pool/PoolEntry;
     216: astore        13
     218: aload         13
     220: ifnonnull     226
     223: goto          255
     226: aload         13
     228: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
     231: aload_0
     232: getfield      #20                 // Field available:Ljava/util/LinkedList;
     235: aload         13
     237: invokevirtual #60                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     240: pop
     241: aload         8
     243: aload         13
     245: invokevirtual #67                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     248: pop
     249: iinc          12, 1
     252: goto          204
     255: aload         8
     257: invokevirtual #64                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     260: iload         10
     262: if_icmpge     407
     265: aload_0
     266: getfield      #17                 // Field leased:Ljava/util/Set;
     269: invokeinterface #68,  1           // InterfaceMethod java/util/Set.size:()I
     274: istore        12
     276: aload_0
     277: getfield      #24                 // Field maxTotal:I
     280: iload         12
     282: isub
     283: iconst_0
     284: invokestatic  #65                 // Method java/lang/Math.max:(II)I
     287: istore        13
     289: iload         13
     291: ifle          407
     294: aload_0
     295: getfield      #20                 // Field available:Ljava/util/LinkedList;
     298: invokevirtual #69                 // Method java/util/LinkedList.size:()I
     301: istore        14
     303: iload         14
     305: iload         13
     307: iconst_1
     308: isub
     309: if_icmple     358
     312: aload_0
     313: getfield      #20                 // Field available:Ljava/util/LinkedList;
     316: invokevirtual #70                 // Method java/util/LinkedList.isEmpty:()Z
     319: ifne          358
     322: aload_0
     323: getfield      #20                 // Field available:Ljava/util/LinkedList;
     326: invokevirtual #71                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
     329: checkcast     #30                 // class org/apache/http/pool/PoolEntry
     332: astore        15
     334: aload         15
     336: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
     339: aload_0
     340: aload         15
     342: invokevirtual #72                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     345: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
     348: astore        16
     350: aload         16
     352: aload         15
     354: invokevirtual #67                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     357: pop
     358: aload_0
     359: getfield      #11                 // Field connFactory:Lorg/apache/http/pool/ConnFactory;
     362: aload_1
     363: invokeinterface #73,  2           // InterfaceMethod org/apache/http/pool/ConnFactory.create:(Ljava/lang/Object;)Ljava/lang/Object;
     368: astore        15
     370: aload         8
     372: aload         15
     374: invokevirtual #74                 // Method org/apache/http/pool/RouteSpecificPool.add:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
     377: astore        9
     379: aload_0
     380: getfield      #17                 // Field leased:Ljava/util/Set;
     383: aload         9
     385: invokeinterface #62,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     390: pop
     391: aload         9
     393: astore        16
     395: aload_0
     396: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     399: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     404: aload         16
     406: areturn
     407: iconst_0
     408: istore        12
     410: aload         8
     412: aload         6
     414: invokevirtual #75                 // Method org/apache/http/pool/RouteSpecificPool.queue:(Lorg/apache/http/pool/PoolEntryFuture;)V
     417: aload_0
     418: getfield      #21                 // Field pending:Ljava/util/LinkedList;
     421: aload         6
     423: invokevirtual #76                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     426: pop
     427: aload         6
     429: aload         7
     431: invokevirtual #77                 // Method org/apache/http/pool/PoolEntryFuture.await:(Ljava/util/Date;)Z
     434: istore        12
     436: aload         8
     438: aload         6
     440: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Lorg/apache/http/pool/PoolEntryFuture;)V
     443: aload_0
     444: getfield      #21                 // Field pending:Ljava/util/LinkedList;
     447: aload         6
     449: invokevirtual #60                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     452: pop
     453: goto          478
     456: astore        17
     458: aload         8
     460: aload         6
     462: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Lorg/apache/http/pool/PoolEntryFuture;)V
     465: aload_0
     466: getfield      #21                 // Field pending:Ljava/util/LinkedList;
     469: aload         6
     471: invokevirtual #60                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     474: pop
     475: aload         17
     477: athrow
     478: iload         12
     480: ifne          503
     483: aload         7
     485: ifnull        503
     488: aload         7
     490: invokevirtual #79                 // Method java/util/Date.getTime:()J
     493: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
     496: lcmp
     497: ifgt          503
     500: goto          506
     503: goto          47
     506: new           #80                 // class java/util/concurrent/TimeoutException
     509: dup
     510: ldc           #81                 // String Timeout waiting for connection
     512: invokespecial #82                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
     515: athrow
     516: astore        18
     518: aload_0
     519: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     522: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     527: aload         18
     529: athrow
    Exception table:
       from    to  target type
         410   436   456   any
         456   458   456   any
          37   161   516   any
         173   395   516   any
         407   518   516   any

  private void notifyPending(org.apache.http.pool.RouteSpecificPool<T, C, E>);
    Code:
       0: aload_1
       1: invokevirtual #83                 // Method org/apache/http/pool/RouteSpecificPool.nextPending:()Lorg/apache/http/pool/PoolEntryFuture;
       4: astore_2
       5: aload_2
       6: ifnull        21
       9: aload_0
      10: getfield      #21                 // Field pending:Ljava/util/LinkedList;
      13: aload_2
      14: invokevirtual #60                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      17: pop
      18: goto          32
      21: aload_0
      22: getfield      #21                 // Field pending:Ljava/util/LinkedList;
      25: invokevirtual #84                 // Method java/util/LinkedList.poll:()Ljava/lang/Object;
      28: checkcast     #85                 // class org/apache/http/pool/PoolEntryFuture
      31: astore_2
      32: aload_2
      33: ifnull        40
      36: aload_2
      37: invokevirtual #86                 // Method org/apache/http/pool/PoolEntryFuture.wakeup:()V
      40: return

  public void release(E, boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #17                 // Field leased:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #87,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      19: ifeq          68
      22: aload_0
      23: aload_1
      24: invokevirtual #72                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      27: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      30: astore_3
      31: aload_3
      32: aload_1
      33: iload_2
      34: invokevirtual #61                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
      37: iload_2
      38: ifeq          59
      41: aload_0
      42: getfield      #25                 // Field isShutDown:Z
      45: ifne          59
      48: aload_0
      49: getfield      #20                 // Field available:Ljava/util/LinkedList;
      52: aload_1
      53: invokevirtual #88                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      56: goto          63
      59: aload_1
      60: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
      63: aload_0
      64: aload_3
      65: invokespecial #89                 // Method notifyPending:(Lorg/apache/http/pool/RouteSpecificPool;)V
      68: aload_0
      69: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      72: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      77: goto          94
      80: astore        4
      82: aload_0
      83: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      86: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      91: aload         4
      93: athrow
      94: return
    Exception table:
       from    to  target type
           9    68    80   any
          80    82    80   any

  private int getMax(T);
    Code:
       0: aload_0
       1: getfield      #22                 // Field maxPerRoute:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #90                 // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #91                 // Method java/lang/Integer.intValue:()I
      22: ireturn
      23: aload_0
      24: getfield      #23                 // Field defaultMaxPerRoute:I
      27: ireturn

  public void setMaxTotal(int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #92                 // String Max value may not be negative or zero
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: iload_1
      25: putfield      #24                 // Field maxTotal:I
      28: aload_0
      29: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      37: goto          52
      40: astore_2
      41: aload_0
      42: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
          23    28    40   any
          40    41    40   any

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #24                 // Field maxTotal:I
      13: istore_1
      14: aload_0
      15: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setDefaultMaxPerRoute(int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #92                 // String Max value may not be negative or zero
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: iload_1
      25: putfield      #23                 // Field defaultMaxPerRoute:I
      28: aload_0
      29: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      37: goto          52
      40: astore_2
      41: aload_0
      42: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
      52: return
    Exception table:
       from    to  target type
          23    28    40   any
          40    41    40   any

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #23                 // Field defaultMaxPerRoute:I
      13: istore_1
      14: aload_0
      15: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setMaxPerRoute(T, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #45                 // String Route may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifgt          28
      18: new           #3                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #92                 // String Max value may not be negative or zero
      24: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: getfield      #22                 // Field maxPerRoute:Ljava/util/Map;
      41: aload_1
      42: iload_2
      43: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_0
      53: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      56: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: goto          76
      64: astore_3
      65: aload_0
      66: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      69: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      74: aload_3
      75: athrow
      76: return
    Exception table:
       from    to  target type
          37    52    64   any
          64    65    64   any

  public int getMaxPerRoute(T);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #45                 // String Route may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: aload_1
      25: invokespecial #63                 // Method getMax:(Ljava/lang/Object;)I
      28: istore_2
      29: aload_0
      30: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: iload_2
      39: ireturn
      40: astore_3
      41: aload_0
      42: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_3
      51: athrow
    Exception table:
       from    to  target type
          23    29    40   any
          40    41    40   any

  public org.apache.http.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #94                 // class org/apache/http/pool/PoolStats
      12: dup
      13: aload_0
      14: getfield      #17                 // Field leased:Ljava/util/Set;
      17: invokeinterface #68,  1           // InterfaceMethod java/util/Set.size:()I
      22: aload_0
      23: getfield      #21                 // Field pending:Ljava/util/LinkedList;
      26: invokevirtual #69                 // Method java/util/LinkedList.size:()I
      29: aload_0
      30: getfield      #20                 // Field available:Ljava/util/LinkedList;
      33: invokevirtual #69                 // Method java/util/LinkedList.size:()I
      36: aload_0
      37: getfield      #24                 // Field maxTotal:I
      40: invokespecial #95                 // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      43: astore_1
      44: aload_0
      45: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      48: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_1
      54: areturn
      55: astore_2
      56: aload_0
      57: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_2
      66: athrow
    Exception table:
       from    to  target type
           9    44    55   any
          55    56    55   any

  public org.apache.http.pool.PoolStats getStats(T);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #45                 // String Route may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: aload_1
      25: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      28: astore_2
      29: new           #94                 // class org/apache/http/pool/PoolStats
      32: dup
      33: aload_2
      34: invokevirtual #96                 // Method org/apache/http/pool/RouteSpecificPool.getLeasedCount:()I
      37: aload_2
      38: invokevirtual #97                 // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      41: aload_2
      42: invokevirtual #98                 // Method org/apache/http/pool/RouteSpecificPool.getAvailableCount:()I
      45: aload_0
      46: aload_1
      47: invokespecial #63                 // Method getMax:(Ljava/lang/Object;)I
      50: invokespecial #95                 // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      53: astore_3
      54: aload_0
      55: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      58: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      63: aload_3
      64: areturn
      65: astore        4
      67: aload_0
      68: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      71: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      76: aload         4
      78: athrow
    Exception table:
       from    to  target type
          23    54    65   any
          65    67    65   any

  public void closeIdle(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #99                 // String Time unit must not be null.
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_3
      15: lload_1
      16: invokevirtual #54                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      19: lstore        4
      21: lload         4
      23: lconst_0
      24: lcmp
      25: ifge          31
      28: lconst_0
      29: lstore        4
      31: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
      34: lload         4
      36: lsub
      37: lstore        6
      39: aload_0
      40: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      43: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      48: aload_0
      49: getfield      #20                 // Field available:Ljava/util/LinkedList;
      52: invokevirtual #100                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      55: astore        8
      57: aload         8
      59: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          130
      67: aload         8
      69: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: checkcast     #30                 // class org/apache/http/pool/PoolEntry
      77: astore        9
      79: aload         9
      81: invokevirtual #101                // Method org/apache/http/pool/PoolEntry.getUpdated:()J
      84: lload         6
      86: lcmp
      87: ifgt          127
      90: aload         9
      92: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
      95: aload_0
      96: aload         9
      98: invokevirtual #72                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     101: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
     104: astore        10
     106: aload         10
     108: aload         9
     110: invokevirtual #67                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     113: pop
     114: aload         8
     116: invokeinterface #102,  1          // InterfaceMethod java/util/Iterator.remove:()V
     121: aload_0
     122: aload         10
     124: invokespecial #89                 // Method notifyPending:(Lorg/apache/http/pool/RouteSpecificPool;)V
     127: goto          57
     130: aload_0
     131: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     134: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     139: goto          156
     142: astore        11
     144: aload_0
     145: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     148: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     153: aload         11
     155: athrow
     156: return
    Exception table:
       from    to  target type
          48   130   142   any
         142   144   142   any

  public void closeExpired();
    Code:
       0: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
       8: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      13: aload_0
      14: getfield      #20                 // Field available:Ljava/util/LinkedList;
      17: invokevirtual #100                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          89
      30: aload_3
      31: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #30                 // class org/apache/http/pool/PoolEntry
      39: astore        4
      41: aload         4
      43: lload_1
      44: invokevirtual #59                 // Method org/apache/http/pool/PoolEntry.isExpired:(J)Z
      47: ifeq          86
      50: aload         4
      52: invokevirtual #31                 // Method org/apache/http/pool/PoolEntry.close:()V
      55: aload_0
      56: aload         4
      58: invokevirtual #72                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      61: invokespecial #56                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      64: astore        5
      66: aload         5
      68: aload         4
      70: invokevirtual #67                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
      73: pop
      74: aload_3
      75: invokeinterface #102,  1          // InterfaceMethod java/util/Iterator.remove:()V
      80: aload_0
      81: aload         5
      83: invokespecial #89                 // Method notifyPending:(Lorg/apache/http/pool/RouteSpecificPool;)V
      86: goto          21
      89: aload_0
      90: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
      93: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      98: goto          115
     101: astore        6
     103: aload_0
     104: getfield      #10                 // Field lock:Ljava/util/concurrent/locks/Lock;
     107: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     112: aload         6
     114: athrow
     115: return
    Exception table:
       from    to  target type
          13    89   101   any
         101   103   101   any

  public java.lang.String toString();
    Code:
       0: new           #103                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #104                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #105                // String [leased:
      11: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #17                 // Field leased:Ljava/util/Set;
      20: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #108                // String ][available:
      27: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #20                 // Field available:Ljava/util/LinkedList;
      36: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #109                // String ][pending:
      43: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: aload_0
      49: getfield      #21                 // Field pending:Ljava/util/LinkedList;
      52: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: ldc           #110                // String ]
      59: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public void release(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/http/pool/PoolEntry
       5: iload_2
       6: invokevirtual #112                // Method release:(Lorg/apache/http/pool/PoolEntry;Z)V
       9: return

  static org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool, java.lang.Object, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.pool.PoolEntryFuture) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: aload         6
       8: invokespecial #1                  // Method getPoolEntryBlocking:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Lorg/apache/http/pool/PoolEntryFuture;)Lorg/apache/http/pool/PoolEntry;
      11: areturn
}
