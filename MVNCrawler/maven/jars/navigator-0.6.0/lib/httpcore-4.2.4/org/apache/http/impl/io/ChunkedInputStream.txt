Compiled from "ChunkedInputStream.java"
public class org.apache.http.impl.io.ChunkedInputStream extends java.io.InputStream {
  private static final int CHUNK_LEN;

  private static final int CHUNK_DATA;

  private static final int CHUNK_CRLF;

  private static final int BUFFER_SIZE;

  private final org.apache.http.io.SessionInputBuffer in;

  private final org.apache.http.util.CharArrayBuffer buffer;

  private int state;

  private int chunkSize;

  private int pos;

  private boolean eof;

  private boolean closed;

  private org.apache.http.Header[] footers;

  public org.apache.http.impl.io.ChunkedInputStream(org.apache.http.io.SessionInputBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field eof:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field closed:Z
      14: aload_0
      15: iconst_0
      16: anewarray     #4                  // class org/apache/http/Header
      19: putfield      #5                  // Field footers:[Lorg/apache/http/Header;
      22: aload_1
      23: ifnonnull     36
      26: new           #6                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #7                  // String Session input buffer may not be null
      32: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: putfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      41: aload_0
      42: iconst_0
      43: putfield      #10                 // Field pos:I
      46: aload_0
      47: new           #11                 // class org/apache/http/util/CharArrayBuffer
      50: dup
      51: bipush        16
      53: invokespecial #12                 // Method org/apache/http/util/CharArrayBuffer."<init>":(I)V
      56: putfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      59: aload_0
      60: iconst_1
      61: putfield      #14                 // Field state:I
      64: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
       4: instanceof    #15                 // class org/apache/http/io/BufferInfo
       7: ifeq          37
      10: aload_0
      11: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      14: checkcast     #15                 // class org/apache/http/io/BufferInfo
      17: invokeinterface #16,  1           // InterfaceMethod org/apache/http/io/BufferInfo.length:()I
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #17                 // Field chunkSize:I
      28: aload_0
      29: getfield      #10                 // Field pos:I
      32: isub
      33: invokestatic  #18                 // Method java/lang/Math.min:(II)I
      36: ireturn
      37: iconst_0
      38: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/io/IOException
      10: dup
      11: ldc           #20                 // String Attempted read from closed stream.
      13: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field eof:Z
      21: ifeq          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #14                 // Field state:I
      30: iconst_2
      31: if_icmpeq     47
      34: aload_0
      35: invokespecial #22                 // Method nextChunk:()V
      38: aload_0
      39: getfield      #2                  // Field eof:Z
      42: ifeq          47
      45: iconst_m1
      46: ireturn
      47: aload_0
      48: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      51: invokeinterface #23,  1           // InterfaceMethod org/apache/http/io/SessionInputBuffer.read:()I
      56: istore_1
      57: iload_1
      58: iconst_m1
      59: if_icmpeq     88
      62: aload_0
      63: dup
      64: getfield      #10                 // Field pos:I
      67: iconst_1
      68: iadd
      69: putfield      #10                 // Field pos:I
      72: aload_0
      73: getfield      #10                 // Field pos:I
      76: aload_0
      77: getfield      #17                 // Field chunkSize:I
      80: if_icmplt     88
      83: aload_0
      84: iconst_3
      85: putfield      #14                 // Field state:I
      88: iload_1
      89: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifeq          17
       7: new           #19                 // class java/io/IOException
      10: dup
      11: ldc           #20                 // String Attempted read from closed stream.
      13: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field eof:Z
      21: ifeq          26
      24: iconst_m1
      25: ireturn
      26: aload_0
      27: getfield      #14                 // Field state:I
      30: iconst_2
      31: if_icmpeq     47
      34: aload_0
      35: invokespecial #22                 // Method nextChunk:()V
      38: aload_0
      39: getfield      #2                  // Field eof:Z
      42: ifeq          47
      45: iconst_m1
      46: ireturn
      47: iload_3
      48: aload_0
      49: getfield      #17                 // Field chunkSize:I
      52: aload_0
      53: getfield      #10                 // Field pos:I
      56: isub
      57: invokestatic  #18                 // Method java/lang/Math.min:(II)I
      60: istore_3
      61: aload_0
      62: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      65: aload_1
      66: iload_2
      67: iload_3
      68: invokeinterface #24,  4           // InterfaceMethod org/apache/http/io/SessionInputBuffer.read:([BII)I
      73: istore        4
      75: iload         4
      77: iconst_m1
      78: if_icmpeq     111
      81: aload_0
      82: dup
      83: getfield      #10                 // Field pos:I
      86: iload         4
      88: iadd
      89: putfield      #10                 // Field pos:I
      92: aload_0
      93: getfield      #10                 // Field pos:I
      96: aload_0
      97: getfield      #17                 // Field chunkSize:I
     100: if_icmplt     108
     103: aload_0
     104: iconst_3
     105: putfield      #14                 // Field state:I
     108: iload         4
     110: ireturn
     111: aload_0
     112: iconst_1
     113: putfield      #2                  // Field eof:Z
     116: new           #25                 // class org/apache/http/TruncatedChunkException
     119: dup
     120: new           #26                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #28                 // String Truncated chunk ( expected size:
     129: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: getfield      #17                 // Field chunkSize:I
     136: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: ldc           #31                 // String ; actual size:
     141: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: getfield      #10                 // Field pos:I
     148: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: ldc           #32                 // String )
     153: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokespecial #34                 // Method org/apache/http/TruncatedChunkException."<init>":(Ljava/lang/String;)V
     162: athrow

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #35                 // Method read:([BII)I
       8: ireturn

  private void nextChunk() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #36                 // Method getChunkSize:()I
       5: putfield      #17                 // Field chunkSize:I
       8: aload_0
       9: getfield      #17                 // Field chunkSize:I
      12: ifge          25
      15: new           #37                 // class org/apache/http/MalformedChunkCodingException
      18: dup
      19: ldc           #38                 // String Negative chunk size
      21: invokespecial #39                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: iconst_2
      27: putfield      #14                 // Field state:I
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field pos:I
      35: aload_0
      36: getfield      #17                 // Field chunkSize:I
      39: ifne          51
      42: aload_0
      43: iconst_1
      44: putfield      #2                  // Field eof:Z
      47: aload_0
      48: invokespecial #40                 // Method parseTrailerHeaders:()V
      51: return

  private int getChunkSize() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field state:I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 2
                     1: 85
                     3: 32
               default: 162
          }
      32: aload_0
      33: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      36: invokevirtual #41                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
      39: aload_0
      40: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      43: aload_0
      44: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      47: invokeinterface #42,  2           // InterfaceMethod org/apache/http/io/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I
      52: istore_2
      53: iload_2
      54: iconst_m1
      55: if_icmpne     60
      58: iconst_0
      59: ireturn
      60: aload_0
      61: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      64: invokevirtual #43                 // Method org/apache/http/util/CharArrayBuffer.isEmpty:()Z
      67: ifne          80
      70: new           #37                 // class org/apache/http/MalformedChunkCodingException
      73: dup
      74: ldc           #44                 // String Unexpected content at the end of chunk
      76: invokespecial #39                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: iconst_1
      82: putfield      #14                 // Field state:I
      85: aload_0
      86: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
      89: invokevirtual #41                 // Method org/apache/http/util/CharArrayBuffer.clear:()V
      92: aload_0
      93: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
      96: aload_0
      97: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     100: invokeinterface #42,  2           // InterfaceMethod org/apache/http/io/SessionInputBuffer.readLine:(Lorg/apache/http/util/CharArrayBuffer;)I
     105: istore_2
     106: iload_2
     107: iconst_m1
     108: if_icmpne     113
     111: iconst_0
     112: ireturn
     113: aload_0
     114: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     117: bipush        59
     119: invokevirtual #45                 // Method org/apache/http/util/CharArrayBuffer.indexOf:(I)I
     122: istore_3
     123: iload_3
     124: ifge          135
     127: aload_0
     128: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     131: invokevirtual #46                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     134: istore_3
     135: aload_0
     136: getfield      #13                 // Field buffer:Lorg/apache/http/util/CharArrayBuffer;
     139: iconst_0
     140: iload_3
     141: invokevirtual #47                 // Method org/apache/http/util/CharArrayBuffer.substringTrimmed:(II)Ljava/lang/String;
     144: bipush        16
     146: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
     149: ireturn
     150: astore        4
     152: new           #37                 // class org/apache/http/MalformedChunkCodingException
     155: dup
     156: ldc           #50                 // String Bad chunk header
     158: invokespecial #39                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: new           #51                 // class java/lang/IllegalStateException
     165: dup
     166: ldc           #52                 // String Inconsistent codec state
     168: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     171: athrow
    Exception table:
       from    to  target type
         135   149   150   Class java/lang/NumberFormatException

  private void parseTrailerHeaders() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field in:Lorg/apache/http/io/SessionInputBuffer;
       5: iconst_m1
       6: iconst_m1
       7: aconst_null
       8: invokestatic  #54                 // Method org/apache/http/impl/io/AbstractMessageParser.parseHeaders:(Lorg/apache/http/io/SessionInputBuffer;IILorg/apache/http/message/LineParser;)[Lorg/apache/http/Header;
      11: putfield      #5                  // Field footers:[Lorg/apache/http/Header;
      14: goto          56
      17: astore_1
      18: new           #37                 // class org/apache/http/MalformedChunkCodingException
      21: dup
      22: new           #26                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #56                 // String Invalid footer:
      31: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #57                 // Method org/apache/http/HttpException.getMessage:()Ljava/lang/String;
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #39                 // Method org/apache/http/MalformedChunkCodingException."<init>":(Ljava/lang/String;)V
      47: astore_2
      48: aload_2
      49: aload_1
      50: invokevirtual #58                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      53: pop
      54: aload_2
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class org/apache/http/HttpException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field closed:Z
       4: ifne          57
       7: aload_0
       8: getfield      #2                  // Field eof:Z
      11: ifne          31
      14: sipush        2048
      17: newarray       byte
      19: astore_1
      20: aload_0
      21: aload_1
      22: invokevirtual #59                 // Method read:([B)I
      25: iflt          31
      28: goto          20
      31: aload_0
      32: iconst_1
      33: putfield      #2                  // Field eof:Z
      36: aload_0
      37: iconst_1
      38: putfield      #3                  // Field closed:Z
      41: goto          57
      44: astore_2
      45: aload_0
      46: iconst_1
      47: putfield      #2                  // Field eof:Z
      50: aload_0
      51: iconst_1
      52: putfield      #3                  // Field closed:Z
      55: aload_2
      56: athrow
      57: return
    Exception table:
       from    to  target type
           7    31    44   any
          44    45    44   any

  public org.apache.http.Header[] getFooters();
    Code:
       0: aload_0
       1: getfield      #5                  // Field footers:[Lorg/apache/http/Header;
       4: invokevirtual #60                 // Method "[Lorg/apache/http/Header;".clone:()Ljava/lang/Object;
       7: checkcast     #61                 // class "[Lorg/apache/http/Header;"
      10: areturn
}
