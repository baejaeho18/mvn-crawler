Compiled from "ZonedChronology.java"
class org.joda.time.chrono.ZonedChronology$ZonedDurationField extends org.joda.time.field.BaseDurationField {
  private static final long serialVersionUID;

  final org.joda.time.DurationField iField;

  final boolean iTimeField;

  final org.joda.time.DateTimeZone iZone;

  org.joda.time.chrono.ZonedChronology$ZonedDurationField(org.joda.time.DurationField, org.joda.time.DateTimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/joda/time/DurationField.getType:()Lorg/joda/time/DurationFieldType;
       5: invokespecial #2                  // Method org/joda/time/field/BaseDurationField."<init>":(Lorg/joda/time/DurationFieldType;)V
       8: aload_1
       9: invokevirtual #3                  // Method org/joda/time/DurationField.isSupported:()Z
      12: ifne          23
      15: new           #4                  // class java/lang/IllegalArgumentException
      18: dup
      19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":()V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      28: aload_0
      29: aload_1
      30: invokestatic  #7                  // Method org/joda/time/chrono/ZonedChronology.useTimeArithmetic:(Lorg/joda/time/DurationField;)Z
      33: putfield      #8                  // Field iTimeField:Z
      36: aload_0
      37: aload_2
      38: putfield      #9                  // Field iZone:Lorg/joda/time/DateTimeZone;
      41: return

  public boolean isPrecise();
    Code:
       0: aload_0
       1: getfield      #8                  // Field iTimeField:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      11: invokevirtual #10                 // Method org/joda/time/DurationField.isPrecise:()Z
      14: goto          42
      17: aload_0
      18: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      21: invokevirtual #10                 // Method org/joda/time/DurationField.isPrecise:()Z
      24: ifeq          41
      27: aload_0
      28: getfield      #9                  // Field iZone:Lorg/joda/time/DateTimeZone;
      31: invokevirtual #11                 // Method org/joda/time/DateTimeZone.isFixed:()Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public long getUnitMillis();
    Code:
       0: aload_0
       1: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
       4: invokevirtual #12                 // Method org/joda/time/DurationField.getUnitMillis:()J
       7: lreturn

  public int getValue(long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
       4: lload_1
       5: aload_0
       6: lload_3
       7: invokespecial #13                 // Method addOffset:(J)J
      10: invokevirtual #14                 // Method org/joda/time/DurationField.getValue:(JJ)I
      13: ireturn

  public long getValueAsLong(long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
       4: lload_1
       5: aload_0
       6: lload_3
       7: invokespecial #13                 // Method addOffset:(J)J
      10: invokevirtual #15                 // Method org/joda/time/DurationField.getValueAsLong:(JJ)J
      13: lreturn

  public long getMillis(int, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
       4: iload_1
       5: aload_0
       6: lload_2
       7: invokespecial #13                 // Method addOffset:(J)J
      10: invokevirtual #16                 // Method org/joda/time/DurationField.getMillis:(IJ)J
      13: lreturn

  public long getMillis(long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
       4: lload_1
       5: aload_0
       6: lload_3
       7: invokespecial #13                 // Method addOffset:(J)J
      10: invokevirtual #17                 // Method org/joda/time/DurationField.getMillis:(JJ)J
      13: lreturn

  public long add(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #18                 // Method getOffsetToAdd:(J)I
       5: istore        4
       7: aload_0
       8: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      11: lload_1
      12: iload         4
      14: i2l
      15: ladd
      16: iload_3
      17: invokevirtual #19                 // Method org/joda/time/DurationField.add:(JI)J
      20: lstore_1
      21: lload_1
      22: aload_0
      23: getfield      #8                  // Field iTimeField:Z
      26: ifeq          34
      29: iload         4
      31: goto          39
      34: aload_0
      35: lload_1
      36: invokespecial #20                 // Method getOffsetFromLocalToSubtract:(J)I
      39: i2l
      40: lsub
      41: lreturn

  public long add(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #18                 // Method getOffsetToAdd:(J)I
       5: istore        5
       7: aload_0
       8: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      11: lload_1
      12: iload         5
      14: i2l
      15: ladd
      16: lload_3
      17: invokevirtual #21                 // Method org/joda/time/DurationField.add:(JJ)J
      20: lstore_1
      21: lload_1
      22: aload_0
      23: getfield      #8                  // Field iTimeField:Z
      26: ifeq          34
      29: iload         5
      31: goto          39
      34: aload_0
      35: lload_1
      36: invokespecial #20                 // Method getOffsetFromLocalToSubtract:(J)I
      39: i2l
      40: lsub
      41: lreturn

  public int getDifference(long, long);
    Code:
       0: aload_0
       1: lload_3
       2: invokespecial #18                 // Method getOffsetToAdd:(J)I
       5: istore        5
       7: aload_0
       8: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      11: lload_1
      12: aload_0
      13: getfield      #8                  // Field iTimeField:Z
      16: ifeq          24
      19: iload         5
      21: goto          29
      24: aload_0
      25: lload_1
      26: invokespecial #18                 // Method getOffsetToAdd:(J)I
      29: i2l
      30: ladd
      31: lload_3
      32: iload         5
      34: i2l
      35: ladd
      36: invokevirtual #22                 // Method org/joda/time/DurationField.getDifference:(JJ)I
      39: ireturn

  public long getDifferenceAsLong(long, long);
    Code:
       0: aload_0
       1: lload_3
       2: invokespecial #18                 // Method getOffsetToAdd:(J)I
       5: istore        5
       7: aload_0
       8: getfield      #6                  // Field iField:Lorg/joda/time/DurationField;
      11: lload_1
      12: aload_0
      13: getfield      #8                  // Field iTimeField:Z
      16: ifeq          24
      19: iload         5
      21: goto          29
      24: aload_0
      25: lload_1
      26: invokespecial #18                 // Method getOffsetToAdd:(J)I
      29: i2l
      30: ladd
      31: lload_3
      32: iload         5
      34: i2l
      35: ladd
      36: invokevirtual #23                 // Method org/joda/time/DurationField.getDifferenceAsLong:(JJ)J
      39: lreturn

  private int getOffsetToAdd(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field iZone:Lorg/joda/time/DateTimeZone;
       4: lload_1
       5: invokevirtual #24                 // Method org/joda/time/DateTimeZone.getOffset:(J)I
       8: istore_3
       9: lload_1
      10: iload_3
      11: i2l
      12: ladd
      13: lstore        4
      15: lload_1
      16: lload         4
      18: lxor
      19: lconst_0
      20: lcmp
      21: ifge          43
      24: lload_1
      25: iload_3
      26: i2l
      27: lxor
      28: lconst_0
      29: lcmp
      30: iflt          43
      33: new           #25                 // class java/lang/ArithmeticException
      36: dup
      37: ldc           #26                 // String Adding time zone offset caused overflow
      39: invokespecial #27                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_3
      44: ireturn

  private int getOffsetFromLocalToSubtract(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field iZone:Lorg/joda/time/DateTimeZone;
       4: lload_1
       5: invokevirtual #28                 // Method org/joda/time/DateTimeZone.getOffsetFromLocal:(J)I
       8: istore_3
       9: lload_1
      10: iload_3
      11: i2l
      12: lsub
      13: lstore        4
      15: lload_1
      16: lload         4
      18: lxor
      19: lconst_0
      20: lcmp
      21: ifge          43
      24: lload_1
      25: iload_3
      26: i2l
      27: lxor
      28: lconst_0
      29: lcmp
      30: ifge          43
      33: new           #25                 // class java/lang/ArithmeticException
      36: dup
      37: ldc           #29                 // String Subtracting time zone offset caused overflow
      39: invokespecial #27                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_3
      44: ireturn

  private long addOffset(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field iZone:Lorg/joda/time/DateTimeZone;
       4: lload_1
       5: invokevirtual #30                 // Method org/joda/time/DateTimeZone.convertUTCToLocal:(J)J
       8: lreturn
}
