Compiled from "GJYearOfEraDateTimeField.java"
final class org.joda.time.chrono.GJYearOfEraDateTimeField extends org.joda.time.field.DecoratedDateTimeField {
  private static final long serialVersionUID;

  private final org.joda.time.chrono.BasicChronology iChronology;

  org.joda.time.chrono.GJYearOfEraDateTimeField(org.joda.time.DateTimeField, org.joda.time.chrono.BasicChronology);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method org/joda/time/DateTimeFieldType.yearOfEra:()Lorg/joda/time/DateTimeFieldType;
       5: invokespecial #2                  // Method org/joda/time/field/DecoratedDateTimeField."<init>":(Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V
       8: aload_0
       9: aload_2
      10: putfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      13: return

  public int get(long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: invokevirtual #5                  // Method org/joda/time/DateTimeField.get:(J)I
       8: istore_3
       9: iload_3
      10: ifgt          17
      13: iconst_1
      14: iload_3
      15: isub
      16: istore_3
      17: iload_3
      18: ireturn

  public long add(long, int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: iload_3
       6: invokevirtual #6                  // Method org/joda/time/DateTimeField.add:(JI)J
       9: lreturn

  public long add(long, long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: lload_3
       6: invokevirtual #7                  // Method org/joda/time/DateTimeField.add:(JJ)J
       9: lreturn

  public long addWrapField(long, int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: iload_3
       6: invokevirtual #8                  // Method org/joda/time/DateTimeField.addWrapField:(JI)J
       9: lreturn

  public int[] addWrapField(org.joda.time.ReadablePartial, int, int[], int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: aload_1
       5: iload_2
       6: aload_3
       7: iload         4
       9: invokevirtual #9                  // Method org/joda/time/DateTimeField.addWrapField:(Lorg/joda/time/ReadablePartial;I[II)[I
      12: areturn

  public int getDifference(long, long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: lload_3
       6: invokevirtual #10                 // Method org/joda/time/DateTimeField.getDifference:(JJ)I
       9: ireturn

  public long getDifferenceAsLong(long, long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: lload_3
       6: invokevirtual #11                 // Method org/joda/time/DateTimeField.getDifferenceAsLong:(JJ)J
       9: lreturn

  public long set(long, int);
    Code:
       0: aload_0
       1: iload_3
       2: iconst_1
       3: aload_0
       4: invokevirtual #12                 // Method getMaximumValue:()I
       7: invokestatic  #13                 // Method org/joda/time/field/FieldUtils.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V
      10: aload_0
      11: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      14: lload_1
      15: invokevirtual #14                 // Method org/joda/time/chrono/BasicChronology.getYear:(J)I
      18: ifgt          25
      21: iconst_1
      22: iload_3
      23: isub
      24: istore_3
      25: aload_0
      26: lload_1
      27: iload_3
      28: invokespecial #15                 // Method org/joda/time/field/DecoratedDateTimeField.set:(JI)J
      31: lreturn

  public int getMinimumValue();
    Code:
       0: iconst_1
       1: ireturn

  public int getMaximumValue();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: invokevirtual #16                 // Method org/joda/time/DateTimeField.getMaximumValue:()I
       7: ireturn

  public long roundFloor(long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: invokevirtual #17                 // Method org/joda/time/DateTimeField.roundFloor:(J)J
       8: lreturn

  public long roundCeiling(long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: invokevirtual #18                 // Method org/joda/time/DateTimeField.roundCeiling:(J)J
       8: lreturn

  public long remainder(long);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getWrappedField:()Lorg/joda/time/DateTimeField;
       4: lload_1
       5: invokevirtual #19                 // Method org/joda/time/DateTimeField.remainder:(J)J
       8: lreturn

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #20                 // Method org/joda/time/chrono/BasicChronology.yearOfEra:()Lorg/joda/time/DateTimeField;
       7: areturn
}
