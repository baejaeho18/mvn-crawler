Compiled from "DateTimeZoneBuilder.java"
final class org.joda.time.tz.DateTimeZoneBuilder$Rule {
  final org.joda.time.tz.DateTimeZoneBuilder$Recurrence iRecurrence;

  final int iFromYear;

  final int iToYear;

  org.joda.time.tz.DateTimeZoneBuilder$Rule(org.joda.time.tz.DateTimeZoneBuilder$Recurrence, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field iFromYear:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field iToYear:I
      19: return

  public int getFromYear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iFromYear:I
       4: ireturn

  public int getToYear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iToYear:I
       4: ireturn

  public org.joda.time.tz.DateTimeZoneBuilder$OfYear getOfYear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       4: invokevirtual #5                  // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getOfYear:()Lorg/joda/time/tz/DateTimeZoneBuilder$OfYear;
       7: areturn

  public java.lang.String getNameKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       4: invokevirtual #6                  // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getNameKey:()Ljava/lang/String;
       7: areturn

  public int getSaveMillis();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
       4: invokevirtual #7                  // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.getSaveMillis:()I
       7: ireturn

  public long next(long, int, int);
    Code:
       0: invokestatic  #8                  // Method org/joda/time/chrono/ISOChronology.getInstanceUTC:()Lorg/joda/time/chrono/ISOChronology;
       3: astore        5
       5: iload_3
       6: iload         4
       8: iadd
       9: istore        6
      11: lload_1
      12: lstore        7
      14: lload_1
      15: ldc2_w        #9                  // long -9223372036854775808l
      18: lcmp
      19: ifne          29
      22: ldc           #11                 // int -2147483648
      24: istore        9
      26: goto          44
      29: aload         5
      31: invokevirtual #12                 // Method org/joda/time/Chronology.year:()Lorg/joda/time/DateTimeField;
      34: lload_1
      35: iload         6
      37: i2l
      38: ladd
      39: invokevirtual #13                 // Method org/joda/time/DateTimeField.get:(J)I
      42: istore        9
      44: iload         9
      46: aload_0
      47: getfield      #3                  // Field iFromYear:I
      50: if_icmpge     78
      53: aload         5
      55: invokevirtual #12                 // Method org/joda/time/Chronology.year:()Lorg/joda/time/DateTimeField;
      58: lconst_0
      59: aload_0
      60: getfield      #3                  // Field iFromYear:I
      63: invokevirtual #14                 // Method org/joda/time/DateTimeField.set:(JI)J
      66: iload         6
      68: i2l
      69: lsub
      70: lstore        7
      72: lload         7
      74: lconst_1
      75: lsub
      76: lstore        7
      78: aload_0
      79: getfield      #2                  // Field iRecurrence:Lorg/joda/time/tz/DateTimeZoneBuilder$Recurrence;
      82: lload         7
      84: iload_3
      85: iload         4
      87: invokevirtual #15                 // Method org/joda/time/tz/DateTimeZoneBuilder$Recurrence.next:(JII)J
      90: lstore        10
      92: lload         10
      94: lload_1
      95: lcmp
      96: ifle          127
      99: aload         5
     101: invokevirtual #12                 // Method org/joda/time/Chronology.year:()Lorg/joda/time/DateTimeField;
     104: lload         10
     106: iload         6
     108: i2l
     109: ladd
     110: invokevirtual #13                 // Method org/joda/time/DateTimeField.get:(J)I
     113: istore        9
     115: iload         9
     117: aload_0
     118: getfield      #4                  // Field iToYear:I
     121: if_icmple     127
     124: lload_1
     125: lstore        10
     127: lload         10
     129: lreturn
}
