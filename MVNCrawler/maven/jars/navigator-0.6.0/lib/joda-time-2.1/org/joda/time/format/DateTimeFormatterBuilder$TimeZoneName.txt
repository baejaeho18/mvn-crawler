Compiled from "DateTimeFormatterBuilder.java"
class org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName implements org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser {
  static final int LONG_NAME;

  static final int SHORT_NAME;

  private final java.util.Map<java.lang.String, org.joda.time.DateTimeZone> iParseLookup;

  private final int iType;

  org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName(int, java.util.Map<java.lang.String, org.joda.time.DateTimeZone>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field iType:I
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field iParseLookup:Ljava/util/Map;
      14: return

  public int estimatePrintedLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iType:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_4
       9: goto          14
      12: bipush        20
      14: ireturn

  public void printTo(java.lang.StringBuffer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale);
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: iload         5
       5: i2l
       6: lsub
       7: aload         6
       9: aload         7
      11: invokespecial #4                  // Method print:(JLorg/joda/time/DateTimeZone;Ljava/util/Locale;)Ljava/lang/String;
      14: invokevirtual #5                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      17: pop
      18: return

  public void printTo(java.io.Writer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: lload_2
       3: iload         5
       5: i2l
       6: lsub
       7: aload         6
       9: aload         7
      11: invokespecial #4                  // Method print:(JLorg/joda/time/DateTimeZone;Ljava/util/Locale;)Ljava/lang/String;
      14: invokevirtual #6                  // Method java/io/Writer.write:(Ljava/lang/String;)V
      17: return

  private java.lang.String print(long, org.joda.time.DateTimeZone, java.util.Locale);
    Code:
       0: aload_3
       1: ifnonnull     7
       4: ldc           #7                  // String
       6: areturn
       7: aload_0
       8: getfield      #2                  // Field iType:I
      11: lookupswitch  { // 2
                     0: 36
                     1: 44
               default: 52
          }
      36: aload_3
      37: lload_1
      38: aload         4
      40: invokevirtual #8                  // Method org/joda/time/DateTimeZone.getName:(JLjava/util/Locale;)Ljava/lang/String;
      43: areturn
      44: aload_3
      45: lload_1
      46: aload         4
      48: invokevirtual #9                  // Method org/joda/time/DateTimeZone.getShortName:(JLjava/util/Locale;)Ljava/lang/String;
      51: areturn
      52: ldc           #7                  // String
      54: areturn

  public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePartial, java.util.Locale);
    Code:
       0: return

  public void printTo(java.io.Writer, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException;
    Code:
       0: return

  public int estimateParsedLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iType:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_4
       9: goto          14
      12: bipush        20
      14: ireturn

  public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int);
    Code:
       0: aload_2
       1: iload_3
       2: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       5: astore        4
       7: aload_0
       8: getfield      #3                  // Field iParseLookup:Ljava/util/Map;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      16: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        5
      23: aload         5
      25: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          84
      33: aload         5
      35: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #15                 // class java/lang/String
      43: astore        6
      45: aload         4
      47: aload         6
      49: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      52: ifeq          81
      55: aload_1
      56: aload_0
      57: getfield      #3                  // Field iParseLookup:Ljava/util/Map;
      60: aload         6
      62: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #18                 // class org/joda/time/DateTimeZone
      70: invokevirtual #19                 // Method org/joda/time/format/DateTimeParserBucket.setZone:(Lorg/joda/time/DateTimeZone;)V
      73: iload_3
      74: aload         6
      76: invokevirtual #20                 // Method java/lang/String.length:()I
      79: iadd
      80: ireturn
      81: goto          23
      84: iload_3
      85: iconst_m1
      86: ixor
      87: ireturn
}
