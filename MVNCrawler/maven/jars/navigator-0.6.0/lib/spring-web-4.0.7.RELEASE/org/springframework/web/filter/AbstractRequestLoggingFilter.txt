Compiled from "AbstractRequestLoggingFilter.java"
public abstract class org.springframework.web.filter.AbstractRequestLoggingFilter extends org.springframework.web.filter.OncePerRequestFilter {
  public static final java.lang.String DEFAULT_BEFORE_MESSAGE_PREFIX;

  public static final java.lang.String DEFAULT_BEFORE_MESSAGE_SUFFIX;

  public static final java.lang.String DEFAULT_AFTER_MESSAGE_PREFIX;

  public static final java.lang.String DEFAULT_AFTER_MESSAGE_SUFFIX;

  private static final int DEFAULT_MAX_PAYLOAD_LENGTH;

  private boolean includeQueryString;

  private boolean includeClientInfo;

  private boolean includePayload;

  private int maxPayloadLength;

  private java.lang.String beforeMessagePrefix;

  private java.lang.String beforeMessageSuffix;

  private java.lang.String afterMessagePrefix;

  private java.lang.String afterMessageSuffix;

  public org.springframework.web.filter.AbstractRequestLoggingFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field includeQueryString:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field includeClientInfo:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field includePayload:Z
      19: aload_0
      20: bipush        50
      22: putfield      #6                  // Field maxPayloadLength:I
      25: aload_0
      26: ldc           #7                  // String Before request [
      28: putfield      #8                  // Field beforeMessagePrefix:Ljava/lang/String;
      31: aload_0
      32: ldc           #9                  // String ]
      34: putfield      #10                 // Field beforeMessageSuffix:Ljava/lang/String;
      37: aload_0
      38: ldc           #11                 // String After request [
      40: putfield      #12                 // Field afterMessagePrefix:Ljava/lang/String;
      43: aload_0
      44: ldc           #9                  // String ]
      46: putfield      #13                 // Field afterMessageSuffix:Ljava/lang/String;
      49: return

  public void setIncludeQueryString(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field includeQueryString:Z
       5: return

  protected boolean isIncludeQueryString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field includeQueryString:Z
       4: ireturn

  public void setIncludeClientInfo(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field includeClientInfo:Z
       5: return

  protected boolean isIncludeClientInfo();
    Code:
       0: aload_0
       1: getfield      #3                  // Field includeClientInfo:Z
       4: ireturn

  public void setIncludePayload(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field includePayload:Z
       5: return

  protected boolean isIncludePayload();
    Code:
       0: aload_0
       1: getfield      #4                  // Field includePayload:Z
       4: ireturn

  public void setMaxPayloadLength(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #14                 // String \'maxPayloadLength\' should be larger than or equal to 0
      11: invokestatic  #15                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #6                  // Field maxPayloadLength:I
      19: return

  protected int getMaxPayloadLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxPayloadLength:I
       4: ireturn

  public void setBeforeMessagePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field beforeMessagePrefix:Ljava/lang/String;
       5: return

  public void setBeforeMessageSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field beforeMessageSuffix:Ljava/lang/String;
       5: return

  public void setAfterMessagePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field afterMessagePrefix:Ljava/lang/String;
       5: return

  public void setAfterMessageSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field afterMessageSuffix:Ljava/lang/String;
       5: return

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method isAsyncDispatch:(Ljavax/servlet/http/HttpServletRequest;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore        4
      15: aload_0
      16: invokevirtual #17                 // Method isIncludePayload:()Z
      19: ifeq          37
      22: iload         4
      24: ifeq          37
      27: new           #18                 // class org/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper
      30: dup
      31: aload_1
      32: aconst_null
      33: invokespecial #19                 // Method org/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/filter/AbstractRequestLoggingFilter$1;)V
      36: astore_1
      37: iload         4
      39: ifeq          52
      42: aload_0
      43: aload_1
      44: aload_0
      45: aload_1
      46: invokespecial #20                 // Method getBeforeMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      49: invokevirtual #21                 // Method beforeRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
      52: aload_3
      53: aload_1
      54: aload_2
      55: invokeinterface #22,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      60: aload_0
      61: aload_1
      62: invokevirtual #23                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
      65: ifne          104
      68: aload_0
      69: aload_1
      70: aload_0
      71: aload_1
      72: invokespecial #24                 // Method getAfterMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      75: invokevirtual #25                 // Method afterRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
      78: goto          104
      81: astore        5
      83: aload_0
      84: aload_1
      85: invokevirtual #23                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
      88: ifne          101
      91: aload_0
      92: aload_1
      93: aload_0
      94: aload_1
      95: invokespecial #24                 // Method getAfterMessage:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      98: invokevirtual #25                 // Method afterRequest:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)V
     101: aload         5
     103: athrow
     104: return
    Exception table:
       from    to  target type
          52    60    81   any
          81    83    81   any

  private java.lang.String getBeforeMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #8                  // Field beforeMessagePrefix:Ljava/lang/String;
       6: aload_0
       7: getfield      #10                 // Field beforeMessageSuffix:Ljava/lang/String;
      10: invokevirtual #26                 // Method createMessage:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  private java.lang.String getAfterMessage(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #12                 // Field afterMessagePrefix:Ljava/lang/String;
       6: aload_0
       7: getfield      #13                 // Field afterMessageSuffix:Ljava/lang/String;
      10: invokevirtual #26                 // Method createMessage:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  protected java.lang.String createMessage(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String);
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: aload         4
      11: aload_2
      12: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload         4
      18: ldc           #30                 // String uri=
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokeinterface #31,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      29: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_0
      34: invokevirtual #32                 // Method isIncludeQueryString:()Z
      37: ifeq          57
      40: aload         4
      42: bipush        63
      44: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokeinterface #34,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      53: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_0
      58: invokevirtual #35                 // Method isIncludeClientInfo:()Z
      61: ifeq          151
      64: aload_1
      65: invokeinterface #36,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteAddr:()Ljava/lang/String;
      70: astore        5
      72: aload         5
      74: invokestatic  #37                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      77: ifeq          93
      80: aload         4
      82: ldc           #38                 // String ;client=
      84: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload         5
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: iconst_0
      95: invokeinterface #39,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
     100: astore        6
     102: aload         6
     104: ifnull        125
     107: aload         4
     109: ldc           #40                 // String ;session=
     111: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload         6
     116: invokeinterface #41,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
     121: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: pop
     125: aload_1
     126: invokeinterface #42,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteUser:()Ljava/lang/String;
     131: astore        7
     133: aload         7
     135: ifnull        151
     138: aload         4
     140: ldc           #43                 // String ;user=
     142: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload         7
     147: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: pop
     151: aload_0
     152: invokevirtual #17                 // Method isIncludePayload:()Z
     155: ifeq          237
     158: aload_1
     159: instanceof    #18                 // class org/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper
     162: ifeq          237
     165: aload_1
     166: checkcast     #18                 // class org/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper
     169: astore        5
     171: aload         5
     173: invokestatic  #44                 // Method org/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper.access$100:(Lorg/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper;)[B
     176: astore        6
     178: aload         6
     180: arraylength
     181: ifle          237
     184: aload         6
     186: arraylength
     187: aload_0
     188: invokevirtual #45                 // Method getMaxPayloadLength:()I
     191: invokestatic  #46                 // Method java/lang/Math.min:(II)I
     194: istore        7
     196: new           #47                 // class java/lang/String
     199: dup
     200: aload         6
     202: iconst_0
     203: iload         7
     205: aload         5
     207: invokevirtual #48                 // Method org/springframework/web/filter/AbstractRequestLoggingFilter$RequestCachingRequestWrapper.getCharacterEncoding:()Ljava/lang/String;
     210: invokespecial #49                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
     213: astore        8
     215: goto          224
     218: astore        9
     220: ldc           #51                 // String [unknown]
     222: astore        8
     224: aload         4
     226: ldc           #52                 // String ;payload=
     228: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     231: aload         8
     233: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: pop
     237: aload         4
     239: aload_3
     240: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: pop
     244: aload         4
     246: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: areturn
    Exception table:
       from    to  target type
         196   215   218   Class java/io/UnsupportedEncodingException

  protected abstract void beforeRequest(javax.servlet.http.HttpServletRequest, java.lang.String);

  protected abstract void afterRequest(javax.servlet.http.HttpServletRequest, java.lang.String);
}
