Compiled from "PathExtensionContentNegotiationStrategy.java"
class org.springframework.web.accept.PathExtensionContentNegotiationStrategy$JafMediaTypeFactory {
  private static final javax.activation.FileTypeMap fileTypeMap;

  private org.springframework.web.accept.PathExtensionContentNegotiationStrategy$JafMediaTypeFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static javax.activation.FileTypeMap initFileTypeMap();
    Code:
       0: new           #2                  // class org/springframework/core/io/ClassPathResource
       3: dup
       4: ldc           #3                  // String org/springframework/mail/javamail/mime.types
       6: invokespecial #4                  // Method org/springframework/core/io/ClassPathResource."<init>":(Ljava/lang/String;)V
       9: astore_0
      10: aload_0
      11: invokeinterface #5,  1            // InterfaceMethod org/springframework/core/io/Resource.exists:()Z
      16: ifeq          123
      19: invokestatic  #6                  // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy.access$000:()Lorg/apache/commons/logging/Log;
      22: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      27: ifeq          57
      30: invokestatic  #6                  // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy.access$000:()Lorg/apache/commons/logging/Log;
      33: new           #8                  // class java/lang/StringBuilder
      36: dup
      37: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #10                 // String Loading Java Activation Framework FileTypeMap from
      42: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      57: aconst_null
      58: astore_1
      59: aload_0
      60: invokeinterface #15,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
      65: astore_1
      66: new           #16                 // class javax/activation/MimetypesFileTypeMap
      69: dup
      70: aload_1
      71: invokespecial #17                 // Method javax/activation/MimetypesFileTypeMap."<init>":(Ljava/io/InputStream;)V
      74: astore_2
      75: aload_1
      76: ifnull        87
      79: aload_1
      80: invokevirtual #18                 // Method java/io/InputStream.close:()V
      83: goto          87
      86: astore_3
      87: aload_2
      88: areturn
      89: astore_2
      90: aload_1
      91: ifnull        123
      94: aload_1
      95: invokevirtual #18                 // Method java/io/InputStream.close:()V
      98: goto          123
     101: astore_2
     102: goto          123
     105: astore        4
     107: aload_1
     108: ifnull        120
     111: aload_1
     112: invokevirtual #18                 // Method java/io/InputStream.close:()V
     115: goto          120
     118: astore        5
     120: aload         4
     122: athrow
     123: invokestatic  #6                  // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy.access$000:()Lorg/apache/commons/logging/Log;
     126: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     131: ifeq          144
     134: invokestatic  #6                  // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy.access$000:()Lorg/apache/commons/logging/Log;
     137: ldc           #20                 // String Loading default Java Activation Framework FileTypeMap
     139: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     144: invokestatic  #21                 // Method javax/activation/FileTypeMap.getDefaultFileTypeMap:()Ljavax/activation/FileTypeMap;
     147: areturn
    Exception table:
       from    to  target type
          79    83    86   Class java/io/IOException
          59    75    89   Class java/io/IOException
          94    98   101   Class java/io/IOException
          59    75   105   any
         111   115   118   Class java/io/IOException
         105   107   105   any

  public static org.springframework.http.MediaType getMediaType(java.lang.String);
    Code:
       0: getstatic     #22                 // Field fileTypeMap:Ljavax/activation/FileTypeMap;
       3: aload_0
       4: invokevirtual #23                 // Method javax/activation/FileTypeMap.getContentType:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #24                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      12: ifeq          22
      15: aload_1
      16: invokestatic  #25                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      19: goto          23
      22: aconst_null
      23: areturn

  static {};
    Code:
       0: invokestatic  #26                 // Method initFileTypeMap:()Ljavax/activation/FileTypeMap;
       3: putstatic     #22                 // Field fileTypeMap:Ljavax/activation/FileTypeMap;
       6: return
}
