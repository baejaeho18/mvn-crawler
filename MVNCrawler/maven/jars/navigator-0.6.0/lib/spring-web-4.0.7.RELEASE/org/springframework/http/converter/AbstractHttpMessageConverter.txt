Compiled from "AbstractHttpMessageConverter.java"
public abstract class org.springframework.http.converter.AbstractHttpMessageConverter<T> implements org.springframework.http.converter.HttpMessageConverter<T> {
  protected final org.apache.commons.logging.Log logger;

  private java.util.List<org.springframework.http.MediaType> supportedMediaTypes;

  protected org.springframework.http.converter.AbstractHttpMessageConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      19: putfield      #6                  // Field supportedMediaTypes:Ljava/util/List;
      22: return

  protected org.springframework.http.converter.AbstractHttpMessageConverter(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      19: putfield      #6                  // Field supportedMediaTypes:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: invokestatic  #7                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      27: invokevirtual #8                  // Method setSupportedMediaTypes:(Ljava/util/List;)V
      30: return

  protected org.springframework.http.converter.AbstractHttpMessageConverter(org.springframework.http.MediaType...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: invokestatic  #5                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      19: putfield      #6                  // Field supportedMediaTypes:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      27: invokevirtual #8                  // Method setSupportedMediaTypes:(Ljava/util/List;)V
      30: return

  public void setSupportedMediaTypes(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_1
       1: ldc           #10                 // String \'supportedMediaTypes\' must not be empty
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       6: aload_0
       7: new           #12                 // class java/util/ArrayList
      10: dup
      11: aload_1
      12: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: putfield      #6                  // Field supportedMediaTypes:Ljava/util/List;
      18: return

  public java.util.List<org.springframework.http.MediaType> getSupportedMediaTypes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field supportedMediaTypes:Ljava/util/List;
       4: invokestatic  #14                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public boolean canRead(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method supports:(Ljava/lang/Class;)Z
       5: ifeq          20
       8: aload_0
       9: aload_2
      10: invokevirtual #16                 // Method canRead:(Lorg/springframework/http/MediaType;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected boolean canRead(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: invokevirtual #17                 // Method getSupportedMediaTypes:()Ljava/util/List;
      10: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          48
      25: aload_2
      26: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #21                 // class org/springframework/http/MediaType
      34: astore_3
      35: aload_3
      36: aload_1
      37: invokevirtual #22                 // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
      40: ifeq          45
      43: iconst_1
      44: ireturn
      45: goto          16
      48: iconst_0
      49: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method supports:(Ljava/lang/Class;)Z
       5: ifeq          20
       8: aload_0
       9: aload_2
      10: invokevirtual #23                 // Method canWrite:(Lorg/springframework/http/MediaType;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected boolean canWrite(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnull        14
       4: getstatic     #24                 // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
       7: aload_1
       8: invokevirtual #25                 // Method org/springframework/http/MediaType.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: invokevirtual #17                 // Method getSupportedMediaTypes:()Ljava/util/List;
      20: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          58
      35: aload_2
      36: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #21                 // class org/springframework/http/MediaType
      44: astore_3
      45: aload_3
      46: aload_1
      47: invokevirtual #26                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      50: ifeq          55
      53: iconst_1
      54: ireturn
      55: goto          26
      58: iconst_0
      59: ireturn

  public final T read(java.lang.Class<? extends T>, org.springframework.http.HttpInputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #27                 // Method readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/Object;
       6: areturn

  public final void write(T, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_3
       1: invokeinterface #28,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: astore        4
       8: aload         4
      10: invokevirtual #29                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      13: ifnonnull     56
      16: aload_2
      17: astore        5
      19: aload_2
      20: ifnull        37
      23: aload_2
      24: invokevirtual #30                 // Method org/springframework/http/MediaType.isWildcardType:()Z
      27: ifne          37
      30: aload_2
      31: invokevirtual #31                 // Method org/springframework/http/MediaType.isWildcardSubtype:()Z
      34: ifeq          44
      37: aload_0
      38: aload_1
      39: invokevirtual #32                 // Method getDefaultContentType:(Ljava/lang/Object;)Lorg/springframework/http/MediaType;
      42: astore        5
      44: aload         5
      46: ifnull        56
      49: aload         4
      51: aload         5
      53: invokevirtual #33                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      56: aload         4
      58: invokevirtual #34                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
      61: ldc2_w        #35                 // long -1l
      64: lcmp
      65: ifne          95
      68: aload_0
      69: aload_1
      70: aload         4
      72: invokevirtual #29                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      75: invokevirtual #37                 // Method getContentLength:(Ljava/lang/Object;Lorg/springframework/http/MediaType;)Ljava/lang/Long;
      78: astore        5
      80: aload         5
      82: ifnull        95
      85: aload         4
      87: aload         5
      89: invokevirtual #38                 // Method java/lang/Long.longValue:()J
      92: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.setContentLength:(J)V
      95: aload_3
      96: instanceof    #40                 // class org/springframework/http/StreamingHttpOutputMessage
      99: ifeq          129
     102: aload_3
     103: checkcast     #40                 // class org/springframework/http/StreamingHttpOutputMessage
     106: astore        5
     108: aload         5
     110: new           #41                 // class org/springframework/http/converter/AbstractHttpMessageConverter$1
     113: dup
     114: aload_0
     115: aload_1
     116: aload         4
     118: invokespecial #42                 // Method org/springframework/http/converter/AbstractHttpMessageConverter$1."<init>":(Lorg/springframework/http/converter/AbstractHttpMessageConverter;Ljava/lang/Object;Lorg/springframework/http/HttpHeaders;)V
     121: invokeinterface #43,  2           // InterfaceMethod org/springframework/http/StreamingHttpOutputMessage.setBody:(Lorg/springframework/http/StreamingHttpOutputMessage$Body;)V
     126: goto          144
     129: aload_0
     130: aload_1
     131: aload_3
     132: invokevirtual #44                 // Method writeInternal:(Ljava/lang/Object;Lorg/springframework/http/HttpOutputMessage;)V
     135: aload_3
     136: invokeinterface #45,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     141: invokevirtual #46                 // Method java/io/OutputStream.flush:()V
     144: return

  protected org.springframework.http.MediaType getDefaultContentType(T) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getSupportedMediaTypes:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: invokeinterface #47,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          27
      14: aload_2
      15: iconst_0
      16: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #21                 // class org/springframework/http/MediaType
      24: goto          28
      27: aconst_null
      28: areturn

  protected java.lang.Long getContentLength(T, org.springframework.http.MediaType) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  protected abstract boolean supports(java.lang.Class<?>);

  protected abstract T readInternal(java.lang.Class<? extends T>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;

  protected abstract void writeInternal(T, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
}
