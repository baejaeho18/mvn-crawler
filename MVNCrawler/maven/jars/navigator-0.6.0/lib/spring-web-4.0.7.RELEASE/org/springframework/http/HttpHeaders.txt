Compiled from "HttpHeaders.java"
public class org.springframework.http.HttpHeaders implements org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>, java.io.Serializable {
  private static final long serialVersionUID;

  private static final java.lang.String ACCEPT;

  private static final java.lang.String ACCEPT_CHARSET;

  private static final java.lang.String ALLOW;

  private static final java.lang.String CACHE_CONTROL;

  private static final java.lang.String CONNECTION;

  private static final java.lang.String CONTENT_DISPOSITION;

  private static final java.lang.String CONTENT_LENGTH;

  private static final java.lang.String CONTENT_TYPE;

  private static final java.lang.String DATE;

  private static final java.lang.String ETAG;

  private static final java.lang.String EXPIRES;

  private static final java.lang.String IF_MODIFIED_SINCE;

  private static final java.lang.String IF_NONE_MATCH;

  private static final java.lang.String LAST_MODIFIED;

  private static final java.lang.String LOCATION;

  private static final java.lang.String ORIGIN;

  private static final java.lang.String PRAGMA;

  private static final java.lang.String UPGRADE;

  private static final java.lang.String[] DATE_FORMATS;

  private static java.util.TimeZone GMT;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  private org.springframework.http.HttpHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String \'headers\' must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: iload_2
      11: ifeq          111
      14: new           #4                  // class org/springframework/util/LinkedCaseInsensitiveMap
      17: dup
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
      24: getstatic     #6                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      27: invokespecial #7                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      30: astore_3
      31: aload_1
      32: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          100
      54: aload         4
      56: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #12                 // class java/util/Map$Entry
      64: astore        5
      66: aload         5
      68: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: checkcast     #14                 // class java/util/List
      76: invokestatic  #15                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      79: astore        6
      81: aload_3
      82: aload         5
      84: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      89: aload         6
      91: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: goto          44
     100: aload_0
     101: aload_3
     102: invokestatic  #18                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     105: putfield      #19                 // Field headers:Ljava/util/Map;
     108: goto          116
     111: aload_0
     112: aload_1
     113: putfield      #19                 // Field headers:Ljava/util/Map;
     116: return

  public org.springframework.http.HttpHeaders();
    Code:
       0: aload_0
       1: new           #4                  // class org/springframework/util/LinkedCaseInsensitiveMap
       4: dup
       5: bipush        8
       7: getstatic     #6                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      10: invokespecial #7                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      13: iconst_0
      14: invokespecial #20                 // Method "<init>":(Ljava/util/Map;Z)V
      17: return

  public static org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: new           #21                 // class org/springframework/http/HttpHeaders
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #20                 // Method "<init>":(Ljava/util/Map;Z)V
       9: areturn

  public void setAccept(java.util.List<org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: ldc           #22                 // String Accept
       3: aload_1
       4: invokestatic  #23                 // Method org/springframework/http/MediaType.toString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.List<org.springframework.http.MediaType> getAccept();
    Code:
       0: aload_0
       1: ldc           #22                 // String Accept
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #26                 // Method org/springframework/http/MediaType.parseMediaTypes:(Ljava/lang/String;)Ljava/util/List;
      15: goto          21
      18: invokestatic  #27                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      21: astore_2
      22: aload_2
      23: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      28: iconst_1
      29: if_icmpne     59
      32: aload_0
      33: ldc           #22                 // String Accept
      35: invokevirtual #29                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
      38: astore_3
      39: aload_3
      40: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      45: iconst_1
      46: if_icmple     59
      49: aload_3
      50: invokestatic  #30                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
      53: astore_1
      54: aload_1
      55: invokestatic  #26                 // Method org/springframework/http/MediaType.parseMediaTypes:(Ljava/lang/String;)Ljava/util/List;
      58: astore_2
      59: aload_2
      60: areturn

  public void setAcceptCharset(java.util.List<java.nio.charset.Charset>);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          70
      24: aload_3
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #34                 // class java/nio/charset/Charset
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #35                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      41: getstatic     #6                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      44: invokevirtual #36                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_3
      52: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          67
      60: aload_2
      61: ldc           #38                 // String ,
      63: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: goto          15
      70: aload_0
      71: ldc           #39                 // String Accept-Charset
      73: aload_2
      74: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      80: return

  public java.util.List<java.nio.charset.Charset> getAcceptCharset();
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: ldc           #39                 // String Accept-Charset
      11: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        111
      19: aload_2
      20: ldc           #43                 // String ,\\s*
      22: invokevirtual #44                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload         5
      41: if_icmpge     111
      44: aload         4
      46: iload         6
      48: aaload
      49: astore        7
      51: aload         7
      53: bipush        59
      55: invokevirtual #45                 // Method java/lang/String.indexOf:(I)I
      58: istore        8
      60: iload         8
      62: iconst_m1
      63: if_icmpne     73
      66: aload         7
      68: astore        9
      70: goto          83
      73: aload         7
      75: iconst_0
      76: iload         8
      78: invokevirtual #46                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      81: astore        9
      83: aload         9
      85: ldc           #47                 // String *
      87: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      90: ifne          105
      93: aload_1
      94: aload         9
      96: invokestatic  #49                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      99: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     104: pop
     105: iinc          6, 1
     108: goto          37
     111: aload_1
     112: areturn

  public void setAllow(java.util.Set<org.springframework.http.HttpMethod>);
    Code:
       0: aload_0
       1: ldc           #51                 // String Allow
       3: aload_1
       4: invokestatic  #30                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.util.Set<org.springframework.http.HttpMethod> getAllow();
    Code:
       0: aload_0
       1: ldc           #51                 // String Allow
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #52                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      11: ifne          78
      14: new           #41                 // class java/util/ArrayList
      17: dup
      18: iconst_5
      19: invokespecial #53                 // Method java/util/ArrayList."<init>":(I)V
      22: astore_2
      23: aload_1
      24: ldc           #43                 // String ,\\s*
      26: invokevirtual #44                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      29: astore_3
      30: aload_3
      31: astore        4
      33: aload         4
      35: arraylength
      36: istore        5
      38: iconst_0
      39: istore        6
      41: iload         6
      43: iload         5
      45: if_icmpge     73
      48: aload         4
      50: iload         6
      52: aaload
      53: astore        7
      55: aload_2
      56: aload         7
      58: invokestatic  #54                 // Method org/springframework/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      61: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          6, 1
      70: goto          41
      73: aload_2
      74: invokestatic  #55                 // Method java/util/EnumSet.copyOf:(Ljava/util/Collection;)Ljava/util/EnumSet;
      77: areturn
      78: ldc           #56                 // class org/springframework/http/HttpMethod
      80: invokestatic  #57                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      83: areturn

  public void setCacheControl(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #58                 // String Cache-Control
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getCacheControl();
    Code:
       0: aload_0
       1: ldc           #58                 // String Cache-Control
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setConnection(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #59                 // String Connection
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setConnection(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #59                 // String Connection
       3: aload_0
       4: aload_1
       5: invokevirtual #60                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public java.util.List<java.lang.String> getConnection();
    Code:
       0: aload_0
       1: ldc           #59                 // String Connection
       3: invokevirtual #61                 // Method getFirstValueAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  public void setContentDispositionFormData(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #62                 // String \'name\' must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #31                 // class java/lang/StringBuilder
       9: dup
      10: ldc           #63                 // String form-data; name=\"
      12: invokespecial #64                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      15: astore_3
      16: aload_3
      17: aload_1
      18: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: bipush        34
      23: invokevirtual #65                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      26: pop
      27: aload_2
      28: ifnull        49
      31: aload_3
      32: ldc           #66                 // String ; filename=\"
      34: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_3
      39: aload_2
      40: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        34
      45: invokevirtual #65                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: pop
      49: aload_0
      50: ldc           #67                 // String Content-Disposition
      52: aload_3
      53: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      59: return

  public void setContentLength(long);
    Code:
       0: aload_0
       1: ldc           #68                 // String Content-Length
       3: lload_1
       4: invokestatic  #69                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public long getContentLength();
    Code:
       0: aload_0
       1: ldc           #68                 // String Content-Length
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #70                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      15: goto          21
      18: ldc2_w        #71                 // long -1l
      21: lreturn

  public void setContentType(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method org/springframework/http/MediaType.isWildcardType:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #74                 // String \'Content-Type\' cannot contain wildcard type \'*\'
      14: invokestatic  #75                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      17: aload_1
      18: invokevirtual #76                 // Method org/springframework/http/MediaType.isWildcardSubtype:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #77                 // String \'Content-Type\' cannot contain wildcard subtype \'*\'
      31: invokestatic  #75                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: aload_0
      35: ldc           #78                 // String Content-Type
      37: aload_1
      38: invokevirtual #79                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      41: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      44: return

  public org.springframework.http.MediaType getContentType();
    Code:
       0: aload_0
       1: ldc           #78                 // String Content-Type
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #80                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      15: goto          19
      18: aconst_null
      19: areturn

  public void setDate(long);
    Code:
       0: aload_0
       1: ldc           #81                 // String Date
       3: lload_1
       4: invokevirtual #82                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getDate();
    Code:
       0: aload_0
       1: ldc           #81                 // String Date
       3: invokevirtual #83                 // Method getFirstDate:(Ljava/lang/String;)J
       6: lreturn

  public void setETag(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_1
       5: ldc           #84                 // String \"
       7: invokevirtual #85                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      10: ifne          22
      13: aload_1
      14: ldc           #86                 // String W/
      16: invokevirtual #85                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #87                 // String Invalid eTag, does not start with W/ or \"
      29: invokestatic  #75                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      32: aload_1
      33: ldc           #84                 // String \"
      35: invokevirtual #88                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      38: ldc           #89                 // String Invalid eTag, does not end with \"
      40: invokestatic  #75                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      43: aload_0
      44: ldc           #90                 // String ETag
      46: aload_1
      47: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      50: return

  public java.lang.String getETag();
    Code:
       0: aload_0
       1: ldc           #90                 // String ETag
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setExpires(long);
    Code:
       0: aload_0
       1: ldc           #91                 // String Expires
       3: lload_1
       4: invokevirtual #82                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getExpires();
    Code:
       0: aload_0
       1: ldc           #91                 // String Expires
       3: invokevirtual #83                 // Method getFirstDate:(Ljava/lang/String;)J
       6: lreturn
       7: astore_1
       8: ldc2_w        #71                 // long -1l
      11: lreturn
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/IllegalArgumentException

  public void setIfModifiedSince(long);
    Code:
       0: aload_0
       1: ldc           #93                 // String If-Modified-Since
       3: lload_1
       4: invokevirtual #82                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getIfNotModifiedSince();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method getIfModifiedSince:()J
       4: lreturn

  public long getIfModifiedSince();
    Code:
       0: aload_0
       1: ldc           #93                 // String If-Modified-Since
       3: invokevirtual #83                 // Method getFirstDate:(Ljava/lang/String;)J
       6: lreturn

  public void setIfNoneMatch(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #95                 // String If-None-Match
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void setIfNoneMatch(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #95                 // String If-None-Match
       3: aload_0
       4: aload_1
       5: invokevirtual #60                 // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
       8: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  protected java.lang.String toCommaDelimitedString(java.util.List<java.lang.String>);
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          61
      24: aload_3
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #96                 // class java/lang/String
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          58
      51: aload_2
      52: ldc           #38                 // String ,
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: goto          15
      61: aload_2
      62: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn

  public java.util.List<java.lang.String> getIfNoneMatch();
    Code:
       0: aload_0
       1: ldc           #95                 // String If-None-Match
       3: invokevirtual #61                 // Method getFirstValueAsList:(Ljava/lang/String;)Ljava/util/List;
       6: areturn

  protected java.util.List<java.lang.String> getFirstValueAsList(java.lang.String);
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_3
      14: aload_3
      15: ifnull        67
      18: aload_3
      19: ldc           #43                 // String ,\\s*
      21: invokevirtual #44                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      24: astore        4
      26: aload         4
      28: astore        5
      30: aload         5
      32: arraylength
      33: istore        6
      35: iconst_0
      36: istore        7
      38: iload         7
      40: iload         6
      42: if_icmpge     67
      45: aload         5
      47: iload         7
      49: aaload
      50: astore        8
      52: aload_2
      53: aload         8
      55: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: iinc          7, 1
      64: goto          38
      67: aload_2
      68: areturn

  public void setLastModified(long);
    Code:
       0: aload_0
       1: ldc           #97                 // String Last-Modified
       3: lload_1
       4: invokevirtual #82                 // Method setDate:(Ljava/lang/String;J)V
       7: return

  public long getLastModified();
    Code:
       0: aload_0
       1: ldc           #97                 // String Last-Modified
       3: invokevirtual #83                 // Method getFirstDate:(Ljava/lang/String;)J
       6: lreturn

  public void setLocation(java.net.URI);
    Code:
       0: aload_0
       1: ldc           #98                 // String Location
       3: aload_1
       4: invokevirtual #99                 // Method java/net/URI.toASCIIString:()Ljava/lang/String;
       7: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public java.net.URI getLocation();
    Code:
       0: aload_0
       1: ldc           #98                 // String Location
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #100                // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      15: goto          19
      18: aconst_null
      19: areturn

  public void setOrigin(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #101                // String Origin
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getOrigin();
    Code:
       0: aload_0
       1: ldc           #101                // String Origin
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setPragma(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #102                // String Pragma
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getPragma();
    Code:
       0: aload_0
       1: ldc           #102                // String Pragma
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setUpgrade(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #103                // String Upgrade
       3: aload_1
       4: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getUpgrade();
    Code:
       0: aload_0
       1: ldc           #103                // String Upgrade
       3: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public long getFirstDate(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: ldc2_w        #71                 // long -1l
      13: lreturn
      14: getstatic     #104                // Field DATE_FORMATS:[Ljava/lang/String;
      17: astore_3
      18: aload_3
      19: arraylength
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload         4
      29: if_icmpge     78
      32: aload_3
      33: iload         5
      35: aaload
      36: astore        6
      38: new           #105                // class java/text/SimpleDateFormat
      41: dup
      42: aload         6
      44: getstatic     #106                // Field java/util/Locale.US:Ljava/util/Locale;
      47: invokespecial #107                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      50: astore        7
      52: aload         7
      54: getstatic     #108                // Field GMT:Ljava/util/TimeZone;
      57: invokevirtual #109                // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      60: aload         7
      62: aload_2
      63: invokevirtual #110                // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      66: invokevirtual #111                // Method java/util/Date.getTime:()J
      69: lreturn
      70: astore        8
      72: iinc          5, 1
      75: goto          25
      78: new           #92                 // class java/lang/IllegalArgumentException
      81: dup
      82: new           #31                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #113                // String Cannot parse date value \"
      91: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_2
      95: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #114                // String \" for \"
     100: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_1
     104: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #115                // String \" header
     109: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokespecial #116                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     118: athrow
    Exception table:
       from    to  target type
          60    69    70   Class java/text/ParseException

  public void setDate(java.lang.String, long);
    Code:
       0: new           #105                // class java/text/SimpleDateFormat
       3: dup
       4: getstatic     #104                // Field DATE_FORMATS:[Ljava/lang/String;
       7: iconst_0
       8: aaload
       9: getstatic     #106                // Field java/util/Locale.US:Ljava/util/Locale;
      12: invokespecial #107                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      15: astore        4
      17: aload         4
      19: getstatic     #108                // Field GMT:Ljava/util/TimeZone;
      22: invokevirtual #109                // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      25: aload_0
      26: aload_1
      27: aload         4
      29: new           #117                // class java/util/Date
      32: dup
      33: lload_2
      34: invokespecial #118                // Method java/util/Date."<init>":(J)V
      37: invokevirtual #119                // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      40: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      43: return

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        31
      18: aload_2
      19: iconst_0
      20: invokeinterface #121,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #96                 // class java/lang/String
      28: goto          32
      31: aconst_null
      32: areturn

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class java/util/List
      13: astore_3
      14: aload_3
      15: ifnonnull     38
      18: new           #122                // class java/util/LinkedList
      21: dup
      22: invokespecial #123                // Method java/util/LinkedList."<init>":()V
      25: astore_3
      26: aload_0
      27: getfield      #19                 // Field headers:Ljava/util/Map;
      30: aload_1
      31: aload_3
      32: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_3
      39: aload_2
      40: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  public void set(java.lang.String, java.lang.String);
    Code:
       0: new           #122                // class java/util/LinkedList
       3: dup
       4: invokespecial #123                // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #19                 // Field headers:Ljava/util/Map;
      20: aload_1
      21: aload_3
      22: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void setAll(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          56
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #12                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #96                 // class java/lang/String
      41: aload_3
      42: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #96                 // class java/lang/String
      50: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      53: goto          12
      56: return

  public java.util.Map<java.lang.String, java.lang.String> toSingleValueMap();
    Code:
       0: new           #124                // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #19                 // Field headers:Ljava/util/Map;
       8: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
      13: invokespecial #125                // Method java/util/LinkedHashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #19                 // Field headers:Ljava/util/Map;
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          80
      41: aload_2
      42: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #12                 // class java/util/Map$Entry
      50: astore_3
      51: aload_1
      52: aload_3
      53: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: aload_3
      59: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #14                 // class java/util/List
      67: iconst_0
      68: invokeinterface #121,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      73: invokevirtual #126                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: goto          32
      80: aload_1
      81: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #127,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #128,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #129,  2          // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.List<java.lang.String> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class java/util/List
      13: areturn

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #14                 // class java/util/List
      14: areturn

  public java.util.List<java.lang.String> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #130,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class java/util/List
      13: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #131,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #132,  1          // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #133,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<java.util.List<java.lang.String>> values();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #134,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #21                 // class org/springframework/http/HttpHeaders
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #21                 // class org/springframework/http/HttpHeaders
      20: astore_2
      21: aload_0
      22: getfield      #19                 // Field headers:Ljava/util/Map;
      25: aload_2
      26: getfield      #19                 // Field headers:Ljava/util/Map;
      29: invokeinterface #135,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokeinterface #136,  1          // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #19                 // Field headers:Ljava/util/Map;
       4: invokevirtual #137                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public void set(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #96                 // class java/lang/String
       5: aload_2
       6: checkcast     #96                 // class java/lang/String
       9: invokevirtual #24                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void add(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #96                 // class java/lang/String
       5: aload_2
       6: checkcast     #96                 // class java/lang/String
       9: invokevirtual #138                // Method add:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.lang.Object getFirst(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #96                 // class java/lang/String
       5: invokevirtual #25                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #139                // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #96                 // class java/lang/String
       5: aload_2
       6: checkcast     #14                 // class java/util/List
       9: invokevirtual #140                // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  static {};
    Code:
       0: iconst_3
       1: anewarray     #96                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #141                // String EEE, dd MMM yyyy HH:mm:ss zzz
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #142                // String EEE, dd-MMM-yy HH:mm:ss zzz
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #143                // String EEE MMM dd HH:mm:ss yyyy
      18: aastore
      19: putstatic     #104                // Field DATE_FORMATS:[Ljava/lang/String;
      22: ldc           #144                // String GMT
      24: invokestatic  #145                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      27: putstatic     #108                // Field GMT:Ljava/util/TimeZone;
      30: return
}
