Compiled from "AbstractWebArgumentResolverAdapter.java"
public abstract class org.springframework.web.method.annotation.AbstractWebArgumentResolverAdapter implements org.springframework.web.method.support.HandlerMethodArgumentResolver {
  private final org.apache.commons.logging.Log logger;

  private final org.springframework.web.bind.support.WebArgumentResolver adaptee;

  public org.springframework.web.method.annotation.AbstractWebArgumentResolverAdapter(org.springframework.web.bind.support.WebArgumentResolver);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ldc           #5                  // String \'adaptee\' must not be null
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field adaptee:Lorg/springframework/web/bind/support/WebArgumentResolver;
      26: return

  public boolean supportsParameter(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getWebRequest:()Lorg/springframework/web/context/request/NativeWebRequest;
       4: astore_2
       5: aload_0
       6: getfield      #7                  // Field adaptee:Lorg/springframework/web/bind/support/WebArgumentResolver;
       9: aload_1
      10: aload_2
      11: invokeinterface #9,  3            // InterfaceMethod org/springframework/web/bind/support/WebArgumentResolver.resolveArgument:(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/lang/Object;
      16: astore_3
      17: aload_3
      18: getstatic     #10                 // Field org/springframework/web/bind/support/WebArgumentResolver.UNRESOLVED:Ljava/lang/Object;
      21: if_acmpne     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: invokevirtual #11                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      30: aload_3
      31: invokestatic  #12                 // Method org/springframework/util/ClassUtils.isAssignableValue:(Ljava/lang/Class;Ljava/lang/Object;)Z
      34: ireturn
      35: astore_2
      36: aload_0
      37: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      40: new           #14                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #16                 // String Error in checking support for parameter [
      49: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: ldc           #19                 // String ], message:
      58: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #20                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokeinterface #22,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      76: iconst_0
      77: ireturn
    Exception table:
       from    to  target type
           0    25    35   Class java/lang/Exception
          26    34    35   Class java/lang/Exception

  protected abstract org.springframework.web.context.request.NativeWebRequest getWebRequest();

  public java.lang.Object resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
       4: astore        5
       6: aload_0
       7: getfield      #7                  // Field adaptee:Lorg/springframework/web/bind/support/WebArgumentResolver;
      10: aload_1
      11: aload_3
      12: invokeinterface #9,  3            // InterfaceMethod org/springframework/web/bind/support/WebArgumentResolver.resolveArgument:(Lorg/springframework/core/MethodParameter;Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/lang/Object;
      17: astore        6
      19: aload         6
      21: getstatic     #10                 // Field org/springframework/web/bind/support/WebArgumentResolver.UNRESOLVED:Ljava/lang/Object;
      24: if_acmpeq     37
      27: aload         5
      29: aload         6
      31: invokestatic  #12                 // Method org/springframework/util/ClassUtils.isAssignableValue:(Ljava/lang/Class;Ljava/lang/Object;)Z
      34: ifne          107
      37: new           #23                 // class java/lang/IllegalStateException
      40: dup
      41: new           #14                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #24                 // String Standard argument type [
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload         5
      55: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #26                 // String ] in method
      63: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_1
      67: invokevirtual #27                 // Method org/springframework/core/MethodParameter.getMethod:()Ljava/lang/reflect/Method;
      70: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: ldc           #28                 // String resolved to incompatible value of type [
      75: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload         6
      80: ifnull        91
      83: aload         6
      85: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      88: goto          92
      91: aconst_null
      92: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: ldc           #29                 // String ]. Consider declaring the argument type in a less specific fashion.
      97: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload         6
     109: areturn
}
