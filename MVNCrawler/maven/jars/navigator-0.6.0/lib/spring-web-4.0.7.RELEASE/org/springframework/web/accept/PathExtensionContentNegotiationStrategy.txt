Compiled from "PathExtensionContentNegotiationStrategy.java"
public class org.springframework.web.accept.PathExtensionContentNegotiationStrategy extends org.springframework.web.accept.AbstractMappingContentNegotiationStrategy {
  private static final boolean JAF_PRESENT;

  private static final org.apache.commons.logging.Log logger;

  private static final org.springframework.web.util.UrlPathHelper urlPathHelper;

  private boolean useJaf;

  public org.springframework.web.accept.PathExtensionContentNegotiationStrategy(java.util.Map<java.lang.String, org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/web/accept/AbstractMappingContentNegotiationStrategy."<init>":(Ljava/util/Map;)V
       5: aload_0
       6: getstatic     #3                  // Field JAF_PRESENT:Z
       9: putfield      #4                  // Field useJaf:Z
      12: return

  public org.springframework.web.accept.PathExtensionContentNegotiationStrategy();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method org/springframework/web/accept/AbstractMappingContentNegotiationStrategy."<init>":(Ljava/util/Map;)V
       5: aload_0
       6: getstatic     #3                  // Field JAF_PRESENT:Z
       9: putfield      #4                  // Field useJaf:Z
      12: return

  public void setUseJaf(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useJaf:Z
       5: return

  protected java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest);
    Code:
       0: aload_1
       1: ldc           #5                  // class javax/servlet/http/HttpServletRequest
       3: invokeinterface #6,  2            // InterfaceMethod org/springframework/web/context/request/NativeWebRequest.getNativeRequest:(Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #5                  // class javax/servlet/http/HttpServletRequest
      11: astore_2
      12: aload_2
      13: ifnonnull     28
      16: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      19: ldc           #7                  // String An HttpServletRequest is required to determine the media type key
      21: invokeinterface #8,  2            // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      26: aconst_null
      27: areturn
      28: getstatic     #9                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
      31: aload_2
      32: invokevirtual #10                 // Method org/springframework/web/util/UrlPathHelper.getLookupPathForRequest:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
      35: astore_3
      36: aload_3
      37: invokestatic  #11                 // Method org/springframework/web/util/WebUtils.extractFullFilenameFromUrlPath:(Ljava/lang/String;)Ljava/lang/String;
      40: astore        4
      42: aload         4
      44: invokestatic  #12                 // Method org/springframework/util/StringUtils.getFilenameExtension:(Ljava/lang/String;)Ljava/lang/String;
      47: astore        5
      49: aload         5
      51: invokestatic  #13                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      54: ifeq          68
      57: aload         5
      59: getstatic     #14                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      62: invokevirtual #15                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      65: goto          69
      68: aconst_null
      69: areturn

  protected void handleMatch(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: return

  protected org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field useJaf:Z
       4: ifeq          46
       7: new           #16                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #18                 // String file.
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_2
      20: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokestatic  #21                 // Method org/springframework/web/accept/PathExtensionContentNegotiationStrategy$JafMediaTypeFactory.getMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      29: astore_3
      30: aload_3
      31: ifnull        46
      34: getstatic     #22                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      37: aload_3
      38: invokevirtual #23                 // Method org/springframework/http/MediaType.equals:(Ljava/lang/Object;)Z
      41: ifne          46
      44: aload_3
      45: areturn
      46: aconst_null
      47: areturn

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #24                 // String javax.activation.FileTypeMap
       2: ldc           #25                 // class org/springframework/web/accept/PathExtensionContentNegotiationStrategy
       4: invokevirtual #26                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #27                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #3                  // Field JAF_PRESENT:Z
      13: ldc           #25                 // class org/springframework/web/accept/PathExtensionContentNegotiationStrategy
      15: invokestatic  #28                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      18: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      21: new           #29                 // class org/springframework/web/util/UrlPathHelper
      24: dup
      25: invokespecial #30                 // Method org/springframework/web/util/UrlPathHelper."<init>":()V
      28: putstatic     #9                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
      31: getstatic     #9                  // Field urlPathHelper:Lorg/springframework/web/util/UrlPathHelper;
      34: iconst_0
      35: invokevirtual #31                 // Method org/springframework/web/util/UrlPathHelper.setUrlDecode:(Z)V
      38: return
}
