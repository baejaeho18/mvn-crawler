Compiled from "SimpleStreamingClientHttpRequest.java"
final class org.springframework.http.client.SimpleStreamingClientHttpRequest extends org.springframework.http.client.AbstractClientHttpRequest {
  private final java.net.HttpURLConnection connection;

  private final int chunkSize;

  private java.io.OutputStream body;

  private final boolean outputStreaming;

  org.springframework.http.client.SimpleStreamingClientHttpRequest(java.net.HttpURLConnection, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/http/client/AbstractClientHttpRequest."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field chunkSize:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field outputStreaming:Z
      19: return

  public org.springframework.http.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
       4: invokevirtual #5                  // Method java/net/HttpURLConnection.getRequestMethod:()Ljava/lang/String;
       7: invokestatic  #6                  // Method org/springframework/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
      10: areturn

  public java.net.URI getURI();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
       4: invokevirtual #7                  // Method java/net/HttpURLConnection.getURL:()Ljava/net/URL;
       7: invokevirtual #8                  // Method java/net/URL.toURI:()Ljava/net/URI;
      10: areturn
      11: astore_1
      12: new           #10                 // class java/lang/IllegalStateException
      15: dup
      16: new           #11                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #13                 // String Could not get HttpURLConnection URI:
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #15                 // Method java/net/URISyntaxException.getMessage:()Ljava/lang/String;
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: aload_1
      39: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      42: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/net/URISyntaxException

  protected java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field body:Ljava/io/OutputStream;
       4: ifnonnull     69
       7: aload_0
       8: getfield      #4                  // Field outputStreaming:Z
      11: ifeq          46
      14: aload_1
      15: invokevirtual #19                 // Method org/springframework/http/HttpHeaders.getContentLength:()J
      18: l2i
      19: istore_2
      20: iload_2
      21: iflt          35
      24: aload_0
      25: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      28: iload_2
      29: invokevirtual #20                 // Method java/net/HttpURLConnection.setFixedLengthStreamingMode:(I)V
      32: goto          46
      35: aload_0
      36: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      39: aload_0
      40: getfield      #3                  // Field chunkSize:I
      43: invokevirtual #21                 // Method java/net/HttpURLConnection.setChunkedStreamingMode:(I)V
      46: aload_0
      47: aload_1
      48: invokespecial #22                 // Method writeHeaders:(Lorg/springframework/http/HttpHeaders;)V
      51: aload_0
      52: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      55: invokevirtual #23                 // Method java/net/HttpURLConnection.connect:()V
      58: aload_0
      59: aload_0
      60: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      63: invokevirtual #24                 // Method java/net/HttpURLConnection.getOutputStream:()Ljava/io/OutputStream;
      66: putfield      #18                 // Field body:Ljava/io/OutputStream;
      69: aload_0
      70: getfield      #18                 // Field body:Ljava/io/OutputStream;
      73: invokestatic  #25                 // Method org/springframework/util/StreamUtils.nonClosing:(Ljava/io/OutputStream;)Ljava/io/OutputStream;
      76: areturn

  private void writeHeaders(org.springframework.http.HttpHeaders);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method org/springframework/http/HttpHeaders.entrySet:()Ljava/util/Set;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          95
      19: aload_2
      20: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #30                 // class java/util/Map$Entry
      28: astore_3
      29: aload_3
      30: invokeinterface #31,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      35: checkcast     #32                 // class java/lang/String
      38: astore        4
      40: aload_3
      41: invokeinterface #33,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #34                 // class java/util/List
      49: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      54: astore        5
      56: aload         5
      58: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          92
      66: aload         5
      68: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #32                 // class java/lang/String
      76: astore        6
      78: aload_0
      79: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      82: aload         4
      84: aload         6
      86: invokevirtual #36                 // Method java/net/HttpURLConnection.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
      89: goto          56
      92: goto          10
      95: return

  protected org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field body:Ljava/io/OutputStream;
       4: ifnull        17
       7: aload_0
       8: getfield      #18                 // Field body:Ljava/io/OutputStream;
      11: invokevirtual #37                 // Method java/io/OutputStream.close:()V
      14: goto          29
      17: aload_0
      18: aload_1
      19: invokespecial #22                 // Method writeHeaders:(Lorg/springframework/http/HttpHeaders;)V
      22: aload_0
      23: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      26: invokevirtual #23                 // Method java/net/HttpURLConnection.connect:()V
      29: goto          33
      32: astore_2
      33: new           #39                 // class org/springframework/http/client/SimpleClientHttpResponse
      36: dup
      37: aload_0
      38: getfield      #2                  // Field connection:Ljava/net/HttpURLConnection;
      41: invokespecial #40                 // Method org/springframework/http/client/SimpleClientHttpResponse."<init>":(Ljava/net/HttpURLConnection;)V
      44: areturn
    Exception table:
       from    to  target type
           0    29    32   Class java/io/IOException
}
