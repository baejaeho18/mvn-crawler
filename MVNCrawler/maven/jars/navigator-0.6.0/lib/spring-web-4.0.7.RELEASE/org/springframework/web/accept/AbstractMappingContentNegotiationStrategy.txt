Compiled from "AbstractMappingContentNegotiationStrategy.java"
public abstract class org.springframework.web.accept.AbstractMappingContentNegotiationStrategy extends org.springframework.web.accept.MappingMediaTypeFileExtensionResolver implements org.springframework.web.accept.ContentNegotiationStrategy,org.springframework.web.accept.MediaTypeFileExtensionResolver {
  public org.springframework.web.accept.AbstractMappingContentNegotiationStrategy(java.util.Map<java.lang.String, org.springframework.http.MediaType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/web/accept/MappingMediaTypeFileExtensionResolver."<init>":(Ljava/util/Map;)V
       5: return

  public java.util.List<org.springframework.http.MediaType> resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method getMediaTypeKey:(Lorg/springframework/web/context/request/NativeWebRequest;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: invokestatic  #3                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      10: ifeq          56
      13: aload_0
      14: aload_2
      15: invokevirtual #4                  // Method lookupMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      18: astore_3
      19: aload_3
      20: ifnull        34
      23: aload_0
      24: aload_2
      25: aload_3
      26: invokevirtual #5                  // Method handleMatch:(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
      29: aload_3
      30: invokestatic  #6                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      33: areturn
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokevirtual #7                  // Method handleNoMatch:(Lorg/springframework/web/context/request/NativeWebRequest;Ljava/lang/String;)Lorg/springframework/http/MediaType;
      40: astore_3
      41: aload_3
      42: ifnull        56
      45: aload_0
      46: aload_2
      47: aload_3
      48: invokevirtual #8                  // Method addMapping:(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
      51: aload_3
      52: invokestatic  #6                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      55: areturn
      56: invokestatic  #9                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      59: areturn

  protected abstract java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest);

  protected void handleMatch(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: return

  protected org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest, java.lang.String);
    Code:
       0: aconst_null
       1: areturn
}
