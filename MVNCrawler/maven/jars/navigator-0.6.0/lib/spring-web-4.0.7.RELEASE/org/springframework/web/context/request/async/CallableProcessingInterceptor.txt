Compiled from "CallableProcessingInterceptor.java"
public interface org.springframework.web.context.request.async.CallableProcessingInterceptor {
  public static final java.lang.Object RESULT_NONE;

  public static final java.lang.Object RESPONSE_HANDLED;

  public abstract <T> void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;

  public abstract <T> void preProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;

  public abstract <T> void postProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>, java.lang.Object) throws java.lang.Exception;

  public abstract <T> java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;

  public abstract <T> void afterCompletion(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;

  static {};
    Code:
       0: new           #1                  // class java/lang/Object
       3: dup
       4: invokespecial #2                  // Method java/lang/Object."<init>":()V
       7: putstatic     #3                  // Field RESULT_NONE:Ljava/lang/Object;
      10: new           #1                  // class java/lang/Object
      13: dup
      14: invokespecial #2                  // Method java/lang/Object."<init>":()V
      17: putstatic     #4                  // Field RESPONSE_HANDLED:Ljava/lang/Object;
      20: return
}
