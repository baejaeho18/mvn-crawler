Compiled from "CommonsMultipartResolver.java"
public class org.springframework.web.multipart.commons.CommonsMultipartResolver extends org.springframework.web.multipart.commons.CommonsFileUploadSupport implements org.springframework.web.multipart.MultipartResolver,org.springframework.web.context.ServletContextAware {
  private boolean resolveLazily;

  public org.springframework.web.multipart.commons.CommonsMultipartResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/multipart/commons/CommonsFileUploadSupport."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field resolveLazily:Z
       9: return

  public org.springframework.web.multipart.commons.CommonsMultipartResolver(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method setServletContext:(Ljavax/servlet/ServletContext;)V
       9: return

  public void setResolveLazily(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field resolveLazily:Z
       5: return

  protected org.apache.commons.fileupload.FileUpload newFileUpload(org.apache.commons.fileupload.FileItemFactory);
    Code:
       0: new           #5                  // class org/apache/commons/fileupload/servlet/ServletFileUpload
       3: dup
       4: aload_1
       5: invokespecial #6                  // Method org/apache/commons/fileupload/servlet/ServletFileUpload."<init>":(Lorg/apache/commons/fileupload/FileItemFactory;)V
       8: areturn

  public void setServletContext(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isUploadTempDirSpecified:()Z
       4: ifne          18
       7: aload_0
       8: invokevirtual #8                  // Method getFileItemFactory:()Lorg/apache/commons/fileupload/disk/DiskFileItemFactory;
      11: aload_1
      12: invokestatic  #9                  // Method org/springframework/web/util/WebUtils.getTempDir:(Ljavax/servlet/ServletContext;)Ljava/io/File;
      15: invokevirtual #10                 // Method org/apache/commons/fileupload/disk/DiskFileItemFactory.setRepository:(Ljava/io/File;)V
      18: return

  public boolean isMultipart(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: invokestatic  #11                 // Method org/apache/commons/fileupload/servlet/ServletFileUpload.isMultipartContent:(Ljavax/servlet/http/HttpServletRequest;)Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.springframework.web.multipart.MultipartHttpServletRequest resolveMultipart(javax.servlet.http.HttpServletRequest) throws org.springframework.web.multipart.MultipartException;
    Code:
       0: aload_1
       1: ldc           #12                 // String Request must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field resolveLazily:Z
      10: ifeq          24
      13: new           #14                 // class org/springframework/web/multipart/commons/CommonsMultipartResolver$1
      16: dup
      17: aload_0
      18: aload_1
      19: aload_1
      20: invokespecial #15                 // Method org/springframework/web/multipart/commons/CommonsMultipartResolver$1."<init>":(Lorg/springframework/web/multipart/commons/CommonsMultipartResolver;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletRequest;)V
      23: areturn
      24: aload_0
      25: aload_1
      26: invokevirtual #16                 // Method parseRequest:(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult;
      29: astore_2
      30: new           #17                 // class org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest
      33: dup
      34: aload_1
      35: aload_2
      36: invokevirtual #18                 // Method org/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult.getMultipartFiles:()Lorg/springframework/util/MultiValueMap;
      39: aload_2
      40: invokevirtual #19                 // Method org/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult.getMultipartParameters:()Ljava/util/Map;
      43: aload_2
      44: invokevirtual #20                 // Method org/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult.getMultipartParameterContentTypes:()Ljava/util/Map;
      47: invokespecial #21                 // Method org/springframework/web/multipart/support/DefaultMultipartHttpServletRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/util/MultiValueMap;Ljava/util/Map;Ljava/util/Map;)V
      50: areturn

  protected org.springframework.web.multipart.commons.CommonsFileUploadSupport$MultipartParsingResult parseRequest(javax.servlet.http.HttpServletRequest) throws org.springframework.web.multipart.MultipartException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method determineEncoding:(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #23                 // Method prepareFileUpload:(Ljava/lang/String;)Lorg/apache/commons/fileupload/FileUpload;
      11: astore_3
      12: aload_3
      13: checkcast     #5                  // class org/apache/commons/fileupload/servlet/ServletFileUpload
      16: aload_1
      17: invokevirtual #24                 // Method org/apache/commons/fileupload/servlet/ServletFileUpload.parseRequest:(Ljavax/servlet/http/HttpServletRequest;)Ljava/util/List;
      20: astore        4
      22: aload_0
      23: aload         4
      25: aload_2
      26: invokevirtual #25                 // Method parseFileItems:(Ljava/util/List;Ljava/lang/String;)Lorg/springframework/web/multipart/commons/CommonsFileUploadSupport$MultipartParsingResult;
      29: areturn
      30: astore        4
      32: new           #27                 // class org/springframework/web/multipart/MaxUploadSizeExceededException
      35: dup
      36: aload_3
      37: invokevirtual #28                 // Method org/apache/commons/fileupload/FileUpload.getSizeMax:()J
      40: aload         4
      42: invokespecial #29                 // Method org/springframework/web/multipart/MaxUploadSizeExceededException."<init>":(JLjava/lang/Throwable;)V
      45: athrow
      46: astore        4
      48: new           #31                 // class org/springframework/web/multipart/MultipartException
      51: dup
      52: ldc           #32                 // String Could not parse multipart servlet request
      54: aload         4
      56: invokespecial #33                 // Method org/springframework/web/multipart/MultipartException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: athrow
    Exception table:
       from    to  target type
          12    29    30   Class org/apache/commons/fileupload/FileUploadBase$SizeLimitExceededException
          12    29    46   Class org/apache/commons/fileupload/FileUploadException

  protected java.lang.String determineEncoding(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCharacterEncoding:()Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ifnonnull     16
      11: aload_0
      12: invokevirtual #35                 // Method getDefaultEncoding:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: areturn

  public void cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_0
       5: aload_1
       6: invokeinterface #36,  1           // InterfaceMethod org/springframework/web/multipart/MultipartHttpServletRequest.getMultiFileMap:()Lorg/springframework/util/MultiValueMap;
      11: invokevirtual #37                 // Method cleanupFileItems:(Lorg/springframework/util/MultiValueMap;)V
      14: goto          30
      17: astore_2
      18: aload_0
      19: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      22: ldc           #40                 // String Failed to perform multipart cleanup for servlet request
      24: aload_2
      25: invokeinterface #41,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      30: return
    Exception table:
       from    to  target type
           4    14    17   Class java/lang/Throwable
}
