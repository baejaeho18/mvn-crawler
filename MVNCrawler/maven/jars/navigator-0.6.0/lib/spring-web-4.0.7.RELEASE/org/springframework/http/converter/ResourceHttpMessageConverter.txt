Compiled from "ResourceHttpMessageConverter.java"
public class org.springframework.http.converter.ResourceHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<org.springframework.core.io.Resource> {
  private static final boolean jafPresent;

  public org.springframework.http.converter.ResourceHttpMessageConverter();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
       4: invokespecial #2                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":(Lorg/springframework/http/MediaType;)V
       7: return

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: ldc           #3                  // class org/springframework/core/io/Resource
       2: aload_1
       3: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  protected org.springframework.core.io.Resource readInternal(java.lang.Class<? extends org.springframework.core.io.Resource>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_2
       1: invokeinterface #5,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
       6: invokestatic  #6                  // Method org/springframework/util/StreamUtils.copyToByteArray:(Ljava/io/InputStream;)[B
       9: astore_3
      10: new           #7                  // class org/springframework/core/io/ByteArrayResource
      13: dup
      14: aload_3
      15: invokespecial #8                  // Method org/springframework/core/io/ByteArrayResource."<init>":([B)V
      18: areturn

  protected org.springframework.http.MediaType getDefaultContentType(org.springframework.core.io.Resource);
    Code:
       0: getstatic     #9                  // Field jafPresent:Z
       3: ifeq          11
       6: aload_1
       7: invokestatic  #10                 // Method org/springframework/http/converter/ResourceHttpMessageConverter$ActivationMediaTypeFactory.getMediaType:(Lorg/springframework/core/io/Resource;)Lorg/springframework/http/MediaType;
      10: areturn
      11: getstatic     #11                 // Field org/springframework/http/MediaType.APPLICATION_OCTET_STREAM:Lorg/springframework/http/MediaType;
      14: areturn

  protected java.lang.Long getContentLength(org.springframework.core.io.Resource, org.springframework.http.MediaType) throws java.io.IOException;
    Code:
       0: ldc           #12                 // class org/springframework/core/io/InputStreamResource
       2: aload_1
       3: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #14                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          16
      12: aconst_null
      13: goto          25
      16: aload_1
      17: invokeinterface #15,  1           // InterfaceMethod org/springframework/core/io/Resource.contentLength:()J
      22: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: areturn

  protected void writeInternal(org.springframework.core.io.Resource, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod org/springframework/core/io/Resource.getInputStream:()Ljava/io/InputStream;
       6: astore_3
       7: aload_3
       8: aload_2
       9: invokeinterface #18,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      14: invokestatic  #19                 // Method org/springframework/util/StreamUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      17: pop
      18: aload_3
      19: invokevirtual #20                 // Method java/io/InputStream.close:()V
      22: goto          44
      25: astore        4
      27: goto          44
      30: astore        5
      32: aload_3
      33: invokevirtual #20                 // Method java/io/InputStream.close:()V
      36: goto          41
      39: astore        6
      41: aload         5
      43: athrow
      44: aload_2
      45: invokeinterface #18,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      50: invokevirtual #22                 // Method java/io/OutputStream.flush:()V
      53: return
    Exception table:
       from    to  target type
          18    22    25   Class java/io/IOException
           7    18    30   any
          32    36    39   Class java/io/IOException
          30    32    30   any

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class org/springframework/core/io/Resource
       5: aload_2
       6: invokevirtual #23                 // Method writeInternal:(Lorg/springframework/core/io/Resource;Lorg/springframework/http/HttpOutputMessage;)V
       9: return

  protected java.lang.Object readInternal(java.lang.Class, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #24                 // Method readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lorg/springframework/core/io/Resource;
       6: areturn

  protected java.lang.Long getContentLength(java.lang.Object, org.springframework.http.MediaType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class org/springframework/core/io/Resource
       5: aload_2
       6: invokevirtual #25                 // Method getContentLength:(Lorg/springframework/core/io/Resource;Lorg/springframework/http/MediaType;)Ljava/lang/Long;
       9: areturn

  protected org.springframework.http.MediaType getDefaultContentType(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class org/springframework/core/io/Resource
       5: invokevirtual #26                 // Method getDefaultContentType:(Lorg/springframework/core/io/Resource;)Lorg/springframework/http/MediaType;
       8: areturn

  static {};
    Code:
       0: ldc           #27                 // String javax.activation.FileTypeMap
       2: ldc           #28                 // class org/springframework/http/converter/ResourceHttpMessageConverter
       4: invokevirtual #29                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #30                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #9                  // Field jafPresent:Z
      13: return
}
