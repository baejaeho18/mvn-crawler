Compiled from "HttpComponentsClientHttpRequestFactory.java"
public class org.springframework.http.client.HttpComponentsClientHttpRequestFactory implements org.springframework.http.client.ClientHttpRequestFactory,org.springframework.beans.factory.DisposableBean {
  private org.apache.http.impl.client.CloseableHttpClient httpClient;

  private int connectTimeout;

  private int socketTimeout;

  private boolean bufferRequestBody;

  public org.springframework.http.client.HttpComponentsClientHttpRequestFactory();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/apache/http/impl/client/HttpClients.createSystem:()Lorg/apache/http/impl/client/CloseableHttpClient;
       4: invokespecial #2                  // Method "<init>":(Lorg/apache/http/client/HttpClient;)V
       7: return

  public org.springframework.http.client.HttpComponentsClientHttpRequestFactory(org.apache.http.client.HttpClient);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field bufferRequestBody:Z
       9: aload_1
      10: ldc           #5                  // String \'httpClient\' must not be null
      12: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: ldc           #7                  // class org/apache/http/impl/client/CloseableHttpClient
      17: aload_1
      18: ldc           #8                  // String \'httpClient\' is not of type CloseableHttpClient
      20: invokestatic  #9                  // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_1
      25: checkcast     #7                  // class org/apache/http/impl/client/CloseableHttpClient
      28: putfield      #10                 // Field httpClient:Lorg/apache/http/impl/client/CloseableHttpClient;
      31: return

  public void setHttpClient(org.apache.http.client.HttpClient);
    Code:
       0: ldc           #7                  // class org/apache/http/impl/client/CloseableHttpClient
       2: aload_1
       3: ldc           #8                  // String \'httpClient\' is not of type CloseableHttpClient
       5: invokestatic  #9                  // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: checkcast     #7                  // class org/apache/http/impl/client/CloseableHttpClient
      13: putfield      #10                 // Field httpClient:Lorg/apache/http/impl/client/CloseableHttpClient;
      16: return

  public org.apache.http.client.HttpClient getHttpClient();
    Code:
       0: aload_0
       1: getfield      #10                 // Field httpClient:Lorg/apache/http/impl/client/CloseableHttpClient;
       4: areturn

  public void setConnectTimeout(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #11                 // String Timeout must be a non-negative value
      11: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #13                 // Field connectTimeout:I
      19: aload_0
      20: aload_0
      21: invokevirtual #14                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
      24: iload_1
      25: invokespecial #15                 // Method setLegacyConnectionTimeout:(Lorg/apache/http/client/HttpClient;I)V
      28: return

  private void setLegacyConnectionTimeout(org.apache.http.client.HttpClient, int);
    Code:
       0: ldc           #16                 // class org/apache/http/impl/client/AbstractHttpClient
       2: aload_1
       3: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       6: ifeq          24
       9: aload_1
      10: invokeinterface #18,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
      15: ldc           #20                 // String http.connection.timeout
      17: iload_2
      18: invokeinterface #21,  3           // InterfaceMethod org/apache/http/params/HttpParams.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;
      23: pop
      24: return

  public void setReadTimeout(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #11                 // String Timeout must be a non-negative value
      11: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #22                 // Field socketTimeout:I
      19: aload_0
      20: aload_0
      21: invokevirtual #14                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
      24: iload_1
      25: invokespecial #23                 // Method setLegacySocketTimeout:(Lorg/apache/http/client/HttpClient;I)V
      28: return

  private void setLegacySocketTimeout(org.apache.http.client.HttpClient, int);
    Code:
       0: ldc           #16                 // class org/apache/http/impl/client/AbstractHttpClient
       2: aload_1
       3: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       6: ifeq          24
       9: aload_1
      10: invokeinterface #18,  1           // InterfaceMethod org/apache/http/client/HttpClient.getParams:()Lorg/apache/http/params/HttpParams;
      15: ldc           #24                 // String http.socket.timeout
      17: iload_2
      18: invokeinterface #21,  3           // InterfaceMethod org/apache/http/params/HttpParams.setIntParameter:(Ljava/lang/String;I)Lorg/apache/http/params/HttpParams;
      23: pop
      24: return

  public void setBufferRequestBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field bufferRequestBody:Z
       5: return

  public org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI, org.springframework.http.HttpMethod) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getHttpClient:()Lorg/apache/http/client/HttpClient;
       4: checkcast     #7                  // class org/apache/http/impl/client/CloseableHttpClient
       7: astore_3
       8: aload_3
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #25                 // String Synchronous execution requires an HttpClient to be set
      19: invokestatic  #26                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      22: aload_0
      23: aload_2
      24: aload_1
      25: invokevirtual #27                 // Method createHttpUriRequest:(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/apache/http/client/methods/HttpUriRequest;
      28: astore        4
      30: aload_0
      31: aload         4
      33: invokevirtual #28                 // Method postProcessHttpRequest:(Lorg/apache/http/client/methods/HttpUriRequest;)V
      36: aload_0
      37: aload_2
      38: aload_1
      39: invokevirtual #29                 // Method createHttpContext:(Lorg/springframework/http/HttpMethod;Ljava/net/URI;)Lorg/apache/http/protocol/HttpContext;
      42: astore        5
      44: aload         5
      46: ifnonnull     54
      49: invokestatic  #30                 // Method org/apache/http/client/protocol/HttpClientContext.create:()Lorg/apache/http/client/protocol/HttpClientContext;
      52: astore        5
      54: aload         5
      56: ldc           #32                 // String http.request-config
      58: invokeinterface #33,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      63: ifnonnull     149
      66: aconst_null
      67: astore        6
      69: aload         4
      71: instanceof    #34                 // class org/apache/http/client/methods/Configurable
      74: ifeq          89
      77: aload         4
      79: checkcast     #34                 // class org/apache/http/client/methods/Configurable
      82: invokeinterface #35,  1           // InterfaceMethod org/apache/http/client/methods/Configurable.getConfig:()Lorg/apache/http/client/config/RequestConfig;
      87: astore        6
      89: aload         6
      91: ifnonnull     138
      94: aload_0
      95: getfield      #22                 // Field socketTimeout:I
      98: ifgt          108
     101: aload_0
     102: getfield      #13                 // Field connectTimeout:I
     105: ifle          133
     108: invokestatic  #36                 // Method org/apache/http/client/config/RequestConfig.custom:()Lorg/apache/http/client/config/RequestConfig$Builder;
     111: aload_0
     112: getfield      #13                 // Field connectTimeout:I
     115: invokevirtual #37                 // Method org/apache/http/client/config/RequestConfig$Builder.setConnectTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
     118: aload_0
     119: getfield      #22                 // Field socketTimeout:I
     122: invokevirtual #38                 // Method org/apache/http/client/config/RequestConfig$Builder.setSocketTimeout:(I)Lorg/apache/http/client/config/RequestConfig$Builder;
     125: invokevirtual #39                 // Method org/apache/http/client/config/RequestConfig$Builder.build:()Lorg/apache/http/client/config/RequestConfig;
     128: astore        6
     130: goto          138
     133: getstatic     #40                 // Field org/apache/http/client/config/RequestConfig.DEFAULT:Lorg/apache/http/client/config/RequestConfig;
     136: astore        6
     138: aload         5
     140: ldc           #32                 // String http.request-config
     142: aload         6
     144: invokeinterface #41,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     149: aload_0
     150: getfield      #4                  // Field bufferRequestBody:Z
     153: ifeq          169
     156: new           #42                 // class org/springframework/http/client/HttpComponentsClientHttpRequest
     159: dup
     160: aload_3
     161: aload         4
     163: aload         5
     165: invokespecial #43                 // Method org/springframework/http/client/HttpComponentsClientHttpRequest."<init>":(Lorg/apache/http/impl/client/CloseableHttpClient;Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)V
     168: areturn
     169: new           #44                 // class org/springframework/http/client/HttpComponentsStreamingClientHttpRequest
     172: dup
     173: aload_3
     174: aload         4
     176: aload         5
     178: invokespecial #45                 // Method org/springframework/http/client/HttpComponentsStreamingClientHttpRequest."<init>":(Lorg/apache/http/impl/client/CloseableHttpClient;Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/protocol/HttpContext;)V
     181: areturn

  protected org.apache.http.client.methods.HttpUriRequest createHttpUriRequest(org.springframework.http.HttpMethod, java.net.URI);
    Code:
       0: getstatic     #46                 // Field org/springframework/http/client/HttpComponentsClientHttpRequestFactory$1.$SwitchMap$org$springframework$http$HttpMethod:[I
       3: aload_1
       4: invokevirtual #47                 // Method org/springframework/http/HttpMethod.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 8
                     1: 56
                     2: 65
                     3: 74
                     4: 83
                     5: 92
                     6: 101
                     7: 110
                     8: 119
               default: 128
          }
      56: new           #48                 // class org/apache/http/client/methods/HttpGet
      59: dup
      60: aload_2
      61: invokespecial #49                 // Method org/apache/http/client/methods/HttpGet."<init>":(Ljava/net/URI;)V
      64: areturn
      65: new           #50                 // class org/apache/http/client/methods/HttpDelete
      68: dup
      69: aload_2
      70: invokespecial #51                 // Method org/apache/http/client/methods/HttpDelete."<init>":(Ljava/net/URI;)V
      73: areturn
      74: new           #52                 // class org/apache/http/client/methods/HttpHead
      77: dup
      78: aload_2
      79: invokespecial #53                 // Method org/apache/http/client/methods/HttpHead."<init>":(Ljava/net/URI;)V
      82: areturn
      83: new           #54                 // class org/apache/http/client/methods/HttpOptions
      86: dup
      87: aload_2
      88: invokespecial #55                 // Method org/apache/http/client/methods/HttpOptions."<init>":(Ljava/net/URI;)V
      91: areturn
      92: new           #56                 // class org/apache/http/client/methods/HttpPost
      95: dup
      96: aload_2
      97: invokespecial #57                 // Method org/apache/http/client/methods/HttpPost."<init>":(Ljava/net/URI;)V
     100: areturn
     101: new           #58                 // class org/apache/http/client/methods/HttpPut
     104: dup
     105: aload_2
     106: invokespecial #59                 // Method org/apache/http/client/methods/HttpPut."<init>":(Ljava/net/URI;)V
     109: areturn
     110: new           #60                 // class org/apache/http/client/methods/HttpTrace
     113: dup
     114: aload_2
     115: invokespecial #61                 // Method org/apache/http/client/methods/HttpTrace."<init>":(Ljava/net/URI;)V
     118: areturn
     119: new           #62                 // class org/apache/http/client/methods/HttpPatch
     122: dup
     123: aload_2
     124: invokespecial #63                 // Method org/apache/http/client/methods/HttpPatch."<init>":(Ljava/net/URI;)V
     127: areturn
     128: new           #64                 // class java/lang/IllegalArgumentException
     131: dup
     132: new           #65                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #67                 // String Invalid HTTP method:
     141: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_1
     145: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     148: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #71                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     154: athrow

  protected void postProcessHttpRequest(org.apache.http.client.methods.HttpUriRequest);
    Code:
       0: return

  protected org.apache.http.protocol.HttpContext createHttpContext(org.springframework.http.HttpMethod, java.net.URI);
    Code:
       0: aconst_null
       1: areturn

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field httpClient:Lorg/apache/http/impl/client/CloseableHttpClient;
       4: invokevirtual #72                 // Method org/apache/http/impl/client/CloseableHttpClient.close:()V
       7: return
}
