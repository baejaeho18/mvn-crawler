Compiled from "ObjectToStringHttpMessageConverter.java"
public class org.springframework.http.converter.ObjectToStringHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<java.lang.Object> {
  private org.springframework.core.convert.ConversionService conversionService;

  private org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter;

  public org.springframework.http.converter.ObjectToStringHttpMessageConverter(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/springframework/http/converter/StringHttpMessageConverter.DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       5: invokespecial #2                  // Method "<init>":(Lorg/springframework/core/convert/ConversionService;Ljava/nio/charset/Charset;)V
       8: return

  public org.springframework.http.converter.ObjectToStringHttpMessageConverter(org.springframework.core.convert.ConversionService, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: new           #3                  // class org/springframework/http/MediaType
       4: dup
       5: ldc           #4                  // String text
       7: ldc           #5                  // String plain
       9: aload_2
      10: invokespecial #6                  // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      13: invokespecial #7                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":(Lorg/springframework/http/MediaType;)V
      16: aload_1
      17: ldc           #8                  // String conversionService is required
      19: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      27: aload_0
      28: new           #11                 // class org/springframework/http/converter/StringHttpMessageConverter
      31: dup
      32: aload_2
      33: invokespecial #12                 // Method org/springframework/http/converter/StringHttpMessageConverter."<init>":(Ljava/nio/charset/Charset;)V
      36: putfield      #13                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
      39: return

  public void setWriteAcceptCharset(boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
       4: iload_1
       5: invokevirtual #14                 // Method org/springframework/http/converter/StringHttpMessageConverter.setWriteAcceptCharset:(Z)V
       8: return

  public boolean canRead(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: ldc           #15                 // class java/lang/String
       6: aload_1
       7: invokeinterface #16,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      12: ifeq          27
      15: aload_0
      16: aload_2
      17: invokevirtual #17                 // Method canRead:(Lorg/springframework/http/MediaType;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: aload_1
       5: ldc           #15                 // class java/lang/String
       7: invokeinterface #16,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      12: ifeq          27
      15: aload_0
      16: aload_2
      17: invokevirtual #18                 // Method canWrite:(Lorg/springframework/http/MediaType;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected java.lang.Object readInternal(java.lang.Class<? extends java.lang.Object>, org.springframework.http.HttpInputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
       4: ldc           #15                 // class java/lang/String
       6: aload_2
       7: invokevirtual #21                 // Method org/springframework/http/converter/StringHttpMessageConverter.readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: getfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      15: aload_3
      16: aload_1
      17: invokeinterface #22,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: aload_1
       5: ldc           #15                 // class java/lang/String
       7: invokeinterface #22,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #15                 // class java/lang/String
      15: astore_3
      16: aload_0
      17: getfield      #13                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
      20: aload_3
      21: aload_2
      22: invokevirtual #23                 // Method org/springframework/http/converter/StringHttpMessageConverter.writeInternal:(Ljava/lang/String;Lorg/springframework/http/HttpOutputMessage;)V
      25: return

  protected java.lang.Long getContentLength(java.lang.Object, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: aload_1
       5: ldc           #15                 // class java/lang/String
       7: invokeinterface #22,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #15                 // class java/lang/String
      15: astore_3
      16: aload_0
      17: getfield      #13                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
      20: aload_3
      21: aload_2
      22: invokevirtual #24                 // Method org/springframework/http/converter/StringHttpMessageConverter.getContentLength:(Ljava/lang/String;Lorg/springframework/http/MediaType;)Ljava/lang/Long;
      25: areturn
}
