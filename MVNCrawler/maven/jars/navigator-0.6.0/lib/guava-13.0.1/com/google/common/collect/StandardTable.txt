Compiled from "StandardTable.java"
class com.google.common.collect.StandardTable<R, C, V> implements com.google.common.collect.Table<R, C, V>, java.io.Serializable {
  final java.util.Map<R, java.util.Map<C, V>> backingMap;

  final com.google.common.base.Supplier<? extends java.util.Map<C, V>> factory;

  private transient com.google.common.collect.StandardTable<R, C, V>.CellSet cellSet;

  private transient com.google.common.collect.StandardTable<R, C, V>.RowKeySet rowKeySet;

  private transient java.util.Set<C> columnKeySet;

  private transient com.google.common.collect.StandardTable<R, C, V>.Values values;

  private transient com.google.common.collect.StandardTable<R, C, V>.RowMap rowMap;

  private transient com.google.common.collect.StandardTable<R, C, V>.ColumnMap columnMap;

  private static final long serialVersionUID;

  com.google.common.collect.StandardTable(java.util.Map<R, java.util.Map<C, V>>, com.google.common.base.Supplier<? extends java.util.Map<C, V>>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field backingMap:Ljava/util/Map;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field factory:Lcom/google/common/base/Supplier;
      14: return

  public boolean contains(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #5                  // Field backingMap:Ljava/util/Map;
      14: aload_1
      15: invokestatic  #7                  // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #8                  // class java/util/Map
      21: astore_3
      22: aload_3
      23: ifnull        38
      26: aload_3
      27: aload_2
      28: invokestatic  #9                  // Method com/google/common/collect/Maps.safeContainsKey:(Ljava/util/Map;Ljava/lang/Object;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public boolean containsColumn(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #5                  // Field backingMap:Ljava/util/Map;
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          53
      30: aload_2
      31: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #8                  // class java/util/Map
      39: astore_3
      40: aload_3
      41: aload_1
      42: invokestatic  #9                  // Method com/google/common/collect/Maps.safeContainsKey:(Ljava/util/Map;Ljava/lang/Object;)Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: goto          21
      53: iconst_0
      54: ireturn

  public boolean containsRow(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_0
       5: getfield      #5                  // Field backingMap:Ljava/util/Map;
       8: aload_1
       9: invokestatic  #9                  // Method com/google/common/collect/Maps.safeContainsKey:(Ljava/util/Map;Ljava/lang/Object;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #5                  // Field backingMap:Ljava/util/Map;
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          55
      30: aload_2
      31: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #8                  // class java/util/Map
      39: astore_3
      40: aload_3
      41: aload_1
      42: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: goto          21
      55: iconst_0
      56: ireturn

  public V get(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #5                  // Field backingMap:Ljava/util/Map;
      14: aload_1
      15: invokestatic  #7                  // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #8                  // class java/util/Map
      21: astore_3
      22: aload_3
      23: ifnonnull     30
      26: aconst_null
      27: goto          35
      30: aload_3
      31: aload_2
      32: invokestatic  #7                  // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #5                  // Field backingMap:Ljava/util/Map;
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          48
      26: aload_2
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #8                  // class java/util/Map
      35: astore_3
      36: iload_1
      37: aload_3
      38: invokeinterface #16,  1           // InterfaceMethod java/util/Map.size:()I
      43: iadd
      44: istore_1
      45: goto          17
      48: iload_1
      49: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class com/google/common/collect/Table
      11: ifeq          33
      14: aload_1
      15: checkcast     #17                 // class com/google/common/collect/Table
      18: astore_2
      19: aload_0
      20: invokevirtual #18                 // Method cellSet:()Ljava/util/Set;
      23: aload_2
      24: invokeinterface #19,  1           // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
      29: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ireturn
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method cellSet:()Ljava/util/Set;
       4: invokevirtual #21                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method rowMap:()Ljava/util/Map;
       4: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  private java.util.Map<C, V> getOrCreate(R);
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class java/util/Map
      13: astore_2
      14: aload_2
      15: ifnonnull     43
      18: aload_0
      19: getfield      #6                  // Field factory:Lcom/google/common/base/Supplier;
      22: invokeinterface #26,  1           // InterfaceMethod com/google/common/base/Supplier.get:()Ljava/lang/Object;
      27: checkcast     #8                  // class java/util/Map
      30: astore_2
      31: aload_0
      32: getfield      #5                  // Field backingMap:Ljava/util/Map;
      35: aload_1
      36: aload_2
      37: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_2
      44: areturn

  public V put(R, C, V);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_3
      11: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: aload_1
      17: invokespecial #29                 // Method getOrCreate:(Ljava/lang/Object;)Ljava/util/Map;
      20: aload_2
      21: aload_3
      22: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: areturn

  public void putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
       6: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          57
      21: aload_2
      22: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #31                 // class com/google/common/collect/Table$Cell
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #32,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #33,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
      44: aload_3
      45: invokeinterface #34,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
      50: invokevirtual #35                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          12
      57: return

  public V remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #5                  // Field backingMap:Ljava/util/Map;
      14: aload_1
      15: invokestatic  #7                  // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #8                  // class java/util/Map
      21: astore_3
      22: aload_3
      23: ifnonnull     28
      26: aconst_null
      27: areturn
      28: aload_3
      29: aload_2
      30: invokeinterface #36,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        4
      37: aload_3
      38: invokeinterface #15,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      43: ifeq          57
      46: aload_0
      47: getfield      #5                  // Field backingMap:Ljava/util/Map;
      50: aload_1
      51: invokeinterface #36,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: aload         4
      59: areturn

  private java.util.Map<R, V> removeColumn(java.lang.Object);
    Code:
       0: new           #37                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #38                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field backingMap:Ljava/util/Map;
      12: invokeinterface #39,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          109
      32: aload_3
      33: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #41                 // class java/util/Map$Entry
      41: astore        4
      43: aload         4
      45: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: checkcast     #8                  // class java/util/Map
      53: aload_1
      54: invokeinterface #36,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      59: astore        5
      61: aload         5
      63: ifnull        106
      66: aload_2
      67: aload         4
      69: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: aload         5
      76: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: aload         4
      84: invokeinterface #42,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      89: checkcast     #8                  // class java/util/Map
      92: invokeinterface #15,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      97: ifeq          106
     100: aload_3
     101: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.remove:()V
     106: goto          23
     109: aload_2
     110: areturn

  private boolean containsMapping(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_3
       1: ifnull        21
       4: aload_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #45                 // Method get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private boolean removeMapping(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method containsMapping:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ifeq          19
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #46                 // Method remove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: iconst_1
      18: ireturn
      19: iconst_0
      20: ireturn

  public java.util.Set<com.google.common.collect.Table$Cell<R, C, V>> cellSet();
    Code:
       0: aload_0
       1: getfield      #47                 // Field cellSet:Lcom/google/common/collect/StandardTable$CellSet;
       4: astore_1
       5: aload_1
       6: ifnonnull     26
       9: aload_0
      10: new           #48                 // class com/google/common/collect/StandardTable$CellSet
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #49                 // Method com/google/common/collect/StandardTable$CellSet."<init>":(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V
      19: dup_x1
      20: putfield      #47                 // Field cellSet:Lcom/google/common/collect/StandardTable$CellSet;
      23: goto          27
      26: aload_1
      27: areturn

  public java.util.Map<C, V> row(R);
    Code:
       0: new           #50                 // class com/google/common/collect/StandardTable$Row
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #51                 // Method com/google/common/collect/StandardTable$Row."<init>":(Lcom/google/common/collect/StandardTable;Ljava/lang/Object;)V
       9: areturn

  public java.util.Map<R, V> column(C);
    Code:
       0: new           #52                 // class com/google/common/collect/StandardTable$Column
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #53                 // Method com/google/common/collect/StandardTable$Column."<init>":(Lcom/google/common/collect/StandardTable;Ljava/lang/Object;)V
       9: areturn

  public java.util.Set<R> rowKeySet();
    Code:
       0: aload_0
       1: getfield      #54                 // Field rowKeySet:Lcom/google/common/collect/StandardTable$RowKeySet;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #55                 // class com/google/common/collect/StandardTable$RowKeySet
      13: dup
      14: aload_0
      15: invokespecial #56                 // Method com/google/common/collect/StandardTable$RowKeySet."<init>":(Lcom/google/common/collect/StandardTable;)V
      18: dup_x1
      19: putfield      #54                 // Field rowKeySet:Lcom/google/common/collect/StandardTable$RowKeySet;
      22: goto          26
      25: aload_1
      26: areturn

  public java.util.Set<C> columnKeySet();
    Code:
       0: aload_0
       1: getfield      #57                 // Field columnKeySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     26
       9: aload_0
      10: new           #58                 // class com/google/common/collect/StandardTable$ColumnKeySet
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #59                 // Method com/google/common/collect/StandardTable$ColumnKeySet."<init>":(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V
      19: dup_x1
      20: putfield      #57                 // Field columnKeySet:Ljava/util/Set;
      23: goto          27
      26: aload_1
      27: areturn

  java.util.Iterator<C> createColumnKeyIterator();
    Code:
       0: new           #60                 // class com/google/common/collect/StandardTable$ColumnKeyIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #61                 // Method com/google/common/collect/StandardTable$ColumnKeyIterator."<init>":(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V
       9: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #62                 // Field values:Lcom/google/common/collect/StandardTable$Values;
       4: astore_1
       5: aload_1
       6: ifnonnull     26
       9: aload_0
      10: new           #63                 // class com/google/common/collect/StandardTable$Values
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #64                 // Method com/google/common/collect/StandardTable$Values."<init>":(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V
      19: dup_x1
      20: putfield      #62                 // Field values:Lcom/google/common/collect/StandardTable$Values;
      23: goto          27
      26: aload_1
      27: areturn

  public java.util.Map<R, java.util.Map<C, V>> rowMap();
    Code:
       0: aload_0
       1: getfield      #65                 // Field rowMap:Lcom/google/common/collect/StandardTable$RowMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     25
       9: aload_0
      10: new           #66                 // class com/google/common/collect/StandardTable$RowMap
      13: dup
      14: aload_0
      15: invokespecial #67                 // Method com/google/common/collect/StandardTable$RowMap."<init>":(Lcom/google/common/collect/StandardTable;)V
      18: dup_x1
      19: putfield      #65                 // Field rowMap:Lcom/google/common/collect/StandardTable$RowMap;
      22: goto          26
      25: aload_1
      26: areturn

  public java.util.Map<C, java.util.Map<R, V>> columnMap();
    Code:
       0: aload_0
       1: getfield      #68                 // Field columnMap:Lcom/google/common/collect/StandardTable$ColumnMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     26
       9: aload_0
      10: new           #69                 // class com/google/common/collect/StandardTable$ColumnMap
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #70                 // Method com/google/common/collect/StandardTable$ColumnMap."<init>":(Lcom/google/common/collect/StandardTable;Lcom/google/common/collect/StandardTable$1;)V
      19: dup_x1
      20: putfield      #68                 // Field columnMap:Lcom/google/common/collect/StandardTable$ColumnMap;
      23: goto          27
      26: aload_1
      27: areturn

  static boolean access$300(com.google.common.collect.StandardTable, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method containsMapping:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  static boolean access$400(com.google.common.collect.StandardTable, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method removeMapping:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ireturn

  static java.util.Map access$1100(com.google.common.collect.StandardTable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method removeColumn:(Ljava/lang/Object;)Ljava/util/Map;
       5: areturn
}
