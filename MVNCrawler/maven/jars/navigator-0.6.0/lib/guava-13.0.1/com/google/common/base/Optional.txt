Compiled from "Optional.java"
public abstract class com.google.common.base.Optional<T> implements java.io.Serializable {
  private static final long serialVersionUID;

  public static <T> com.google.common.base.Optional<T> absent();
    Code:
       0: getstatic     #1                  // Field com/google/common/base/Absent.INSTANCE:Lcom/google/common/base/Absent;
       3: areturn

  public static <T> com.google.common.base.Optional<T> of(T);
    Code:
       0: new           #2                  // class com/google/common/base/Present
       3: dup
       4: aload_0
       5: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokespecial #4                  // Method com/google/common/base/Present."<init>":(Ljava/lang/Object;)V
      11: areturn

  public static <T> com.google.common.base.Optional<T> fromNullable(T);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: invokestatic  #5                  // Method absent:()Lcom/google/common/base/Optional;
       7: goto          18
      10: new           #2                  // class com/google/common/base/Present
      13: dup
      14: aload_0
      15: invokespecial #4                  // Method com/google/common/base/Present."<init>":(Ljava/lang/Object;)V
      18: areturn

  com.google.common.base.Optional();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract boolean isPresent();

  public abstract T get();

  public abstract T or(T);

  public abstract com.google.common.base.Optional<T> or(com.google.common.base.Optional<? extends T>);

  public abstract T or(com.google.common.base.Supplier<? extends T>);

  public abstract T orNull();

  public abstract java.util.Set<T> asSet();

  public abstract <V> com.google.common.base.Optional<V> transform(com.google.common.base.Function<? super T, V>);

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public abstract java.lang.String toString();

  public static <T> java.lang.Iterable<T> presentInstances(java.lang.Iterable<? extends com.google.common.base.Optional<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #7                  // class com/google/common/base/Optional$1
       8: dup
       9: aload_0
      10: invokespecial #8                  // Method com/google/common/base/Optional$1."<init>":(Ljava/lang/Iterable;)V
      13: areturn
}
