Compiled from "Joiner.java"
class com.google.common.base.Joiner$2 extends com.google.common.base.Joiner {
  final com.google.common.base.Joiner this$0;

  com.google.common.base.Joiner$2(com.google.common.base.Joiner, com.google.common.base.Joiner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/base/Joiner;
       5: aload_0
       6: aload_2
       7: aconst_null
       8: invokespecial #2                  // Method com/google/common/base/Joiner."<init>":(Lcom/google/common/base/Joiner;Lcom/google/common/base/Joiner$1;)V
      11: return

  public <A extends java.lang.Appendable> A appendTo(A, java.util.Iterator<?>) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #3                  // String appendable
       3: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #5                  // String parts
      10: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          55
      23: aload_2
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: astore_3
      30: aload_3
      31: ifnull        52
      34: aload_1
      35: aload_0
      36: getfield      #1                  // Field this$0:Lcom/google/common/base/Joiner;
      39: aload_3
      40: invokevirtual #8                  // Method com/google/common/base/Joiner.toString:(Ljava/lang/Object;)Ljava/lang/CharSequence;
      43: invokeinterface #9,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      48: pop
      49: goto          55
      52: goto          14
      55: aload_2
      56: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          107
      64: aload_2
      65: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: astore_3
      71: aload_3
      72: ifnull        104
      75: aload_1
      76: aload_0
      77: getfield      #1                  // Field this$0:Lcom/google/common/base/Joiner;
      80: invokestatic  #10                 // Method com/google/common/base/Joiner.access$100:(Lcom/google/common/base/Joiner;)Ljava/lang/String;
      83: invokeinterface #9,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      88: pop
      89: aload_1
      90: aload_0
      91: getfield      #1                  // Field this$0:Lcom/google/common/base/Joiner;
      94: aload_3
      95: invokevirtual #8                  // Method com/google/common/base/Joiner.toString:(Ljava/lang/Object;)Ljava/lang/CharSequence;
      98: invokeinterface #9,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     103: pop
     104: goto          55
     107: aload_1
     108: areturn

  public com.google.common.base.Joiner useForNull(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #12                 // class java/lang/UnsupportedOperationException
       8: dup
       9: ldc           #13                 // String already specified skipNulls
      11: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      14: athrow

  public com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #12                 // class java/lang/UnsupportedOperationException
       8: dup
       9: ldc           #15                 // String can\'t use .skipNulls() with maps
      11: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      14: athrow
}
