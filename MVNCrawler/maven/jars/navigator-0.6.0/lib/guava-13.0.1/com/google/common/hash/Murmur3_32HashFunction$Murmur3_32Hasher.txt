Compiled from "Murmur3_32HashFunction.java"
final class com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher extends com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher {
  private static final int CHUNK_SIZE;

  private int h1;

  private int length;

  com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher(int);
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #1                  // Method com/google/common/hash/AbstractStreamingHashFunction$AbstractStreamingHasher."<init>":(I)V
       5: aload_0
       6: iload_1
       7: putfield      #2                  // Field h1:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field length:I
      15: return

  protected void process(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/nio/ByteBuffer.getInt:()I
       4: invokestatic  #5                  // Method com/google/common/hash/Murmur3_32HashFunction.access$000:(I)I
       7: istore_2
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field h1:I
      13: iload_2
      14: invokestatic  #6                  // Method com/google/common/hash/Murmur3_32HashFunction.access$100:(II)I
      17: putfield      #2                  // Field h1:I
      20: aload_0
      21: dup
      22: getfield      #3                  // Field length:I
      25: iconst_4
      26: iadd
      27: putfield      #3                  // Field length:I
      30: return

  protected void processRemaining(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field length:I
       5: aload_1
       6: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
       9: iadd
      10: putfield      #3                  // Field length:I
      13: iconst_0
      14: istore_2
      15: aload_1
      16: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      19: tableswitch   { // 1 to 3
                     1: 72
                     2: 58
                     3: 44
               default: 86
          }
      44: iload_2
      45: aload_1
      46: iconst_2
      47: invokevirtual #8                  // Method java/nio/ByteBuffer.get:(I)B
      50: invokestatic  #9                  // Method com/google/common/primitives/UnsignedBytes.toInt:(B)I
      53: bipush        16
      55: ishl
      56: ixor
      57: istore_2
      58: iload_2
      59: aload_1
      60: iconst_1
      61: invokevirtual #8                  // Method java/nio/ByteBuffer.get:(I)B
      64: invokestatic  #9                  // Method com/google/common/primitives/UnsignedBytes.toInt:(B)I
      67: bipush        8
      69: ishl
      70: ixor
      71: istore_2
      72: iload_2
      73: aload_1
      74: iconst_0
      75: invokevirtual #8                  // Method java/nio/ByteBuffer.get:(I)B
      78: invokestatic  #9                  // Method com/google/common/primitives/UnsignedBytes.toInt:(B)I
      81: ixor
      82: istore_2
      83: goto          96
      86: new           #10                 // class java/lang/AssertionError
      89: dup
      90: ldc           #11                 // String Should never get here.
      92: invokespecial #12                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      95: athrow
      96: aload_0
      97: dup
      98: getfield      #2                  // Field h1:I
     101: iload_2
     102: invokestatic  #5                  // Method com/google/common/hash/Murmur3_32HashFunction.access$000:(I)I
     105: ixor
     106: putfield      #2                  // Field h1:I
     109: return

  public com.google.common.hash.HashCode makeHash();
    Code:
       0: aload_0
       1: getfield      #2                  // Field h1:I
       4: aload_0
       5: getfield      #3                  // Field length:I
       8: invokestatic  #13                 // Method com/google/common/hash/Murmur3_32HashFunction.access$200:(II)Lcom/google/common/hash/HashCode;
      11: areturn
}
