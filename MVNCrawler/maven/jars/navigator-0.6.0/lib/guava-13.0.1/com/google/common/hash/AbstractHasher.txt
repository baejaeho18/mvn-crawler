Compiled from "AbstractHasher.java"
abstract class com.google.common.hash.AbstractHasher implements com.google.common.hash.Hasher {
  com.google.common.hash.AbstractHasher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public final com.google.common.hash.Hasher putBoolean(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #2                  // Method putByte:(B)Lcom/google/common/hash/Hasher;
      13: areturn

  public final com.google.common.hash.Hasher putDouble(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #3                  // Method java/lang/Double.doubleToRawLongBits:(D)J
       5: invokevirtual #4                  // Method putLong:(J)Lcom/google/common/hash/Hasher;
       8: areturn

  public final com.google.common.hash.Hasher putFloat(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #5                  // Method java/lang/Float.floatToRawIntBits:(F)I
       5: invokevirtual #6                  // Method putInt:(I)Lcom/google/common/hash/Hasher;
       8: areturn

  public com.google.common.hash.Hasher putString(java.lang.CharSequence);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #7,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       8: istore_3
       9: iload_2
      10: iload_3
      11: if_icmpge     32
      14: aload_0
      15: aload_1
      16: iload_2
      17: invokeinterface #8,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      22: invokevirtual #9                  // Method putChar:(C)Lcom/google/common/hash/Hasher;
      25: pop
      26: iinc          2, 1
      29: goto          9
      32: aload_0
      33: areturn

  public com.google.common.hash.Hasher putString(java.lang.CharSequence, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method java/lang/Object.toString:()Ljava/lang/String;
       5: aload_2
       6: invokevirtual #11                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       9: invokevirtual #12                 // Method putBytes:([B)Lcom/google/common/hash/Hasher;
      12: areturn

  public com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method putString:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lcom/google/common/hash/Hasher;
       6: areturn

  public com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method putString:(Ljava/lang/CharSequence;)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putBoolean(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #15                 // Method putBoolean:(Z)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putDouble(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #16                 // Method putDouble:(D)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putFloat(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #17                 // Method putFloat:(F)Lcom/google/common/hash/Hasher;
       5: areturn
}
