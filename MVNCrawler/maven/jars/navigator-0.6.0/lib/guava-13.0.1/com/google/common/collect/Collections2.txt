Compiled from "Collections2.java"
public final class com.google.common.collect.Collections2 {
  static final com.google.common.base.Joiner STANDARD_JOINER;

  private com.google.common.collect.Collections2();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public static <E> java.util.Collection<E> filter(java.util.Collection<E>, com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: instanceof    #6                  // class com/google/common/collect/Collections2$FilteredCollection
       4: ifeq          16
       7: aload_0
       8: checkcast     #6                  // class com/google/common/collect/Collections2$FilteredCollection
      11: aload_1
      12: invokevirtual #7                  // Method com/google/common/collect/Collections2$FilteredCollection.createCombined:(Lcom/google/common/base/Predicate;)Lcom/google/common/collect/Collections2$FilteredCollection;
      15: areturn
      16: new           #6                  // class com/google/common/collect/Collections2$FilteredCollection
      19: dup
      20: aload_0
      21: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #9                  // class java/util/Collection
      27: aload_1
      28: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #10                 // class com/google/common/base/Predicate
      34: invokespecial #11                 // Method com/google/common/collect/Collections2$FilteredCollection."<init>":(Ljava/util/Collection;Lcom/google/common/base/Predicate;)V
      37: areturn

  static boolean safeContains(java.util.Collection<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
       7: ireturn
       8: astore_2
       9: iconst_0
      10: ireturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException

  public static <F, T> java.util.Collection<T> transform(java.util.Collection<F>, com.google.common.base.Function<? super F, T>);
    Code:
       0: new           #14                 // class com/google/common/collect/Collections2$TransformedCollection
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #15                 // Method com/google/common/collect/Collections2$TransformedCollection."<init>":(Ljava/util/Collection;Lcom/google/common/base/Function;)V
       9: areturn

  static boolean containsAllImpl(java.util.Collection<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          43
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: goto          12
      43: iconst_1
      44: ireturn

  static java.lang.String toStringImpl(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.size:()I
       6: invokestatic  #20                 // Method newStringBuilderForCollection:(I)Ljava/lang/StringBuilder;
       9: bipush        91
      11: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: astore_1
      15: getstatic     #22                 // Field STANDARD_JOINER:Lcom/google/common/base/Joiner;
      18: aload_1
      19: aload_0
      20: new           #23                 // class com/google/common/collect/Collections2$1
      23: dup
      24: aload_0
      25: invokespecial #24                 // Method com/google/common/collect/Collections2$1."<init>":(Ljava/util/Collection;)V
      28: invokestatic  #25                 // Method com/google/common/collect/Iterables.transform:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Ljava/lang/Iterable;
      31: invokevirtual #26                 // Method com/google/common/base/Joiner.appendTo:(Ljava/lang/StringBuilder;Ljava/lang/Iterable;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_1
      36: bipush        93
      38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  static java.lang.StringBuilder newStringBuilderForCollection(int);
    Code:
       0: iload_0
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #28                 // String size must be non-negative
      11: invokestatic  #29                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: new           #30                 // class java/lang/StringBuilder
      17: dup
      18: iload_0
      19: i2l
      20: ldc2_w        #31                 // long 8l
      23: lmul
      24: ldc2_w        #33                 // long 1073741824l
      27: invokestatic  #35                 // Method java/lang/Math.min:(JJ)J
      30: l2i
      31: invokespecial #36                 // Method java/lang/StringBuilder."<init>":(I)V
      34: areturn

  static <T> java.util.Collection<T> cast(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: checkcast     #9                  // class java/util/Collection
       4: areturn

  public static <E extends java.lang.Comparable<? super E>> java.util.Collection<java.util.List<E>> orderedPermutations(java.lang.Iterable<E>);
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       4: invokestatic  #38                 // Method orderedPermutations:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/Collection;
       7: areturn

  public static <E> java.util.Collection<java.util.List<E>> orderedPermutations(java.lang.Iterable<E>, java.util.Comparator<? super E>);
    Code:
       0: new           #39                 // class com/google/common/collect/Collections2$OrderedPermutationCollection
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #40                 // Method com/google/common/collect/Collections2$OrderedPermutationCollection."<init>":(Ljava/lang/Iterable;Ljava/util/Comparator;)V
       9: areturn

  public static <E> java.util.Collection<java.util.List<E>> permutations(java.util.Collection<E>);
    Code:
       0: new           #41                 // class com/google/common/collect/Collections2$PermutationCollection
       3: dup
       4: aload_0
       5: invokestatic  #42                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
       8: invokespecial #43                 // Method com/google/common/collect/Collections2$PermutationCollection."<init>":(Lcom/google/common/collect/ImmutableList;)V
      11: areturn

  private static boolean isPermutation(java.util.List<?>, java.util.List<?>);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
       6: aload_1
       7: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokestatic  #45                 // Method com/google/common/collect/HashMultiset.create:(Ljava/lang/Iterable;)Lcom/google/common/collect/HashMultiset;
      21: astore_2
      22: aload_1
      23: invokestatic  #45                 // Method com/google/common/collect/HashMultiset.create:(Ljava/lang/Iterable;)Lcom/google/common/collect/HashMultiset;
      26: astore_3
      27: aload_2
      28: aload_3
      29: invokevirtual #46                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ireturn

  private static boolean isPositiveInt(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: iflt          18
       6: lload_0
       7: ldc2_w        #47                 // long 2147483647l
      10: lcmp
      11: ifgt          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static boolean access$000(long);
    Code:
       0: lload_0
       1: invokestatic  #4                  // Method isPositiveInt:(J)Z
       4: ireturn

  static boolean access$100(java.util.List, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method isPermutation:(Ljava/util/List;Ljava/util/List;)Z
       5: ireturn

  static {};
    Code:
       0: ldc           #49                 // String ,
       2: invokestatic  #50                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
       5: ldc           #51                 // String null
       7: invokevirtual #52                 // Method com/google/common/base/Joiner.useForNull:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
      10: putstatic     #22                 // Field STANDARD_JOINER:Lcom/google/common/base/Joiner;
      13: return
}
