Compiled from "SingletonImmutableTable.java"
final class com.google.common.collect.SingletonImmutableTable<R, C, V> extends com.google.common.collect.ImmutableTable<R, C, V> {
  private final R singleRowKey;

  private final C singleColumnKey;

  private final V singleValue;

  com.google.common.collect.SingletonImmutableTable(R, C, V);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/ImmutableTable."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: putfield      #3                  // Field singleRowKey:Ljava/lang/Object;
      12: aload_0
      13: aload_2
      14: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      17: putfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
      20: aload_0
      21: aload_3
      22: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      25: putfield      #5                  // Field singleValue:Ljava/lang/Object;
      28: return

  com.google.common.collect.SingletonImmutableTable(com.google.common.collect.Table$Cell<R, C, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  1            // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
       7: aload_1
       8: invokeinterface #7,  1            // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
      13: aload_1
      14: invokeinterface #8,  1            // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
      19: invokespecial #9                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  public com.google.common.collect.ImmutableSet<com.google.common.collect.Table$Cell<R, C, V>> cellSet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
       4: aload_0
       5: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
       8: aload_0
       9: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      12: invokestatic  #10                 // Method com/google/common/collect/Tables.immutableCell:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/Table$Cell;
      15: invokestatic  #11                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      18: areturn

  public com.google.common.collect.ImmutableMap<R, V> column(C);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #12                 // Method containsColumn:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
      17: aload_0
      18: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      21: invokestatic  #13                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      24: goto          30
      27: invokestatic  #14                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      30: areturn

  public com.google.common.collect.ImmutableSet<C> columnKeySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
       4: invokestatic  #11                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public com.google.common.collect.ImmutableMap<C, java.util.Map<R, V>> columnMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
       4: aload_0
       5: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
       8: aload_0
       9: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      12: invokestatic  #13                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      15: invokestatic  #13                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      18: areturn

  public boolean contains(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method containsRow:(Ljava/lang/Object;)Z
       5: ifeq          20
       8: aload_0
       9: aload_2
      10: invokevirtual #12                 // Method containsColumn:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean containsColumn(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsRow(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field singleValue:Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public V get(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method contains:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ifeq          16
       9: aload_0
      10: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      13: goto          17
      16: aconst_null
      17: areturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: ireturn

  public com.google.common.collect.ImmutableMap<C, V> row(R);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokevirtual #15                 // Method containsRow:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
      17: aload_0
      18: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      21: invokestatic  #13                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      24: goto          30
      27: invokestatic  #14                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      30: areturn

  public com.google.common.collect.ImmutableSet<R> rowKeySet();
    Code:
       0: aload_0
       1: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
       4: invokestatic  #11                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public com.google.common.collect.ImmutableMap<R, java.util.Map<C, V>> rowMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
       4: aload_0
       5: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
       8: aload_0
       9: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      12: invokestatic  #13                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      15: invokestatic  #13                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      18: areturn

  public int size();
    Code:
       0: iconst_1
       1: ireturn

  public com.google.common.collect.ImmutableCollection<V> values();
    Code:
       0: aload_0
       1: getfield      #5                  // Field singleValue:Ljava/lang/Object;
       4: invokestatic  #11                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #18                 // class com/google/common/collect/Table
      11: ifeq          103
      14: aload_1
      15: checkcast     #18                 // class com/google/common/collect/Table
      18: astore_2
      19: aload_2
      20: invokeinterface #19,  1           // InterfaceMethod com/google/common/collect/Table.size:()I
      25: iconst_1
      26: if_icmpne     103
      29: aload_2
      30: invokeinterface #20,  1           // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
      35: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #23                 // class com/google/common/collect/Table$Cell
      48: astore_3
      49: aload_0
      50: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
      53: aload_3
      54: invokeinterface #6,  1            // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
      59: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      62: ifeq          101
      65: aload_0
      66: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
      69: aload_3
      70: invokeinterface #7,  1            // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
      75: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      78: ifeq          101
      81: aload_0
      82: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      85: aload_3
      86: invokeinterface #8,  1            // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
      91: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      94: ifeq          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: ireturn
     103: iconst_0
     104: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #24                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      24: aastore
      25: invokestatic  #25                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      28: ireturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        123
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field singleRowKey:Ljava/lang/Object;
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #30                 // String ={
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field singleColumnKey:Ljava/lang/Object;
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        61
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #5                  // Field singleValue:Ljava/lang/Object;
      40: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #32                 // String }}
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public java.util.Map columnMap();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method columnMap:()Lcom/google/common/collect/ImmutableMap;
       4: areturn

  public java.util.Map rowMap();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method rowMap:()Lcom/google/common/collect/ImmutableMap;
       4: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method values:()Lcom/google/common/collect/ImmutableCollection;
       4: areturn

  public java.util.Set columnKeySet();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method columnKeySet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public java.util.Set rowKeySet();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method rowKeySet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public java.util.Set cellSet();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method cellSet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public java.util.Map column(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method column:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
       5: areturn

  public java.util.Map row(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method row:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
       5: areturn
}
