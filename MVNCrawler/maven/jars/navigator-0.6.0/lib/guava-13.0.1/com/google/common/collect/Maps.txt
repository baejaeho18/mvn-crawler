Compiled from "Maps.java"
public final class com.google.common.collect.Maps {
  static final com.google.common.base.Joiner$MapJoiner STANDARD_JOINER;

  private com.google.common.collect.Maps();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public static <K, V> java.util.HashMap<K, V> newHashMap();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: iload_0
       5: invokestatic  #7                  // Method capacity:(I)I
       8: invokespecial #8                  // Method java/util/HashMap."<init>":(I)V
      11: areturn

  static int capacity(int);
    Code:
       0: iload_0
       1: iconst_3
       2: if_icmpge     21
       5: iload_0
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: iload_0
      18: iconst_1
      19: iadd
      20: ireturn
      21: iload_0
      22: ldc           #10                 // int 1073741824
      24: if_icmpge     33
      27: iload_0
      28: iload_0
      29: iconst_3
      30: idiv
      31: iadd
      32: ireturn
      33: ldc           #11                 // int 2147483647
      35: ireturn

  public static <K, V> java.util.HashMap<K, V> newHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokespecial #12                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap();
    Code:
       0: new           #13                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #13                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> newConcurrentMap();
    Code:
       0: new           #16                 // class com/google/common/collect/MapMaker
       3: dup
       4: invokespecial #17                 // Method com/google/common/collect/MapMaker."<init>":()V
       7: invokevirtual #18                 // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      10: areturn

  public static <K extends java.lang.Comparable, V> java.util.TreeMap<K, V> newTreeMap();
    Code:
       0: new           #19                 // class java/util/TreeMap
       3: dup
       4: invokespecial #20                 // Method java/util/TreeMap."<init>":()V
       7: areturn

  public static <K, V> java.util.TreeMap<K, V> newTreeMap(java.util.SortedMap<K, ? extends V>);
    Code:
       0: new           #19                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method java/util/TreeMap."<init>":(Ljava/util/SortedMap;)V
       8: areturn

  public static <C, K extends C, V> java.util.TreeMap<K, V> newTreeMap(java.util.Comparator<C>);
    Code:
       0: new           #19                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #22                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.lang.Class<K>);
    Code:
       0: new           #23                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #25                 // class java/lang/Class
      11: invokespecial #26                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      14: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: new           #23                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokespecial #27                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.IdentityHashMap<K, V> newIdentityHashMap();
    Code:
       0: new           #28                 // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #29                 // Method java/util/IdentityHashMap."<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #30                 // class java/util/SortedMap
       4: ifeq          20
       7: aload_0
       8: checkcast     #30                 // class java/util/SortedMap
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokestatic  #31                 // Method difference:(Ljava/util/SortedMap;Ljava/util/Map;)Lcom/google/common/collect/SortedMapDifference;
      17: astore_3
      18: aload_3
      19: areturn
      20: aload_0
      21: aload_1
      22: invokestatic  #32                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      25: invokestatic  #33                 // Method difference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;)Lcom/google/common/collect/MapDifference;
      28: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>);
    Code:
       0: aload_2
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #34                 // Method newHashMap:()Ljava/util/HashMap;
       8: astore_3
       9: new           #5                  // class java/util/HashMap
      12: dup
      13: aload_1
      14: invokespecial #12                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      17: astore        4
      19: invokestatic  #34                 // Method newHashMap:()Ljava/util/HashMap;
      22: astore        5
      24: invokestatic  #34                 // Method newHashMap:()Ljava/util/HashMap;
      27: astore        6
      29: iconst_1
      30: istore        7
      32: aload_0
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        8
      45: aload         8
      47: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          173
      55: aload         8
      57: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #39                 // class java/util/Map$Entry
      65: astore        9
      67: aload         9
      69: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: astore        10
      76: aload         9
      78: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      83: astore        11
      85: aload_1
      86: aload         10
      88: invokeinterface #42,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      93: ifeq          156
      96: aload         4
      98: aload         10
     100: invokeinterface #43,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     105: astore        12
     107: aload_2
     108: aload         11
     110: aload         12
     112: invokevirtual #44                 // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
     115: ifeq          133
     118: aload         5
     120: aload         10
     122: aload         11
     124: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: goto          153
     133: iconst_0
     134: istore        7
     136: aload         6
     138: aload         10
     140: aload         11
     142: aload         12
     144: invokestatic  #46                 // Method com/google/common/collect/Maps$ValueDifferenceImpl.create:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/MapDifference$ValueDifference;
     147: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: goto          170
     156: iconst_0
     157: istore        7
     159: aload_3
     160: aload         10
     162: aload         11
     164: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: goto          45
     173: iload         7
     175: ifeq          192
     178: aload         4
     180: invokeinterface #47,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     185: ifeq          192
     188: iconst_1
     189: goto          193
     192: iconst_0
     193: istore        8
     195: iload         8
     197: aload_3
     198: aload         4
     200: aload         5
     202: aload         6
     204: invokestatic  #48                 // Method mapDifference:(ZLjava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Lcom/google/common/collect/MapDifference;
     207: areturn

  private static <K, V> com.google.common.collect.MapDifference<K, V> mapDifference(boolean, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, com.google.common.collect.MapDifference$ValueDifference<V>>);
    Code:
       0: new           #49                 // class com/google/common/collect/Maps$MapDifferenceImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokestatic  #50                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       9: aload_2
      10: invokestatic  #50                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      13: aload_3
      14: invokestatic  #50                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      17: aload         4
      19: invokestatic  #50                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      22: invokespecial #51                 // Method com/google/common/collect/Maps$MapDifferenceImpl."<init>":(ZLjava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      25: areturn

  public static <K, V> com.google.common.collect.SortedMapDifference<K, V> difference(java.util.SortedMap<K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokeinterface #52,  1           // InterfaceMethod java/util/SortedMap.comparator:()Ljava/util/Comparator;
      16: invokestatic  #53                 // Method orNaturalOrder:(Ljava/util/Comparator;)Ljava/util/Comparator;
      19: astore_2
      20: aload_2
      21: invokestatic  #54                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      24: astore_3
      25: aload_2
      26: invokestatic  #54                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      29: astore        4
      31: aload         4
      33: aload_1
      34: invokeinterface #55,  2           // InterfaceMethod java/util/SortedMap.putAll:(Ljava/util/Map;)V
      39: aload_2
      40: invokestatic  #54                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      43: astore        5
      45: aload_2
      46: invokestatic  #54                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      49: astore        6
      51: iconst_1
      52: istore        7
      54: aload_0
      55: invokeinterface #56,  1           // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
      60: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore        8
      67: aload         8
      69: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          194
      77: aload         8
      79: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #39                 // class java/util/Map$Entry
      87: astore        9
      89: aload         9
      91: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      96: astore        10
      98: aload         9
     100: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     105: astore        11
     107: aload_1
     108: aload         10
     110: invokeinterface #42,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     115: ifeq          177
     118: aload         4
     120: aload         10
     122: invokeinterface #57,  2           // InterfaceMethod java/util/SortedMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     127: astore        12
     129: aload         11
     131: aload         12
     133: invokestatic  #58                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     136: ifeq          154
     139: aload         5
     141: aload         10
     143: aload         11
     145: invokeinterface #59,  3           // InterfaceMethod java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: goto          174
     154: iconst_0
     155: istore        7
     157: aload         6
     159: aload         10
     161: aload         11
     163: aload         12
     165: invokestatic  #46                 // Method com/google/common/collect/Maps$ValueDifferenceImpl.create:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/MapDifference$ValueDifference;
     168: invokeinterface #59,  3           // InterfaceMethod java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     173: pop
     174: goto          191
     177: iconst_0
     178: istore        7
     180: aload_3
     181: aload         10
     183: aload         11
     185: invokeinterface #59,  3           // InterfaceMethod java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     190: pop
     191: goto          67
     194: iload         7
     196: ifeq          213
     199: aload         4
     201: invokeinterface #60,  1           // InterfaceMethod java/util/SortedMap.isEmpty:()Z
     206: ifeq          213
     209: iconst_1
     210: goto          214
     213: iconst_0
     214: istore        8
     216: iload         8
     218: aload_3
     219: aload         4
     221: aload         5
     223: aload         6
     225: invokestatic  #61                 // Method sortedMapDifference:(ZLjava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)Lcom/google/common/collect/SortedMapDifference;
     228: areturn

  private static <K, V> com.google.common.collect.SortedMapDifference<K, V> sortedMapDifference(boolean, java.util.SortedMap<K, V>, java.util.SortedMap<K, V>, java.util.SortedMap<K, V>, java.util.SortedMap<K, com.google.common.collect.MapDifference$ValueDifference<V>>);
    Code:
       0: new           #62                 // class com/google/common/collect/Maps$SortedMapDifferenceImpl
       3: dup
       4: iload_0
       5: aload_1
       6: invokestatic  #63                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
       9: aload_2
      10: invokestatic  #63                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      13: aload_3
      14: invokestatic  #63                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      17: aload         4
      19: invokestatic  #63                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      22: invokespecial #64                 // Method com/google/common/collect/Maps$SortedMapDifferenceImpl."<init>":(ZLjava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V
      25: areturn

  static <E> java.util.Comparator<? super E> orNaturalOrder(java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: ifnull        6
       4: aload_0
       5: areturn
       6: invokestatic  #65                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       9: areturn

  static <K, V> java.util.Map<K, V> asMap(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_0
       1: instanceof    #66                 // class java/util/SortedSet
       4: ifeq          16
       7: aload_0
       8: checkcast     #66                 // class java/util/SortedSet
      11: aload_1
      12: invokestatic  #67                 // Method asMap:(Ljava/util/SortedSet;Lcom/google/common/base/Function;)Ljava/util/SortedMap;
      15: areturn
      16: new           #68                 // class com/google/common/collect/Maps$AsMapView
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #69                 // Method com/google/common/collect/Maps$AsMapView."<init>":(Ljava/util/Set;Lcom/google/common/base/Function;)V
      25: areturn

  static <K, V> java.util.SortedMap<K, V> asMap(java.util.SortedSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #70                 // class com/google/common/collect/Maps$SortedAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #71                 // Method com/google/common/collect/Maps$SortedAsMapView."<init>":(Ljava/util/SortedSet;Lcom/google/common/base/Function;)V
       9: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.lang.Iterable<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #73                 // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.util.Iterator<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #74                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       8: astore_2
       9: aload_0
      10: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_0
      19: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_1
      27: aload_3
      28: invokeinterface #75,  2           // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_3
      34: invokevirtual #76                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      37: pop
      38: goto          9
      41: aload_2
      42: invokevirtual #77                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      45: areturn

  public static com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> fromProperties(java.util.Properties);
    Code:
       0: invokestatic  #74                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       3: astore_1
       4: aload_0
       5: invokevirtual #78                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
       8: astore_2
       9: aload_2
      10: invokeinterface #79,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          42
      18: aload_2
      19: invokeinterface #80,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: checkcast     #81                 // class java/lang/String
      27: astore_3
      28: aload_1
      29: aload_3
      30: aload_0
      31: aload_3
      32: invokevirtual #82                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #76                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      38: pop
      39: goto          9
      42: aload_1
      43: invokevirtual #77                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      46: areturn

  public static <K, V> java.util.Map$Entry<K, V> immutableEntry(K, V);
    Code:
       0: new           #83                 // class com/google/common/collect/ImmutableEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #84                 // Method com/google/common/collect/ImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  static <K, V> java.util.Set<java.util.Map$Entry<K, V>> unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #85                 // class com/google/common/collect/Maps$UnmodifiableEntrySet
       3: dup
       4: aload_0
       5: invokestatic  #86                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       8: invokespecial #87                 // Method com/google/common/collect/Maps$UnmodifiableEntrySet."<init>":(Ljava/util/Set;)V
      11: areturn

  static <K, V> java.util.Map$Entry<K, V> unmodifiableEntry(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #88                 // class com/google/common/collect/Maps$1
       8: dup
       9: aload_0
      10: invokespecial #89                 // Method com/google/common/collect/Maps$1."<init>":(Ljava/util/Map$Entry;)V
      13: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> synchronizedBiMap(com.google.common.collect.BiMap<K, V>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #90                 // Method com/google/common/collect/Synchronized.biMap:(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Lcom/google/common/collect/BiMap;
       5: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V>);
    Code:
       0: new           #91                 // class com/google/common/collect/Maps$UnmodifiableBiMap
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #92                 // Method com/google/common/collect/Maps$UnmodifiableBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/collect/BiMap;)V
       9: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformValues(java.util.Map<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #94                 // Method transformEntries:(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
       8: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformValues(java.util.SortedMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #95                 // Method transformEntries:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformValues(java.util.NavigableMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #93                 // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #96                 // Method transformEntries:(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/NavigableMap;
       8: areturn

  private static <K, V1, V2> com.google.common.collect.Maps$EntryTransformer<K, V1, V2> asEntryTransformer(com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #97                 // class com/google/common/collect/Maps$2
       8: dup
       9: aload_0
      10: invokespecial #98                 // Method com/google/common/collect/Maps$2."<init>":(Lcom/google/common/base/Function;)V
      13: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformEntries(java.util.Map<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: instanceof    #30                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #30                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #95                 // Method transformEntries:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
      15: areturn
      16: new           #99                 // class com/google/common/collect/Maps$TransformedEntriesMap
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #100                // Method com/google/common/collect/Maps$TransformedEntriesMap."<init>":(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)V
      25: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformEntries(java.util.SortedMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method com/google/common/collect/Platform.mapsTransformEntriesSortedMap:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
       5: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformEntries(java.util.NavigableMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #102                // class com/google/common/collect/Maps$TransformedEntriesNavigableMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #103                // Method com/google/common/collect/Maps$TransformedEntriesNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  static <K, V1, V2> java.util.SortedMap<K, V2> transformEntriesIgnoreNavigable(java.util.SortedMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #104                // class com/google/common/collect/Maps$TransformedEntriesSortedMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #105                // Method com/google/common/collect/Maps$TransformedEntriesSortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  public static <K, V> java.util.Map<K, V> filterKeys(java.util.Map<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: instanceof    #30                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #30                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #106                // Method filterKeys:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      15: areturn
      16: aload_1
      17: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: new           #107                // class com/google/common/collect/Maps$3
      24: dup
      25: aload_1
      26: invokespecial #108                // Method com/google/common/collect/Maps$3."<init>":(Lcom/google/common/base/Predicate;)V
      29: astore_2
      30: aload_0
      31: instanceof    #109                // class com/google/common/collect/Maps$AbstractFilteredMap
      34: ifeq          48
      37: aload_0
      38: checkcast     #109                // class com/google/common/collect/Maps$AbstractFilteredMap
      41: aload_2
      42: invokestatic  #110                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      45: goto          64
      48: new           #111                // class com/google/common/collect/Maps$FilteredKeyMap
      51: dup
      52: aload_0
      53: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #112                // class java/util/Map
      59: aload_1
      60: aload_2
      61: invokespecial #113                // Method com/google/common/collect/Maps$FilteredKeyMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V
      64: areturn

  public static <K, V> java.util.SortedMap<K, V> filterKeys(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #114                // class com/google/common/collect/Maps$4
       8: dup
       9: aload_1
      10: invokespecial #115                // Method com/google/common/collect/Maps$4."<init>":(Lcom/google/common/base/Predicate;)V
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokestatic  #116                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      19: areturn

  public static <K, V> java.util.Map<K, V> filterValues(java.util.Map<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: instanceof    #30                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #30                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #117                // Method filterValues:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      15: areturn
      16: aload_1
      17: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: new           #118                // class com/google/common/collect/Maps$5
      24: dup
      25: aload_1
      26: invokespecial #119                // Method com/google/common/collect/Maps$5."<init>":(Lcom/google/common/base/Predicate;)V
      29: astore_2
      30: aload_0
      31: aload_2
      32: invokestatic  #120                // Method filterEntries:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      35: areturn

  public static <K, V> java.util.SortedMap<K, V> filterValues(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #121                // class com/google/common/collect/Maps$6
       8: dup
       9: aload_1
      10: invokespecial #122                // Method com/google/common/collect/Maps$6."<init>":(Lcom/google/common/base/Predicate;)V
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokestatic  #116                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      19: areturn

  public static <K, V> java.util.Map<K, V> filterEntries(java.util.Map<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: instanceof    #30                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #30                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #116                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      15: areturn
      16: aload_1
      17: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: instanceof    #109                // class com/google/common/collect/Maps$AbstractFilteredMap
      25: ifeq          39
      28: aload_0
      29: checkcast     #109                // class com/google/common/collect/Maps$AbstractFilteredMap
      32: aload_1
      33: invokestatic  #110                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      36: goto          54
      39: new           #123                // class com/google/common/collect/Maps$FilteredEntryMap
      42: dup
      43: aload_0
      44: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #112                // class java/util/Map
      50: aload_1
      51: invokespecial #124                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      54: areturn

  public static <K, V> java.util.SortedMap<K, V> filterEntries(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #125                // class com/google/common/collect/Maps$FilteredEntrySortedMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #125                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      16: aload_1
      17: invokestatic  #126                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntrySortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      20: goto          38
      23: new           #125                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      26: dup
      27: aload_0
      28: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #30                 // class java/util/SortedMap
      34: aload_1
      35: invokespecial #127                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  private static <K, V> java.util.Map<K, V> filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #128                // Field com/google/common/collect/Maps$AbstractFilteredMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #129                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #123                // class com/google/common/collect/Maps$FilteredEntryMap
      12: dup
      13: aload_0
      14: getfield      #130                // Field com/google/common/collect/Maps$AbstractFilteredMap.unfiltered:Ljava/util/Map;
      17: aload_2
      18: invokespecial #124                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> java.util.SortedMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #131                // Field com/google/common/collect/Maps$FilteredEntrySortedMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #129                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #125                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      12: dup
      13: aload_0
      14: invokevirtual #132                // Method com/google/common/collect/Maps$FilteredEntrySortedMap.sortedMap:()Ljava/util/SortedMap;
      17: aload_2
      18: invokespecial #127                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  public static <K, V> java.util.NavigableMap<K, V> unmodifiableNavigableMap(java.util.NavigableMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #133                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
       9: ifeq          14
      12: aload_0
      13: areturn
      14: new           #133                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
      17: dup
      18: aload_0
      19: invokespecial #134                // Method com/google/common/collect/Maps$UnmodifiableNavigableMap."<init>":(Ljava/util/NavigableMap;)V
      22: areturn

  private static <K, V> java.util.Map$Entry<K, V> unmodifiableOrNull(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokestatic  #135                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      12: areturn

  public static <K, V> java.util.NavigableMap<K, V> synchronizedNavigableMap(java.util.NavigableMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #136                // Method com/google/common/collect/Synchronized.navigableMap:(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
       4: areturn

  static <V> V safeGet(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #137,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn
       8: astore_2
       9: aconst_null
      10: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException

  static boolean safeContainsKey(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #42,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       7: ireturn
       8: astore_2
       9: iconst_0
      10: ireturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/ClassCastException

  static <K, V> boolean containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #39                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #39                 // class java/util/Map$Entry
      14: invokestatic  #135                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #139,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      22: ireturn

  static <K, V> boolean removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #39                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #39                 // class java/util/Map$Entry
      14: invokestatic  #135                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #140,  2          // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      22: ireturn

  static boolean equalsImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #112                // class java/util/Map
      11: ifeq          35
      14: aload_1
      15: checkcast     #112                // class java/util/Map
      18: astore_2
      19: aload_0
      20: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: aload_2
      26: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokevirtual #141                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ireturn
      35: iconst_0
      36: ireturn

  static int hashCodeImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokestatic  #142                // Method com/google/common/collect/Sets.hashCodeImpl:(Ljava/util/Set;)I
       9: ireturn

  static java.lang.String toStringImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #143,  1          // InterfaceMethod java/util/Map.size:()I
       6: invokestatic  #144                // Method com/google/common/collect/Collections2.newStringBuilderForCollection:(I)Ljava/lang/StringBuilder;
       9: bipush        123
      11: invokevirtual #145                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: astore_1
      15: getstatic     #146                // Field STANDARD_JOINER:Lcom/google/common/base/Joiner$MapJoiner;
      18: aload_1
      19: aload_0
      20: invokevirtual #147                // Method com/google/common/base/Joiner$MapJoiner.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: bipush        125
      27: invokevirtual #145                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: invokevirtual #148                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  static <K, V> void putAllImpl(java.util.Map<K, V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #39                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          12
      53: return

  static boolean containsKeyImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          49
      21: aload_2
      22: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #39                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: aload_1
      38: invokestatic  #58                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          12
      49: iconst_0
      50: ireturn

  static boolean containsValueImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          49
      21: aload_2
      22: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #39                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: aload_1
      38: invokestatic  #58                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: goto          12
      49: iconst_0
      50: ireturn

  static <K, V> java.util.Iterator<K> keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #149                // class com/google/common/collect/Maps$7
       3: dup
       4: aload_0
       5: invokespecial #150                // Method com/google/common/collect/Maps$7."<init>":(Ljava/util/Iterator;)V
       8: areturn

  static <K> K keyOrNull(java.util.Map$Entry<K, ?>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: areturn

  static <K, V> java.util.Iterator<V> valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #151                // class com/google/common/collect/Maps$8
       3: dup
       4: aload_0
       5: invokespecial #152                // Method com/google/common/collect/Maps$8."<init>":(Ljava/util/Iterator;)V
       8: areturn

  static <K, V> com.google.common.collect.UnmodifiableIterator<V> valueIterator(com.google.common.collect.UnmodifiableIterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #153                // class com/google/common/collect/Maps$9
       3: dup
       4: aload_0
       5: invokespecial #154                // Method com/google/common/collect/Maps$9."<init>":(Lcom/google/common/collect/UnmodifiableIterator;)V
       8: areturn

  static java.util.Map$Entry access$300(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method unmodifiableOrNull:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
       4: areturn

  static {};
    Code:
       0: getstatic     #155                // Field com/google/common/collect/Collections2.STANDARD_JOINER:Lcom/google/common/base/Joiner;
       3: ldc           #156                // String =
       5: invokevirtual #157                // Method com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
       8: putstatic     #146                // Field STANDARD_JOINER:Lcom/google/common/base/Joiner$MapJoiner;
      11: return
}
