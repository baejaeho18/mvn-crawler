Compiled from "AbstractScheduledService.java"
class com.google.common.util.concurrent.AbstractScheduledService$1 extends com.google.common.util.concurrent.AbstractService {
  private volatile java.util.concurrent.Future<?> runningTask;

  private volatile java.util.concurrent.ScheduledExecutorService executorService;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private final java.lang.Runnable task;

  final com.google.common.util.concurrent.AbstractScheduledService this$0;

  com.google.common.util.concurrent.AbstractScheduledService$1(com.google.common.util.concurrent.AbstractScheduledService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lcom/google/common/util/concurrent/AbstractScheduledService;
       5: aload_0
       6: invokespecial #6                  // Method com/google/common/util/concurrent/AbstractService."<init>":()V
       9: aload_0
      10: new           #7                  // class java/util/concurrent/locks/ReentrantLock
      13: dup
      14: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      17: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      20: aload_0
      21: new           #9                  // class com/google/common/util/concurrent/AbstractScheduledService$1$1
      24: dup
      25: aload_0
      26: invokespecial #10                 // Method com/google/common/util/concurrent/AbstractScheduledService$1$1."<init>":(Lcom/google/common/util/concurrent/AbstractScheduledService$1;)V
      29: putfield      #1                  // Field task:Ljava/lang/Runnable;
      32: return

  protected final void doStart();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field this$0:Lcom/google/common/util/concurrent/AbstractScheduledService;
       5: invokevirtual #11                 // Method com/google/common/util/concurrent/AbstractScheduledService.executor:()Ljava/util/concurrent/ScheduledExecutorService;
       8: putfield      #2                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      11: aload_0
      12: getfield      #2                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      15: new           #12                 // class com/google/common/util/concurrent/AbstractScheduledService$1$2
      18: dup
      19: aload_0
      20: invokespecial #13                 // Method com/google/common/util/concurrent/AbstractScheduledService$1$2."<init>":(Lcom/google/common/util/concurrent/AbstractScheduledService$1;)V
      23: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      28: return

  protected final void doStop();
    Code:
       0: aload_0
       1: getfield      #3                  // Field runningTask:Ljava/util/concurrent/Future;
       4: iconst_0
       5: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      10: pop
      11: aload_0
      12: getfield      #2                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
      15: new           #16                 // class com/google/common/util/concurrent/AbstractScheduledService$1$3
      18: dup
      19: aload_0
      20: invokespecial #17                 // Method com/google/common/util/concurrent/AbstractScheduledService$1$3."<init>":(Lcom/google/common/util/concurrent/AbstractScheduledService$1;)V
      23: invokeinterface #14,  2           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.execute:(Ljava/lang/Runnable;)V
      28: return

  static java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: areturn

  static java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$1, java.util.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field runningTask:Ljava/util/concurrent/Future;
       6: areturn

  static java.util.concurrent.ScheduledExecutorService access$500(com.google.common.util.concurrent.AbstractScheduledService$1);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executorService:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static java.lang.Runnable access$600(com.google.common.util.concurrent.AbstractScheduledService$1);
    Code:
       0: aload_0
       1: getfield      #1                  // Field task:Ljava/lang/Runnable;
       4: areturn
}
