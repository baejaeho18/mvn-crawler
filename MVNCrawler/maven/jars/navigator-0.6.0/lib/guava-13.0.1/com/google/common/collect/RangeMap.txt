Compiled from "RangeMap.java"
final class com.google.common.collect.RangeMap<K extends java.lang.Comparable, V> implements com.google.common.base.Function<K, V>, java.io.Serializable {
  private final java.util.NavigableMap<com.google.common.collect.Cut<K>, com.google.common.collect.RangeMap$RangeValue<K, V>> map;

  private static final long serialVersionUID;

  static final boolean $assertionsDisabled;

  public static <K extends java.lang.Comparable, V> com.google.common.collect.RangeMap<K, V> create();
    Code:
       0: new           #1                  // class com/google/common/collect/RangeMap
       3: dup
       4: new           #2                  // class java/util/TreeMap
       7: dup
       8: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      11: invokespecial #4                  // Method "<init>":(Ljava/util/NavigableMap;)V
      14: areturn

  private com.google.common.collect.RangeMap(java.util.NavigableMap<com.google.common.collect.Cut<K>, com.google.common.collect.RangeMap$RangeValue<K, V>>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field map:Ljava/util/NavigableMap;
       9: return

  public V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method get:(Ljava/lang/Comparable;)Ljava/lang/Object;
       5: areturn

  public V get(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/NavigableMap;
       4: aload_1
       5: invokestatic  #8                  // Method com/google/common/collect/Cut.aboveValue:(Ljava/lang/Comparable;)Lcom/google/common/collect/Cut;
       8: invokeinterface #9,  2            // InterfaceMethod java/util/NavigableMap.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      13: astore_2
      14: aload_2
      15: ifnull        53
      18: aload_2
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      24: checkcast     #11                 // class com/google/common/collect/RangeMap$RangeValue
      27: invokevirtual #12                 // Method com/google/common/collect/RangeMap$RangeValue.getKey:()Ljava/lang/Object;
      30: checkcast     #13                 // class com/google/common/collect/Range
      33: aload_1
      34: invokevirtual #14                 // Method com/google/common/collect/Range.contains:(Ljava/lang/Comparable;)Z
      37: ifeq          53
      40: aload_2
      41: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #11                 // class com/google/common/collect/RangeMap$RangeValue
      49: invokevirtual #15                 // Method com/google/common/collect/RangeMap$RangeValue.getValue:()Ljava/lang/Object;
      52: areturn
      53: aconst_null
      54: areturn

  public void put(com.google.common.collect.Range<K>, V);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: invokevirtual #17                 // Method com/google/common/collect/Range.isEmpty:()Z
      14: ifeq          18
      17: return
      18: aload_0
      19: aload_1
      20: invokevirtual #18                 // Method clear:(Lcom/google/common/collect/Range;)V
      23: aload_0
      24: new           #11                 // class com/google/common/collect/RangeMap$RangeValue
      27: dup
      28: aload_1
      29: aload_2
      30: invokespecial #19                 // Method com/google/common/collect/RangeMap$RangeValue."<init>":(Lcom/google/common/collect/Range;Ljava/lang/Object;)V
      33: invokespecial #20                 // Method putRange:(Lcom/google/common/collect/RangeMap$RangeValue;)V
      36: return

  public void putAll(com.google.common.collect.RangeMap<K, V>);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: getfield      #6                  // Field map:Ljava/util/NavigableMap;
       9: invokeinterface #21,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      14: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          57
      29: aload_2
      30: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #11                 // class com/google/common/collect/RangeMap$RangeValue
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokevirtual #12                 // Method com/google/common/collect/RangeMap$RangeValue.getKey:()Ljava/lang/Object;
      44: checkcast     #13                 // class com/google/common/collect/Range
      47: aload_3
      48: invokevirtual #15                 // Method com/google/common/collect/RangeMap$RangeValue.getValue:()Ljava/lang/Object;
      51: invokevirtual #25                 // Method put:(Lcom/google/common/collect/Range;Ljava/lang/Object;)V
      54: goto          20
      57: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/NavigableMap;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/NavigableMap.clear:()V
       9: return

  public void clear(com.google.common.collect.Range<K>);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokevirtual #17                 // Method com/google/common/collect/Range.isEmpty:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #6                  // Field map:Ljava/util/NavigableMap;
      17: aload_1
      18: getfield      #27                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
      21: invokeinterface #9,  2            // InterfaceMethod java/util/NavigableMap.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      26: astore_2
      27: aload_2
      28: ifnull        113
      31: aload_2
      32: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: checkcast     #11                 // class com/google/common/collect/RangeMap$RangeValue
      40: astore_3
      41: aload_3
      42: invokevirtual #28                 // Method com/google/common/collect/RangeMap$RangeValue.getUpperBound:()Lcom/google/common/collect/Cut;
      45: astore        4
      47: aload         4
      49: aload_1
      50: getfield      #27                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
      53: invokevirtual #29                 // Method com/google/common/collect/Cut.compareTo:(Lcom/google/common/collect/Cut;)I
      56: iflt          113
      59: aload_3
      60: aload_1
      61: getfield      #27                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
      64: invokevirtual #30                 // Method com/google/common/collect/RangeMap$RangeValue.withUpperBound:(Lcom/google/common/collect/Cut;)Lcom/google/common/collect/RangeMap$RangeValue;
      67: astore        5
      69: aload         5
      71: ifnonnull     82
      74: aload_0
      75: aload_3
      76: invokespecial #31                 // Method removeRange:(Lcom/google/common/collect/RangeMap$RangeValue;)V
      79: goto          88
      82: aload_0
      83: aload         5
      85: invokespecial #20                 // Method putRange:(Lcom/google/common/collect/RangeMap$RangeValue;)V
      88: aload         4
      90: aload_1
      91: getfield      #32                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
      94: invokevirtual #29                 // Method com/google/common/collect/Cut.compareTo:(Lcom/google/common/collect/Cut;)I
      97: iflt          113
     100: aload_0
     101: aload_3
     102: aload_1
     103: getfield      #32                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     106: invokevirtual #33                 // Method com/google/common/collect/RangeMap$RangeValue.withLowerBound:(Lcom/google/common/collect/Cut;)Lcom/google/common/collect/RangeMap$RangeValue;
     109: invokespecial #20                 // Method putRange:(Lcom/google/common/collect/RangeMap$RangeValue;)V
     112: return
     113: aload_0
     114: getfield      #6                  // Field map:Ljava/util/NavigableMap;
     117: aload_1
     118: getfield      #32                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     121: invokeinterface #9,  2            // InterfaceMethod java/util/NavigableMap.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
     126: astore_3
     127: aload_3
     128: ifnull        180
     131: aload_3
     132: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     137: checkcast     #11                 // class com/google/common/collect/RangeMap$RangeValue
     140: astore        4
     142: aload         4
     144: invokevirtual #28                 // Method com/google/common/collect/RangeMap$RangeValue.getUpperBound:()Lcom/google/common/collect/Cut;
     147: astore        5
     149: aload         5
     151: aload_1
     152: getfield      #32                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     155: invokevirtual #29                 // Method com/google/common/collect/Cut.compareTo:(Lcom/google/common/collect/Cut;)I
     158: iflt          180
     161: aload_0
     162: aload         4
     164: invokespecial #31                 // Method removeRange:(Lcom/google/common/collect/RangeMap$RangeValue;)V
     167: aload_0
     168: aload         4
     170: aload_1
     171: getfield      #32                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     174: invokevirtual #33                 // Method com/google/common/collect/RangeMap$RangeValue.withLowerBound:(Lcom/google/common/collect/Cut;)Lcom/google/common/collect/RangeMap$RangeValue;
     177: invokespecial #20                 // Method putRange:(Lcom/google/common/collect/RangeMap$RangeValue;)V
     180: aload_0
     181: getfield      #6                  // Field map:Ljava/util/NavigableMap;
     184: aload_1
     185: getfield      #27                 // Field com/google/common/collect/Range.lowerBound:Lcom/google/common/collect/Cut;
     188: aload_1
     189: getfield      #32                 // Field com/google/common/collect/Range.upperBound:Lcom/google/common/collect/Cut;
     192: invokeinterface #34,  3           // InterfaceMethod java/util/NavigableMap.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
     197: invokeinterface #35,  1           // InterfaceMethod java/util/SortedMap.clear:()V
     202: return

  private void removeRange(com.google.common.collect.RangeMap$RangeValue<K, V>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/NavigableMap;
       4: aload_1
       5: invokevirtual #36                 // Method com/google/common/collect/RangeMap$RangeValue.getLowerBound:()Lcom/google/common/collect/Cut;
       8: invokeinterface #37,  2           // InterfaceMethod java/util/NavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #11                 // class com/google/common/collect/RangeMap$RangeValue
      16: astore_2
      17: getstatic     #38                 // Field $assertionsDisabled:Z
      20: ifne          36
      23: aload_2
      24: aload_1
      25: if_acmpeq     36
      28: new           #39                 // class java/lang/AssertionError
      31: dup
      32: invokespecial #40                 // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: return

  private void putRange(com.google.common.collect.RangeMap$RangeValue<K, V>);
    Code:
       0: aload_1
       1: ifnull        32
       4: aload_1
       5: invokevirtual #12                 // Method com/google/common/collect/RangeMap$RangeValue.getKey:()Ljava/lang/Object;
       8: checkcast     #13                 // class com/google/common/collect/Range
      11: invokevirtual #17                 // Method com/google/common/collect/Range.isEmpty:()Z
      14: ifne          32
      17: aload_0
      18: getfield      #6                  // Field map:Ljava/util/NavigableMap;
      21: aload_1
      22: invokevirtual #36                 // Method com/google/common/collect/RangeMap$RangeValue.getLowerBound:()Lcom/google/common/collect/Cut;
      25: aload_1
      26: invokeinterface #41,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #1                  // class com/google/common/collect/RangeMap
       4: ifeq          28
       7: aload_0
       8: getfield      #6                  // Field map:Ljava/util/NavigableMap;
      11: aload_1
      12: checkcast     #1                  // class com/google/common/collect/RangeMap
      15: getfield      #6                  // Field map:Ljava/util/NavigableMap;
      18: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/NavigableMap;
       4: invokevirtual #43                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/NavigableMap;
       4: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #45                 // class java/lang/Comparable
       5: invokevirtual #46                 // Method apply:(Ljava/lang/Comparable;)Ljava/lang/Object;
       8: areturn

  static {};
    Code:
       0: ldc_w         #1                  // class com/google/common/collect/RangeMap
       3: invokevirtual #47                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #38                 // Field $assertionsDisabled:Z
      17: return
}
