Compiled from "LongMath.java"
public final class com.google.common.math.LongMath {
  static final long MAX_POWER_OF_SQRT2_UNSIGNED;

  static final byte[] MAX_LOG10_FOR_LEADING_ZEROS;

  static final long[] POWERS_OF_10;

  static final long[] HALF_POWERS_OF_10;

  static final long FLOOR_SQRT_MAX_LONG;

  static final long[] FACTORIALS;

  static final int[] BIGGEST_BINOMIALS;

  static final int[] BIGGEST_SIMPLE_BINOMIALS;

  public static boolean isPowerOfTwo(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: lload_0
      12: lload_0
      13: lconst_1
      14: lsub
      15: land
      16: lconst_0
      17: lcmp
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: iand
      27: ireturn

  public static int log2(long, java.math.RoundingMode);
    Code:
       0: ldc           #5                  // String x
       2: lload_0
       3: invokestatic  #6                  // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;J)J
       6: pop2
       7: getstatic     #7                  // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      10: aload_2
      11: invokevirtual #8                  // Method java/math/RoundingMode.ordinal:()I
      14: iaload
      15: tableswitch   { // 1 to 8
                     1: 60
                     2: 67
                     3: 67
                     4: 75
                     5: 75
                     6: 85
                     7: 85
                     8: 85
               default: 120
          }
      60: lload_0
      61: invokestatic  #9                  // Method isPowerOfTwo:(J)Z
      64: invokestatic  #10                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      67: bipush        63
      69: lload_0
      70: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      73: isub
      74: ireturn
      75: bipush        64
      77: lload_0
      78: lconst_1
      79: lsub
      80: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      83: isub
      84: ireturn
      85: lload_0
      86: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      89: istore_3
      90: ldc2_w        #12                 // long -5402926248376769404l
      93: iload_3
      94: lushr
      95: lstore        4
      97: bipush        63
      99: iload_3
     100: isub
     101: istore        6
     103: lload_0
     104: lload         4
     106: lcmp
     107: ifgt          115
     110: iload         6
     112: goto          119
     115: iload         6
     117: iconst_1
     118: iadd
     119: ireturn
     120: new           #14                 // class java/lang/AssertionError
     123: dup
     124: ldc           #15                 // String impossible
     126: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     129: athrow

  public static int log10(long, java.math.RoundingMode);
    Code:
       0: ldc           #5                  // String x
       2: lload_0
       3: invokestatic  #6                  // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;J)J
       6: pop2
       7: lload_0
       8: invokestatic  #17                 // Method fitsInInt:(J)Z
      11: ifeq          21
      14: lload_0
      15: l2i
      16: aload_2
      17: invokestatic  #18                 // Method com/google/common/math/IntMath.log10:(ILjava/math/RoundingMode;)I
      20: ireturn
      21: lload_0
      22: invokestatic  #19                 // Method log10Floor:(J)I
      25: istore_3
      26: getstatic     #20                 // Field POWERS_OF_10:[J
      29: iload_3
      30: laload
      31: lstore        4
      33: getstatic     #7                  // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      36: aload_2
      37: invokevirtual #8                  // Method java/math/RoundingMode.ordinal:()I
      40: iaload
      41: tableswitch   { // 1 to 8
                     1: 88
                     2: 103
                     3: 103
                     4: 105
                     5: 105
                     6: 120
                     7: 120
                     8: 120
               default: 138
          }
      88: lload_0
      89: lload         4
      91: lcmp
      92: ifne          99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokestatic  #10                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
     103: iload_3
     104: ireturn
     105: lload_0
     106: lload         4
     108: lcmp
     109: ifne          116
     112: iload_3
     113: goto          119
     116: iload_3
     117: iconst_1
     118: iadd
     119: ireturn
     120: lload_0
     121: getstatic     #21                 // Field HALF_POWERS_OF_10:[J
     124: iload_3
     125: laload
     126: lcmp
     127: ifgt          134
     130: iload_3
     131: goto          137
     134: iload_3
     135: iconst_1
     136: iadd
     137: ireturn
     138: new           #14                 // class java/lang/AssertionError
     141: dup
     142: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
     145: athrow

  static int log10Floor(long);
    Code:
       0: getstatic     #23                 // Field MAX_LOG10_FOR_LEADING_ZEROS:[B
       3: lload_0
       4: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
       7: baload
       8: istore_2
       9: lload_0
      10: getstatic     #20                 // Field POWERS_OF_10:[J
      13: iload_2
      14: laload
      15: lsub
      16: bipush        63
      18: lushr
      19: lstore_3
      20: iload_2
      21: lload_3
      22: l2i
      23: isub
      24: ireturn

  public static long pow(long, int);
    Code:
       0: ldc           #24                 // String exponent
       2: iload_2
       3: invokestatic  #25                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc2_w        #26                 // long -2l
      10: lload_0
      11: lcmp
      12: ifgt          125
      15: lload_0
      16: ldc2_w        #28                 // long 2l
      19: lcmp
      20: ifgt          125
      23: lload_0
      24: l2i
      25: tableswitch   { // -2 to 2
                    -2: 100
                    -1: 72
                     0: 60
                     1: 70
                     2: 86
               default: 125
          }
      60: iload_2
      61: ifne          68
      64: lconst_1
      65: goto          69
      68: lconst_0
      69: lreturn
      70: lconst_1
      71: lreturn
      72: iload_2
      73: iconst_1
      74: iand
      75: ifne          82
      78: lconst_1
      79: goto          85
      82: ldc2_w        #30                 // long -1l
      85: lreturn
      86: iload_2
      87: bipush        64
      89: if_icmpge     98
      92: lconst_1
      93: iload_2
      94: lshl
      95: goto          99
      98: lconst_0
      99: lreturn
     100: iload_2
     101: bipush        64
     103: if_icmpge     123
     106: iload_2
     107: iconst_1
     108: iand
     109: ifne          118
     112: lconst_1
     113: iload_2
     114: lshl
     115: goto          122
     118: lconst_1
     119: iload_2
     120: lshl
     121: lneg
     122: lreturn
     123: lconst_0
     124: lreturn
     125: lconst_1
     126: lstore_3
     127: iload_2
     128: lookupswitch  { // 2
                     0: 156
                     1: 158
               default: 162
          }
     156: lload_3
     157: lreturn
     158: lload_3
     159: lload_0
     160: lmul
     161: lreturn
     162: lload_3
     163: iload_2
     164: iconst_1
     165: iand
     166: ifne          173
     169: lconst_1
     170: goto          174
     173: lload_0
     174: lmul
     175: lstore_3
     176: lload_0
     177: lload_0
     178: lmul
     179: lstore_0
     180: iload_2
     181: iconst_1
     182: ishr
     183: istore_2
     184: goto          127

  public static long sqrt(long, java.math.RoundingMode);
    Code:
       0: ldc           #5                  // String x
       2: lload_0
       3: invokestatic  #32                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
       6: pop2
       7: lload_0
       8: invokestatic  #17                 // Method fitsInInt:(J)Z
      11: ifeq          22
      14: lload_0
      15: l2i
      16: aload_2
      17: invokestatic  #33                 // Method com/google/common/math/IntMath.sqrt:(ILjava/math/RoundingMode;)I
      20: i2l
      21: lreturn
      22: lload_0
      23: invokestatic  #34                 // Method sqrtFloor:(J)J
      26: lstore_3
      27: getstatic     #7                  // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      30: aload_2
      31: invokevirtual #8                  // Method java/math/RoundingMode.ordinal:()I
      34: iaload
      35: tableswitch   { // 1 to 8
                     1: 80
                     2: 96
                     3: 96
                     4: 98
                     5: 98
                     6: 114
                     7: 114
                     8: 114
               default: 157
          }
      80: lload_3
      81: lload_3
      82: lmul
      83: lload_0
      84: lcmp
      85: ifne          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: invokestatic  #10                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      96: lload_3
      97: lreturn
      98: lload_3
      99: lload_3
     100: lmul
     101: lload_0
     102: lcmp
     103: ifne          110
     106: lload_3
     107: goto          113
     110: lload_3
     111: lconst_1
     112: ladd
     113: lreturn
     114: lload_3
     115: lload_3
     116: lmul
     117: lload_3
     118: ladd
     119: lstore        5
     121: lload         5
     123: lload_0
     124: lcmp
     125: iflt          132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: lload         5
     135: lconst_0
     136: lcmp
     137: ifge          144
     140: iconst_1
     141: goto          145
     144: iconst_0
     145: ior
     146: ifeq          153
     149: lload_3
     150: goto          156
     153: lload_3
     154: lconst_1
     155: ladd
     156: lreturn
     157: new           #14                 // class java/lang/AssertionError
     160: dup
     161: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
     164: athrow

  private static long sqrtFloor(long);
    Code:
       0: lload_0
       1: l2d
       2: invokestatic  #35                 // Method java/lang/Math.sqrt:(D)D
       5: d2l
       6: lstore_2
       7: lload_2
       8: lload_0
       9: lload_2
      10: ldiv
      11: ladd
      12: iconst_1
      13: lshr
      14: lstore        4
      16: lload         4
      18: lload_2
      19: lcmp
      20: ifne          25
      23: lload_2
      24: lreturn
      25: lload         4
      27: lstore_2
      28: lload_2
      29: lload_0
      30: lload_2
      31: ldiv
      32: ladd
      33: iconst_1
      34: lshr
      35: lstore        4
      37: lload         4
      39: lload_2
      40: lcmp
      41: iflt          25
      44: lload_2
      45: lreturn

  public static long divide(long, long, java.math.RoundingMode);
    Code:
       0: aload         4
       2: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: lload_0
       7: lload_2
       8: ldiv
       9: lstore        5
      11: lload_0
      12: lload_2
      13: lload         5
      15: lmul
      16: lsub
      17: lstore        7
      19: lload         7
      21: lconst_0
      22: lcmp
      23: ifne          29
      26: lload         5
      28: lreturn
      29: iconst_1
      30: lload_0
      31: lload_2
      32: lxor
      33: bipush        63
      35: lshr
      36: l2i
      37: ior
      38: istore        9
      40: getstatic     #7                  // Field com/google/common/math/LongMath$1.$SwitchMap$java$math$RoundingMode:[I
      43: aload         4
      45: invokevirtual #8                  // Method java/math/RoundingMode.ordinal:()I
      48: iaload
      49: tableswitch   { // 1 to 8
                     1: 96
                     2: 111
                     3: 138
                     4: 117
                     5: 123
                     6: 153
                     7: 153
                     8: 153
               default: 243
          }
      96: lload         7
      98: lconst_0
      99: lcmp
     100: ifne          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: invokestatic  #10                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
     111: iconst_0
     112: istore        10
     114: goto          251
     117: iconst_1
     118: istore        10
     120: goto          251
     123: iload         9
     125: ifle          132
     128: iconst_1
     129: goto          133
     132: iconst_0
     133: istore        10
     135: goto          251
     138: iload         9
     140: ifge          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: istore        10
     150: goto          251
     153: lload         7
     155: invokestatic  #37                 // Method java/lang/Math.abs:(J)J
     158: lstore        11
     160: lload         11
     162: lload_2
     163: invokestatic  #37                 // Method java/lang/Math.abs:(J)J
     166: lload         11
     168: lsub
     169: lsub
     170: lstore        13
     172: lload         13
     174: lconst_0
     175: lcmp
     176: ifne          226
     179: aload         4
     181: getstatic     #38                 // Field java/math/RoundingMode.HALF_UP:Ljava/math/RoundingMode;
     184: if_acmpne     191
     187: iconst_1
     188: goto          192
     191: iconst_0
     192: aload         4
     194: getstatic     #39                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
     197: if_acmpne     204
     200: iconst_1
     201: goto          205
     204: iconst_0
     205: lload         5
     207: lconst_1
     208: land
     209: lconst_0
     210: lcmp
     211: ifeq          218
     214: iconst_1
     215: goto          219
     218: iconst_0
     219: iand
     220: ior
     221: istore        10
     223: goto          251
     226: lload         13
     228: lconst_0
     229: lcmp
     230: ifle          237
     233: iconst_1
     234: goto          238
     237: iconst_0
     238: istore        10
     240: goto          251
     243: new           #14                 // class java/lang/AssertionError
     246: dup
     247: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
     250: athrow
     251: iload         10
     253: ifeq          265
     256: lload         5
     258: iload         9
     260: i2l
     261: ladd
     262: goto          267
     265: lload         5
     267: lreturn

  public static int mod(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: i2l
       3: invokestatic  #40                 // Method mod:(JJ)J
       6: l2i
       7: ireturn

  public static long mod(long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifgt          38
       6: new           #41                 // class java/lang/ArithmeticException
       9: dup
      10: new           #42                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #44                 // String Modulus
      19: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_2
      23: invokevirtual #46                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #47                 // String  must be > 0
      28: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #49                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: lload_0
      39: lload_2
      40: lrem
      41: lstore        4
      43: lload         4
      45: lconst_0
      46: lcmp
      47: iflt          55
      50: lload         4
      52: goto          59
      55: lload         4
      57: lload_2
      58: ladd
      59: lreturn

  public static long gcd(long, long);
    Code:
       0: ldc           #50                 // String a
       2: lload_0
       3: invokestatic  #32                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
       6: pop2
       7: ldc           #51                 // String b
       9: lload_2
      10: invokestatic  #32                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;J)J
      13: pop2
      14: lload_0
      15: lconst_0
      16: lcmp
      17: ifne          22
      20: lload_2
      21: lreturn
      22: lload_2
      23: lconst_0
      24: lcmp
      25: ifne          30
      28: lload_0
      29: lreturn
      30: lload_0
      31: invokestatic  #52                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      34: istore        4
      36: lload_0
      37: iload         4
      39: lshr
      40: lstore_0
      41: lload_2
      42: invokestatic  #52                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      45: istore        5
      47: lload_2
      48: iload         5
      50: lshr
      51: lstore_2
      52: lload_0
      53: lload_2
      54: lcmp
      55: ifeq          97
      58: lload_0
      59: lload_2
      60: lsub
      61: lstore        6
      63: lload         6
      65: lload         6
      67: bipush        63
      69: lshr
      70: land
      71: lstore        8
      73: lload         6
      75: lload         8
      77: lsub
      78: lload         8
      80: lsub
      81: lstore_0
      82: lload_2
      83: lload         8
      85: ladd
      86: lstore_2
      87: lload_0
      88: lload_0
      89: invokestatic  #52                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      92: lshr
      93: lstore_0
      94: goto          52
      97: lload_0
      98: iload         4
     100: iload         5
     102: invokestatic  #53                 // Method java/lang/Math.min:(II)I
     105: lshl
     106: lreturn

  public static long checkedAdd(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ladd
       3: lstore        4
       5: lload_0
       6: lload_2
       7: lxor
       8: lconst_0
       9: lcmp
      10: ifge          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: lload_0
      19: lload         4
      21: lxor
      22: lconst_0
      23: lcmp
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ior
      33: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
      36: lload         4
      38: lreturn

  public static long checkedSubtract(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: lsub
       3: lstore        4
       5: lload_0
       6: lload_2
       7: lxor
       8: lconst_0
       9: lcmp
      10: iflt          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: lload_0
      19: lload         4
      21: lxor
      22: lconst_0
      23: lcmp
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ior
      33: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
      36: lload         4
      38: lreturn

  public static long checkedMultiply(long, long);
    Code:
       0: lload_0
       1: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
       4: lload_0
       5: ldc2_w        #30                 // long -1l
       8: lxor
       9: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      12: iadd
      13: lload_2
      14: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      17: iadd
      18: lload_2
      19: ldc2_w        #30                 // long -1l
      22: lxor
      23: invokestatic  #11                 // Method java/lang/Long.numberOfLeadingZeros:(J)I
      26: iadd
      27: istore        4
      29: iload         4
      31: bipush        65
      33: if_icmple     40
      36: lload_0
      37: lload_2
      38: lmul
      39: lreturn
      40: iload         4
      42: bipush        64
      44: if_icmplt     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
      55: lload_0
      56: lconst_0
      57: lcmp
      58: iflt          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: lload_2
      67: ldc2_w        #55                 // long -9223372036854775808l
      70: lcmp
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ior
      80: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
      83: lload_0
      84: lload_2
      85: lmul
      86: lstore        5
      88: lload_0
      89: lconst_0
      90: lcmp
      91: ifeq          103
      94: lload         5
      96: lload_0
      97: ldiv
      98: lload_2
      99: lcmp
     100: ifne          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
     111: lload         5
     113: lreturn

  public static long checkedPow(long, int);
    Code:
       0: ldc           #24                 // String exponent
       2: iload_2
       3: invokestatic  #25                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: lload_0
       8: ldc2_w        #26                 // long -2l
      11: lcmp
      12: iflt          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: lload_0
      21: ldc2_w        #28                 // long 2l
      24: lcmp
      25: ifgt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: iand
      34: ifeq          148
      37: lload_0
      38: l2i
      39: tableswitch   { // -2 to 2
                    -2: 116
                    -1: 84
                     0: 72
                     1: 82
                     2: 98
               default: 148
          }
      72: iload_2
      73: ifne          80
      76: lconst_1
      77: goto          81
      80: lconst_0
      81: lreturn
      82: lconst_1
      83: lreturn
      84: iload_2
      85: iconst_1
      86: iand
      87: ifne          94
      90: lconst_1
      91: goto          97
      94: ldc2_w        #30                 // long -1l
      97: lreturn
      98: iload_2
      99: bipush        63
     101: if_icmpge     108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
     112: lconst_1
     113: iload_2
     114: lshl
     115: lreturn
     116: iload_2
     117: bipush        64
     119: if_icmpge     126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
     130: iload_2
     131: iconst_1
     132: iand
     133: ifne          142
     136: lconst_1
     137: iload_2
     138: lshl
     139: goto          147
     142: ldc2_w        #30                 // long -1l
     145: iload_2
     146: lshl
     147: lreturn
     148: lconst_1
     149: lstore_3
     150: iload_2
     151: lookupswitch  { // 2
                     0: 176
                     1: 178
               default: 184
          }
     176: lload_3
     177: lreturn
     178: lload_3
     179: lload_0
     180: invokestatic  #57                 // Method checkedMultiply:(JJ)J
     183: lreturn
     184: iload_2
     185: iconst_1
     186: iand
     187: ifeq          196
     190: lload_3
     191: lload_0
     192: invokestatic  #57                 // Method checkedMultiply:(JJ)J
     195: lstore_3
     196: iload_2
     197: iconst_1
     198: ishr
     199: istore_2
     200: iload_2
     201: ifle          150
     204: lload_0
     205: ldc2_w        #58                 // long 3037000499l
     208: lcmp
     209: ifgt          216
     212: iconst_1
     213: goto          217
     216: iconst_0
     217: invokestatic  #54                 // Method com/google/common/math/MathPreconditions.checkNoOverflow:(Z)V
     220: lload_0
     221: lload_0
     222: lmul
     223: lstore_0
     224: goto          150

  public static long factorial(int);
    Code:
       0: ldc           #60                 // String n
       2: iload_0
       3: invokestatic  #25                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: getstatic     #61                 // Field FACTORIALS:[J
      11: arraylength
      12: if_icmpge     23
      15: getstatic     #61                 // Field FACTORIALS:[J
      18: iload_0
      19: laload
      20: goto          26
      23: ldc2_w        #62                 // long 9223372036854775807l
      26: lreturn

  public static long binomial(int, int);
    Code:
       0: ldc           #60                 // String n
       2: iload_0
       3: invokestatic  #25                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc           #64                 // String k
       9: iload_1
      10: invokestatic  #25                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
      13: pop
      14: iload_1
      15: iload_0
      16: if_icmpgt     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #65                 // String k (%s) > n (%s)
      26: iconst_2
      27: anewarray     #66                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_1
      33: invokestatic  #67                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: dup
      38: iconst_1
      39: iload_0
      40: invokestatic  #67                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: aastore
      44: invokestatic  #68                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      47: iload_1
      48: iload_0
      49: iconst_1
      50: ishr
      51: if_icmple     58
      54: iload_0
      55: iload_1
      56: isub
      57: istore_1
      58: iload_1
      59: getstatic     #69                 // Field BIGGEST_BINOMIALS:[I
      62: arraylength
      63: if_icmpge     75
      66: iload_0
      67: getstatic     #69                 // Field BIGGEST_BINOMIALS:[I
      70: iload_1
      71: iaload
      72: if_icmple     79
      75: ldc2_w        #62                 // long 9223372036854775807l
      78: lreturn
      79: lconst_1
      80: lstore_2
      81: iload_1
      82: getstatic     #70                 // Field BIGGEST_SIMPLE_BINOMIALS:[I
      85: arraylength
      86: if_icmpge     132
      89: iload_0
      90: getstatic     #70                 // Field BIGGEST_SIMPLE_BINOMIALS:[I
      93: iload_1
      94: iaload
      95: if_icmpgt     132
      98: iconst_0
      99: istore        4
     101: iload         4
     103: iload_1
     104: if_icmpge     129
     107: lload_2
     108: iload_0
     109: iload         4
     111: isub
     112: i2l
     113: lmul
     114: lstore_2
     115: lload_2
     116: iload         4
     118: iconst_1
     119: iadd
     120: i2l
     121: ldiv
     122: lstore_2
     123: iinc          4, 1
     126: goto          101
     129: goto          175
     132: iconst_1
     133: istore        4
     135: iload         4
     137: iload_1
     138: if_icmpgt     175
     141: iload_0
     142: iload         4
     144: invokestatic  #71                 // Method com/google/common/math/IntMath.gcd:(II)I
     147: istore        5
     149: lload_2
     150: iload         4
     152: iload         5
     154: idiv
     155: i2l
     156: ldiv
     157: lstore_2
     158: lload_2
     159: iload_0
     160: iload         5
     162: idiv
     163: i2l
     164: lmul
     165: lstore_2
     166: iinc          4, 1
     169: iinc          0, -1
     172: goto          135
     175: lload_2
     176: lreturn

  static boolean fitsInInt(long);
    Code:
       0: lload_0
       1: l2i
       2: i2l
       3: lload_0
       4: lcmp
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private com.google.common.math.LongMath();
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: bipush        64
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        19
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        18
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        18
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        18
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        18
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        17
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        17
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        17
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        16
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        16
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        16
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        15
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        15
      75: bastore
      76: dup
      77: bipush        13
      79: bipush        15
      81: bastore
      82: dup
      83: bipush        14
      85: bipush        15
      87: bastore
      88: dup
      89: bipush        15
      91: bipush        14
      93: bastore
      94: dup
      95: bipush        16
      97: bipush        14
      99: bastore
     100: dup
     101: bipush        17
     103: bipush        14
     105: bastore
     106: dup
     107: bipush        18
     109: bipush        13
     111: bastore
     112: dup
     113: bipush        19
     115: bipush        13
     117: bastore
     118: dup
     119: bipush        20
     121: bipush        13
     123: bastore
     124: dup
     125: bipush        21
     127: bipush        12
     129: bastore
     130: dup
     131: bipush        22
     133: bipush        12
     135: bastore
     136: dup
     137: bipush        23
     139: bipush        12
     141: bastore
     142: dup
     143: bipush        24
     145: bipush        12
     147: bastore
     148: dup
     149: bipush        25
     151: bipush        11
     153: bastore
     154: dup
     155: bipush        26
     157: bipush        11
     159: bastore
     160: dup
     161: bipush        27
     163: bipush        11
     165: bastore
     166: dup
     167: bipush        28
     169: bipush        10
     171: bastore
     172: dup
     173: bipush        29
     175: bipush        10
     177: bastore
     178: dup
     179: bipush        30
     181: bipush        10
     183: bastore
     184: dup
     185: bipush        31
     187: bipush        9
     189: bastore
     190: dup
     191: bipush        32
     193: bipush        9
     195: bastore
     196: dup
     197: bipush        33
     199: bipush        9
     201: bastore
     202: dup
     203: bipush        34
     205: bipush        9
     207: bastore
     208: dup
     209: bipush        35
     211: bipush        8
     213: bastore
     214: dup
     215: bipush        36
     217: bipush        8
     219: bastore
     220: dup
     221: bipush        37
     223: bipush        8
     225: bastore
     226: dup
     227: bipush        38
     229: bipush        7
     231: bastore
     232: dup
     233: bipush        39
     235: bipush        7
     237: bastore
     238: dup
     239: bipush        40
     241: bipush        7
     243: bastore
     244: dup
     245: bipush        41
     247: bipush        6
     249: bastore
     250: dup
     251: bipush        42
     253: bipush        6
     255: bastore
     256: dup
     257: bipush        43
     259: bipush        6
     261: bastore
     262: dup
     263: bipush        44
     265: bipush        6
     267: bastore
     268: dup
     269: bipush        45
     271: iconst_5
     272: bastore
     273: dup
     274: bipush        46
     276: iconst_5
     277: bastore
     278: dup
     279: bipush        47
     281: iconst_5
     282: bastore
     283: dup
     284: bipush        48
     286: iconst_4
     287: bastore
     288: dup
     289: bipush        49
     291: iconst_4
     292: bastore
     293: dup
     294: bipush        50
     296: iconst_4
     297: bastore
     298: dup
     299: bipush        51
     301: iconst_3
     302: bastore
     303: dup
     304: bipush        52
     306: iconst_3
     307: bastore
     308: dup
     309: bipush        53
     311: iconst_3
     312: bastore
     313: dup
     314: bipush        54
     316: iconst_3
     317: bastore
     318: dup
     319: bipush        55
     321: iconst_2
     322: bastore
     323: dup
     324: bipush        56
     326: iconst_2
     327: bastore
     328: dup
     329: bipush        57
     331: iconst_2
     332: bastore
     333: dup
     334: bipush        58
     336: iconst_1
     337: bastore
     338: dup
     339: bipush        59
     341: iconst_1
     342: bastore
     343: dup
     344: bipush        60
     346: iconst_1
     347: bastore
     348: dup
     349: bipush        61
     351: iconst_0
     352: bastore
     353: dup
     354: bipush        62
     356: iconst_0
     357: bastore
     358: dup
     359: bipush        63
     361: iconst_0
     362: bastore
     363: putstatic     #23                 // Field MAX_LOG10_FOR_LEADING_ZEROS:[B
     366: bipush        19
     368: newarray       long
     370: dup
     371: iconst_0
     372: lconst_1
     373: lastore
     374: dup
     375: iconst_1
     376: ldc2_w        #73                 // long 10l
     379: lastore
     380: dup
     381: iconst_2
     382: ldc2_w        #75                 // long 100l
     385: lastore
     386: dup
     387: iconst_3
     388: ldc2_w        #77                 // long 1000l
     391: lastore
     392: dup
     393: iconst_4
     394: ldc2_w        #79                 // long 10000l
     397: lastore
     398: dup
     399: iconst_5
     400: ldc2_w        #81                 // long 100000l
     403: lastore
     404: dup
     405: bipush        6
     407: ldc2_w        #83                 // long 1000000l
     410: lastore
     411: dup
     412: bipush        7
     414: ldc2_w        #85                 // long 10000000l
     417: lastore
     418: dup
     419: bipush        8
     421: ldc2_w        #87                 // long 100000000l
     424: lastore
     425: dup
     426: bipush        9
     428: ldc2_w        #89                 // long 1000000000l
     431: lastore
     432: dup
     433: bipush        10
     435: ldc2_w        #91                 // long 10000000000l
     438: lastore
     439: dup
     440: bipush        11
     442: ldc2_w        #93                 // long 100000000000l
     445: lastore
     446: dup
     447: bipush        12
     449: ldc2_w        #95                 // long 1000000000000l
     452: lastore
     453: dup
     454: bipush        13
     456: ldc2_w        #97                 // long 10000000000000l
     459: lastore
     460: dup
     461: bipush        14
     463: ldc2_w        #99                 // long 100000000000000l
     466: lastore
     467: dup
     468: bipush        15
     470: ldc2_w        #101                // long 1000000000000000l
     473: lastore
     474: dup
     475: bipush        16
     477: ldc2_w        #103                // long 10000000000000000l
     480: lastore
     481: dup
     482: bipush        17
     484: ldc2_w        #105                // long 100000000000000000l
     487: lastore
     488: dup
     489: bipush        18
     491: ldc2_w        #107                // long 1000000000000000000l
     494: lastore
     495: putstatic     #20                 // Field POWERS_OF_10:[J
     498: bipush        19
     500: newarray       long
     502: dup
     503: iconst_0
     504: ldc2_w        #109                // long 3l
     507: lastore
     508: dup
     509: iconst_1
     510: ldc2_w        #111                // long 31l
     513: lastore
     514: dup
     515: iconst_2
     516: ldc2_w        #113                // long 316l
     519: lastore
     520: dup
     521: iconst_3
     522: ldc2_w        #115                // long 3162l
     525: lastore
     526: dup
     527: iconst_4
     528: ldc2_w        #117                // long 31622l
     531: lastore
     532: dup
     533: iconst_5
     534: ldc2_w        #119                // long 316227l
     537: lastore
     538: dup
     539: bipush        6
     541: ldc2_w        #121                // long 3162277l
     544: lastore
     545: dup
     546: bipush        7
     548: ldc2_w        #123                // long 31622776l
     551: lastore
     552: dup
     553: bipush        8
     555: ldc2_w        #125                // long 316227766l
     558: lastore
     559: dup
     560: bipush        9
     562: ldc2_w        #127                // long 3162277660l
     565: lastore
     566: dup
     567: bipush        10
     569: ldc2_w        #129                // long 31622776601l
     572: lastore
     573: dup
     574: bipush        11
     576: ldc2_w        #131                // long 316227766016l
     579: lastore
     580: dup
     581: bipush        12
     583: ldc2_w        #133                // long 3162277660168l
     586: lastore
     587: dup
     588: bipush        13
     590: ldc2_w        #135                // long 31622776601683l
     593: lastore
     594: dup
     595: bipush        14
     597: ldc2_w        #137                // long 316227766016837l
     600: lastore
     601: dup
     602: bipush        15
     604: ldc2_w        #139                // long 3162277660168379l
     607: lastore
     608: dup
     609: bipush        16
     611: ldc2_w        #141                // long 31622776601683793l
     614: lastore
     615: dup
     616: bipush        17
     618: ldc2_w        #143                // long 316227766016837933l
     621: lastore
     622: dup
     623: bipush        18
     625: ldc2_w        #145                // long 3162277660168379331l
     628: lastore
     629: putstatic     #21                 // Field HALF_POWERS_OF_10:[J
     632: bipush        21
     634: newarray       long
     636: dup
     637: iconst_0
     638: lconst_1
     639: lastore
     640: dup
     641: iconst_1
     642: lconst_1
     643: lastore
     644: dup
     645: iconst_2
     646: ldc2_w        #28                 // long 2l
     649: lastore
     650: dup
     651: iconst_3
     652: ldc2_w        #147                // long 6l
     655: lastore
     656: dup
     657: iconst_4
     658: ldc2_w        #149                // long 24l
     661: lastore
     662: dup
     663: iconst_5
     664: ldc2_w        #151                // long 120l
     667: lastore
     668: dup
     669: bipush        6
     671: ldc2_w        #153                // long 720l
     674: lastore
     675: dup
     676: bipush        7
     678: ldc2_w        #155                // long 5040l
     681: lastore
     682: dup
     683: bipush        8
     685: ldc2_w        #157                // long 40320l
     688: lastore
     689: dup
     690: bipush        9
     692: ldc2_w        #159                // long 362880l
     695: lastore
     696: dup
     697: bipush        10
     699: ldc2_w        #161                // long 3628800l
     702: lastore
     703: dup
     704: bipush        11
     706: ldc2_w        #163                // long 39916800l
     709: lastore
     710: dup
     711: bipush        12
     713: ldc2_w        #165                // long 479001600l
     716: lastore
     717: dup
     718: bipush        13
     720: ldc2_w        #167                // long 6227020800l
     723: lastore
     724: dup
     725: bipush        14
     727: ldc2_w        #169                // long 87178291200l
     730: lastore
     731: dup
     732: bipush        15
     734: ldc2_w        #171                // long 1307674368000l
     737: lastore
     738: dup
     739: bipush        16
     741: ldc2_w        #173                // long 20922789888000l
     744: lastore
     745: dup
     746: bipush        17
     748: ldc2_w        #175                // long 355687428096000l
     751: lastore
     752: dup
     753: bipush        18
     755: ldc2_w        #177                // long 6402373705728000l
     758: lastore
     759: dup
     760: bipush        19
     762: ldc2_w        #179                // long 121645100408832000l
     765: lastore
     766: dup
     767: bipush        20
     769: ldc2_w        #181                // long 2432902008176640000l
     772: lastore
     773: putstatic     #61                 // Field FACTORIALS:[J
     776: bipush        34
     778: newarray       int
     780: dup
     781: iconst_0
     782: ldc           #183                // int 2147483647
     784: iastore
     785: dup
     786: iconst_1
     787: ldc           #183                // int 2147483647
     789: iastore
     790: dup
     791: iconst_2
     792: ldc           #183                // int 2147483647
     794: iastore
     795: dup
     796: iconst_3
     797: ldc           #184                // int 3810779
     799: iastore
     800: dup
     801: iconst_4
     802: ldc           #185                // int 121977
     804: iastore
     805: dup
     806: iconst_5
     807: sipush        16175
     810: iastore
     811: dup
     812: bipush        6
     814: sipush        4337
     817: iastore
     818: dup
     819: bipush        7
     821: sipush        1733
     824: iastore
     825: dup
     826: bipush        8
     828: sipush        887
     831: iastore
     832: dup
     833: bipush        9
     835: sipush        534
     838: iastore
     839: dup
     840: bipush        10
     842: sipush        361
     845: iastore
     846: dup
     847: bipush        11
     849: sipush        265
     852: iastore
     853: dup
     854: bipush        12
     856: sipush        206
     859: iastore
     860: dup
     861: bipush        13
     863: sipush        169
     866: iastore
     867: dup
     868: bipush        14
     870: sipush        143
     873: iastore
     874: dup
     875: bipush        15
     877: bipush        125
     879: iastore
     880: dup
     881: bipush        16
     883: bipush        111
     885: iastore
     886: dup
     887: bipush        17
     889: bipush        101
     891: iastore
     892: dup
     893: bipush        18
     895: bipush        94
     897: iastore
     898: dup
     899: bipush        19
     901: bipush        88
     903: iastore
     904: dup
     905: bipush        20
     907: bipush        83
     909: iastore
     910: dup
     911: bipush        21
     913: bipush        79
     915: iastore
     916: dup
     917: bipush        22
     919: bipush        76
     921: iastore
     922: dup
     923: bipush        23
     925: bipush        74
     927: iastore
     928: dup
     929: bipush        24
     931: bipush        72
     933: iastore
     934: dup
     935: bipush        25
     937: bipush        70
     939: iastore
     940: dup
     941: bipush        26
     943: bipush        69
     945: iastore
     946: dup
     947: bipush        27
     949: bipush        68
     951: iastore
     952: dup
     953: bipush        28
     955: bipush        67
     957: iastore
     958: dup
     959: bipush        29
     961: bipush        67
     963: iastore
     964: dup
     965: bipush        30
     967: bipush        66
     969: iastore
     970: dup
     971: bipush        31
     973: bipush        66
     975: iastore
     976: dup
     977: bipush        32
     979: bipush        66
     981: iastore
     982: dup
     983: bipush        33
     985: bipush        66
     987: iastore
     988: putstatic     #69                 // Field BIGGEST_BINOMIALS:[I
     991: bipush        31
     993: newarray       int
     995: dup
     996: iconst_0
     997: ldc           #183                // int 2147483647
     999: iastore
    1000: dup
    1001: iconst_1
    1002: ldc           #183                // int 2147483647
    1004: iastore
    1005: dup
    1006: iconst_2
    1007: ldc           #183                // int 2147483647
    1009: iastore
    1010: dup
    1011: iconst_3
    1012: ldc           #186                // int 2642246
    1014: iastore
    1015: dup
    1016: iconst_4
    1017: ldc           #187                // int 86251
    1019: iastore
    1020: dup
    1021: iconst_5
    1022: sipush        11724
    1025: iastore
    1026: dup
    1027: bipush        6
    1029: sipush        3218
    1032: iastore
    1033: dup
    1034: bipush        7
    1036: sipush        1313
    1039: iastore
    1040: dup
    1041: bipush        8
    1043: sipush        684
    1046: iastore
    1047: dup
    1048: bipush        9
    1050: sipush        419
    1053: iastore
    1054: dup
    1055: bipush        10
    1057: sipush        287
    1060: iastore
    1061: dup
    1062: bipush        11
    1064: sipush        214
    1067: iastore
    1068: dup
    1069: bipush        12
    1071: sipush        169
    1074: iastore
    1075: dup
    1076: bipush        13
    1078: sipush        139
    1081: iastore
    1082: dup
    1083: bipush        14
    1085: bipush        119
    1087: iastore
    1088: dup
    1089: bipush        15
    1091: bipush        105
    1093: iastore
    1094: dup
    1095: bipush        16
    1097: bipush        95
    1099: iastore
    1100: dup
    1101: bipush        17
    1103: bipush        87
    1105: iastore
    1106: dup
    1107: bipush        18
    1109: bipush        81
    1111: iastore
    1112: dup
    1113: bipush        19
    1115: bipush        76
    1117: iastore
    1118: dup
    1119: bipush        20
    1121: bipush        73
    1123: iastore
    1124: dup
    1125: bipush        21
    1127: bipush        70
    1129: iastore
    1130: dup
    1131: bipush        22
    1133: bipush        68
    1135: iastore
    1136: dup
    1137: bipush        23
    1139: bipush        66
    1141: iastore
    1142: dup
    1143: bipush        24
    1145: bipush        64
    1147: iastore
    1148: dup
    1149: bipush        25
    1151: bipush        63
    1153: iastore
    1154: dup
    1155: bipush        26
    1157: bipush        62
    1159: iastore
    1160: dup
    1161: bipush        27
    1163: bipush        62
    1165: iastore
    1166: dup
    1167: bipush        28
    1169: bipush        61
    1171: iastore
    1172: dup
    1173: bipush        29
    1175: bipush        61
    1177: iastore
    1178: dup
    1179: bipush        30
    1181: bipush        61
    1183: iastore
    1184: putstatic     #70                 // Field BIGGEST_SIMPLE_BINOMIALS:[I
    1187: return
}
