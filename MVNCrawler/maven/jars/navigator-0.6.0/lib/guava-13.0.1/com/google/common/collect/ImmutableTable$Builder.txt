Compiled from "ImmutableTable.java"
public final class com.google.common.collect.ImmutableTable$Builder<R, C, V> {
  private final java.util.List<com.google.common.collect.Table$Cell<R, C, V>> cells;

  private java.util.Comparator<? super R> rowComparator;

  private java.util.Comparator<? super C> columnComparator;

  public com.google.common.collect.ImmutableTable$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       8: putfield      #3                  // Field cells:Ljava/util/List;
      11: return

  public com.google.common.collect.ImmutableTable$Builder<R, C, V> orderRowsBy(java.util.Comparator<? super R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #5                  // class java/util/Comparator
       8: putfield      #6                  // Field rowComparator:Ljava/util/Comparator;
      11: aload_0
      12: areturn

  public com.google.common.collect.ImmutableTable$Builder<R, C, V> orderColumnsBy(java.util.Comparator<? super C>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #5                  // class java/util/Comparator
       8: putfield      #7                  // Field columnComparator:Ljava/util/Comparator;
      11: aload_0
      12: areturn

  public com.google.common.collect.ImmutableTable$Builder<R, C, V> put(R, C, V);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cells:Ljava/util/List;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #8                  // Method com/google/common/collect/ImmutableTable.cellOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/Table$Cell;
      10: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: areturn

  public com.google.common.collect.ImmutableTable$Builder<R, C, V> put(com.google.common.collect.Table$Cell<? extends R, ? extends C, ? extends V>);
    Code:
       0: aload_1
       1: instanceof    #10                 // class com/google/common/collect/Tables$ImmutableCell
       4: ifeq          53
       7: aload_1
       8: invokeinterface #11,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
      13: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_1
      18: invokeinterface #12,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
      23: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_1
      28: invokeinterface #13,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
      33: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_1
      38: astore_2
      39: aload_0
      40: getfield      #3                  // Field cells:Ljava/util/List;
      43: aload_2
      44: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          76
      53: aload_0
      54: aload_1
      55: invokeinterface #11,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
      60: aload_1
      61: invokeinterface #12,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
      66: aload_1
      67: invokeinterface #13,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
      72: invokevirtual #14                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableTable$Builder;
      75: pop
      76: aload_0
      77: areturn

  public com.google.common.collect.ImmutableTable$Builder<R, C, V> putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          40
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #19                 // class com/google/common/collect/Table$Cell
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokevirtual #20                 // Method put:(Lcom/google/common/collect/Table$Cell;)Lcom/google/common/collect/ImmutableTable$Builder;
      36: pop
      37: goto          12
      40: aload_0
      41: areturn

  public com.google.common.collect.ImmutableTable<R, C, V> build();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cells:Ljava/util/List;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_1
      10: iload_1
      11: lookupswitch  { // 2
                     0: 36
                     1: 40
               default: 58
          }
      36: invokestatic  #22                 // Method com/google/common/collect/ImmutableTable.of:()Lcom/google/common/collect/ImmutableTable;
      39: areturn
      40: new           #23                 // class com/google/common/collect/SingletonImmutableTable
      43: dup
      44: aload_0
      45: getfield      #3                  // Field cells:Ljava/util/List;
      48: invokestatic  #24                 // Method com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;
      51: checkcast     #19                 // class com/google/common/collect/Table$Cell
      54: invokespecial #25                 // Method com/google/common/collect/SingletonImmutableTable."<init>":(Lcom/google/common/collect/Table$Cell;)V
      57: areturn
      58: aload_0
      59: getfield      #3                  // Field cells:Ljava/util/List;
      62: aload_0
      63: getfield      #6                  // Field rowComparator:Ljava/util/Comparator;
      66: aload_0
      67: getfield      #7                  // Field columnComparator:Ljava/util/Comparator;
      70: invokestatic  #26                 // Method com/google/common/collect/RegularImmutableTable.forCells:(Ljava/util/List;Ljava/util/Comparator;Ljava/util/Comparator;)Lcom/google/common/collect/RegularImmutableTable;
      73: areturn
}
