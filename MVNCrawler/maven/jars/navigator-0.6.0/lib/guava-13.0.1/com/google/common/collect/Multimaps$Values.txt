Compiled from "Multimaps.java"
abstract class com.google.common.collect.Multimaps$Values<K, V> extends java.util.AbstractCollection<V> {
  com.google.common.collect.Multimaps$Values();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractCollection."<init>":()V
       4: return

  abstract com.google.common.collect.Multimap<K, V> multimap();

  public java.util.Iterator<V> iterator();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method multimap:()Lcom/google/common/collect/Multimap;
       4: invokeinterface #3,  1            // InterfaceMethod com/google/common/collect/Multimap.entries:()Ljava/util/Collection;
       9: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: invokestatic  #5                  // Method com/google/common/collect/Maps.valueIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      17: areturn

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method multimap:()Lcom/google/common/collect/Multimap;
       4: invokeinterface #6,  1            // InterfaceMethod com/google/common/collect/Multimap.size:()I
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method multimap:()Lcom/google/common/collect/Multimap;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod com/google/common/collect/Multimap.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method multimap:()Lcom/google/common/collect/Multimap;
       4: invokeinterface #8,  1            // InterfaceMethod com/google/common/collect/Multimap.clear:()V
       9: return
}
