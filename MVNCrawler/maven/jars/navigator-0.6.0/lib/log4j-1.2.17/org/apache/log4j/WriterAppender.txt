Compiled from "WriterAppender.java"
public class org.apache.log4j.WriterAppender extends org.apache.log4j.AppenderSkeleton {
  protected boolean immediateFlush;

  protected java.lang.String encoding;

  protected org.apache.log4j.helpers.QuietWriter qw;

  public org.apache.log4j.WriterAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/AppenderSkeleton."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field immediateFlush:Z
       9: return

  public org.apache.log4j.WriterAppender(org.apache.log4j.Layout, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class java/io/OutputStreamWriter
       5: dup
       6: aload_2
       7: invokespecial #4                  // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;)V
      10: invokespecial #5                  // Method "<init>":(Lorg/apache/log4j/Layout;Ljava/io/Writer;)V
      13: return

  public org.apache.log4j.WriterAppender(org.apache.log4j.Layout, java.io.Writer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/log4j/AppenderSkeleton."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field immediateFlush:Z
       9: aload_0
      10: aload_1
      11: putfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
      14: aload_0
      15: aload_2
      16: invokevirtual #7                  // Method setWriter:(Ljava/io/Writer;)V
      19: return

  public void setImmediateFlush(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field immediateFlush:Z
       5: return

  public boolean getImmediateFlush();
    Code:
       0: aload_0
       1: getfield      #2                  // Field immediateFlush:Z
       4: ireturn

  public void activateOptions();
    Code:
       0: return

  public void append(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method checkEntryConditions:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: aload_1
      10: invokevirtual #9                  // Method subAppend:(Lorg/apache/log4j/spi/LoggingEvent;)V
      13: return

  protected boolean checkEntryConditions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field closed:Z
       4: ifeq          14
       7: ldc           #11                 // String Not allowed to write to a closed appender.
       9: invokestatic  #12                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      18: ifnonnull     59
      21: aload_0
      22: getfield      #14                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      25: new           #15                 // class java/lang/StringBuffer
      28: dup
      29: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      32: ldc           #17                 // String No output stream or file set for the appender named [
      34: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: aload_0
      38: getfield      #19                 // Field name:Ljava/lang/String;
      41: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: ldc           #20                 // String ].
      46: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: invokevirtual #21                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      52: invokeinterface #22,  2           // InterfaceMethod org/apache/log4j/spi/ErrorHandler.error:(Ljava/lang/String;)V
      57: iconst_0
      58: ireturn
      59: aload_0
      60: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
      63: ifnonnull     104
      66: aload_0
      67: getfield      #14                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      70: new           #15                 // class java/lang/StringBuffer
      73: dup
      74: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      77: ldc           #23                 // String No layout set for the appender named [
      79: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      82: aload_0
      83: getfield      #19                 // Field name:Ljava/lang/String;
      86: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      89: ldc           #20                 // String ].
      91: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: invokevirtual #21                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      97: invokeinterface #22,  2           // InterfaceMethod org/apache/log4j/spi/ErrorHandler.error:(Ljava/lang/String;)V
     102: iconst_0
     103: ireturn
     104: iconst_1
     105: ireturn

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #10                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #10                 // Field closed:Z
      13: aload_0
      14: invokevirtual #24                 // Method writeFooter:()V
      17: aload_0
      18: invokevirtual #25                 // Method reset:()V
      21: return

  protected void closeWriter();
    Code:
       0: aload_0
       1: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
       4: ifnull        57
       7: aload_0
       8: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      11: invokevirtual #26                 // Method org/apache/log4j/helpers/QuietWriter.close:()V
      14: goto          57
      17: astore_1
      18: aload_1
      19: instanceof    #28                 // class java/io/InterruptedIOException
      22: ifeq          31
      25: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      28: invokevirtual #30                 // Method java/lang/Thread.interrupt:()V
      31: new           #15                 // class java/lang/StringBuffer
      34: dup
      35: invokespecial #16                 // Method java/lang/StringBuffer."<init>":()V
      38: ldc           #31                 // String Could not close
      40: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: aload_0
      44: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      47: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      50: invokevirtual #21                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      53: aload_1
      54: invokestatic  #33                 // Method org/apache/log4j/helpers/LogLog.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      57: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  protected java.io.OutputStreamWriter createWriter(java.io.OutputStream);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #34                 // Method getEncoding:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnull        50
      11: new           #3                  // class java/io/OutputStreamWriter
      14: dup
      15: aload_1
      16: aload_3
      17: invokespecial #35                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      20: astore_2
      21: goto          50
      24: astore        4
      26: aload         4
      28: instanceof    #28                 // class java/io/InterruptedIOException
      31: ifeq          40
      34: invokestatic  #29                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      37: invokevirtual #30                 // Method java/lang/Thread.interrupt:()V
      40: ldc           #36                 // String Error initializing output writer.
      42: invokestatic  #12                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      45: ldc           #37                 // String Unsupported encoding?
      47: invokestatic  #12                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      50: aload_2
      51: ifnonnull     63
      54: new           #3                  // class java/io/OutputStreamWriter
      57: dup
      58: aload_1
      59: invokespecial #4                  // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;)V
      62: astore_2
      63: aload_2
      64: areturn
    Exception table:
       from    to  target type
          11    21    24   Class java/io/IOException

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #38                 // Field encoding:Ljava/lang/String;
       4: areturn

  public void setEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field encoding:Ljava/lang/String;
       5: return

  public synchronized void setErrorHandler(org.apache.log4j.spi.ErrorHandler);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: ldc           #39                 // String You have tried to set a null error-handler.
       6: invokestatic  #12                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       9: goto          32
      12: aload_0
      13: aload_1
      14: putfield      #14                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      17: aload_0
      18: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      21: ifnull        32
      24: aload_0
      25: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      28: aload_1
      29: invokevirtual #40                 // Method org/apache/log4j/helpers/QuietWriter.setErrorHandler:(Lorg/apache/log4j/spi/ErrorHandler;)V
      32: return

  public synchronized void setWriter(java.io.Writer);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method reset:()V
       4: aload_0
       5: new           #41                 // class org/apache/log4j/helpers/QuietWriter
       8: dup
       9: aload_1
      10: aload_0
      11: getfield      #14                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      14: invokespecial #42                 // Method org/apache/log4j/helpers/QuietWriter."<init>":(Ljava/io/Writer;Lorg/apache/log4j/spi/ErrorHandler;)V
      17: putfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      20: aload_0
      21: invokevirtual #43                 // Method writeHeader:()V
      24: return

  protected void subAppend(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
       4: aload_0
       5: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
       8: aload_1
       9: invokevirtual #44                 // Method org/apache/log4j/Layout.format:(Lorg/apache/log4j/spi/LoggingEvent;)Ljava/lang/String;
      12: invokevirtual #45                 // Method org/apache/log4j/helpers/QuietWriter.write:(Ljava/lang/String;)V
      15: aload_0
      16: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
      19: invokevirtual #46                 // Method org/apache/log4j/Layout.ignoresThrowable:()Z
      22: ifeq          73
      25: aload_1
      26: invokevirtual #47                 // Method org/apache/log4j/spi/LoggingEvent.getThrowableStrRep:()[Ljava/lang/String;
      29: astore_2
      30: aload_2
      31: ifnull        73
      34: aload_2
      35: arraylength
      36: istore_3
      37: iconst_0
      38: istore        4
      40: iload         4
      42: iload_3
      43: if_icmpge     73
      46: aload_0
      47: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      50: aload_2
      51: iload         4
      53: aaload
      54: invokevirtual #45                 // Method org/apache/log4j/helpers/QuietWriter.write:(Ljava/lang/String;)V
      57: aload_0
      58: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      61: getstatic     #48                 // Field org/apache/log4j/Layout.LINE_SEP:Ljava/lang/String;
      64: invokevirtual #45                 // Method org/apache/log4j/helpers/QuietWriter.write:(Ljava/lang/String;)V
      67: iinc          4, 1
      70: goto          40
      73: aload_0
      74: aload_1
      75: invokevirtual #49                 // Method shouldFlush:(Lorg/apache/log4j/spi/LoggingEvent;)Z
      78: ifeq          88
      81: aload_0
      82: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      85: invokevirtual #50                 // Method org/apache/log4j/helpers/QuietWriter.flush:()V
      88: return

  public boolean requiresLayout();
    Code:
       0: iconst_1
       1: ireturn

  protected void reset();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method closeWriter:()V
       4: aload_0
       5: aconst_null
       6: putfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
       9: return

  protected void writeFooter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
       4: ifnull        41
       7: aload_0
       8: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
      11: invokevirtual #52                 // Method org/apache/log4j/Layout.getFooter:()Ljava/lang/String;
      14: astore_1
      15: aload_1
      16: ifnull        41
      19: aload_0
      20: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      23: ifnull        41
      26: aload_0
      27: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      30: aload_1
      31: invokevirtual #45                 // Method org/apache/log4j/helpers/QuietWriter.write:(Ljava/lang/String;)V
      34: aload_0
      35: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      38: invokevirtual #50                 // Method org/apache/log4j/helpers/QuietWriter.flush:()V
      41: return

  protected void writeHeader();
    Code:
       0: aload_0
       1: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
       4: ifnull        34
       7: aload_0
       8: getfield      #6                  // Field layout:Lorg/apache/log4j/Layout;
      11: invokevirtual #53                 // Method org/apache/log4j/Layout.getHeader:()Ljava/lang/String;
      14: astore_1
      15: aload_1
      16: ifnull        34
      19: aload_0
      20: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      23: ifnull        34
      26: aload_0
      27: getfield      #13                 // Field qw:Lorg/apache/log4j/helpers/QuietWriter;
      30: aload_1
      31: invokevirtual #45                 // Method org/apache/log4j/helpers/QuietWriter.write:(Ljava/lang/String;)V
      34: return

  protected boolean shouldFlush(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: getfield      #2                  // Field immediateFlush:Z
       4: ireturn
}
