Compiled from "Category.java"
public class org.apache.log4j.Category implements org.apache.log4j.spi.AppenderAttachable {
  protected java.lang.String name;

  protected volatile org.apache.log4j.Level level;

  protected volatile org.apache.log4j.Category parent;

  private static final java.lang.String FQCN;

  protected java.util.ResourceBundle resourceBundle;

  protected org.apache.log4j.spi.LoggerRepository repository;

  org.apache.log4j.helpers.AppenderAttachableImpl aai;

  protected boolean additive;

  static java.lang.Class class$org$apache$log4j$Category;

  protected org.apache.log4j.Category(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field additive:Z
       9: aload_0
      10: aload_1
      11: putfield      #8                  // Field name:Ljava/lang/String;
      14: return

  public synchronized void addAppender(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class org/apache/log4j/helpers/AppenderAttachableImpl
      11: dup
      12: invokespecial #11                 // Method org/apache/log4j/helpers/AppenderAttachableImpl."<init>":()V
      15: putfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      18: aload_0
      19: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      22: aload_1
      23: invokevirtual #12                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.addAppender:(Lorg/apache/log4j/Appender;)V
      26: aload_0
      27: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
      30: aload_0
      31: aload_1
      32: invokeinterface #14,  3           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.fireAddAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      37: return

  public void assertLog(boolean, java.lang.String);
    Code:
       0: iload_1
       1: ifne          9
       4: aload_0
       5: aload_2
       6: invokevirtual #15                 // Method error:(Ljava/lang/Object;)V
       9: return

  public void callAppenders(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: astore_3
       4: aload_3
       5: ifnull        66
       8: aload_3
       9: dup
      10: astore        4
      12: monitorenter
      13: aload_3
      14: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      17: ifnull        31
      20: iload_2
      21: aload_3
      22: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      25: aload_1
      26: invokevirtual #16                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders:(Lorg/apache/log4j/spi/LoggingEvent;)I
      29: iadd
      30: istore_2
      31: aload_3
      32: getfield      #7                  // Field additive:Z
      35: ifne          44
      38: aload         4
      40: monitorexit
      41: goto          66
      44: aload         4
      46: monitorexit
      47: goto          58
      50: astore        5
      52: aload         4
      54: monitorexit
      55: aload         5
      57: athrow
      58: aload_3
      59: getfield      #17                 // Field parent:Lorg/apache/log4j/Category;
      62: astore_3
      63: goto          4
      66: iload_2
      67: ifne          80
      70: aload_0
      71: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
      74: aload_0
      75: invokeinterface #18,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.emitNoAppenderWarning:(Lorg/apache/log4j/Category;)V
      80: return
    Exception table:
       from    to  target type
          13    41    50   any
          44    47    50   any
          50    55    50   any

  synchronized void closeNestedAppenders();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getAllAppenders:()Ljava/util/Enumeration;
       4: astore_1
       5: aload_1
       6: ifnull        44
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          44
      18: aload_1
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: checkcast     #22                 // class org/apache/log4j/Appender
      27: astore_2
      28: aload_2
      29: instanceof    #23                 // class org/apache/log4j/spi/AppenderAttachable
      32: ifeq          41
      35: aload_2
      36: invokeinterface #24,  1           // InterfaceMethod org/apache/log4j/Appender.close:()V
      41: goto          9
      44: return

  public void debug(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        10000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #26                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #26                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      36: aload_1
      37: aconst_null
      38: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        10000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #26                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #26                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      36: aload_1
      37: aload_2
      38: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public void error(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: ldc           #31                 // int 40000
       6: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      11: ifeq          15
      14: return
      15: getstatic     #32                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          40
      28: aload_0
      29: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      32: getstatic     #32                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      35: aload_1
      36: aconst_null
      37: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: ldc           #31                 // int 40000
       6: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      11: ifeq          15
      14: return
      15: getstatic     #32                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          40
      28: aload_0
      29: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      32: getstatic     #32                 // Field org/apache/log4j/Level.ERROR:Lorg/apache/log4j/Level;
      35: aload_1
      36: aload_2
      37: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: return

  public static org.apache.log4j.Logger exists(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method org/apache/log4j/LogManager.exists:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       4: areturn

  public void fatal(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: ldc           #34                 // int 50000
       6: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      11: ifeq          15
      14: return
      15: getstatic     #35                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          40
      28: aload_0
      29: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      32: getstatic     #35                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      35: aload_1
      36: aconst_null
      37: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: ldc           #34                 // int 50000
       6: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      11: ifeq          15
      14: return
      15: getstatic     #35                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          40
      28: aload_0
      29: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      32: getstatic     #35                 // Field org/apache/log4j/Level.FATAL:Lorg/apache/log4j/Level;
      35: aload_1
      36: aload_2
      37: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: return

  protected void forcedLog(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: new           #36                 // class org/apache/log4j/spi/LoggingEvent
       4: dup
       5: aload_1
       6: aload_0
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokespecial #37                 // Method org/apache/log4j/spi/LoggingEvent."<init>":(Ljava/lang/String;Lorg/apache/log4j/Category;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      14: invokevirtual #38                 // Method callAppenders:(Lorg/apache/log4j/spi/LoggingEvent;)V
      17: return

  public boolean getAdditivity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field additive:Z
       4: ireturn

  public synchronized java.util.Enumeration getAllAppenders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: ifnonnull     11
       7: invokestatic  #39                 // Method org/apache/log4j/helpers/NullEnumeration.getInstance:()Lorg/apache/log4j/helpers/NullEnumeration;
      10: areturn
      11: aload_0
      12: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      15: invokevirtual #40                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAllAppenders:()Ljava/util/Enumeration;
      18: areturn

  public synchronized org.apache.log4j.Appender getAppender(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: ifnull        11
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      17: aload_1
      18: invokevirtual #41                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAppender:(Ljava/lang/String;)Lorg/apache/log4j/Appender;
      21: areturn

  public org.apache.log4j.Level getEffectiveLevel();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        26
       6: aload_1
       7: getfield      #42                 // Field level:Lorg/apache/log4j/Level;
      10: ifnull        18
      13: aload_1
      14: getfield      #42                 // Field level:Lorg/apache/log4j/Level;
      17: areturn
      18: aload_1
      19: getfield      #17                 // Field parent:Lorg/apache/log4j/Category;
      22: astore_1
      23: goto          2
      26: aconst_null
      27: areturn

  public org.apache.log4j.Priority getChainedPriority();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        26
       6: aload_1
       7: getfield      #42                 // Field level:Lorg/apache/log4j/Level;
      10: ifnull        18
      13: aload_1
      14: getfield      #42                 // Field level:Lorg/apache/log4j/Level;
      17: areturn
      18: aload_1
      19: getfield      #17                 // Field parent:Lorg/apache/log4j/Category;
      22: astore_1
      23: goto          2
      26: aconst_null
      27: areturn

  public static java.util.Enumeration getCurrentCategories();
    Code:
       0: invokestatic  #43                 // Method org/apache/log4j/LogManager.getCurrentLoggers:()Ljava/util/Enumeration;
       3: areturn

  public static org.apache.log4j.spi.LoggerRepository getDefaultHierarchy();
    Code:
       0: invokestatic  #44                 // Method org/apache/log4j/LogManager.getLoggerRepository:()Lorg/apache/log4j/spi/LoggerRepository;
       3: areturn

  public org.apache.log4j.spi.LoggerRepository getHierarchy();
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: areturn

  public org.apache.log4j.spi.LoggerRepository getLoggerRepository();
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: areturn

  public static org.apache.log4j.Category getInstance(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       4: areturn

  public static org.apache.log4j.Category getInstance(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/Class;)Lorg/apache/log4j/Logger;
       4: areturn

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: areturn

  public final org.apache.log4j.Category getParent();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parent:Lorg/apache/log4j/Category;
       4: areturn

  public final org.apache.log4j.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #42                 // Field level:Lorg/apache/log4j/Level;
       4: areturn

  public final org.apache.log4j.Level getPriority();
    Code:
       0: aload_0
       1: getfield      #42                 // Field level:Lorg/apache/log4j/Level;
       4: areturn

  public static final org.apache.log4j.Category getRoot();
    Code:
       0: invokestatic  #47                 // Method org/apache/log4j/LogManager.getRootLogger:()Lorg/apache/log4j/Logger;
       3: areturn

  public java.util.ResourceBundle getResourceBundle();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        26
       6: aload_1
       7: getfield      #48                 // Field resourceBundle:Ljava/util/ResourceBundle;
      10: ifnull        18
      13: aload_1
      14: getfield      #48                 // Field resourceBundle:Ljava/util/ResourceBundle;
      17: areturn
      18: aload_1
      19: getfield      #17                 // Field parent:Lorg/apache/log4j/Category;
      22: astore_1
      23: goto          2
      26: aconst_null
      27: areturn

  protected java.lang.String getResourceBundleString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getResourceBundle:()Ljava/util/ResourceBundle;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_2
      12: aload_1
      13: invokevirtual #50                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      16: areturn
      17: astore_3
      18: aload_0
      19: new           #52                 // class java/lang/StringBuffer
      22: dup
      23: invokespecial #53                 // Method java/lang/StringBuffer."<init>":()V
      26: ldc           #54                 // String No resource is associated with key \"
      28: invokevirtual #55                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: aload_1
      32: invokevirtual #55                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: ldc           #56                 // String \".
      37: invokevirtual #55                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      40: invokevirtual #57                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      43: invokevirtual #15                 // Method error:(Ljava/lang/Object;)V
      46: aconst_null
      47: areturn
    Exception table:
       from    to  target type
          11    16    17   Class java/util/MissingResourceException

  public void info(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        20000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #58                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #58                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      36: aload_1
      37: aconst_null
      38: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        20000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #58                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #58                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      36: aload_1
      37: aload_2
      38: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public boolean isAttached(org.apache.log4j.Appender);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      17: aload_1
      18: invokevirtual #59                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.isAttached:(Lorg/apache/log4j/Appender;)Z
      21: ireturn

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        10000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          17
      15: iconst_0
      16: ireturn
      17: getstatic     #26                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
      20: aload_0
      21: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      24: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      27: ireturn

  public boolean isEnabledFor(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: aload_1
       5: getfield      #60                 // Field org/apache/log4j/Priority.level:I
       8: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #61                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ireturn

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        20000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          17
      15: iconst_0
      16: ireturn
      17: getstatic     #58                 // Field org/apache/log4j/Level.INFO:Lorg/apache/log4j/Level;
      20: aload_0
      21: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      24: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      27: ireturn

  public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: aload_1
       5: getfield      #60                 // Field org/apache/log4j/Priority.level:I
       8: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      13: ifeq          17
      16: return
      17: aload_1
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #61                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          54
      28: aload_0
      29: aload_2
      30: invokevirtual #62                 // Method getResourceBundleString:(Ljava/lang/String;)Ljava/lang/String;
      33: astore        4
      35: aload         4
      37: ifnonnull     43
      40: aload_2
      41: astore        4
      43: aload_0
      44: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      47: aload_1
      48: aload         4
      50: aload_3
      51: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      54: return

  public void l7dlog(org.apache.log4j.Priority, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: aload_1
       5: getfield      #60                 // Field org/apache/log4j/Priority.level:I
       8: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      13: ifeq          17
      16: return
      17: aload_1
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #61                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          66
      28: aload_0
      29: aload_2
      30: invokevirtual #62                 // Method getResourceBundleString:(Ljava/lang/String;)Ljava/lang/String;
      33: astore        5
      35: aload         5
      37: ifnonnull     46
      40: aload_2
      41: astore        6
      43: goto          54
      46: aload         5
      48: aload_3
      49: invokestatic  #63                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: astore        6
      54: aload_0
      55: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      58: aload_1
      59: aload         6
      61: aload         4
      63: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      66: return

  public void log(org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: aload_1
       5: getfield      #60                 // Field org/apache/log4j/Priority.level:I
       8: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      13: ifeq          17
      16: return
      17: aload_1
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #61                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          38
      28: aload_0
      29: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      38: return

  public void log(org.apache.log4j.Priority, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: aload_1
       5: getfield      #60                 // Field org/apache/log4j/Priority.level:I
       8: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      13: ifeq          17
      16: return
      17: aload_1
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #61                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          38
      28: aload_0
      29: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      32: aload_1
      33: aload_2
      34: aconst_null
      35: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      38: return

  public void log(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: aload_2
       5: getfield      #60                 // Field org/apache/log4j/Priority.level:I
       8: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      13: ifeq          17
      16: return
      17: aload_2
      18: aload_0
      19: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      22: invokevirtual #61                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      25: ifeq          37
      28: aload_0
      29: aload_1
      30: aload_2
      31: aload_3
      32: aload         4
      34: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      37: return

  private void fireRemoveAppenderEvent(org.apache.log4j.Appender);
    Code:
       0: aload_1
       1: ifnull        53
       4: aload_0
       5: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       8: instanceof    #64                 // class org/apache/log4j/Hierarchy
      11: ifeq          29
      14: aload_0
      15: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
      18: checkcast     #64                 // class org/apache/log4j/Hierarchy
      21: aload_0
      22: aload_1
      23: invokevirtual #65                 // Method org/apache/log4j/Hierarchy.fireRemoveAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      26: goto          53
      29: aload_0
      30: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
      33: instanceof    #66                 // class org/apache/log4j/spi/HierarchyEventListener
      36: ifeq          53
      39: aload_0
      40: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
      43: checkcast     #66                 // class org/apache/log4j/spi/HierarchyEventListener
      46: aload_0
      47: aload_1
      48: invokeinterface #67,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.removeAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      53: return

  public synchronized void removeAllAppenders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: ifnull        92
       7: new           #68                 // class java/util/Vector
      10: dup
      11: invokespecial #69                 // Method java/util/Vector."<init>":()V
      14: astore_1
      15: aload_0
      16: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      19: invokevirtual #40                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAllAppenders:()Ljava/util/Enumeration;
      22: astore_2
      23: aload_2
      24: ifnull        50
      27: aload_2
      28: invokeinterface #20,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      33: ifeq          50
      36: aload_1
      37: aload_2
      38: invokeinterface #21,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      43: invokevirtual #70                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      46: pop
      47: goto          23
      50: aload_0
      51: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      54: invokevirtual #71                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.removeAllAppenders:()V
      57: aload_1
      58: invokevirtual #72                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      61: astore_2
      62: aload_2
      63: invokeinterface #20,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      68: ifeq          87
      71: aload_0
      72: aload_2
      73: invokeinterface #21,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      78: checkcast     #22                 // class org/apache/log4j/Appender
      81: invokespecial #73                 // Method fireRemoveAppenderEvent:(Lorg/apache/log4j/Appender;)V
      84: goto          62
      87: aload_0
      88: aconst_null
      89: putfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      92: return

  public synchronized void removeAppender(org.apache.log4j.Appender);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       8: ifnonnull     12
      11: return
      12: aload_0
      13: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      16: aload_1
      17: invokevirtual #59                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.isAttached:(Lorg/apache/log4j/Appender;)Z
      20: istore_2
      21: aload_0
      22: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      25: aload_1
      26: invokevirtual #74                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.removeAppender:(Lorg/apache/log4j/Appender;)V
      29: iload_2
      30: ifeq          38
      33: aload_0
      34: aload_1
      35: invokespecial #73                 // Method fireRemoveAppenderEvent:(Lorg/apache/log4j/Appender;)V
      38: return

  public synchronized void removeAppender(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       8: ifnonnull     12
      11: return
      12: aload_0
      13: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      16: aload_1
      17: invokevirtual #41                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAppender:(Ljava/lang/String;)Lorg/apache/log4j/Appender;
      20: astore_2
      21: aload_0
      22: getfield      #9                  // Field aai:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      25: aload_1
      26: invokevirtual #75                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.removeAppender:(Ljava/lang/String;)V
      29: aload_2
      30: ifnull        38
      33: aload_0
      34: aload_2
      35: invokespecial #73                 // Method fireRemoveAppenderEvent:(Lorg/apache/log4j/Appender;)V
      38: return

  public void setAdditivity(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field additive:Z
       5: return

  final void setHierarchy(org.apache.log4j.spi.LoggerRepository);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       5: return

  public void setLevel(org.apache.log4j.Level);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field level:Lorg/apache/log4j/Level;
       5: return

  public void setPriority(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #76                 // class org/apache/log4j/Level
       5: putfield      #42                 // Field level:Lorg/apache/log4j/Level;
       8: return

  public void setResourceBundle(java.util.ResourceBundle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field resourceBundle:Ljava/util/ResourceBundle;
       5: return

  public static void shutdown();
    Code:
       0: invokestatic  #77                 // Method org/apache/log4j/LogManager.shutdown:()V
       3: return

  public void warn(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        30000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #78                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #78                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      36: aload_1
      37: aconst_null
      38: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repository:Lorg/apache/log4j/spi/LoggerRepository;
       4: sipush        30000
       7: invokeinterface #25,  2           // InterfaceMethod org/apache/log4j/spi/LoggerRepository.isDisabled:(I)Z
      12: ifeq          16
      15: return
      16: getstatic     #78                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      19: aload_0
      20: invokevirtual #27                 // Method getEffectiveLevel:()Lorg/apache/log4j/Level;
      23: invokevirtual #28                 // Method org/apache/log4j/Level.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      26: ifeq          41
      29: aload_0
      30: getstatic     #29                 // Field FQCN:Ljava/lang/String;
      33: getstatic     #78                 // Field org/apache/log4j/Level.WARN:Lorg/apache/log4j/Level;
      36: aload_1
      37: aload_2
      38: invokevirtual #30                 // Method forcedLog:(Ljava/lang/String;Lorg/apache/log4j/Priority;Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: getstatic     #79                 // Field class$org$apache$log4j$Category:Ljava/lang/Class;
       3: ifnonnull     18
       6: ldc           #80                 // String org.apache.log4j.Category
       8: invokestatic  #81                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      11: dup
      12: putstatic     #79                 // Field class$org$apache$log4j$Category:Ljava/lang/Class;
      15: goto          21
      18: getstatic     #79                 // Field class$org$apache$log4j$Category:Ljava/lang/Class;
      21: invokevirtual #82                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: putstatic     #29                 // Field FQCN:Ljava/lang/String;
      27: return
}
