Compiled from "RewriteAppender.java"
public class org.apache.log4j.rewrite.RewriteAppender extends org.apache.log4j.AppenderSkeleton implements org.apache.log4j.spi.AppenderAttachable,org.apache.log4j.xml.UnrecognizedElementHandler {
  private org.apache.log4j.rewrite.RewritePolicy policy;

  private final org.apache.log4j.helpers.AppenderAttachableImpl appenders;

  static java.lang.Class class$org$apache$log4j$rewrite$RewritePolicy;

  public org.apache.log4j.rewrite.RewriteAppender();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/log4j/AppenderSkeleton."<init>":()V
       4: aload_0
       5: new           #7                  // class org/apache/log4j/helpers/AppenderAttachableImpl
       8: dup
       9: invokespecial #8                  // Method org/apache/log4j/helpers/AppenderAttachableImpl."<init>":()V
      12: putfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      15: return

  protected void append(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #10                 // Field policy:Lorg/apache/log4j/rewrite/RewritePolicy;
       6: ifnull        20
       9: aload_0
      10: getfield      #10                 // Field policy:Lorg/apache/log4j/rewrite/RewritePolicy;
      13: aload_1
      14: invokeinterface #11,  2           // InterfaceMethod org/apache/log4j/rewrite/RewritePolicy.rewrite:(Lorg/apache/log4j/spi/LoggingEvent;)Lorg/apache/log4j/spi/LoggingEvent;
      19: astore_2
      20: aload_2
      21: ifnull        52
      24: aload_0
      25: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      28: dup
      29: astore_3
      30: monitorenter
      31: aload_0
      32: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      35: aload_2
      36: invokevirtual #12                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.appendLoopOnAppenders:(Lorg/apache/log4j/spi/LoggingEvent;)I
      39: pop
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_3
      48: monitorexit
      49: aload         4
      51: athrow
      52: return
    Exception table:
       from    to  target type
          31    42    45   any
          45    49    45   any

  public void addAppender(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: aload_1
      12: invokevirtual #13                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.addAppender:(Lorg/apache/log4j/Appender;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public java.util.Enumeration getAllAppenders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: invokevirtual #14                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAllAppenders:()Ljava/util/Enumeration;
      14: aload_1
      15: monitorexit
      16: areturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
           7    16    17   any
          17    20    17   any

  public org.apache.log4j.Appender getAppender(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: aload_1
      12: invokevirtual #15                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAppender:(Ljava/lang/String;)Lorg/apache/log4j/Appender;
      15: aload_2
      16: monitorexit
      17: areturn
      18: astore_3
      19: aload_2
      20: monitorexit
      21: aload_3
      22: athrow
    Exception table:
       from    to  target type
           7    17    18   any
          18    21    18   any

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #16                 // Field closed:Z
       5: aload_0
       6: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      16: invokevirtual #14                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.getAllAppenders:()Ljava/util/Enumeration;
      19: astore_2
      20: aload_2
      21: ifnull        59
      24: aload_2
      25: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      30: ifeq          59
      33: aload_2
      34: invokeinterface #18,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      39: astore_3
      40: aload_3
      41: instanceof    #19                 // class org/apache/log4j/Appender
      44: ifeq          56
      47: aload_3
      48: checkcast     #19                 // class org/apache/log4j/Appender
      51: invokeinterface #20,  1           // InterfaceMethod org/apache/log4j/Appender.close:()V
      56: goto          24
      59: aload_1
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_1
      67: monitorexit
      68: aload         4
      70: athrow
      71: return
    Exception table:
       from    to  target type
          12    61    64   any
          64    68    64   any

  public boolean isAttached(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: aload_1
      12: invokevirtual #21                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.isAttached:(Lorg/apache/log4j/Appender;)Z
      15: aload_2
      16: monitorexit
      17: ireturn
      18: astore_3
      19: aload_2
      20: monitorexit
      21: aload_3
      22: athrow
    Exception table:
       from    to  target type
           7    17    18   any
          18    21    18   any

  public boolean requiresLayout();
    Code:
       0: iconst_0
       1: ireturn

  public void removeAllAppenders();
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: invokevirtual #22                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.removeAllAppenders:()V
      14: aload_1
      15: monitorexit
      16: goto          24
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
      24: return
    Exception table:
       from    to  target type
           7    16    19   any
          19    22    19   any

  public void removeAppender(org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: aload_1
      12: invokevirtual #23                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.removeAppender:(Lorg/apache/log4j/Appender;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public void removeAppender(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field appenders:Lorg/apache/log4j/helpers/AppenderAttachableImpl;
      11: aload_1
      12: invokevirtual #24                 // Method org/apache/log4j/helpers/AppenderAttachableImpl.removeAppender:(Ljava/lang/String;)V
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public void setRewritePolicy(org.apache.log4j.rewrite.RewritePolicy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field policy:Lorg/apache/log4j/rewrite/RewritePolicy;
       5: return

  public boolean parseUnrecognizedElement(org.w3c.dom.Element, java.util.Properties) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod org/w3c/dom/Element.getNodeName:()Ljava/lang/String;
       6: astore_3
       7: ldc           #26                 // String rewritePolicy
       9: aload_3
      10: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          78
      16: aload_1
      17: aload_2
      18: getstatic     #28                 // Field class$org$apache$log4j$rewrite$RewritePolicy:Ljava/lang/Class;
      21: ifnonnull     36
      24: ldc           #29                 // String org.apache.log4j.rewrite.RewritePolicy
      26: invokestatic  #30                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      29: dup
      30: putstatic     #28                 // Field class$org$apache$log4j$rewrite$RewritePolicy:Ljava/lang/Class;
      33: goto          39
      36: getstatic     #28                 // Field class$org$apache$log4j$rewrite$RewritePolicy:Ljava/lang/Class;
      39: invokestatic  #31                 // Method org/apache/log4j/xml/DOMConfigurator.parseElement:(Lorg/w3c/dom/Element;Ljava/util/Properties;Ljava/lang/Class;)Ljava/lang/Object;
      42: astore        4
      44: aload         4
      46: ifnull        76
      49: aload         4
      51: instanceof    #32                 // class org/apache/log4j/spi/OptionHandler
      54: ifeq          67
      57: aload         4
      59: checkcast     #32                 // class org/apache/log4j/spi/OptionHandler
      62: invokeinterface #33,  1           // InterfaceMethod org/apache/log4j/spi/OptionHandler.activateOptions:()V
      67: aload_0
      68: aload         4
      70: checkcast     #34                 // class org/apache/log4j/rewrite/RewritePolicy
      73: invokevirtual #35                 // Method setRewritePolicy:(Lorg/apache/log4j/rewrite/RewritePolicy;)V
      76: iconst_1
      77: ireturn
      78: iconst_0
      79: ireturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: invokespecial #4                  // Method java/lang/NoClassDefFoundError."<init>":()V
      13: aload_1
      14: invokevirtual #5                  // Method java/lang/NoClassDefFoundError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException
}
