Compiled from "LF5Appender.java"
public class org.apache.log4j.lf5.LF5Appender extends org.apache.log4j.AppenderSkeleton {
  protected org.apache.log4j.lf5.viewer.LogBrokerMonitor _logMonitor;

  protected static org.apache.log4j.lf5.viewer.LogBrokerMonitor _defaultLogMonitor;

  protected static org.apache.log4j.lf5.AppenderFinalizer _finalizer;

  public org.apache.log4j.lf5.LF5Appender();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method getDefaultInstance:()Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       4: invokespecial #2                  // Method "<init>":(Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;)V
       7: return

  public org.apache.log4j.lf5.LF5Appender(org.apache.log4j.lf5.viewer.LogBrokerMonitor);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/apache/log4j/AppenderSkeleton."<init>":()V
       4: aload_1
       5: ifnull        13
       8: aload_0
       9: aload_1
      10: putfield      #4                  // Field _logMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      13: return

  public void append(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/apache/log4j/spi/LoggingEvent.getLoggerName:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: invokevirtual #6                  // Method org/apache/log4j/spi/LoggingEvent.getRenderedMessage:()Ljava/lang/String;
       9: astore_3
      10: aload_1
      11: invokevirtual #7                  // Method org/apache/log4j/spi/LoggingEvent.getNDC:()Ljava/lang/String;
      14: astore        4
      16: aload_1
      17: invokevirtual #8                  // Method org/apache/log4j/spi/LoggingEvent.getThreadName:()Ljava/lang/String;
      20: astore        5
      22: aload_1
      23: invokevirtual #9                  // Method org/apache/log4j/spi/LoggingEvent.getLevel:()Lorg/apache/log4j/Level;
      26: invokevirtual #10                 // Method org/apache/log4j/Level.toString:()Ljava/lang/String;
      29: astore        6
      31: aload_1
      32: getfield      #11                 // Field org/apache/log4j/spi/LoggingEvent.timeStamp:J
      35: lstore        7
      37: aload_1
      38: invokevirtual #12                 // Method org/apache/log4j/spi/LoggingEvent.getLocationInformation:()Lorg/apache/log4j/spi/LocationInfo;
      41: astore        9
      43: new           #13                 // class org/apache/log4j/lf5/Log4JLogRecord
      46: dup
      47: invokespecial #14                 // Method org/apache/log4j/lf5/Log4JLogRecord."<init>":()V
      50: astore        10
      52: aload         10
      54: aload_2
      55: invokevirtual #15                 // Method org/apache/log4j/lf5/Log4JLogRecord.setCategory:(Ljava/lang/String;)V
      58: aload         10
      60: aload_3
      61: invokevirtual #16                 // Method org/apache/log4j/lf5/Log4JLogRecord.setMessage:(Ljava/lang/String;)V
      64: aload         10
      66: aload         9
      68: getfield      #17                 // Field org/apache/log4j/spi/LocationInfo.fullInfo:Ljava/lang/String;
      71: invokevirtual #18                 // Method org/apache/log4j/lf5/Log4JLogRecord.setLocation:(Ljava/lang/String;)V
      74: aload         10
      76: lload         7
      78: invokevirtual #19                 // Method org/apache/log4j/lf5/Log4JLogRecord.setMillis:(J)V
      81: aload         10
      83: aload         5
      85: invokevirtual #20                 // Method org/apache/log4j/lf5/Log4JLogRecord.setThreadDescription:(Ljava/lang/String;)V
      88: aload         4
      90: ifnull        103
      93: aload         10
      95: aload         4
      97: invokevirtual #21                 // Method org/apache/log4j/lf5/Log4JLogRecord.setNDC:(Ljava/lang/String;)V
     100: goto          110
     103: aload         10
     105: ldc           #22                 // String
     107: invokevirtual #21                 // Method org/apache/log4j/lf5/Log4JLogRecord.setNDC:(Ljava/lang/String;)V
     110: aload_1
     111: invokevirtual #23                 // Method org/apache/log4j/spi/LoggingEvent.getThrowableInformation:()Lorg/apache/log4j/spi/ThrowableInformation;
     114: ifnull        126
     117: aload         10
     119: aload_1
     120: invokevirtual #23                 // Method org/apache/log4j/spi/LoggingEvent.getThrowableInformation:()Lorg/apache/log4j/spi/ThrowableInformation;
     123: invokevirtual #24                 // Method org/apache/log4j/lf5/Log4JLogRecord.setThrownStackTrace:(Lorg/apache/log4j/spi/ThrowableInformation;)V
     126: aload         10
     128: aload         6
     130: invokestatic  #25                 // Method org/apache/log4j/lf5/LogLevel.valueOf:(Ljava/lang/String;)Lorg/apache/log4j/lf5/LogLevel;
     133: invokevirtual #26                 // Method org/apache/log4j/lf5/Log4JLogRecord.setLevel:(Lorg/apache/log4j/lf5/LogLevel;)V
     136: goto          149
     139: astore        11
     141: aload         10
     143: getstatic     #28                 // Field org/apache/log4j/lf5/LogLevel.WARN:Lorg/apache/log4j/lf5/LogLevel;
     146: invokevirtual #26                 // Method org/apache/log4j/lf5/Log4JLogRecord.setLevel:(Lorg/apache/log4j/lf5/LogLevel;)V
     149: aload_0
     150: getfield      #4                  // Field _logMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
     153: ifnull        165
     156: aload_0
     157: getfield      #4                  // Field _logMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
     160: aload         10
     162: invokevirtual #29                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor.addMessage:(Lorg/apache/log4j/lf5/LogRecord;)V
     165: return
    Exception table:
       from    to  target type
         126   136   139   Class org/apache/log4j/lf5/LogLevelFormatException

  public void close();
    Code:
       0: return

  public boolean requiresLayout();
    Code:
       0: iconst_0
       1: ireturn

  public void setCallSystemExitOnClose(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _logMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       4: iload_1
       5: invokevirtual #30                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor.setCallSystemExitOnClose:(Z)V
       8: return

  public boolean equals(org.apache.log4j.lf5.LF5Appender);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _logMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       4: aload_1
       5: invokevirtual #31                 // Method getLogBrokerMonitor:()Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.apache.log4j.lf5.viewer.LogBrokerMonitor getLogBrokerMonitor();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _logMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       4: areturn

  public static void main(java.lang.String[]);
    Code:
       0: new           #32                 // class org/apache/log4j/lf5/LF5Appender
       3: dup
       4: invokespecial #33                 // Method "<init>":()V
       7: pop
       8: return

  public void setMaxNumberOfRecords(int);
    Code:
       0: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       3: iload_1
       4: invokevirtual #35                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor.setMaxNumberOfLogRecords:(I)V
       7: return

  protected static synchronized org.apache.log4j.lf5.viewer.LogBrokerMonitor getDefaultInstance();
    Code:
       0: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
       3: ifnonnull     66
       6: new           #36                 // class org/apache/log4j/lf5/viewer/LogBrokerMonitor
       9: dup
      10: invokestatic  #37                 // Method org/apache/log4j/lf5/LogLevel.getLog4JLevels:()Ljava/util/List;
      13: invokespecial #38                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor."<init>":(Ljava/util/List;)V
      16: putstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      19: new           #39                 // class org/apache/log4j/lf5/AppenderFinalizer
      22: dup
      23: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      26: invokespecial #40                 // Method org/apache/log4j/lf5/AppenderFinalizer."<init>":(Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;)V
      29: putstatic     #41                 // Field _finalizer:Lorg/apache/log4j/lf5/AppenderFinalizer;
      32: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      35: invokestatic  #42                 // Method getDefaultMonitorWidth:()I
      38: invokestatic  #43                 // Method getDefaultMonitorHeight:()I
      41: invokevirtual #44                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor.setFrameSize:(II)V
      44: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      47: bipush        12
      49: invokevirtual #45                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor.setFontSize:(I)V
      52: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      55: invokevirtual #46                 // Method org/apache/log4j/lf5/viewer/LogBrokerMonitor.show:()V
      58: goto          66
      61: astore_0
      62: aconst_null
      63: putstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      66: getstatic     #34                 // Field _defaultLogMonitor:Lorg/apache/log4j/lf5/viewer/LogBrokerMonitor;
      69: areturn
    Exception table:
       from    to  target type
           6    58    61   Class java/lang/SecurityException

  protected static int getScreenWidth();
    Code:
       0: invokestatic  #48                 // Method java/awt/Toolkit.getDefaultToolkit:()Ljava/awt/Toolkit;
       3: invokevirtual #49                 // Method java/awt/Toolkit.getScreenSize:()Ljava/awt/Dimension;
       6: getfield      #50                 // Field java/awt/Dimension.width:I
       9: ireturn
      10: astore_0
      11: sipush        800
      14: ireturn
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable

  protected static int getScreenHeight();
    Code:
       0: invokestatic  #48                 // Method java/awt/Toolkit.getDefaultToolkit:()Ljava/awt/Toolkit;
       3: invokevirtual #49                 // Method java/awt/Toolkit.getScreenSize:()Ljava/awt/Dimension;
       6: getfield      #52                 // Field java/awt/Dimension.height:I
       9: ireturn
      10: astore_0
      11: sipush        600
      14: ireturn
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable

  protected static int getDefaultMonitorWidth();
    Code:
       0: iconst_3
       1: invokestatic  #53                 // Method getScreenWidth:()I
       4: imul
       5: iconst_4
       6: idiv
       7: ireturn

  protected static int getDefaultMonitorHeight();
    Code:
       0: iconst_3
       1: invokestatic  #54                 // Method getScreenHeight:()I
       4: imul
       5: iconst_4
       6: idiv
       7: ireturn
}
