Compiled from "Hierarchy.java"
public class org.apache.log4j.Hierarchy implements org.apache.log4j.spi.LoggerRepository,org.apache.log4j.spi.RendererSupport,org.apache.log4j.spi.ThrowableRendererSupport {
  private org.apache.log4j.spi.LoggerFactory defaultFactory;

  private java.util.Vector listeners;

  java.util.Hashtable ht;

  org.apache.log4j.Logger root;

  org.apache.log4j.or.RendererMap rendererMap;

  int thresholdInt;

  org.apache.log4j.Level threshold;

  boolean emittedNoAppenderWarning;

  boolean emittedNoResourceBundleWarning;

  private org.apache.log4j.spi.ThrowableRenderer throwableRenderer;

  public org.apache.log4j.Hierarchy(org.apache.log4j.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field emittedNoAppenderWarning:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field emittedNoResourceBundleWarning:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
      19: aload_0
      20: new           #5                  // class java/util/Hashtable
      23: dup
      24: invokespecial #6                  // Method java/util/Hashtable."<init>":()V
      27: putfield      #7                  // Field ht:Ljava/util/Hashtable;
      30: aload_0
      31: new           #8                  // class java/util/Vector
      34: dup
      35: iconst_1
      36: invokespecial #9                  // Method java/util/Vector."<init>":(I)V
      39: putfield      #10                 // Field listeners:Ljava/util/Vector;
      42: aload_0
      43: aload_1
      44: putfield      #11                 // Field root:Lorg/apache/log4j/Logger;
      47: aload_0
      48: getstatic     #12                 // Field org/apache/log4j/Level.ALL:Lorg/apache/log4j/Level;
      51: invokevirtual #13                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      54: aload_0
      55: getfield      #11                 // Field root:Lorg/apache/log4j/Logger;
      58: aload_0
      59: invokevirtual #14                 // Method org/apache/log4j/Logger.setHierarchy:(Lorg/apache/log4j/spi/LoggerRepository;)V
      62: aload_0
      63: new           #15                 // class org/apache/log4j/or/RendererMap
      66: dup
      67: invokespecial #16                 // Method org/apache/log4j/or/RendererMap."<init>":()V
      70: putfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
      73: aload_0
      74: new           #18                 // class org/apache/log4j/DefaultCategoryFactory
      77: dup
      78: invokespecial #19                 // Method org/apache/log4j/DefaultCategoryFactory."<init>":()V
      81: putfield      #20                 // Field defaultFactory:Lorg/apache/log4j/spi/LoggerFactory;
      84: return

  public void addRenderer(java.lang.Class, org.apache.log4j.or.ObjectRenderer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #21                 // Method org/apache/log4j/or/RendererMap.put:(Ljava/lang/Class;Lorg/apache/log4j/or/ObjectRenderer;)V
       9: return

  public void addHierarchyEventListener(org.apache.log4j.spi.HierarchyEventListener);
    Code:
       0: aload_0
       1: getfield      #10                 // Field listeners:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #22                 // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
       8: ifeq          19
      11: ldc           #23                 // String Ignoring attempt to add an existent listener.
      13: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      16: goto          27
      19: aload_0
      20: getfield      #10                 // Field listeners:Ljava/util/Vector;
      23: aload_1
      24: invokevirtual #25                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      27: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ht:Ljava/util/Hashtable;
       4: invokevirtual #26                 // Method java/util/Hashtable.clear:()V
       7: return

  public void emitNoAppenderWarning(org.apache.log4j.Category);
    Code:
       0: aload_0
       1: getfield      #2                  // Field emittedNoAppenderWarning:Z
       4: ifne          52
       7: new           #27                 // class java/lang/StringBuffer
      10: dup
      11: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
      14: ldc           #29                 // String No appenders could be found for logger (
      16: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: aload_1
      20: invokevirtual #31                 // Method org/apache/log4j/Category.getName:()Ljava/lang/String;
      23: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: ldc           #32                 // String ).
      28: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      34: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      37: ldc           #34                 // String Please initialize the log4j system properly.
      39: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      42: ldc           #35                 // String See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
      44: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      47: aload_0
      48: iconst_1
      49: putfield      #2                  // Field emittedNoAppenderWarning:Z
      52: return

  public org.apache.log4j.Logger exists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field ht:Ljava/util/Hashtable;
       4: new           #36                 // class org/apache/log4j/CategoryKey
       7: dup
       8: aload_1
       9: invokespecial #37                 // Method org/apache/log4j/CategoryKey."<init>":(Ljava/lang/String;)V
      12: invokevirtual #38                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_2
      16: aload_2
      17: instanceof    #39                 // class org/apache/log4j/Logger
      20: ifeq          28
      23: aload_2
      24: checkcast     #39                 // class org/apache/log4j/Logger
      27: areturn
      28: aconst_null
      29: areturn

  public void setThreshold(java.lang.String);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #40                 // Method org/apache/log4j/Level.toLevel:(Ljava/lang/String;Lorg/apache/log4j/Level;)Lorg/apache/log4j/Level;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_0
      11: aload_2
      12: invokevirtual #13                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      15: goto          45
      18: new           #27                 // class java/lang/StringBuffer
      21: dup
      22: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
      25: ldc           #41                 // String Could not convert [
      27: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: aload_1
      31: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: ldc           #42                 // String ] to Level.
      36: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      42: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      45: return

  public void setThreshold(org.apache.log4j.Level);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: aload_1
       6: getfield      #43                 // Field org/apache/log4j/Level.level:I
       9: putfield      #44                 // Field thresholdInt:I
      12: aload_0
      13: aload_1
      14: putfield      #45                 // Field threshold:Lorg/apache/log4j/Level;
      17: return

  public void fireAddAppenderEvent(org.apache.log4j.Category, org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #10                 // Field listeners:Ljava/util/Vector;
       4: ifnull        53
       7: aload_0
       8: getfield      #10                 // Field listeners:Ljava/util/Vector;
      11: invokevirtual #46                 // Method java/util/Vector.size:()I
      14: istore_3
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload_3
      21: if_icmpge     53
      24: aload_0
      25: getfield      #10                 // Field listeners:Ljava/util/Vector;
      28: iload         5
      30: invokevirtual #47                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      33: checkcast     #48                 // class org/apache/log4j/spi/HierarchyEventListener
      36: astore        4
      38: aload         4
      40: aload_1
      41: aload_2
      42: invokeinterface #49,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.addAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      47: iinc          5, 1
      50: goto          18
      53: return

  void fireRemoveAppenderEvent(org.apache.log4j.Category, org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #10                 // Field listeners:Ljava/util/Vector;
       4: ifnull        53
       7: aload_0
       8: getfield      #10                 // Field listeners:Ljava/util/Vector;
      11: invokevirtual #46                 // Method java/util/Vector.size:()I
      14: istore_3
      15: iconst_0
      16: istore        5
      18: iload         5
      20: iload_3
      21: if_icmpge     53
      24: aload_0
      25: getfield      #10                 // Field listeners:Ljava/util/Vector;
      28: iload         5
      30: invokevirtual #47                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      33: checkcast     #48                 // class org/apache/log4j/spi/HierarchyEventListener
      36: astore        4
      38: aload         4
      40: aload_1
      41: aload_2
      42: invokeinterface #50,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.removeAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      47: iinc          5, 1
      50: goto          18
      53: return

  public org.apache.log4j.Level getThreshold();
    Code:
       0: aload_0
       1: getfield      #45                 // Field threshold:Lorg/apache/log4j/Level;
       4: areturn

  public org.apache.log4j.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #20                 // Field defaultFactory:Lorg/apache/log4j/spi/LoggerFactory;
       6: invokevirtual #51                 // Method getLogger:(Ljava/lang/String;Lorg/apache/log4j/spi/LoggerFactory;)Lorg/apache/log4j/Logger;
       9: areturn

  public org.apache.log4j.Logger getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory);
    Code:
       0: new           #36                 // class org/apache/log4j/CategoryKey
       3: dup
       4: aload_1
       5: invokespecial #37                 // Method org/apache/log4j/CategoryKey."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_0
      10: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      13: dup
      14: astore        5
      16: monitorenter
      17: aload_0
      18: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      21: aload_3
      22: invokevirtual #38                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore        6
      27: aload         6
      29: ifnonnull     70
      32: aload_2
      33: aload_1
      34: invokeinterface #52,  2           // InterfaceMethod org/apache/log4j/spi/LoggerFactory.makeNewLoggerInstance:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
      39: astore        4
      41: aload         4
      43: aload_0
      44: invokevirtual #14                 // Method org/apache/log4j/Logger.setHierarchy:(Lorg/apache/log4j/spi/LoggerRepository;)V
      47: aload_0
      48: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      51: aload_3
      52: aload         4
      54: invokevirtual #53                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: aload         4
      61: invokespecial #54                 // Method updateParents:(Lorg/apache/log4j/Logger;)V
      64: aload         4
      66: aload         5
      68: monitorexit
      69: areturn
      70: aload         6
      72: instanceof    #39                 // class org/apache/log4j/Logger
      75: ifeq          87
      78: aload         6
      80: checkcast     #39                 // class org/apache/log4j/Logger
      83: aload         5
      85: monitorexit
      86: areturn
      87: aload         6
      89: instanceof    #55                 // class org/apache/log4j/ProvisionNode
      92: ifeq          144
      95: aload_2
      96: aload_1
      97: invokeinterface #52,  2           // InterfaceMethod org/apache/log4j/spi/LoggerFactory.makeNewLoggerInstance:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
     102: astore        4
     104: aload         4
     106: aload_0
     107: invokevirtual #14                 // Method org/apache/log4j/Logger.setHierarchy:(Lorg/apache/log4j/spi/LoggerRepository;)V
     110: aload_0
     111: getfield      #7                  // Field ht:Ljava/util/Hashtable;
     114: aload_3
     115: aload         4
     117: invokevirtual #53                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: aload_0
     122: aload         6
     124: checkcast     #55                 // class org/apache/log4j/ProvisionNode
     127: aload         4
     129: invokespecial #56                 // Method updateChildren:(Lorg/apache/log4j/ProvisionNode;Lorg/apache/log4j/Logger;)V
     132: aload_0
     133: aload         4
     135: invokespecial #54                 // Method updateParents:(Lorg/apache/log4j/Logger;)V
     138: aload         4
     140: aload         5
     142: monitorexit
     143: areturn
     144: aconst_null
     145: aload         5
     147: monitorexit
     148: areturn
     149: astore        7
     151: aload         5
     153: monitorexit
     154: aload         7
     156: athrow
    Exception table:
       from    to  target type
          17    69   149   any
          70    86   149   any
          87   143   149   any
         144   148   149   any
         149   154   149   any

  public java.util.Enumeration getCurrentLoggers();
    Code:
       0: new           #8                  // class java/util/Vector
       3: dup
       4: aload_0
       5: getfield      #7                  // Field ht:Ljava/util/Hashtable;
       8: invokevirtual #57                 // Method java/util/Hashtable.size:()I
      11: invokespecial #9                  // Method java/util/Vector."<init>":(I)V
      14: astore_1
      15: aload_0
      16: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      19: invokevirtual #58                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
      22: astore_2
      23: aload_2
      24: invokeinterface #59,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      29: ifeq          54
      32: aload_2
      33: invokeinterface #60,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      38: astore_3
      39: aload_3
      40: instanceof    #39                 // class org/apache/log4j/Logger
      43: ifeq          51
      46: aload_1
      47: aload_3
      48: invokevirtual #25                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      51: goto          23
      54: aload_1
      55: invokevirtual #61                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      58: areturn

  public java.util.Enumeration getCurrentCategories();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
       4: areturn

  public org.apache.log4j.or.RendererMap getRendererMap();
    Code:
       0: aload_0
       1: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: areturn

  public org.apache.log4j.Logger getRootLogger();
    Code:
       0: aload_0
       1: getfield      #11                 // Field root:Lorg/apache/log4j/Logger;
       4: areturn

  public boolean isDisabled(int);
    Code:
       0: aload_0
       1: getfield      #44                 // Field thresholdInt:I
       4: iload_1
       5: if_icmple     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void overrideAsNeeded(java.lang.String);
    Code:
       0: ldc           #63                 // String The Hiearchy.overrideAsNeeded method has been deprecated.
       2: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       5: return

  public void resetConfiguration();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getRootLogger:()Lorg/apache/log4j/Logger;
       4: getstatic     #65                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
       7: invokevirtual #66                 // Method org/apache/log4j/Logger.setLevel:(Lorg/apache/log4j/Level;)V
      10: aload_0
      11: getfield      #11                 // Field root:Lorg/apache/log4j/Logger;
      14: aconst_null
      15: invokevirtual #67                 // Method org/apache/log4j/Logger.setResourceBundle:(Ljava/util/ResourceBundle;)V
      18: aload_0
      19: getstatic     #12                 // Field org/apache/log4j/Level.ALL:Lorg/apache/log4j/Level;
      22: invokevirtual #13                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      25: aload_0
      26: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      29: dup
      30: astore_1
      31: monitorenter
      32: aload_0
      33: invokevirtual #68                 // Method shutdown:()V
      36: aload_0
      37: invokevirtual #62                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
      40: astore_2
      41: aload_2
      42: invokeinterface #59,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      47: ifeq          78
      50: aload_2
      51: invokeinterface #60,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      56: checkcast     #39                 // class org/apache/log4j/Logger
      59: astore_3
      60: aload_3
      61: aconst_null
      62: invokevirtual #66                 // Method org/apache/log4j/Logger.setLevel:(Lorg/apache/log4j/Level;)V
      65: aload_3
      66: iconst_1
      67: invokevirtual #69                 // Method org/apache/log4j/Logger.setAdditivity:(Z)V
      70: aload_3
      71: aconst_null
      72: invokevirtual #67                 // Method org/apache/log4j/Logger.setResourceBundle:(Ljava/util/ResourceBundle;)V
      75: goto          41
      78: aload_1
      79: monitorexit
      80: goto          90
      83: astore        4
      85: aload_1
      86: monitorexit
      87: aload         4
      89: athrow
      90: aload_0
      91: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
      94: invokevirtual #70                 // Method org/apache/log4j/or/RendererMap.clear:()V
      97: aload_0
      98: aconst_null
      99: putfield      #4                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
     102: return
    Exception table:
       from    to  target type
          32    80    83   any
          83    87    83   any

  public void setDisableOverride(java.lang.String);
    Code:
       0: ldc           #71                 // String The Hiearchy.setDisableOverride method has been deprecated.
       2: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       5: return

  public void setRenderer(java.lang.Class, org.apache.log4j.or.ObjectRenderer);
    Code:
       0: aload_0
       1: getfield      #17                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #21                 // Method org/apache/log4j/or/RendererMap.put:(Ljava/lang/Class;Lorg/apache/log4j/or/ObjectRenderer;)V
       9: return

  public void setThrowableRenderer(org.apache.log4j.spi.ThrowableRenderer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
       5: return

  public org.apache.log4j.spi.ThrowableRenderer getThrowableRenderer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field throwableRenderer:Lorg/apache/log4j/spi/ThrowableRenderer;
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getRootLogger:()Lorg/apache/log4j/Logger;
       4: astore_1
       5: aload_1
       6: invokevirtual #72                 // Method org/apache/log4j/Logger.closeNestedAppenders:()V
       9: aload_0
      10: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      13: dup
      14: astore_2
      15: monitorenter
      16: aload_0
      17: invokevirtual #62                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
      20: astore_3
      21: aload_3
      22: invokeinterface #59,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      27: ifeq          49
      30: aload_3
      31: invokeinterface #60,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      36: checkcast     #39                 // class org/apache/log4j/Logger
      39: astore        4
      41: aload         4
      43: invokevirtual #72                 // Method org/apache/log4j/Logger.closeNestedAppenders:()V
      46: goto          21
      49: aload_1
      50: invokevirtual #73                 // Method org/apache/log4j/Logger.removeAllAppenders:()V
      53: aload_0
      54: invokevirtual #62                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
      57: astore_3
      58: aload_3
      59: invokeinterface #59,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      64: ifeq          86
      67: aload_3
      68: invokeinterface #60,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      73: checkcast     #39                 // class org/apache/log4j/Logger
      76: astore        4
      78: aload         4
      80: invokevirtual #73                 // Method org/apache/log4j/Logger.removeAllAppenders:()V
      83: goto          58
      86: aload_2
      87: monitorexit
      88: goto          98
      91: astore        5
      93: aload_2
      94: monitorexit
      95: aload         5
      97: athrow
      98: return
    Exception table:
       from    to  target type
          16    88    91   any
          91    95    91   any

  private final void updateParents(org.apache.log4j.Logger);
    Code:
       0: aload_1
       1: getfield      #74                 // Field org/apache/log4j/Logger.name:Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokevirtual #75                 // Method java/lang/String.length:()I
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: bipush        46
      16: iload_3
      17: iconst_1
      18: isub
      19: invokevirtual #76                 // Method java/lang/String.lastIndexOf:(II)I
      22: istore        5
      24: iload         5
      26: iflt          190
      29: aload_2
      30: iconst_0
      31: iload         5
      33: invokevirtual #77                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: astore        6
      38: new           #36                 // class org/apache/log4j/CategoryKey
      41: dup
      42: aload         6
      44: invokespecial #37                 // Method org/apache/log4j/CategoryKey."<init>":(Ljava/lang/String;)V
      47: astore        7
      49: aload_0
      50: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      53: aload         7
      55: invokevirtual #38                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: astore        8
      60: aload         8
      62: ifnonnull     90
      65: new           #55                 // class org/apache/log4j/ProvisionNode
      68: dup
      69: aload_1
      70: invokespecial #78                 // Method org/apache/log4j/ProvisionNode."<init>":(Lorg/apache/log4j/Logger;)V
      73: astore        9
      75: aload_0
      76: getfield      #7                  // Field ht:Ljava/util/Hashtable;
      79: aload         7
      81: aload         9
      83: invokevirtual #53                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          175
      90: aload         8
      92: instanceof    #79                 // class org/apache/log4j/Category
      95: ifeq          113
      98: iconst_1
      99: istore        4
     101: aload_1
     102: aload         8
     104: checkcast     #79                 // class org/apache/log4j/Category
     107: putfield      #80                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
     110: goto          190
     113: aload         8
     115: instanceof    #55                 // class org/apache/log4j/ProvisionNode
     118: ifeq          133
     121: aload         8
     123: checkcast     #55                 // class org/apache/log4j/ProvisionNode
     126: aload_1
     127: invokevirtual #81                 // Method org/apache/log4j/ProvisionNode.addElement:(Ljava/lang/Object;)V
     130: goto          175
     133: new           #82                 // class java/lang/IllegalStateException
     136: dup
     137: new           #27                 // class java/lang/StringBuffer
     140: dup
     141: invokespecial #28                 // Method java/lang/StringBuffer."<init>":()V
     144: ldc           #83                 // String unexpected object type
     146: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     149: aload         8
     151: invokevirtual #84                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     154: invokevirtual #85                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     157: ldc           #86                 // String  in ht.
     159: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     162: invokevirtual #33                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     165: invokespecial #87                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     168: astore        9
     170: aload         9
     172: invokevirtual #88                 // Method java/lang/Exception.printStackTrace:()V
     175: aload_2
     176: bipush        46
     178: iload         5
     180: iconst_1
     181: isub
     182: invokevirtual #76                 // Method java/lang/String.lastIndexOf:(II)I
     185: istore        5
     187: goto          24
     190: iload         4
     192: ifne          203
     195: aload_1
     196: aload_0
     197: getfield      #11                 // Field root:Lorg/apache/log4j/Logger;
     200: putfield      #80                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
     203: return

  private final void updateChildren(org.apache.log4j.ProvisionNode, org.apache.log4j.Logger);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method org/apache/log4j/ProvisionNode.size:()I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     64
      14: aload_1
      15: iload         4
      17: invokevirtual #90                 // Method org/apache/log4j/ProvisionNode.elementAt:(I)Ljava/lang/Object;
      20: checkcast     #39                 // class org/apache/log4j/Logger
      23: astore        5
      25: aload         5
      27: getfield      #80                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      30: getfield      #91                 // Field org/apache/log4j/Category.name:Ljava/lang/String;
      33: aload_2
      34: getfield      #74                 // Field org/apache/log4j/Logger.name:Ljava/lang/String;
      37: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      40: ifne          58
      43: aload_2
      44: aload         5
      46: getfield      #80                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      49: putfield      #80                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      52: aload         5
      54: aload_2
      55: putfield      #80                 // Field org/apache/log4j/Logger.parent:Lorg/apache/log4j/Category;
      58: iinc          4, 1
      61: goto          8
      64: return
}
