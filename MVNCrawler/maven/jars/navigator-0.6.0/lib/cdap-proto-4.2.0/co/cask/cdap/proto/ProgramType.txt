Compiled from "ProgramType.java"
public final class co.cask.cdap.proto.ProgramType extends java.lang.Enum<co.cask.cdap.proto.ProgramType> {
  public static final co.cask.cdap.proto.ProgramType FLOW;

  public static final co.cask.cdap.proto.ProgramType MAPREDUCE;

  public static final co.cask.cdap.proto.ProgramType WORKFLOW;

  public static final co.cask.cdap.proto.ProgramType WEBAPP;

  public static final co.cask.cdap.proto.ProgramType SERVICE;

  public static final co.cask.cdap.proto.ProgramType SPARK;

  public static final co.cask.cdap.proto.ProgramType WORKER;

  public static final co.cask.cdap.proto.ProgramType CUSTOM_ACTION;

  private static final java.util.Map<java.lang.String, co.cask.cdap.proto.ProgramType> CATEGORY_MAP;

  private final int index;

  private final co.cask.cdap.proto.ProgramType$Parameters parameters;

  private static final co.cask.cdap.proto.ProgramType[] $VALUES;

  public static co.cask.cdap.proto.ProgramType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lco/cask/cdap/proto/ProgramType;
       3: invokevirtual #2                  // Method "[Lco/cask/cdap/proto/ProgramType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lco/cask/cdap/proto/ProgramType;"
       9: areturn

  public static co.cask.cdap.proto.ProgramType valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class co/cask/cdap/proto/ProgramType
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class co/cask/cdap/proto/ProgramType
      10: areturn

  private co.cask.cdap.proto.ProgramType(int, co.cask.cdap.proto.ProgramType$Parameters);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #7                  // Field index:I
      11: aload_0
      12: aload         4
      14: putfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
      17: return

  public boolean isListable();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
       4: invokestatic  #9                  // Method co/cask/cdap/proto/ProgramType$Parameters.access$000:(Lco/cask/cdap/proto/ProgramType$Parameters;)Z
       7: ireturn

  public java.lang.String getCategoryName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
       4: invokevirtual #10                 // Method co/cask/cdap/proto/ProgramType$Parameters.getCategoryName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getPrettyName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
       4: invokevirtual #11                 // Method co/cask/cdap/proto/ProgramType$Parameters.getPrettyName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getScope();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method name:()Ljava/lang/String;
       4: invokevirtual #13                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       7: areturn

  public co.cask.cdap.api.schedule.SchedulableProgramType getSchedulableType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
       4: invokevirtual #14                 // Method co/cask/cdap/proto/ProgramType$Parameters.getSchedulableType:()Lco/cask/cdap/api/schedule/SchedulableProgramType;
       7: ifnonnull     37
      10: new           #15                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #16                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #19                 // String  is not a SchedulableProgramType
      27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
      41: invokevirtual #14                 // Method co/cask/cdap/proto/ProgramType$Parameters.getSchedulableType:()Lco/cask/cdap/api/schedule/SchedulableProgramType;
      44: areturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #7                  // Field index:I
       4: ireturn

  public static co.cask.cdap.proto.ProgramType valueOfSchedulableType(co.cask.cdap.api.schedule.SchedulableProgramType);
    Code:
       0: invokestatic  #23                 // Method values:()[Lco/cask/cdap/proto/ProgramType;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     43
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload_0
      20: aload         4
      22: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
      25: invokevirtual #14                 // Method co/cask/cdap/proto/ProgramType$Parameters.getSchedulableType:()Lco/cask/cdap/api/schedule/SchedulableProgramType;
      28: invokevirtual #24                 // Method co/cask/cdap/api/schedule/SchedulableProgramType.equals:(Ljava/lang/Object;)Z
      31: ifeq          37
      34: aload         4
      36: areturn
      37: iinc          3, 1
      40: goto          9
      43: new           #15                 // class java/lang/IllegalArgumentException
      46: dup
      47: new           #16                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #25                 // String No ProgramType found for SchedulableProgramType
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow

  public static co.cask.cdap.proto.ProgramType valueOfPrettyName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
       4: invokestatic  #27                 // Method valueOf:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType;
       7: areturn

  public static co.cask.cdap.proto.ProgramType valueOfCategoryName(java.lang.String);
    Code:
       0: getstatic     #28                 // Field CATEGORY_MAP:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class co/cask/cdap/proto/ProgramType
      12: astore_1
      13: aload_1
      14: ifnonnull     44
      17: new           #15                 // class java/lang/IllegalArgumentException
      20: dup
      21: new           #16                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #30                 // String Unknown category name
      30: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_1
      45: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parameters:Lco/cask/cdap/proto/ProgramType$Parameters;
       4: invokevirtual #11                 // Method co/cask/cdap/proto/ProgramType$Parameters.getPrettyName:()Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: new           #4                  // class co/cask/cdap/proto/ProgramType
       3: dup
       4: ldc           #31                 // String FLOW
       6: iconst_0
       7: iconst_1
       8: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      11: ldc           #33                 // String flows
      13: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      16: ldc           #35                 // String Flow
      18: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      21: iconst_1
      22: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      25: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
      28: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
      31: putstatic     #40                 // Field FLOW:Lco/cask/cdap/proto/ProgramType;
      34: new           #4                  // class co/cask/cdap/proto/ProgramType
      37: dup
      38: ldc           #41                 // String MAPREDUCE
      40: iconst_1
      41: iconst_3
      42: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      45: ldc           #42                 // String mapreduce
      47: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      50: ldc           #43                 // String MapReduce
      52: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      55: iconst_1
      56: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      59: getstatic     #44                 // Field co/cask/cdap/api/schedule/SchedulableProgramType.MAPREDUCE:Lco/cask/cdap/api/schedule/SchedulableProgramType;
      62: invokevirtual #45                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setSchedulableType:(Lco/cask/cdap/api/schedule/SchedulableProgramType;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      65: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
      68: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
      71: putstatic     #46                 // Field MAPREDUCE:Lco/cask/cdap/proto/ProgramType;
      74: new           #4                  // class co/cask/cdap/proto/ProgramType
      77: dup
      78: ldc           #47                 // String WORKFLOW
      80: iconst_2
      81: iconst_4
      82: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      85: ldc           #48                 // String workflows
      87: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      90: ldc           #49                 // String Workflow
      92: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      95: iconst_1
      96: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
      99: getstatic     #50                 // Field co/cask/cdap/api/schedule/SchedulableProgramType.WORKFLOW:Lco/cask/cdap/api/schedule/SchedulableProgramType;
     102: invokevirtual #45                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setSchedulableType:(Lco/cask/cdap/api/schedule/SchedulableProgramType;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     105: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
     108: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
     111: putstatic     #51                 // Field WORKFLOW:Lco/cask/cdap/proto/ProgramType;
     114: new           #4                  // class co/cask/cdap/proto/ProgramType
     117: dup
     118: ldc           #52                 // String WEBAPP
     120: iconst_3
     121: iconst_5
     122: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     125: ldc           #53                 // String webapp
     127: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     130: ldc           #54                 // String Webapp
     132: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     135: iconst_0
     136: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     139: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
     142: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
     145: putstatic     #55                 // Field WEBAPP:Lco/cask/cdap/proto/ProgramType;
     148: new           #4                  // class co/cask/cdap/proto/ProgramType
     151: dup
     152: ldc           #56                 // String SERVICE
     154: iconst_4
     155: bipush        6
     157: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     160: ldc           #57                 // String services
     162: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     165: ldc           #58                 // String Service
     167: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     170: iconst_1
     171: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     174: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
     177: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
     180: putstatic     #59                 // Field SERVICE:Lco/cask/cdap/proto/ProgramType;
     183: new           #4                  // class co/cask/cdap/proto/ProgramType
     186: dup
     187: ldc           #60                 // String SPARK
     189: iconst_5
     190: bipush        7
     192: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     195: ldc           #61                 // String spark
     197: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     200: ldc           #62                 // String Spark
     202: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     205: iconst_1
     206: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     209: getstatic     #63                 // Field co/cask/cdap/api/schedule/SchedulableProgramType.SPARK:Lco/cask/cdap/api/schedule/SchedulableProgramType;
     212: invokevirtual #45                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setSchedulableType:(Lco/cask/cdap/api/schedule/SchedulableProgramType;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     215: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
     218: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
     221: putstatic     #64                 // Field SPARK:Lco/cask/cdap/proto/ProgramType;
     224: new           #4                  // class co/cask/cdap/proto/ProgramType
     227: dup
     228: ldc           #65                 // String WORKER
     230: bipush        6
     232: bipush        8
     234: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     237: ldc           #66                 // String workers
     239: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     242: ldc           #67                 // String Worker
     244: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     247: iconst_1
     248: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     251: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
     254: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
     257: putstatic     #68                 // Field WORKER:Lco/cask/cdap/proto/ProgramType;
     260: new           #4                  // class co/cask/cdap/proto/ProgramType
     263: dup
     264: ldc           #69                 // String CUSTOM_ACTION
     266: bipush        7
     268: bipush        9
     270: invokestatic  #32                 // Method co/cask/cdap/proto/ProgramType$Parameters.builder:()Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     273: ldc           #70                 // String custom
     275: invokevirtual #34                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setCategoryName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     278: ldc           #71                 // String Custom
     280: invokevirtual #36                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setPrettyName:(Ljava/lang/String;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     283: iconst_0
     284: invokevirtual #37                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setListable:(Z)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     287: getstatic     #72                 // Field co/cask/cdap/api/schedule/SchedulableProgramType.CUSTOM_ACTION:Lco/cask/cdap/api/schedule/SchedulableProgramType;
     290: invokevirtual #45                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.setSchedulableType:(Lco/cask/cdap/api/schedule/SchedulableProgramType;)Lco/cask/cdap/proto/ProgramType$Parameters$Builder;
     293: invokevirtual #38                 // Method co/cask/cdap/proto/ProgramType$Parameters$Builder.build:()Lco/cask/cdap/proto/ProgramType$Parameters;
     296: invokespecial #39                 // Method "<init>":(Ljava/lang/String;IILco/cask/cdap/proto/ProgramType$Parameters;)V
     299: putstatic     #73                 // Field CUSTOM_ACTION:Lco/cask/cdap/proto/ProgramType;
     302: bipush        8
     304: anewarray     #4                  // class co/cask/cdap/proto/ProgramType
     307: dup
     308: iconst_0
     309: getstatic     #40                 // Field FLOW:Lco/cask/cdap/proto/ProgramType;
     312: aastore
     313: dup
     314: iconst_1
     315: getstatic     #46                 // Field MAPREDUCE:Lco/cask/cdap/proto/ProgramType;
     318: aastore
     319: dup
     320: iconst_2
     321: getstatic     #51                 // Field WORKFLOW:Lco/cask/cdap/proto/ProgramType;
     324: aastore
     325: dup
     326: iconst_3
     327: getstatic     #55                 // Field WEBAPP:Lco/cask/cdap/proto/ProgramType;
     330: aastore
     331: dup
     332: iconst_4
     333: getstatic     #59                 // Field SERVICE:Lco/cask/cdap/proto/ProgramType;
     336: aastore
     337: dup
     338: iconst_5
     339: getstatic     #64                 // Field SPARK:Lco/cask/cdap/proto/ProgramType;
     342: aastore
     343: dup
     344: bipush        6
     346: getstatic     #68                 // Field WORKER:Lco/cask/cdap/proto/ProgramType;
     349: aastore
     350: dup
     351: bipush        7
     353: getstatic     #73                 // Field CUSTOM_ACTION:Lco/cask/cdap/proto/ProgramType;
     356: aastore
     357: putstatic     #1                  // Field $VALUES:[Lco/cask/cdap/proto/ProgramType;
     360: new           #74                 // class java/util/HashMap
     363: dup
     364: invokespecial #75                 // Method java/util/HashMap."<init>":()V
     367: putstatic     #28                 // Field CATEGORY_MAP:Ljava/util/Map;
     370: invokestatic  #23                 // Method values:()[Lco/cask/cdap/proto/ProgramType;
     373: astore_0
     374: aload_0
     375: arraylength
     376: istore_1
     377: iconst_0
     378: istore_2
     379: iload_2
     380: iload_1
     381: if_icmpge     408
     384: aload_0
     385: iload_2
     386: aaload
     387: astore_3
     388: getstatic     #28                 // Field CATEGORY_MAP:Ljava/util/Map;
     391: aload_3
     392: invokevirtual #76                 // Method getCategoryName:()Ljava/lang/String;
     395: aload_3
     396: invokeinterface #77,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     401: pop
     402: iinc          2, 1
     405: goto          379
     408: return
}
