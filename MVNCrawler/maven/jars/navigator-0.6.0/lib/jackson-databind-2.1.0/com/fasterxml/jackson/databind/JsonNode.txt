Compiled from "JsonNode.java"
public abstract class com.fasterxml.jackson.databind.JsonNode implements com.fasterxml.jackson.core.TreeNode, java.lang.Iterable<com.fasterxml.jackson.databind.JsonNode> {
  protected static final java.util.List<com.fasterxml.jackson.databind.JsonNode> NO_NODES;

  protected static final java.util.List<java.lang.String> NO_STRINGS;

  protected com.fasterxml.jackson.databind.JsonNode();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract <T extends com.fasterxml.jackson.databind.JsonNode> T deepCopy();

  public boolean isValueNode();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isContainerNode();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isMissingNode();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isArray();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isObject();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isPojo();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isNumber();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isIntegralNumber();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isFloatingPointNumber();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isInt();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isLong();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDouble();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isBigDecimal();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isBigInteger();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isTextual();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isBoolean();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isNull();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isBinary();
    Code:
       0: iconst_0
       1: ireturn

  public abstract com.fasterxml.jackson.core.JsonToken asToken();

  public abstract com.fasterxml.jackson.core.JsonParser$NumberType numberType();

  public boolean canConvertToInt();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canConvertToLong();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String textValue();
    Code:
       0: aconst_null
       1: areturn

  public byte[] binaryValue() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public boolean booleanValue();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Number numberValue();
    Code:
       0: aconst_null
       1: areturn

  public int intValue();
    Code:
       0: iconst_0
       1: ireturn

  public long longValue();
    Code:
       0: lconst_0
       1: lreturn

  public double doubleValue();
    Code:
       0: dconst_0
       1: dreturn

  public java.math.BigDecimal decimalValue();
    Code:
       0: getstatic     #2                  // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
       3: areturn

  public java.math.BigInteger bigIntegerValue();
    Code:
       0: getstatic     #3                  // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
       3: areturn

  public com.fasterxml.jackson.databind.JsonNode get(int);
    Code:
       0: aconst_null
       1: areturn

  public com.fasterxml.jackson.databind.JsonNode get(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public abstract java.lang.String asText();

  public int asInt();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #4                  // Method asInt:(I)I
       5: ireturn

  public int asInt(int);
    Code:
       0: iload_1
       1: ireturn

  public long asLong();
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #5                  // Method asLong:(J)J
       5: lreturn

  public long asLong(long);
    Code:
       0: lload_1
       1: lreturn

  public double asDouble();
    Code:
       0: aload_0
       1: dconst_0
       2: invokevirtual #6                  // Method asDouble:(D)D
       5: dreturn

  public double asDouble(double);
    Code:
       0: dload_1
       1: dreturn

  public boolean asBoolean();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #7                  // Method asBoolean:(Z)Z
       5: ireturn

  public boolean asBoolean(boolean);
    Code:
       0: iload_1
       1: ireturn

  public boolean has(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean has(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method get:(I)Lcom/fasterxml/jackson/databind/JsonNode;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean hasNonNull(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_2
       6: aload_2
       7: ifnull        21
      10: aload_2
      11: invokevirtual #10                 // Method isNull:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasNonNull(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method get:(I)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_2
       6: aload_2
       7: ifnull        21
      10: aload_2
      11: invokevirtual #10                 // Method isNull:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public abstract com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String);

  public final java.util.List<com.fasterxml.jackson.databind.JsonNode> findValues(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #11                 // Method findValues:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       6: astore_2
       7: aload_2
       8: ifnonnull     15
      11: invokestatic  #12                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: areturn
      15: aload_2
      16: areturn

  public final java.util.List<java.lang.String> findValuesAsText(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #13                 // Method findValuesAsText:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       6: astore_2
       7: aload_2
       8: ifnonnull     15
      11: invokestatic  #12                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: areturn
      15: aload_2
      16: areturn

  public abstract com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String);

  public abstract com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String);

  public final java.util.List<com.fasterxml.jackson.databind.JsonNode> findParents(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #14                 // Method findParents:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
       6: astore_2
       7: aload_2
       8: ifnonnull     15
      11: invokestatic  #12                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: areturn
      15: aload_2
      16: areturn

  public abstract java.util.List<com.fasterxml.jackson.databind.JsonNode> findValues(java.lang.String, java.util.List<com.fasterxml.jackson.databind.JsonNode>);

  public abstract java.util.List<java.lang.String> findValuesAsText(java.lang.String, java.util.List<java.lang.String>);

  public abstract java.util.List<com.fasterxml.jackson.databind.JsonNode> findParents(java.lang.String, java.util.List<com.fasterxml.jackson.databind.JsonNode>);

  public int size();
    Code:
       0: iconst_0
       1: ireturn

  public final java.util.Iterator<com.fasterxml.jackson.databind.JsonNode> iterator();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method elements:()Ljava/util/Iterator;
       4: areturn

  public java.util.Iterator<com.fasterxml.jackson.databind.JsonNode> elements();
    Code:
       0: getstatic     #16                 // Field NO_NODES:Ljava/util/List;
       3: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: areturn

  public java.util.Iterator<java.lang.String> fieldNames();
    Code:
       0: getstatic     #18                 // Field NO_STRINGS:Ljava/util/List;
       3: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>> fields();
    Code:
       0: invokestatic  #12                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: astore_1
       4: aload_1
       5: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      10: areturn

  public abstract com.fasterxml.jackson.databind.JsonNode path(java.lang.String);

  public abstract com.fasterxml.jackson.databind.JsonNode path(int);

  public com.fasterxml.jackson.databind.JsonNode with(java.lang.String);
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #21                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #23                 // String JsonNode not of type ObjectNode (but
      13: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #27                 // String ), can not call with() on it
      28: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String);
    Code:
       0: new           #20                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #21                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #23                 // String JsonNode not of type ObjectNode (but
      13: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #30                 // String ), can not call withArray() on it
      28: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public abstract com.fasterxml.jackson.core.JsonParser traverse();

  public abstract java.lang.String toString();

  public abstract boolean equals(java.lang.Object);

  static {};
    Code:
       0: invokestatic  #12                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: putstatic     #16                 // Field NO_NODES:Ljava/util/List;
       6: invokestatic  #12                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: putstatic     #18                 // Field NO_STRINGS:Ljava/util/List;
      12: return
}
