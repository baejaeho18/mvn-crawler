Compiled from "NumberDeserializers.java"
public class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer<java.math.BigDecimal> {
  public com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/math/BigDecimal
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer."<init>":(Ljava/lang/Class;)V
       7: return

  public java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method com/fasterxml/jackson/core/JsonParser.getCurrentToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: astore_3
       5: aload_3
       6: getstatic     #4                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;
       9: if_acmpeq     19
      12: aload_3
      13: getstatic     #5                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;
      16: if_acmpne     24
      19: aload_1
      20: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;
      23: areturn
      24: aload_3
      25: getstatic     #7                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;
      28: if_acmpne     75
      31: aload_1
      32: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;
      35: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      38: astore        4
      40: aload         4
      42: invokevirtual #10                 // Method java/lang/String.length:()I
      45: ifne          50
      48: aconst_null
      49: areturn
      50: new           #1                  // class java/math/BigDecimal
      53: dup
      54: aload         4
      56: invokespecial #11                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      59: areturn
      60: astore        5
      62: aload_2
      63: aload         4
      65: aload_0
      66: getfield      #13                 // Field _valueClass:Ljava/lang/Class;
      69: ldc           #14                 // String not a valid representation
      71: invokevirtual #15                 // Method com/fasterxml/jackson/databind/DeserializationContext.weirdStringException:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonMappingException;
      74: athrow
      75: aload_2
      76: aload_0
      77: getfield      #13                 // Field _valueClass:Ljava/lang/Class;
      80: aload_3
      81: invokevirtual #16                 // Method com/fasterxml/jackson/databind/DeserializationContext.mappingException:(Ljava/lang/Class;Lcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/databind/JsonMappingException;
      84: athrow
    Exception table:
       from    to  target type
          50    59    60   Class java/lang/IllegalArgumentException

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/math/BigDecimal;
       6: areturn
}
