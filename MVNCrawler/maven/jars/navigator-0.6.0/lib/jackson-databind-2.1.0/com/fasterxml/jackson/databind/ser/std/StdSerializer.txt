Compiled from "StdSerializer.java"
public abstract class com.fasterxml.jackson.databind.ser.std.StdSerializer<T> extends com.fasterxml.jackson.databind.JsonSerializer<T> implements com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable, com.fasterxml.jackson.databind.jsonschema.SchemaAware {
  protected final java.lang.Class<T> _handledType;

  protected com.fasterxml.jackson.databind.ser.std.StdSerializer(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/JsonSerializer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _handledType:Ljava/lang/Class;
       9: return

  protected com.fasterxml.jackson.databind.ser.std.StdSerializer(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/JsonSerializer."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method com/fasterxml/jackson/databind/JavaType.getRawClass:()Ljava/lang/Class;
       9: putfield      #2                  // Field _handledType:Ljava/lang/Class;
      12: return

  protected com.fasterxml.jackson.databind.ser.std.StdSerializer(java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/JsonSerializer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _handledType:Ljava/lang/Class;
       9: return

  public java.lang.Class<T> handledType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _handledType:Ljava/lang/Class;
       4: areturn

  public abstract void serialize(T, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: ldc           #4                  // String string
       3: invokevirtual #5                  // Method createSchemaNode:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       6: areturn

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type, boolean) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #6                  // Method getSchema:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JsonNode;
       6: checkcast     #7                  // class com/fasterxml/jackson/databind/node/ObjectNode
       9: astore        4
      11: iload_3
      12: ifne          32
      15: aload         4
      17: ldc           #8                  // String required
      19: iload_3
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: invokevirtual #9                  // Method com/fasterxml/jackson/databind/node/ObjectNode.put:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
      31: pop
      32: aload         4
      34: areturn

  protected com.fasterxml.jackson.databind.node.ObjectNode createObjectNode();
    Code:
       0: getstatic     #10                 // Field com/fasterxml/jackson/databind/node/JsonNodeFactory.instance:Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
       3: invokevirtual #11                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
       6: areturn

  protected com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method createObjectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
       4: astore_2
       5: aload_2
       6: ldc           #13                 // String type
       8: aload_1
       9: invokevirtual #14                 // Method com/fasterxml/jackson/databind/node/ObjectNode.put:(Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
      12: pop
      13: aload_2
      14: areturn

  protected com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method createSchemaNode:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       5: astore_3
       6: iload_2
       7: ifne          26
      10: aload_3
      11: ldc           #8                  // String required
      13: iload_2
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokevirtual #9                  // Method com/fasterxml/jackson/databind/node/ObjectNode.put:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
      25: pop
      26: aload_3
      27: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #15,  2           // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectAnyFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonAnyFormatVisitor;
       7: pop
       8: return

  public void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Throwable, java.lang.Object, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: instanceof    #16                 // class java/lang/reflect/InvocationTargetException
       4: ifeq          22
       7: aload_2
       8: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      11: ifnull        22
      14: aload_2
      15: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      18: astore_2
      19: goto          0
      22: aload_2
      23: instanceof    #18                 // class java/lang/Error
      26: ifeq          34
      29: aload_2
      30: checkcast     #18                 // class java/lang/Error
      33: athrow
      34: aload_1
      35: ifnull        48
      38: aload_1
      39: getstatic     #19                 // Field com/fasterxml/jackson/databind/SerializationFeature.WRAP_EXCEPTIONS:Lcom/fasterxml/jackson/databind/SerializationFeature;
      42: invokevirtual #20                 // Method com/fasterxml/jackson/databind/SerializerProvider.isEnabled:(Lcom/fasterxml/jackson/databind/SerializationFeature;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        5
      55: aload_2
      56: instanceof    #21                 // class java/io/IOException
      59: ifeq          79
      62: iload         5
      64: ifeq          74
      67: aload_2
      68: instanceof    #22                 // class com/fasterxml/jackson/databind/JsonMappingException
      71: ifne          96
      74: aload_2
      75: checkcast     #21                 // class java/io/IOException
      78: athrow
      79: iload         5
      81: ifne          96
      84: aload_2
      85: instanceof    #23                 // class java/lang/RuntimeException
      88: ifeq          96
      91: aload_2
      92: checkcast     #23                 // class java/lang/RuntimeException
      95: athrow
      96: aload_2
      97: aload_3
      98: aload         4
     100: invokestatic  #24                 // Method com/fasterxml/jackson/databind/JsonMappingException.wrapWithPath:(Ljava/lang/Throwable;Ljava/lang/Object;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonMappingException;
     103: athrow

  public void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Throwable, java.lang.Object, int) throws java.io.IOException;
    Code:
       0: aload_2
       1: instanceof    #16                 // class java/lang/reflect/InvocationTargetException
       4: ifeq          22
       7: aload_2
       8: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      11: ifnull        22
      14: aload_2
      15: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      18: astore_2
      19: goto          0
      22: aload_2
      23: instanceof    #18                 // class java/lang/Error
      26: ifeq          34
      29: aload_2
      30: checkcast     #18                 // class java/lang/Error
      33: athrow
      34: aload_1
      35: ifnull        48
      38: aload_1
      39: getstatic     #19                 // Field com/fasterxml/jackson/databind/SerializationFeature.WRAP_EXCEPTIONS:Lcom/fasterxml/jackson/databind/SerializationFeature;
      42: invokevirtual #20                 // Method com/fasterxml/jackson/databind/SerializerProvider.isEnabled:(Lcom/fasterxml/jackson/databind/SerializationFeature;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        5
      55: aload_2
      56: instanceof    #21                 // class java/io/IOException
      59: ifeq          79
      62: iload         5
      64: ifeq          74
      67: aload_2
      68: instanceof    #22                 // class com/fasterxml/jackson/databind/JsonMappingException
      71: ifne          96
      74: aload_2
      75: checkcast     #21                 // class java/io/IOException
      78: athrow
      79: iload         5
      81: ifne          96
      84: aload_2
      85: instanceof    #23                 // class java/lang/RuntimeException
      88: ifeq          96
      91: aload_2
      92: checkcast     #23                 // class java/lang/RuntimeException
      95: athrow
      96: aload_2
      97: aload_3
      98: iload         4
     100: invokestatic  #25                 // Method com/fasterxml/jackson/databind/JsonMappingException.wrapWithPath:(Ljava/lang/Throwable;Ljava/lang/Object;I)Lcom/fasterxml/jackson/databind/JsonMappingException;
     103: athrow

  protected boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer<?>);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #27                 // class com/fasterxml/jackson/databind/annotation/JacksonStdImpl
      11: invokevirtual #28                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
}
