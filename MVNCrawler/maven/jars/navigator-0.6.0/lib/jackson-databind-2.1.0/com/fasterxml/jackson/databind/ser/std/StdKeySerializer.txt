Compiled from "StdKeySerializer.java"
public class com.fasterxml.jackson.databind.ser.std.StdKeySerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {
  static final com.fasterxml.jackson.databind.ser.std.StdKeySerializer instace;

  public com.fasterxml.jackson.databind.ser.std.StdKeySerializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;)V
       7: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_1
       1: instanceof    #3                  // class java/util/Date
       4: ifeq          19
       7: aload_3
       8: aload_1
       9: checkcast     #3                  // class java/util/Date
      12: aload_2
      13: invokevirtual #4                  // Method com/fasterxml/jackson/databind/SerializerProvider.defaultSerializeDateKey:(Ljava/util/Date;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      16: goto          27
      19: aload_2
      20: aload_1
      21: invokevirtual #5                  // Method java/lang/Object.toString:()Ljava/lang/String;
      24: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      27: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: ldc           #7                  // String string
       3: invokevirtual #8                  // Method createSchemaNode:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       6: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #9,  2            // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectStringFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonStringFormatVisitor;
       7: pop
       8: return

  static {};
    Code:
       0: new           #10                 // class com/fasterxml/jackson/databind/ser/std/StdKeySerializer
       3: dup
       4: invokespecial #11                 // Method "<init>":()V
       7: putstatic     #12                 // Field instace:Lcom/fasterxml/jackson/databind/ser/std/StdKeySerializer;
      10: return
}
