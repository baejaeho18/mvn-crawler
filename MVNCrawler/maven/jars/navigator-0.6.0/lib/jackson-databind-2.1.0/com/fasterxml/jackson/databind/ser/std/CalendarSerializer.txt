Compiled from "CalendarSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.CalendarSerializer extends com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase<java.util.Calendar> {
  public static com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance;

  public com.fasterxml.jackson.databind.ser.std.CalendarSerializer();
    Code:
       0: aload_0
       1: iconst_0
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(ZLjava/text/DateFormat;)V
       6: return

  public com.fasterxml.jackson.databind.ser.std.CalendarSerializer(boolean, java.text.DateFormat);
    Code:
       0: aload_0
       1: ldc_w         #2                  // class java/util/Calendar
       4: iload_1
       5: aload_2
       6: invokespecial #3                  // Method com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase."<init>":(Ljava/lang/Class;ZLjava/text/DateFormat;)V
       9: return

  public com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(boolean, java.text.DateFormat);
    Code:
       0: iload_1
       1: ifeq          14
       4: new           #4                  // class com/fasterxml/jackson/databind/ser/std/CalendarSerializer
       7: dup
       8: iconst_1
       9: aconst_null
      10: invokespecial #1                  // Method "<init>":(ZLjava/text/DateFormat;)V
      13: areturn
      14: new           #4                  // class com/fasterxml/jackson/databind/ser/std/CalendarSerializer
      17: dup
      18: iconst_0
      19: aload_2
      20: invokespecial #1                  // Method "<init>":(ZLjava/text/DateFormat;)V
      23: areturn

  protected long _timestamp(java.util.Calendar);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: lconst_0
       5: goto          12
       8: aload_1
       9: invokevirtual #5                  // Method java/util/Calendar.getTimeInMillis:()J
      12: lreturn

  public void serialize(java.util.Calendar, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _useTimestamp:Z
       4: ifeq          19
       7: aload_2
       8: aload_0
       9: aload_1
      10: invokevirtual #7                  // Method _timestamp:(Ljava/util/Calendar;)J
      13: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
      16: goto          72
      19: aload_0
      20: getfield      #9                  // Field _customFormat:Ljava/text/DateFormat;
      23: ifnull        63
      26: aload_0
      27: getfield      #9                  // Field _customFormat:Ljava/text/DateFormat;
      30: dup
      31: astore        4
      33: monitorenter
      34: aload_2
      35: aload_0
      36: getfield      #9                  // Field _customFormat:Ljava/text/DateFormat;
      39: aload_1
      40: invokevirtual #10                 // Method java/text/DateFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
      43: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
      46: aload         4
      48: monitorexit
      49: goto          60
      52: astore        5
      54: aload         4
      56: monitorexit
      57: aload         5
      59: athrow
      60: goto          72
      63: aload_3
      64: aload_1
      65: invokevirtual #12                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      68: aload_2
      69: invokevirtual #13                 // Method com/fasterxml/jackson/databind/SerializerProvider.defaultSerializeDateValue:(Ljava/util/Date;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      72: return
    Exception table:
       from    to  target type
          34    49    52   any
          52    57    52   any

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class java/util/Calendar
       5: aload_2
       6: aload_3
       7: invokevirtual #14                 // Method serialize:(Ljava/util/Calendar;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  protected long _timestamp(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class java/util/Calendar
       5: invokevirtual #7                  // Method _timestamp:(Ljava/util/Calendar;)J
       8: lreturn

  public com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(boolean, java.text.DateFormat);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #15                 // Method withFormat:(ZLjava/text/DateFormat;)Lcom/fasterxml/jackson/databind/ser/std/CalendarSerializer;
       6: areturn

  static {};
    Code:
       0: new           #4                  // class com/fasterxml/jackson/databind/ser/std/CalendarSerializer
       3: dup
       4: invokespecial #16                 // Method "<init>":()V
       7: putstatic     #17                 // Field instance:Lcom/fasterxml/jackson/databind/ser/std/CalendarSerializer;
      10: return
}
