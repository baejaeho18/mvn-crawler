Compiled from "JsonSerializer.java"
public abstract class com.fasterxml.jackson.databind.JsonSerializer<T> implements com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable {
  public com.fasterxml.jackson.databind.JsonSerializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.fasterxml.jackson.databind.JsonSerializer<T> unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer);
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.databind.JsonSerializer<T> replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>);
    Code:
       0: new           #2                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #3                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public abstract void serialize(T, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;

  public void serializeWithType(T, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method handledType:()Ljava/lang/Class;
       4: astore        5
       6: aload         5
       8: ifnonnull     17
      11: aload_1
      12: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: astore        5
      17: new           #2                  // class java/lang/UnsupportedOperationException
      20: dup
      21: new           #6                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #8                  // String Type id handling not implemented for type
      30: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload         5
      35: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      47: athrow

  public java.lang.Class<T> handledType();
    Code:
       0: aconst_null
       1: areturn

  public boolean isEmpty(T);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  public boolean usesObjectId();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isUnwrappingSerializer();
    Code:
       0: iconst_0
       1: ireturn

  public com.fasterxml.jackson.databind.JsonSerializer<?> getDelegatee();
    Code:
       0: aconst_null
       1: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #13,  2           // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectAnyFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonAnyFormatVisitor;
       7: pop
       8: return
}
