Compiled from "AsPropertyTypeSerializer.java"
public class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer extends com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer {
  protected final java.lang.String _typePropertyName;

  public com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver, com.fasterxml.jackson.databind.BeanProperty, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/fasterxml/jackson/databind/jsontype/impl/AsArrayTypeSerializer."<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      11: return

  public com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _property:Lcom/fasterxml/jackson/databind/BeanProperty;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: new           #4                  // class com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer
      13: dup
      14: aload_0
      15: getfield      #5                  // Field _idResolver:Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;
      18: aload_1
      19: aload_0
      20: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      23: invokespecial #6                  // Method "<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/String;)V
      26: areturn

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       4: areturn

  public com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion();
    Code:
       0: getstatic     #7                  // Field com/fasterxml/jackson/annotation/JsonTypeInfo$As.PROPERTY:Lcom/fasterxml/jackson/annotation/JsonTypeInfo$As;
       3: areturn

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       4: aload_2
       5: aload_0
       6: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokevirtual #9                  // Method idFromValue:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      17: return

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       4: aload_2
       5: aload_0
       6: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: aload_3
      12: invokevirtual #11                 // Method idFromValueAndType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
      15: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      18: return

  public void writeTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       4: return

  public void writeCustomTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       4: aload_2
       5: aload_0
       6: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       9: aload_3
      10: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      13: return

  public void writeCustomTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_2
       1: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       4: return

  public com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method forProperty:(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer;
       5: areturn

  public com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method forProperty:(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer;
       5: areturn
}
