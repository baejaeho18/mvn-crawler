Compiled from "SerializerCache.java"
public final class com.fasterxml.jackson.databind.ser.SerializerCache {
  private java.util.HashMap<com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>> _sharedMap;

  private com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _readOnlyMap;

  public com.fasterxml.jackson.databind.ser.SerializerCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: bipush        64
      11: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
      14: putfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
      17: aload_0
      18: aconst_null
      19: putfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      22: return

  public com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
       8: astore_1
       9: aload_1
      10: ifnonnull     26
      13: aload_0
      14: aload_0
      15: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
      18: invokestatic  #6                  // Method com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.from:(Ljava/util/HashMap;)Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      21: dup
      22: astore_1
      23: putfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      26: aload_2
      27: monitorexit
      28: goto          36
      31: astore_3
      32: aload_2
      33: monitorexit
      34: aload_3
      35: athrow
      36: aload_1
      37: invokevirtual #7                  // Method com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.instance:()Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      40: areturn
    Exception table:
       from    to  target type
           4    28    31   any
          31    34    31   any

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       4: invokevirtual #8                  // Method java/util/HashMap.size:()I
       7: ireturn

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> untypedValueSerializer(java.lang.Class<?>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      11: dup
      12: aload_1
      13: iconst_0
      14: invokespecial #10                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Ljava/lang/Class;Z)V
      17: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #12                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> untypedValueSerializer(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      11: dup
      12: aload_1
      13: iconst_0
      14: invokespecial #13                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      17: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #12                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> typedValueSerializer(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #13                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      17: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #12                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> typedValueSerializer(java.lang.Class<?>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #10                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Ljava/lang/Class;Z)V
      17: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #12                 // class com/fasterxml/jackson/databind/JsonSerializer
      23: aload_2
      24: monitorexit
      25: areturn
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           4    25    26   any
          26    29    26   any

  public void addTypedSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #13                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      17: aload_2
      18: invokevirtual #14                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnonnull     29
      24: aload_0
      25: aconst_null
      26: putfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      29: aload_3
      30: monitorexit
      31: goto          41
      34: astore        4
      36: aload_3
      37: monitorexit
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
           4    31    34   any
          34    38    34   any

  public void addTypedSerializer(java.lang.Class<?>, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       8: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      11: dup
      12: aload_1
      13: iconst_1
      14: invokespecial #10                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Ljava/lang/Class;Z)V
      17: aload_2
      18: invokevirtual #14                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnonnull     29
      24: aload_0
      25: aconst_null
      26: putfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      29: aload_3
      30: monitorexit
      31: goto          41
      34: astore        4
      36: aload_3
      37: monitorexit
      38: aload         4
      40: athrow
      41: return
    Exception table:
       from    to  target type
           4    31    34   any
          34    38    34   any

  public void addAndResolveNonTypedSerializer(java.lang.Class<?>, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       9: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      12: dup
      13: aload_1
      14: iconst_0
      15: invokespecial #10                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Ljava/lang/Class;Z)V
      18: aload_2
      19: invokevirtual #14                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: ifnonnull     30
      25: aload_0
      26: aconst_null
      27: putfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      30: aload_2
      31: instanceof    #15                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      34: ifeq          47
      37: aload_2
      38: checkcast     #15                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      41: aload_3
      42: invokeinterface #16,  2           // InterfaceMethod com/fasterxml/jackson/databind/ser/ResolvableSerializer.resolve:(Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      47: aload         4
      49: monitorexit
      50: goto          61
      53: astore        5
      55: aload         4
      57: monitorexit
      58: aload         5
      60: athrow
      61: return
    Exception table:
       from    to  target type
           5    50    53   any
          53    58    53   any

  public void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       9: new           #9                  // class com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey
      12: dup
      13: aload_1
      14: iconst_0
      15: invokespecial #13                 // Method com/fasterxml/jackson/databind/ser/SerializerCache$TypeKey."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Z)V
      18: aload_2
      19: invokevirtual #14                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: ifnonnull     30
      25: aload_0
      26: aconst_null
      27: putfield      #5                  // Field _readOnlyMap:Lcom/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap;
      30: aload_2
      31: instanceof    #15                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      34: ifeq          47
      37: aload_2
      38: checkcast     #15                 // class com/fasterxml/jackson/databind/ser/ResolvableSerializer
      41: aload_3
      42: invokeinterface #16,  2           // InterfaceMethod com/fasterxml/jackson/databind/ser/ResolvableSerializer.resolve:(Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      47: aload         4
      49: monitorexit
      50: goto          61
      53: astore        5
      55: aload         4
      57: monitorexit
      58: aload         5
      60: athrow
      61: return
    Exception table:
       from    to  target type
           5    50    53   any
          53    58    53   any

  public synchronized void flush();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _sharedMap:Ljava/util/HashMap;
       4: invokevirtual #17                 // Method java/util/HashMap.clear:()V
       7: return
}
