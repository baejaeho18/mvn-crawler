Compiled from "SubnetUtils.java"
public class org.apache.commons.net.util.SubnetUtils {
  private static final java.lang.String IP_ADDRESS;

  private static final java.lang.String SLASH_FORMAT;

  private static final java.util.regex.Pattern addressPattern;

  private static final java.util.regex.Pattern cidrPattern;

  private static final int NBITS;

  private int netmask;

  private int address;

  private int network;

  private int broadcast;

  private boolean inclusiveHostCount;

  public org.apache.commons.net.util.SubnetUtils(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field netmask:I
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field address:I
      14: aload_0
      15: iconst_0
      16: putfield      #7                  // Field network:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field broadcast:I
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field inclusiveHostCount:Z
      29: aload_0
      30: aload_1
      31: invokespecial #11                 // Method calculate:(Ljava/lang/String;)V
      34: return

  public org.apache.commons.net.util.SubnetUtils(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #8                  // Field netmask:I
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field address:I
      14: aload_0
      15: iconst_0
      16: putfield      #7                  // Field network:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field broadcast:I
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field inclusiveHostCount:Z
      29: aload_0
      30: aload_0
      31: aload_1
      32: aload_2
      33: invokespecial #1                  // Method toCidrNotation:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      36: invokespecial #11                 // Method calculate:(Ljava/lang/String;)V
      39: return

  public boolean isInclusiveHostCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inclusiveHostCount:Z
       4: ireturn

  public void setInclusiveHostCount(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field inclusiveHostCount:Z
       5: return

  public final org.apache.commons.net.util.SubnetUtils$SubnetInfo getInfo();
    Code:
       0: new           #12                 // class org/apache/commons/net/util/SubnetUtils$SubnetInfo
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #13                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo."<init>":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V
       9: areturn

  private void calculate(java.lang.String);
    Code:
       0: getstatic     #14                 // Field cidrPattern:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #15                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #16                 // Method java/util/regex/Matcher.matches:()Z
      12: ifeq          102
      15: aload_0
      16: aload_0
      17: aload_2
      18: invokespecial #17                 // Method matchAddress:(Ljava/util/regex/Matcher;)I
      21: putfield      #6                  // Field address:I
      24: aload_0
      25: aload_2
      26: iconst_5
      27: invokevirtual #18                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      30: invokestatic  #19                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      33: iconst_0
      34: bipush        32
      36: invokespecial #20                 // Method rangeCheck:(III)I
      39: istore_3
      40: iconst_0
      41: istore        4
      43: iload         4
      45: iload_3
      46: if_icmpge     71
      49: aload_0
      50: dup
      51: getfield      #8                  // Field netmask:I
      54: iconst_1
      55: bipush        31
      57: iload         4
      59: isub
      60: ishl
      61: ior
      62: putfield      #8                  // Field netmask:I
      65: iinc          4, 1
      68: goto          43
      71: aload_0
      72: aload_0
      73: getfield      #6                  // Field address:I
      76: aload_0
      77: getfield      #8                  // Field netmask:I
      80: iand
      81: putfield      #7                  // Field network:I
      84: aload_0
      85: aload_0
      86: getfield      #7                  // Field network:I
      89: aload_0
      90: getfield      #8                  // Field netmask:I
      93: iconst_m1
      94: ixor
      95: ior
      96: putfield      #5                  // Field broadcast:I
      99: goto          134
     102: new           #21                 // class java/lang/IllegalArgumentException
     105: dup
     106: new           #22                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #24                 // String Could not parse [
     115: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_1
     119: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: ldc           #26                 // String ]
     124: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: return

  private int toInteger(java.lang.String);
    Code:
       0: getstatic     #29                 // Field addressPattern:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #15                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #16                 // Method java/util/regex/Matcher.matches:()Z
      12: ifeq          21
      15: aload_0
      16: aload_2
      17: invokespecial #17                 // Method matchAddress:(Ljava/util/regex/Matcher;)I
      20: ireturn
      21: new           #21                 // class java/lang/IllegalArgumentException
      24: dup
      25: new           #22                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #24                 // String Could not parse [
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #26                 // String ]
      43: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow

  private int matchAddress(java.util.regex.Matcher);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_1
       3: istore_3
       4: iload_3
       5: iconst_4
       6: if_icmpgt     49
       9: aload_0
      10: aload_1
      11: iload_3
      12: invokevirtual #18                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      15: invokestatic  #19                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      18: iconst_m1
      19: sipush        255
      22: invokespecial #20                 // Method rangeCheck:(III)I
      25: istore        4
      27: iload_2
      28: iload         4
      30: sipush        255
      33: iand
      34: bipush        8
      36: iconst_4
      37: iload_3
      38: isub
      39: imul
      40: ishl
      41: ior
      42: istore_2
      43: iinc          3, 1
      46: goto          4
      49: iload_2
      50: ireturn

  private int[] toArray(int);
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_2
       4: iconst_3
       5: istore_3
       6: iload_3
       7: iflt          34
      10: aload_2
      11: iload_3
      12: dup2
      13: iaload
      14: iload_1
      15: bipush        8
      17: iconst_3
      18: iload_3
      19: isub
      20: imul
      21: iushr
      22: sipush        255
      25: iand
      26: ior
      27: iastore
      28: iinc          3, -1
      31: goto          6
      34: aload_2
      35: areturn

  private java.lang.String format(int[]);
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: arraylength
      13: if_icmpge     45
      16: aload_2
      17: aload_1
      18: iload_3
      19: iaload
      20: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: pop
      24: iload_3
      25: aload_1
      26: arraylength
      27: iconst_1
      28: isub
      29: if_icmpeq     39
      32: aload_2
      33: ldc           #31                 // String .
      35: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: iinc          3, 1
      42: goto          10
      45: aload_2
      46: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  private int rangeCheck(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmple     12
       5: iload_1
       6: iload_3
       7: if_icmpgt     12
      10: iload_1
      11: ireturn
      12: new           #21                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #32                 // String Value [
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_1
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #33                 // String ] not in range (
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_2
      38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #34                 // String ,
      43: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_3
      47: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #26                 // String ]
      52: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow

  int pop(int);
    Code:
       0: iload_1
       1: iload_1
       2: iconst_1
       3: iushr
       4: ldc           #35                 // int 1431655765
       6: iand
       7: isub
       8: istore_1
       9: iload_1
      10: ldc           #36                 // int 858993459
      12: iand
      13: iload_1
      14: iconst_2
      15: iushr
      16: ldc           #36                 // int 858993459
      18: iand
      19: iadd
      20: istore_1
      21: iload_1
      22: iload_1
      23: iconst_4
      24: iushr
      25: iadd
      26: ldc           #37                 // int 252645135
      28: iand
      29: istore_1
      30: iload_1
      31: iload_1
      32: bipush        8
      34: iushr
      35: iadd
      36: istore_1
      37: iload_1
      38: iload_1
      39: bipush        16
      41: iushr
      42: iadd
      43: istore_1
      44: iload_1
      45: bipush        63
      47: iand
      48: ireturn

  private java.lang.String toCidrNotation(java.lang.String, java.lang.String);
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #38                 // String /
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: aload_0
      18: aload_2
      19: invokespecial #4                  // Method toInteger:(Ljava/lang/String;)I
      22: invokevirtual #39                 // Method pop:(I)I
      25: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  static int access$000(org.apache.commons.net.util.SubnetUtils);
    Code:
       0: aload_0
       1: getfield      #8                  // Field netmask:I
       4: ireturn

  static int access$100(org.apache.commons.net.util.SubnetUtils);
    Code:
       0: aload_0
       1: getfield      #7                  // Field network:I
       4: ireturn

  static int access$200(org.apache.commons.net.util.SubnetUtils);
    Code:
       0: aload_0
       1: getfield      #6                  // Field address:I
       4: ireturn

  static int access$300(org.apache.commons.net.util.SubnetUtils);
    Code:
       0: aload_0
       1: getfield      #5                  // Field broadcast:I
       4: ireturn

  static int access$400(org.apache.commons.net.util.SubnetUtils, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method toInteger:(Ljava/lang/String;)I
       5: ireturn

  static int[] access$500(org.apache.commons.net.util.SubnetUtils, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method toArray:(I)[I
       5: areturn

  static java.lang.String access$600(org.apache.commons.net.util.SubnetUtils, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method format:([I)Ljava/lang/String;
       5: areturn

  static java.lang.String access$700(org.apache.commons.net.util.SubnetUtils, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method toCidrNotation:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  static {};
    Code:
       0: ldc           #40                 // String (\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})
       2: invokestatic  #41                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #29                 // Field addressPattern:Ljava/util/regex/Pattern;
       8: ldc           #42                 // String (\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,3})
      10: invokestatic  #41                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #14                 // Field cidrPattern:Ljava/util/regex/Pattern;
      16: return
}
