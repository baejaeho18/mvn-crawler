Compiled from "FromNetASCIIInputStream.java"
public final class org.apache.commons.net.io.FromNetASCIIInputStream extends java.io.PushbackInputStream {
  static final boolean _noConversionRequired;

  static final java.lang.String _lineSeparator;

  static final byte[] _lineSeparatorBytes;

  private int __length;

  public static final boolean isConversionRequired();
    Code:
       0: getstatic     #1                  // Field _noConversionRequired:Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public org.apache.commons.net.io.FromNetASCIIInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field _lineSeparatorBytes:[B
       5: arraylength
       6: iconst_1
       7: iadd
       8: invokespecial #3                  // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field __length:I
      16: return

  private int __read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I
       4: istore_1
       5: iload_1
       6: bipush        13
       8: if_icmpne     60
      11: aload_0
      12: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I
      15: istore_1
      16: iload_1
      17: bipush        10
      19: if_icmpne     47
      22: aload_0
      23: getstatic     #2                  // Field _lineSeparatorBytes:[B
      26: invokevirtual #6                  // Method unread:([B)V
      29: aload_0
      30: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I
      33: istore_1
      34: aload_0
      35: dup
      36: getfield      #4                  // Field __length:I
      39: iconst_1
      40: isub
      41: putfield      #4                  // Field __length:I
      44: goto          60
      47: iload_1
      48: iconst_m1
      49: if_icmpeq     57
      52: aload_0
      53: iload_1
      54: invokevirtual #7                  // Method unread:(I)V
      57: bipush        13
      59: ireturn
      60: iload_1
      61: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field _noConversionRequired:Z
       3: ifeq          11
       6: aload_0
       7: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I
      10: ireturn
      11: aload_0
      12: invokespecial #8                  // Method __read:()I
      15: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #9                  // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: getstatic     #1                  // Field _noConversionRequired:Z
       3: ifeq          14
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokespecial #10                 // Method java/io/PushbackInputStream.read:([BII)I
      13: ireturn
      14: iload_3
      15: iconst_1
      16: if_icmpge     21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #11                 // Method available:()I
      25: istore        4
      27: aload_0
      28: iload_3
      29: iload         4
      31: if_icmple     39
      34: iload         4
      36: goto          40
      39: iload_3
      40: putfield      #4                  // Field __length:I
      43: aload_0
      44: getfield      #4                  // Field __length:I
      47: iconst_1
      48: if_icmpge     56
      51: aload_0
      52: iconst_1
      53: putfield      #4                  // Field __length:I
      56: aload_0
      57: invokespecial #8                  // Method __read:()I
      60: dup
      61: istore        4
      63: iconst_m1
      64: if_icmpne     69
      67: iconst_m1
      68: ireturn
      69: iload_2
      70: istore        5
      72: aload_1
      73: iload_2
      74: iinc          2, 1
      77: iload         4
      79: i2b
      80: bastore
      81: aload_0
      82: dup
      83: getfield      #4                  // Field __length:I
      86: iconst_1
      87: isub
      88: dup_x1
      89: putfield      #4                  // Field __length:I
      92: ifle          106
      95: aload_0
      96: invokespecial #8                  // Method __read:()I
      99: dup
     100: istore        4
     102: iconst_m1
     103: if_icmpne     72
     106: iload_2
     107: iload         5
     109: isub
     110: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field in:Ljava/io/InputStream;
       4: ifnonnull     17
       7: new           #13                 // class java/io/IOException
      10: dup
      11: ldc           #14                 // String Stream closed
      13: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #16                 // Field buf:[B
      21: arraylength
      22: aload_0
      23: getfield      #17                 // Field pos:I
      26: isub
      27: aload_0
      28: getfield      #12                 // Field in:Ljava/io/InputStream;
      31: invokevirtual #18                 // Method java/io/InputStream.available:()I
      34: iadd
      35: ireturn

  static {};
    Code:
       0: ldc           #19                 // String line.separator
       2: invokestatic  #20                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: putstatic     #21                 // Field _lineSeparator:Ljava/lang/String;
       8: getstatic     #21                 // Field _lineSeparator:Ljava/lang/String;
      11: ldc           #22                 // String \r\n
      13: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: putstatic     #1                  // Field _noConversionRequired:Z
      19: getstatic     #21                 // Field _lineSeparator:Ljava/lang/String;
      22: invokevirtual #24                 // Method java/lang/String.getBytes:()[B
      25: putstatic     #2                  // Field _lineSeparatorBytes:[B
      28: return
}
