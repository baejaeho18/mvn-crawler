Compiled from "TFTPDataPacket.java"
public final class org.apache.commons.net.tftp.TFTPDataPacket extends org.apache.commons.net.tftp.TFTPPacket {
  public static final int MAX_DATA_LENGTH;

  public static final int MIN_DATA_LENGTH;

  int _blockNumber;

  int _length;

  int _offset;

  byte[] _data;

  public org.apache.commons.net.tftp.TFTPDataPacket(java.net.InetAddress, int, int, byte[], int, int);
    Code:
       0: aload_0
       1: iconst_3
       2: aload_1
       3: iload_2
       4: invokespecial #1                  // Method org/apache/commons/net/tftp/TFTPPacket."<init>":(ILjava/net/InetAddress;I)V
       7: aload_0
       8: iload_3
       9: putfield      #2                  // Field _blockNumber:I
      12: aload_0
      13: aload         4
      15: putfield      #3                  // Field _data:[B
      18: aload_0
      19: iload         5
      21: putfield      #4                  // Field _offset:I
      24: iload         6
      26: sipush        512
      29: if_icmple     42
      32: aload_0
      33: sipush        512
      36: putfield      #5                  // Field _length:I
      39: goto          48
      42: aload_0
      43: iload         6
      45: putfield      #5                  // Field _length:I
      48: return

  public org.apache.commons.net.tftp.TFTPDataPacket(java.net.InetAddress, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iconst_0
       7: aload         4
       9: arraylength
      10: invokespecial #6                  // Method "<init>":(Ljava/net/InetAddress;II[BII)V
      13: return

  org.apache.commons.net.tftp.TFTPDataPacket(java.net.DatagramPacket) throws org.apache.commons.net.tftp.TFTPPacketException;
    Code:
       0: aload_0
       1: iconst_3
       2: aload_1
       3: invokevirtual #7                  // Method java/net/DatagramPacket.getAddress:()Ljava/net/InetAddress;
       6: aload_1
       7: invokevirtual #8                  // Method java/net/DatagramPacket.getPort:()I
      10: invokespecial #1                  // Method org/apache/commons/net/tftp/TFTPPacket."<init>":(ILjava/net/InetAddress;I)V
      13: aload_0
      14: aload_1
      15: invokevirtual #9                  // Method java/net/DatagramPacket.getData:()[B
      18: putfield      #3                  // Field _data:[B
      21: aload_0
      22: iconst_4
      23: putfield      #4                  // Field _offset:I
      26: aload_0
      27: invokevirtual #10                 // Method getType:()I
      30: aload_0
      31: getfield      #3                  // Field _data:[B
      34: iconst_1
      35: baload
      36: if_icmpeq     49
      39: new           #11                 // class org/apache/commons/net/tftp/TFTPPacketException
      42: dup
      43: ldc           #12                 // String TFTP operator code does not match type.
      45: invokespecial #13                 // Method org/apache/commons/net/tftp/TFTPPacketException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_0
      51: getfield      #3                  // Field _data:[B
      54: iconst_2
      55: baload
      56: sipush        255
      59: iand
      60: bipush        8
      62: ishl
      63: aload_0
      64: getfield      #3                  // Field _data:[B
      67: iconst_3
      68: baload
      69: sipush        255
      72: iand
      73: ior
      74: putfield      #2                  // Field _blockNumber:I
      77: aload_0
      78: aload_1
      79: invokevirtual #14                 // Method java/net/DatagramPacket.getLength:()I
      82: iconst_4
      83: isub
      84: putfield      #5                  // Field _length:I
      87: aload_0
      88: getfield      #5                  // Field _length:I
      91: sipush        512
      94: if_icmple     104
      97: aload_0
      98: sipush        512
     101: putfield      #5                  // Field _length:I
     104: return

  java.net.DatagramPacket _newDatagram(java.net.DatagramPacket, byte[]);
    Code:
       0: aload_2
       1: iconst_0
       2: iconst_0
       3: bastore
       4: aload_2
       5: iconst_1
       6: aload_0
       7: getfield      #15                 // Field _type:I
      10: i2b
      11: bastore
      12: aload_2
      13: iconst_2
      14: aload_0
      15: getfield      #2                  // Field _blockNumber:I
      18: ldc           #16                 // int 65535
      20: iand
      21: bipush        8
      23: ishr
      24: i2b
      25: bastore
      26: aload_2
      27: iconst_3
      28: aload_0
      29: getfield      #2                  // Field _blockNumber:I
      32: sipush        255
      35: iand
      36: i2b
      37: bastore
      38: aload_2
      39: aload_0
      40: getfield      #3                  // Field _data:[B
      43: if_acmpeq     63
      46: aload_0
      47: getfield      #3                  // Field _data:[B
      50: aload_0
      51: getfield      #4                  // Field _offset:I
      54: aload_2
      55: iconst_4
      56: aload_0
      57: getfield      #5                  // Field _length:I
      60: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: aload_1
      64: aload_0
      65: getfield      #18                 // Field _address:Ljava/net/InetAddress;
      68: invokevirtual #19                 // Method java/net/DatagramPacket.setAddress:(Ljava/net/InetAddress;)V
      71: aload_1
      72: aload_0
      73: getfield      #20                 // Field _port:I
      76: invokevirtual #21                 // Method java/net/DatagramPacket.setPort:(I)V
      79: aload_1
      80: aload_2
      81: invokevirtual #22                 // Method java/net/DatagramPacket.setData:([B)V
      84: aload_1
      85: aload_0
      86: getfield      #5                  // Field _length:I
      89: iconst_4
      90: iadd
      91: invokevirtual #23                 // Method java/net/DatagramPacket.setLength:(I)V
      94: aload_1
      95: areturn

  public java.net.DatagramPacket newDatagram();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _length:I
       4: iconst_4
       5: iadd
       6: newarray       byte
       8: astore_1
       9: aload_1
      10: iconst_0
      11: iconst_0
      12: bastore
      13: aload_1
      14: iconst_1
      15: aload_0
      16: getfield      #15                 // Field _type:I
      19: i2b
      20: bastore
      21: aload_1
      22: iconst_2
      23: aload_0
      24: getfield      #2                  // Field _blockNumber:I
      27: ldc           #16                 // int 65535
      29: iand
      30: bipush        8
      32: ishr
      33: i2b
      34: bastore
      35: aload_1
      36: iconst_3
      37: aload_0
      38: getfield      #2                  // Field _blockNumber:I
      41: sipush        255
      44: iand
      45: i2b
      46: bastore
      47: aload_0
      48: getfield      #3                  // Field _data:[B
      51: aload_0
      52: getfield      #4                  // Field _offset:I
      55: aload_1
      56: iconst_4
      57: aload_0
      58: getfield      #5                  // Field _length:I
      61: invokestatic  #17                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      64: new           #24                 // class java/net/DatagramPacket
      67: dup
      68: aload_1
      69: aload_0
      70: getfield      #5                  // Field _length:I
      73: iconst_4
      74: iadd
      75: aload_0
      76: getfield      #18                 // Field _address:Ljava/net/InetAddress;
      79: aload_0
      80: getfield      #20                 // Field _port:I
      83: invokespecial #25                 // Method java/net/DatagramPacket."<init>":([BILjava/net/InetAddress;I)V
      86: areturn

  public int getBlockNumber();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _blockNumber:I
       4: ireturn

  public void setBlockNumber(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field _blockNumber:I
       5: return

  public void setData(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field _data:[B
       5: aload_0
       6: iload_2
       7: putfield      #4                  // Field _offset:I
      10: aload_0
      11: iload_3
      12: putfield      #5                  // Field _length:I
      15: iload_3
      16: sipush        512
      19: if_icmple     32
      22: aload_0
      23: sipush        512
      26: putfield      #5                  // Field _length:I
      29: goto          37
      32: aload_0
      33: iload_3
      34: putfield      #5                  // Field _length:I
      37: return

  public int getDataLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _length:I
       4: ireturn

  public int getDataOffset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _offset:I
       4: ireturn

  public byte[] getData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _data:[B
       4: areturn
}
