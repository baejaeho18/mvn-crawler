Compiled from "TelnetInputStream.java"
final class org.apache.commons.net.telnet.TelnetInputStream extends java.io.BufferedInputStream implements java.lang.Runnable {
  private static final int EOF;

  private static final int WOULD_BLOCK;

  static final int _STATE_DATA;

  static final int _STATE_IAC;

  static final int _STATE_WILL;

  static final int _STATE_WONT;

  static final int _STATE_DO;

  static final int _STATE_DONT;

  static final int _STATE_SB;

  static final int _STATE_SE;

  static final int _STATE_CR;

  static final int _STATE_IAC_SB;

  private boolean __hasReachedEOF;

  private volatile boolean __isClosed;

  private boolean __readIsWaiting;

  private int __receiveState;

  private int __queueHead;

  private int __queueTail;

  private int __bytesAvailable;

  private final int[] __queue;

  private final org.apache.commons.net.telnet.TelnetClient __client;

  private final java.lang.Thread __thread;

  private java.io.IOException __ioException;

  private final int[] __suboption;

  private int __suboption_count;

  private volatile boolean __threaded;

  org.apache.commons.net.telnet.TelnetInputStream(java.io.InputStream, org.apache.commons.net.telnet.TelnetClient, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_0
       6: sipush        512
       9: newarray       int
      11: putfield      #2                  // Field __suboption:[I
      14: aload_0
      15: iconst_0
      16: putfield      #3                  // Field __suboption_count:I
      19: aload_0
      20: aload_2
      21: putfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
      24: aload_0
      25: iconst_0
      26: putfield      #5                  // Field __receiveState:I
      29: aload_0
      30: iconst_1
      31: putfield      #6                  // Field __isClosed:Z
      34: aload_0
      35: iconst_0
      36: putfield      #7                  // Field __hasReachedEOF:Z
      39: aload_0
      40: sipush        2049
      43: newarray       int
      45: putfield      #8                  // Field __queue:[I
      48: aload_0
      49: iconst_0
      50: putfield      #9                  // Field __queueHead:I
      53: aload_0
      54: iconst_0
      55: putfield      #10                 // Field __queueTail:I
      58: aload_0
      59: iconst_0
      60: putfield      #11                 // Field __bytesAvailable:I
      63: aload_0
      64: aconst_null
      65: putfield      #12                 // Field __ioException:Ljava/io/IOException;
      68: aload_0
      69: iconst_0
      70: putfield      #13                 // Field __readIsWaiting:Z
      73: aload_0
      74: iconst_0
      75: putfield      #14                 // Field __threaded:Z
      78: iload_3
      79: ifeq          97
      82: aload_0
      83: new           #15                 // class java/lang/Thread
      86: dup
      87: aload_0
      88: invokespecial #16                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      91: putfield      #17                 // Field __thread:Ljava/lang/Thread;
      94: goto          102
      97: aload_0
      98: aconst_null
      99: putfield      #17                 // Field __thread:Ljava/lang/Thread;
     102: return

  org.apache.commons.net.telnet.TelnetInputStream(java.io.InputStream, org.apache.commons.net.telnet.TelnetClient);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #18                 // Method "<init>":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V
       7: return

  void _start();
    Code:
       0: aload_0
       1: getfield      #17                 // Field __thread:Ljava/lang/Thread;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #6                  // Field __isClosed:Z
      13: invokestatic  #19                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      16: invokevirtual #20                 // Method java/lang/Thread.getPriority:()I
      19: iconst_1
      20: iadd
      21: istore_1
      22: iload_1
      23: bipush        10
      25: if_icmple     31
      28: bipush        10
      30: istore_1
      31: aload_0
      32: getfield      #17                 // Field __thread:Ljava/lang/Thread;
      35: iload_1
      36: invokevirtual #21                 // Method java/lang/Thread.setPriority:(I)V
      39: aload_0
      40: getfield      #17                 // Field __thread:Ljava/lang/Thread;
      43: iconst_1
      44: invokevirtual #22                 // Method java/lang/Thread.setDaemon:(Z)V
      47: aload_0
      48: getfield      #17                 // Field __thread:Ljava/lang/Thread;
      51: invokevirtual #23                 // Method java/lang/Thread.start:()V
      54: return

  private int __read(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifne          14
       4: aload_0
       5: invokespecial #24                 // Method java/io/BufferedInputStream.available:()I
       8: ifne          14
      11: bipush        -2
      13: ireturn
      14: aload_0
      15: invokespecial #25                 // Method java/io/BufferedInputStream.read:()I
      18: dup
      19: istore_2
      20: ifge          25
      23: iconst_m1
      24: ireturn
      25: iload_2
      26: sipush        255
      29: iand
      30: istore_2
      31: aload_0
      32: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
      35: dup
      36: astore_3
      37: monitorenter
      38: aload_0
      39: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
      42: invokevirtual #26                 // Method org/apache/commons/net/telnet/TelnetClient._processAYTResponse:()V
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        4
      52: aload_3
      53: monitorexit
      54: aload         4
      56: athrow
      57: aload_0
      58: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
      61: iload_2
      62: invokevirtual #27                 // Method org/apache/commons/net/telnet/TelnetClient._spyRead:(I)V
      65: aload_0
      66: getfield      #5                  // Field __receiveState:I
      69: tableswitch   { // 0 to 9
                     0: 131
                     1: 207
                     2: 366
                     3: 408
                     4: 450
                     5: 492
                     6: 534
                     7: 718
                     8: 124
                     9: 599
               default: 718
          }
     124: iload_2
     125: ifne          131
     128: goto          0
     131: iload_2
     132: sipush        255
     135: if_icmpne     146
     138: aload_0
     139: iconst_1
     140: putfield      #5                  // Field __receiveState:I
     143: goto          0
     146: iload_2
     147: bipush        13
     149: if_icmpne     199
     152: aload_0
     153: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     156: dup
     157: astore_3
     158: monitorenter
     159: aload_0
     160: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     163: iconst_0
     164: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient._requestedDont:(I)Z
     167: ifeq          179
     170: aload_0
     171: bipush        8
     173: putfield      #5                  // Field __receiveState:I
     176: goto          184
     179: aload_0
     180: iconst_0
     181: putfield      #5                  // Field __receiveState:I
     184: aload_3
     185: monitorexit
     186: goto          196
     189: astore        5
     191: aload_3
     192: monitorexit
     193: aload         5
     195: athrow
     196: goto          718
     199: aload_0
     200: iconst_0
     201: putfield      #5                  // Field __receiveState:I
     204: goto          718
     207: iload_2
     208: tableswitch   { // 240 to 255
                   240: 342
                   241: 350
                   242: 350
                   243: 350
                   244: 350
                   245: 350
                   246: 350
                   247: 350
                   248: 350
                   249: 350
                   250: 320
                   251: 288
                   252: 296
                   253: 304
                   254: 312
                   255: 334
               default: 350
          }
     288: aload_0
     289: iconst_2
     290: putfield      #5                  // Field __receiveState:I
     293: goto          0
     296: aload_0
     297: iconst_3
     298: putfield      #5                  // Field __receiveState:I
     301: goto          0
     304: aload_0
     305: iconst_4
     306: putfield      #5                  // Field __receiveState:I
     309: goto          0
     312: aload_0
     313: iconst_5
     314: putfield      #5                  // Field __receiveState:I
     317: goto          0
     320: aload_0
     321: iconst_0
     322: putfield      #3                  // Field __suboption_count:I
     325: aload_0
     326: bipush        6
     328: putfield      #5                  // Field __receiveState:I
     331: goto          0
     334: aload_0
     335: iconst_0
     336: putfield      #5                  // Field __receiveState:I
     339: goto          718
     342: aload_0
     343: iconst_0
     344: putfield      #5                  // Field __receiveState:I
     347: goto          0
     350: aload_0
     351: iconst_0
     352: putfield      #5                  // Field __receiveState:I
     355: aload_0
     356: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     359: iload_2
     360: invokevirtual #29                 // Method org/apache/commons/net/telnet/TelnetClient._processCommand:(I)V
     363: goto          0
     366: aload_0
     367: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     370: dup
     371: astore_3
     372: monitorenter
     373: aload_0
     374: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     377: iload_2
     378: invokevirtual #30                 // Method org/apache/commons/net/telnet/TelnetClient._processWill:(I)V
     381: aload_0
     382: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     385: invokevirtual #31                 // Method org/apache/commons/net/telnet/TelnetClient._flushOutputStream:()V
     388: aload_3
     389: monitorexit
     390: goto          400
     393: astore        6
     395: aload_3
     396: monitorexit
     397: aload         6
     399: athrow
     400: aload_0
     401: iconst_0
     402: putfield      #5                  // Field __receiveState:I
     405: goto          0
     408: aload_0
     409: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     412: dup
     413: astore_3
     414: monitorenter
     415: aload_0
     416: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     419: iload_2
     420: invokevirtual #32                 // Method org/apache/commons/net/telnet/TelnetClient._processWont:(I)V
     423: aload_0
     424: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     427: invokevirtual #31                 // Method org/apache/commons/net/telnet/TelnetClient._flushOutputStream:()V
     430: aload_3
     431: monitorexit
     432: goto          442
     435: astore        7
     437: aload_3
     438: monitorexit
     439: aload         7
     441: athrow
     442: aload_0
     443: iconst_0
     444: putfield      #5                  // Field __receiveState:I
     447: goto          0
     450: aload_0
     451: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     454: dup
     455: astore_3
     456: monitorenter
     457: aload_0
     458: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     461: iload_2
     462: invokevirtual #33                 // Method org/apache/commons/net/telnet/TelnetClient._processDo:(I)V
     465: aload_0
     466: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     469: invokevirtual #31                 // Method org/apache/commons/net/telnet/TelnetClient._flushOutputStream:()V
     472: aload_3
     473: monitorexit
     474: goto          484
     477: astore        8
     479: aload_3
     480: monitorexit
     481: aload         8
     483: athrow
     484: aload_0
     485: iconst_0
     486: putfield      #5                  // Field __receiveState:I
     489: goto          0
     492: aload_0
     493: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     496: dup
     497: astore_3
     498: monitorenter
     499: aload_0
     500: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     503: iload_2
     504: invokevirtual #34                 // Method org/apache/commons/net/telnet/TelnetClient._processDont:(I)V
     507: aload_0
     508: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     511: invokevirtual #31                 // Method org/apache/commons/net/telnet/TelnetClient._flushOutputStream:()V
     514: aload_3
     515: monitorexit
     516: goto          526
     519: astore        9
     521: aload_3
     522: monitorexit
     523: aload         9
     525: athrow
     526: aload_0
     527: iconst_0
     528: putfield      #5                  // Field __receiveState:I
     531: goto          0
     534: iload_2
     535: lookupswitch  { // 1
                   255: 552
               default: 561
          }
     552: aload_0
     553: bipush        9
     555: putfield      #5                  // Field __receiveState:I
     558: goto          0
     561: aload_0
     562: getfield      #3                  // Field __suboption_count:I
     565: aload_0
     566: getfield      #2                  // Field __suboption:[I
     569: arraylength
     570: if_icmpge     590
     573: aload_0
     574: getfield      #2                  // Field __suboption:[I
     577: aload_0
     578: dup
     579: getfield      #3                  // Field __suboption_count:I
     582: dup_x1
     583: iconst_1
     584: iadd
     585: putfield      #3                  // Field __suboption_count:I
     588: iload_2
     589: iastore
     590: aload_0
     591: bipush        6
     593: putfield      #5                  // Field __receiveState:I
     596: goto          0
     599: iload_2
     600: lookupswitch  { // 2
                   240: 628
                   255: 677
               default: 709
          }
     628: aload_0
     629: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     632: dup
     633: astore_3
     634: monitorenter
     635: aload_0
     636: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     639: aload_0
     640: getfield      #2                  // Field __suboption:[I
     643: aload_0
     644: getfield      #3                  // Field __suboption_count:I
     647: invokevirtual #35                 // Method org/apache/commons/net/telnet/TelnetClient._processSuboption:([II)V
     650: aload_0
     651: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     654: invokevirtual #31                 // Method org/apache/commons/net/telnet/TelnetClient._flushOutputStream:()V
     657: aload_3
     658: monitorexit
     659: goto          669
     662: astore        10
     664: aload_3
     665: monitorexit
     666: aload         10
     668: athrow
     669: aload_0
     670: iconst_0
     671: putfield      #5                  // Field __receiveState:I
     674: goto          0
     677: aload_0
     678: getfield      #3                  // Field __suboption_count:I
     681: aload_0
     682: getfield      #2                  // Field __suboption:[I
     685: arraylength
     686: if_icmpge     709
     689: aload_0
     690: getfield      #2                  // Field __suboption:[I
     693: aload_0
     694: dup
     695: getfield      #3                  // Field __suboption_count:I
     698: dup_x1
     699: iconst_1
     700: iadd
     701: putfield      #3                  // Field __suboption_count:I
     704: iload_2
     705: iastore
     706: goto          709
     709: aload_0
     710: bipush        6
     712: putfield      #5                  // Field __receiveState:I
     715: goto          0
     718: goto          721
     721: iload_2
     722: ireturn
    Exception table:
       from    to  target type
          38    47    50   any
          50    54    50   any
         159   186   189   any
         189   193   189   any
         373   390   393   any
         393   397   393   any
         415   432   435   any
         435   439   435   any
         457   474   477   any
         477   481   477   any
         499   516   519   any
         519   523   519   any
         635   659   662   any
         662   666   662   any

  private boolean __processChar(int) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field __queue:[I
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field __bytesAvailable:I
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_2
      20: aload_0
      21: getfield      #11                 // Field __bytesAvailable:I
      24: aload_0
      25: getfield      #8                  // Field __queue:[I
      28: arraylength
      29: iconst_1
      30: isub
      31: if_icmplt     73
      34: aload_0
      35: getfield      #14                 // Field __threaded:Z
      38: ifeq          63
      41: aload_0
      42: getfield      #8                  // Field __queue:[I
      45: invokevirtual #36                 // Method java/lang/Object.notify:()V
      48: aload_0
      49: getfield      #8                  // Field __queue:[I
      52: invokevirtual #37                 // Method java/lang/Object.wait:()V
      55: goto          20
      58: astore        4
      60: aload         4
      62: athrow
      63: new           #39                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #40                 // String Queue is full! Cannot process another character.
      69: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: getfield      #13                 // Field __readIsWaiting:Z
      77: ifeq          94
      80: aload_0
      81: getfield      #14                 // Field __threaded:Z
      84: ifeq          94
      87: aload_0
      88: getfield      #8                  // Field __queue:[I
      91: invokevirtual #36                 // Method java/lang/Object.notify:()V
      94: aload_0
      95: getfield      #8                  // Field __queue:[I
      98: aload_0
      99: getfield      #10                 // Field __queueTail:I
     102: iload_1
     103: iastore
     104: aload_0
     105: dup
     106: getfield      #11                 // Field __bytesAvailable:I
     109: iconst_1
     110: iadd
     111: putfield      #11                 // Field __bytesAvailable:I
     114: aload_0
     115: dup
     116: getfield      #10                 // Field __queueTail:I
     119: iconst_1
     120: iadd
     121: dup_x1
     122: putfield      #10                 // Field __queueTail:I
     125: aload_0
     126: getfield      #8                  // Field __queue:[I
     129: arraylength
     130: if_icmplt     138
     133: aload_0
     134: iconst_0
     135: putfield      #10                 // Field __queueTail:I
     138: aload_3
     139: monitorexit
     140: goto          150
     143: astore        5
     145: aload_3
     146: monitorexit
     147: aload         5
     149: athrow
     150: iload_2
     151: ireturn
    Exception table:
       from    to  target type
          48    55    58   Class java/lang/InterruptedException
           7   140   143   any
         143   147   143   any

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field __queue:[I
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field __ioException:Ljava/io/IOException;
      11: ifnull        26
      14: aload_0
      15: getfield      #12                 // Field __ioException:Ljava/io/IOException;
      18: astore_2
      19: aload_0
      20: aconst_null
      21: putfield      #12                 // Field __ioException:Ljava/io/IOException;
      24: aload_2
      25: athrow
      26: aload_0
      27: getfield      #11                 // Field __bytesAvailable:I
      30: ifne          234
      33: aload_0
      34: getfield      #7                  // Field __hasReachedEOF:Z
      37: ifeq          44
      40: iconst_m1
      41: aload_1
      42: monitorexit
      43: ireturn
      44: aload_0
      45: getfield      #14                 // Field __threaded:Z
      48: ifeq          89
      51: aload_0
      52: getfield      #8                  // Field __queue:[I
      55: invokevirtual #36                 // Method java/lang/Object.notify:()V
      58: aload_0
      59: iconst_1
      60: putfield      #13                 // Field __readIsWaiting:Z
      63: aload_0
      64: getfield      #8                  // Field __queue:[I
      67: invokevirtual #37                 // Method java/lang/Object.wait:()V
      70: aload_0
      71: iconst_0
      72: putfield      #13                 // Field __readIsWaiting:Z
      75: goto          7
      78: astore_2
      79: new           #42                 // class java/io/InterruptedIOException
      82: dup
      83: ldc           #43                 // String Fatal thread interruption during read.
      85: invokespecial #44                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_0
      90: iconst_1
      91: putfield      #13                 // Field __readIsWaiting:Z
      94: iconst_1
      95: istore_3
      96: aload_0
      97: iload_3
      98: invokespecial #45                 // Method __read:(Z)I
     101: dup
     102: istore_2
     103: ifge          116
     106: iload_2
     107: bipush        -2
     109: if_icmpeq     116
     112: iload_2
     113: aload_1
     114: monitorexit
     115: ireturn
     116: goto          175
     119: astore        4
     121: aload_0
     122: getfield      #8                  // Field __queue:[I
     125: dup
     126: astore        5
     128: monitorenter
     129: aload_0
     130: aload         4
     132: putfield      #12                 // Field __ioException:Ljava/io/IOException;
     135: aload_0
     136: getfield      #8                  // Field __queue:[I
     139: invokevirtual #46                 // Method java/lang/Object.notifyAll:()V
     142: aload_0
     143: getfield      #8                  // Field __queue:[I
     146: ldc2_w        #47                 // long 100l
     149: invokevirtual #49                 // Method java/lang/Object.wait:(J)V
     152: goto          157
     155: astore        6
     157: aload         5
     159: monitorexit
     160: goto          171
     163: astore        7
     165: aload         5
     167: monitorexit
     168: aload         7
     170: athrow
     171: iconst_m1
     172: aload_1
     173: monitorexit
     174: ireturn
     175: iload_2
     176: bipush        -2
     178: if_icmpeq     187
     181: aload_0
     182: iload_2
     183: invokespecial #50                 // Method __processChar:(I)Z
     186: pop
     187: goto          203
     190: astore        4
     192: aload_0
     193: getfield      #6                  // Field __isClosed:Z
     196: ifeq          203
     199: iconst_m1
     200: aload_1
     201: monitorexit
     202: ireturn
     203: iconst_0
     204: istore_3
     205: aload_0
     206: invokespecial #24                 // Method java/io/BufferedInputStream.available:()I
     209: ifle          226
     212: aload_0
     213: getfield      #11                 // Field __bytesAvailable:I
     216: aload_0
     217: getfield      #8                  // Field __queue:[I
     220: arraylength
     221: iconst_1
     222: isub
     223: if_icmplt     96
     226: aload_0
     227: iconst_0
     228: putfield      #13                 // Field __readIsWaiting:Z
     231: goto          7
     234: aload_0
     235: getfield      #8                  // Field __queue:[I
     238: aload_0
     239: getfield      #9                  // Field __queueHead:I
     242: iaload
     243: istore_2
     244: aload_0
     245: dup
     246: getfield      #9                  // Field __queueHead:I
     249: iconst_1
     250: iadd
     251: dup_x1
     252: putfield      #9                  // Field __queueHead:I
     255: aload_0
     256: getfield      #8                  // Field __queue:[I
     259: arraylength
     260: if_icmplt     268
     263: aload_0
     264: iconst_0
     265: putfield      #9                  // Field __queueHead:I
     268: aload_0
     269: dup
     270: getfield      #11                 // Field __bytesAvailable:I
     273: iconst_1
     274: isub
     275: putfield      #11                 // Field __bytesAvailable:I
     278: aload_0
     279: getfield      #11                 // Field __bytesAvailable:I
     282: ifne          299
     285: aload_0
     286: getfield      #14                 // Field __threaded:Z
     289: ifeq          299
     292: aload_0
     293: getfield      #8                  // Field __queue:[I
     296: invokevirtual #36                 // Method java/lang/Object.notify:()V
     299: iload_2
     300: aload_1
     301: monitorexit
     302: ireturn
     303: astore        8
     305: aload_1
     306: monitorexit
     307: aload         8
     309: athrow
    Exception table:
       from    to  target type
          58    75    78   Class java/lang/InterruptedException
          96   113   119   Class java/io/InterruptedIOException
         142   152   155   Class java/lang/InterruptedException
         129   160   163   any
         163   168   163   any
         175   187   190   Class java/lang/InterruptedException
           7    43   303   any
          44   115   303   any
         116   174   303   any
         175   202   303   any
         203   302   303   any
         303   307   303   any

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #51                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #8                  // Field __queue:[I
      11: dup
      12: astore        6
      14: monitorenter
      15: iload_3
      16: aload_0
      17: getfield      #11                 // Field __bytesAvailable:I
      20: if_icmple     28
      23: aload_0
      24: getfield      #11                 // Field __bytesAvailable:I
      27: istore_3
      28: aload         6
      30: monitorexit
      31: goto          42
      34: astore        7
      36: aload         6
      38: monitorexit
      39: aload         7
      41: athrow
      42: aload_0
      43: invokevirtual #52                 // Method read:()I
      46: dup
      47: istore        4
      49: iconst_m1
      50: if_icmpne     55
      53: iconst_m1
      54: ireturn
      55: iload_2
      56: istore        5
      58: aload_1
      59: iload_2
      60: iinc          2, 1
      63: iload         4
      65: i2b
      66: bastore
      67: iinc          3, -1
      70: iload_3
      71: ifle          85
      74: aload_0
      75: invokevirtual #52                 // Method read:()I
      78: dup
      79: istore        4
      81: iconst_m1
      82: if_icmpne     58
      85: iload_2
      86: iload         5
      88: isub
      89: ireturn
    Exception table:
       from    to  target type
          15    31    34   any
          34    39    34   any

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field __queue:[I
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #11                 // Field __bytesAvailable:I
      11: aload_0
      12: invokespecial #24                 // Method java/io/BufferedInputStream.available:()I
      15: iadd
      16: aload_1
      17: monitorexit
      18: ireturn
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
    Exception table:
       from    to  target type
           7    18    19   any
          19    22    19   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/io/BufferedInputStream.close:()V
       4: aload_0
       5: getfield      #8                  // Field __queue:[I
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: iconst_1
      13: putfield      #7                  // Field __hasReachedEOF:Z
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field __isClosed:Z
      21: aload_0
      22: getfield      #17                 // Field __thread:Ljava/lang/Thread;
      25: ifnull        45
      28: aload_0
      29: getfield      #17                 // Field __thread:Ljava/lang/Thread;
      32: invokevirtual #54                 // Method java/lang/Thread.isAlive:()Z
      35: ifeq          45
      38: aload_0
      39: getfield      #17                 // Field __thread:Ljava/lang/Thread;
      42: invokevirtual #55                 // Method java/lang/Thread.interrupt:()V
      45: aload_0
      46: getfield      #8                  // Field __queue:[I
      49: invokevirtual #46                 // Method java/lang/Object.notifyAll:()V
      52: aload_1
      53: monitorexit
      54: goto          62
      57: astore_2
      58: aload_1
      59: monitorexit
      60: aload_2
      61: athrow
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field __threaded:Z
      67: return
    Exception table:
       from    to  target type
          11    54    57   any
          57    60    57   any

  public void run();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #14                 // Field __threaded:Z
       5: aload_0
       6: getfield      #6                  // Field __isClosed:Z
       9: ifne          131
      12: aload_0
      13: iconst_1
      14: invokespecial #45                 // Method __read:(Z)I
      17: dup
      18: istore_1
      19: ifge          25
      22: goto          131
      25: goto          95
      28: astore_2
      29: aload_0
      30: getfield      #8                  // Field __queue:[I
      33: dup
      34: astore_3
      35: monitorenter
      36: aload_0
      37: aload_2
      38: putfield      #12                 // Field __ioException:Ljava/io/IOException;
      41: aload_0
      42: getfield      #8                  // Field __queue:[I
      45: invokevirtual #46                 // Method java/lang/Object.notifyAll:()V
      48: aload_0
      49: getfield      #8                  // Field __queue:[I
      52: ldc2_w        #47                 // long 100l
      55: invokevirtual #49                 // Method java/lang/Object.wait:(J)V
      58: goto          75
      61: astore        4
      63: aload_0
      64: getfield      #6                  // Field __isClosed:Z
      67: ifeq          75
      70: aload_3
      71: monitorexit
      72: goto          131
      75: aload_3
      76: monitorexit
      77: goto          5
      80: astore        5
      82: aload_3
      83: monitorexit
      84: aload         5
      86: athrow
      87: astore_2
      88: aload_0
      89: invokespecial #53                 // Method java/io/BufferedInputStream.close:()V
      92: goto          131
      95: iconst_0
      96: istore_2
      97: aload_0
      98: iload_1
      99: invokespecial #50                 // Method __processChar:(I)Z
     102: istore_2
     103: goto          117
     106: astore_3
     107: aload_0
     108: getfield      #6                  // Field __isClosed:Z
     111: ifeq          117
     114: goto          131
     117: iload_2
     118: ifeq          128
     121: aload_0
     122: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     125: invokevirtual #57                 // Method org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V
     128: goto          5
     131: goto          166
     134: astore_2
     135: aload_0
     136: getfield      #8                  // Field __queue:[I
     139: dup
     140: astore_3
     141: monitorenter
     142: aload_0
     143: aload_2
     144: putfield      #12                 // Field __ioException:Ljava/io/IOException;
     147: aload_3
     148: monitorexit
     149: goto          159
     152: astore        6
     154: aload_3
     155: monitorexit
     156: aload         6
     158: athrow
     159: aload_0
     160: getfield      #4                  // Field __client:Lorg/apache/commons/net/telnet/TelnetClient;
     163: invokevirtual #57                 // Method org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V
     166: aload_0
     167: getfield      #8                  // Field __queue:[I
     170: dup
     171: astore_2
     172: monitorenter
     173: aload_0
     174: iconst_1
     175: putfield      #6                  // Field __isClosed:Z
     178: aload_0
     179: iconst_1
     180: putfield      #7                  // Field __hasReachedEOF:Z
     183: aload_0
     184: getfield      #8                  // Field __queue:[I
     187: invokevirtual #36                 // Method java/lang/Object.notify:()V
     190: aload_2
     191: monitorexit
     192: goto          202
     195: astore        7
     197: aload_2
     198: monitorexit
     199: aload         7
     201: athrow
     202: aload_0
     203: iconst_0
     204: putfield      #14                 // Field __threaded:Z
     207: return
    Exception table:
       from    to  target type
          12    22    28   Class java/io/InterruptedIOException
          48    58    61   Class java/lang/InterruptedException
          36    72    80   any
          75    77    80   any
          80    84    80   any
          12    22    87   Class java/lang/RuntimeException
          97   103   106   Class java/lang/InterruptedException
           5   131   134   Class java/io/IOException
         142   149   152   any
         152   156   152   any
         173   192   195   any
         195   199   195   any
}
