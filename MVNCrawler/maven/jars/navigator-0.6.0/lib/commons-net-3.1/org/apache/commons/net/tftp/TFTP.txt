Compiled from "TFTP.java"
public class org.apache.commons.net.tftp.TFTP extends org.apache.commons.net.DatagramSocketClient {
  public static final int ASCII_MODE;

  public static final int NETASCII_MODE;

  public static final int BINARY_MODE;

  public static final int IMAGE_MODE;

  public static final int OCTET_MODE;

  public static final int DEFAULT_TIMEOUT;

  public static final int DEFAULT_PORT;

  static final int PACKET_SIZE;

  private byte[] __receiveBuffer;

  private java.net.DatagramPacket __receiveDatagram;

  private java.net.DatagramPacket __sendDatagram;

  byte[] _sendBuffer;

  public static final java.lang.String getModeName(int);
    Code:
       0: getstatic     #1                  // Field org/apache/commons/net/tftp/TFTPRequestPacket._modeStrings:[Ljava/lang/String;
       3: iload_0
       4: aaload
       5: areturn

  public org.apache.commons.net.tftp.TFTP();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/net/DatagramSocketClient."<init>":()V
       4: aload_0
       5: sipush        5000
       8: invokevirtual #3                  // Method setDefaultTimeout:(I)V
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field __receiveBuffer:[B
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
      21: return

  public final void discardPackets() throws java.io.IOException;
    Code:
       0: new           #6                  // class java/net/DatagramPacket
       3: dup
       4: sipush        516
       7: newarray       byte
       9: sipush        516
      12: invokespecial #7                  // Method java/net/DatagramPacket."<init>":([BI)V
      15: astore_2
      16: aload_0
      17: invokevirtual #8                  // Method getSoTimeout:()I
      20: istore_1
      21: aload_0
      22: iconst_1
      23: invokevirtual #9                  // Method setSoTimeout:(I)V
      26: aload_0
      27: getfield      #10                 // Field _socket_:Ljava/net/DatagramSocket;
      30: aload_2
      31: invokevirtual #11                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V
      34: goto          26
      37: astore_3
      38: goto          42
      41: astore_3
      42: aload_0
      43: iload_1
      44: invokevirtual #9                  // Method setSoTimeout:(I)V
      47: return
    Exception table:
       from    to  target type
          26    37    37   Class java/net/SocketException
          26    37    41   Class java/io/InterruptedIOException

  public final org.apache.commons.net.tftp.TFTPPacket bufferedReceive() throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
       4: aload_0
       5: getfield      #4                  // Field __receiveBuffer:[B
       8: invokevirtual #14                 // Method java/net/DatagramPacket.setData:([B)V
      11: aload_0
      12: getfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
      15: aload_0
      16: getfield      #4                  // Field __receiveBuffer:[B
      19: arraylength
      20: invokevirtual #15                 // Method java/net/DatagramPacket.setLength:(I)V
      23: aload_0
      24: getfield      #10                 // Field _socket_:Ljava/net/DatagramSocket;
      27: aload_0
      28: getfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
      31: invokevirtual #11                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V
      34: aload_0
      35: getfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
      38: invokestatic  #16                 // Method org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;
      41: areturn

  public final void bufferedSend(org.apache.commons.net.tftp.TFTPPacket) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field _socket_:Ljava/net/DatagramSocket;
       4: aload_1
       5: aload_0
       6: getfield      #17                 // Field __sendDatagram:Ljava/net/DatagramPacket;
       9: aload_0
      10: getfield      #18                 // Field _sendBuffer:[B
      13: invokevirtual #19                 // Method org/apache/commons/net/tftp/TFTPPacket._newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;
      16: invokevirtual #20                 // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V
      19: return

  public final void beginBufferedOps();
    Code:
       0: aload_0
       1: sipush        516
       4: newarray       byte
       6: putfield      #4                  // Field __receiveBuffer:[B
       9: aload_0
      10: new           #6                  // class java/net/DatagramPacket
      13: dup
      14: aload_0
      15: getfield      #4                  // Field __receiveBuffer:[B
      18: aload_0
      19: getfield      #4                  // Field __receiveBuffer:[B
      22: arraylength
      23: invokespecial #7                  // Method java/net/DatagramPacket."<init>":([BI)V
      26: putfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
      29: aload_0
      30: sipush        516
      33: newarray       byte
      35: putfield      #18                 // Field _sendBuffer:[B
      38: aload_0
      39: new           #6                  // class java/net/DatagramPacket
      42: dup
      43: aload_0
      44: getfield      #18                 // Field _sendBuffer:[B
      47: aload_0
      48: getfield      #18                 // Field _sendBuffer:[B
      51: arraylength
      52: invokespecial #7                  // Method java/net/DatagramPacket."<init>":([BI)V
      55: putfield      #17                 // Field __sendDatagram:Ljava/net/DatagramPacket;
      58: return

  public final void endBufferedOps();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #4                  // Field __receiveBuffer:[B
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field __receiveDatagram:Ljava/net/DatagramPacket;
      10: aload_0
      11: aconst_null
      12: putfield      #18                 // Field _sendBuffer:[B
      15: aload_0
      16: aconst_null
      17: putfield      #17                 // Field __sendDatagram:Ljava/net/DatagramPacket;
      20: return

  public final void send(org.apache.commons.net.tftp.TFTPPacket) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field _socket_:Ljava/net/DatagramSocket;
       4: aload_1
       5: invokevirtual #21                 // Method org/apache/commons/net/tftp/TFTPPacket.newDatagram:()Ljava/net/DatagramPacket;
       8: invokevirtual #20                 // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V
      11: return

  public final org.apache.commons.net.tftp.TFTPPacket receive() throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException;
    Code:
       0: new           #6                  // class java/net/DatagramPacket
       3: dup
       4: sipush        516
       7: newarray       byte
       9: sipush        516
      12: invokespecial #7                  // Method java/net/DatagramPacket."<init>":([BI)V
      15: astore_1
      16: aload_0
      17: getfield      #10                 // Field _socket_:Ljava/net/DatagramSocket;
      20: aload_1
      21: invokevirtual #11                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V
      24: aload_1
      25: invokestatic  #16                 // Method org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;
      28: areturn
}
