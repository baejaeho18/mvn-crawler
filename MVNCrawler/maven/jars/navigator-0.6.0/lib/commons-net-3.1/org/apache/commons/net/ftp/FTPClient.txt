Compiled from "FTPClient.java"
public class org.apache.commons.net.ftp.FTPClient extends org.apache.commons.net.ftp.FTP implements org.apache.commons.net.ftp.Configurable {
  public static final java.lang.String FTP_SYSTEM_TYPE;

  public static final java.lang.String FTP_SYSTEM_TYPE_DEFAULT;

  public static final java.lang.String SYSTEM_TYPE_PROPERTIES;

  public static final int ACTIVE_LOCAL_DATA_CONNECTION_MODE;

  public static final int ACTIVE_REMOTE_DATA_CONNECTION_MODE;

  public static final int PASSIVE_LOCAL_DATA_CONNECTION_MODE;

  public static final int PASSIVE_REMOTE_DATA_CONNECTION_MODE;

  private int __dataConnectionMode;

  private int __dataTimeout;

  private int __passivePort;

  private java.lang.String __passiveHost;

  private final java.util.Random __random;

  private int __activeMinPort;

  private int __activeMaxPort;

  private java.net.InetAddress __activeExternalHost;

  private java.net.InetAddress __reportActiveExternalHost;

  private int __fileType;

  private int __fileFormat;

  private int __fileStructure;

  private int __fileTransferMode;

  private boolean __remoteVerificationEnabled;

  private long __restartOffset;

  private org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory __parserFactory;

  private int __bufferSize;

  private boolean __listHiddenFiles;

  private boolean __useEPSVwithIPv4;

  private java.lang.String __systemName;

  private org.apache.commons.net.ftp.FTPFileEntryParser __entryParser;

  private java.lang.String __entryParserKey;

  private org.apache.commons.net.ftp.FTPClientConfig __configuration;

  private org.apache.commons.net.io.CopyStreamListener __copyStreamListener;

  private long __controlKeepAliveTimeout;

  private int __controlKeepAliveReplyTimeout;

  private static final java.util.regex.Pattern __PARMS_PAT;

  private boolean __autodetectEncoding;

  private java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> __featuresMap;

  private static java.util.Properties getOverrideProperties();
    Code:
       0: getstatic     #1                  // Field org/apache/commons/net/ftp/FTPClient$PropertiesSingleton.PROPERTIES:Ljava/util/Properties;
       3: areturn

  public org.apache.commons.net.ftp.FTPClient();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/net/ftp/FTP."<init>":()V
       4: aload_0
       5: sipush        1000
       8: putfield      #3                  // Field __controlKeepAliveReplyTimeout:I
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field __autodetectEncoding:Z
      16: aload_0
      17: invokespecial #5                  // Method __initDefaults:()V
      20: aload_0
      21: iconst_m1
      22: putfield      #6                  // Field __dataTimeout:I
      25: aload_0
      26: iconst_1
      27: putfield      #7                  // Field __remoteVerificationEnabled:Z
      30: aload_0
      31: new           #8                  // class org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory
      34: dup
      35: invokespecial #9                  // Method org/apache/commons/net/ftp/parser/DefaultFTPFileEntryParserFactory."<init>":()V
      38: putfield      #10                 // Field __parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
      41: aload_0
      42: aconst_null
      43: putfield      #11                 // Field __configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      46: aload_0
      47: iconst_0
      48: putfield      #12                 // Field __listHiddenFiles:Z
      51: aload_0
      52: iconst_0
      53: putfield      #13                 // Field __useEPSVwithIPv4:Z
      56: aload_0
      57: new           #14                 // class java/util/Random
      60: dup
      61: invokespecial #15                 // Method java/util/Random."<init>":()V
      64: putfield      #16                 // Field __random:Ljava/util/Random;
      67: return

  private void __initDefaults();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #17                 // Field __dataConnectionMode:I
       5: aload_0
       6: aconst_null
       7: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #19                 // Field __passivePort:I
      15: aload_0
      16: aconst_null
      17: putfield      #20                 // Field __activeExternalHost:Ljava/net/InetAddress;
      20: aload_0
      21: aconst_null
      22: putfield      #21                 // Field __reportActiveExternalHost:Ljava/net/InetAddress;
      25: aload_0
      26: iconst_0
      27: putfield      #22                 // Field __activeMinPort:I
      30: aload_0
      31: iconst_0
      32: putfield      #23                 // Field __activeMaxPort:I
      35: aload_0
      36: iconst_0
      37: putfield      #24                 // Field __fileType:I
      40: aload_0
      41: bipush        7
      43: putfield      #25                 // Field __fileStructure:I
      46: aload_0
      47: iconst_4
      48: putfield      #26                 // Field __fileFormat:I
      51: aload_0
      52: bipush        10
      54: putfield      #27                 // Field __fileTransferMode:I
      57: aload_0
      58: lconst_0
      59: putfield      #28                 // Field __restartOffset:J
      62: aload_0
      63: aconst_null
      64: putfield      #29                 // Field __systemName:Ljava/lang/String;
      67: aload_0
      68: aconst_null
      69: putfield      #30                 // Field __entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      72: aload_0
      73: ldc           #31                 // String
      75: putfield      #32                 // Field __entryParserKey:Ljava/lang/String;
      78: aload_0
      79: sipush        1024
      82: putfield      #33                 // Field __bufferSize:I
      85: aload_0
      86: aconst_null
      87: putfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
      90: return

  private java.lang.String __parsePathname(java.lang.String);
    Code:
       0: aload_1
       1: bipush        34
       3: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
       6: iconst_1
       7: iadd
       8: istore_2
       9: aload_1
      10: bipush        34
      12: iload_2
      13: invokevirtual #36                 // Method java/lang/String.indexOf:(II)I
      16: istore_3
      17: aload_1
      18: iload_2
      19: iload_3
      20: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      23: areturn

  protected void _parsePassiveModeReply(java.lang.String) throws org.apache.commons.net.MalformedServerReplyException;
    Code:
       0: getstatic     #38                 // Field __PARMS_PAT:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #39                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #40                 // Method java/util/regex/Matcher.find:()Z
      12: ifne          42
      15: new           #41                 // class org/apache/commons/net/MalformedServerReplyException
      18: dup
      19: new           #42                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #44                 // String Could not parse passive host information.\nServer Reply:
      28: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #47                 // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_2
      44: iconst_1
      45: invokevirtual #48                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      48: bipush        44
      50: bipush        46
      52: invokevirtual #49                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      55: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
      58: aload_2
      59: iconst_2
      60: invokevirtual #48                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      63: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      66: istore_3
      67: aload_2
      68: iconst_3
      69: invokevirtual #48                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      72: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      75: istore        4
      77: aload_0
      78: iload_3
      79: bipush        8
      81: ishl
      82: iload         4
      84: ior
      85: putfield      #19                 // Field __passivePort:I
      88: goto          119
      91: astore_3
      92: new           #41                 // class org/apache/commons/net/MalformedServerReplyException
      95: dup
      96: new           #42                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #52                 // String Could not parse passive port information.\nServer Reply:
     105: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_1
     109: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokespecial #47                 // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload_0
     120: getfield      #18                 // Field __passiveHost:Ljava/lang/String;
     123: invokestatic  #53                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
     126: astore_3
     127: aload_3
     128: invokevirtual #54                 // Method java/net/InetAddress.isSiteLocalAddress:()Z
     131: ifeq          201
     134: aload_0
     135: invokevirtual #55                 // Method getRemoteAddress:()Ljava/net/InetAddress;
     138: invokevirtual #54                 // Method java/net/InetAddress.isSiteLocalAddress:()Z
     141: ifne          201
     144: aload_0
     145: invokevirtual #55                 // Method getRemoteAddress:()Ljava/net/InetAddress;
     148: invokevirtual #56                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     151: astore        4
     153: aload_0
     154: iconst_0
     155: new           #42                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #57                 // String [Replacing site local address
     164: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_0
     168: getfield      #18                 // Field __passiveHost:Ljava/lang/String;
     171: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #58                 // String  with
     176: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload         4
     181: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: ldc           #59                 // String ]\n
     186: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokevirtual #60                 // Method fireReplyReceived:(ILjava/lang/String;)V
     195: aload_0
     196: aload         4
     198: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
     201: goto          232
     204: astore_3
     205: new           #41                 // class org/apache/commons/net/MalformedServerReplyException
     208: dup
     209: new           #42                 // class java/lang/StringBuilder
     212: dup
     213: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     216: ldc           #44                 // String Could not parse passive host information.\nServer Reply:
     218: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: aload_1
     222: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: invokespecial #47                 // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
     231: athrow
     232: return
    Exception table:
       from    to  target type
          58    88    91   Class java/lang/NumberFormatException
         119   201   204   Class java/net/UnknownHostException

  protected void _parseExtendedPassiveModeReply(java.lang.String) throws org.apache.commons.net.MalformedServerReplyException;
    Code:
       0: aload_1
       1: aload_1
       2: bipush        40
       4: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
       7: iconst_1
       8: iadd
       9: aload_1
      10: bipush        41
      12: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
      15: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      18: invokevirtual #62                 // Method java/lang/String.trim:()Ljava/lang/String;
      21: astore_1
      22: aload_1
      23: iconst_0
      24: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      27: istore_2
      28: aload_1
      29: iconst_1
      30: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      33: istore_3
      34: aload_1
      35: iconst_2
      36: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      39: istore        4
      41: aload_1
      42: aload_1
      43: invokevirtual #64                 // Method java/lang/String.length:()I
      46: iconst_1
      47: isub
      48: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      51: istore        5
      53: iload_2
      54: iload_3
      55: if_icmpne     71
      58: iload_3
      59: iload         4
      61: if_icmpne     71
      64: iload         4
      66: iload         5
      68: if_icmpeq     98
      71: new           #41                 // class org/apache/commons/net/MalformedServerReplyException
      74: dup
      75: new           #42                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #65                 // String Could not parse extended passive host information.\nServer Reply:
      84: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #47                 // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_1
      99: iconst_3
     100: aload_1
     101: invokevirtual #64                 // Method java/lang/String.length:()I
     104: iconst_1
     105: isub
     106: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     109: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     112: istore        6
     114: goto          146
     117: astore        7
     119: new           #41                 // class org/apache/commons/net/MalformedServerReplyException
     122: dup
     123: new           #42                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #65                 // String Could not parse extended passive host information.\nServer Reply:
     132: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_1
     136: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #47                 // Method org/apache/commons/net/MalformedServerReplyException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: aload_0
     147: aload_0
     148: invokevirtual #55                 // Method getRemoteAddress:()Ljava/net/InetAddress;
     151: invokevirtual #56                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     154: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
     157: aload_0
     158: iload         6
     160: putfield      #19                 // Field __passivePort:I
     163: return
    Exception table:
       from    to  target type
          98   114   117   Class java/lang/NumberFormatException

  private boolean __storeFile(int, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #66                 // Method org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;
       5: aload_2
       6: aload_3
       7: invokevirtual #67                 // Method _storeFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;)Z
      10: ireturn

  protected boolean _storeFile(java.lang.String, java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: dup
       7: astore        4
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: new           #69                 // class java/io/BufferedOutputStream
      17: dup
      18: aload         4
      20: invokevirtual #70                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      23: aload_0
      24: invokevirtual #71                 // Method getBufferSize:()I
      27: invokespecial #72                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      30: astore        5
      32: aload_0
      33: getfield      #24                 // Field __fileType:I
      36: ifne          50
      39: new           #73                 // class org/apache/commons/net/io/ToNetASCIIOutputStream
      42: dup
      43: aload         5
      45: invokespecial #74                 // Method org/apache/commons/net/io/ToNetASCIIOutputStream."<init>":(Ljava/io/OutputStream;)V
      48: astore        5
      50: aconst_null
      51: astore        6
      53: aload_0
      54: getfield      #75                 // Field __controlKeepAliveTimeout:J
      57: lconst_0
      58: lcmp
      59: ifle          80
      62: new           #76                 // class org/apache/commons/net/ftp/FTPClient$CSL
      65: dup
      66: aload_0
      67: aload_0
      68: getfield      #75                 // Field __controlKeepAliveTimeout:J
      71: aload_0
      72: getfield      #3                  // Field __controlKeepAliveReplyTimeout:I
      75: invokespecial #77                 // Method org/apache/commons/net/ftp/FTPClient$CSL."<init>":(Lorg/apache/commons/net/ftp/FTPClient;JI)V
      78: astore        6
      80: aload_3
      81: aload         5
      83: aload_0
      84: invokevirtual #71                 // Method getBufferSize:()I
      87: ldc2_w        #78                 // long -1l
      90: aload_0
      91: aload         6
      93: invokespecial #80                 // Method __mergeListeners:(Lorg/apache/commons/net/io/CopyStreamListener;)Lorg/apache/commons/net/io/CopyStreamListener;
      96: iconst_0
      97: invokestatic  #81                 // Method org/apache/commons/net/io/Util.copyStream:(Ljava/io/InputStream;Ljava/io/OutputStream;IJLorg/apache/commons/net/io/CopyStreamListener;Z)J
     100: pop2
     101: goto          114
     104: astore        7
     106: aload         4
     108: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
     111: aload         7
     113: athrow
     114: aload         5
     116: invokevirtual #84                 // Method java/io/OutputStream.close:()V
     119: aload         4
     121: invokevirtual #85                 // Method java/net/Socket.close:()V
     124: aload         6
     126: ifnull        134
     129: aload         6
     131: invokevirtual #86                 // Method org/apache/commons/net/ftp/FTPClient$CSL.cleanUp:()V
     134: aload_0
     135: invokevirtual #87                 // Method completePendingCommand:()Z
     138: istore        7
     140: iload         7
     142: ireturn
    Exception table:
       from    to  target type
          80   101   104   Class java/io/IOException

  private java.io.OutputStream __storeFileStream(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #66                 // Method org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;
       5: aload_2
       6: invokevirtual #88                 // Method _storeFileStream:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/OutputStream;
       9: areturn

  protected java.io.OutputStream _storeFileStream(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: dup
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_3
      14: invokevirtual #70                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      17: astore        4
      19: aload_0
      20: getfield      #24                 // Field __fileType:I
      23: ifne          52
      26: new           #69                 // class java/io/BufferedOutputStream
      29: dup
      30: aload         4
      32: aload_0
      33: invokevirtual #71                 // Method getBufferSize:()I
      36: invokespecial #72                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
      39: astore        4
      41: new           #73                 // class org/apache/commons/net/io/ToNetASCIIOutputStream
      44: dup
      45: aload         4
      47: invokespecial #74                 // Method org/apache/commons/net/io/ToNetASCIIOutputStream."<init>":(Ljava/io/OutputStream;)V
      50: astore        4
      52: new           #89                 // class org/apache/commons/net/io/SocketOutputStream
      55: dup
      56: aload_3
      57: aload         4
      59: invokespecial #90                 // Method org/apache/commons/net/io/SocketOutputStream."<init>":(Ljava/net/Socket;Ljava/io/OutputStream;)V
      62: areturn

  protected java.net.Socket _openDataConnection_(int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #66                 // Method org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;
       5: aload_2
       6: invokevirtual #68                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       9: areturn

  protected java.net.Socket _openDataConnection_(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: ifeq          17
       7: aload_0
       8: getfield      #17                 // Field __dataConnectionMode:I
      11: iconst_2
      12: if_icmpeq     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: invokevirtual #55                 // Method getRemoteAddress:()Ljava/net/InetAddress;
      21: instanceof    #91                 // class java/net/Inet6Address
      24: istore_3
      25: aload_0
      26: getfield      #17                 // Field __dataConnectionMode:I
      29: ifne          212
      32: aload_0
      33: getfield      #92                 // Field _serverSocketFactory_:Ljavax/net/ServerSocketFactory;
      36: aload_0
      37: invokespecial #93                 // Method getActivePort:()I
      40: iconst_1
      41: aload_0
      42: invokespecial #94                 // Method getHostAddress:()Ljava/net/InetAddress;
      45: invokevirtual #95                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;
      48: astore        5
      50: iload_3
      51: ifeq          84
      54: aload_0
      55: aload_0
      56: invokespecial #96                 // Method getReportHostAddress:()Ljava/net/InetAddress;
      59: aload         5
      61: invokevirtual #97                 // Method java/net/ServerSocket.getLocalPort:()I
      64: invokevirtual #98                 // Method eprt:(Ljava/net/InetAddress;I)I
      67: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      70: ifne          114
      73: aconst_null
      74: astore        6
      76: aload         5
      78: invokevirtual #100                // Method java/net/ServerSocket.close:()V
      81: aload         6
      83: areturn
      84: aload_0
      85: aload_0
      86: invokespecial #96                 // Method getReportHostAddress:()Ljava/net/InetAddress;
      89: aload         5
      91: invokevirtual #97                 // Method java/net/ServerSocket.getLocalPort:()I
      94: invokevirtual #101                // Method port:(Ljava/net/InetAddress;I)I
      97: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
     100: ifne          114
     103: aconst_null
     104: astore        6
     106: aload         5
     108: invokevirtual #100                // Method java/net/ServerSocket.close:()V
     111: aload         6
     113: areturn
     114: aload_0
     115: getfield      #28                 // Field __restartOffset:J
     118: lconst_0
     119: lcmp
     120: ifle          145
     123: aload_0
     124: aload_0
     125: getfield      #28                 // Field __restartOffset:J
     128: invokevirtual #102                // Method restart:(J)Z
     131: ifne          145
     134: aconst_null
     135: astore        6
     137: aload         5
     139: invokevirtual #100                // Method java/net/ServerSocket.close:()V
     142: aload         6
     144: areturn
     145: aload_0
     146: aload_1
     147: aload_2
     148: invokevirtual #103                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
     151: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
     154: ifne          168
     157: aconst_null
     158: astore        6
     160: aload         5
     162: invokevirtual #100                // Method java/net/ServerSocket.close:()V
     165: aload         6
     167: areturn
     168: aload_0
     169: getfield      #6                  // Field __dataTimeout:I
     172: iflt          184
     175: aload         5
     177: aload_0
     178: getfield      #6                  // Field __dataTimeout:I
     181: invokevirtual #105                // Method java/net/ServerSocket.setSoTimeout:(I)V
     184: aload         5
     186: invokevirtual #106                // Method java/net/ServerSocket.accept:()Ljava/net/Socket;
     189: astore        4
     191: aload         5
     193: invokevirtual #100                // Method java/net/ServerSocket.close:()V
     196: goto          209
     199: astore        7
     201: aload         5
     203: invokevirtual #100                // Method java/net/ServerSocket.close:()V
     206: aload         7
     208: athrow
     209: goto          375
     212: aload_0
     213: invokevirtual #107                // Method isUseEPSVwithIPv4:()Z
     216: ifne          223
     219: iload_3
     220: ifeq          227
     223: iconst_1
     224: goto          228
     227: iconst_0
     228: istore        5
     230: iload         5
     232: ifeq          263
     235: aload_0
     236: invokevirtual #108                // Method epsv:()I
     239: sipush        229
     242: if_icmpne     263
     245: aload_0
     246: aload_0
     247: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
     250: iconst_0
     251: invokevirtual #110                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     254: checkcast     #111                // class java/lang/String
     257: invokevirtual #112                // Method _parseExtendedPassiveModeReply:(Ljava/lang/String;)V
     260: goto          296
     263: iload_3
     264: ifeq          269
     267: aconst_null
     268: areturn
     269: aload_0
     270: invokevirtual #113                // Method pasv:()I
     273: sipush        227
     276: if_icmpeq     281
     279: aconst_null
     280: areturn
     281: aload_0
     282: aload_0
     283: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
     286: iconst_0
     287: invokevirtual #110                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     290: checkcast     #111                // class java/lang/String
     293: invokevirtual #114                // Method _parsePassiveModeReply:(Ljava/lang/String;)V
     296: aload_0
     297: getfield      #115                // Field _socketFactory_:Ljavax/net/SocketFactory;
     300: invokevirtual #116                // Method javax/net/SocketFactory.createSocket:()Ljava/net/Socket;
     303: astore        4
     305: aload         4
     307: new           #117                // class java/net/InetSocketAddress
     310: dup
     311: aload_0
     312: getfield      #18                 // Field __passiveHost:Ljava/lang/String;
     315: aload_0
     316: getfield      #19                 // Field __passivePort:I
     319: invokespecial #118                // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     322: aload_0
     323: getfield      #119                // Field connectTimeout:I
     326: invokevirtual #120                // Method java/net/Socket.connect:(Ljava/net/SocketAddress;I)V
     329: aload_0
     330: getfield      #28                 // Field __restartOffset:J
     333: lconst_0
     334: lcmp
     335: ifle          356
     338: aload_0
     339: aload_0
     340: getfield      #28                 // Field __restartOffset:J
     343: invokevirtual #102                // Method restart:(J)Z
     346: ifne          356
     349: aload         4
     351: invokevirtual #85                 // Method java/net/Socket.close:()V
     354: aconst_null
     355: areturn
     356: aload_0
     357: aload_1
     358: aload_2
     359: invokevirtual #103                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
     362: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
     365: ifne          375
     368: aload         4
     370: invokevirtual #85                 // Method java/net/Socket.close:()V
     373: aconst_null
     374: areturn
     375: aload_0
     376: getfield      #7                  // Field __remoteVerificationEnabled:Z
     379: ifeq          445
     382: aload_0
     383: aload         4
     385: invokevirtual #121                // Method verifyRemote:(Ljava/net/Socket;)Z
     388: ifne          445
     391: aload         4
     393: invokevirtual #85                 // Method java/net/Socket.close:()V
     396: new           #82                 // class java/io/IOException
     399: dup
     400: new           #42                 // class java/lang/StringBuilder
     403: dup
     404: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     407: ldc           #122                // String Host attempting data connection
     409: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     412: aload         4
     414: invokevirtual #123                // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;
     417: invokevirtual #56                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     420: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     423: ldc           #124                // String  is not same as server
     425: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     428: aload_0
     429: invokevirtual #55                 // Method getRemoteAddress:()Ljava/net/InetAddress;
     432: invokevirtual #56                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     435: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     438: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     441: invokespecial #125                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     444: athrow
     445: aload_0
     446: getfield      #6                  // Field __dataTimeout:I
     449: iflt          461
     452: aload         4
     454: aload_0
     455: getfield      #6                  // Field __dataTimeout:I
     458: invokevirtual #126                // Method java/net/Socket.setSoTimeout:(I)V
     461: aload         4
     463: areturn
    Exception table:
       from    to  target type
          50    76   199   any
          84   106   199   any
         114   137   199   any
         145   160   199   any
         168   191   199   any
         199   201   199   any

  protected void _connectAction_() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #127                // Method org/apache/commons/net/ftp/FTP._connectAction_:()V
       4: aload_0
       5: invokespecial #5                  // Method __initDefaults:()V
       8: aload_0
       9: getfield      #4                  // Field __autodetectEncoding:Z
      12: ifeq          129
      15: new           #128                // class java/util/ArrayList
      18: dup
      19: aload_0
      20: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      23: invokespecial #129                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      26: astore_1
      27: aload_0
      28: getfield      #130                // Field _replyCode:I
      31: istore_2
      32: aload_0
      33: ldc           #131                // String UTF8
      35: invokevirtual #132                // Method hasFeature:(Ljava/lang/String;)Z
      38: ifne          50
      41: aload_0
      42: ldc           #133                // String UTF-8
      44: invokevirtual #132                // Method hasFeature:(Ljava/lang/String;)Z
      47: ifeq          108
      50: aload_0
      51: ldc           #133                // String UTF-8
      53: invokevirtual #134                // Method setControlEncoding:(Ljava/lang/String;)V
      56: aload_0
      57: new           #135                // class org/apache/commons/net/io/CRLFLineReader
      60: dup
      61: new           #136                // class java/io/InputStreamReader
      64: dup
      65: aload_0
      66: getfield      #137                // Field _input_:Ljava/io/InputStream;
      69: aload_0
      70: invokevirtual #138                // Method getControlEncoding:()Ljava/lang/String;
      73: invokespecial #139                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      76: invokespecial #140                // Method org/apache/commons/net/io/CRLFLineReader."<init>":(Ljava/io/Reader;)V
      79: putfield      #141                // Field _controlInput_:Ljava/io/BufferedReader;
      82: aload_0
      83: new           #142                // class java/io/BufferedWriter
      86: dup
      87: new           #143                // class java/io/OutputStreamWriter
      90: dup
      91: aload_0
      92: getfield      #144                // Field _output_:Ljava/io/OutputStream;
      95: aload_0
      96: invokevirtual #138                // Method getControlEncoding:()Ljava/lang/String;
      99: invokespecial #145                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
     102: invokespecial #146                // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
     105: putfield      #147                // Field _controlOutput_:Ljava/io/BufferedWriter;
     108: aload_0
     109: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
     112: invokevirtual #148                // Method java/util/ArrayList.clear:()V
     115: aload_0
     116: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
     119: aload_1
     120: invokevirtual #149                // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
     123: pop
     124: aload_0
     125: iload_2
     126: putfield      #130                // Field _replyCode:I
     129: return

  public void setDataTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field __dataTimeout:I
       5: return

  public void setParserFactory(org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field __parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
       5: return

  public void disconnect() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #150                // Method org/apache/commons/net/ftp/FTP.disconnect:()V
       4: aload_0
       5: invokespecial #5                  // Method __initDefaults:()V
       8: return

  public void setRemoteVerificationEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field __remoteVerificationEnabled:Z
       5: return

  public boolean isRemoteVerificationEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field __remoteVerificationEnabled:Z
       4: ireturn

  public boolean login(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #151                // Method user:(Ljava/lang/String;)I
       5: pop
       6: aload_0
       7: getfield      #130                // Field _replyCode:I
      10: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #130                // Field _replyCode:I
      22: invokestatic  #152                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: aload_2
      32: invokevirtual #153                // Method pass:(Ljava/lang/String;)I
      35: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      38: ireturn

  public boolean login(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #151                // Method user:(Ljava/lang/String;)I
       5: pop
       6: aload_0
       7: getfield      #130                // Field _replyCode:I
      10: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #130                // Field _replyCode:I
      22: invokestatic  #152                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: aload_2
      32: invokevirtual #153                // Method pass:(Ljava/lang/String;)I
      35: pop
      36: aload_0
      37: getfield      #130                // Field _replyCode:I
      40: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload_0
      49: getfield      #130                // Field _replyCode:I
      52: invokestatic  #152                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: aload_0
      61: aload_3
      62: invokevirtual #154                // Method acct:(Ljava/lang/String;)I
      65: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      68: ireturn

  public boolean logout() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #155                // Method quit:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean changeWorkingDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #156                // Method cwd:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean changeToParentDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #157                // Method cdup:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean structureMount(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #158                // Method smnt:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  boolean reinitialize() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #159                // Method rein:()I
       4: pop
       5: aload_0
       6: getfield      #130                // Field _replyCode:I
       9: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      12: ifne          35
      15: aload_0
      16: getfield      #130                // Field _replyCode:I
      19: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      22: ifeq          41
      25: aload_0
      26: invokevirtual #160                // Method getReply:()I
      29: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      32: ifeq          41
      35: aload_0
      36: invokespecial #5                  // Method __initDefaults:()V
      39: iconst_1
      40: ireturn
      41: iconst_0
      42: ireturn

  public void enterLocalActiveMode();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #17                 // Field __dataConnectionMode:I
       5: aload_0
       6: aconst_null
       7: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #19                 // Field __passivePort:I
      15: return

  public void enterLocalPassiveMode();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #17                 // Field __dataConnectionMode:I
       5: aload_0
       6: aconst_null
       7: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #19                 // Field __passivePort:I
      15: return

  public boolean enterRemoteActiveMode(java.net.InetAddress, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #101                // Method port:(Ljava/net/InetAddress;I)I
       6: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ifeq          29
      12: aload_0
      13: iconst_1
      14: putfield      #17                 // Field __dataConnectionMode:I
      17: aload_0
      18: aconst_null
      19: putfield      #18                 // Field __passiveHost:Ljava/lang/String;
      22: aload_0
      23: iconst_m1
      24: putfield      #19                 // Field __passivePort:I
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public boolean enterRemotePassiveMode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #113                // Method pasv:()I
       4: sipush        227
       7: if_icmpeq     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: iconst_3
      14: putfield      #17                 // Field __dataConnectionMode:I
      17: aload_0
      18: aload_0
      19: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      22: iconst_0
      23: invokevirtual #110                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      26: checkcast     #111                // class java/lang/String
      29: invokevirtual #114                // Method _parsePassiveModeReply:(Ljava/lang/String;)V
      32: iconst_1
      33: ireturn

  public java.lang.String getPassiveHost();
    Code:
       0: aload_0
       1: getfield      #18                 // Field __passiveHost:Ljava/lang/String;
       4: areturn

  public int getPassivePort();
    Code:
       0: aload_0
       1: getfield      #19                 // Field __passivePort:I
       4: ireturn

  public int getDataConnectionMode();
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: ireturn

  private int getActivePort();
    Code:
       0: aload_0
       1: getfield      #22                 // Field __activeMinPort:I
       4: ifle          58
       7: aload_0
       8: getfield      #23                 // Field __activeMaxPort:I
      11: aload_0
      12: getfield      #22                 // Field __activeMinPort:I
      15: if_icmplt     58
      18: aload_0
      19: getfield      #23                 // Field __activeMaxPort:I
      22: aload_0
      23: getfield      #22                 // Field __activeMinPort:I
      26: if_icmpne     34
      29: aload_0
      30: getfield      #23                 // Field __activeMaxPort:I
      33: ireturn
      34: aload_0
      35: getfield      #16                 // Field __random:Ljava/util/Random;
      38: aload_0
      39: getfield      #23                 // Field __activeMaxPort:I
      42: aload_0
      43: getfield      #22                 // Field __activeMinPort:I
      46: isub
      47: iconst_1
      48: iadd
      49: invokevirtual #161                // Method java/util/Random.nextInt:(I)I
      52: aload_0
      53: getfield      #22                 // Field __activeMinPort:I
      56: iadd
      57: ireturn
      58: iconst_0
      59: ireturn

  private java.net.InetAddress getHostAddress();
    Code:
       0: aload_0
       1: getfield      #20                 // Field __activeExternalHost:Ljava/net/InetAddress;
       4: ifnull        12
       7: aload_0
       8: getfield      #20                 // Field __activeExternalHost:Ljava/net/InetAddress;
      11: areturn
      12: aload_0
      13: invokevirtual #162                // Method getLocalAddress:()Ljava/net/InetAddress;
      16: areturn

  private java.net.InetAddress getReportHostAddress();
    Code:
       0: aload_0
       1: getfield      #21                 // Field __reportActiveExternalHost:Ljava/net/InetAddress;
       4: ifnull        12
       7: aload_0
       8: getfield      #21                 // Field __reportActiveExternalHost:Ljava/net/InetAddress;
      11: areturn
      12: aload_0
      13: invokespecial #94                 // Method getHostAddress:()Ljava/net/InetAddress;
      16: areturn

  public void setActivePortRange(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field __activeMinPort:I
       5: aload_0
       6: iload_2
       7: putfield      #23                 // Field __activeMaxPort:I
      10: return

  public void setActiveExternalIPAddress(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       5: putfield      #20                 // Field __activeExternalHost:Ljava/net/InetAddress;
       8: return

  public void setReportActiveExternalIPAddress(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       5: putfield      #21                 // Field __reportActiveExternalHost:Ljava/net/InetAddress;
       8: return

  public boolean setFileType(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #163                // Method type:(I)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          23
      11: aload_0
      12: iload_1
      13: putfield      #24                 // Field __fileType:I
      16: aload_0
      17: iconst_4
      18: putfield      #26                 // Field __fileFormat:I
      21: iconst_1
      22: ireturn
      23: iconst_0
      24: ireturn

  public boolean setFileType(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #164                // Method type:(II)I
       6: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ifeq          24
      12: aload_0
      13: iload_1
      14: putfield      #24                 // Field __fileType:I
      17: aload_0
      18: iload_2
      19: putfield      #26                 // Field __fileFormat:I
      22: iconst_1
      23: ireturn
      24: iconst_0
      25: ireturn

  public boolean setFileStructure(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #165                // Method stru:(I)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          18
      11: aload_0
      12: iload_1
      13: putfield      #25                 // Field __fileStructure:I
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  public boolean setFileTransferMode(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #166                // Method mode:(I)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          18
      11: aload_0
      12: iload_1
      13: putfield      #27                 // Field __fileTransferMode:I
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  public boolean remoteRetrieve(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #17                 // Field __dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #167                // Method retr:(Ljava/lang/String;)I
      21: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean remoteStore(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #17                 // Field __dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #168                // Method stor:(Ljava/lang/String;)I
      21: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean remoteStoreUnique(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #17                 // Field __dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #169                // Method stou:(Ljava/lang/String;)I
      21: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean remoteStoreUnique() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #17                 // Field __dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     24
      16: aload_0
      17: invokevirtual #170                // Method stou:()I
      20: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public boolean remoteAppend(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field __dataConnectionMode:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #17                 // Field __dataConnectionMode:I
      12: iconst_3
      13: if_icmpne     25
      16: aload_0
      17: aload_1
      18: invokevirtual #171                // Method appe:(Ljava/lang/String;)I
      21: invokestatic  #104                // Method org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z
      24: ireturn
      25: iconst_0
      26: ireturn

  public boolean completePendingCommand() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #160                // Method getReply:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean retrieveFile(java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        13
       3: invokestatic  #66                 // Method org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;
       6: aload_1
       7: aload_2
       8: invokevirtual #172                // Method _retrieveFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/OutputStream;)Z
      11: ireturn

  protected boolean _retrieveFile(java.lang.String, java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: dup
       7: astore        4
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: new           #173                // class java/io/BufferedInputStream
      17: dup
      18: aload         4
      20: invokevirtual #174                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      23: aload_0
      24: invokevirtual #71                 // Method getBufferSize:()I
      27: invokespecial #175                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
      30: astore        5
      32: aload_0
      33: getfield      #24                 // Field __fileType:I
      36: ifne          50
      39: new           #176                // class org/apache/commons/net/io/FromNetASCIIInputStream
      42: dup
      43: aload         5
      45: invokespecial #177                // Method org/apache/commons/net/io/FromNetASCIIInputStream."<init>":(Ljava/io/InputStream;)V
      48: astore        5
      50: aconst_null
      51: astore        6
      53: aload_0
      54: getfield      #75                 // Field __controlKeepAliveTimeout:J
      57: lconst_0
      58: lcmp
      59: ifle          80
      62: new           #76                 // class org/apache/commons/net/ftp/FTPClient$CSL
      65: dup
      66: aload_0
      67: aload_0
      68: getfield      #75                 // Field __controlKeepAliveTimeout:J
      71: aload_0
      72: getfield      #3                  // Field __controlKeepAliveReplyTimeout:I
      75: invokespecial #77                 // Method org/apache/commons/net/ftp/FTPClient$CSL."<init>":(Lorg/apache/commons/net/ftp/FTPClient;JI)V
      78: astore        6
      80: aload         5
      82: aload_3
      83: aload_0
      84: invokevirtual #71                 // Method getBufferSize:()I
      87: ldc2_w        #78                 // long -1l
      90: aload_0
      91: aload         6
      93: invokespecial #80                 // Method __mergeListeners:(Lorg/apache/commons/net/io/CopyStreamListener;)Lorg/apache/commons/net/io/CopyStreamListener;
      96: iconst_0
      97: invokestatic  #81                 // Method org/apache/commons/net/io/Util.copyStream:(Ljava/io/InputStream;Ljava/io/OutputStream;IJLorg/apache/commons/net/io/CopyStreamListener;Z)J
     100: pop2
     101: aload         4
     103: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
     106: goto          119
     109: astore        7
     111: aload         4
     113: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
     116: aload         7
     118: athrow
     119: aload         6
     121: ifnull        129
     124: aload         6
     126: invokevirtual #86                 // Method org/apache/commons/net/ftp/FTPClient$CSL.cleanUp:()V
     129: aload_0
     130: invokevirtual #87                 // Method completePendingCommand:()Z
     133: istore        7
     135: iload         7
     137: ireturn
    Exception table:
       from    to  target type
          80   101   109   any
         109   111   109   any

  public java.io.InputStream retrieveFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        13
       3: invokestatic  #66                 // Method org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;
       6: aload_1
       7: invokevirtual #178                // Method _retrieveFileStream:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;
      10: areturn

  protected java.io.InputStream _retrieveFileStream(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;
       6: dup
       7: astore_3
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_3
      14: invokevirtual #174                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      17: astore        4
      19: aload_0
      20: getfield      #24                 // Field __fileType:I
      23: ifne          52
      26: new           #173                // class java/io/BufferedInputStream
      29: dup
      30: aload         4
      32: aload_0
      33: invokevirtual #71                 // Method getBufferSize:()I
      36: invokespecial #175                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
      39: astore        4
      41: new           #176                // class org/apache/commons/net/io/FromNetASCIIInputStream
      44: dup
      45: aload         4
      47: invokespecial #177                // Method org/apache/commons/net/io/FromNetASCIIInputStream."<init>":(Ljava/io/InputStream;)V
      50: astore        4
      52: new           #179                // class org/apache/commons/net/io/SocketInputStream
      55: dup
      56: aload_3
      57: aload         4
      59: invokespecial #180                // Method org/apache/commons/net/io/SocketInputStream."<init>":(Ljava/net/Socket;Ljava/io/InputStream;)V
      62: areturn

  public boolean storeFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        14
       3: aload_1
       4: aload_2
       5: invokespecial #181                // Method __storeFile:(ILjava/lang/String;Ljava/io/InputStream;)Z
       8: ireturn

  public java.io.OutputStream storeFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        14
       3: aload_1
       4: invokespecial #182                // Method __storeFileStream:(ILjava/lang/String;)Ljava/io/OutputStream;
       7: areturn

  public boolean appendFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        16
       3: aload_1
       4: aload_2
       5: invokespecial #181                // Method __storeFile:(ILjava/lang/String;Ljava/io/InputStream;)Z
       8: ireturn

  public java.io.OutputStream appendFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        16
       3: aload_1
       4: invokespecial #182                // Method __storeFileStream:(ILjava/lang/String;)Ljava/io/OutputStream;
       7: areturn

  public boolean storeUniqueFile(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        15
       3: aload_1
       4: aload_2
       5: invokespecial #181                // Method __storeFile:(ILjava/lang/String;Ljava/io/InputStream;)Z
       8: ireturn

  public java.io.OutputStream storeUniqueFileStream(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        15
       3: aload_1
       4: invokespecial #182                // Method __storeFileStream:(ILjava/lang/String;)Ljava/io/OutputStream;
       7: areturn

  public boolean storeUniqueFile(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        15
       3: aconst_null
       4: aload_1
       5: invokespecial #181                // Method __storeFile:(ILjava/lang/String;Ljava/io/InputStream;)Z
       8: ireturn

  public java.io.OutputStream storeUniqueFileStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        15
       3: aconst_null
       4: invokespecial #182                // Method __storeFileStream:(ILjava/lang/String;)Ljava/io/OutputStream;
       7: areturn

  public boolean allocate(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #183                // Method allo:(I)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean features() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #184                // Method feat:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public java.lang.String[] featureValues(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #185                // Method initFeatureMap:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
      13: aload_1
      14: getstatic     #186                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #187                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #188                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #189                // class java/util/Set
      26: astore_2
      27: aload_2
      28: ifnull        50
      31: aload_2
      32: aload_2
      33: invokeinterface #190,  1          // InterfaceMethod java/util/Set.size:()I
      38: anewarray     #111                // class java/lang/String
      41: invokeinterface #191,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      46: checkcast     #192                // class "[Ljava/lang/String;"
      49: areturn
      50: aconst_null
      51: areturn

  public java.lang.String featureValue(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #193                // Method featureValues:(Ljava/lang/String;)[Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        14
      10: aload_2
      11: iconst_0
      12: aaload
      13: areturn
      14: aconst_null
      15: areturn

  public boolean hasFeature(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #185                // Method initFeatureMap:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
      13: aload_1
      14: getstatic     #186                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #187                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #194                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      23: ireturn

  public boolean hasFeature(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #185                // Method initFeatureMap:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
      13: aload_1
      14: getstatic     #186                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #187                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokevirtual #188                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #189                // class java/util/Set
      26: astore_3
      27: aload_3
      28: ifnull        39
      31: aload_3
      32: aload_2
      33: invokeinterface #195,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      38: ireturn
      39: iconst_0
      40: ireturn

  private boolean initFeatureMap() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
       4: ifnonnull     182
       7: aload_0
       8: invokevirtual #184                // Method feat:()I
      11: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      14: istore_1
      15: aload_0
      16: new           #196                // class java/util/HashMap
      19: dup
      20: invokespecial #197                // Method java/util/HashMap."<init>":()V
      23: putfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
      26: iload_1
      27: ifne          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #198                // Method getReplyStrings:()[Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: arraylength
      39: istore_3
      40: iconst_0
      41: istore        4
      43: iload         4
      45: iload_3
      46: if_icmpge     182
      49: aload_2
      50: iload         4
      52: aaload
      53: astore        5
      55: aload         5
      57: ldc           #199                // String
      59: invokevirtual #200                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      62: ifeq          176
      65: ldc           #31                 // String
      67: astore        7
      69: aload         5
      71: bipush        32
      73: iconst_1
      74: invokevirtual #36                 // Method java/lang/String.indexOf:(II)I
      77: istore        8
      79: iload         8
      81: ifle          108
      84: aload         5
      86: iconst_1
      87: iload         8
      89: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      92: astore        6
      94: aload         5
      96: iload         8
      98: iconst_1
      99: iadd
     100: invokevirtual #201                // Method java/lang/String.substring:(I)Ljava/lang/String;
     103: astore        7
     105: goto          116
     108: aload         5
     110: iconst_1
     111: invokevirtual #201                // Method java/lang/String.substring:(I)Ljava/lang/String;
     114: astore        6
     116: aload         6
     118: getstatic     #186                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     121: invokevirtual #187                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
     124: astore        6
     126: aload_0
     127: getfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
     130: aload         6
     132: invokevirtual #188                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #189                // class java/util/Set
     138: astore        9
     140: aload         9
     142: ifnonnull     166
     145: new           #202                // class java/util/HashSet
     148: dup
     149: invokespecial #203                // Method java/util/HashSet."<init>":()V
     152: astore        9
     154: aload_0
     155: getfield      #34                 // Field __featuresMap:Ljava/util/HashMap;
     158: aload         6
     160: aload         9
     162: invokevirtual #204                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     165: pop
     166: aload         9
     168: aload         7
     170: invokeinterface #205,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     175: pop
     176: iinc          4, 1
     179: goto          43
     182: iconst_1
     183: ireturn

  public boolean allocate(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #206                // Method allo:(II)I
       6: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public boolean doCommand(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #103                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
       6: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public java.lang.String[] doCommandAsStrings(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #103                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I
       6: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: istore_3
      10: iload_3
      11: ifeq          19
      14: aload_0
      15: invokevirtual #198                // Method getReplyStrings:()[Ljava/lang/String;
      18: areturn
      19: aconst_null
      20: areturn

  public org.apache.commons.net.ftp.FTPFile mlistFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        39
       3: aload_1
       4: invokevirtual #207                // Method sendCommand:(ILjava/lang/String;)I
       7: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      10: istore_2
      11: iload_2
      12: ifeq          31
      15: aload_0
      16: invokevirtual #198                // Method getReplyStrings:()[Ljava/lang/String;
      19: iconst_1
      20: aaload
      21: iconst_1
      22: invokevirtual #201                // Method java/lang/String.substring:(I)Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: invokestatic  #208                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.parseEntry:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPFile;
      30: areturn
      31: aconst_null
      32: areturn

  public org.apache.commons.net.ftp.FTPFile[] mlistDir() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #209                // Method mlistDir:(Ljava/lang/String;)[Lorg/apache/commons/net/ftp/FTPFile;
       5: areturn

  public org.apache.commons.net.ftp.FTPFile[] mlistDir(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #210                // Method initiateMListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       5: astore_2
       6: aload_2
       7: invokevirtual #211                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:()[Lorg/apache/commons/net/ftp/FTPFile;
      10: areturn

  public org.apache.commons.net.ftp.FTPFile[] mlistDir(java.lang.String, org.apache.commons.net.ftp.FTPFileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #210                // Method initiateMListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #212                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:(Lorg/apache/commons/net/ftp/FTPFileFilter;)[Lorg/apache/commons/net/ftp/FTPFile;
      11: areturn

  protected boolean restart(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #28                 // Field __restartOffset:J
       5: aload_0
       6: lload_1
       7: invokestatic  #213                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      10: invokevirtual #214                // Method rest:(Ljava/lang/String;)I
      13: invokestatic  #152                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
      16: ireturn

  public void setRestartOffset(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          11
       6: aload_0
       7: lload_1
       8: putfield      #28                 // Field __restartOffset:J
      11: return

  public long getRestartOffset();
    Code:
       0: aload_0
       1: getfield      #28                 // Field __restartOffset:J
       4: lreturn

  public boolean rename(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #215                // Method rnfr:(Ljava/lang/String;)I
       5: invokestatic  #152                // Method org/apache/commons/net/ftp/FTPReply.isPositiveIntermediate:(I)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: aload_2
      15: invokevirtual #216                // Method rnto:(Ljava/lang/String;)I
      18: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      21: ireturn

  public boolean abort() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #217                // Method abor:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public boolean deleteFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #218                // Method dele:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean removeDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method rmd:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public boolean makeDirectory(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #220                // Method mkd:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public java.lang.String printWorkingDirectory() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #221                // Method pwd:()I
       4: sipush        257
       7: if_icmpeq     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_0
      14: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      17: aload_0
      18: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      21: invokevirtual #222                // Method java/util/ArrayList.size:()I
      24: iconst_1
      25: isub
      26: invokevirtual #110                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      29: checkcast     #111                // class java/lang/String
      32: invokespecial #223                // Method __parsePathname:(Ljava/lang/String;)Ljava/lang/String;
      35: areturn

  public boolean sendSiteCommand(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #224                // Method site:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ireturn

  public java.lang.String getSystemType() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field __systemName:Ljava/lang/String;
       4: ifnonnull     95
       7: aload_0
       8: invokevirtual #225                // Method syst:()I
      11: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      14: ifeq          47
      17: aload_0
      18: aload_0
      19: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      22: aload_0
      23: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      26: invokevirtual #222                // Method java/util/ArrayList.size:()I
      29: iconst_1
      30: isub
      31: invokevirtual #110                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      34: checkcast     #111                // class java/lang/String
      37: iconst_4
      38: invokevirtual #201                // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: putfield      #29                 // Field __systemName:Ljava/lang/String;
      44: goto          95
      47: ldc           #226                // String org.apache.commons.net.ftp.systemType.default
      49: invokestatic  #227                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      52: astore_1
      53: aload_1
      54: ifnull        65
      57: aload_0
      58: aload_1
      59: putfield      #29                 // Field __systemName:Ljava/lang/String;
      62: goto          95
      65: new           #82                 // class java/io/IOException
      68: dup
      69: new           #42                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #228                // String Unable to determine system type - response:
      78: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: invokevirtual #229                // Method getReplyString:()Ljava/lang/String;
      85: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #125                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: getfield      #29                 // Field __systemName:Ljava/lang/String;
      99: areturn

  public java.lang.String listHelp() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #230                // Method help:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #229                // Method getReplyString:()Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String listHelp(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #231                // Method help:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          16
      11: aload_0
      12: invokevirtual #229                // Method getReplyString:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public boolean sendNoOp() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #232                // Method noop:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ireturn

  public java.lang.String[] listNames(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        27
       3: aload_0
       4: aload_1
       5: invokevirtual #233                // Method getListArguments:(Ljava/lang/String;)Ljava/lang/String;
       8: invokevirtual #234                // Method _openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;
      11: dup
      12: astore_2
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: new           #235                // class java/io/BufferedReader
      21: dup
      22: new           #136                // class java/io/InputStreamReader
      25: dup
      26: aload_2
      27: invokevirtual #174                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      30: aload_0
      31: invokevirtual #138                // Method getControlEncoding:()Ljava/lang/String;
      34: invokespecial #139                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      37: invokespecial #236                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      40: astore_3
      41: new           #128                // class java/util/ArrayList
      44: dup
      45: invokespecial #237                // Method java/util/ArrayList."<init>":()V
      48: astore        4
      50: aload_3
      51: invokevirtual #238                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      54: dup
      55: astore        5
      57: ifnull        71
      60: aload         4
      62: aload         5
      64: invokevirtual #239                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      67: pop
      68: goto          50
      71: aload_3
      72: invokevirtual #240                // Method java/io/BufferedReader.close:()V
      75: aload_2
      76: invokevirtual #85                 // Method java/net/Socket.close:()V
      79: aload_0
      80: invokevirtual #87                 // Method completePendingCommand:()Z
      83: ifeq          107
      86: aload         4
      88: invokevirtual #222                // Method java/util/ArrayList.size:()I
      91: anewarray     #111                // class java/lang/String
      94: astore        6
      96: aload         4
      98: aload         6
     100: invokevirtual #241                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     103: checkcast     #192                // class "[Ljava/lang/String;"
     106: areturn
     107: aconst_null
     108: areturn

  public java.lang.String[] listNames() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #242                // Method listNames:(Ljava/lang/String;)[Ljava/lang/String;
       5: areturn

  public org.apache.commons.net.ftp.FTPFile[] listFiles(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #111                // class java/lang/String
       5: aload_1
       6: invokevirtual #243                // Method initiateListParsing:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       9: astore_2
      10: aload_2
      11: invokevirtual #211                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:()[Lorg/apache/commons/net/ftp/FTPFile;
      14: areturn

  public org.apache.commons.net.ftp.FTPFile[] listFiles() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #111                // class java/lang/String
       5: invokevirtual #244                // Method listFiles:(Ljava/lang/String;)[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPFile[] listFiles(java.lang.String, org.apache.commons.net.ftp.FTPFileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #111                // class java/lang/String
       5: aload_1
       6: invokevirtual #243                // Method initiateListParsing:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       9: astore_3
      10: aload_3
      11: aload_2
      12: invokevirtual #212                // Method org/apache/commons/net/ftp/FTPListParseEngine.getFiles:(Lorg/apache/commons/net/ftp/FTPFileFilter;)[Lorg/apache/commons/net/ftp/FTPFile;
      15: areturn

  public org.apache.commons.net.ftp.FTPFile[] listDirectories() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #111                // class java/lang/String
       5: invokevirtual #245                // Method listDirectories:(Ljava/lang/String;)[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPFile[] listDirectories(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #246                // Field org/apache/commons/net/ftp/FTPFileFilters.DIRECTORIES:Lorg/apache/commons/net/ftp/FTPFileFilter;
       5: invokevirtual #247                // Method listFiles:(Ljava/lang/String;Lorg/apache/commons/net/ftp/FTPFileFilter;)[Lorg/apache/commons/net/ftp/FTPFile;
       8: areturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #111                // class java/lang/String
       5: invokevirtual #248                // Method initiateListParsing:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       8: areturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #111                // class java/lang/String
       5: aload_1
       6: invokevirtual #243                // Method initiateListParsing:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
       9: areturn

  public org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field __entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
       4: ifnull        18
       7: aload_0
       8: getfield      #32                 // Field __entryParserKey:Ljava/lang/String;
      11: aload_1
      12: invokevirtual #249                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          144
      18: aconst_null
      19: aload_1
      20: if_acmpeq     45
      23: aload_0
      24: aload_0
      25: getfield      #10                 // Field __parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
      28: aload_1
      29: invokeinterface #250,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      34: putfield      #30                 // Field __entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      37: aload_0
      38: aload_1
      39: putfield      #32                 // Field __entryParserKey:Ljava/lang/String;
      42: goto          144
      45: aconst_null
      46: aload_0
      47: getfield      #11                 // Field __configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      50: if_acmpeq     84
      53: aload_0
      54: aload_0
      55: getfield      #10                 // Field __parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
      58: aload_0
      59: getfield      #11                 // Field __configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      62: invokeinterface #251,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Lorg/apache/commons/net/ftp/FTPClientConfig;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      67: putfield      #30                 // Field __entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
      70: aload_0
      71: aload_0
      72: getfield      #11                 // Field __configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
      75: invokevirtual #252                // Method org/apache/commons/net/ftp/FTPClientConfig.getServerSystemKey:()Ljava/lang/String;
      78: putfield      #32                 // Field __entryParserKey:Ljava/lang/String;
      81: goto          144
      84: ldc           #253                // String org.apache.commons.net.ftp.systemType
      86: invokestatic  #227                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      89: astore_3
      90: aload_3
      91: ifnonnull     125
      94: aload_0
      95: invokevirtual #254                // Method getSystemType:()Ljava/lang/String;
      98: astore_3
      99: invokestatic  #255                // Method getOverrideProperties:()Ljava/util/Properties;
     102: astore        4
     104: aload         4
     106: ifnull        125
     109: aload         4
     111: aload_3
     112: invokevirtual #256                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     115: astore        5
     117: aload         5
     119: ifnull        125
     122: aload         5
     124: astore_3
     125: aload_0
     126: aload_0
     127: getfield      #10                 // Field __parserFactory:Lorg/apache/commons/net/ftp/parser/FTPFileEntryParserFactory;
     130: aload_3
     131: invokeinterface #250,  2          // InterfaceMethod org/apache/commons/net/ftp/parser/FTPFileEntryParserFactory.createFileEntryParser:(Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     136: putfield      #30                 // Field __entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     139: aload_0
     140: aload_3
     141: putfield      #32                 // Field __entryParserKey:Ljava/lang/String;
     144: aload_0
     145: aload_0
     146: getfield      #30                 // Field __entryParser:Lorg/apache/commons/net/ftp/FTPFileEntryParser;
     149: aload_2
     150: invokespecial #257                // Method initiateListParsing:(Lorg/apache/commons/net/ftp/FTPFileEntryParser;Ljava/lang/String;)Lorg/apache/commons/net/ftp/FTPListParseEngine;
     153: areturn

  private org.apache.commons.net.ftp.FTPListParseEngine initiateListParsing(org.apache.commons.net.ftp.FTPFileEntryParser, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #258                // class org/apache/commons/net/ftp/FTPListParseEngine
       3: dup
       4: aload_1
       5: invokespecial #259                // Method org/apache/commons/net/ftp/FTPListParseEngine."<init>":(Lorg/apache/commons/net/ftp/FTPFileEntryParser;)V
       8: astore        4
      10: aload_0
      11: bipush        26
      13: aload_0
      14: aload_2
      15: invokevirtual #233                // Method getListArguments:(Ljava/lang/String;)Ljava/lang/String;
      18: invokevirtual #234                // Method _openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;
      21: dup
      22: astore_3
      23: ifnonnull     29
      26: aload         4
      28: areturn
      29: aload         4
      31: aload_3
      32: invokevirtual #174                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      35: aload_0
      36: invokevirtual #138                // Method getControlEncoding:()Ljava/lang/String;
      39: invokevirtual #260                // Method org/apache/commons/net/ftp/FTPListParseEngine.readServerList:(Ljava/io/InputStream;Ljava/lang/String;)V
      42: aload_3
      43: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      46: goto          58
      49: astore        5
      51: aload_3
      52: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      55: aload         5
      57: athrow
      58: aload_0
      59: invokevirtual #87                 // Method completePendingCommand:()Z
      62: pop
      63: aload         4
      65: areturn
    Exception table:
       from    to  target type
          29    42    49   any
          49    51    49   any

  private org.apache.commons.net.ftp.FTPListParseEngine initiateMListParsing(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #258                // class org/apache/commons/net/ftp/FTPListParseEngine
       3: dup
       4: invokestatic  #261                // Method org/apache/commons/net/ftp/parser/MLSxEntryParser.getInstance:()Lorg/apache/commons/net/ftp/parser/MLSxEntryParser;
       7: invokespecial #259                // Method org/apache/commons/net/ftp/FTPListParseEngine."<init>":(Lorg/apache/commons/net/ftp/FTPFileEntryParser;)V
      10: astore_3
      11: aload_0
      12: bipush        38
      14: aload_1
      15: invokevirtual #234                // Method _openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;
      18: dup
      19: astore_2
      20: ifnonnull     25
      23: aload_3
      24: areturn
      25: aload_3
      26: aload_2
      27: invokevirtual #174                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      30: aload_0
      31: invokevirtual #138                // Method getControlEncoding:()Ljava/lang/String;
      34: invokevirtual #260                // Method org/apache/commons/net/ftp/FTPListParseEngine.readServerList:(Ljava/io/InputStream;Ljava/lang/String;)V
      37: aload_2
      38: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      41: aload_0
      42: invokevirtual #87                 // Method completePendingCommand:()Z
      45: pop
      46: goto          63
      49: astore        4
      51: aload_2
      52: invokestatic  #83                 // Method org/apache/commons/net/io/Util.closeQuietly:(Ljava/net/Socket;)V
      55: aload_0
      56: invokevirtual #87                 // Method completePendingCommand:()Z
      59: pop
      60: aload         4
      62: athrow
      63: aload_3
      64: areturn
    Exception table:
       from    to  target type
          25    37    49   any
          49    51    49   any

  protected java.lang.String getListArguments(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #262                // Method getListHiddenFiles:()Z
       4: ifeq          48
       7: aload_1
       8: ifnull        44
      11: new           #42                 // class java/lang/StringBuilder
      14: dup
      15: aload_1
      16: invokevirtual #64                 // Method java/lang/String.length:()I
      19: iconst_3
      20: iadd
      21: invokespecial #263                // Method java/lang/StringBuilder."<init>":(I)V
      24: astore_2
      25: aload_2
      26: ldc_w         #264                // String -a
      29: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_2
      34: aload_1
      35: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_2
      40: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn
      44: ldc_w         #265                // String -a
      47: areturn
      48: aload_1
      49: areturn

  public java.lang.String getStatus() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #266                // Method stat:()I
       4: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #229                // Method getReplyString:()Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String getStatus(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #267                // Method stat:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          16
      11: aload_0
      12: invokevirtual #229                // Method getReplyString:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public java.lang.String getModificationTime(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #268                // Method mdtm:(Ljava/lang/String;)I
       5: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       8: ifeq          16
      11: aload_0
      12: invokevirtual #229                // Method getReplyString:()Ljava/lang/String;
      15: areturn
      16: aconst_null
      17: areturn

  public boolean setModificationTime(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #269                // Method mfmt:(Ljava/lang/String;Ljava/lang/String;)I
       6: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
       9: ireturn

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field __bufferSize:I
       5: return

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #33                 // Field __bufferSize:I
       4: ireturn

  public void configure(org.apache.commons.net.ftp.FTPClientConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field __configuration:Lorg/apache/commons/net/ftp/FTPClientConfig;
       5: return

  public void setListHiddenFiles(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field __listHiddenFiles:Z
       5: return

  public boolean getListHiddenFiles();
    Code:
       0: aload_0
       1: getfield      #12                 // Field __listHiddenFiles:Z
       4: ireturn

  public boolean isUseEPSVwithIPv4();
    Code:
       0: aload_0
       1: getfield      #13                 // Field __useEPSVwithIPv4:Z
       4: ireturn

  public void setUseEPSVwithIPv4(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field __useEPSVwithIPv4:Z
       5: return

  public void setCopyStreamListener(org.apache.commons.net.io.CopyStreamListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #270                // Field __copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
       5: return

  public org.apache.commons.net.io.CopyStreamListener getCopyStreamListener();
    Code:
       0: aload_0
       1: getfield      #270                // Field __copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
       4: areturn

  public void setControlKeepAliveTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #271                // long 1000l
       5: lmul
       6: putfield      #75                 // Field __controlKeepAliveTimeout:J
       9: return

  public long getControlKeepAliveTimeout();
    Code:
       0: aload_0
       1: getfield      #75                 // Field __controlKeepAliveTimeout:J
       4: ldc2_w        #271                // long 1000l
       7: ldiv
       8: lreturn

  public void setControlKeepAliveReplyTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field __controlKeepAliveReplyTimeout:I
       5: return

  public int getControlKeepAliveReplyTimeout();
    Code:
       0: aload_0
       1: getfield      #3                  // Field __controlKeepAliveReplyTimeout:I
       4: ireturn

  private org.apache.commons.net.io.CopyStreamListener __mergeListeners(org.apache.commons.net.io.CopyStreamListener);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #270                // Field __copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
       8: areturn
       9: aload_0
      10: getfield      #270                // Field __copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
      13: ifnonnull     18
      16: aload_1
      17: areturn
      18: new           #273                // class org/apache/commons/net/io/CopyStreamAdapter
      21: dup
      22: invokespecial #274                // Method org/apache/commons/net/io/CopyStreamAdapter."<init>":()V
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokevirtual #275                // Method org/apache/commons/net/io/CopyStreamAdapter.addCopyStreamListener:(Lorg/apache/commons/net/io/CopyStreamListener;)V
      31: aload_2
      32: aload_0
      33: getfield      #270                // Field __copyStreamListener:Lorg/apache/commons/net/io/CopyStreamListener;
      36: invokevirtual #275                // Method org/apache/commons/net/io/CopyStreamAdapter.addCopyStreamListener:(Lorg/apache/commons/net/io/CopyStreamListener;)V
      39: aload_2
      40: areturn

  public void setAutodetectUTF8(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field __autodetectEncoding:Z
       5: return

  public boolean getAutodetectUTF8();
    Code:
       0: aload_0
       1: getfield      #4                  // Field __autodetectEncoding:Z
       4: ireturn

  public java.lang.String getSystemName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field __systemName:Ljava/lang/String;
       4: ifnonnull     44
       7: aload_0
       8: invokevirtual #225                // Method syst:()I
      11: invokestatic  #99                 // Method org/apache/commons/net/ftp/FTPReply.isPositiveCompletion:(I)Z
      14: ifeq          44
      17: aload_0
      18: aload_0
      19: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      22: aload_0
      23: getfield      #109                // Field _replyLines:Ljava/util/ArrayList;
      26: invokevirtual #222                // Method java/util/ArrayList.size:()I
      29: iconst_1
      30: isub
      31: invokevirtual #110                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      34: checkcast     #111                // class java/lang/String
      37: iconst_4
      38: invokevirtual #201                // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: putfield      #29                 // Field __systemName:Ljava/lang/String;
      44: aload_0
      45: getfield      #29                 // Field __systemName:Ljava/lang/String;
      48: areturn

  static {};
    Code:
       0: ldc_w         #276                // String (\\d{1,3},\\d{1,3},\\d{1,3},\\d{1,3}),(\\d{1,3}),(\\d{1,3})
       3: invokestatic  #277                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       6: putstatic     #38                 // Field __PARMS_PAT:Ljava/util/regex/Pattern;
       9: return
}
