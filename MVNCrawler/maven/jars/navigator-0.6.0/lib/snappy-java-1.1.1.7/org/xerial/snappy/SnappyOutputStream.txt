Compiled from "SnappyOutputStream.java"
public class org.xerial.snappy.SnappyOutputStream extends java.io.OutputStream {
  static final int MIN_BLOCK_SIZE;

  static final int DEFAULT_BLOCK_SIZE;

  protected final java.io.OutputStream out;

  private final int blockSize;

  private final org.xerial.snappy.buffer.BufferAllocator inputBufferAllocator;

  private final org.xerial.snappy.buffer.BufferAllocator outputBufferAllocator;

  protected final byte[] inputBuffer;

  protected final byte[] outputBuffer;

  private int inputCursor;

  private int outputCursor;

  public org.xerial.snappy.SnappyOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // int 32768
       4: invokespecial #3                  // Method "<init>":(Ljava/io/OutputStream;I)V
       7: return

  public org.xerial.snappy.SnappyOutputStream(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #4                  // Field org/xerial/snappy/buffer/CachedBufferAllocator.factory:Lorg/xerial/snappy/buffer/BufferAllocatorFactory;
       6: invokespecial #5                  // Method "<init>":(Ljava/io/OutputStream;ILorg/xerial/snappy/buffer/BufferAllocatorFactory;)V
       9: return

  public org.xerial.snappy.SnappyOutputStream(java.io.OutputStream, int, org.xerial.snappy.buffer.BufferAllocatorFactory);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field inputCursor:I
       9: aload_0
      10: iconst_0
      11: putfield      #8                  // Field outputCursor:I
      14: aload_0
      15: aload_1
      16: putfield      #9                  // Field out:Ljava/io/OutputStream;
      19: aload_0
      20: sipush        1024
      23: iload_2
      24: invokestatic  #10                 // Method java/lang/Math.max:(II)I
      27: putfield      #11                 // Field blockSize:I
      30: iload_2
      31: istore        4
      33: getstatic     #12                 // Field org/xerial/snappy/SnappyCodec.HEADER_SIZE:I
      36: iconst_4
      37: iadd
      38: iload_2
      39: invokestatic  #13                 // Method org/xerial/snappy/Snappy.maxCompressedLength:(I)I
      42: iadd
      43: istore        5
      45: aload_0
      46: aload_3
      47: iload         4
      49: invokeinterface #14,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocatorFactory.getBufferAllocator:(I)Lorg/xerial/snappy/buffer/BufferAllocator;
      54: putfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      57: aload_0
      58: aload_3
      59: iload         5
      61: invokeinterface #14,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocatorFactory.getBufferAllocator:(I)Lorg/xerial/snappy/buffer/BufferAllocator;
      66: putfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      69: aload_0
      70: aload_0
      71: getfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      74: iload         4
      76: invokeinterface #17,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.allocate:(I)[B
      81: putfield      #18                 // Field inputBuffer:[B
      84: aload_0
      85: aload_0
      86: getfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      89: iload         5
      91: invokeinterface #17,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.allocate:(I)[B
      96: putfield      #19                 // Field outputBuffer:[B
      99: aload_0
     100: getstatic     #20                 // Field org/xerial/snappy/SnappyCodec.currentHeader:Lorg/xerial/snappy/SnappyCodec;
     103: aload_0
     104: getfield      #19                 // Field outputBuffer:[B
     107: iconst_0
     108: invokevirtual #21                 // Method org/xerial/snappy/SnappyCodec.writeHeader:([BI)I
     111: putfield      #8                  // Field outputCursor:I
     114: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #22                 // Method rawWrite:(Ljava/lang/Object;II)V
       7: return

  public void write(long[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        8
       5: imul
       6: iload_3
       7: bipush        8
       9: imul
      10: invokevirtual #22                 // Method rawWrite:(Ljava/lang/Object;II)V
      13: return

  public void write(double[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        8
       5: imul
       6: iload_3
       7: bipush        8
       9: imul
      10: invokevirtual #22                 // Method rawWrite:(Ljava/lang/Object;II)V
      13: return

  public void write(float[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_4
       4: imul
       5: iload_3
       6: iconst_4
       7: imul
       8: invokevirtual #22                 // Method rawWrite:(Ljava/lang/Object;II)V
      11: return

  public void write(int[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_4
       4: imul
       5: iload_3
       6: iconst_4
       7: imul
       8: invokevirtual #22                 // Method rawWrite:(Ljava/lang/Object;II)V
      11: return

  public void write(short[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_2
       4: imul
       5: iload_3
       6: iconst_2
       7: imul
       8: invokevirtual #22                 // Method rawWrite:(Ljava/lang/Object;II)V
      11: return

  public void write(long[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #23                 // Method write:([JII)V
       8: return

  public void write(double[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #24                 // Method write:([DII)V
       8: return

  public void write(float[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #25                 // Method write:([FII)V
       8: return

  public void write(int[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #26                 // Method write:([III)V
       8: return

  public void write(short[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #27                 // Method write:([SII)V
       8: return

  private boolean hasSufficientOutputBufferFor(int);
    Code:
       0: iload_1
       1: invokestatic  #13                 // Method org/xerial/snappy/Snappy.maxCompressedLength:(I)I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #19                 // Field outputBuffer:[B
      10: arraylength
      11: aload_0
      12: getfield      #8                  // Field outputCursor:I
      15: isub
      16: iconst_4
      17: isub
      18: if_icmpge     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void rawWrite(java.lang.Object, int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     87
       9: iload_3
      10: iload         4
      12: isub
      13: aload_0
      14: getfield      #11                 // Field blockSize:I
      17: aload_0
      18: getfield      #7                  // Field inputCursor:I
      21: isub
      22: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      25: istore        5
      27: iload         5
      29: ifle          61
      32: aload_1
      33: iload_2
      34: iload         4
      36: iadd
      37: iload         5
      39: aload_0
      40: getfield      #18                 // Field inputBuffer:[B
      43: aload_0
      44: getfield      #7                  // Field inputCursor:I
      47: invokestatic  #29                 // Method org/xerial/snappy/Snappy.arrayCopy:(Ljava/lang/Object;IILjava/lang/Object;I)V
      50: aload_0
      51: dup
      52: getfield      #7                  // Field inputCursor:I
      55: iload         5
      57: iadd
      58: putfield      #7                  // Field inputCursor:I
      61: aload_0
      62: getfield      #7                  // Field inputCursor:I
      65: aload_0
      66: getfield      #11                 // Field blockSize:I
      69: if_icmpge     73
      72: return
      73: aload_0
      74: invokevirtual #30                 // Method compressInput:()V
      77: iload         4
      79: iload         5
      81: iadd
      82: istore        4
      84: goto          3
      87: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputCursor:I
       4: aload_0
       5: getfield      #18                 // Field inputBuffer:[B
       8: arraylength
       9: if_icmplt     16
      12: aload_0
      13: invokevirtual #30                 // Method compressInput:()V
      16: aload_0
      17: getfield      #18                 // Field inputBuffer:[B
      20: aload_0
      21: dup
      22: getfield      #7                  // Field inputCursor:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #7                  // Field inputCursor:I
      31: iload_1
      32: i2b
      33: bastore
      34: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method compressInput:()V
       4: aload_0
       5: invokevirtual #31                 // Method dumpOutput:()V
       8: aload_0
       9: getfield      #9                  // Field out:Ljava/io/OutputStream;
      12: invokevirtual #32                 // Method java/io/OutputStream.flush:()V
      15: return

  static void writeInt(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: bipush        24
       5: ishr
       6: sipush        255
       9: iand
      10: i2b
      11: bastore
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: iload_2
      17: bipush        16
      19: ishr
      20: sipush        255
      23: iand
      24: i2b
      25: bastore
      26: aload_0
      27: iload_1
      28: iconst_2
      29: iadd
      30: iload_2
      31: bipush        8
      33: ishr
      34: sipush        255
      37: iand
      38: i2b
      39: bastore
      40: aload_0
      41: iload_1
      42: iconst_3
      43: iadd
      44: iload_2
      45: iconst_0
      46: ishr
      47: sipush        255
      50: iand
      51: i2b
      52: bastore
      53: return

  static int readInt(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: istore_2
      11: aload_0
      12: iload_1
      13: iconst_1
      14: iadd
      15: baload
      16: sipush        255
      19: iand
      20: bipush        16
      22: ishl
      23: istore_3
      24: aload_0
      25: iload_1
      26: iconst_2
      27: iadd
      28: baload
      29: sipush        255
      32: iand
      33: bipush        8
      35: ishl
      36: istore        4
      38: aload_0
      39: iload_1
      40: iconst_3
      41: iadd
      42: baload
      43: sipush        255
      46: iand
      47: istore        5
      49: iload_2
      50: iload_3
      51: ior
      52: iload         4
      54: ior
      55: iload         5
      57: ior
      58: ireturn

  protected void dumpOutput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field outputCursor:I
       4: ifle          28
       7: aload_0
       8: getfield      #9                  // Field out:Ljava/io/OutputStream;
      11: aload_0
      12: getfield      #19                 // Field outputBuffer:[B
      15: iconst_0
      16: aload_0
      17: getfield      #8                  // Field outputCursor:I
      20: invokevirtual #33                 // Method java/io/OutputStream.write:([BII)V
      23: aload_0
      24: iconst_0
      25: putfield      #8                  // Field outputCursor:I
      28: return

  protected void compressInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputCursor:I
       4: ifgt          8
       7: return
       8: aload_0
       9: aload_0
      10: getfield      #7                  // Field inputCursor:I
      13: invokespecial #34                 // Method hasSufficientOutputBufferFor:(I)Z
      16: ifne          23
      19: aload_0
      20: invokevirtual #31                 // Method dumpOutput:()V
      23: aload_0
      24: getfield      #18                 // Field inputBuffer:[B
      27: iconst_0
      28: aload_0
      29: getfield      #7                  // Field inputCursor:I
      32: aload_0
      33: getfield      #19                 // Field outputBuffer:[B
      36: aload_0
      37: getfield      #8                  // Field outputCursor:I
      40: iconst_4
      41: iadd
      42: invokestatic  #35                 // Method org/xerial/snappy/Snappy.compress:([BII[BI)I
      45: istore_1
      46: aload_0
      47: getfield      #19                 // Field outputBuffer:[B
      50: aload_0
      51: getfield      #8                  // Field outputCursor:I
      54: iload_1
      55: invokestatic  #36                 // Method writeInt:([BII)V
      58: aload_0
      59: dup
      60: getfield      #8                  // Field outputCursor:I
      63: iconst_4
      64: iload_1
      65: iadd
      66: iadd
      67: putfield      #8                  // Field outputCursor:I
      70: aload_0
      71: iconst_0
      72: putfield      #7                  // Field inputCursor:I
      75: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method flush:()V
       4: aload_0
       5: getfield      #9                  // Field out:Ljava/io/OutputStream;
       8: invokevirtual #38                 // Method java/io/OutputStream.close:()V
      11: aload_0
      12: getfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      15: aload_0
      16: getfield      #18                 // Field inputBuffer:[B
      19: invokeinterface #39,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      24: aload_0
      25: getfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      28: aload_0
      29: getfield      #19                 // Field outputBuffer:[B
      32: invokeinterface #39,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      37: goto          69
      40: astore_1
      41: aload_0
      42: getfield      #15                 // Field inputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      45: aload_0
      46: getfield      #18                 // Field inputBuffer:[B
      49: invokeinterface #39,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      54: aload_0
      55: getfield      #16                 // Field outputBufferAllocator:Lorg/xerial/snappy/buffer/BufferAllocator;
      58: aload_0
      59: getfield      #19                 // Field outputBuffer:[B
      62: invokeinterface #39,  2           // InterfaceMethod org/xerial/snappy/buffer/BufferAllocator.release:([B)V
      67: aload_1
      68: athrow
      69: return
    Exception table:
       from    to  target type
           0    11    40   any
}
