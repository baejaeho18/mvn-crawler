Compiled from "SnappyFramedOutputStream.java"
public final class org.xerial.snappy.SnappyFramedOutputStream extends java.io.OutputStream implements java.nio.channels.WritableByteChannel {
  public static final int MAX_BLOCK_SIZE;

  public static final int DEFAULT_BLOCK_SIZE;

  public static final double DEFAULT_MIN_COMPRESSION_RATIO;

  private final java.nio.ByteBuffer headerBuffer;

  private final java.nio.ByteBuffer buffer;

  private final java.nio.ByteBuffer directInputBuffer;

  private final java.nio.ByteBuffer outputBuffer;

  private final double minCompressionRatio;

  private final java.nio.channels.WritableByteChannel out;

  private boolean closed;

  static final boolean $assertionsDisabled;

  public org.xerial.snappy.SnappyFramedOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // int 65536
       4: ldc2_w        #4                  // double 0.85d
       7: invokespecial #6                  // Method "<init>":(Ljava/io/OutputStream;ID)V
      10: return

  public org.xerial.snappy.SnappyFramedOutputStream(java.io.OutputStream, int, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;
       5: iload_2
       6: dload_3
       7: invokespecial #8                  // Method "<init>":(Ljava/nio/channels/WritableByteChannel;ID)V
      10: return

  public org.xerial.snappy.SnappyFramedOutputStream(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // int 65536
       4: ldc2_w        #4                  // double 0.85d
       7: invokespecial #8                  // Method "<init>":(Ljava/nio/channels/WritableByteChannel;ID)V
      10: return

  public org.xerial.snappy.SnappyFramedOutputStream(java.nio.channels.WritableByteChannel, int, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: bipush        8
       7: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: getstatic     #11                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      13: invokevirtual #12                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      16: putfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      19: aload_1
      20: ifnonnull     31
      23: new           #14                 // class java/lang/NullPointerException
      26: dup
      27: invokespecial #15                 // Method java/lang/NullPointerException."<init>":()V
      30: athrow
      31: dload_3
      32: dconst_0
      33: dcmpg
      34: ifle          43
      37: dload_3
      38: dconst_1
      39: dcmpl
      40: ifle          75
      43: new           #16                 // class java/lang/IllegalArgumentException
      46: dup
      47: new           #17                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #19                 // String minCompressionRatio
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: dload_3
      60: invokevirtual #21                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      63: ldc           #22                 // String  must be in (0,1.0]
      65: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: iload_2
      76: ifle          85
      79: iload_2
      80: ldc           #3                  // int 65536
      82: if_icmple     117
      85: new           #16                 // class java/lang/IllegalArgumentException
      88: dup
      89: new           #17                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #25                 // String block size
      98: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: iload_2
     102: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #27                 // String  must be in (0, 65536]
     107: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload_0
     118: aload_1
     119: putfield      #28                 // Field out:Ljava/nio/channels/WritableByteChannel;
     122: aload_0
     123: dload_3
     124: putfield      #29                 // Field minCompressionRatio:D
     127: aload_0
     128: iload_2
     129: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     132: putfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     135: aload_0
     136: iload_2
     137: invokestatic  #31                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
     140: putfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
     143: aload_0
     144: iload_2
     145: invokestatic  #33                 // Method org/xerial/snappy/Snappy.maxCompressedLength:(I)I
     148: invokestatic  #31                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
     151: putfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
     154: aload_0
     155: aload_1
     156: invokespecial #35                 // Method writeHeader:(Ljava/nio/channels/WritableByteChannel;)V
     159: return

  private void writeHeader(java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #36                 // Field org/xerial/snappy/SnappyFramed.HEADER_BYTES:[B
       4: invokestatic  #37                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       7: invokeinterface #38,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      12: pop
      13: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          17
       7: new           #40                 // class java/io/IOException
      10: dup
      11: ldc           #41                 // String Stream is closed
      13: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      21: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      24: ifgt          31
      27: aload_0
      28: invokespecial #44                 // Method flushBuffer:()V
      31: aload_0
      32: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      35: iload_1
      36: i2b
      37: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      40: pop
      41: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          17
       7: new           #40                 // class java/io/IOException
      10: dup
      11: ldc           #41                 // String Stream is closed
      13: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     29
      21: new           #14                 // class java/lang/NullPointerException
      24: dup
      25: invokespecial #15                 // Method java/lang/NullPointerException."<init>":()V
      28: athrow
      29: iload_2
      30: iflt          57
      33: iload_2
      34: aload_1
      35: arraylength
      36: if_icmpgt     57
      39: iload_3
      40: iflt          57
      43: iload_2
      44: iload_3
      45: iadd
      46: aload_1
      47: arraylength
      48: if_icmpgt     57
      51: iload_2
      52: iload_3
      53: iadd
      54: ifge          65
      57: new           #46                 // class java/lang/IndexOutOfBoundsException
      60: dup
      61: invokespecial #47                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      64: athrow
      65: iload_3
      66: ifle          121
      69: aload_0
      70: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      73: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      76: ifgt          83
      79: aload_0
      80: invokespecial #44                 // Method flushBuffer:()V
      83: iload_3
      84: aload_0
      85: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      88: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      91: invokestatic  #48                 // Method java/lang/Math.min:(II)I
      94: istore        4
      96: aload_0
      97: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     100: aload_1
     101: iload_2
     102: iload         4
     104: invokevirtual #49                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     107: pop
     108: iload_2
     109: iload         4
     111: iadd
     112: istore_2
     113: iload_3
     114: iload         4
     116: isub
     117: istore_3
     118: goto          65
     121: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          15
       7: new           #50                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #51                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      19: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      22: ifgt          29
      25: aload_0
      26: invokespecial #44                 // Method flushBuffer:()V
      29: aload_1
      30: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      33: istore_2
      34: aload_0
      35: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      38: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      41: aload_1
      42: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      45: if_icmplt     59
      48: aload_0
      49: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      52: aload_1
      53: invokevirtual #52                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      56: pop
      57: iload_2
      58: ireturn
      59: aload_1
      60: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      63: aload_1
      64: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      67: iadd
      68: istore_3
      69: aload_1
      70: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      73: aload_0
      74: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      77: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      80: iadd
      81: iload_3
      82: if_icmpgt     118
      85: aload_1
      86: aload_1
      87: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      90: aload_0
      91: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      94: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      97: iadd
      98: invokevirtual #54                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     101: pop
     102: aload_0
     103: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     106: aload_1
     107: invokevirtual #52                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     110: pop
     111: aload_0
     112: invokespecial #44                 // Method flushBuffer:()V
     115: goto          69
     118: aload_1
     119: iload_3
     120: invokevirtual #54                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     123: pop
     124: aload_0
     125: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     128: aload_1
     129: invokevirtual #52                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     132: pop
     133: iload_2
     134: ireturn

  public long transferFrom(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          15
       7: new           #50                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #51                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: aload_1
      16: ifnonnull     27
      19: new           #14                 // class java/lang/NullPointerException
      22: dup
      23: invokespecial #15                 // Method java/lang/NullPointerException."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      34: ifne          41
      37: aload_0
      38: invokespecial #44                 // Method flushBuffer:()V
      41: getstatic     #55                 // Field $assertionsDisabled:Z
      44: ifne          65
      47: aload_0
      48: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #56                 // Method java/nio/ByteBuffer.hasArray:()Z
      54: ifne          65
      57: new           #57                 // class java/lang/AssertionError
      60: dup
      61: invokespecial #58                 // Method java/lang/AssertionError."<init>":()V
      64: athrow
      65: aload_0
      66: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      69: invokevirtual #59                 // Method java/nio/ByteBuffer.array:()[B
      72: astore_2
      73: aload_0
      74: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      77: invokevirtual #60                 // Method java/nio/ByteBuffer.arrayOffset:()I
      80: istore_3
      81: lconst_0
      82: lstore        4
      84: aload_1
      85: aload_2
      86: iload_3
      87: aload_0
      88: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      91: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
      94: iadd
      95: aload_0
      96: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      99: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
     102: invokevirtual #61                 // Method java/io/InputStream.read:([BII)I
     105: dup
     106: istore        6
     108: iconst_m1
     109: if_icmpeq     155
     112: aload_0
     113: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     116: aload_0
     117: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     120: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
     123: iload         6
     125: iadd
     126: invokevirtual #62                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     129: pop
     130: aload_0
     131: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
     134: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
     137: ifne          144
     140: aload_0
     141: invokespecial #44                 // Method flushBuffer:()V
     144: lload         4
     146: iload         6
     148: i2l
     149: ladd
     150: lstore        4
     152: goto          84
     155: lload         4
     157: lreturn

  public long transferFrom(java.nio.channels.ReadableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          15
       7: new           #50                 // class java/nio/channels/ClosedChannelException
      10: dup
      11: invokespecial #51                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      14: athrow
      15: aload_1
      16: ifnonnull     27
      19: new           #14                 // class java/lang/NullPointerException
      22: dup
      23: invokespecial #15                 // Method java/lang/NullPointerException."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      34: ifne          41
      37: aload_0
      38: invokespecial #44                 // Method flushBuffer:()V
      41: lconst_0
      42: lstore_2
      43: aload_1
      44: aload_0
      45: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      48: invokeinterface #63,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      53: dup
      54: istore        4
      56: iconst_m1
      57: if_icmpeq     83
      60: aload_0
      61: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      64: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      67: ifne          74
      70: aload_0
      71: invokespecial #44                 // Method flushBuffer:()V
      74: lload_2
      75: iload         4
      77: i2l
      78: ladd
      79: lstore_2
      80: goto          43
      83: lload_2
      84: lreturn

  public final void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          17
       7: new           #40                 // class java/io/IOException
      10: dup
      11: ldc           #41                 // String Stream is closed
      13: invokespecial #42                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #44                 // Method flushBuffer:()V
      21: return

  public final void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field closed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #64                 // Method flush:()V
      12: aload_0
      13: getfield      #28                 // Field out:Ljava/nio/channels/WritableByteChannel;
      16: invokeinterface #65,  1           // InterfaceMethod java/nio/channels/WritableByteChannel.close:()V
      21: aload_0
      22: iconst_1
      23: putfield      #39                 // Field closed:Z
      26: aload_0
      27: getfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
      30: invokestatic  #66                 // Method org/xerial/snappy/SnappyFramed.releaseDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
      33: aload_0
      34: getfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
      37: invokestatic  #66                 // Method org/xerial/snappy/SnappyFramed.releaseDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
      40: goto          65
      43: astore_1
      44: aload_0
      45: iconst_1
      46: putfield      #39                 // Field closed:Z
      49: aload_0
      50: getfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
      53: invokestatic  #66                 // Method org/xerial/snappy/SnappyFramed.releaseDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
      56: aload_0
      57: getfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
      60: invokestatic  #66                 // Method org/xerial/snappy/SnappyFramed.releaseDirectByteBuffer:(Ljava/nio/ByteBuffer;)V
      63: aload_1
      64: athrow
      65: return
    Exception table:
       from    to  target type
           8    21    43   any

  private void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
       7: ifle          34
      10: aload_0
      11: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #67                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      17: pop
      18: aload_0
      19: aload_0
      20: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      23: invokespecial #68                 // Method writeCompressed:(Ljava/nio/ByteBuffer;)V
      26: aload_0
      27: getfield      #30                 // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      33: pop
      34: return

  private void writeCompressed(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method java/nio/ByteBuffer.array:()[B
       4: astore_2
       5: aload_1
       6: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
       9: istore_3
      10: aload_2
      11: iconst_0
      12: iload_3
      13: invokestatic  #70                 // Method org/xerial/snappy/SnappyFramed.maskedCrc32c:([BII)I
      16: istore        4
      18: aload_0
      19: getfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
      22: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      25: pop
      26: aload_0
      27: getfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
      30: aload_1
      31: invokevirtual #52                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_0
      36: getfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
      39: invokevirtual #67                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      42: pop
      43: aload_0
      44: getfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
      47: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      50: pop
      51: aload_0
      52: getfield      #32                 // Field directInputBuffer:Ljava/nio/ByteBuffer;
      55: aload_0
      56: getfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
      59: invokestatic  #71                 // Method org/xerial/snappy/Snappy.compress:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      62: pop
      63: aload_0
      64: getfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
      67: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      70: istore        5
      72: iload         5
      74: i2d
      75: iload_3
      76: i2d
      77: ddiv
      78: aload_0
      79: getfield      #29                 // Field minCompressionRatio:D
      82: dcmpg
      83: ifgt          104
      86: aload_0
      87: aload_0
      88: getfield      #28                 // Field out:Ljava/nio/channels/WritableByteChannel;
      91: aload_0
      92: getfield      #34                 // Field outputBuffer:Ljava/nio/ByteBuffer;
      95: iconst_1
      96: iload         4
      98: invokespecial #72                 // Method writeBlock:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;ZI)V
     101: goto          121
     104: aload_1
     105: invokevirtual #67                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     108: pop
     109: aload_0
     110: aload_0
     111: getfield      #28                 // Field out:Ljava/nio/channels/WritableByteChannel;
     114: aload_1
     115: iconst_0
     116: iload         4
     118: invokespecial #72                 // Method writeBlock:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;ZI)V
     121: return

  private void writeBlock(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer, boolean, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #69                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      12: iload_3
      13: ifeq          20
      16: iconst_0
      17: goto          21
      20: iconst_1
      21: i2b
      22: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_2
      27: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
      30: iconst_4
      31: iadd
      32: istore        5
      34: aload_0
      35: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      38: iload         5
      40: i2b
      41: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      44: pop
      45: aload_0
      46: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      49: iload         5
      51: bipush        8
      53: iushr
      54: i2b
      55: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      58: pop
      59: aload_0
      60: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      63: iload         5
      65: bipush        16
      67: iushr
      68: i2b
      69: invokevirtual #45                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      72: pop
      73: aload_0
      74: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      77: iload         4
      79: invokevirtual #73                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      82: pop
      83: aload_0
      84: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      87: invokevirtual #67                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      90: pop
      91: aload_1
      92: aload_0
      93: getfield      #13                 // Field headerBuffer:Ljava/nio/ByteBuffer;
      96: invokeinterface #38,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
     101: pop
     102: aload_1
     103: aload_2
     104: invokeinterface #38,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
     109: pop
     110: return

  static {};
    Code:
       0: ldc           #2                  // class org/xerial/snappy/SnappyFramedOutputStream
       2: invokevirtual #74                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #55                 // Field $assertionsDisabled:Z
      16: return
}
