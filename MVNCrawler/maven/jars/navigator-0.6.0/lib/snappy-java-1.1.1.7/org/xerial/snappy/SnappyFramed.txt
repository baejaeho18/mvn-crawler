Compiled from "SnappyFramed.java"
final class org.xerial.snappy.SnappyFramed {
  public static final int COMPRESSED_DATA_FLAG;

  public static final int UNCOMPRESSED_DATA_FLAG;

  public static final int STREAM_IDENTIFIER_FLAG;

  private static final int MASK_DELTA;

  private static final java.lang.Class<? extends java.nio.ByteBuffer> SUN_DIRECT_BUFFER;

  private static final java.lang.reflect.Method SUN_BUFFER_CLEANER;

  private static final java.lang.reflect.Method SUN_CLEANER_CLEAN;

  public static final byte[] HEADER_BYTES;

  static final boolean $assertionsDisabled;

  org.xerial.snappy.SnappyFramed();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int maskedCrc32c(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #2                  // Method maskedCrc32c:([BII)I
       7: ireturn

  public static int maskedCrc32c(byte[], int, int);
    Code:
       0: new           #3                  // class org/xerial/snappy/PureJavaCrc32C
       3: dup
       4: invokespecial #4                  // Method org/xerial/snappy/PureJavaCrc32C."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokevirtual #5                  // Method org/xerial/snappy/PureJavaCrc32C.update:([BII)V
      15: aload_3
      16: invokevirtual #6                  // Method org/xerial/snappy/PureJavaCrc32C.getIntegerValue:()I
      19: invokestatic  #7                  // Method mask:(I)I
      22: ireturn

  public static int mask(int);
    Code:
       0: iload_0
       1: bipush        15
       3: iushr
       4: iload_0
       5: bipush        17
       7: ishl
       8: ior
       9: ldc           #9                  // int -1568478504
      11: iadd
      12: ireturn

  static final int readBytes(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: aload_0
       8: aload_1
       9: invokeinterface #11,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      14: istore        4
      16: iload         4
      18: istore_3
      19: iload         4
      21: iload_2
      22: if_icmpge     61
      25: aload_1
      26: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      29: ifeq          61
      32: iload         4
      34: iconst_m1
      35: if_icmpeq     61
      38: aload_0
      39: aload_1
      40: invokeinterface #11,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      45: istore        4
      47: iload         4
      49: iconst_m1
      50: if_icmpeq     25
      53: iload_3
      54: iload         4
      56: iadd
      57: istore_3
      58: goto          25
      61: iload_3
      62: ifle          77
      65: aload_1
      66: aload_1
      67: invokevirtual #12                 // Method java/nio/ByteBuffer.position:()I
      70: invokevirtual #13                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      73: pop
      74: goto          86
      77: aload_1
      78: aload_1
      79: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:()I
      82: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      85: pop
      86: iload_3
      87: ireturn

  static int skip(java.nio.channels.ReadableByteChannel, int, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifgt          6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload_3
      12: ifle          62
      15: iload         4
      17: iconst_m1
      18: if_icmpeq     62
      21: aload_2
      22: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      25: pop
      26: iload_3
      27: aload_2
      28: invokevirtual #17                 // Method java/nio/ByteBuffer.capacity:()I
      31: if_icmpge     40
      34: aload_2
      35: iload_3
      36: invokevirtual #13                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      39: pop
      40: aload_0
      41: aload_2
      42: invokeinterface #11,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      47: istore        4
      49: iload         4
      51: ifle          11
      54: iload_3
      55: iload         4
      57: isub
      58: istore_3
      59: goto          11
      62: aload_2
      63: invokevirtual #16                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      66: pop
      67: iload_1
      68: iload_3
      69: isub
      70: ireturn

  private static java.lang.Class<?> lookupClassQuietly(java.lang.String);
    Code:
       0: ldc           #8                  // class org/xerial/snappy/SnappyFramed
       2: invokevirtual #18                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: aload_0
       6: invokevirtual #19                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       9: areturn
      10: astore_1
      11: ldc           #8                  // class org/xerial/snappy/SnappyFramed
      13: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      19: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      22: new           #24                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #26                 // String Did not find requested class:
      31: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: aload_1
      42: invokevirtual #29                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      45: aconst_null
      46: areturn
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable

  static void releaseDirectByteBuffer(java.nio.ByteBuffer);
    Code:
       0: getstatic     #30                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_0
       7: ifnull        17
      10: aload_0
      11: invokevirtual #31                 // Method java/nio/ByteBuffer.isDirect:()Z
      14: ifne          25
      17: new           #32                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: getstatic     #34                 // Field SUN_DIRECT_BUFFER:Ljava/lang/Class;
      28: ifnull        89
      31: getstatic     #34                 // Field SUN_DIRECT_BUFFER:Ljava/lang/Class;
      34: aload_0
      35: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: invokevirtual #36                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      41: ifeq          89
      44: getstatic     #37                 // Field SUN_BUFFER_CLEANER:Ljava/lang/reflect/Method;
      47: aload_0
      48: aconst_null
      49: checkcast     #38                 // class "[Ljava/lang/Object;"
      52: invokevirtual #39                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      55: astore_1
      56: getstatic     #40                 // Field SUN_CLEANER_CLEAN:Ljava/lang/reflect/Method;
      59: aload_1
      60: aconst_null
      61: checkcast     #38                 // class "[Ljava/lang/Object;"
      64: invokevirtual #39                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: goto          89
      71: astore_1
      72: ldc           #8                  // class org/xerial/snappy/SnappyFramed
      74: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      77: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      80: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      83: ldc           #41                 // String Exception occurred attempting to clean up Sun specific DirectByteBuffer.
      85: aload_1
      86: invokevirtual #29                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      89: return
    Exception table:
       from    to  target type
          44    68    71   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #8                  // class org/xerial/snappy/SnappyFramed
       2: invokevirtual #42                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #30                 // Field $assertionsDisabled:Z
      16: ldc           #43                 // String sun.nio.ch.DirectBuffer
      18: invokestatic  #44                 // Method lookupClassQuietly:(Ljava/lang/String;)Ljava/lang/Class;
      21: putstatic     #34                 // Field SUN_DIRECT_BUFFER:Ljava/lang/Class;
      24: aconst_null
      25: astore_0
      26: aconst_null
      27: astore_1
      28: getstatic     #34                 // Field SUN_DIRECT_BUFFER:Ljava/lang/Class;
      31: ifnull        64
      34: getstatic     #34                 // Field SUN_DIRECT_BUFFER:Ljava/lang/Class;
      37: ldc           #45                 // String cleaner
      39: aconst_null
      40: checkcast     #46                 // class "[Ljava/lang/Class;"
      43: invokevirtual #47                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      46: astore_0
      47: ldc           #48                 // String sun.misc.Cleaner
      49: invokestatic  #44                 // Method lookupClassQuietly:(Ljava/lang/String;)Ljava/lang/Class;
      52: astore_2
      53: aload_2
      54: ldc           #49                 // String clean
      56: aconst_null
      57: checkcast     #46                 // class "[Ljava/lang/Class;"
      60: invokevirtual #47                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      63: astore_1
      64: goto          85
      67: astore_2
      68: ldc           #8                  // class org/xerial/snappy/SnappyFramed
      70: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      73: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      76: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      79: ldc           #50                 // String Exception occurred attempting to lookup Sun specific DirectByteBuffer cleaner classes.
      81: aload_2
      82: invokevirtual #29                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      85: aload_0
      86: putstatic     #37                 // Field SUN_BUFFER_CLEANER:Ljava/lang/reflect/Method;
      89: aload_1
      90: putstatic     #40                 // Field SUN_CLEANER_CLEAN:Ljava/lang/reflect/Method;
      93: bipush        10
      95: newarray       byte
      97: dup
      98: iconst_0
      99: iconst_m1
     100: bastore
     101: dup
     102: iconst_1
     103: bipush        6
     105: bastore
     106: dup
     107: iconst_2
     108: iconst_0
     109: bastore
     110: dup
     111: iconst_3
     112: iconst_0
     113: bastore
     114: dup
     115: iconst_4
     116: bipush        115
     118: bastore
     119: dup
     120: iconst_5
     121: bipush        78
     123: bastore
     124: dup
     125: bipush        6
     127: bipush        97
     129: bastore
     130: dup
     131: bipush        7
     133: bipush        80
     135: bastore
     136: dup
     137: bipush        8
     139: bipush        112
     141: bastore
     142: dup
     143: bipush        9
     145: bipush        89
     147: bastore
     148: putstatic     #51                 // Field HEADER_BYTES:[B
     151: return
    Exception table:
       from    to  target type
          28    64    67   Class java/lang/Throwable
}
