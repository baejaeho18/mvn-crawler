Compiled from "AspectJPrecedenceComparator.java"
class org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator implements java.util.Comparator<org.springframework.aop.Advisor> {
  private static final int HIGHER_PRECEDENCE;

  private static final int SAME_PRECEDENCE;

  private static final int LOWER_PRECEDENCE;

  private final java.util.Comparator<? super org.springframework.aop.Advisor> advisorComparator;

  public org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/springframework/core/OrderComparator.INSTANCE:Lorg/springframework/core/OrderComparator;
       8: putfield      #3                  // Field advisorComparator:Ljava/util/Comparator;
      11: return

  public org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator(java.util.Comparator<? super org.springframework.aop.Advisor>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String Advisor comparator must not be null
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #3                  // Field advisorComparator:Ljava/util/Comparator;
      15: return

  public int compare(org.springframework.aop.Advisor, org.springframework.aop.Advisor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field advisorComparator:Ljava/util/Comparator;
       4: aload_1
       5: aload_2
       6: invokeinterface #6,  3            // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      11: istore_3
      12: iload_3
      13: ifne          32
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokespecial #7                  // Method declaredInSameAspect:(Lorg/springframework/aop/Advisor;Lorg/springframework/aop/Advisor;)Z
      22: ifeq          32
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokespecial #8                  // Method comparePrecedenceWithinAspect:(Lorg/springframework/aop/Advisor;Lorg/springframework/aop/Advisor;)I
      31: istore_3
      32: iload_3
      33: ireturn

  private int comparePrecedenceWithinAspect(org.springframework.aop.Advisor, org.springframework.aop.Advisor);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/springframework/aop/aspectj/AspectJAopUtils.isAfterAdvice:(Lorg/springframework/aop/Advisor;)Z
       4: ifne          14
       7: aload_2
       8: invokestatic  #9                  // Method org/springframework/aop/aspectj/AspectJAopUtils.isAfterAdvice:(Lorg/springframework/aop/Advisor;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_3
      20: aload_0
      21: aload_1
      22: invokespecial #10                 // Method getAspectDeclarationOrder:(Lorg/springframework/aop/Advisor;)I
      25: aload_0
      26: aload_2
      27: invokespecial #10                 // Method getAspectDeclarationOrder:(Lorg/springframework/aop/Advisor;)I
      30: isub
      31: istore        4
      33: iload_3
      34: ifeq          53
      37: iload         4
      39: ifge          44
      42: iconst_1
      43: ireturn
      44: iload         4
      46: ifne          51
      49: iconst_0
      50: ireturn
      51: iconst_m1
      52: ireturn
      53: iload         4
      55: ifge          60
      58: iconst_m1
      59: ireturn
      60: iload         4
      62: ifne          67
      65: iconst_0
      66: ireturn
      67: iconst_1
      68: ireturn

  private boolean declaredInSameAspect(org.springframework.aop.Advisor, org.springframework.aop.Advisor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method hasAspectName:(Lorg/springframework/aop/Advisor;)Z
       5: ifeq          36
       8: aload_0
       9: aload_2
      10: invokespecial #12                 // Method hasAspectName:(Lorg/springframework/aop/Advisor;)Z
      13: ifeq          36
      16: aload_0
      17: aload_1
      18: invokespecial #13                 // Method getAspectName:(Lorg/springframework/aop/Advisor;)Ljava/lang/String;
      21: aload_0
      22: aload_2
      23: invokespecial #13                 // Method getAspectName:(Lorg/springframework/aop/Advisor;)Ljava/lang/String;
      26: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private boolean hasAspectName(org.springframework.aop.Advisor);
    Code:
       0: aload_1
       1: instanceof    #15                 // class org/springframework/aop/aspectj/AspectJPrecedenceInformation
       4: ifne          19
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod org/springframework/aop/Advisor.getAdvice:()Lorg/aopalliance/aop/Advice;
      13: instanceof    #15                 // class org/springframework/aop/aspectj/AspectJPrecedenceInformation
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private java.lang.String getAspectName(org.springframework.aop.Advisor);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/springframework/aop/aspectj/AspectJAopUtils.getAspectJPrecedenceInformationFor:(Lorg/springframework/aop/Advisor;)Lorg/springframework/aop/aspectj/AspectJPrecedenceInformation;
       4: invokeinterface #18,  1           // InterfaceMethod org/springframework/aop/aspectj/AspectJPrecedenceInformation.getAspectName:()Ljava/lang/String;
       9: areturn

  private int getAspectDeclarationOrder(org.springframework.aop.Advisor);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/springframework/aop/aspectj/AspectJAopUtils.getAspectJPrecedenceInformationFor:(Lorg/springframework/aop/Advisor;)Lorg/springframework/aop/aspectj/AspectJPrecedenceInformation;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: invokeinterface #19,  1           // InterfaceMethod org/springframework/aop/aspectj/AspectJPrecedenceInformation.getDeclarationOrder:()I
      15: ireturn
      16: iconst_0
      17: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/springframework/aop/Advisor
       5: aload_2
       6: checkcast     #20                 // class org/springframework/aop/Advisor
       9: invokevirtual #21                 // Method compare:(Lorg/springframework/aop/Advisor;Lorg/springframework/aop/Advisor;)I
      12: ireturn
}
