Compiled from "RuntimeTestWalker.java"
class org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor extends org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter {
  private final java.lang.Object thisObj;

  private final java.lang.Object targetObj;

  private final java.lang.Object[] argsObjs;

  private boolean testsSubtypeSensitiveVars;

  private org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method org/springframework/aop/aspectj/RuntimeTestWalker$TestVisitorAdapter."<init>":(Lorg/springframework/aop/aspectj/RuntimeTestWalker$1;)V
       5: aload_0
       6: new           #3                  // class java/lang/Object
       9: dup
      10: invokespecial #4                  // Method java/lang/Object."<init>":()V
      13: putfield      #5                  // Field thisObj:Ljava/lang/Object;
      16: aload_0
      17: new           #3                  // class java/lang/Object
      20: dup
      21: invokespecial #4                  // Method java/lang/Object."<init>":()V
      24: putfield      #6                  // Field targetObj:Ljava/lang/Object;
      27: aload_0
      28: iconst_0
      29: anewarray     #3                  // class java/lang/Object
      32: putfield      #7                  // Field argsObjs:[Ljava/lang/Object;
      35: aload_0
      36: iconst_0
      37: putfield      #8                  // Field testsSubtypeSensitiveVars:Z
      40: return

  public boolean testsSubtypeSensitiveVars(org.aspectj.weaver.ast.Test);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #9                  // Method org/aspectj/weaver/ast/Test.accept:(Lorg/aspectj/weaver/ast/ITestVisitor;)V
       5: aload_0
       6: getfield      #8                  // Field testsSubtypeSensitiveVars:Z
       9: ireturn

  public void visit(org.aspectj.weaver.ast.Instanceof);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/aspectj/weaver/ast/Instanceof.getVar:()Lorg/aspectj/weaver/ast/Var;
       4: checkcast     #11                 // class org/aspectj/weaver/reflect/ReflectionVar
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #5                  // Field thisObj:Ljava/lang/Object;
      13: aload_0
      14: getfield      #6                  // Field targetObj:Ljava/lang/Object;
      17: aload_0
      18: getfield      #7                  // Field argsObjs:[Ljava/lang/Object;
      21: invokevirtual #12                 // Method org/aspectj/weaver/reflect/ReflectionVar.getBindingAtJoinPoint:(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      24: astore_3
      25: aload_3
      26: aload_0
      27: getfield      #5                  // Field thisObj:Ljava/lang/Object;
      30: if_acmpeq     41
      33: aload_3
      34: aload_0
      35: getfield      #6                  // Field targetObj:Ljava/lang/Object;
      38: if_acmpne     46
      41: aload_0
      42: iconst_1
      43: putfield      #8                  // Field testsSubtypeSensitiveVars:Z
      46: return

  public void visit(org.aspectj.weaver.ast.HasAnnotation);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/aspectj/weaver/ast/HasAnnotation.getVar:()Lorg/aspectj/weaver/ast/Var;
       4: checkcast     #11                 // class org/aspectj/weaver/reflect/ReflectionVar
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #14                 // Method getVarType:(Lorg/aspectj/weaver/reflect/ReflectionVar;)I
      13: istore_3
      14: iload_3
      15: iconst_3
      16: if_icmpeq     30
      19: iload_3
      20: iconst_4
      21: if_icmpeq     30
      24: iload_3
      25: bipush        8
      27: if_icmpne     35
      30: aload_0
      31: iconst_1
      32: putfield      #8                  // Field testsSubtypeSensitiveVars:Z
      35: return

  org.springframework.aop.aspectj.RuntimeTestWalker$SubtypeSensitiveVarTypeTestVisitor(org.springframework.aop.aspectj.RuntimeTestWalker$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
