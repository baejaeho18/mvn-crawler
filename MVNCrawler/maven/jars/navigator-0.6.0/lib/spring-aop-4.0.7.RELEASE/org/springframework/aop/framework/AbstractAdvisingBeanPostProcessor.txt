Compiled from "AbstractAdvisingBeanPostProcessor.java"
public abstract class org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor extends org.springframework.aop.framework.ProxyConfig implements org.springframework.beans.factory.config.BeanPostProcessor,org.springframework.beans.factory.BeanClassLoaderAware,org.springframework.core.Ordered {
  protected org.springframework.aop.Advisor advisor;

  protected boolean beforeExistingAdvisors;

  private java.lang.ClassLoader beanClassLoader;

  private int order;

  private final java.util.Map<java.lang.Class<?>, java.lang.Boolean> eligibleBeans;

  public org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyConfig."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field beforeExistingAdvisors:Z
       9: aload_0
      10: invokestatic  #3                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      13: putfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      16: aload_0
      17: ldc           #6                  // int 2147483647
      19: putfield      #7                  // Field order:I
      22: aload_0
      23: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: bipush        64
      29: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      32: putfield      #10                 // Field eligibleBeans:Ljava/util/Map;
      35: return

  public void setBeforeExistingAdvisors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field beforeExistingAdvisors:Z
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field order:I
       4: ireturn

  public java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: areturn

  public java.lang.Object postProcessAfterInitialization(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #11                 // class org/springframework/aop/framework/AopInfrastructureBean
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_1
      10: instanceof    #12                 // class org/springframework/aop/framework/Advised
      13: ifeq          74
      16: aload_1
      17: checkcast     #12                 // class org/springframework/aop/framework/Advised
      20: astore_3
      21: aload_3
      22: invokeinterface #13,  1           // InterfaceMethod org/springframework/aop/framework/Advised.isFrozen:()Z
      27: ifne          74
      30: aload_0
      31: aload_1
      32: invokestatic  #14                 // Method org/springframework/aop/support/AopUtils.getTargetClass:(Ljava/lang/Object;)Ljava/lang/Class;
      35: invokevirtual #15                 // Method isEligible:(Ljava/lang/Class;)Z
      38: ifeq          74
      41: aload_0
      42: getfield      #2                  // Field beforeExistingAdvisors:Z
      45: ifeq          62
      48: aload_3
      49: iconst_0
      50: aload_0
      51: getfield      #16                 // Field advisor:Lorg/springframework/aop/Advisor;
      54: invokeinterface #17,  3           // InterfaceMethod org/springframework/aop/framework/Advised.addAdvisor:(ILorg/springframework/aop/Advisor;)V
      59: goto          72
      62: aload_3
      63: aload_0
      64: getfield      #16                 // Field advisor:Lorg/springframework/aop/Advisor;
      67: invokeinterface #18,  2           // InterfaceMethod org/springframework/aop/framework/Advised.addAdvisor:(Lorg/springframework/aop/Advisor;)V
      72: aload_1
      73: areturn
      74: aload_0
      75: aload_1
      76: aload_2
      77: invokevirtual #19                 // Method isEligible:(Ljava/lang/Object;Ljava/lang/String;)Z
      80: ifeq          114
      83: new           #20                 // class org/springframework/aop/framework/ProxyFactory
      86: dup
      87: aload_1
      88: invokespecial #21                 // Method org/springframework/aop/framework/ProxyFactory."<init>":(Ljava/lang/Object;)V
      91: astore_3
      92: aload_3
      93: aload_0
      94: invokevirtual #22                 // Method org/springframework/aop/framework/ProxyFactory.copyFrom:(Lorg/springframework/aop/framework/ProxyConfig;)V
      97: aload_3
      98: aload_0
      99: getfield      #16                 // Field advisor:Lorg/springframework/aop/Advisor;
     102: invokevirtual #23                 // Method org/springframework/aop/framework/ProxyFactory.addAdvisor:(Lorg/springframework/aop/Advisor;)V
     105: aload_3
     106: aload_0
     107: getfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
     110: invokevirtual #24                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     113: areturn
     114: aload_1
     115: areturn

  protected boolean isEligible(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #15                 // Method isEligible:(Ljava/lang/Class;)Z
       8: ireturn

  protected boolean isEligible(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field eligibleBeans:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #27                 // class java/lang/Boolean
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #28                 // Method java/lang/Boolean.booleanValue:()Z
      22: ireturn
      23: aload_0
      24: getfield      #16                 // Field advisor:Lorg/springframework/aop/Advisor;
      27: aload_1
      28: invokestatic  #29                 // Method org/springframework/aop/support/AopUtils.canApply:(Lorg/springframework/aop/Advisor;Ljava/lang/Class;)Z
      31: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: astore_2
      35: aload_0
      36: getfield      #10                 // Field eligibleBeans:Ljava/util/Map;
      39: aload_1
      40: aload_2
      41: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_2
      48: invokevirtual #28                 // Method java/lang/Boolean.booleanValue:()Z
      51: ireturn
}
