Compiled from "ReflectiveMethodInvocation.java"
public class org.springframework.aop.framework.ReflectiveMethodInvocation implements org.springframework.aop.ProxyMethodInvocation,java.lang.Cloneable {
  protected final java.lang.Object proxy;

  protected final java.lang.Object target;

  protected final java.lang.reflect.Method method;

  protected java.lang.Object[] arguments;

  private final java.lang.Class<?> targetClass;

  private java.util.Map<java.lang.String, java.lang.Object> userAttributes;

  protected final java.util.List<?> interceptorsAndDynamicMethodMatchers;

  private int currentInterceptorIndex;

  protected org.springframework.aop.framework.ReflectiveMethodInvocation(java.lang.Object, java.lang.Object, java.lang.reflect.Method, java.lang.Object[], java.lang.Class<?>, java.util.List<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field currentInterceptorIndex:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field proxy:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field target:Ljava/lang/Object;
      19: aload_0
      20: aload         5
      22: putfield      #5                  // Field targetClass:Ljava/lang/Class;
      25: aload_0
      26: aload_3
      27: invokestatic  #6                  // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      30: putfield      #7                  // Field method:Ljava/lang/reflect/Method;
      33: aload_0
      34: aload         4
      36: putfield      #8                  // Field arguments:[Ljava/lang/Object;
      39: aload_0
      40: aload         6
      42: putfield      #9                  // Field interceptorsAndDynamicMethodMatchers:Ljava/util/List;
      45: return

  public final java.lang.Object getProxy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxy:Ljava/lang/Object;
       4: areturn

  public final java.lang.Object getThis();
    Code:
       0: aload_0
       1: getfield      #4                  // Field target:Ljava/lang/Object;
       4: areturn

  public final java.lang.reflect.AccessibleObject getStaticPart();
    Code:
       0: aload_0
       1: getfield      #7                  // Field method:Ljava/lang/reflect/Method;
       4: areturn

  public final java.lang.reflect.Method getMethod();
    Code:
       0: aload_0
       1: getfield      #7                  // Field method:Ljava/lang/reflect/Method;
       4: areturn

  public final java.lang.Object[] getArguments();
    Code:
       0: aload_0
       1: getfield      #8                  // Field arguments:[Ljava/lang/Object;
       4: ifnull        14
       7: aload_0
       8: getfield      #8                  // Field arguments:[Ljava/lang/Object;
      11: goto          18
      14: iconst_0
      15: anewarray     #10                 // class java/lang/Object
      18: areturn

  public void setArguments(java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field arguments:[Ljava/lang/Object;
       5: return

  public java.lang.Object proceed() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #2                  // Field currentInterceptorIndex:I
       4: aload_0
       5: getfield      #9                  // Field interceptorsAndDynamicMethodMatchers:Ljava/util/List;
       8: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: if_icmpne     23
      18: aload_0
      19: invokevirtual #12                 // Method invokeJoinpoint:()Ljava/lang/Object;
      22: areturn
      23: aload_0
      24: getfield      #9                  // Field interceptorsAndDynamicMethodMatchers:Ljava/util/List;
      27: aload_0
      28: dup
      29: getfield      #2                  // Field currentInterceptorIndex:I
      32: iconst_1
      33: iadd
      34: dup_x1
      35: putfield      #2                  // Field currentInterceptorIndex:I
      38: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: astore_1
      44: aload_1
      45: instanceof    #14                 // class org/springframework/aop/framework/InterceptorAndDynamicMethodMatcher
      48: ifeq          96
      51: aload_1
      52: checkcast     #14                 // class org/springframework/aop/framework/InterceptorAndDynamicMethodMatcher
      55: astore_2
      56: aload_2
      57: getfield      #15                 // Field org/springframework/aop/framework/InterceptorAndDynamicMethodMatcher.methodMatcher:Lorg/springframework/aop/MethodMatcher;
      60: aload_0
      61: getfield      #7                  // Field method:Ljava/lang/reflect/Method;
      64: aload_0
      65: getfield      #5                  // Field targetClass:Ljava/lang/Class;
      68: aload_0
      69: getfield      #8                  // Field arguments:[Ljava/lang/Object;
      72: invokeinterface #16,  4           // InterfaceMethod org/springframework/aop/MethodMatcher.matches:(Ljava/lang/reflect/Method;Ljava/lang/Class;[Ljava/lang/Object;)Z
      77: ifeq          91
      80: aload_2
      81: getfield      #17                 // Field org/springframework/aop/framework/InterceptorAndDynamicMethodMatcher.interceptor:Lorg/aopalliance/intercept/MethodInterceptor;
      84: aload_0
      85: invokeinterface #18,  2           // InterfaceMethod org/aopalliance/intercept/MethodInterceptor.invoke:(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
      90: areturn
      91: aload_0
      92: invokevirtual #19                 // Method proceed:()Ljava/lang/Object;
      95: areturn
      96: aload_1
      97: checkcast     #20                 // class org/aopalliance/intercept/MethodInterceptor
     100: aload_0
     101: invokeinterface #18,  2           // InterfaceMethod org/aopalliance/intercept/MethodInterceptor.invoke:(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
     106: areturn

  protected java.lang.Object invokeJoinpoint() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #4                  // Field target:Ljava/lang/Object;
       4: aload_0
       5: getfield      #7                  // Field method:Ljava/lang/reflect/Method;
       8: aload_0
       9: getfield      #8                  // Field arguments:[Ljava/lang/Object;
      12: invokestatic  #21                 // Method org/springframework/aop/support/AopUtils.invokeJoinpointUsingReflection:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public org.aopalliance.intercept.MethodInvocation invocableClone();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #8                  // Field arguments:[Ljava/lang/Object;
       6: ifnull        33
       9: aload_0
      10: getfield      #8                  // Field arguments:[Ljava/lang/Object;
      13: arraylength
      14: anewarray     #10                 // class java/lang/Object
      17: astore_1
      18: aload_0
      19: getfield      #8                  // Field arguments:[Ljava/lang/Object;
      22: iconst_0
      23: aload_1
      24: iconst_0
      25: aload_0
      26: getfield      #8                  // Field arguments:[Ljava/lang/Object;
      29: arraylength
      30: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_0
      34: aload_1
      35: invokevirtual #23                 // Method invocableClone:([Ljava/lang/Object;)Lorg/aopalliance/intercept/MethodInvocation;
      38: areturn

  public org.aopalliance.intercept.MethodInvocation invocableClone(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #24                 // Field userAttributes:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/HashMap
      11: dup
      12: invokespecial #26                 // Method java/util/HashMap."<init>":()V
      15: putfield      #24                 // Field userAttributes:Ljava/util/Map;
      18: aload_0
      19: invokevirtual #27                 // Method java/lang/Object.clone:()Ljava/lang/Object;
      22: checkcast     #28                 // class org/springframework/aop/framework/ReflectiveMethodInvocation
      25: astore_2
      26: aload_2
      27: aload_1
      28: putfield      #8                  // Field arguments:[Ljava/lang/Object;
      31: aload_2
      32: areturn
      33: astore_2
      34: new           #30                 // class java/lang/IllegalStateException
      37: dup
      38: new           #31                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #33                 // String Should be able to clone object of type [
      47: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #37                 // String ]:
      59: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_2
      63: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow
    Exception table:
       from    to  target type
          18    32    33   Class java/lang/CloneNotSupportedException

  public void setUserAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnull        37
       4: aload_0
       5: getfield      #24                 // Field userAttributes:Ljava/util/Map;
       8: ifnonnull     22
      11: aload_0
      12: new           #25                 // class java/util/HashMap
      15: dup
      16: invokespecial #26                 // Method java/util/HashMap."<init>":()V
      19: putfield      #24                 // Field userAttributes:Ljava/util/Map;
      22: aload_0
      23: getfield      #24                 // Field userAttributes:Ljava/util/Map;
      26: aload_1
      27: aload_2
      28: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: goto          55
      37: aload_0
      38: getfield      #24                 // Field userAttributes:Ljava/util/Map;
      41: ifnull        55
      44: aload_0
      45: getfield      #24                 // Field userAttributes:Ljava/util/Map;
      48: aload_1
      49: invokeinterface #41,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: return

  public java.lang.Object getUserAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field userAttributes:Ljava/util/Map;
       4: ifnull        20
       7: aload_0
       8: getfield      #24                 // Field userAttributes:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: goto          21
      20: aconst_null
      21: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getUserAttributes();
    Code:
       0: aload_0
       1: getfield      #24                 // Field userAttributes:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #25                 // class java/util/HashMap
      11: dup
      12: invokespecial #26                 // Method java/util/HashMap."<init>":()V
      15: putfield      #24                 // Field userAttributes:Ljava/util/Map;
      18: aload_0
      19: getfield      #24                 // Field userAttributes:Ljava/util/Map;
      22: areturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #43                 // String ReflectiveMethodInvocation:
       6: invokespecial #44                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: getfield      #7                  // Field method:Ljava/lang/reflect/Method;
      15: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #45                 // String ;
      20: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #4                  // Field target:Ljava/lang/Object;
      28: ifnonnull     41
      31: aload_1
      32: ldc           #46                 // String target is null
      34: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: goto          66
      41: aload_1
      42: ldc           #47                 // String target is of class [
      44: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #4                  // Field target:Ljava/lang/Object;
      51: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #48                 // Method java/lang/Class.getName:()Ljava/lang/String;
      57: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: bipush        93
      62: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn
}
