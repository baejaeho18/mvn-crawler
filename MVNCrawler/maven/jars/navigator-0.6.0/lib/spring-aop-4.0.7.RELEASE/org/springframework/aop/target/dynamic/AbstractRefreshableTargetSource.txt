Compiled from "AbstractRefreshableTargetSource.java"
public abstract class org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource implements org.springframework.aop.TargetSource,org.springframework.aop.target.dynamic.Refreshable {
  protected org.apache.commons.logging.Log logger;

  protected java.lang.Object targetObject;

  private long refreshCheckDelay;

  private long lastRefreshCheck;

  private long lastRefreshTime;

  private long refreshCount;

  public org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc2_w        #5                  // long -1l
      19: putfield      #7                  // Field refreshCheckDelay:J
      22: aload_0
      23: ldc2_w        #5                  // long -1l
      26: putfield      #8                  // Field lastRefreshCheck:J
      29: aload_0
      30: ldc2_w        #5                  // long -1l
      33: putfield      #9                  // Field lastRefreshTime:J
      36: aload_0
      37: lconst_0
      38: putfield      #10                 // Field refreshCount:J
      41: return

  public void setRefreshCheckDelay(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field refreshCheckDelay:J
       5: return

  public synchronized java.lang.Class<?> getTargetClass();
    Code:
       0: aload_0
       1: getfield      #11                 // Field targetObject:Ljava/lang/Object;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #12                 // Method refresh:()V
      11: aload_0
      12: getfield      #11                 // Field targetObject:Ljava/lang/Object;
      15: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: areturn

  public boolean isStatic();
    Code:
       0: iconst_0
       1: ireturn

  public final synchronized java.lang.Object getTarget();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method refreshCheckDelayElapsed:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #14                 // Method requiresRefresh:()Z
      11: ifne          21
      14: aload_0
      15: getfield      #11                 // Field targetObject:Ljava/lang/Object;
      18: ifnonnull     25
      21: aload_0
      22: invokevirtual #12                 // Method refresh:()V
      25: aload_0
      26: getfield      #11                 // Field targetObject:Ljava/lang/Object;
      29: areturn

  public void releaseTarget(java.lang.Object);
    Code:
       0: return

  public final synchronized void refresh();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #15                 // String Attempting to refresh target
       6: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: aload_0
      13: invokevirtual #17                 // Method freshTarget:()Ljava/lang/Object;
      16: putfield      #11                 // Field targetObject:Ljava/lang/Object;
      19: aload_0
      20: dup
      21: getfield      #10                 // Field refreshCount:J
      24: lconst_1
      25: ladd
      26: putfield      #10                 // Field refreshCount:J
      29: aload_0
      30: invokestatic  #18                 // Method java/lang/System.currentTimeMillis:()J
      33: putfield      #9                  // Field lastRefreshTime:J
      36: aload_0
      37: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      40: ldc           #19                 // String Target refreshed successfully
      42: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      47: return

  public synchronized long getRefreshCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field refreshCount:J
       4: lreturn

  public synchronized long getLastRefreshTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field lastRefreshTime:J
       4: lreturn

  private boolean refreshCheckDelayElapsed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field refreshCheckDelay:J
       4: lconst_0
       5: lcmp
       6: ifge          11
       9: iconst_0
      10: ireturn
      11: invokestatic  #18                 // Method java/lang/System.currentTimeMillis:()J
      14: lstore_1
      15: aload_0
      16: getfield      #8                  // Field lastRefreshCheck:J
      19: lconst_0
      20: lcmp
      21: iflt          38
      24: lload_1
      25: aload_0
      26: getfield      #8                  // Field lastRefreshCheck:J
      29: lsub
      30: aload_0
      31: getfield      #7                  // Field refreshCheckDelay:J
      34: lcmp
      35: ifle          56
      38: aload_0
      39: lload_1
      40: putfield      #8                  // Field lastRefreshCheck:J
      43: aload_0
      44: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      47: ldc           #20                 // String Refresh check delay elapsed - checking whether refresh is required
      49: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      54: iconst_1
      55: ireturn
      56: iconst_0
      57: ireturn

  protected boolean requiresRefresh();
    Code:
       0: iconst_1
       1: ireturn

  protected abstract java.lang.Object freshTarget();
}
