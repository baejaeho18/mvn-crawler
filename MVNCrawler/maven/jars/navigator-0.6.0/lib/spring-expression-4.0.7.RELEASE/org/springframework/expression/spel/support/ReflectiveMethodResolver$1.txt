Compiled from "ReflectiveMethodResolver.java"
class org.springframework.expression.spel.support.ReflectiveMethodResolver$1 implements java.util.Comparator<java.lang.reflect.Method> {
  final org.springframework.expression.spel.support.ReflectiveMethodResolver this$0;

  org.springframework.expression.spel.support.ReflectiveMethodResolver$1(org.springframework.expression.spel.support.ReflectiveMethodResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/expression/spel/support/ReflectiveMethodResolver;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public int compare(java.lang.reflect.Method, java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: arraylength
       5: istore_3
       6: aload_2
       7: invokevirtual #3                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      10: arraylength
      11: istore        4
      13: new           #4                  // class java/lang/Integer
      16: dup
      17: iload_3
      18: invokespecial #5                  // Method java/lang/Integer."<init>":(I)V
      21: iload         4
      23: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokevirtual #7                  // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I
      29: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class java/lang/reflect/Method
       5: aload_2
       6: checkcast     #8                  // class java/lang/reflect/Method
       9: invokevirtual #9                  // Method compare:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I
      12: ireturn
}
