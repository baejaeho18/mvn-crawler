Compiled from "ResourceBundleMessageSource.java"
public class org.springframework.context.support.ResourceBundleMessageSource extends org.springframework.context.support.AbstractMessageSource implements org.springframework.beans.factory.BeanClassLoaderAware {
  private java.lang.String[] basenames;

  private java.lang.String defaultEncoding;

  private boolean fallbackToSystemLocale;

  private long cacheMillis;

  private java.lang.ClassLoader bundleClassLoader;

  private java.lang.ClassLoader beanClassLoader;

  private final java.util.Map<java.lang.String, java.util.Map<java.util.Locale, java.util.ResourceBundle>> cachedResourceBundles;

  private final java.util.Map<java.util.ResourceBundle, java.util.Map<java.lang.String, java.util.Map<java.util.Locale, java.text.MessageFormat>>> cachedBundleMessageFormats;

  public org.springframework.context.support.ResourceBundleMessageSource();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/context/support/AbstractMessageSource."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #6                  // class java/lang/String
       9: putfield      #7                  // Field basenames:[Ljava/lang/String;
      12: aload_0
      13: iconst_1
      14: putfield      #3                  // Field fallbackToSystemLocale:Z
      17: aload_0
      18: ldc2_w        #8                  // long -1l
      21: putfield      #2                  // Field cacheMillis:J
      24: aload_0
      25: invokestatic  #10                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      28: putfield      #11                 // Field beanClassLoader:Ljava/lang/ClassLoader;
      31: aload_0
      32: new           #12                 // class java/util/HashMap
      35: dup
      36: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      39: putfield      #14                 // Field cachedResourceBundles:Ljava/util/Map;
      42: aload_0
      43: new           #12                 // class java/util/HashMap
      46: dup
      47: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      50: putfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
      53: return

  public void setBasename(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #6                  // class java/lang/String
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #15                 // Method setBasenames:([Ljava/lang/String;)V
      12: return

  public void setBasenames(java.lang.String...);
    Code:
       0: aload_1
       1: ifnull        50
       4: aload_0
       5: aload_1
       6: arraylength
       7: anewarray     #6                  // class java/lang/String
      10: putfield      #7                  // Field basenames:[Ljava/lang/String;
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_1
      17: arraylength
      18: if_icmpge     47
      21: aload_1
      22: iload_2
      23: aaload
      24: astore_3
      25: aload_3
      26: ldc           #16                 // String Basename must not be empty
      28: invokestatic  #17                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      31: aload_0
      32: getfield      #7                  // Field basenames:[Ljava/lang/String;
      35: iload_2
      36: aload_3
      37: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;
      40: aastore
      41: iinc          2, 1
      44: goto          15
      47: goto          58
      50: aload_0
      51: iconst_0
      52: anewarray     #6                  // class java/lang/String
      55: putfield      #7                  // Field basenames:[Ljava/lang/String;
      58: return

  public void setDefaultEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field defaultEncoding:Ljava/lang/String;
       5: return

  public void setFallbackToSystemLocale(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field fallbackToSystemLocale:Z
       5: return

  public void setCacheSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: sipush        1000
       5: imul
       6: i2l
       7: putfield      #2                  // Field cacheMillis:J
      10: return

  public void setBundleClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field bundleClassLoader:Ljava/lang/ClassLoader;
       5: return

  protected java.lang.ClassLoader getBundleClassLoader();
    Code:
       0: aload_0
       1: getfield      #19                 // Field bundleClassLoader:Ljava/lang/ClassLoader;
       4: ifnull        14
       7: aload_0
       8: getfield      #19                 // Field bundleClassLoader:Ljava/lang/ClassLoader;
      11: goto          18
      14: aload_0
      15: getfield      #11                 // Field beanClassLoader:Ljava/lang/ClassLoader;
      18: areturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          12
       9: invokestatic  #10                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      12: putfield      #11                 // Field beanClassLoader:Ljava/lang/ClassLoader;
      15: return

  protected java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale);
    Code:
       0: aconst_null
       1: astore_3
       2: iconst_0
       3: istore        4
       5: aload_3
       6: ifnonnull     52
       9: iload         4
      11: aload_0
      12: getfield      #7                  // Field basenames:[Ljava/lang/String;
      15: arraylength
      16: if_icmpge     52
      19: aload_0
      20: aload_0
      21: getfield      #7                  // Field basenames:[Ljava/lang/String;
      24: iload         4
      26: aaload
      27: aload_2
      28: invokevirtual #20                 // Method getResourceBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      31: astore        5
      33: aload         5
      35: ifnull        46
      38: aload_0
      39: aload         5
      41: aload_1
      42: invokespecial #21                 // Method getStringOrNull:(Ljava/util/ResourceBundle;Ljava/lang/String;)Ljava/lang/String;
      45: astore_3
      46: iinc          4, 1
      49: goto          5
      52: aload_3
      53: areturn

  protected java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale);
    Code:
       0: aconst_null
       1: astore_3
       2: iconst_0
       3: istore        4
       5: aload_3
       6: ifnonnull     53
       9: iload         4
      11: aload_0
      12: getfield      #7                  // Field basenames:[Ljava/lang/String;
      15: arraylength
      16: if_icmpge     53
      19: aload_0
      20: aload_0
      21: getfield      #7                  // Field basenames:[Ljava/lang/String;
      24: iload         4
      26: aaload
      27: aload_2
      28: invokevirtual #20                 // Method getResourceBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      31: astore        5
      33: aload         5
      35: ifnull        47
      38: aload_0
      39: aload         5
      41: aload_1
      42: aload_2
      43: invokevirtual #22                 // Method getMessageFormat:(Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
      46: astore_3
      47: iinc          4, 1
      50: goto          5
      53: aload_3
      54: areturn

  protected java.util.ResourceBundle getResourceBundle(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cacheMillis:J
       4: lconst_0
       5: lcmp
       6: iflt          16
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #23                 // Method doGetBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      15: areturn
      16: aload_0
      17: getfield      #14                 // Field cachedResourceBundles:Ljava/util/Map;
      20: dup
      21: astore_3
      22: monitorenter
      23: aload_0
      24: getfield      #14                 // Field cachedResourceBundles:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #25                 // class java/util/Map
      36: astore        4
      38: aload         4
      40: ifnull        66
      43: aload         4
      45: aload_2
      46: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #26                 // class java/util/ResourceBundle
      54: astore        5
      56: aload         5
      58: ifnull        66
      61: aload         5
      63: aload_3
      64: monitorexit
      65: areturn
      66: aload_0
      67: aload_1
      68: aload_2
      69: invokevirtual #23                 // Method doGetBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      72: astore        5
      74: aload         4
      76: ifnonnull     101
      79: new           #12                 // class java/util/HashMap
      82: dup
      83: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      86: astore        4
      88: aload_0
      89: getfield      #14                 // Field cachedResourceBundles:Ljava/util/Map;
      92: aload_1
      93: aload         4
      95: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload         4
     103: aload_2
     104: aload         5
     106: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload         5
     114: aload_3
     115: monitorexit
     116: areturn
     117: astore        5
     119: aload_0
     120: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
     123: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     128: ifeq          172
     131: aload_0
     132: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
     135: new           #31                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #33                 // String ResourceBundle [
     144: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_1
     148: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #35                 // String ] not found for MessageSource:
     153: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload         5
     158: invokevirtual #36                 // Method java/util/MissingResourceException.getMessage:()Ljava/lang/String;
     161: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     172: aconst_null
     173: aload_3
     174: monitorexit
     175: areturn
     176: astore        6
     178: aload_3
     179: monitorexit
     180: aload         6
     182: athrow
    Exception table:
       from    to  target type
          66   114   117   Class java/util/MissingResourceException
          23    65   176   any
          66   116   176   any
         117   175   176   any
         176   180   176   any

  protected java.util.ResourceBundle doGetBundle(java.lang.String, java.util.Locale) throws java.util.MissingResourceException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultEncoding:Ljava/lang/String;
       4: ifnull        19
       7: ldc           #39                 // String ISO-8859-1
       9: aload_0
      10: getfield      #4                  // Field defaultEncoding:Ljava/lang/String;
      13: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          35
      19: aload_0
      20: getfield      #3                  // Field fallbackToSystemLocale:Z
      23: ifeq          35
      26: aload_0
      27: getfield      #2                  // Field cacheMillis:J
      30: lconst_0
      31: lcmp
      32: iflt          54
      35: aload_1
      36: aload_2
      37: aload_0
      38: invokevirtual #41                 // Method getBundleClassLoader:()Ljava/lang/ClassLoader;
      41: new           #42                 // class org/springframework/context/support/ResourceBundleMessageSource$MessageSourceControl
      44: dup
      45: aload_0
      46: aconst_null
      47: invokespecial #43                 // Method org/springframework/context/support/ResourceBundleMessageSource$MessageSourceControl."<init>":(Lorg/springframework/context/support/ResourceBundleMessageSource;Lorg/springframework/context/support/ResourceBundleMessageSource$1;)V
      50: invokestatic  #44                 // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;
      53: areturn
      54: aload_1
      55: aload_2
      56: aload_0
      57: invokevirtual #41                 // Method getBundleClassLoader:()Ljava/lang/ClassLoader;
      60: invokestatic  #45                 // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;
      63: areturn

  protected java.text.MessageFormat getMessageFormat(java.util.ResourceBundle, java.lang.String, java.util.Locale) throws java.util.MissingResourceException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
      12: aload_1
      13: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #25                 // class java/util/Map
      21: astore        5
      23: aconst_null
      24: astore        6
      26: aload         5
      28: ifnull        73
      31: aload         5
      33: aload_2
      34: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #25                 // class java/util/Map
      42: astore        6
      44: aload         6
      46: ifnull        73
      49: aload         6
      51: aload_3
      52: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #46                 // class java/text/MessageFormat
      60: astore        7
      62: aload         7
      64: ifnull        73
      67: aload         7
      69: aload         4
      71: monitorexit
      72: areturn
      73: aload_0
      74: aload_1
      75: aload_2
      76: invokespecial #21                 // Method getStringOrNull:(Ljava/util/ResourceBundle;Ljava/lang/String;)Ljava/lang/String;
      79: astore        7
      81: aload         7
      83: ifnull        164
      86: aload         5
      88: ifnonnull     113
      91: new           #12                 // class java/util/HashMap
      94: dup
      95: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      98: astore        5
     100: aload_0
     101: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
     104: aload_1
     105: aload         5
     107: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload         6
     115: ifnonnull     138
     118: new           #12                 // class java/util/HashMap
     121: dup
     122: invokespecial #13                 // Method java/util/HashMap."<init>":()V
     125: astore        6
     127: aload         5
     129: aload_2
     130: aload         6
     132: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: aload_0
     139: aload         7
     141: aload_3
     142: invokevirtual #47                 // Method createMessageFormat:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
     145: astore        8
     147: aload         6
     149: aload_3
     150: aload         8
     152: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: aload         8
     160: aload         4
     162: monitorexit
     163: areturn
     164: aconst_null
     165: aload         4
     167: monitorexit
     168: areturn
     169: astore        9
     171: aload         4
     173: monitorexit
     174: aload         9
     176: athrow
    Exception table:
       from    to  target type
           8    72   169   any
          73   163   169   any
         164   168   169   any
         169   174   169   any

  private java.lang.String getStringOrNull(java.util.ResourceBundle, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #48                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn
       6: astore_3
       7: aconst_null
       8: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/util/MissingResourceException

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #50                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #51                 // String : basenames=[
      19: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #7                  // Field basenames:[Ljava/lang/String;
      26: invokestatic  #52                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      29: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #53                 // String ]
      34: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: areturn

  static java.lang.String access$100(org.springframework.context.support.ResourceBundleMessageSource);
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultEncoding:Ljava/lang/String;
       4: areturn

  static boolean access$200(org.springframework.context.support.ResourceBundleMessageSource);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fallbackToSystemLocale:Z
       4: ireturn

  static long access$300(org.springframework.context.support.ResourceBundleMessageSource);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cacheMillis:J
       4: lreturn

  static java.util.Map access$400(org.springframework.context.support.ResourceBundleMessageSource);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
       4: areturn
}
