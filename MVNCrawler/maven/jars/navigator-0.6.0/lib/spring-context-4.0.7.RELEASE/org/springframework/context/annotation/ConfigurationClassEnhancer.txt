Compiled from "ConfigurationClassEnhancer.java"
class org.springframework.context.annotation.ConfigurationClassEnhancer {
  private static final org.springframework.cglib.proxy.Callback[] CALLBACKS;

  private static final org.springframework.context.annotation.ConfigurationClassEnhancer$ConditionalCallbackFilter CALLBACK_FILTER;

  private static final org.springframework.cglib.core.DefaultGeneratorStrategy GENERATOR_STRATEGY;

  private static final java.lang.String BEAN_FACTORY_FIELD;

  private static final org.apache.commons.logging.Log logger;

  org.springframework.context.annotation.ConfigurationClassEnhancer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Class<?> enhance(java.lang.Class<?>);
    Code:
       0: ldc           #3                  // class org/springframework/context/annotation/ConfigurationClassEnhancer$EnhancedConfiguration
       2: aload_1
       3: invokevirtual #4                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          46
       9: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      12: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      17: ifeq          44
      20: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #6                  // String Ignoring request to enhance %s as it has already been enhanced. This usually indicates that more than one ConfigurationClassPostProcessor has been registered (e.g. via <context:annotation-config>). This is harmless, but you may want check your configuration and remove one CCPP if possible
      25: iconst_1
      26: anewarray     #7                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_1
      32: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      35: aastore
      36: invokestatic  #9                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      44: aload_1
      45: areturn
      46: aload_0
      47: aload_0
      48: aload_1
      49: invokespecial #11                 // Method newEnhancer:(Ljava/lang/Class;)Lorg/springframework/cglib/proxy/Enhancer;
      52: invokespecial #12                 // Method createClass:(Lorg/springframework/cglib/proxy/Enhancer;)Ljava/lang/Class;
      55: astore_2
      56: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      59: invokeinterface #5,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      64: ifeq          98
      67: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      70: ldc           #13                 // String Successfully enhanced %s; enhanced class name is: %s
      72: iconst_2
      73: anewarray     #7                  // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload_1
      79: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      82: aastore
      83: dup
      84: iconst_1
      85: aload_2
      86: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      89: aastore
      90: invokestatic  #9                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      93: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      98: aload_2
      99: areturn

  private org.springframework.cglib.proxy.Enhancer newEnhancer(java.lang.Class<?>);
    Code:
       0: new           #14                 // class org/springframework/cglib/proxy/Enhancer
       3: dup
       4: invokespecial #15                 // Method org/springframework/cglib/proxy/Enhancer."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #16                 // Method org/springframework/cglib/proxy/Enhancer.setSuperclass:(Ljava/lang/Class;)V
      13: aload_2
      14: iconst_1
      15: anewarray     #17                 // class java/lang/Class
      18: dup
      19: iconst_0
      20: ldc           #3                  // class org/springframework/context/annotation/ConfigurationClassEnhancer$EnhancedConfiguration
      22: aastore
      23: invokevirtual #18                 // Method org/springframework/cglib/proxy/Enhancer.setInterfaces:([Ljava/lang/Class;)V
      26: aload_2
      27: iconst_0
      28: invokevirtual #19                 // Method org/springframework/cglib/proxy/Enhancer.setUseFactory:(Z)V
      31: aload_2
      32: getstatic     #20                 // Field org/springframework/cglib/core/SpringNamingPolicy.INSTANCE:Lorg/springframework/cglib/core/SpringNamingPolicy;
      35: invokevirtual #21                 // Method org/springframework/cglib/proxy/Enhancer.setNamingPolicy:(Lorg/springframework/cglib/core/NamingPolicy;)V
      38: aload_2
      39: getstatic     #22                 // Field GENERATOR_STRATEGY:Lorg/springframework/cglib/core/DefaultGeneratorStrategy;
      42: invokevirtual #23                 // Method org/springframework/cglib/proxy/Enhancer.setStrategy:(Lorg/springframework/cglib/core/GeneratorStrategy;)V
      45: aload_2
      46: getstatic     #24                 // Field CALLBACK_FILTER:Lorg/springframework/context/annotation/ConfigurationClassEnhancer$ConditionalCallbackFilter;
      49: invokevirtual #25                 // Method org/springframework/cglib/proxy/Enhancer.setCallbackFilter:(Lorg/springframework/cglib/proxy/CallbackFilter;)V
      52: aload_2
      53: getstatic     #24                 // Field CALLBACK_FILTER:Lorg/springframework/context/annotation/ConfigurationClassEnhancer$ConditionalCallbackFilter;
      56: invokevirtual #26                 // Method org/springframework/context/annotation/ConfigurationClassEnhancer$ConditionalCallbackFilter.getCallbackTypes:()[Ljava/lang/Class;
      59: invokevirtual #27                 // Method org/springframework/cglib/proxy/Enhancer.setCallbackTypes:([Ljava/lang/Class;)V
      62: aload_2
      63: areturn

  private java.lang.Class<?> createClass(org.springframework.cglib.proxy.Enhancer);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/springframework/cglib/proxy/Enhancer.createClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: getstatic     #29                 // Field CALLBACKS:[Lorg/springframework/cglib/proxy/Callback;
       9: invokestatic  #30                 // Method org/springframework/cglib/proxy/Enhancer.registerStaticCallbacks:(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;)V
      12: aload_2
      13: areturn

  static org.apache.commons.logging.Log access$400();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: iconst_4
       1: anewarray     #31                 // class org/springframework/cglib/proxy/Callback
       4: dup
       5: iconst_0
       6: new           #32                 // class org/springframework/context/annotation/ConfigurationClassEnhancer$BeanMethodInterceptor
       9: dup
      10: aconst_null
      11: invokespecial #33                 // Method org/springframework/context/annotation/ConfigurationClassEnhancer$BeanMethodInterceptor."<init>":(Lorg/springframework/context/annotation/ConfigurationClassEnhancer$1;)V
      14: aastore
      15: dup
      16: iconst_1
      17: new           #34                 // class org/springframework/context/annotation/ConfigurationClassEnhancer$DisposableBeanMethodInterceptor
      20: dup
      21: aconst_null
      22: invokespecial #35                 // Method org/springframework/context/annotation/ConfigurationClassEnhancer$DisposableBeanMethodInterceptor."<init>":(Lorg/springframework/context/annotation/ConfigurationClassEnhancer$1;)V
      25: aastore
      26: dup
      27: iconst_2
      28: new           #36                 // class org/springframework/context/annotation/ConfigurationClassEnhancer$BeanFactoryAwareMethodInterceptor
      31: dup
      32: aconst_null
      33: invokespecial #37                 // Method org/springframework/context/annotation/ConfigurationClassEnhancer$BeanFactoryAwareMethodInterceptor."<init>":(Lorg/springframework/context/annotation/ConfigurationClassEnhancer$1;)V
      36: aastore
      37: dup
      38: iconst_3
      39: getstatic     #38                 // Field org/springframework/cglib/proxy/NoOp.INSTANCE:Lorg/springframework/cglib/proxy/NoOp;
      42: aastore
      43: putstatic     #29                 // Field CALLBACKS:[Lorg/springframework/cglib/proxy/Callback;
      46: new           #39                 // class org/springframework/context/annotation/ConfigurationClassEnhancer$ConditionalCallbackFilter
      49: dup
      50: getstatic     #29                 // Field CALLBACKS:[Lorg/springframework/cglib/proxy/Callback;
      53: invokespecial #40                 // Method org/springframework/context/annotation/ConfigurationClassEnhancer$ConditionalCallbackFilter."<init>":([Lorg/springframework/cglib/proxy/Callback;)V
      56: putstatic     #24                 // Field CALLBACK_FILTER:Lorg/springframework/context/annotation/ConfigurationClassEnhancer$ConditionalCallbackFilter;
      59: new           #41                 // class org/springframework/context/annotation/ConfigurationClassEnhancer$BeanFactoryAwareGeneratorStrategy
      62: dup
      63: aconst_null
      64: invokespecial #42                 // Method org/springframework/context/annotation/ConfigurationClassEnhancer$BeanFactoryAwareGeneratorStrategy."<init>":(Lorg/springframework/context/annotation/ConfigurationClassEnhancer$1;)V
      67: putstatic     #22                 // Field GENERATOR_STRATEGY:Lorg/springframework/cglib/core/DefaultGeneratorStrategy;
      70: ldc           #43                 // class org/springframework/context/annotation/ConfigurationClassEnhancer
      72: invokestatic  #44                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      75: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      78: return
}
