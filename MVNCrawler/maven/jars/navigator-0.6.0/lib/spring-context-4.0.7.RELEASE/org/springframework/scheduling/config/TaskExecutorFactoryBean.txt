Compiled from "TaskExecutorFactoryBean.java"
public class org.springframework.scheduling.config.TaskExecutorFactoryBean implements org.springframework.beans.factory.FactoryBean<org.springframework.core.task.TaskExecutor>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  private java.lang.String poolSize;

  private java.lang.Integer queueCapacity;

  private java.lang.Object rejectedExecutionHandler;

  private java.lang.Integer keepAliveSeconds;

  private java.lang.String beanName;

  private org.springframework.core.task.TaskExecutor target;

  public org.springframework.scheduling.config.TaskExecutorFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setPoolSize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field poolSize:Ljava/lang/String;
       5: return

  public void setQueueCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
       8: return

  public void setRejectedExecutionHandler(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field rejectedExecutionHandler:Ljava/lang/Object;
       5: return

  public void setKeepAliveSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #6                  // Field keepAliveSeconds:Ljava/lang/Integer;
       8: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field beanName:Ljava/lang/String;
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: new           #8                  // class org/springframework/beans/BeanWrapperImpl
       3: dup
       4: ldc           #9                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor
       6: invokespecial #10                 // Method org/springframework/beans/BeanWrapperImpl."<init>":(Ljava/lang/Class;)V
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokespecial #11                 // Method determinePoolSizeRange:(Lorg/springframework/beans/BeanWrapper;)V
      15: aload_0
      16: getfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
      19: ifnull        34
      22: aload_1
      23: ldc           #12                 // String queueCapacity
      25: aload_0
      26: getfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
      29: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #6                  // Field keepAliveSeconds:Ljava/lang/Integer;
      38: ifnull        53
      41: aload_1
      42: ldc           #14                 // String keepAliveSeconds
      44: aload_0
      45: getfield      #6                  // Field keepAliveSeconds:Ljava/lang/Integer;
      48: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
      53: aload_0
      54: getfield      #5                  // Field rejectedExecutionHandler:Ljava/lang/Object;
      57: ifnull        72
      60: aload_1
      61: ldc           #15                 // String rejectedExecutionHandler
      63: aload_0
      64: getfield      #5                  // Field rejectedExecutionHandler:Ljava/lang/Object;
      67: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
      72: aload_0
      73: getfield      #7                  // Field beanName:Ljava/lang/String;
      76: ifnull        109
      79: aload_1
      80: ldc           #16                 // String threadNamePrefix
      82: new           #17                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      89: aload_0
      90: getfield      #7                  // Field beanName:Ljava/lang/String;
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #20                 // String -
      98: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
     109: aload_0
     110: aload_1
     111: invokeinterface #22,  1           // InterfaceMethod org/springframework/beans/BeanWrapper.getWrappedInstance:()Ljava/lang/Object;
     116: checkcast     #23                 // class org/springframework/core/task/TaskExecutor
     119: putfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
     122: aload_0
     123: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
     126: instanceof    #25                 // class org/springframework/beans/factory/InitializingBean
     129: ifeq          144
     132: aload_0
     133: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
     136: checkcast     #25                 // class org/springframework/beans/factory/InitializingBean
     139: invokeinterface #26,  1           // InterfaceMethod org/springframework/beans/factory/InitializingBean.afterPropertiesSet:()V
     144: return

  private void determinePoolSizeRange(org.springframework.beans.BeanWrapper);
    Code:
       0: aload_0
       1: getfield      #2                  // Field poolSize:Ljava/lang/String;
       4: invokestatic  #27                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          212
      10: aload_0
      11: getfield      #2                  // Field poolSize:Ljava/lang/String;
      14: bipush        45
      16: invokevirtual #28                 // Method java/lang/String.indexOf:(I)I
      19: istore        4
      21: iload         4
      23: iconst_m1
      24: if_icmpeq     122
      27: aload_0
      28: getfield      #2                  // Field poolSize:Ljava/lang/String;
      31: iconst_0
      32: iload         4
      34: invokevirtual #29                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: invokestatic  #30                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      40: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
      43: istore_2
      44: aload_0
      45: getfield      #2                  // Field poolSize:Ljava/lang/String;
      48: iload         4
      50: iconst_1
      51: iadd
      52: aload_0
      53: getfield      #2                  // Field poolSize:Ljava/lang/String;
      56: invokevirtual #32                 // Method java/lang/String.length:()I
      59: invokevirtual #29                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      62: invokestatic  #30                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      65: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
      68: istore_3
      69: iload_2
      70: iload_3
      71: if_icmple     84
      74: new           #33                 // class java/lang/IllegalArgumentException
      77: dup
      78: ldc           #34                 // String Lower bound of pool-size range must not exceed the upper bound
      80: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload_0
      85: getfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
      88: ifnonnull     143
      91: iload_2
      92: ifne          112
      95: aload_1
      96: ldc           #36                 // String allowCoreThreadTimeOut
      98: iconst_1
      99: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     102: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
     107: iload_3
     108: istore_2
     109: goto          143
     112: new           #33                 // class java/lang/IllegalArgumentException
     115: dup
     116: ldc           #38                 // String A non-zero lower bound for the size range requires a queue-capacity value
     118: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: aload_0
     123: getfield      #2                  // Field poolSize:Ljava/lang/String;
     126: invokestatic  #30                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     129: astore        5
     131: aload         5
     133: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
     136: istore_2
     137: aload         5
     139: invokevirtual #31                 // Method java/lang/Integer.intValue:()I
     142: istore_3
     143: aload_1
     144: ldc           #39                 // String corePoolSize
     146: iload_2
     147: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     150: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
     155: aload_1
     156: ldc           #40                 // String maxPoolSize
     158: iload_3
     159: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     162: invokeinterface #13,  3           // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
     167: goto          212
     170: astore_2
     171: new           #33                 // class java/lang/IllegalArgumentException
     174: dup
     175: new           #17                 // class java/lang/StringBuilder
     178: dup
     179: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     182: ldc           #42                 // String Invalid pool-size value [
     184: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: aload_0
     188: getfield      #2                  // Field poolSize:Ljava/lang/String;
     191: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #43                 // String ]: only single
     196: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: ldc           #44                 // String maximum integer (e.g. \"5\") and minimum-maximum range (e.g. \"3-5\") are supported
     201: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     207: aload_2
     208: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     211: athrow
     212: return
    Exception table:
       from    to  target type
          10   167   170   Class java/lang/NumberFormatException

  public org.springframework.core.task.TaskExecutor getObject();
    Code:
       0: aload_0
       1: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
       4: areturn

  public java.lang.Class<? extends org.springframework.core.task.TaskExecutor> getObjectType();
    Code:
       0: aload_0
       1: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
      11: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #9                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
       4: instanceof    #47                 // class org/springframework/beans/factory/DisposableBean
       7: ifeq          22
      10: aload_0
      11: getfield      #24                 // Field target:Lorg/springframework/core/task/TaskExecutor;
      14: checkcast     #47                 // class org/springframework/beans/factory/DisposableBean
      17: invokeinterface #48,  1           // InterfaceMethod org/springframework/beans/factory/DisposableBean.destroy:()V
      22: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getObject:()Lorg/springframework/core/task/TaskExecutor;
       4: areturn
}
