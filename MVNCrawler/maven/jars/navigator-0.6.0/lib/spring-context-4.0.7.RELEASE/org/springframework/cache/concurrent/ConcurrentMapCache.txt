Compiled from "ConcurrentMapCache.java"
public class org.springframework.cache.concurrent.ConcurrentMapCache implements org.springframework.cache.Cache {
  private static final java.lang.Object NULL_HOLDER;

  private final java.lang.String name;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object> store;

  private final boolean allowNullValues;

  public org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       5: dup
       6: sipush        256
       9: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      12: iconst_1
      13: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;Z)V
      16: return

  public org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       5: dup
       6: sipush        256
       9: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      12: iload_2
      13: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;Z)V
      16: return

  public org.springframework.cache.concurrent.ConcurrentMapCache(java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String Name must not be null
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String Store must not be null
      13: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field name:Ljava/lang/String;
      21: aload_0
      22: aload_2
      23: putfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: iload_3
      28: putfield      #10                 // Field allowNullValues:Z
      31: return

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Ljava/lang/String;
       4: areturn

  public final java.util.concurrent.ConcurrentMap<java.lang.Object, java.lang.Object> getNativeCache();
    Code:
       0: aload_0
       1: getfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public final boolean isAllowNullValues();
    Code:
       0: aload_0
       1: getfield      #10                 // Field allowNullValues:Z
       4: ireturn

  public org.springframework.cache.Cache$ValueWrapper get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        30
      15: new           #12                 // class org/springframework/cache/support/SimpleValueWrapper
      18: dup
      19: aload_0
      20: aload_2
      21: invokevirtual #13                 // Method fromStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokespecial #14                 // Method org/springframework/cache/support/SimpleValueWrapper."<init>":(Ljava/lang/Object;)V
      27: goto          31
      30: aconst_null
      31: areturn

  public <T> T get(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
       5: aload_1
       6: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokevirtual #13                 // Method fromStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_3
      15: aload_3
      16: ifnull        70
      19: aload_2
      20: ifnull        70
      23: aload_2
      24: aload_3
      25: invokevirtual #15                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      28: ifne          70
      31: new           #16                 // class java/lang/IllegalStateException
      34: dup
      35: new           #17                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #19                 // String Cached value is not of required type [
      44: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_2
      48: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #22                 // String ]:
      56: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_3
      60: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_3
      71: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokevirtual #26                 // Method toStoreValue:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #27,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public void evict(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #9                  // Field store:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  protected java.lang.Object fromStoreValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field allowNullValues:Z
       4: ifeq          16
       7: aload_1
       8: getstatic     #30                 // Field NULL_HOLDER:Ljava/lang/Object;
      11: if_acmpne     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: areturn

  protected java.lang.Object toStoreValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field allowNullValues:Z
       4: ifeq          15
       7: aload_1
       8: ifnonnull     15
      11: getstatic     #30                 // Field NULL_HOLDER:Ljava/lang/Object;
      14: areturn
      15: aload_1
      16: areturn

  public java.lang.Object getNativeCache();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getNativeCache:()Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static {};
    Code:
       0: new           #32                 // class org/springframework/cache/concurrent/ConcurrentMapCache$NullHolder
       3: dup
       4: aconst_null
       5: invokespecial #33                 // Method org/springframework/cache/concurrent/ConcurrentMapCache$NullHolder."<init>":(Lorg/springframework/cache/concurrent/ConcurrentMapCache$1;)V
       8: putstatic     #30                 // Field NULL_HOLDER:Ljava/lang/Object;
      11: return
}
