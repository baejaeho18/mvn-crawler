Compiled from "JndiRmiServiceExporter.java"
public class org.springframework.remoting.rmi.JndiRmiServiceExporter extends org.springframework.remoting.rmi.RmiBasedExporter implements org.springframework.beans.factory.InitializingBean,org.springframework.beans.factory.DisposableBean {
  private org.springframework.jndi.JndiTemplate jndiTemplate;

  private java.lang.String jndiName;

  private java.rmi.Remote exportedObject;

  public org.springframework.remoting.rmi.JndiRmiServiceExporter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/remoting/rmi/RmiBasedExporter."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/jndi/JndiTemplate
       8: dup
       9: invokespecial #3                  // Method org/springframework/jndi/JndiTemplate."<init>":()V
      12: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      15: return

  public void setJndiTemplate(org.springframework.jndi.JndiTemplate);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          16
       9: new           #2                  // class org/springframework/jndi/JndiTemplate
      12: dup
      13: invokespecial #3                  // Method org/springframework/jndi/JndiTemplate."<init>":()V
      16: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      19: return

  public void setJndiEnvironment(java.util.Properties);
    Code:
       0: aload_0
       1: new           #2                  // class org/springframework/jndi/JndiTemplate
       4: dup
       5: aload_1
       6: invokespecial #5                  // Method org/springframework/jndi/JndiTemplate."<init>":(Ljava/util/Properties;)V
       9: putfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      12: return

  public void setJndiName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field jndiName:Ljava/lang/String;
       5: return

  public void afterPropertiesSet() throws javax.naming.NamingException, java.rmi.RemoteException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method prepare:()V
       4: return

  public void prepare() throws javax.naming.NamingException, java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field jndiName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #8                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #9                  // String Property \'jndiName\' is required
      13: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: invokevirtual #11                 // Method getObjectToExport:()Ljava/rmi/Remote;
      22: putfield      #12                 // Field exportedObject:Ljava/rmi/Remote;
      25: aload_0
      26: getfield      #12                 // Field exportedObject:Ljava/rmi/Remote;
      29: invokestatic  #13                 // Method javax/rmi/PortableRemoteObject.exportObject:(Ljava/rmi/Remote;)V
      32: aload_0
      33: invokevirtual #14                 // Method rebind:()V
      36: return

  public void rebind() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
       9: ifeq          48
      12: aload_0
      13: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #17                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #19                 // String Binding RMI service to JNDI location [
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #6                  // Field jndiName:Ljava/lang/String;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #21                 // String ]
      37: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      52: aload_0
      53: getfield      #6                  // Field jndiName:Ljava/lang/String;
      56: aload_0
      57: getfield      #12                 // Field exportedObject:Ljava/rmi/Remote;
      60: invokevirtual #24                 // Method org/springframework/jndi/JndiTemplate.rebind:(Ljava/lang/String;Ljava/lang/Object;)V
      63: return

  public void destroy() throws javax.naming.NamingException, java.rmi.NoSuchObjectException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
       9: ifeq          48
      12: aload_0
      13: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #17                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #25                 // String Unbinding RMI service from JNDI location [
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #6                  // Field jndiName:Ljava/lang/String;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #21                 // String ]
      37: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #4                  // Field jndiTemplate:Lorg/springframework/jndi/JndiTemplate;
      52: aload_0
      53: getfield      #6                  // Field jndiName:Ljava/lang/String;
      56: invokevirtual #26                 // Method org/springframework/jndi/JndiTemplate.unbind:(Ljava/lang/String;)V
      59: aload_0
      60: getfield      #12                 // Field exportedObject:Ljava/rmi/Remote;
      63: invokestatic  #27                 // Method javax/rmi/PortableRemoteObject.unexportObject:(Ljava/rmi/Remote;)V
      66: return
}
