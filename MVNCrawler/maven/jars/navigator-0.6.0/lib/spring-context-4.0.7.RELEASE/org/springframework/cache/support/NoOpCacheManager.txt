Compiled from "NoOpCacheManager.java"
public class org.springframework.cache.support.NoOpCacheManager implements org.springframework.cache.CacheManager {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.cache.Cache> caches;

  private final java.util.Set<java.lang.String> cacheNames;

  public org.springframework.cache.support.NoOpCacheManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        16
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field caches:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: new           #5                  // class java/util/LinkedHashSet
      21: dup
      22: bipush        16
      24: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":(I)V
      27: putfield      #7                  // Field cacheNames:Ljava/util/Set;
      30: return

  public org.springframework.cache.Cache getCache(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field caches:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/springframework/cache/Cache
      13: astore_2
      14: aload_2
      15: ifnonnull     67
      18: aload_0
      19: getfield      #4                  // Field caches:Ljava/util/concurrent/ConcurrentMap;
      22: aload_1
      23: new           #10                 // class org/springframework/cache/support/NoOpCacheManager$NoOpCache
      26: dup
      27: aload_1
      28: invokespecial #11                 // Method org/springframework/cache/support/NoOpCacheManager$NoOpCache."<init>":(Ljava/lang/String;)V
      31: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: getfield      #7                  // Field cacheNames:Ljava/util/Set;
      41: dup
      42: astore_3
      43: monitorenter
      44: aload_0
      45: getfield      #7                  // Field cacheNames:Ljava/util/Set;
      48: aload_1
      49: invokeinterface #13,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_3
      56: monitorexit
      57: goto          67
      60: astore        4
      62: aload_3
      63: monitorexit
      64: aload         4
      66: athrow
      67: aload_0
      68: getfield      #4                  // Field caches:Ljava/util/concurrent/ConcurrentMap;
      71: aload_1
      72: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #9                  // class org/springframework/cache/Cache
      80: areturn
    Exception table:
       from    to  target type
          44    57    60   any
          60    64    60   any

  public java.util.Collection<java.lang.String> getCacheNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cacheNames:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field cacheNames:Ljava/util/Set;
      11: invokestatic  #14                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      14: aload_1
      15: monitorexit
      16: areturn
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
    Exception table:
       from    to  target type
           7    16    17   any
          17    20    17   any
}
