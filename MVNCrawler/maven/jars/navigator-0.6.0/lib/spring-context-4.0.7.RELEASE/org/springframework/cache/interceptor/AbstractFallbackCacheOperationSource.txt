Compiled from "AbstractFallbackCacheOperationSource.java"
public abstract class org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource implements org.springframework.cache.interceptor.CacheOperationSource {
  private static final java.util.Collection<org.springframework.cache.interceptor.CacheOperation> NULL_CACHING_ATTRIBUTE;

  protected final org.apache.commons.logging.Log logger;

  final java.util.Map<java.lang.Object, java.util.Collection<org.springframework.cache.interceptor.CacheOperation>> attributeCache;

  public org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: sipush        1024
      23: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      26: putfield      #7                  // Field attributeCache:Ljava/util/Map;
      29: return

  public java.util.Collection<org.springframework.cache.interceptor.CacheOperation> getCacheOperations(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #8                  // Method getCacheKey:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Object;
       6: astore_3
       7: aload_0
       8: getfield      #7                  // Field attributeCache:Ljava/util/Map;
      11: aload_3
      12: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #10                 // class java/util/Collection
      20: astore        4
      22: aload         4
      24: ifnull        40
      27: aload         4
      29: getstatic     #11                 // Field NULL_CACHING_ATTRIBUTE:Ljava/util/Collection;
      32: if_acmpne     37
      35: aconst_null
      36: areturn
      37: aload         4
      39: areturn
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokespecial #12                 // Method computeCacheOperations:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/Collection;
      46: astore        5
      48: aload         5
      50: ifnonnull     70
      53: aload_0
      54: getfield      #7                  // Field attributeCache:Ljava/util/Map;
      57: aload_3
      58: getstatic     #11                 // Field NULL_CACHING_ATTRIBUTE:Ljava/util/Collection;
      61: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: goto          136
      70: aload_0
      71: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      79: ifeq          123
      82: aload_0
      83: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      86: new           #15                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #17                 // String Adding cacheable method \'
      95: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #19                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     102: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #20                 // String \' with attribute:
     107: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload         5
     112: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     123: aload_0
     124: getfield      #7                  // Field attributeCache:Ljava/util/Map;
     127: aload_3
     128: aload         5
     130: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: aload         5
     138: areturn

  protected java.lang.Object getCacheKey(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: new           #24                 // class org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource$DefaultCacheKey
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #25                 // Method org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource$DefaultCacheKey."<init>":(Ljava/lang/reflect/Method;Ljava/lang/Class;)V
       9: areturn

  private java.util.Collection<org.springframework.cache.interceptor.CacheOperation> computeCacheOperations(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method allowPublicMethodsOnly:()Z
       4: ifeq          19
       7: aload_1
       8: invokevirtual #27                 // Method java/lang/reflect/Method.getModifiers:()I
      11: invokestatic  #28                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      14: ifne          19
      17: aconst_null
      18: areturn
      19: aload_1
      20: aload_2
      21: invokestatic  #29                 // Method org/springframework/util/ClassUtils.getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      24: astore_3
      25: aload_3
      26: invokestatic  #30                 // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #31                 // Method findCacheOperations:(Ljava/lang/reflect/Method;)Ljava/util/Collection;
      35: astore        4
      37: aload         4
      39: ifnull        45
      42: aload         4
      44: areturn
      45: aload_0
      46: aload_3
      47: invokevirtual #32                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      50: invokevirtual #33                 // Method findCacheOperations:(Ljava/lang/Class;)Ljava/util/Collection;
      53: astore        4
      55: aload         4
      57: ifnull        63
      60: aload         4
      62: areturn
      63: aload_3
      64: aload_1
      65: if_acmpeq     92
      68: aload_0
      69: aload_1
      70: invokevirtual #31                 // Method findCacheOperations:(Ljava/lang/reflect/Method;)Ljava/util/Collection;
      73: astore        4
      75: aload         4
      77: ifnull        83
      80: aload         4
      82: areturn
      83: aload_0
      84: aload_1
      85: invokevirtual #32                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      88: invokevirtual #33                 // Method findCacheOperations:(Ljava/lang/Class;)Ljava/util/Collection;
      91: areturn
      92: aconst_null
      93: areturn

  protected abstract java.util.Collection<org.springframework.cache.interceptor.CacheOperation> findCacheOperations(java.lang.reflect.Method);

  protected abstract java.util.Collection<org.springframework.cache.interceptor.CacheOperation> findCacheOperations(java.lang.Class<?>);

  protected boolean allowPublicMethodsOnly();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: invokestatic  #34                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: putstatic     #11                 // Field NULL_CACHING_ATTRIBUTE:Ljava/util/Collection;
       6: return
}
