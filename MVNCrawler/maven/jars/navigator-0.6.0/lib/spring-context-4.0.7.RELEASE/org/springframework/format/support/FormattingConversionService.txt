Compiled from "FormattingConversionService.java"
public class org.springframework.format.support.FormattingConversionService extends org.springframework.core.convert.support.GenericConversionService implements org.springframework.format.FormatterRegistry,org.springframework.context.EmbeddedValueResolverAware {
  private org.springframework.util.StringValueResolver embeddedValueResolver;

  private final java.util.Map<org.springframework.format.support.FormattingConversionService$AnnotationConverterKey, org.springframework.core.convert.converter.GenericConverter> cachedPrinters;

  private final java.util.Map<org.springframework.format.support.FormattingConversionService$AnnotationConverterKey, org.springframework.core.convert.converter.GenericConverter> cachedParsers;

  public org.springframework.format.support.FormattingConversionService();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/core/convert/support/GenericConversionService."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        64
      11: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #2                  // Field cachedPrinters:Ljava/util/Map;
      17: aload_0
      18: new           #4                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: bipush        64
      24: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      27: putfield      #1                  // Field cachedParsers:Ljava/util/Map;
      30: return

  public void setEmbeddedValueResolver(org.springframework.util.StringValueResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
       5: return

  public void addFormatter(org.springframework.format.Formatter<?>);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #8                  // class org/springframework/format/Formatter
       6: invokestatic  #9                  // Method org/springframework/core/GenericTypeResolver.resolveTypeArgument:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_2
      10: aload_2
      11: ifnonnull     52
      14: new           #10                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #11                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #13                 // String Unable to extract parameterized field type argument from Formatter [
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #16                 // String ]; does the formatter parameterize the <T> generic type?
      42: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: aload_2
      54: aload_1
      55: invokevirtual #19                 // Method addFormatterForFieldType:(Ljava/lang/Class;Lorg/springframework/format/Formatter;)V
      58: return

  public void addFormatterForFieldType(java.lang.Class<?>, org.springframework.format.Formatter<?>);
    Code:
       0: aload_0
       1: new           #20                 // class org/springframework/format/support/FormattingConversionService$PrinterConverter
       4: dup
       5: aload_1
       6: aload_2
       7: aload_0
       8: invokespecial #21                 // Method org/springframework/format/support/FormattingConversionService$PrinterConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/core/convert/ConversionService;)V
      11: invokevirtual #22                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      14: aload_0
      15: new           #23                 // class org/springframework/format/support/FormattingConversionService$ParserConverter
      18: dup
      19: aload_1
      20: aload_2
      21: aload_0
      22: invokespecial #24                 // Method org/springframework/format/support/FormattingConversionService$ParserConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Parser;Lorg/springframework/core/convert/ConversionService;)V
      25: invokevirtual #22                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      28: return

  public void addFormatterForFieldType(java.lang.Class<?>, org.springframework.format.Printer<?>, org.springframework.format.Parser<?>);
    Code:
       0: aload_0
       1: new           #20                 // class org/springframework/format/support/FormattingConversionService$PrinterConverter
       4: dup
       5: aload_1
       6: aload_2
       7: aload_0
       8: invokespecial #21                 // Method org/springframework/format/support/FormattingConversionService$PrinterConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/core/convert/ConversionService;)V
      11: invokevirtual #22                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      14: aload_0
      15: new           #23                 // class org/springframework/format/support/FormattingConversionService$ParserConverter
      18: dup
      19: aload_1
      20: aload_3
      21: aload_0
      22: invokespecial #24                 // Method org/springframework/format/support/FormattingConversionService$ParserConverter."<init>":(Ljava/lang/Class;Lorg/springframework/format/Parser;Lorg/springframework/core/convert/ConversionService;)V
      25: invokevirtual #22                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      28: return

  public void addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #25                 // class org/springframework/format/AnnotationFormatterFactory
       6: invokestatic  #9                  // Method org/springframework/core/GenericTypeResolver.resolveTypeArgument:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
       9: astore_2
      10: aload_2
      11: ifnonnull     52
      14: new           #10                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #11                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #26                 // String Unable to extract parameterized Annotation type argument from AnnotationFormatterFactory [
      27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #27                 // String ]; does the factory parameterize the <A extends Annotation> generic type?
      42: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: getfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
      56: ifnull        79
      59: aload_1
      60: instanceof    #28                 // class org/springframework/context/EmbeddedValueResolverAware
      63: ifeq          79
      66: aload_1
      67: checkcast     #28                 // class org/springframework/context/EmbeddedValueResolverAware
      70: aload_0
      71: getfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
      74: invokeinterface #29,  2           // InterfaceMethod org/springframework/context/EmbeddedValueResolverAware.setEmbeddedValueResolver:(Lorg/springframework/util/StringValueResolver;)V
      79: aload_1
      80: invokeinterface #30,  1           // InterfaceMethod org/springframework/format/AnnotationFormatterFactory.getFieldTypes:()Ljava/util/Set;
      85: astore_3
      86: aload_3
      87: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      92: astore        4
      94: aload         4
      96: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          151
     104: aload         4
     106: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #34                 // class java/lang/Class
     114: astore        5
     116: aload_0
     117: new           #35                 // class org/springframework/format/support/FormattingConversionService$AnnotationPrinterConverter
     120: dup
     121: aload_0
     122: aload_2
     123: aload_1
     124: aload         5
     126: invokespecial #36                 // Method org/springframework/format/support/FormattingConversionService$AnnotationPrinterConverter."<init>":(Lorg/springframework/format/support/FormattingConversionService;Ljava/lang/Class;Lorg/springframework/format/AnnotationFormatterFactory;Ljava/lang/Class;)V
     129: invokevirtual #22                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
     132: aload_0
     133: new           #37                 // class org/springframework/format/support/FormattingConversionService$AnnotationParserConverter
     136: dup
     137: aload_0
     138: aload_2
     139: aload_1
     140: aload         5
     142: invokespecial #38                 // Method org/springframework/format/support/FormattingConversionService$AnnotationParserConverter."<init>":(Lorg/springframework/format/support/FormattingConversionService;Ljava/lang/Class;Lorg/springframework/format/AnnotationFormatterFactory;Ljava/lang/Class;)V
     145: invokevirtual #22                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
     148: goto          94
     151: return

  static java.util.Map access$000(org.springframework.format.support.FormattingConversionService);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cachedPrinters:Ljava/util/Map;
       4: areturn

  static java.util.Map access$100(org.springframework.format.support.FormattingConversionService);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cachedParsers:Ljava/util/Map;
       4: areturn
}
