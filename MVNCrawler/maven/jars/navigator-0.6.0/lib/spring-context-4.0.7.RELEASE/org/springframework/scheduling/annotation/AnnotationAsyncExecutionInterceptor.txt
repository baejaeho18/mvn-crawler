Compiled from "AnnotationAsyncExecutionInterceptor.java"
public class org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor extends org.springframework.aop.interceptor.AsyncExecutionInterceptor {
  public org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/aop/interceptor/AsyncExecutionInterceptor."<init>":(Ljava/util/concurrent/Executor;)V
       5: return

  protected java.lang.String getExecutorQualifier(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: ldc           #2                  // class org/springframework/scheduling/annotation/Async
       3: invokestatic  #3                  // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #2                  // class org/springframework/scheduling/annotation/Async
       9: astore_2
      10: aload_2
      11: ifnonnull     27
      14: aload_1
      15: invokevirtual #4                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      18: ldc           #2                  // class org/springframework/scheduling/annotation/Async
      20: invokestatic  #5                  // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      23: checkcast     #2                  // class org/springframework/scheduling/annotation/Async
      26: astore_2
      27: aload_2
      28: ifnull        40
      31: aload_2
      32: invokeinterface #6,  1            // InterfaceMethod org/springframework/scheduling/annotation/Async.value:()Ljava/lang/String;
      37: goto          41
      40: aconst_null
      41: areturn
}
