Compiled from "DataBinder.java"
public class org.springframework.validation.DataBinder implements org.springframework.beans.PropertyEditorRegistry,org.springframework.beans.TypeConverter {
  public static final java.lang.String DEFAULT_OBJECT_NAME;

  public static final int DEFAULT_AUTO_GROW_COLLECTION_LIMIT;

  protected static final org.apache.commons.logging.Log logger;

  private final java.lang.Object target;

  private final java.lang.String objectName;

  private org.springframework.validation.AbstractPropertyBindingResult bindingResult;

  private org.springframework.beans.SimpleTypeConverter typeConverter;

  private boolean ignoreUnknownFields;

  private boolean ignoreInvalidFields;

  private boolean autoGrowNestedPaths;

  private int autoGrowCollectionLimit;

  private java.lang.String[] allowedFields;

  private java.lang.String[] disallowedFields;

  private java.lang.String[] requiredFields;

  private org.springframework.validation.BindingErrorProcessor bindingErrorProcessor;

  private final java.util.List<org.springframework.validation.Validator> validators;

  private org.springframework.core.convert.ConversionService conversionService;

  public org.springframework.validation.DataBinder(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String target
       4: invokespecial #3                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/String;)V
       7: return

  public org.springframework.validation.DataBinder(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #5                  // Field ignoreUnknownFields:Z
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field ignoreInvalidFields:Z
      14: aload_0
      15: iconst_1
      16: putfield      #7                  // Field autoGrowNestedPaths:Z
      19: aload_0
      20: sipush        256
      23: putfield      #8                  // Field autoGrowCollectionLimit:I
      26: aload_0
      27: new           #9                  // class org/springframework/validation/DefaultBindingErrorProcessor
      30: dup
      31: invokespecial #10                 // Method org/springframework/validation/DefaultBindingErrorProcessor."<init>":()V
      34: putfield      #11                 // Field bindingErrorProcessor:Lorg/springframework/validation/BindingErrorProcessor;
      37: aload_0
      38: new           #12                 // class java/util/ArrayList
      41: dup
      42: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #14                 // Field validators:Ljava/util/List;
      48: aload_0
      49: aload_1
      50: putfield      #15                 // Field target:Ljava/lang/Object;
      53: aload_0
      54: aload_2
      55: putfield      #16                 // Field objectName:Ljava/lang/String;
      58: return

  public java.lang.Object getTarget();
    Code:
       0: aload_0
       1: getfield      #15                 // Field target:Ljava/lang/Object;
       4: areturn

  public java.lang.String getObjectName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field objectName:Ljava/lang/String;
       4: areturn

  public void setAutoGrowNestedPaths(boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #18                 // String DataBinder is already initialized - call setAutoGrowNestedPaths before other configuration methods
      14: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: iload_1
      19: putfield      #7                  // Field autoGrowNestedPaths:Z
      22: return

  public boolean isAutoGrowNestedPaths();
    Code:
       0: aload_0
       1: getfield      #7                  // Field autoGrowNestedPaths:Z
       4: ireturn

  public void setAutoGrowCollectionLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field autoGrowCollectionLimit:I
       5: return

  public int getAutoGrowCollectionLimit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field autoGrowCollectionLimit:I
       4: ireturn

  public void initBeanPropertyAccess();
    Code:
       0: aload_0
       1: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #20                 // String DataBinder is already initialized - call initBeanPropertyAccess before other configuration methods
      14: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: new           #21                 // class org/springframework/validation/BeanPropertyBindingResult
      21: dup
      22: aload_0
      23: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      26: aload_0
      27: invokevirtual #23                 // Method getObjectName:()Ljava/lang/String;
      30: aload_0
      31: invokevirtual #24                 // Method isAutoGrowNestedPaths:()Z
      34: aload_0
      35: invokevirtual #25                 // Method getAutoGrowCollectionLimit:()I
      38: invokespecial #26                 // Method org/springframework/validation/BeanPropertyBindingResult."<init>":(Ljava/lang/Object;Ljava/lang/String;ZI)V
      41: putfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      44: aload_0
      45: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      48: ifnull        62
      51: aload_0
      52: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      55: aload_0
      56: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      59: invokevirtual #28                 // Method org/springframework/validation/AbstractPropertyBindingResult.initConversion:(Lorg/springframework/core/convert/ConversionService;)V
      62: return

  public void initDirectFieldAccess();
    Code:
       0: aload_0
       1: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #29                 // String DataBinder is already initialized - call initDirectFieldAccess before other configuration methods
      14: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: new           #30                 // class org/springframework/validation/DirectFieldBindingResult
      21: dup
      22: aload_0
      23: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      26: aload_0
      27: invokevirtual #23                 // Method getObjectName:()Ljava/lang/String;
      30: invokespecial #31                 // Method org/springframework/validation/DirectFieldBindingResult."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      33: putfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      36: aload_0
      37: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      40: ifnull        54
      43: aload_0
      44: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      47: aload_0
      48: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      51: invokevirtual #28                 // Method org/springframework/validation/AbstractPropertyBindingResult.initConversion:(Lorg/springframework/core/convert/ConversionService;)V
      54: return

  protected org.springframework.validation.AbstractPropertyBindingResult getInternalBindingResult();
    Code:
       0: aload_0
       1: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #32                 // Method initBeanPropertyAccess:()V
      11: aload_0
      12: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      15: areturn

  protected org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: invokevirtual #34                 // Method org/springframework/validation/AbstractPropertyBindingResult.getPropertyAccessor:()Lorg/springframework/beans/ConfigurablePropertyAccessor;
       7: areturn

  protected org.springframework.beans.SimpleTypeConverter getSimpleTypeConverter();
    Code:
       0: aload_0
       1: getfield      #35                 // Field typeConverter:Lorg/springframework/beans/SimpleTypeConverter;
       4: ifnonnull     36
       7: aload_0
       8: new           #36                 // class org/springframework/beans/SimpleTypeConverter
      11: dup
      12: invokespecial #37                 // Method org/springframework/beans/SimpleTypeConverter."<init>":()V
      15: putfield      #35                 // Field typeConverter:Lorg/springframework/beans/SimpleTypeConverter;
      18: aload_0
      19: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      22: ifnull        36
      25: aload_0
      26: getfield      #35                 // Field typeConverter:Lorg/springframework/beans/SimpleTypeConverter;
      29: aload_0
      30: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      33: invokevirtual #38                 // Method org/springframework/beans/SimpleTypeConverter.setConversionService:(Lorg/springframework/core/convert/ConversionService;)V
      36: aload_0
      37: getfield      #35                 // Field typeConverter:Lorg/springframework/beans/SimpleTypeConverter;
      40: areturn

  protected org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
       4: ifnull        15
       7: aload_0
       8: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
      11: invokevirtual #34                 // Method org/springframework/validation/AbstractPropertyBindingResult.getPropertyAccessor:()Lorg/springframework/beans/ConfigurablePropertyAccessor;
      14: areturn
      15: aload_0
      16: invokevirtual #39                 // Method getSimpleTypeConverter:()Lorg/springframework/beans/SimpleTypeConverter;
      19: areturn

  protected org.springframework.beans.TypeConverter getTypeConverter();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
       4: ifnull        15
       7: aload_0
       8: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
      11: invokevirtual #34                 // Method org/springframework/validation/AbstractPropertyBindingResult.getPropertyAccessor:()Lorg/springframework/beans/ConfigurablePropertyAccessor;
      14: areturn
      15: aload_0
      16: invokevirtual #39                 // Method getSimpleTypeConverter:()Lorg/springframework/beans/SimpleTypeConverter;
      19: areturn

  public org.springframework.validation.BindingResult getBindingResult();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: areturn

  public void setIgnoreUnknownFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field ignoreUnknownFields:Z
       5: return

  public boolean isIgnoreUnknownFields();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ignoreUnknownFields:Z
       4: ireturn

  public void setIgnoreInvalidFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field ignoreInvalidFields:Z
       5: return

  public boolean isIgnoreInvalidFields();
    Code:
       0: aload_0
       1: getfield      #6                  // Field ignoreInvalidFields:Z
       4: ireturn

  public void setAllowedFields(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method org/springframework/beans/PropertyAccessorUtils.canonicalPropertyNames:([Ljava/lang/String;)[Ljava/lang/String;
       5: putfield      #41                 // Field allowedFields:[Ljava/lang/String;
       8: return

  public java.lang.String[] getAllowedFields();
    Code:
       0: aload_0
       1: getfield      #41                 // Field allowedFields:[Ljava/lang/String;
       4: areturn

  public void setDisallowedFields(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method org/springframework/beans/PropertyAccessorUtils.canonicalPropertyNames:([Ljava/lang/String;)[Ljava/lang/String;
       5: putfield      #42                 // Field disallowedFields:[Ljava/lang/String;
       8: return

  public java.lang.String[] getDisallowedFields();
    Code:
       0: aload_0
       1: getfield      #42                 // Field disallowedFields:[Ljava/lang/String;
       4: areturn

  public void setRequiredFields(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method org/springframework/beans/PropertyAccessorUtils.canonicalPropertyNames:([Ljava/lang/String;)[Ljava/lang/String;
       5: putfield      #43                 // Field requiredFields:[Ljava/lang/String;
       8: getstatic     #44                 // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      16: ifeq          54
      19: getstatic     #44                 // Field logger:Lorg/apache/commons/logging/Log;
      22: new           #46                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #48                 // String DataBinder requires binding of required fields [
      31: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokestatic  #50                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      38: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #51                 // String ]
      43: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      54: return

  public java.lang.String[] getRequiredFields();
    Code:
       0: aload_0
       1: getfield      #43                 // Field requiredFields:[Ljava/lang/String;
       4: areturn

  public void setExtractOldValueForEditor(boolean);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getPropertyAccessor:()Lorg/springframework/beans/ConfigurablePropertyAccessor;
       4: iload_1
       5: invokeinterface #55,  2           // InterfaceMethod org/springframework/beans/ConfigurablePropertyAccessor.setExtractOldValueForEditor:(Z)V
      10: return

  public void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
       4: aload_1
       5: invokevirtual #56                 // Method org/springframework/validation/AbstractPropertyBindingResult.setMessageCodesResolver:(Lorg/springframework/validation/MessageCodesResolver;)V
       8: return

  public void setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor);
    Code:
       0: aload_1
       1: ldc           #57                 // String BindingErrorProcessor must not be null
       3: invokestatic  #58                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #11                 // Field bindingErrorProcessor:Lorg/springframework/validation/BindingErrorProcessor;
      11: return

  public org.springframework.validation.BindingErrorProcessor getBindingErrorProcessor();
    Code:
       0: aload_0
       1: getfield      #11                 // Field bindingErrorProcessor:Lorg/springframework/validation/BindingErrorProcessor;
       4: areturn

  public void setValidator(org.springframework.validation.Validator);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #59                 // class org/springframework/validation/Validator
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokespecial #60                 // Method assertValidators:([Lorg/springframework/validation/Validator;)V
      12: aload_0
      13: getfield      #14                 // Field validators:Ljava/util/List;
      16: invokeinterface #61,  1           // InterfaceMethod java/util/List.clear:()V
      21: aload_0
      22: getfield      #14                 // Field validators:Ljava/util/List;
      25: aload_1
      26: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: return

  private void assertValidators(org.springframework.validation.Validator...);
    Code:
       0: aload_1
       1: ldc           #63                 // String Validators required
       3: invokestatic  #58                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     101
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload         5
      28: ifnull        95
      31: aload_0
      32: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      35: ifnull        95
      38: aload         5
      40: aload_0
      41: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      44: invokevirtual #64                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokeinterface #65,  2           // InterfaceMethod org/springframework/validation/Validator.supports:(Ljava/lang/Class;)Z
      52: ifne          95
      55: new           #66                 // class java/lang/IllegalStateException
      58: dup
      59: new           #46                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #67                 // String Invalid target for Validator [
      68: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload         5
      73: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: ldc           #69                 // String ]:
      78: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      85: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #70                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: iinc          4, 1
      98: goto          14
     101: return

  public void addValidators(org.springframework.validation.Validator...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #60                 // Method assertValidators:([Lorg/springframework/validation/Validator;)V
       5: aload_0
       6: getfield      #14                 // Field validators:Ljava/util/List;
       9: aload_1
      10: invokestatic  #71                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      13: invokeinterface #72,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: return

  public void replaceValidators(org.springframework.validation.Validator...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #60                 // Method assertValidators:([Lorg/springframework/validation/Validator;)V
       5: aload_0
       6: getfield      #14                 // Field validators:Ljava/util/List;
       9: invokeinterface #61,  1           // InterfaceMethod java/util/List.clear:()V
      14: aload_0
      15: getfield      #14                 // Field validators:Ljava/util/List;
      18: aload_1
      19: invokestatic  #71                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: invokeinterface #72,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: return

  public org.springframework.validation.Validator getValidator();
    Code:
       0: aload_0
       1: getfield      #14                 // Field validators:Ljava/util/List;
       4: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          28
      12: aload_0
      13: getfield      #14                 // Field validators:Ljava/util/List;
      16: iconst_0
      17: invokeinterface #74,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #59                 // class org/springframework/validation/Validator
      25: goto          29
      28: aconst_null
      29: areturn

  public java.util.List<org.springframework.validation.Validator> getValidators();
    Code:
       0: aload_0
       1: getfield      #14                 // Field validators:Ljava/util/List;
       4: invokestatic  #75                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public void setConversionService(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #76                 // String DataBinder is already initialized with ConversionService
      14: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: aload_1
      19: putfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      22: aload_0
      23: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      26: ifnull        41
      29: aload_1
      30: ifnull        41
      33: aload_0
      34: getfield      #17                 // Field bindingResult:Lorg/springframework/validation/AbstractPropertyBindingResult;
      37: aload_1
      38: invokevirtual #28                 // Method org/springframework/validation/AbstractPropertyBindingResult.initConversion:(Lorg/springframework/core/convert/ConversionService;)V
      41: return

  public org.springframework.core.convert.ConversionService getConversionService();
    Code:
       0: aload_0
       1: getfield      #27                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: areturn

  public void registerCustomEditor(java.lang.Class<?>, java.beans.PropertyEditor);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method getPropertyEditorRegistry:()Lorg/springframework/beans/PropertyEditorRegistry;
       4: aload_1
       5: aload_2
       6: invokeinterface #78,  3           // InterfaceMethod org/springframework/beans/PropertyEditorRegistry.registerCustomEditor:(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V
      11: return

  public void registerCustomEditor(java.lang.Class<?>, java.lang.String, java.beans.PropertyEditor);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method getPropertyEditorRegistry:()Lorg/springframework/beans/PropertyEditorRegistry;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #79,  4           // InterfaceMethod org/springframework/beans/PropertyEditorRegistry.registerCustomEditor:(Ljava/lang/Class;Ljava/lang/String;Ljava/beans/PropertyEditor;)V
      12: return

  public java.beans.PropertyEditor findCustomEditor(java.lang.Class<?>, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method getPropertyEditorRegistry:()Lorg/springframework/beans/PropertyEditorRegistry;
       4: aload_1
       5: aload_2
       6: invokeinterface #80,  3           // InterfaceMethod org/springframework/beans/PropertyEditorRegistry.findCustomEditor:(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyEditor;
      11: areturn

  public <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>) throws org.springframework.beans.TypeMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getTypeConverter:()Lorg/springframework/beans/TypeConverter;
       4: aload_1
       5: aload_2
       6: invokeinterface #82,  3           // InterfaceMethod org/springframework/beans/TypeConverter.convertIfNecessary:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      11: areturn

  public <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>, org.springframework.core.MethodParameter) throws org.springframework.beans.TypeMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getTypeConverter:()Lorg/springframework/beans/TypeConverter;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #83,  4           // InterfaceMethod org/springframework/beans/TypeConverter.convertIfNecessary:(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/MethodParameter;)Ljava/lang/Object;
      12: areturn

  public <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>, java.lang.reflect.Field) throws org.springframework.beans.TypeMismatchException;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getTypeConverter:()Lorg/springframework/beans/TypeConverter;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #84,  4           // InterfaceMethod org/springframework/beans/TypeConverter.convertIfNecessary:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Field;)Ljava/lang/Object;
      12: areturn

  public void bind(org.springframework.beans.PropertyValues);
    Code:
       0: aload_1
       1: instanceof    #85                 // class org/springframework/beans/MutablePropertyValues
       4: ifeq          14
       7: aload_1
       8: checkcast     #85                 // class org/springframework/beans/MutablePropertyValues
      11: goto          22
      14: new           #85                 // class org/springframework/beans/MutablePropertyValues
      17: dup
      18: aload_1
      19: invokespecial #86                 // Method org/springframework/beans/MutablePropertyValues."<init>":(Lorg/springframework/beans/PropertyValues;)V
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokevirtual #87                 // Method doBind:(Lorg/springframework/beans/MutablePropertyValues;)V
      28: return

  protected void doBind(org.springframework.beans.MutablePropertyValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method checkAllowedFields:(Lorg/springframework/beans/MutablePropertyValues;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #89                 // Method checkRequiredFields:(Lorg/springframework/beans/MutablePropertyValues;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #90                 // Method applyPropertyValues:(Lorg/springframework/beans/MutablePropertyValues;)V
      15: return

  protected void checkAllowedFields(org.springframework.beans.MutablePropertyValues);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/springframework/beans/MutablePropertyValues.getPropertyValues:()[Lorg/springframework/beans/PropertyValue;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     118
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: aload         6
      29: invokevirtual #92                 // Method org/springframework/beans/PropertyValue.getName:()Ljava/lang/String;
      32: invokestatic  #93                 // Method org/springframework/beans/PropertyAccessorUtils.canonicalPropertyName:(Ljava/lang/String;)Ljava/lang/String;
      35: astore        7
      37: aload_0
      38: aload         7
      40: invokevirtual #94                 // Method isAllowed:(Ljava/lang/String;)Z
      43: ifne          112
      46: aload_1
      47: aload         6
      49: invokevirtual #95                 // Method org/springframework/beans/MutablePropertyValues.removePropertyValue:(Lorg/springframework/beans/PropertyValue;)V
      52: aload_0
      53: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
      56: aload         7
      58: invokeinterface #97,  2           // InterfaceMethod org/springframework/validation/BindingResult.recordSuppressedField:(Ljava/lang/String;)V
      63: getstatic     #44                 // Field logger:Lorg/apache/commons/logging/Log;
      66: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      71: ifeq          112
      74: getstatic     #44                 // Field logger:Lorg/apache/commons/logging/Log;
      77: new           #46                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #98                 // String Field [
      86: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         7
      91: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #99                 // String ] has been removed from PropertyValues
      96: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #100                // String and will not be bound, because it has not been found in the list of allowed fields
     101: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     112: iinc          5, 1
     115: goto          14
     118: return

  protected boolean isAllowed(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #101                // Method getAllowedFields:()[Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #102                // Method getDisallowedFields:()[Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: invokestatic  #103                // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      14: ifne          25
      17: aload_2
      18: aload_1
      19: invokestatic  #104                // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      22: ifeq          44
      25: aload_3
      26: invokestatic  #103                // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      29: ifne          40
      32: aload_3
      33: aload_1
      34: invokestatic  #104                // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      37: ifne          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  protected void checkRequiredFields(org.springframework.beans.MutablePropertyValues);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getRequiredFields:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #103                // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       9: ifne          270
      12: new           #106                // class java/util/HashMap
      15: dup
      16: invokespecial #107                // Method java/util/HashMap."<init>":()V
      19: astore_3
      20: aload_1
      21: invokevirtual #91                 // Method org/springframework/beans/MutablePropertyValues.getPropertyValues:()[Lorg/springframework/beans/PropertyValue;
      24: astore        4
      26: aload         4
      28: astore        5
      30: aload         5
      32: arraylength
      33: istore        6
      35: iconst_0
      36: istore        7
      38: iload         7
      40: iload         6
      42: if_icmpge     79
      45: aload         5
      47: iload         7
      49: aaload
      50: astore        8
      52: aload         8
      54: invokevirtual #92                 // Method org/springframework/beans/PropertyValue.getName:()Ljava/lang/String;
      57: invokestatic  #93                 // Method org/springframework/beans/PropertyAccessorUtils.canonicalPropertyName:(Ljava/lang/String;)Ljava/lang/String;
      60: astore        9
      62: aload_3
      63: aload         9
      65: aload         8
      67: invokeinterface #108,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: iinc          7, 1
      76: goto          38
      79: aload_2
      80: astore        5
      82: aload         5
      84: arraylength
      85: istore        6
      87: iconst_0
      88: istore        7
      90: iload         7
      92: iload         6
      94: if_icmpge     270
      97: aload         5
      99: iload         7
     101: aaload
     102: astore        8
     104: aload_3
     105: aload         8
     107: invokeinterface #109,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #110                // class org/springframework/beans/PropertyValue
     115: astore        9
     117: aload         9
     119: ifnull        130
     122: aload         9
     124: invokevirtual #111                // Method org/springframework/beans/PropertyValue.getValue:()Ljava/lang/Object;
     127: ifnonnull     134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: istore        10
     137: iload         10
     139: ifne          224
     142: aload         9
     144: invokevirtual #111                // Method org/springframework/beans/PropertyValue.getValue:()Ljava/lang/Object;
     147: instanceof    #112                // class java/lang/String
     150: ifeq          177
     153: aload         9
     155: invokevirtual #111                // Method org/springframework/beans/PropertyValue.getValue:()Ljava/lang/Object;
     158: checkcast     #112                // class java/lang/String
     161: invokestatic  #113                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
     164: ifne          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: istore        10
     174: goto          224
     177: aload         9
     179: invokevirtual #111                // Method org/springframework/beans/PropertyValue.getValue:()Ljava/lang/Object;
     182: instanceof    #114                // class "[Ljava/lang/String;"
     185: ifeq          224
     188: aload         9
     190: invokevirtual #111                // Method org/springframework/beans/PropertyValue.getValue:()Ljava/lang/Object;
     193: checkcast     #114                // class "[Ljava/lang/String;"
     196: checkcast     #114                // class "[Ljava/lang/String;"
     199: astore        11
     201: aload         11
     203: arraylength
     204: ifeq          217
     207: aload         11
     209: iconst_0
     210: aaload
     211: invokestatic  #113                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
     214: ifne          221
     217: iconst_1
     218: goto          222
     221: iconst_0
     222: istore        10
     224: iload         10
     226: ifeq          264
     229: aload_0
     230: invokevirtual #115                // Method getBindingErrorProcessor:()Lorg/springframework/validation/BindingErrorProcessor;
     233: aload         8
     235: aload_0
     236: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
     239: invokeinterface #116,  3          // InterfaceMethod org/springframework/validation/BindingErrorProcessor.processMissingFieldError:(Ljava/lang/String;Lorg/springframework/validation/BindingResult;)V
     244: aload         9
     246: ifnull        264
     249: aload_1
     250: aload         9
     252: invokevirtual #95                 // Method org/springframework/beans/MutablePropertyValues.removePropertyValue:(Lorg/springframework/beans/PropertyValue;)V
     255: aload_3
     256: aload         8
     258: invokeinterface #117,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     263: pop
     264: iinc          7, 1
     267: goto          90
     270: return

  protected void applyPropertyValues(org.springframework.beans.MutablePropertyValues);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getPropertyAccessor:()Lorg/springframework/beans/ConfigurablePropertyAccessor;
       4: aload_1
       5: aload_0
       6: invokevirtual #118                // Method isIgnoreUnknownFields:()Z
       9: aload_0
      10: invokevirtual #119                // Method isIgnoreInvalidFields:()Z
      13: invokeinterface #120,  4          // InterfaceMethod org/springframework/beans/ConfigurablePropertyAccessor.setPropertyValues:(Lorg/springframework/beans/PropertyValues;ZZ)V
      18: goto          68
      21: astore_2
      22: aload_2
      23: invokevirtual #122                // Method org/springframework/beans/PropertyBatchUpdateException.getPropertyAccessExceptions:()[Lorg/springframework/beans/PropertyAccessException;
      26: astore_3
      27: aload_3
      28: arraylength
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         5
      36: iload         4
      38: if_icmpge     68
      41: aload_3
      42: iload         5
      44: aaload
      45: astore        6
      47: aload_0
      48: invokevirtual #115                // Method getBindingErrorProcessor:()Lorg/springframework/validation/BindingErrorProcessor;
      51: aload         6
      53: aload_0
      54: invokevirtual #33                 // Method getInternalBindingResult:()Lorg/springframework/validation/AbstractPropertyBindingResult;
      57: invokeinterface #123,  3          // InterfaceMethod org/springframework/validation/BindingErrorProcessor.processPropertyAccessException:(Lorg/springframework/beans/PropertyAccessException;Lorg/springframework/validation/BindingResult;)V
      62: iinc          5, 1
      65: goto          34
      68: return
    Exception table:
       from    to  target type
           0    18    21   Class org/springframework/beans/PropertyBatchUpdateException

  public void validate();
    Code:
       0: aload_0
       1: getfield      #14                 // Field validators:Ljava/util/List;
       4: invokeinterface #124,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          46
      19: aload_1
      20: invokeinterface #126,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #59                 // class org/springframework/validation/Validator
      28: astore_2
      29: aload_2
      30: aload_0
      31: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      34: aload_0
      35: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
      38: invokeinterface #127,  3          // InterfaceMethod org/springframework/validation/Validator.validate:(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
      43: goto          10
      46: return

  public void validate(java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #128                // Method getValidators:()Ljava/util/List;
       4: invokeinterface #124,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #125,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          85
      19: aload_2
      20: invokeinterface #126,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #59                 // class org/springframework/validation/Validator
      28: astore_3
      29: aload_1
      30: invokestatic  #103                // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      33: ifne          64
      36: aload_3
      37: instanceof    #129                // class org/springframework/validation/SmartValidator
      40: ifeq          64
      43: aload_3
      44: checkcast     #129                // class org/springframework/validation/SmartValidator
      47: aload_0
      48: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      51: aload_0
      52: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
      55: aload_1
      56: invokeinterface #130,  4          // InterfaceMethod org/springframework/validation/SmartValidator.validate:(Ljava/lang/Object;Lorg/springframework/validation/Errors;[Ljava/lang/Object;)V
      61: goto          82
      64: aload_3
      65: ifnull        82
      68: aload_3
      69: aload_0
      70: invokevirtual #22                 // Method getTarget:()Ljava/lang/Object;
      73: aload_0
      74: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
      77: invokeinterface #127,  3          // InterfaceMethod org/springframework/validation/Validator.validate:(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
      82: goto          10
      85: return

  public java.util.Map<?, ?> close() throws org.springframework.validation.BindException;
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
       4: invokeinterface #131,  1          // InterfaceMethod org/springframework/validation/BindingResult.hasErrors:()Z
       9: ifeq          24
      12: new           #132                // class org/springframework/validation/BindException
      15: dup
      16: aload_0
      17: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
      20: invokespecial #133                // Method org/springframework/validation/BindException."<init>":(Lorg/springframework/validation/BindingResult;)V
      23: athrow
      24: aload_0
      25: invokevirtual #96                 // Method getBindingResult:()Lorg/springframework/validation/BindingResult;
      28: invokeinterface #134,  1          // InterfaceMethod org/springframework/validation/BindingResult.getModel:()Ljava/util/Map;
      33: areturn

  static {};
    Code:
       0: ldc           #1                  // class org/springframework/validation/DataBinder
       2: invokestatic  #135                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #44                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
