Compiled from "PeriodicTrigger.java"
public class org.springframework.scheduling.support.PeriodicTrigger implements org.springframework.scheduling.Trigger {
  private final long period;

  private final java.util.concurrent.TimeUnit timeUnit;

  private volatile long initialDelay;

  private volatile boolean fixedRate;

  public org.springframework.scheduling.support.PeriodicTrigger(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(JLjava/util/concurrent/TimeUnit;)V
       6: return

  public org.springframework.scheduling.support.PeriodicTrigger(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #3                  // Field initialDelay:J
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field fixedRate:Z
      14: lload_1
      15: lconst_0
      16: lcmp
      17: iflt          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #5                  // String period must not be negative
      27: invokestatic  #6                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      30: aload_0
      31: aload_3
      32: ifnull        39
      35: aload_3
      36: goto          42
      39: getstatic     #7                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      42: putfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      45: aload_0
      46: aload_0
      47: getfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      50: lload_1
      51: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      54: putfield      #10                 // Field period:J
      57: return

  public void setInitialDelay(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       5: lload_1
       6: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       9: putfield      #3                  // Field initialDelay:J
      12: return

  public void setFixedRate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field fixedRate:Z
       5: return

  public java.util.Date nextExecutionTime(org.springframework.scheduling.TriggerContext);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod org/springframework/scheduling/TriggerContext.lastScheduledExecutionTime:()Ljava/util/Date;
       6: ifnonnull     25
       9: new           #12                 // class java/util/Date
      12: dup
      13: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
      16: aload_0
      17: getfield      #3                  // Field initialDelay:J
      20: ladd
      21: invokespecial #14                 // Method java/util/Date."<init>":(J)V
      24: areturn
      25: aload_0
      26: getfield      #4                  // Field fixedRate:Z
      29: ifeq          54
      32: new           #12                 // class java/util/Date
      35: dup
      36: aload_1
      37: invokeinterface #11,  1           // InterfaceMethod org/springframework/scheduling/TriggerContext.lastScheduledExecutionTime:()Ljava/util/Date;
      42: invokevirtual #15                 // Method java/util/Date.getTime:()J
      45: aload_0
      46: getfield      #10                 // Field period:J
      49: ladd
      50: invokespecial #14                 // Method java/util/Date."<init>":(J)V
      53: areturn
      54: new           #12                 // class java/util/Date
      57: dup
      58: aload_1
      59: invokeinterface #16,  1           // InterfaceMethod org/springframework/scheduling/TriggerContext.lastCompletionTime:()Ljava/util/Date;
      64: invokevirtual #15                 // Method java/util/Date.getTime:()J
      67: aload_0
      68: getfield      #10                 // Field period:J
      71: ladd
      72: invokespecial #14                 // Method java/util/Date."<init>":(J)V
      75: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/springframework/scheduling/support/PeriodicTrigger
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #17                 // class org/springframework/scheduling/support/PeriodicTrigger
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field fixedRate:Z
      25: aload_2
      26: getfield      #4                  // Field fixedRate:Z
      29: if_icmpne     60
      32: aload_0
      33: getfield      #3                  // Field initialDelay:J
      36: aload_2
      37: getfield      #3                  // Field initialDelay:J
      40: lcmp
      41: ifne          60
      44: aload_0
      45: getfield      #10                 // Field period:J
      48: aload_2
      49: getfield      #10                 // Field period:J
      52: lcmp
      53: ifne          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fixedRate:Z
       4: ifeq          12
       7: bipush        17
       9: goto          14
      12: bipush        29
      14: ldc2_w        #18                 // long 37l
      17: aload_0
      18: getfield      #10                 // Field period:J
      21: lmul
      22: l2i
      23: iadd
      24: ldc2_w        #20                 // long 41l
      27: aload_0
      28: getfield      #3                  // Field initialDelay:J
      31: lmul
      32: l2i
      33: iadd
      34: ireturn
}
