Compiled from "MetadataNamingStrategy.java"
public class org.springframework.jmx.export.naming.MetadataNamingStrategy implements org.springframework.jmx.export.naming.ObjectNamingStrategy,org.springframework.beans.factory.InitializingBean {
  private org.springframework.jmx.export.metadata.JmxAttributeSource attributeSource;

  private java.lang.String defaultDomain;

  public org.springframework.jmx.export.naming.MetadataNamingStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.jmx.export.naming.MetadataNamingStrategy(org.springframework.jmx.export.metadata.JmxAttributeSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String JmxAttributeSource must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
      15: return

  public void setAttributeSource(org.springframework.jmx.export.metadata.JmxAttributeSource);
    Code:
       0: aload_1
       1: ldc           #2                  // String JmxAttributeSource must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
      11: return

  public void setDefaultDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field defaultDomain:Ljava/lang/String;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
       4: ifnonnull     17
       7: new           #6                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #7                  // String Property \'attributeSource\' is required
      13: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public javax.management.ObjectName getObjectName(java.lang.Object, java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/springframework/aop/support/AopUtils.getTargetClass:(Ljava/lang/Object;)Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: getfield      #4                  // Field attributeSource:Lorg/springframework/jmx/export/metadata/JmxAttributeSource;
       9: aload_3
      10: invokeinterface #10,  2           // InterfaceMethod org/springframework/jmx/export/metadata/JmxAttributeSource.getManagedResource:(Ljava/lang/Class;)Lorg/springframework/jmx/export/metadata/ManagedResource;
      15: astore        4
      17: aload         4
      19: ifnull        42
      22: aload         4
      24: invokevirtual #11                 // Method org/springframework/jmx/export/metadata/ManagedResource.getObjectName:()Ljava/lang/String;
      27: invokestatic  #12                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      30: ifeq          42
      33: aload         4
      35: invokevirtual #11                 // Method org/springframework/jmx/export/metadata/ManagedResource.getObjectName:()Ljava/lang/String;
      38: invokestatic  #13                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      41: areturn
      42: aload_2
      43: invokestatic  #13                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      46: areturn
      47: astore        5
      49: aload_0
      50: getfield      #5                  // Field defaultDomain:Ljava/lang/String;
      53: astore        6
      55: aload         6
      57: ifnonnull     66
      60: aload_3
      61: invokestatic  #15                 // Method org/springframework/util/ClassUtils.getPackageName:(Ljava/lang/Class;)Ljava/lang/String;
      64: astore        6
      66: new           #16                 // class java/util/Hashtable
      69: dup
      70: invokespecial #17                 // Method java/util/Hashtable."<init>":()V
      73: astore        7
      75: aload         7
      77: ldc           #18                 // String type
      79: aload_3
      80: invokestatic  #19                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      83: invokevirtual #20                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload         7
      89: ldc           #21                 // String name
      91: aload_2
      92: invokevirtual #20                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aload         6
      98: aload         7
     100: invokestatic  #22                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;Ljava/util/Hashtable;)Ljavax/management/ObjectName;
     103: areturn
    Exception table:
       from    to  target type
          42    46    47   Class javax/management/MalformedObjectNameException
}
