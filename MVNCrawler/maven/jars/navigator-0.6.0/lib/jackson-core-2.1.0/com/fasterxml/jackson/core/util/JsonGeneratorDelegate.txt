Compiled from "JsonGeneratorDelegate.java"
public class com.fasterxml.jackson.core.util.JsonGeneratorDelegate extends com.fasterxml.jackson.core.JsonGenerator {
  protected com.fasterxml.jackson.core.JsonGenerator delegate;

  public com.fasterxml.jackson.core.util.JsonGeneratorDelegate(com.fasterxml.jackson.core.JsonGenerator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/core/JsonGenerator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       9: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #3                  // Method com/fasterxml/jackson/core/JsonGenerator.close:()V
       7: return

  public void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #4                  // Method com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V
       8: return

  public void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonGenerator.copyCurrentStructure:(Lcom/fasterxml/jackson/core/JsonParser;)V
       8: return

  public com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;
       8: pop
       9: aload_0
      10: areturn

  public com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #7                  // Method com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;
       8: pop
       9: aload_0
      10: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #8                  // Method com/fasterxml/jackson/core/JsonGenerator.flush:()V
       7: return

  public com.fasterxml.jackson.core.ObjectCodec getCodec();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.getCodec:()Lcom/fasterxml/jackson/core/ObjectCodec;
       7: areturn

  public com.fasterxml.jackson.core.JsonStreamContext getOutputContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       7: areturn

  public void setSchema(com.fasterxml.jackson.core.FormatSchema);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.setSchema:(Lcom/fasterxml/jackson/core/FormatSchema;)V
       8: return

  public boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.canUseSchema:(Lcom/fasterxml/jackson/core/FormatSchema;)Z
       8: ireturn

  public com.fasterxml.jackson.core.Version version();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #13                 // Method com/fasterxml/jackson/core/JsonGenerator.version:()Lcom/fasterxml/jackson/core/Version;
       7: areturn

  public java.lang.Object getOutputTarget();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.getOutputTarget:()Ljava/lang/Object;
       7: areturn

  public com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.setRootValueSeparator:(Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;
       8: pop
       9: aload_0
      10: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #16                 // Method com/fasterxml/jackson/core/JsonGenerator.isClosed:()Z
       7: ireturn

  public boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #17                 // Method com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
       8: ireturn

  public com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #18                 // Method com/fasterxml/jackson/core/JsonGenerator.setCodec:(Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonGenerator;
       8: pop
       9: aload_0
      10: areturn

  public com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #19                 // Method com/fasterxml/jackson/core/JsonGenerator.useDefaultPrettyPrinter:()Lcom/fasterxml/jackson/core/JsonGenerator;
       7: pop
       8: aload_0
       9: areturn

  public void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #20                 // Method com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V
      12: return

  public int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #21                 // Method com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I
      10: ireturn

  public void writeBoolean(boolean) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: iload_1
       5: invokevirtual #22                 // Method com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V
       8: return

  public void writeEndArray() throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #23                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V
       7: return

  public void writeEndObject() throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #24                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       7: return

  public void writeFieldName(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #25                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
       8: return

  public void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #26                 // Method com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Lcom/fasterxml/jackson/core/SerializableString;)V
       8: return

  public void writeNull() throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #27                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
       7: return

  public void writeNumber(int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: iload_1
       5: invokevirtual #28                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V
       8: return

  public void writeNumber(long) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: lload_1
       5: invokevirtual #29                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
       8: return

  public void writeNumber(java.math.BigInteger) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #30                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
       8: return

  public void writeNumber(double) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: dload_1
       5: invokevirtual #31                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
       8: return

  public void writeNumber(float) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: fload_1
       5: invokevirtual #32                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V
       8: return

  public void writeNumber(java.math.BigDecimal) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #33                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V
       8: return

  public void writeNumber(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #34                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V
       8: return

  public void writeObject(java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #35                 // Method com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V
       8: return

  public void writeRaw(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #36                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V
       8: return

  public void writeRaw(java.lang.String, int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #37                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;II)V
      10: return

  public void writeRaw(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #38                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Lcom/fasterxml/jackson/core/SerializableString;)V
       8: return

  public void writeRaw(char[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #39                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRaw:([CII)V
      10: return

  public void writeRaw(char) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: iload_1
       5: invokevirtual #40                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRaw:(C)V
       8: return

  public void writeRawValue(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #41                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V
       8: return

  public void writeRawValue(java.lang.String, int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #42                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;II)V
      10: return

  public void writeRawValue(char[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #43                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRawValue:([CII)V
      10: return

  public void writeStartArray() throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #44                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V
       7: return

  public void writeStartObject() throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: invokevirtual #45                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       7: return

  public void writeString(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #46                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
       8: return

  public void writeString(char[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #47                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V
      10: return

  public void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #48                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Lcom/fasterxml/jackson/core/SerializableString;)V
       8: return

  public void writeRawUTF8String(byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #49                 // Method com/fasterxml/jackson/core/JsonGenerator.writeRawUTF8String:([BII)V
      10: return

  public void writeUTF8String(byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #50                 // Method com/fasterxml/jackson/core/JsonGenerator.writeUTF8String:([BII)V
      10: return

  public void writeTree(com.fasterxml.jackson.core.TreeNode) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/fasterxml/jackson/core/JsonGenerator;
       4: aload_1
       5: invokevirtual #51                 // Method com/fasterxml/jackson/core/JsonGenerator.writeTree:(Lcom/fasterxml/jackson/core/TreeNode;)V
       8: return
}
