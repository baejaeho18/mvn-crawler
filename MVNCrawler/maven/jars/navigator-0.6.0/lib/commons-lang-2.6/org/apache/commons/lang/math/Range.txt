Compiled from "Range.java"
public abstract class org.apache.commons.lang.math.Range {
  public org.apache.commons.lang.math.Range();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract java.lang.Number getMinimumNumber();

  public long getMinimumLong();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
       4: invokevirtual #3                  // Method java/lang/Number.longValue:()J
       7: lreturn

  public int getMinimumInteger();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
       4: invokevirtual #4                  // Method java/lang/Number.intValue:()I
       7: ireturn

  public double getMinimumDouble();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
       4: invokevirtual #5                  // Method java/lang/Number.doubleValue:()D
       7: dreturn

  public float getMinimumFloat();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
       4: invokevirtual #6                  // Method java/lang/Number.floatValue:()F
       7: freturn

  public abstract java.lang.Number getMaximumNumber();

  public long getMaximumLong();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
       4: invokevirtual #3                  // Method java/lang/Number.longValue:()J
       7: lreturn

  public int getMaximumInteger();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
       4: invokevirtual #4                  // Method java/lang/Number.intValue:()I
       7: ireturn

  public double getMaximumDouble();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
       4: invokevirtual #5                  // Method java/lang/Number.doubleValue:()D
       7: dreturn

  public float getMaximumFloat();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
       4: invokevirtual #6                  // Method java/lang/Number.floatValue:()F
       7: freturn

  public abstract boolean containsNumber(java.lang.Number);

  public boolean containsLong(java.lang.Number);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #3                  // Method java/lang/Number.longValue:()J
      11: invokevirtual #8                  // Method containsLong:(J)Z
      14: ireturn

  public boolean containsLong(long);
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #9                  // Method getMinimumLong:()J
       5: lcmp
       6: iflt          22
       9: lload_1
      10: aload_0
      11: invokevirtual #10                 // Method getMaximumLong:()J
      14: lcmp
      15: ifgt          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean containsInteger(java.lang.Number);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #4                  // Method java/lang/Number.intValue:()I
      11: invokevirtual #11                 // Method containsInteger:(I)Z
      14: ireturn

  public boolean containsInteger(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #12                 // Method getMinimumInteger:()I
       5: if_icmplt     20
       8: iload_1
       9: aload_0
      10: invokevirtual #13                 // Method getMaximumInteger:()I
      13: if_icmpgt     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean containsDouble(java.lang.Number);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #5                  // Method java/lang/Number.doubleValue:()D
      11: invokevirtual #14                 // Method containsDouble:(D)Z
      14: ireturn

  public boolean containsDouble(double);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getMinimumDouble:()D
       4: dload_1
       5: invokestatic  #16                 // Method org/apache/commons/lang/math/NumberUtils.compare:(DD)I
       8: istore_3
       9: aload_0
      10: invokevirtual #17                 // Method getMaximumDouble:()D
      13: dload_1
      14: invokestatic  #16                 // Method org/apache/commons/lang/math/NumberUtils.compare:(DD)I
      17: istore        4
      19: iload_3
      20: ifgt          32
      23: iload         4
      25: iflt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean containsFloat(java.lang.Number);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #6                  // Method java/lang/Number.floatValue:()F
      11: invokevirtual #18                 // Method containsFloat:(F)Z
      14: ireturn

  public boolean containsFloat(float);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getMinimumFloat:()F
       4: fload_1
       5: invokestatic  #20                 // Method org/apache/commons/lang/math/NumberUtils.compare:(FF)I
       8: istore_2
       9: aload_0
      10: invokevirtual #21                 // Method getMaximumFloat:()F
      13: fload_1
      14: invokestatic  #20                 // Method org/apache/commons/lang/math/NumberUtils.compare:(FF)I
      17: istore_3
      18: iload_2
      19: ifgt          30
      22: iload_3
      23: iflt          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean containsRange(org.apache.commons.lang.math.Range);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      11: invokevirtual #22                 // Method containsNumber:(Ljava/lang/Number;)Z
      14: ifeq          32
      17: aload_0
      18: aload_1
      19: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
      22: invokevirtual #22                 // Method containsNumber:(Ljava/lang/Number;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean overlapsRange(org.apache.commons.lang.math.Range);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: aload_0
       8: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      11: invokevirtual #22                 // Method containsNumber:(Ljava/lang/Number;)Z
      14: ifne          39
      17: aload_1
      18: aload_0
      19: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
      22: invokevirtual #22                 // Method containsNumber:(Ljava/lang/Number;)Z
      25: ifne          39
      28: aload_0
      29: aload_1
      30: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      33: invokevirtual #22                 // Method containsNumber:(Ljava/lang/Number;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_1
      12: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_0
      16: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #24                 // class org/apache/commons/lang/math/Range
      28: astore_2
      29: aload_0
      30: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      33: aload_2
      34: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      37: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          61
      43: aload_0
      44: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
      47: aload_2
      48: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
      51: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: bipush        37
       5: iload_1
       6: imul
       7: aload_0
       8: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
      14: iadd
      15: istore_1
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      24: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_1
      29: bipush        37
      31: iload_1
      32: imul
      33: aload_0
      34: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
      37: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
      40: iadd
      41: istore_1
      42: iload_1
      43: ireturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class org/apache/commons/lang/text/StrBuilder
       3: dup
       4: bipush        32
       6: invokespecial #28                 // Method org/apache/commons/lang/text/StrBuilder."<init>":(I)V
       9: astore_1
      10: aload_1
      11: ldc           #29                 // String Range[
      13: invokevirtual #30                 // Method org/apache/commons/lang/text/StrBuilder.append:(Ljava/lang/String;)Lorg/apache/commons/lang/text/StrBuilder;
      16: pop
      17: aload_1
      18: aload_0
      19: invokevirtual #2                  // Method getMinimumNumber:()Ljava/lang/Number;
      22: invokevirtual #31                 // Method org/apache/commons/lang/text/StrBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang/text/StrBuilder;
      25: pop
      26: aload_1
      27: bipush        44
      29: invokevirtual #32                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
      32: pop
      33: aload_1
      34: aload_0
      35: invokevirtual #7                  // Method getMaximumNumber:()Ljava/lang/Number;
      38: invokevirtual #31                 // Method org/apache/commons/lang/text/StrBuilder.append:(Ljava/lang/Object;)Lorg/apache/commons/lang/text/StrBuilder;
      41: pop
      42: aload_1
      43: bipush        93
      45: invokevirtual #32                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
      48: pop
      49: aload_1
      50: invokevirtual #33                 // Method org/apache/commons/lang/text/StrBuilder.toString:()Ljava/lang/String;
      53: areturn
}
