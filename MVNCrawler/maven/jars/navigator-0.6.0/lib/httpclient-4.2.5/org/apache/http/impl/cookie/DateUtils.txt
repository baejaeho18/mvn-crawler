Compiled from "DateUtils.java"
public final class org.apache.http.impl.cookie.DateUtils {
  public static final java.lang.String PATTERN_RFC1123;

  public static final java.lang.String PATTERN_RFC1036;

  public static final java.lang.String PATTERN_ASCTIME;

  private static final java.lang.String[] DEFAULT_PATTERNS;

  private static final java.util.Date DEFAULT_TWO_DIGIT_YEAR_START;

  public static final java.util.TimeZone GMT;

  public static java.util.Date parseDate(java.lang.String) throws org.apache.http.impl.cookie.DateParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokestatic  #1                  // Method parseDate:(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;
       6: areturn

  public static java.util.Date parseDate(java.lang.String, java.lang.String[]) throws org.apache.http.impl.cookie.DateParseException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #1                  // Method parseDate:(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;
       6: areturn

  public static java.util.Date parseDate(java.lang.String, java.lang.String[], java.util.Date) throws org.apache.http.impl.cookie.DateParseException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String dateValue is null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     22
      18: getstatic     #5                  // Field DEFAULT_PATTERNS:[Ljava/lang/String;
      21: astore_1
      22: aload_2
      23: ifnonnull     30
      26: getstatic     #6                  // Field DEFAULT_TWO_DIGIT_YEAR_START:Ljava/util/Date;
      29: astore_2
      30: aload_0
      31: invokevirtual #7                  // Method java/lang/String.length:()I
      34: iconst_1
      35: if_icmple     68
      38: aload_0
      39: ldc           #8                  // String \'
      41: invokevirtual #9                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      44: ifeq          68
      47: aload_0
      48: ldc           #8                  // String \'
      50: invokevirtual #10                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      53: ifeq          68
      56: aload_0
      57: iconst_1
      58: aload_0
      59: invokevirtual #7                  // Method java/lang/String.length:()I
      62: iconst_1
      63: isub
      64: invokevirtual #11                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      67: astore_0
      68: aload_1
      69: astore_3
      70: aload_3
      71: arraylength
      72: istore        4
      74: iconst_0
      75: istore        5
      77: iload         5
      79: iload         4
      81: if_icmpge     140
      84: aload_3
      85: iload         5
      87: aaload
      88: astore        6
      90: aload         6
      92: invokestatic  #12                 // Method org/apache/http/impl/cookie/DateUtils$DateFormatHolder.formatFor:(Ljava/lang/String;)Ljava/text/SimpleDateFormat;
      95: astore        7
      97: aload         7
      99: aload_2
     100: invokevirtual #13                 // Method java/text/SimpleDateFormat.set2DigitYearStart:(Ljava/util/Date;)V
     103: new           #14                 // class java/text/ParsePosition
     106: dup
     107: iconst_0
     108: invokespecial #15                 // Method java/text/ParsePosition."<init>":(I)V
     111: astore        8
     113: aload         7
     115: aload_0
     116: aload         8
     118: invokevirtual #16                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
     121: astore        9
     123: aload         8
     125: invokevirtual #17                 // Method java/text/ParsePosition.getIndex:()I
     128: ifeq          134
     131: aload         9
     133: areturn
     134: iinc          5, 1
     137: goto          77
     140: new           #18                 // class org/apache/http/impl/cookie/DateParseException
     143: dup
     144: new           #19                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #21                 // String Unable to parse the date
     153: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokespecial #24                 // Method org/apache/http/impl/cookie/DateParseException."<init>":(Ljava/lang/String;)V
     166: athrow

  public static java.lang.String formatDate(java.util.Date);
    Code:
       0: aload_0
       1: ldc           #25                 // String EEE, dd MMM yyyy HH:mm:ss zzz
       3: invokestatic  #26                 // Method formatDate:(Ljava/util/Date;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public static java.lang.String formatDate(java.util.Date, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #27                 // String date is null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #28                 // String pattern is null
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: invokestatic  #12                 // Method org/apache/http/impl/cookie/DateUtils$DateFormatHolder.formatFor:(Ljava/lang/String;)Ljava/text/SimpleDateFormat;
      32: astore_2
      33: aload_2
      34: aload_0
      35: invokevirtual #29                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      38: areturn

  public static void clearThreadLocal();
    Code:
       0: invokestatic  #30                 // Method org/apache/http/impl/cookie/DateUtils$DateFormatHolder.clearThreadLocal:()V
       3: return

  private org.apache.http.impl.cookie.DateUtils();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: iconst_3
       1: anewarray     #32                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #25                 // String EEE, dd MMM yyyy HH:mm:ss zzz
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #33                 // String EEE, dd-MMM-yy HH:mm:ss zzz
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #34                 // String EEE MMM d HH:mm:ss yyyy
      18: aastore
      19: putstatic     #5                  // Field DEFAULT_PATTERNS:[Ljava/lang/String;
      22: ldc           #35                 // String GMT
      24: invokestatic  #36                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      27: putstatic     #37                 // Field GMT:Ljava/util/TimeZone;
      30: invokestatic  #38                 // Method java/util/Calendar.getInstance:()Ljava/util/Calendar;
      33: astore_0
      34: aload_0
      35: getstatic     #37                 // Field GMT:Ljava/util/TimeZone;
      38: invokevirtual #39                 // Method java/util/Calendar.setTimeZone:(Ljava/util/TimeZone;)V
      41: aload_0
      42: sipush        2000
      45: iconst_0
      46: iconst_1
      47: iconst_0
      48: iconst_0
      49: iconst_0
      50: invokevirtual #40                 // Method java/util/Calendar.set:(IIIIII)V
      53: aload_0
      54: bipush        14
      56: iconst_0
      57: invokevirtual #41                 // Method java/util/Calendar.set:(II)V
      60: aload_0
      61: invokevirtual #42                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
      64: putstatic     #6                  // Field DEFAULT_TWO_DIGIT_YEAR_START:Ljava/util/Date;
      67: return
}
