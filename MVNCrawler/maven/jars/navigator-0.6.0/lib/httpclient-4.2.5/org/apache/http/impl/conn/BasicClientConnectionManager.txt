Compiled from "BasicClientConnectionManager.java"
public class org.apache.http.impl.conn.BasicClientConnectionManager implements org.apache.http.conn.ClientConnectionManager {
  private final org.apache.commons.logging.Log log;

  private static final java.util.concurrent.atomic.AtomicLong COUNTER;

  public static final java.lang.String MISUSE_MESSAGE;

  private final org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

  private final org.apache.http.conn.ClientConnectionOperator connOperator;

  private org.apache.http.impl.conn.HttpPoolEntry poolEntry;

  private org.apache.http.impl.conn.ManagedClientConnectionImpl conn;

  private volatile boolean shutdown;

  public org.apache.http.impl.conn.BasicClientConnectionManager(org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ifnonnull     29
      19: new           #5                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #6                  // String Scheme registry may not be null
      25: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #8                  // Field schemeRegistry:Lorg/apache/http/conn/scheme/SchemeRegistry;
      34: aload_0
      35: aload_0
      36: aload_1
      37: invokevirtual #9                  // Method createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;
      40: putfield      #10                 // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
      43: return

  public org.apache.http.impl.conn.BasicClientConnectionManager();
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method org/apache/http/impl/conn/SchemeRegistryFactory.createDefault:()Lorg/apache/http/conn/scheme/SchemeRegistry;
       4: invokespecial #12                 // Method "<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       7: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method shutdown:()V
       4: aload_0
       5: invokespecial #14                 // Method java/lang/Object.finalize:()V
       8: goto          18
      11: astore_1
      12: aload_0
      13: invokespecial #14                 // Method java/lang/Object.finalize:()V
      16: aload_1
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     4    11   any
          11    12    11   any

  public org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry();
    Code:
       0: aload_0
       1: getfield      #8                  // Field schemeRegistry:Lorg/apache/http/conn/scheme/SchemeRegistry;
       4: areturn

  protected org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: new           #15                 // class org/apache/http/impl/conn/DefaultClientConnectionOperator
       3: dup
       4: aload_1
       5: invokespecial #16                 // Method org/apache/http/impl/conn/DefaultClientConnectionOperator."<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       8: areturn

  public final org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: new           #17                 // class org/apache/http/impl/conn/BasicClientConnectionManager$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #18                 // Method org/apache/http/impl/conn/BasicClientConnectionManager$1."<init>":(Lorg/apache/http/impl/conn/BasicClientConnectionManager;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V
      10: areturn

  private void assertNotShutdown();
    Code:
       0: aload_0
       1: getfield      #19                 // Field shutdown:Z
       4: ifeq          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #21                 // String Connection manager has been shut down
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #23                 // String Route may not be null.
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: dup
      16: astore_3
      17: monitorenter
      18: aload_0
      19: invokespecial #24                 // Method assertNotShutdown:()V
      22: aload_0
      23: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      26: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      31: ifeq          62
      34: aload_0
      35: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      38: new           #26                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #28                 // String Get connection for route
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
      66: ifnull        79
      69: new           #20                 // class java/lang/IllegalStateException
      72: dup
      73: ldc           #34                 // String Invalid use of BasicClientConnManager: connection still allocated.\nMake sure to release the connection before allocating another one.
      75: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      83: ifnull        112
      86: aload_0
      87: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      90: invokevirtual #36                 // Method org/apache/http/impl/conn/HttpPoolEntry.getPlannedRoute:()Lorg/apache/http/conn/routing/HttpRoute;
      93: aload_1
      94: invokevirtual #37                 // Method org/apache/http/conn/routing/HttpRoute.equals:(Ljava/lang/Object;)Z
      97: ifne          112
     100: aload_0
     101: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     104: invokevirtual #38                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
     107: aload_0
     108: aconst_null
     109: putfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     112: aload_0
     113: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     116: ifnonnull     165
     119: getstatic     #39                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
     122: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
     125: invokestatic  #41                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     128: astore        4
     130: aload_0
     131: getfield      #10                 // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
     134: invokeinterface #42,  1           // InterfaceMethod org/apache/http/conn/ClientConnectionOperator.createConnection:()Lorg/apache/http/conn/OperatedClientConnection;
     139: astore        5
     141: aload_0
     142: new           #43                 // class org/apache/http/impl/conn/HttpPoolEntry
     145: dup
     146: aload_0
     147: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     150: aload         4
     152: aload_1
     153: aload         5
     155: lconst_0
     156: getstatic     #44                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     159: invokespecial #45                 // Method org/apache/http/impl/conn/HttpPoolEntry."<init>":(Lorg/apache/commons/logging/Log;Ljava/lang/String;Lorg/apache/http/conn/routing/HttpRoute;Lorg/apache/http/conn/OperatedClientConnection;JLjava/util/concurrent/TimeUnit;)V
     162: putfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     165: invokestatic  #46                 // Method java/lang/System.currentTimeMillis:()J
     168: lstore        4
     170: aload_0
     171: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     174: lload         4
     176: invokevirtual #47                 // Method org/apache/http/impl/conn/HttpPoolEntry.isExpired:(J)Z
     179: ifeq          199
     182: aload_0
     183: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     186: invokevirtual #38                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
     189: aload_0
     190: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     193: invokevirtual #48                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     196: invokevirtual #49                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
     199: aload_0
     200: new           #50                 // class org/apache/http/impl/conn/ManagedClientConnectionImpl
     203: dup
     204: aload_0
     205: aload_0
     206: getfield      #10                 // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
     209: aload_0
     210: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     213: invokespecial #51                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl."<init>":(Lorg/apache/http/conn/ClientConnectionManager;Lorg/apache/http/conn/ClientConnectionOperator;Lorg/apache/http/impl/conn/HttpPoolEntry;)V
     216: putfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     219: aload_0
     220: getfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     223: aload_3
     224: monitorexit
     225: areturn
     226: astore        6
     228: aload_3
     229: monitorexit
     230: aload         6
     232: athrow
    Exception table:
       from    to  target type
          18   225   226   any
         226   230   226   any

  private void shutdownConnection(org.apache.http.HttpClientConnection);
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod org/apache/http/HttpClientConnection.shutdown:()V
       6: goto          34
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      14: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      19: ifeq          34
      22: aload_0
      23: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      26: ldc           #54                 // String I/O exception shutting down connection
      28: aload_2
      29: invokeinterface #55,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      34: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  public void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: instanceof    #50                 // class org/apache/http/impl/conn/ManagedClientConnectionImpl
       4: ifne          17
       7: new           #5                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #56                 // String Connection class mismatch, connection not obtained from this manager
      13: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #50                 // class org/apache/http/impl/conn/ManagedClientConnectionImpl
      21: astore        5
      23: aload         5
      25: dup
      26: astore        6
      28: monitorenter
      29: aload_0
      30: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      33: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      38: ifeq          69
      41: aload_0
      42: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
      45: new           #26                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #57                 // String Releasing connection
      54: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      69: aload         5
      71: invokevirtual #58                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.getPoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
      74: ifnonnull     81
      77: aload         6
      79: monitorexit
      80: return
      81: aload         5
      83: invokevirtual #59                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.getManager:()Lorg/apache/http/conn/ClientConnectionManager;
      86: astore        7
      88: aload         7
      90: ifnull        109
      93: aload         7
      95: aload_0
      96: if_acmpeq     109
      99: new           #20                 // class java/lang/IllegalStateException
     102: dup
     103: ldc           #60                 // String Connection not obtained from this manager
     105: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_0
     110: dup
     111: astore        8
     113: monitorenter
     114: aload_0
     115: getfield      #19                 // Field shutdown:Z
     118: ifeq          134
     121: aload_0
     122: aload         5
     124: invokespecial #61                 // Method shutdownConnection:(Lorg/apache/http/HttpClientConnection;)V
     127: aload         8
     129: monitorexit
     130: aload         6
     132: monitorexit
     133: return
     134: aload         5
     136: invokevirtual #62                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.isOpen:()Z
     139: ifeq          156
     142: aload         5
     144: invokevirtual #63                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.isMarkedReusable:()Z
     147: ifne          156
     150: aload_0
     151: aload         5
     153: invokespecial #61                 // Method shutdownConnection:(Lorg/apache/http/HttpClientConnection;)V
     156: aload         5
     158: invokevirtual #63                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.isMarkedReusable:()Z
     161: ifeq          270
     164: aload_0
     165: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     168: lload_2
     169: aload         4
     171: ifnull        179
     174: aload         4
     176: goto          182
     179: getstatic     #44                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     182: invokevirtual #64                 // Method org/apache/http/impl/conn/HttpPoolEntry.updateExpiry:(JLjava/util/concurrent/TimeUnit;)V
     185: aload_0
     186: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     189: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     194: ifeq          270
     197: lload_2
     198: lconst_0
     199: lcmp
     200: ifle          237
     203: new           #26                 // class java/lang/StringBuilder
     206: dup
     207: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     210: ldc           #65                 // String for
     212: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: lload_2
     216: invokevirtual #66                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     219: ldc           #67                 // String
     221: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: aload         4
     226: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     229: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     232: astore        9
     234: goto          241
     237: ldc           #68                 // String indefinitely
     239: astore        9
     241: aload_0
     242: getfield      #4                  // Field log:Lorg/apache/commons/logging/Log;
     245: new           #26                 // class java/lang/StringBuilder
     248: dup
     249: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     252: ldc           #69                 // String Connection can be kept alive
     254: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: aload         9
     259: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     270: aload         5
     272: invokevirtual #70                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.detach:()Lorg/apache/http/impl/conn/HttpPoolEntry;
     275: pop
     276: aload_0
     277: aconst_null
     278: putfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     281: aload_0
     282: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     285: invokevirtual #71                 // Method org/apache/http/impl/conn/HttpPoolEntry.isClosed:()Z
     288: ifeq          330
     291: aload_0
     292: aconst_null
     293: putfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     296: goto          330
     299: astore        10
     301: aload         5
     303: invokevirtual #70                 // Method org/apache/http/impl/conn/ManagedClientConnectionImpl.detach:()Lorg/apache/http/impl/conn/HttpPoolEntry;
     306: pop
     307: aload_0
     308: aconst_null
     309: putfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
     312: aload_0
     313: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     316: invokevirtual #71                 // Method org/apache/http/impl/conn/HttpPoolEntry.isClosed:()Z
     319: ifeq          327
     322: aload_0
     323: aconst_null
     324: putfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     327: aload         10
     329: athrow
     330: aload         8
     332: monitorexit
     333: goto          344
     336: astore        11
     338: aload         8
     340: monitorexit
     341: aload         11
     343: athrow
     344: aload         6
     346: monitorexit
     347: goto          358
     350: astore        12
     352: aload         6
     354: monitorexit
     355: aload         12
     357: athrow
     358: return
    Exception table:
       from    to  target type
         134   270   299   any
         299   301   299   any
         114   130   336   any
         134   333   336   any
         336   341   336   any
          29    80   350   any
          81   133   350   any
         134   347   350   any
         350   355   350   any

  public void closeExpiredConnections();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: invokespecial #24                 // Method assertNotShutdown:()V
       8: invokestatic  #46                 // Method java/lang/System.currentTimeMillis:()J
      11: lstore_2
      12: aload_0
      13: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      16: ifnull        47
      19: aload_0
      20: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: lload_2
      24: invokevirtual #47                 // Method org/apache/http/impl/conn/HttpPoolEntry.isExpired:(J)Z
      27: ifeq          47
      30: aload_0
      31: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      34: invokevirtual #38                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
      37: aload_0
      38: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      41: invokevirtual #48                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      44: invokevirtual #49                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      47: aload_1
      48: monitorexit
      49: goto          59
      52: astore        4
      54: aload_1
      55: monitorexit
      56: aload         4
      58: athrow
      59: return
    Exception table:
       from    to  target type
           4    49    52   any
          52    56    52   any

  public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #72                 // String Time unit must not be null.
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: dup
      16: astore        4
      18: monitorenter
      19: aload_0
      20: invokespecial #24                 // Method assertNotShutdown:()V
      23: aload_3
      24: lload_1
      25: invokevirtual #73                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      28: lstore        5
      30: lload         5
      32: lconst_0
      33: lcmp
      34: ifge          40
      37: lconst_0
      38: lstore        5
      40: invokestatic  #46                 // Method java/lang/System.currentTimeMillis:()J
      43: lload         5
      45: lsub
      46: lstore        7
      48: aload_0
      49: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      52: ifnull        85
      55: aload_0
      56: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      59: invokevirtual #74                 // Method org/apache/http/impl/conn/HttpPoolEntry.getUpdated:()J
      62: lload         7
      64: lcmp
      65: ifgt          85
      68: aload_0
      69: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      72: invokevirtual #38                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
      75: aload_0
      76: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      79: invokevirtual #48                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      82: invokevirtual #49                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      85: aload         4
      87: monitorexit
      88: goto          99
      91: astore        9
      93: aload         4
      95: monitorexit
      96: aload         9
      98: athrow
      99: return
    Exception table:
       from    to  target type
          19    88    91   any
          91    96    91   any

  public void shutdown();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #19                 // Field shutdown:Z
       9: aload_0
      10: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      13: ifnull        23
      16: aload_0
      17: getfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      20: invokevirtual #38                 // Method org/apache/http/impl/conn/HttpPoolEntry.close:()V
      23: aload_0
      24: aconst_null
      25: putfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      28: aload_0
      29: aconst_null
      30: putfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
      33: goto          49
      36: astore_2
      37: aload_0
      38: aconst_null
      39: putfield      #35                 // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      42: aload_0
      43: aconst_null
      44: putfield      #33                 // Field conn:Lorg/apache/http/impl/conn/ManagedClientConnectionImpl;
      47: aload_2
      48: athrow
      49: aload_1
      50: monitorexit
      51: goto          59
      54: astore_3
      55: aload_1
      56: monitorexit
      57: aload_3
      58: athrow
      59: return
    Exception table:
       from    to  target type
           9    23    36   any
          36    37    36   any
           4    51    54   any
          54    57    54   any

  static {};
    Code:
       0: new           #75                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #76                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: putstatic     #39                 // Field COUNTER:Ljava/util/concurrent/atomic/AtomicLong;
      10: return
}
