Compiled from "ManagedClientConnectionImpl.java"
class org.apache.http.impl.conn.ManagedClientConnectionImpl implements org.apache.http.conn.ManagedClientConnection {
  private final org.apache.http.conn.ClientConnectionManager manager;

  private final org.apache.http.conn.ClientConnectionOperator operator;

  private volatile org.apache.http.impl.conn.HttpPoolEntry poolEntry;

  private volatile boolean reusable;

  private volatile long duration;

  org.apache.http.impl.conn.ManagedClientConnectionImpl(org.apache.http.conn.ClientConnectionManager, org.apache.http.conn.ClientConnectionOperator, org.apache.http.impl.conn.HttpPoolEntry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Connection manager may not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String Connection operator may not be null
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: ifnonnull     46
      36: new           #2                  // class java/lang/IllegalArgumentException
      39: dup
      40: ldc           #6                  // String HTTP pool entry may not be null
      42: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #7                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
      51: aload_0
      52: aload_2
      53: putfield      #8                  // Field operator:Lorg/apache/http/conn/ClientConnectionOperator;
      56: aload_0
      57: aload_3
      58: putfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      61: aload_0
      62: iconst_0
      63: putfield      #10                 // Field reusable:Z
      66: aload_0
      67: ldc2_w        #11                 // long 9223372036854775807l
      70: putfield      #13                 // Field duration:J
      73: return

  org.apache.http.impl.conn.HttpPoolEntry getPoolEntry();
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: areturn

  org.apache.http.impl.conn.HttpPoolEntry detach();
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      10: aload_1
      11: areturn

  public org.apache.http.conn.ClientConnectionManager getManager();
    Code:
       0: aload_0
       1: getfield      #7                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
       4: areturn

  private org.apache.http.conn.OperatedClientConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      15: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      18: areturn

  private org.apache.http.conn.OperatedClientConnection ensureConnection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #16                 // class org/apache/http/impl/conn/ConnectionShutdownException
      12: dup
      13: invokespecial #17                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      16: athrow
      17: aload_1
      18: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      21: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      24: areturn

  private org.apache.http.impl.conn.HttpPoolEntry ensurePoolEntry();
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #16                 // class org/apache/http/impl/conn/ConnectionShutdownException
      12: dup
      13: invokespecial #17                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      16: athrow
      17: aload_1
      18: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnull        30
       9: aload_1
      10: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      13: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      16: astore_2
      17: aload_1
      18: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      21: invokevirtual #19                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      24: aload_2
      25: invokeinterface #20,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.close:()V
      30: return

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: ifnull        30
       9: aload_1
      10: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      13: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      16: astore_2
      17: aload_1
      18: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      21: invokevirtual #19                 // Method org/apache/http/conn/routing/RouteTracker.reset:()V
      24: aload_2
      25: invokeinterface #21,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.shutdown:()V
      30: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method getConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #23,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isOpen:()Z
      15: ireturn
      16: iconst_0
      17: ireturn

  public boolean isStale();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method getConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokeinterface #24,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isStale:()Z
      15: ireturn
      16: iconst_1
      17: ireturn

  public void setSocketTimeout(int);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokeinterface #26,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.setSocketTimeout:(I)V
      12: return

  public int getSocketTimeout();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #27,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getSocketTimeout:()I
      11: ireturn

  public org.apache.http.HttpConnectionMetrics getMetrics();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #28,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getMetrics:()Lorg/apache/http/HttpConnectionMetrics;
      11: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #29,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.flush:()V
      11: return

  public boolean isResponseAvailable(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: iload_1
       7: invokeinterface #30,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isResponseAvailable:(I)Z
      12: ireturn

  public void receiveResponseEntity(org.apache.http.HttpResponse) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #31,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.receiveResponseEntity:(Lorg/apache/http/HttpResponse;)V
      12: return

  public org.apache.http.HttpResponse receiveResponseHeader() throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #32,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.receiveResponseHeader:()Lorg/apache/http/HttpResponse;
      11: areturn

  public void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #33,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.sendRequestEntity:(Lorg/apache/http/HttpEntityEnclosingRequest;)V
      12: return

  public void sendRequestHeader(org.apache.http.HttpRequest) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokeinterface #34,  2           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.sendRequestHeader:(Lorg/apache/http/HttpRequest;)V
      12: return

  public java.net.InetAddress getLocalAddress();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #35,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getLocalAddress:()Ljava/net/InetAddress;
      11: areturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #36,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getLocalPort:()I
      11: ireturn

  public java.net.InetAddress getRemoteAddress();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #37,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getRemoteAddress:()Ljava/net/InetAddress;
      11: areturn

  public int getRemotePort();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #38,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getRemotePort:()I
      11: ireturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
      11: ireturn

  public javax.net.ssl.SSLSession getSSLSession();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokeinterface #40,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.getSocket:()Ljava/net/Socket;
      13: astore_3
      14: aload_3
      15: instanceof    #41                 // class javax/net/ssl/SSLSocket
      18: ifeq          29
      21: aload_3
      22: checkcast     #41                 // class javax/net/ssl/SSLSocket
      25: invokevirtual #42                 // Method javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;
      28: astore_2
      29: aload_2
      30: areturn

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: instanceof    #43                 // class org/apache/http/protocol/HttpContext
       9: ifeq          23
      12: aload_2
      13: checkcast     #43                 // class org/apache/http/protocol/HttpContext
      16: aload_1
      17: invokeinterface #44,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      22: areturn
      23: aconst_null
      24: areturn

  public java.lang.Object removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_2
       5: aload_2
       6: instanceof    #43                 // class org/apache/http/protocol/HttpContext
       9: ifeq          23
      12: aload_2
      13: checkcast     #43                 // class org/apache/http/protocol/HttpContext
      16: aload_1
      17: invokeinterface #45,  2           // InterfaceMethod org/apache/http/protocol/HttpContext.removeAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      22: areturn
      23: aconst_null
      24: areturn

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method ensureConnection:()Lorg/apache/http/conn/OperatedClientConnection;
       4: astore_3
       5: aload_3
       6: instanceof    #43                 // class org/apache/http/protocol/HttpContext
       9: ifeq          23
      12: aload_3
      13: checkcast     #43                 // class org/apache/http/protocol/HttpContext
      16: aload_1
      17: aload_2
      18: invokeinterface #46,  3           // InterfaceMethod org/apache/http/protocol/HttpContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      23: return

  public org.apache.http.conn.routing.HttpRoute getRoute();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method ensurePoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: invokevirtual #48                 // Method org/apache/http/impl/conn/HttpPoolEntry.getEffectiveRoute:()Lorg/apache/http/conn/routing/HttpRoute;
       9: areturn

  public void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #49                 // String Route may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_3
      15: ifnonnull     28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #50                 // String HTTP parameters may not be null
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: dup
      30: astore        5
      32: monitorenter
      33: aload_0
      34: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      37: ifnonnull     48
      40: new           #16                 // class org/apache/http/impl/conn/ConnectionShutdownException
      43: dup
      44: invokespecial #17                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      47: athrow
      48: aload_0
      49: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      52: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      55: astore        6
      57: aload         6
      59: invokevirtual #51                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      62: ifeq          75
      65: new           #52                 // class java/lang/IllegalStateException
      68: dup
      69: ldc           #53                 // String Connection already open
      71: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      79: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      82: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      85: astore        4
      87: aload         5
      89: monitorexit
      90: goto          101
      93: astore        7
      95: aload         5
      97: monitorexit
      98: aload         7
     100: athrow
     101: aload_1
     102: invokevirtual #55                 // Method org/apache/http/conn/routing/HttpRoute.getProxyHost:()Lorg/apache/http/HttpHost;
     105: astore        5
     107: aload_0
     108: getfield      #8                  // Field operator:Lorg/apache/http/conn/ClientConnectionOperator;
     111: aload         4
     113: aload         5
     115: ifnull        123
     118: aload         5
     120: goto          127
     123: aload_1
     124: invokevirtual #56                 // Method org/apache/http/conn/routing/HttpRoute.getTargetHost:()Lorg/apache/http/HttpHost;
     127: aload_1
     128: invokevirtual #57                 // Method org/apache/http/conn/routing/HttpRoute.getLocalAddress:()Ljava/net/InetAddress;
     131: aload_2
     132: aload_3
     133: invokeinterface #58,  6           // InterfaceMethod org/apache/http/conn/ClientConnectionOperator.openConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Ljava/net/InetAddress;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
     138: aload_0
     139: dup
     140: astore        6
     142: monitorenter
     143: aload_0
     144: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     147: ifnonnull     158
     150: new           #59                 // class java/io/InterruptedIOException
     153: dup
     154: invokespecial #60                 // Method java/io/InterruptedIOException."<init>":()V
     157: athrow
     158: aload_0
     159: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     162: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     165: astore        7
     167: aload         5
     169: ifnonnull     187
     172: aload         7
     174: aload         4
     176: invokeinterface #39,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
     181: invokevirtual #61                 // Method org/apache/http/conn/routing/RouteTracker.connectTarget:(Z)V
     184: goto          201
     187: aload         7
     189: aload         5
     191: aload         4
     193: invokeinterface #39,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
     198: invokevirtual #62                 // Method org/apache/http/conn/routing/RouteTracker.connectProxy:(Lorg/apache/http/HttpHost;Z)V
     201: aload         6
     203: monitorexit
     204: goto          215
     207: astore        8
     209: aload         6
     211: monitorexit
     212: aload         8
     214: athrow
     215: return
    Exception table:
       from    to  target type
          33    90    93   any
          93    98    93   any
         143   204   207   any
         207   212   207   any

  public void tunnelTarget(boolean, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #50                 // String HTTP parameters may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: dup
      16: astore        5
      18: monitorenter
      19: aload_0
      20: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: ifnonnull     34
      26: new           #16                 // class org/apache/http/impl/conn/ConnectionShutdownException
      29: dup
      30: invokespecial #17                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      38: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      41: astore        6
      43: aload         6
      45: invokevirtual #51                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      48: ifne          61
      51: new           #52                 // class java/lang/IllegalStateException
      54: dup
      55: ldc           #63                 // String Connection not open
      57: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload         6
      63: invokevirtual #64                 // Method org/apache/http/conn/routing/RouteTracker.isTunnelled:()Z
      66: ifeq          79
      69: new           #52                 // class java/lang/IllegalStateException
      72: dup
      73: ldc           #65                 // String Connection is already tunnelled
      75: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload         6
      81: invokevirtual #66                 // Method org/apache/http/conn/routing/RouteTracker.getTargetHost:()Lorg/apache/http/HttpHost;
      84: astore_3
      85: aload_0
      86: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      89: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      92: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      95: astore        4
      97: aload         5
      99: monitorexit
     100: goto          111
     103: astore        7
     105: aload         5
     107: monitorexit
     108: aload         7
     110: athrow
     111: aload         4
     113: aconst_null
     114: aload_3
     115: iload_1
     116: aload_2
     117: invokeinterface #67,  5           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V
     122: aload_0
     123: dup
     124: astore        5
     126: monitorenter
     127: aload_0
     128: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     131: ifnonnull     142
     134: new           #59                 // class java/io/InterruptedIOException
     137: dup
     138: invokespecial #60                 // Method java/io/InterruptedIOException."<init>":()V
     141: athrow
     142: aload_0
     143: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     146: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     149: astore        6
     151: aload         6
     153: iload_1
     154: invokevirtual #68                 // Method org/apache/http/conn/routing/RouteTracker.tunnelTarget:(Z)V
     157: aload         5
     159: monitorexit
     160: goto          171
     163: astore        8
     165: aload         5
     167: monitorexit
     168: aload         8
     170: athrow
     171: return
    Exception table:
       from    to  target type
          19   100   103   any
         103   108   103   any
         127   160   163   any
         163   168   163   any

  public void tunnelProxy(org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #69                 // String Next proxy amy not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_3
      15: ifnonnull     28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #50                 // String HTTP parameters may not be null
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: dup
      30: astore        5
      32: monitorenter
      33: aload_0
      34: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      37: ifnonnull     48
      40: new           #16                 // class org/apache/http/impl/conn/ConnectionShutdownException
      43: dup
      44: invokespecial #17                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      47: athrow
      48: aload_0
      49: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      52: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      55: astore        6
      57: aload         6
      59: invokevirtual #51                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      62: ifne          75
      65: new           #52                 // class java/lang/IllegalStateException
      68: dup
      69: ldc           #63                 // String Connection not open
      71: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      79: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      82: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      85: astore        4
      87: aload         5
      89: monitorexit
      90: goto          101
      93: astore        7
      95: aload         5
      97: monitorexit
      98: aload         7
     100: athrow
     101: aload         4
     103: aconst_null
     104: aload_1
     105: iload_2
     106: aload_3
     107: invokeinterface #67,  5           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.update:(Ljava/net/Socket;Lorg/apache/http/HttpHost;ZLorg/apache/http/params/HttpParams;)V
     112: aload_0
     113: dup
     114: astore        5
     116: monitorenter
     117: aload_0
     118: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     121: ifnonnull     132
     124: new           #59                 // class java/io/InterruptedIOException
     127: dup
     128: invokespecial #60                 // Method java/io/InterruptedIOException."<init>":()V
     131: athrow
     132: aload_0
     133: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     136: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     139: astore        6
     141: aload         6
     143: aload_1
     144: iload_2
     145: invokevirtual #70                 // Method org/apache/http/conn/routing/RouteTracker.tunnelProxy:(Lorg/apache/http/HttpHost;Z)V
     148: aload         5
     150: monitorexit
     151: goto          162
     154: astore        8
     156: aload         5
     158: monitorexit
     159: aload         8
     161: athrow
     162: return
    Exception table:
       from    to  target type
          33    90    93   any
          93    98    93   any
         117   151   154   any
         154   159   154   any

  public void layerProtocol(org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #50                 // String HTTP parameters may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: dup
      16: astore        5
      18: monitorenter
      19: aload_0
      20: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: ifnonnull     34
      26: new           #16                 // class org/apache/http/impl/conn/ConnectionShutdownException
      29: dup
      30: invokespecial #17                 // Method org/apache/http/impl/conn/ConnectionShutdownException."<init>":()V
      33: athrow
      34: aload_0
      35: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      38: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
      41: astore        6
      43: aload         6
      45: invokevirtual #51                 // Method org/apache/http/conn/routing/RouteTracker.isConnected:()Z
      48: ifne          61
      51: new           #52                 // class java/lang/IllegalStateException
      54: dup
      55: ldc           #63                 // String Connection not open
      57: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload         6
      63: invokevirtual #64                 // Method org/apache/http/conn/routing/RouteTracker.isTunnelled:()Z
      66: ifne          79
      69: new           #52                 // class java/lang/IllegalStateException
      72: dup
      73: ldc           #71                 // String Protocol layering without a tunnel not supported
      75: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload         6
      81: invokevirtual #72                 // Method org/apache/http/conn/routing/RouteTracker.isLayered:()Z
      84: ifeq          97
      87: new           #52                 // class java/lang/IllegalStateException
      90: dup
      91: ldc           #73                 // String Multiple protocol layering not supported
      93: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload         6
      99: invokevirtual #66                 // Method org/apache/http/conn/routing/RouteTracker.getTargetHost:()Lorg/apache/http/HttpHost;
     102: astore_3
     103: aload_0
     104: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     107: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
     110: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
     113: astore        4
     115: aload         5
     117: monitorexit
     118: goto          129
     121: astore        7
     123: aload         5
     125: monitorexit
     126: aload         7
     128: athrow
     129: aload_0
     130: getfield      #8                  // Field operator:Lorg/apache/http/conn/ClientConnectionOperator;
     133: aload         4
     135: aload_3
     136: aload_1
     137: aload_2
     138: invokeinterface #74,  5           // InterfaceMethod org/apache/http/conn/ClientConnectionOperator.updateSecureConnection:(Lorg/apache/http/conn/OperatedClientConnection;Lorg/apache/http/HttpHost;Lorg/apache/http/protocol/HttpContext;Lorg/apache/http/params/HttpParams;)V
     143: aload_0
     144: dup
     145: astore        5
     147: monitorenter
     148: aload_0
     149: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     152: ifnonnull     163
     155: new           #59                 // class java/io/InterruptedIOException
     158: dup
     159: invokespecial #60                 // Method java/io/InterruptedIOException."<init>":()V
     162: athrow
     163: aload_0
     164: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
     167: invokevirtual #18                 // Method org/apache/http/impl/conn/HttpPoolEntry.getTracker:()Lorg/apache/http/conn/routing/RouteTracker;
     170: astore        6
     172: aload         6
     174: aload         4
     176: invokeinterface #39,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isSecure:()Z
     181: invokevirtual #75                 // Method org/apache/http/conn/routing/RouteTracker.layerProtocol:(Z)V
     184: aload         5
     186: monitorexit
     187: goto          198
     190: astore        8
     192: aload         5
     194: monitorexit
     195: aload         8
     197: athrow
     198: return
    Exception table:
       from    to  target type
          19   118   121   any
         121   126   121   any
         148   187   190   any
         190   195   190   any

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method ensurePoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_1
       5: aload_1
       6: invokevirtual #76                 // Method org/apache/http/impl/conn/HttpPoolEntry.getState:()Ljava/lang/Object;
       9: areturn

  public void setState(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method ensurePoolEntry:()Lorg/apache/http/impl/conn/HttpPoolEntry;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #77                 // Method org/apache/http/impl/conn/HttpPoolEntry.setState:(Ljava/lang/Object;)V
      10: return

  public void markReusable();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field reusable:Z
       5: return

  public void unmarkReusable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #10                 // Field reusable:Z
       5: return

  public boolean isMarkedReusable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field reusable:Z
       4: ireturn

  public void setIdleDuration(long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          18
       6: aload_0
       7: aload_3
       8: lload_1
       9: invokevirtual #78                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: putfield      #13                 // Field duration:J
      15: goto          25
      18: aload_0
      19: ldc2_w        #79                 // long -1l
      22: putfield      #13                 // Field duration:J
      25: return

  public void releaseConnection();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       8: ifnonnull     14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: getfield      #7                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
      18: aload_0
      19: aload_0
      20: getfield      #13                 // Field duration:J
      23: getstatic     #81                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokeinterface #82,  5           // InterfaceMethod org/apache/http/conn/ClientConnectionManager.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V
      31: aload_0
      32: aconst_null
      33: putfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      36: aload_1
      37: monitorexit
      38: goto          46
      41: astore_2
      42: aload_1
      43: monitorexit
      44: aload_2
      45: athrow
      46: return
    Exception table:
       from    to  target type
           4    13    41   any
          14    38    41   any
          41    44    41   any

  public void abortConnection();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
       8: ifnonnull     14
      11: aload_1
      12: monitorexit
      13: return
      14: aload_0
      15: iconst_0
      16: putfield      #10                 // Field reusable:Z
      19: aload_0
      20: getfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      23: invokevirtual #14                 // Method org/apache/http/impl/conn/HttpPoolEntry.getConnection:()Ljava/lang/Object;
      26: checkcast     #15                 // class org/apache/http/conn/OperatedClientConnection
      29: astore_2
      30: aload_2
      31: invokeinterface #21,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.shutdown:()V
      36: goto          40
      39: astore_3
      40: aload_0
      41: getfield      #7                  // Field manager:Lorg/apache/http/conn/ClientConnectionManager;
      44: aload_0
      45: aload_0
      46: getfield      #13                 // Field duration:J
      49: getstatic     #81                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokeinterface #82,  5           // InterfaceMethod org/apache/http/conn/ClientConnectionManager.releaseConnection:(Lorg/apache/http/conn/ManagedClientConnection;JLjava/util/concurrent/TimeUnit;)V
      57: aload_0
      58: aconst_null
      59: putfield      #9                  // Field poolEntry:Lorg/apache/http/impl/conn/HttpPoolEntry;
      62: aload_1
      63: monitorexit
      64: goto          74
      67: astore        4
      69: aload_1
      70: monitorexit
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
          30    36    39   Class java/io/IOException
           4    13    67   any
          14    64    67   any
          67    71    67   any
}
