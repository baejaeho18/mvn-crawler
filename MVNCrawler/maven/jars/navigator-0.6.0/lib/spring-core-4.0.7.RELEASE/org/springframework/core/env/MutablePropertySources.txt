Compiled from "MutablePropertySources.java"
public class org.springframework.core.env.MutablePropertySources implements org.springframework.core.env.PropertySources {
  static final java.lang.String NON_EXISTENT_PROPERTY_SOURCE_MESSAGE;

  static final java.lang.String ILLEGAL_RELATIVE_ADDITION_MESSAGE;

  private final org.apache.commons.logging.Log logger;

  private final java.util.LinkedList<org.springframework.core.env.PropertySource<?>> propertySourceList;

  public org.springframework.core.env.MutablePropertySources();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      15: aload_0
      16: aload_0
      17: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokestatic  #6                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      23: putfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      26: return

  public org.springframework.core.env.MutablePropertySources(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method "<init>":()V
       4: aload_1
       5: invokeinterface #9,  1            // InterfaceMethod org/springframework/core/env/PropertySources.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          38
      20: aload_2
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #12                 // class org/springframework/core/env/PropertySource
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #13                 // Method addLast:(Lorg/springframework/core/env/PropertySource;)V
      35: goto          11
      38: return

  org.springframework.core.env.MutablePropertySources(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      20: return

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: aload_1
       5: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokevirtual #15                 // Method java/util/LinkedList.contains:(Ljava/lang/Object;)Z
      11: ireturn

  public org.springframework.core.env.PropertySource<?> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: aload_1
       5: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      11: istore_2
      12: iload_2
      13: iconst_m1
      14: if_icmpne     21
      17: aconst_null
      18: goto          32
      21: aload_0
      22: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      25: iload_2
      26: invokevirtual #17                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      29: checkcast     #12                 // class org/springframework/core/env/PropertySource
      32: areturn

  public java.util.Iterator<org.springframework.core.env.PropertySource<?>> iterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: invokevirtual #18                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: areturn

  public void addFirst(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          37
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #20                 // String Adding [%s] PropertySource with highest search precedence
      18: iconst_1
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      37: aload_0
      38: aload_1
      39: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      42: aload_0
      43: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      46: aload_1
      47: invokevirtual #26                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      50: return

  public void addLast(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          37
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #27                 // String Adding [%s] PropertySource with lowest search precedence
      18: iconst_1
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      37: aload_0
      38: aload_1
      39: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      42: aload_0
      43: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      46: aload_1
      47: invokevirtual #28                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      50: return

  public void addBefore(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #29                 // String Adding [%s] PropertySource with search precedence immediately higher than [%s]
      18: iconst_2
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_2
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #30                 // Method assertLegalRelativeAddition:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
      47: aload_0
      48: aload_2
      49: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      52: aload_0
      53: aload_1
      54: invokespecial #31                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      57: istore_3
      58: aload_0
      59: iload_3
      60: aload_2
      61: invokespecial #32                 // Method addAtIndex:(ILorg/springframework/core/env/PropertySource;)V
      64: return

  public void addAfter(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #33                 // String Adding [%s] PropertySource with search precedence immediately lower than [%s]
      18: iconst_2
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_2
      25: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_1
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: aload_2
      44: invokevirtual #30                 // Method assertLegalRelativeAddition:(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
      47: aload_0
      48: aload_2
      49: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
      52: aload_0
      53: aload_1
      54: invokespecial #31                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      57: istore_3
      58: aload_0
      59: iload_3
      60: iconst_1
      61: iadd
      62: aload_2
      63: invokespecial #32                 // Method addAtIndex:(ILorg/springframework/core/env/PropertySource;)V
      66: return

  public int precedenceOf(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
       8: ireturn

  public org.springframework.core.env.PropertySource<?> remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          34
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #34                 // String Removing [%s] PropertySource
      18: iconst_1
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      38: aload_1
      39: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      42: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      45: istore_2
      46: iload_2
      47: iconst_m1
      48: if_icmpne     55
      51: aconst_null
      52: goto          66
      55: aload_0
      56: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      59: iload_2
      60: invokevirtual #35                 // Method java/util/LinkedList.remove:(I)Ljava/lang/Object;
      63: checkcast     #12                 // class org/springframework/core/env/PropertySource
      66: areturn

  public void replace(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #36                 // String Replacing [%s] PropertySource with [%s]
      18: iconst_2
      19: anewarray     #21                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: dup
      27: iconst_1
      28: aload_2
      29: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      32: aastore
      33: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: aload_1
      43: invokespecial #31                 // Method assertPresentAndGetIndex:(Ljava/lang/String;)I
      46: istore_3
      47: aload_0
      48: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      51: iload_3
      52: aload_2
      53: invokevirtual #37                 // Method java/util/LinkedList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: invokevirtual #38                 // Method java/util/LinkedList.size:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method size:()I
       4: anewarray     #40                 // class java/lang/String
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: invokevirtual #39                 // Method size:()I
      15: if_icmpge     41
      18: aload_1
      19: iload_2
      20: aload_0
      21: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      24: iload_2
      25: invokevirtual #17                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      28: checkcast     #12                 // class org/springframework/core/env/PropertySource
      31: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
      34: aastore
      35: iinc          2, 1
      38: goto          10
      41: ldc           #41                 // String [%s]
      43: iconst_1
      44: anewarray     #21                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_1
      50: invokestatic  #42                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      53: aastore
      54: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: areturn

  protected void assertLegalRelativeAddition(java.lang.String, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_2
       1: invokevirtual #22                 // Method org/springframework/core/env/PropertySource.getName:()Ljava/lang/String;
       4: astore_3
       5: aload_1
       6: aload_3
       7: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #45                 // String PropertySource named [%s] cannot be added relative to itself
      20: iconst_1
      21: anewarray     #21                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_3
      27: aastore
      28: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokestatic  #46                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: return

  protected void removeIfPresent(org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #15                 // Method java/util/LinkedList.contains:(Ljava/lang/Object;)Z
       8: ifeq          20
      11: aload_0
      12: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
      15: aload_1
      16: invokevirtual #47                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      19: pop
      20: return

  private void addAtIndex(int, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #25                 // Method removeIfPresent:(Lorg/springframework/core/env/PropertySource;)V
       5: aload_0
       6: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       9: iload_1
      10: aload_2
      11: invokevirtual #48                 // Method java/util/LinkedList.add:(ILjava/lang/Object;)V
      14: return

  private int assertPresentAndGetIndex(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertySourceList:Ljava/util/LinkedList;
       4: aload_1
       5: invokestatic  #14                 // Method org/springframework/core/env/PropertySource.named:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
       8: invokevirtual #16                 // Method java/util/LinkedList.indexOf:(Ljava/lang/Object;)I
      11: istore_2
      12: iload_2
      13: iflt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #49                 // String PropertySource named [%s] does not exist
      23: iconst_1
      24: anewarray     #21                 // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_1
      30: aastore
      31: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokestatic  #46                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      37: iload_2
      38: ireturn
}
