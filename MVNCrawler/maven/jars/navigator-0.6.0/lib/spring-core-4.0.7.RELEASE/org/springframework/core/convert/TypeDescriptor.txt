Compiled from "TypeDescriptor.java"
public class org.springframework.core.convert.TypeDescriptor implements java.io.Serializable {
  static final java.lang.annotation.Annotation[] EMPTY_ANNOTATION_ARRAY;

  private static final java.util.Map<java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor> commonTypesCache;

  private static final java.lang.Class<?>[] CACHED_COMMON_TYPES;

  private final java.lang.Class<?> type;

  private final org.springframework.core.ResolvableType resolvableType;

  private final java.lang.annotation.Annotation[] annotations;

  public org.springframework.core.convert.TypeDescriptor(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String MethodParameter must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_1
      11: invokevirtual #4                  // Method org/springframework/core/MethodParameter.getNestingLevel:()I
      14: iconst_1
      15: if_icmpeq     28
      18: new           #5                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #6                  // String MethodParameter argument must have its nestingLevel set to 1
      24: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: invokestatic  #8                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      33: putfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      36: aload_0
      37: aload_0
      38: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      41: aload_1
      42: invokevirtual #10                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      45: invokevirtual #11                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      48: putfield      #12                 // Field type:Ljava/lang/Class;
      51: aload_0
      52: aload_1
      53: invokevirtual #13                 // Method org/springframework/core/MethodParameter.getParameterIndex:()I
      56: iconst_m1
      57: if_icmpne     71
      60: aload_0
      61: aload_1
      62: invokevirtual #14                 // Method org/springframework/core/MethodParameter.getMethodAnnotations:()[Ljava/lang/annotation/Annotation;
      65: invokespecial #15                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      68: goto          79
      71: aload_0
      72: aload_1
      73: invokevirtual #16                 // Method org/springframework/core/MethodParameter.getParameterAnnotations:()[Ljava/lang/annotation/Annotation;
      76: invokespecial #15                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      79: putfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      82: return

  public org.springframework.core.convert.TypeDescriptor(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #18                 // String Field must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #19                 // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
      15: putfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      18: aload_0
      19: aload_0
      20: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      23: aload_1
      24: invokevirtual #20                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      27: invokevirtual #11                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      30: putfield      #12                 // Field type:Ljava/lang/Class;
      33: aload_0
      34: aload_0
      35: aload_1
      36: invokevirtual #21                 // Method java/lang/reflect/Field.getAnnotations:()[Ljava/lang/annotation/Annotation;
      39: invokespecial #15                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      42: putfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      45: return

  public org.springframework.core.convert.TypeDescriptor(org.springframework.core.convert.Property);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #22                 // String Property must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokevirtual #23                 // Method org/springframework/core/convert/Property.getMethodParameter:()Lorg/springframework/core/MethodParameter;
      15: invokestatic  #8                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
      18: putfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      21: aload_0
      22: aload_0
      23: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      26: aload_1
      27: invokevirtual #24                 // Method org/springframework/core/convert/Property.getType:()Ljava/lang/Class;
      30: invokevirtual #11                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      33: putfield      #12                 // Field type:Ljava/lang/Class;
      36: aload_0
      37: aload_0
      38: aload_1
      39: invokevirtual #25                 // Method org/springframework/core/convert/Property.getAnnotations:()[Ljava/lang/annotation/Annotation;
      42: invokespecial #15                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      45: putfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      48: return

  protected org.springframework.core.convert.TypeDescriptor(org.springframework.core.ResolvableType, java.lang.Class<?>, java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       9: aload_0
      10: aload_2
      11: ifnull        18
      14: aload_2
      15: goto          24
      18: aload_1
      19: ldc           #26                 // class java/lang/Object
      21: invokevirtual #11                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      24: putfield      #12                 // Field type:Ljava/lang/Class;
      27: aload_0
      28: aload_0
      29: aload_3
      30: invokespecial #15                 // Method nullSafeAnnotations:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;
      33: putfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      36: return

  private java.lang.annotation.Annotation[] nullSafeAnnotations(java.lang.annotation.Annotation[]);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          11
       8: getstatic     #27                 // Field EMPTY_ANNOTATION_ARRAY:[Ljava/lang/annotation/Annotation;
      11: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #29                 // Method org/springframework/util/ClassUtils.resolvePrimitiveIfNecessary:(Ljava/lang/Class;)Ljava/lang/Class;
       7: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #12                 // Field type:Ljava/lang/Class;
       4: areturn

  public org.springframework.core.ResolvableType getResolvableType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: areturn

  public java.lang.Object getSource();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: ifnull        17
       7: aload_0
       8: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      11: invokevirtual #30                 // Method org/springframework/core/ResolvableType.getSource:()Ljava/lang/Object;
      14: goto          18
      17: aconst_null
      18: areturn

  public org.springframework.core.convert.TypeDescriptor narrow(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_0
      11: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokestatic  #32                 // Method org/springframework/core/ResolvableType.forType:(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      17: astore_2
      18: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      21: dup
      22: aload_2
      23: aconst_null
      24: aload_0
      25: getfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      28: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      31: areturn

  public org.springframework.core.convert.TypeDescriptor upcast(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: aload_0
       8: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
      11: invokestatic  #35                 // Method org/springframework/util/Assert.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)V
      14: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      17: dup
      18: aload_0
      19: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      22: aload_1
      23: invokevirtual #36                 // Method org/springframework/core/ResolvableType.as:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      26: aload_1
      27: aload_0
      28: getfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      31: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      34: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       4: invokestatic  #37                 // Method org/springframework/util/ClassUtils.getQualifiedName:(Ljava/lang/Class;)Ljava/lang/String;
       7: areturn

  public boolean isPrimitive();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #38                 // Method java/lang/Class.isPrimitive:()Z
       7: ireturn

  public java.lang.annotation.Annotation[] getAnnotations();
    Code:
       0: aload_0
       1: getfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
       4: areturn

  public boolean hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     46
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: invokeinterface #41,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      30: aload_1
      31: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ifeq          40
      37: aload         5
      39: areturn
      40: iinc          4, 1
      43: goto          11
      46: aload_0
      47: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      50: astore_2
      51: aload_2
      52: arraylength
      53: istore_3
      54: iconst_0
      55: istore        4
      57: iload         4
      59: iload_3
      60: if_icmpge     96
      63: aload_2
      64: iload         4
      66: aaload
      67: astore        5
      69: aload         5
      71: invokeinterface #41,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      76: aload_1
      77: invokevirtual #43                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      80: astore        6
      82: aload         6
      84: ifnull        90
      87: aload         6
      89: areturn
      90: iinc          4, 1
      93: goto          57
      96: aconst_null
      97: areturn

  public boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method getObjectType:()Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #44                 // Method getObjectType:()Ljava/lang/Class;
       8: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: istore_2
      12: iload_2
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: invokevirtual #46                 // Method isArray:()Z
      22: ifeq          44
      25: aload_1
      26: invokevirtual #46                 // Method isArray:()Z
      29: ifeq          44
      32: aload_0
      33: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      36: aload_1
      37: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      40: invokevirtual #48                 // Method isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      43: ireturn
      44: aload_0
      45: invokevirtual #49                 // Method isCollection:()Z
      48: ifeq          71
      51: aload_1
      52: invokevirtual #49                 // Method isCollection:()Z
      55: ifeq          71
      58: aload_0
      59: aload_0
      60: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      63: aload_1
      64: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      67: invokespecial #50                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      70: ireturn
      71: aload_0
      72: invokevirtual #51                 // Method isMap:()Z
      75: ifeq          121
      78: aload_1
      79: invokevirtual #51                 // Method isMap:()Z
      82: ifeq          121
      85: aload_0
      86: aload_0
      87: invokevirtual #52                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      90: aload_1
      91: invokevirtual #52                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
      94: invokespecial #50                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      97: ifeq          119
     100: aload_0
     101: aload_0
     102: invokevirtual #53                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     105: aload_1
     106: invokevirtual #53                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     109: invokespecial #50                 // Method isNestedAssignable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
     112: ifeq          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  private boolean isNestedAssignable(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: aload_2
      12: invokevirtual #48                 // Method isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      15: ireturn

  public boolean isCollection();
    Code:
       0: ldc           #54                 // class java/util/Collection
       2: aload_0
       3: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       6: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public boolean isArray();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #55                 // Method java/lang/Class.isArray:()Z
       7: ireturn

  public org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: invokevirtual #56                 // Method org/springframework/core/ResolvableType.isArray:()Z
       7: ifeq          30
      10: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      13: dup
      14: aload_0
      15: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      18: invokevirtual #57                 // Method org/springframework/core/ResolvableType.getComponentType:()Lorg/springframework/core/ResolvableType;
      21: aconst_null
      22: aload_0
      23: getfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      26: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      29: areturn
      30: aload_0
      31: aload_0
      32: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      35: invokevirtual #58                 // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      38: iconst_0
      39: newarray       int
      41: invokevirtual #59                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      44: invokestatic  #60                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      47: areturn

  public org.springframework.core.convert.TypeDescriptor elementTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #61                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public boolean isMap();
    Code:
       0: ldc           #62                 // class java/util/Map
       2: aload_0
       3: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       6: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ireturn

  public org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method isMap:()Z
       4: ldc           #63                 // String Not a java.util.Map
       6: invokestatic  #64                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_0
      11: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokevirtual #65                 // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      17: iconst_1
      18: newarray       int
      20: dup
      21: iconst_0
      22: iconst_0
      23: iastore
      24: invokevirtual #59                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      27: invokestatic  #60                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #52                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #61                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method isMap:()Z
       4: ldc           #63                 // String Not a java.util.Map
       6: invokestatic  #64                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: aload_0
      11: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokevirtual #65                 // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      17: iconst_1
      18: newarray       int
      20: dup
      21: iconst_0
      22: iconst_1
      23: iastore
      24: invokevirtual #59                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      27: invokestatic  #60                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #53                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       6: invokespecial #61                 // Method narrow:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn

  public java.lang.Class<?> getElementType();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       5: invokespecial #66                 // Method getType:(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Class;
       8: areturn

  public java.lang.Class<?> getMapKeyType();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #52                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       5: invokespecial #66                 // Method getType:(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Class;
       8: areturn

  public java.lang.Class<?> getMapValueType();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #53                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
       5: invokespecial #66                 // Method getType:(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Class;
       8: areturn

  private java.lang.Class<?> getType(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       8: goto          12
      11: aconst_null
      12: areturn

  private org.springframework.core.convert.TypeDescriptor narrow(java.lang.Object, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ifnull        10
       4: aload_2
       5: aload_1
       6: invokevirtual #67                 // Method narrow:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
       9: areturn
      10: aload_1
      11: ifnull        36
      14: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      17: dup
      18: aload_0
      19: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      22: aload_1
      23: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: aload_0
      27: getfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      30: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      33: goto          37
      36: aconst_null
      37: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #33                 // class org/springframework/core/convert/TypeDescriptor
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #33                 // class org/springframework/core/convert/TypeDescriptor
      20: astore_2
      21: aload_0
      22: getfield      #12                 // Field type:Ljava/lang/Class;
      25: aload_2
      26: getfield      #12                 // Field type:Ljava/lang/Class;
      29: invokestatic  #68                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      41: arraylength
      42: aload_2
      43: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      46: arraylength
      47: if_icmpeq     52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      56: astore_3
      57: aload_3
      58: arraylength
      59: istore        4
      61: iconst_0
      62: istore        5
      64: iload         5
      66: iload         4
      68: if_icmpge     99
      71: aload_3
      72: iload         5
      74: aaload
      75: astore        6
      77: aload_2
      78: aload         6
      80: invokeinterface #41,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      85: invokevirtual #39                 // Method getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      88: ifnonnull     93
      91: iconst_0
      92: ireturn
      93: iinc          5, 1
      96: goto          64
      99: aload_0
     100: invokevirtual #49                 // Method isCollection:()Z
     103: ifne          113
     106: aload_0
     107: invokevirtual #46                 // Method isArray:()Z
     110: ifeq          125
     113: aload_0
     114: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     117: aload_2
     118: invokevirtual #47                 // Method getElementTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     121: invokestatic  #68                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     124: ireturn
     125: aload_0
     126: invokevirtual #51                 // Method isMap:()Z
     129: ifeq          166
     132: aload_0
     133: invokevirtual #52                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     136: aload_2
     137: invokevirtual #52                 // Method getMapKeyTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     140: invokestatic  #68                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     143: ifeq          164
     146: aload_0
     147: invokevirtual #53                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     150: aload_2
     151: invokevirtual #53                 // Method getMapValueTypeDescriptor:()Lorg/springframework/core/convert/TypeDescriptor;
     154: invokestatic  #68                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     157: ifeq          164
     160: iconst_1
     161: goto          165
     164: iconst_0
     165: ireturn
     166: iconst_1
     167: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #69                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #70                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     62
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: ldc           #72                 // String @
      34: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         5
      39: invokeinterface #41,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      44: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
      47: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: bipush        32
      52: invokevirtual #75                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: pop
      56: iinc          4, 1
      59: goto          19
      62: aload_1
      63: aload_0
      64: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      67: invokevirtual #76                 // Method org/springframework/core/ResolvableType.toString:()Ljava/lang/String;
      70: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_1
      75: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn

  public static org.springframework.core.convert.TypeDescriptor valueOf(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #26                 // class java/lang/Object
       6: astore_0
       7: getstatic     #78                 // Field commonTypesCache:Ljava/util/Map;
      10: aload_0
      11: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #33                 // class org/springframework/core/convert/TypeDescriptor
      19: astore_1
      20: aload_1
      21: ifnull        28
      24: aload_1
      25: goto          41
      28: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      31: dup
      32: aload_0
      33: invokestatic  #80                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      36: aconst_null
      37: aconst_null
      38: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      41: areturn

  public static org.springframework.core.convert.TypeDescriptor collection(java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ldc           #81                 // String collectionType must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: ldc           #54                 // class java/util/Collection
       8: aload_0
       9: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifne          25
      15: new           #5                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #82                 // String collectionType must be a java.util.Collection
      21: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: ifnull        36
      29: aload_1
      30: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      33: goto          37
      36: aconst_null
      37: astore_2
      38: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      41: dup
      42: aload_0
      43: iconst_1
      44: anewarray     #83                 // class org/springframework/core/ResolvableType
      47: dup
      48: iconst_0
      49: aload_2
      50: aastore
      51: invokestatic  #84                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      54: aconst_null
      55: aconst_null
      56: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      59: areturn

  public static org.springframework.core.convert.TypeDescriptor map(java.lang.Class<?>, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: ldc           #62                 // class java/util/Map
       2: aload_0
       3: invokevirtual #45                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          19
       9: new           #5                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #85                 // String mapType must be a java.util.Map
      15: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: ifnull        30
      23: aload_1
      24: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      27: goto          31
      30: aconst_null
      31: astore_3
      32: aload_2
      33: ifnull        43
      36: aload_2
      37: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      40: goto          44
      43: aconst_null
      44: astore        4
      46: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      49: dup
      50: aload_0
      51: iconst_2
      52: anewarray     #83                 // class org/springframework/core/ResolvableType
      55: dup
      56: iconst_0
      57: aload_3
      58: aastore
      59: dup
      60: iconst_1
      61: aload         4
      63: aastore
      64: invokestatic  #84                 // Method org/springframework/core/ResolvableType.forClassWithGenerics:(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      67: aconst_null
      68: aconst_null
      69: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      72: areturn

  public static org.springframework.core.convert.TypeDescriptor array(org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #33                 // class org/springframework/core/convert/TypeDescriptor
       9: dup
      10: aload_0
      11: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
      14: invokestatic  #86                 // Method org/springframework/core/ResolvableType.forArrayComponent:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;
      17: aconst_null
      18: aload_0
      19: invokevirtual #40                 // Method getAnnotations:()[Ljava/lang/annotation/Annotation;
      22: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      25: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.MethodParameter, int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method org/springframework/core/MethodParameter.getNestingLevel:()I
       4: iconst_1
       5: if_icmpeq     18
       8: new           #5                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #87                 // String MethodParameter nesting level must be 1: use the nestingLevel parameter to specify the desired nestingLevel for nested type traversal
      14: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      21: dup
      22: aload_0
      23: invokespecial #88                 // Method "<init>":(Lorg/springframework/core/MethodParameter;)V
      26: iload_1
      27: invokestatic  #89                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      30: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(java.lang.reflect.Field, int);
    Code:
       0: new           #33                 // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: invokespecial #90                 // Method "<init>":(Ljava/lang/reflect/Field;)V
       8: iload_1
       9: invokestatic  #89                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      12: areturn

  public static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.convert.Property, int);
    Code:
       0: new           #33                 // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: invokespecial #91                 // Method "<init>":(Lorg/springframework/core/convert/Property;)V
       8: iload_1
       9: invokestatic  #89                 // Method nested:(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;
      12: areturn

  public static org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokestatic  #92                 // Method valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      11: goto          15
      14: aconst_null
      15: areturn

  private static org.springframework.core.convert.TypeDescriptor nested(org.springframework.core.convert.TypeDescriptor, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field resolvableType:Lorg/springframework/core/ResolvableType;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_1
       9: if_icmpge     39
      12: ldc           #26                 // class java/lang/Object
      14: aload_2
      15: invokevirtual #93                 // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
      18: invokevirtual #42                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          27
      24: goto          33
      27: aload_2
      28: iconst_2
      29: invokevirtual #94                 // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
      32: astore_2
      33: iinc          3, 1
      36: goto          7
      39: aload_2
      40: getstatic     #95                 // Field org/springframework/core/ResolvableType.NONE:Lorg/springframework/core/ResolvableType;
      43: if_acmpne     48
      46: aconst_null
      47: areturn
      48: aload_0
      49: aload_2
      50: invokestatic  #60                 // Method getRelatedIfResolvable:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;
      53: areturn

  private static org.springframework.core.convert.TypeDescriptor getRelatedIfResolvable(org.springframework.core.convert.TypeDescriptor, org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #96                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #33                 // class org/springframework/core/convert/TypeDescriptor
      12: dup
      13: aload_1
      14: aconst_null
      15: aload_0
      16: getfield      #17                 // Field annotations:[Ljava/lang/annotation/Annotation;
      19: invokespecial #34                 // Method "<init>":(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      22: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #97                 // class java/lang/annotation/Annotation
       4: putstatic     #27                 // Field EMPTY_ANNOTATION_ARRAY:[Ljava/lang/annotation/Annotation;
       7: new           #98                 // class java/util/HashMap
      10: dup
      11: invokespecial #99                 // Method java/util/HashMap."<init>":()V
      14: putstatic     #78                 // Field commonTypesCache:Ljava/util/Map;
      17: bipush        18
      19: anewarray     #100                // class java/lang/Class
      22: dup
      23: iconst_0
      24: getstatic     #101                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      27: aastore
      28: dup
      29: iconst_1
      30: ldc           #102                // class java/lang/Boolean
      32: aastore
      33: dup
      34: iconst_2
      35: getstatic     #103                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      38: aastore
      39: dup
      40: iconst_3
      41: ldc           #104                // class java/lang/Byte
      43: aastore
      44: dup
      45: iconst_4
      46: getstatic     #105                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      49: aastore
      50: dup
      51: iconst_5
      52: ldc           #106                // class java/lang/Character
      54: aastore
      55: dup
      56: bipush        6
      58: getstatic     #107                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      61: aastore
      62: dup
      63: bipush        7
      65: ldc           #108                // class java/lang/Double
      67: aastore
      68: dup
      69: bipush        8
      71: getstatic     #109                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      74: aastore
      75: dup
      76: bipush        9
      78: ldc           #110                // class java/lang/Integer
      80: aastore
      81: dup
      82: bipush        10
      84: getstatic     #111                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      87: aastore
      88: dup
      89: bipush        11
      91: ldc           #112                // class java/lang/Long
      93: aastore
      94: dup
      95: bipush        12
      97: getstatic     #113                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     100: aastore
     101: dup
     102: bipush        13
     104: ldc           #114                // class java/lang/Float
     106: aastore
     107: dup
     108: bipush        14
     110: getstatic     #115                // Field java/lang/Short.TYPE:Ljava/lang/Class;
     113: aastore
     114: dup
     115: bipush        15
     117: ldc           #116                // class java/lang/Short
     119: aastore
     120: dup
     121: bipush        16
     123: ldc           #117                // class java/lang/String
     125: aastore
     126: dup
     127: bipush        17
     129: ldc           #26                 // class java/lang/Object
     131: aastore
     132: putstatic     #118                // Field CACHED_COMMON_TYPES:[Ljava/lang/Class;
     135: getstatic     #118                // Field CACHED_COMMON_TYPES:[Ljava/lang/Class;
     138: astore_0
     139: aload_0
     140: arraylength
     141: istore_1
     142: iconst_0
     143: istore_2
     144: iload_2
     145: iload_1
     146: if_icmpge     173
     149: aload_0
     150: iload_2
     151: aaload
     152: astore_3
     153: getstatic     #78                 // Field commonTypesCache:Ljava/util/Map;
     156: aload_3
     157: aload_3
     158: invokestatic  #92                 // Method valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
     161: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     166: pop
     167: iinc          2, 1
     170: goto          144
     173: return
}
