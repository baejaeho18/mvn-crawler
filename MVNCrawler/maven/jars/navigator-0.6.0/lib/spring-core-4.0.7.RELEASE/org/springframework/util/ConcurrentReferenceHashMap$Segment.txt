Compiled from "ConcurrentReferenceHashMap.java"
public final class org.springframework.util.ConcurrentReferenceHashMap$Segment extends java.util.concurrent.locks.ReentrantLock {
  private final org.springframework.util.ConcurrentReferenceHashMap<K, V>.ReferenceManager referenceManager;

  private final int initialSize;

  private volatile org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] references;

  private volatile int count;

  private int resizeThreshold;

  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  public org.springframework.util.ConcurrentReferenceHashMap$Segment(org.springframework.util.ConcurrentReferenceHashMap, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field count:I
      14: aload_0
      15: aload_1
      16: invokevirtual #7                  // Method org/springframework/util/ConcurrentReferenceHashMap.createReferenceManager:()Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      19: putfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      22: aload_0
      23: iconst_1
      24: iload_2
      25: ldc           #8                  // int 1073741824
      27: invokestatic  #9                  // Method org/springframework/util/ConcurrentReferenceHashMap.calculateShift:(II)I
      30: ishl
      31: putfield      #10                 // Field initialSize:I
      34: aload_0
      35: aload_0
      36: aload_0
      37: getfield      #10                 // Field initialSize:I
      40: invokespecial #11                 // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      43: invokespecial #12                 // Method setReferences:([Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)V
      46: return

  public org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> getReference(java.lang.Object, int, org.springframework.util.ConcurrentReferenceHashMap$Restructure);
    Code:
       0: aload_3
       1: getstatic     #13                 // Field org/springframework/util/ConcurrentReferenceHashMap$Restructure.WHEN_NECESSARY:Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;
       4: if_acmpne     12
       7: aload_0
       8: iconst_0
       9: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
      12: aload_0
      13: getfield      #2                  // Field count:I
      16: ifne          21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      25: astore        4
      27: aload_0
      28: iload_2
      29: aload         4
      31: invokespecial #15                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
      34: istore        5
      36: aload         4
      38: iload         5
      40: aaload
      41: astore        6
      43: aload_0
      44: aload         6
      46: aload_1
      47: iload_2
      48: invokespecial #16                 // Method findInChain:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      51: areturn

  public <T> T doTask(int, java.lang.Object, org.springframework.util.ConcurrentReferenceHashMap<K, V>.Task<T>);
    Code:
       0: aload_3
       1: getstatic     #17                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESIZE:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
       4: invokevirtual #18                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
       7: istore        4
       9: aload_3
      10: getstatic     #19                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_BEFORE:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      13: invokevirtual #18                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
      16: ifeq          25
      19: aload_0
      20: iload         4
      22: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
      25: aload_3
      26: getstatic     #20                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      29: invokevirtual #18                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
      32: ifeq          50
      35: aload_0
      36: getfield      #2                  // Field count:I
      39: ifne          50
      42: aload_3
      43: aconst_null
      44: aconst_null
      45: aconst_null
      46: invokevirtual #21                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;
      49: areturn
      50: aload_0
      51: invokevirtual #22                 // Method lock:()V
      54: aload_0
      55: iload_1
      56: aload_0
      57: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      60: invokespecial #15                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
      63: istore        5
      65: aload_0
      66: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      69: iload         5
      71: aaload
      72: astore        6
      74: aload_0
      75: aload         6
      77: aload_2
      78: iload_1
      79: invokespecial #16                 // Method findInChain:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      82: astore        7
      84: aload         7
      86: ifnull        99
      89: aload         7
      91: invokeinterface #23,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      96: goto          100
      99: aconst_null
     100: astore        8
     102: new           #24                 // class org/springframework/util/ConcurrentReferenceHashMap$Segment$1
     105: dup
     106: aload_0
     107: aload_2
     108: iload_1
     109: aload         6
     111: iload         5
     113: invokespecial #25                 // Method org/springframework/util/ConcurrentReferenceHashMap$Segment$1."<init>":(Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;I)V
     116: astore        9
     118: aload_3
     119: aload         7
     121: aload         8
     123: aload         9
     125: invokevirtual #21                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;
     128: astore        10
     130: aload_0
     131: invokevirtual #26                 // Method unlock:()V
     134: aload_3
     135: getstatic     #27                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
     138: invokevirtual #18                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
     141: ifeq          150
     144: aload_0
     145: iload         4
     147: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
     150: aload         10
     152: areturn
     153: astore        11
     155: aload_0
     156: invokevirtual #26                 // Method unlock:()V
     159: aload_3
     160: getstatic     #27                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
     163: invokevirtual #18                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
     166: ifeq          175
     169: aload_0
     170: iload         4
     172: invokevirtual #14                 // Method restructureIfNecessary:(Z)V
     175: aload         11
     177: athrow
    Exception table:
       from    to  target type
          54   130   153   any
         153   155   153   any

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #22                 // Method lock:()V
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #10                 // Field initialSize:I
      18: invokespecial #11                 // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      21: invokespecial #12                 // Method setReferences:([Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)V
      24: aload_0
      25: iconst_0
      26: putfield      #2                  // Field count:I
      29: aload_0
      30: invokevirtual #26                 // Method unlock:()V
      33: goto          43
      36: astore_1
      37: aload_0
      38: invokevirtual #26                 // Method unlock:()V
      41: aload_1
      42: athrow
      43: return
    Exception table:
       from    to  target type
          12    29    36   any

  protected final void restructureIfNecessary(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ifle          22
       7: aload_0
       8: getfield      #2                  // Field count:I
      11: aload_0
      12: getfield      #28                 // Field resizeThreshold:I
      15: if_icmplt     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: istore_2
      24: aload_0
      25: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      28: invokevirtual #29                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      31: astore_3
      32: aload_3
      33: ifnonnull     44
      36: iload_2
      37: ifeq          334
      40: iload_1
      41: ifeq          334
      44: aload_0
      45: invokevirtual #22                 // Method lock:()V
      48: aload_0
      49: getfield      #2                  // Field count:I
      52: istore        4
      54: invokestatic  #30                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      57: astore        5
      59: aload_3
      60: ifnull        96
      63: new           #31                 // class java/util/HashSet
      66: dup
      67: invokespecial #32                 // Method java/util/HashSet."<init>":()V
      70: astore        5
      72: aload_3
      73: ifnull        96
      76: aload         5
      78: aload_3
      79: invokeinterface #33,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      89: invokevirtual #29                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      92: astore_3
      93: goto          72
      96: iload         4
      98: aload         5
     100: invokeinterface #34,  1           // InterfaceMethod java/util/Set.size:()I
     105: isub
     106: istore        4
     108: iload         4
     110: ifle          126
     113: iload         4
     115: aload_0
     116: getfield      #28                 // Field resizeThreshold:I
     119: if_icmplt     126
     122: iconst_1
     123: goto          127
     126: iconst_0
     127: istore_2
     128: iconst_0
     129: istore        6
     131: aload_0
     132: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     135: arraylength
     136: istore        7
     138: iload_1
     139: ifeq          162
     142: iload_2
     143: ifeq          162
     146: iload         7
     148: ldc           #8                  // int 1073741824
     150: if_icmpge     162
     153: iload         7
     155: iconst_1
     156: ishl
     157: istore        7
     159: iconst_1
     160: istore        6
     162: iload         6
     164: ifeq          176
     167: aload_0
     168: iload         7
     170: invokespecial #11                 // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     173: goto          180
     176: aload_0
     177: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     180: astore        8
     182: iconst_0
     183: istore        9
     185: iload         9
     187: aload_0
     188: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     191: arraylength
     192: if_icmpge     297
     195: aload_0
     196: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     199: iload         9
     201: aaload
     202: astore_3
     203: iload         6
     205: ifne          214
     208: aload         8
     210: iload         9
     212: aconst_null
     213: aastore
     214: aload_3
     215: ifnull        291
     218: aload         5
     220: aload_3
     221: invokeinterface #35,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     226: ifne          281
     229: aload_3
     230: invokeinterface #23,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
     235: ifnull        281
     238: aload_0
     239: aload_3
     240: invokeinterface #36,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
     245: aload         8
     247: invokespecial #15                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
     250: istore        10
     252: aload         8
     254: iload         10
     256: aload_0
     257: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
     260: aload_3
     261: invokeinterface #23,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
     266: aload_3
     267: invokeinterface #36,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
     272: aload         8
     274: iload         10
     276: aaload
     277: invokevirtual #37                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.createReference:(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     280: aastore
     281: aload_3
     282: invokeinterface #38,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     287: astore_3
     288: goto          214
     291: iinc          9, 1
     294: goto          185
     297: iload         6
     299: ifeq          308
     302: aload_0
     303: aload         8
     305: invokespecial #12                 // Method setReferences:([Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)V
     308: aload_0
     309: iload         4
     311: iconst_0
     312: invokestatic  #39                 // Method java/lang/Math.max:(II)I
     315: putfield      #2                  // Field count:I
     318: aload_0
     319: invokevirtual #26                 // Method unlock:()V
     322: goto          334
     325: astore        11
     327: aload_0
     328: invokevirtual #26                 // Method unlock:()V
     331: aload         11
     333: athrow
     334: return
    Exception table:
       from    to  target type
          48   318   325   any
         325   327   325   any

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> findInChain(org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>, java.lang.Object, int);
    Code:
       0: aload_1
       1: ifnull        61
       4: aload_1
       5: invokeinterface #36,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
      10: iload_3
      11: if_icmpne     51
      14: aload_1
      15: invokeinterface #23,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      20: astore        4
      22: aload         4
      24: ifnull        51
      27: aload         4
      29: invokevirtual #40                 // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.getKey:()Ljava/lang/Object;
      32: astore        5
      34: aload         5
      36: aload_2
      37: if_acmpeq     49
      40: aload         5
      42: aload_2
      43: invokevirtual #41                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          51
      49: aload_1
      50: areturn
      51: aload_1
      52: invokeinterface #38,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      57: astore_1
      58: goto          0
      61: aconst_null
      62: areturn

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] createReferenceArray(int);
    Code:
       0: ldc           #42                 // class org/springframework/util/ConcurrentReferenceHashMap$Reference
       2: iload_1
       3: invokestatic  #43                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
       6: checkcast     #44                 // class "[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
       9: checkcast     #44                 // class "[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"
      12: areturn

  private int getIndex(int, org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[]);
    Code:
       0: iload_1
       1: aload_2
       2: arraylength
       3: iconst_1
       4: isub
       5: iand
       6: ireturn

  private void setReferences(org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       5: aload_0
       6: aload_1
       7: arraylength
       8: i2f
       9: aload_0
      10: getfield      #5                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      13: invokevirtual #45                 // Method org/springframework/util/ConcurrentReferenceHashMap.getLoadFactor:()F
      16: fmul
      17: f2i
      18: putfield      #28                 // Field resizeThreshold:I
      21: return

  public final int getSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: arraylength
       5: ireturn

  public final int getCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ireturn

  static org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager access$300(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
       4: areturn

  static org.springframework.util.ConcurrentReferenceHashMap$Reference[] access$400(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: areturn

  static int access$508(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field count:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field count:I
      11: ireturn
}
