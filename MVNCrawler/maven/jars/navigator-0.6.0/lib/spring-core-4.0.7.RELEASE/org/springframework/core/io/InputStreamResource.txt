Compiled from "InputStreamResource.java"
public class org.springframework.core.io.InputStreamResource extends org.springframework.core.io.AbstractResource {
  private final java.io.InputStream inputStream;

  private final java.lang.String description;

  private boolean read;

  public org.springframework.core.io.InputStreamResource(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String resource loaded through InputStream
       4: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
       7: return

  public org.springframework.core.io.InputStreamResource(java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/core/io/AbstractResource."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field read:Z
       9: aload_1
      10: ifnonnull     23
      13: new           #5                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #6                  // String InputStream must not be null
      19: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #8                  // Field inputStream:Ljava/io/InputStream;
      28: aload_0
      29: aload_2
      30: ifnull        37
      33: aload_2
      34: goto          39
      37: ldc           #9                  // String
      39: putfield      #10                 // Field description:Ljava/lang/String;
      42: return

  public boolean exists();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOpen();
    Code:
       0: iconst_1
       1: ireturn

  public java.io.InputStream getInputStream() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field read:Z
       4: ifeq          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #12                 // String InputStream has already been read - do not use InputStreamResource if a stream needs to be read multiple times
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #4                  // Field read:Z
      22: aload_0
      23: getfield      #8                  // Field inputStream:Ljava/io/InputStream;
      26: areturn

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #10                 // Field description:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     29
       5: aload_1
       6: instanceof    #14                 // class org/springframework/core/io/InputStreamResource
       9: ifeq          33
      12: aload_1
      13: checkcast     #14                 // class org/springframework/core/io/InputStreamResource
      16: getfield      #8                  // Field inputStream:Ljava/io/InputStream;
      19: aload_0
      20: getfield      #8                  // Field inputStream:Ljava/io/InputStream;
      23: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field inputStream:Ljava/io/InputStream;
       4: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
       7: ireturn
}
