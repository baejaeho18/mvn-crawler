Compiled from "GenericCollectionTypeResolver.java"
public abstract class org.springframework.core.GenericCollectionTypeResolver {
  public org.springframework.core.GenericCollectionTypeResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.Class<?> getCollectionType(java.lang.Class<? extends java.util.Collection>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
       7: iconst_0
       8: newarray       int
      10: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      13: areturn

  public static java.lang.Class<?> getMapKeyType(java.lang.Class<? extends java.util.Map>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_0
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapValueType(java.lang.Class<? extends java.util.Map>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_1
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getCollectionFieldType(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
       7: iconst_0
       8: newarray       int
      10: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      13: areturn

  public static java.lang.Class<?> getCollectionFieldType(java.lang.reflect.Field, int);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: invokevirtual #7                  // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
       8: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      11: iconst_0
      12: newarray       int
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getCollectionFieldType(java.lang.reflect.Field, int, java.util.Map<java.lang.Integer, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getNested:(ILjava/util/Map;)Lorg/springframework/core/ResolvableType;
       9: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      12: iconst_0
      13: newarray       int
      15: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      18: areturn

  public static java.lang.Class<?> getMapKeyFieldType(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_0
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapKeyFieldType(java.lang.reflect.Field, int);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: invokevirtual #7                  // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
       8: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      11: iconst_1
      12: newarray       int
      14: dup
      15: iconst_0
      16: iconst_0
      17: iastore
      18: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      21: areturn

  public static java.lang.Class<?> getMapKeyFieldType(java.lang.reflect.Field, int, java.util.Map<java.lang.Integer, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getNested:(ILjava/util/Map;)Lorg/springframework/core/ResolvableType;
       9: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      12: iconst_1
      13: newarray       int
      15: dup
      16: iconst_0
      17: iconst_0
      18: iastore
      19: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      22: areturn

  public static java.lang.Class<?> getMapValueFieldType(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_1
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapValueFieldType(java.lang.reflect.Field, int);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: invokevirtual #7                  // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
       8: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      11: iconst_1
      12: newarray       int
      14: dup
      15: iconst_0
      16: iconst_1
      17: iastore
      18: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      21: areturn

  public static java.lang.Class<?> getMapValueFieldType(java.lang.reflect.Field, int, java.util.Map<java.lang.Integer, java.lang.Integer>);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: aload_2
       6: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getNested:(ILjava/util/Map;)Lorg/springframework/core/ResolvableType;
       9: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      12: iconst_1
      13: newarray       int
      15: dup
      16: iconst_0
      17: iconst_1
      18: iastore
      19: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      22: areturn

  public static java.lang.Class<?> getCollectionParameterType(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
       7: iconst_0
       8: newarray       int
      10: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      13: areturn

  public static java.lang.Class<?> getMapKeyParameterType(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_0
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapValueParameterType(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method org/springframework/core/ResolvableType.forMethodParameter:(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_1
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getCollectionReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/springframework/core/ResolvableType.forMethodReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
       7: iconst_0
       8: newarray       int
      10: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      13: areturn

  public static java.lang.Class<?> getCollectionReturnType(java.lang.reflect.Method, int);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/springframework/core/ResolvableType.forMethodReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: invokevirtual #7                  // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
       8: invokevirtual #3                  // Method org/springframework/core/ResolvableType.asCollection:()Lorg/springframework/core/ResolvableType;
      11: iconst_0
      12: newarray       int
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapKeyReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/springframework/core/ResolvableType.forMethodReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_0
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapKeyReturnType(java.lang.reflect.Method, int);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/springframework/core/ResolvableType.forMethodReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: invokevirtual #7                  // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
       8: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      11: iconst_1
      12: newarray       int
      14: dup
      15: iconst_0
      16: iconst_0
      17: iastore
      18: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      21: areturn

  public static java.lang.Class<?> getMapValueReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/springframework/core/ResolvableType.forMethodReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
       4: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
       7: iconst_1
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_1
      13: iastore
      14: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      17: areturn

  public static java.lang.Class<?> getMapValueReturnType(java.lang.reflect.Method, int);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method org/springframework/core/ResolvableType.forMethodReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;
       4: iload_1
       5: invokevirtual #7                  // Method org/springframework/core/ResolvableType.getNested:(I)Lorg/springframework/core/ResolvableType;
       8: invokevirtual #5                  // Method org/springframework/core/ResolvableType.asMap:()Lorg/springframework/core/ResolvableType;
      11: iconst_1
      12: newarray       int
      14: dup
      15: iconst_0
      16: iconst_1
      17: iastore
      18: invokevirtual #4                  // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      21: areturn
}
