Compiled from "ConcurrentReferenceHashMap.java"
class org.springframework.util.ConcurrentReferenceHashMap$EntrySet extends java.util.AbstractSet<java.util.Map$Entry<K, V>> {
  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  private org.springframework.util.ConcurrentReferenceHashMap$EntrySet(org.springframework.util.ConcurrentReferenceHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: invokespecial #3                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: new           #4                  // class org/springframework/util/ConcurrentReferenceHashMap$EntryIterator
       3: dup
       4: aload_0
       5: getfield      #2                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       8: invokespecial #5                  // Method org/springframework/util/ConcurrentReferenceHashMap$EntryIterator."<init>":(Lorg/springframework/util/ConcurrentReferenceHashMap;)V
      11: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        69
       4: aload_1
       5: instanceof    #6                  // class java/util/Map$Entry
       8: ifeq          69
      11: aload_1
      12: checkcast     #6                  // class java/util/Map$Entry
      15: astore_2
      16: aload_0
      17: getfield      #2                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      20: aload_2
      21: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      26: getstatic     #8                  // Field org/springframework/util/ConcurrentReferenceHashMap$Restructure.NEVER:Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;
      29: invokevirtual #9                  // Method org/springframework/util/ConcurrentReferenceHashMap.getReference:(Ljava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      32: astore_3
      33: aload_3
      34: ifnull        46
      37: aload_3
      38: invokeinterface #10,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      43: goto          47
      46: aconst_null
      47: astore        4
      49: aload         4
      51: ifnull        69
      54: aload_2
      55: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      60: aload         4
      62: invokevirtual #12                 // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.getValue:()Ljava/lang/Object;
      65: invokestatic  #13                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: ireturn
      69: iconst_0
      70: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class java/util/Map$Entry
       4: ifeq          32
       7: aload_1
       8: checkcast     #6                  // class java/util/Map$Entry
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      16: aload_2
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      22: aload_2
      23: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      28: invokevirtual #14                 // Method org/springframework/util/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      31: ireturn
      32: iconst_0
      33: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       4: invokevirtual #15                 // Method org/springframework/util/ConcurrentReferenceHashMap.size:()I
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       4: invokevirtual #16                 // Method org/springframework/util/ConcurrentReferenceHashMap.clear:()V
       7: return

  org.springframework.util.ConcurrentReferenceHashMap$EntrySet(org.springframework.util.ConcurrentReferenceHashMap, org.springframework.util.ConcurrentReferenceHashMap$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/util/ConcurrentReferenceHashMap;)V
       5: return
}
