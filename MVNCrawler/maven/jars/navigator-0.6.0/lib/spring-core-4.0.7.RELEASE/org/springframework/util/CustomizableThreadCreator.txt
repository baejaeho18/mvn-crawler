Compiled from "CustomizableThreadCreator.java"
public class org.springframework.util.CustomizableThreadCreator implements java.io.Serializable {
  private java.lang.String threadNamePrefix;

  private int threadPriority;

  private boolean daemon;

  private java.lang.ThreadGroup threadGroup;

  private final java.util.concurrent.atomic.AtomicInteger threadCount;

  public org.springframework.util.CustomizableThreadCreator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #3                  // Field threadPriority:I
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field daemon:Z
      14: aload_0
      15: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      18: dup
      19: iconst_0
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      23: putfield      #7                  // Field threadCount:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: aload_0
      28: invokevirtual #8                  // Method getDefaultThreadNamePrefix:()Ljava/lang/String;
      31: putfield      #9                  // Field threadNamePrefix:Ljava/lang/String;
      34: return

  public org.springframework.util.CustomizableThreadCreator(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #3                  // Field threadPriority:I
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field daemon:Z
      14: aload_0
      15: new           #5                  // class java/util/concurrent/atomic/AtomicInteger
      18: dup
      19: iconst_0
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      23: putfield      #7                  // Field threadCount:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: aload_1
      28: ifnull        35
      31: aload_1
      32: goto          39
      35: aload_0
      36: invokevirtual #8                  // Method getDefaultThreadNamePrefix:()Ljava/lang/String;
      39: putfield      #9                  // Field threadNamePrefix:Ljava/lang/String;
      42: return

  public void setThreadNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          13
       9: aload_0
      10: invokevirtual #8                  // Method getDefaultThreadNamePrefix:()Ljava/lang/String;
      13: putfield      #9                  // Field threadNamePrefix:Ljava/lang/String;
      16: return

  public java.lang.String getThreadNamePrefix();
    Code:
       0: aload_0
       1: getfield      #9                  // Field threadNamePrefix:Ljava/lang/String;
       4: areturn

  public void setThreadPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field threadPriority:I
       5: return

  public int getThreadPriority();
    Code:
       0: aload_0
       1: getfield      #3                  // Field threadPriority:I
       4: ireturn

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field daemon:Z
       5: return

  public boolean isDaemon();
    Code:
       0: aload_0
       1: getfield      #4                  // Field daemon:Z
       4: ireturn

  public void setThreadGroupName(java.lang.String);
    Code:
       0: aload_0
       1: new           #10                 // class java/lang/ThreadGroup
       4: dup
       5: aload_1
       6: invokespecial #11                 // Method java/lang/ThreadGroup."<init>":(Ljava/lang/String;)V
       9: putfield      #12                 // Field threadGroup:Ljava/lang/ThreadGroup;
      12: return

  public void setThreadGroup(java.lang.ThreadGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field threadGroup:Ljava/lang/ThreadGroup;
       5: return

  public java.lang.ThreadGroup getThreadGroup();
    Code:
       0: aload_0
       1: getfield      #12                 // Field threadGroup:Ljava/lang/ThreadGroup;
       4: areturn

  public java.lang.Thread createThread(java.lang.Runnable);
    Code:
       0: new           #2                  // class java/lang/Thread
       3: dup
       4: aload_0
       5: invokevirtual #13                 // Method getThreadGroup:()Ljava/lang/ThreadGroup;
       8: aload_1
       9: aload_0
      10: invokevirtual #14                 // Method nextThreadName:()Ljava/lang/String;
      13: invokespecial #15                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
      16: astore_2
      17: aload_2
      18: aload_0
      19: invokevirtual #16                 // Method getThreadPriority:()I
      22: invokevirtual #17                 // Method java/lang/Thread.setPriority:(I)V
      25: aload_2
      26: aload_0
      27: invokevirtual #18                 // Method isDaemon:()Z
      30: invokevirtual #19                 // Method java/lang/Thread.setDaemon:(Z)V
      33: aload_2
      34: areturn

  protected java.lang.String nextThreadName();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #22                 // Method getThreadNamePrefix:()Ljava/lang/String;
      11: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #7                  // Field threadCount:Ljava/util/concurrent/atomic/AtomicInteger;
      18: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  protected java.lang.String getDefaultThreadNamePrefix();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokestatic  #28                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      14: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #29                 // String -
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn
}
