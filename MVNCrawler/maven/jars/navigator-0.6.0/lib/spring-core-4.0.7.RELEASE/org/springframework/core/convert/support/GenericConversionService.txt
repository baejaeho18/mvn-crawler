Compiled from "GenericConversionService.java"
public class org.springframework.core.convert.support.GenericConversionService implements org.springframework.core.convert.support.ConfigurableConversionService {
  private static final org.springframework.core.convert.converter.GenericConverter NO_OP_CONVERTER;

  private static final org.springframework.core.convert.converter.GenericConverter NO_MATCH;

  private final org.springframework.core.convert.support.GenericConversionService$Converters converters;

  private final java.util.Map<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey, org.springframework.core.convert.converter.GenericConverter> converterCache;

  public org.springframework.core.convert.support.GenericConversionService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/core/convert/support/GenericConversionService$Converters
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method org/springframework/core/convert/support/GenericConversionService$Converters."<init>":(Lorg/springframework/core/convert/support/GenericConversionService$1;)V
      13: putfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: bipush        64
      23: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      26: putfield      #7                  // Field converterCache:Ljava/util/Map;
      29: return

  public void addConverter(org.springframework.core.convert.converter.Converter<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #8                  // class org/springframework/core/convert/converter/Converter
       4: invokespecial #9                  // Method getRequiredTypeInfo:(Ljava/lang/Object;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;
       7: astore_2
       8: aload_2
       9: ldc           #10                 // String Unable to the determine sourceType <S> and targetType <T> which your Converter<S, T> converts between; declare these generic types.
      11: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_0
      15: new           #12                 // class org/springframework/core/convert/support/GenericConversionService$ConverterAdapter
      18: dup
      19: aload_0
      20: aload_1
      21: aload_2
      22: iconst_0
      23: aaload
      24: aload_2
      25: iconst_1
      26: aaload
      27: invokespecial #13                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterAdapter."<init>":(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/Converter;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)V
      30: invokevirtual #14                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      33: return

  public void addConverter(java.lang.Class<?>, java.lang.Class<?>, org.springframework.core.convert.converter.Converter<?, ?>);
    Code:
       0: aload_0
       1: new           #12                 // class org/springframework/core/convert/support/GenericConversionService$ConverterAdapter
       4: dup
       5: aload_0
       6: aload_3
       7: aload_1
       8: invokestatic  #15                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      11: aload_2
      12: invokestatic  #15                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      15: invokespecial #13                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterAdapter."<init>":(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/Converter;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)V
      18: invokevirtual #14                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      21: return

  public void addConverter(org.springframework.core.convert.converter.GenericConverter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
       4: aload_1
       5: invokevirtual #16                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.add:(Lorg/springframework/core/convert/converter/GenericConverter;)V
       8: aload_0
       9: invokespecial #17                 // Method invalidateCache:()V
      12: return

  public void addConverterFactory(org.springframework.core.convert.converter.ConverterFactory<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #18                 // class org/springframework/core/convert/converter/ConverterFactory
       4: invokespecial #9                  // Method getRequiredTypeInfo:(Ljava/lang/Object;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;
       7: astore_2
       8: ldc           #19                 // String Unable to the determine sourceType <S> and targetRangeType R which your ConverterFactory<S, R> converts between; declare these generic types.
      10: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;)V
      13: aload_0
      14: new           #21                 // class org/springframework/core/convert/support/GenericConversionService$ConverterFactoryAdapter
      17: dup
      18: aload_0
      19: aload_1
      20: new           #22                 // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
      23: dup
      24: aload_2
      25: iconst_0
      26: aaload
      27: invokevirtual #23                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      30: aload_2
      31: iconst_1
      32: aaload
      33: invokevirtual #23                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      36: invokespecial #24                 // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      39: invokespecial #25                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterFactoryAdapter."<init>":(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/ConverterFactory;Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;)V
      42: invokevirtual #14                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      45: return

  public void removeConvertible(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
       4: aload_1
       5: aload_2
       6: invokevirtual #26                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.remove:(Ljava/lang/Class;Ljava/lang/Class;)V
       9: aload_0
      10: invokespecial #17                 // Method invalidateCache:()V
      13: return

  public boolean canConvert(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_2
       1: ldc           #27                 // String targetType to convert to cannot be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #28                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      15: goto          19
      18: aconst_null
      19: aload_2
      20: invokestatic  #28                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      23: invokevirtual #29                 // Method canConvert:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      26: ireturn

  public boolean canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ldc           #27                 // String targetType to convert to cannot be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #30                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      18: astore_3
      19: aload_3
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean canBypassConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ldc           #31                 // String The targetType to convert to cannot be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #30                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      18: astore_3
      19: aload_3
      20: getstatic     #32                 // Field NO_OP_CONVERTER:Lorg/springframework/core/convert/converter/GenericConverter;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public <T> T convert(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_2
       1: ldc           #31                 // String The targetType to convert to cannot be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_1
       9: invokestatic  #33                 // Method org/springframework/core/convert/TypeDescriptor.forObject:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
      12: aload_2
      13: invokestatic  #28                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      16: invokevirtual #34                 // Method convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_3
       1: ldc           #31                 // String The targetType to convert to cannot be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ifnonnull     37
      10: aload_1
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #35                 // String The source must be [null] if sourceType == [null]
      21: invokestatic  #36                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      24: aload_0
      25: aload_2
      26: aload_3
      27: aload_0
      28: aload_2
      29: aload_3
      30: invokevirtual #37                 // Method convertNullSource:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      33: invokespecial #38                 // Method handleResult:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: ifnull        94
      41: aload_2
      42: invokevirtual #39                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      45: aload_1
      46: invokevirtual #40                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      49: ifne          94
      52: new           #41                 // class java/lang/IllegalArgumentException
      55: dup
      56: new           #42                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #44                 // String The source to convert from must be an instance of
      65: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #47                 // String ; instead it was a
      74: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_1
      78: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      84: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: aload_2
      96: aload_3
      97: invokevirtual #30                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
     100: astore        4
     102: aload         4
     104: ifnull        126
     107: aload         4
     109: aload_1
     110: aload_2
     111: aload_3
     112: invokestatic  #52                 // Method org/springframework/core/convert/support/ConversionUtils.invokeConverter:(Lorg/springframework/core/convert/converter/GenericConverter;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
     115: astore        5
     117: aload_0
     118: aload_2
     119: aload_3
     120: aload         5
     122: invokespecial #38                 // Method handleResult:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/Object;
     125: areturn
     126: aload_0
     127: aload_1
     128: aload_2
     129: aload_3
     130: invokespecial #53                 // Method handleConverterNotFound:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
     133: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #33                 // Method org/springframework/core/convert/TypeDescriptor.forObject:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
       6: aload_2
       7: invokevirtual #34                 // Method convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      10: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
       4: invokevirtual #54                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.toString:()Ljava/lang/String;
       7: areturn

  protected java.lang.Object convertNullSource(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aconst_null
       1: areturn

  protected org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: new           #55                 // class org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #56                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey."<init>":(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
       9: astore_3
      10: aload_0
      11: getfield      #7                  // Field converterCache:Ljava/util/Map;
      14: aload_3
      15: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #58                 // class org/springframework/core/convert/converter/GenericConverter
      23: astore        4
      25: aload         4
      27: ifnull        45
      30: aload         4
      32: getstatic     #59                 // Field NO_MATCH:Lorg/springframework/core/convert/converter/GenericConverter;
      35: if_acmpeq     43
      38: aload         4
      40: goto          44
      43: aconst_null
      44: areturn
      45: aload_0
      46: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
      49: aload_1
      50: aload_2
      51: invokevirtual #60                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.find:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      54: astore        4
      56: aload         4
      58: ifnonnull     69
      61: aload_0
      62: aload_1
      63: aload_2
      64: invokevirtual #61                 // Method getDefaultConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      67: astore        4
      69: aload         4
      71: ifnull        90
      74: aload_0
      75: getfield      #7                  // Field converterCache:Ljava/util/Map;
      78: aload_3
      79: aload         4
      81: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload         4
      89: areturn
      90: aload_0
      91: getfield      #7                  // Field converterCache:Ljava/util/Map;
      94: aload_3
      95: getstatic     #59                 // Field NO_MATCH:Lorg/springframework/core/convert/converter/GenericConverter;
      98: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aconst_null
     105: areturn

  protected org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #63                 // Method org/springframework/core/convert/TypeDescriptor.isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
       5: ifeq          14
       8: getstatic     #32                 // Field NO_OP_CONVERTER:Lorg/springframework/core/convert/converter/GenericConverter;
      11: goto          15
      14: aconst_null
      15: areturn

  private org.springframework.core.ResolvableType[] getRequiredTypeInfo(java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #15                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       7: aload_2
       8: invokevirtual #64                 // Method org/springframework/core/ResolvableType.as:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      11: astore_3
      12: aload_3
      13: invokevirtual #65                 // Method org/springframework/core/ResolvableType.getGenerics:()[Lorg/springframework/core/ResolvableType;
      16: astore        4
      18: aload         4
      20: arraylength
      21: iconst_2
      22: if_icmpge     27
      25: aconst_null
      26: areturn
      27: aload         4
      29: iconst_0
      30: aaload
      31: invokevirtual #23                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      34: astore        5
      36: aload         4
      38: iconst_1
      39: aaload
      40: invokevirtual #23                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      43: astore        6
      45: aload         5
      47: ifnull        55
      50: aload         6
      52: ifnonnull     57
      55: aconst_null
      56: areturn
      57: aload         4
      59: areturn

  private void invalidateCache();
    Code:
       0: aload_0
       1: getfield      #7                  // Field converterCache:Ljava/util/Map;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  private java.lang.Object handleConverterNotFound(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_2
       6: aload_3
       7: invokespecial #67                 // Method assertNotPrimitiveTargetType:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
      10: aload_1
      11: areturn
      12: aload_2
      13: aload_3
      14: invokevirtual #63                 // Method org/springframework/core/convert/TypeDescriptor.isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      17: ifeq          33
      20: aload_3
      21: invokevirtual #39                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      24: aload_1
      25: invokevirtual #40                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      28: ifeq          33
      31: aload_1
      32: areturn
      33: new           #68                 // class org/springframework/core/convert/ConverterNotFoundException
      36: dup
      37: aload_2
      38: aload_3
      39: invokespecial #69                 // Method org/springframework/core/convert/ConverterNotFoundException."<init>":(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
      42: athrow

  private java.lang.Object handleResult(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, java.lang.Object);
    Code:
       0: aload_3
       1: ifnonnull     10
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #67                 // Method assertNotPrimitiveTargetType:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
      10: aload_3
      11: areturn

  private void assertNotPrimitiveTargetType(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: invokevirtual #70                 // Method org/springframework/core/convert/TypeDescriptor.isPrimitive:()Z
       4: ifeq          27
       7: new           #71                 // class org/springframework/core/convert/ConversionFailedException
      10: dup
      11: aload_1
      12: aload_2
      13: aconst_null
      14: new           #41                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #72                 // String A null value cannot be assigned to a primitive type
      20: invokespecial #51                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: invokespecial #73                 // Method org/springframework/core/convert/ConversionFailedException."<init>":(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;Ljava/lang/Throwable;)V
      26: athrow
      27: return

  static {};
    Code:
       0: new           #74                 // class org/springframework/core/convert/support/GenericConversionService$NoOpConverter
       3: dup
       4: ldc           #75                 // String NO_OP
       6: invokespecial #76                 // Method org/springframework/core/convert/support/GenericConversionService$NoOpConverter."<init>":(Ljava/lang/String;)V
       9: putstatic     #32                 // Field NO_OP_CONVERTER:Lorg/springframework/core/convert/converter/GenericConverter;
      12: new           #74                 // class org/springframework/core/convert/support/GenericConversionService$NoOpConverter
      15: dup
      16: ldc           #77                 // String NO_MATCH
      18: invokespecial #76                 // Method org/springframework/core/convert/support/GenericConversionService$NoOpConverter."<init>":(Ljava/lang/String;)V
      21: putstatic     #59                 // Field NO_MATCH:Lorg/springframework/core/convert/converter/GenericConverter;
      24: return
}
