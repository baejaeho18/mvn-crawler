Compiled from "GenericConversionService.java"
final class org.springframework.core.convert.support.GenericConversionService$ConverterAdapter implements org.springframework.core.convert.converter.ConditionalGenericConverter {
  private final org.springframework.core.convert.converter.Converter<java.lang.Object, java.lang.Object> converter;

  private final org.springframework.core.convert.converter.GenericConverter$ConvertiblePair typeInfo;

  private final org.springframework.core.ResolvableType targetType;

  final org.springframework.core.convert.support.GenericConversionService this$0;

  public org.springframework.core.convert.support.GenericConversionService$ConverterAdapter(org.springframework.core.convert.converter.Converter<?, ?>, org.springframework.core.ResolvableType, org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/core/convert/support/GenericConversionService;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
      14: aload_0
      15: new           #4                  // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
      18: dup
      19: aload_3
      20: ldc           #5                  // class java/lang/Object
      22: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      25: aload         4
      27: ldc           #5                  // class java/lang/Object
      29: invokevirtual #6                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      32: invokespecial #7                  // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      35: putfield      #8                  // Field typeInfo:Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;
      38: aload_0
      39: aload         4
      41: putfield      #9                  // Field targetType:Lorg/springframework/core/ResolvableType;
      44: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: aload_0
       1: getfield      #8                  // Field typeInfo:Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;
       4: invokestatic  #10                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #8                  // Field typeInfo:Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;
       4: invokevirtual #11                 // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair.getTargetType:()Ljava/lang/Class;
       7: aload_2
       8: invokevirtual #12                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      11: invokevirtual #13                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_2
      20: invokevirtual #14                 // Method org/springframework/core/convert/TypeDescriptor.getResolvableType:()Lorg/springframework/core/ResolvableType;
      23: astore_3
      24: aload_3
      25: invokevirtual #15                 // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
      28: instanceof    #16                 // class java/lang/Class
      31: ifne          57
      34: aload_3
      35: aload_0
      36: getfield      #9                  // Field targetType:Lorg/springframework/core/ResolvableType;
      39: invokevirtual #17                 // Method org/springframework/core/ResolvableType.isAssignableFrom:(Lorg/springframework/core/ResolvableType;)Z
      42: ifne          57
      45: aload_0
      46: getfield      #9                  // Field targetType:Lorg/springframework/core/ResolvableType;
      49: invokevirtual #18                 // Method org/springframework/core/ResolvableType.hasUnresolvableGenerics:()Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: aload_0
      58: getfield      #3                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
      61: instanceof    #19                 // class org/springframework/core/convert/converter/ConditionalConverter
      64: ifeq          84
      67: aload_0
      68: getfield      #3                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
      71: checkcast     #19                 // class org/springframework/core/convert/converter/ConditionalConverter
      74: aload_1
      75: aload_2
      76: invokeinterface #20,  3           // InterfaceMethod org/springframework/core/convert/converter/ConditionalConverter.matches:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/springframework/core/convert/support/GenericConversionService;
       8: aload_2
       9: aload_3
      10: invokevirtual #21                 // Method org/springframework/core/convert/support/GenericConversionService.convertNullSource:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      13: areturn
      14: aload_0
      15: getfield      #3                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
      18: aload_1
      19: invokeinterface #22,  2           // InterfaceMethod org/springframework/core/convert/converter/Converter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
      24: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #8                  // Field typeInfo:Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;
      11: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #26                 // String  :
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
      23: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn
}
