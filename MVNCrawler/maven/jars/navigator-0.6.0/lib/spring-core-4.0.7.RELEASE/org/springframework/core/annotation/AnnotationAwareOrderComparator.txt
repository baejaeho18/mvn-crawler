Compiled from "AnnotationAwareOrderComparator.java"
public class org.springframework.core.annotation.AnnotationAwareOrderComparator extends org.springframework.core.OrderComparator {
  public static final org.springframework.core.annotation.AnnotationAwareOrderComparator INSTANCE;

  public org.springframework.core.annotation.AnnotationAwareOrderComparator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/core/OrderComparator."<init>":()V
       4: return

  protected int getOrder(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/springframework/core/Ordered
       4: ifeq          17
       7: aload_1
       8: checkcast     #2                  // class org/springframework/core/Ordered
      11: invokeinterface #3,  1            // InterfaceMethod org/springframework/core/Ordered.getOrder:()I
      16: ireturn
      17: aload_1
      18: ifnull        61
      21: aload_1
      22: instanceof    #4                  // class java/lang/Class
      25: ifeq          35
      28: aload_1
      29: checkcast     #4                  // class java/lang/Class
      32: goto          39
      35: aload_1
      36: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: astore_2
      40: aload_2
      41: ldc           #6                  // class org/springframework/core/annotation/Order
      43: invokestatic  #7                  // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      46: checkcast     #6                  // class org/springframework/core/annotation/Order
      49: astore_3
      50: aload_3
      51: ifnull        61
      54: aload_3
      55: invokeinterface #8,  1            // InterfaceMethod org/springframework/core/annotation/Order.value:()I
      60: ireturn
      61: ldc           #9                  // int 2147483647
      63: ireturn

  public static void sort(java.util.List<?>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmple     17
      10: aload_0
      11: getstatic     #11                 // Field INSTANCE:Lorg/springframework/core/annotation/AnnotationAwareOrderComparator;
      14: invokestatic  #12                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      17: return

  public static void sort(java.lang.Object[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmple     13
       6: aload_0
       7: getstatic     #11                 // Field INSTANCE:Lorg/springframework/core/annotation/AnnotationAwareOrderComparator;
      10: invokestatic  #13                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
      13: return

  public static void sortIfNecessary(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #14                 // class "[Ljava/lang/Object;"
       4: ifeq          20
       7: aload_0
       8: checkcast     #14                 // class "[Ljava/lang/Object;"
      11: checkcast     #14                 // class "[Ljava/lang/Object;"
      14: invokestatic  #15                 // Method sort:([Ljava/lang/Object;)V
      17: goto          34
      20: aload_0
      21: instanceof    #16                 // class java/util/List
      24: ifeq          34
      27: aload_0
      28: checkcast     #16                 // class java/util/List
      31: invokestatic  #17                 // Method sort:(Ljava/util/List;)V
      34: return

  static {};
    Code:
       0: new           #18                 // class org/springframework/core/annotation/AnnotationAwareOrderComparator
       3: dup
       4: invokespecial #19                 // Method "<init>":()V
       7: putstatic     #11                 // Field INSTANCE:Lorg/springframework/core/annotation/AnnotationAwareOrderComparator;
      10: return
}
