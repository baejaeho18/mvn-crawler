Compiled from "AbstractPropertyResolver.java"
public abstract class org.springframework.core.env.AbstractPropertyResolver implements org.springframework.core.env.ConfigurablePropertyResolver {
  protected final org.apache.commons.logging.Log logger;

  protected org.springframework.core.convert.support.ConfigurableConversionService conversionService;

  private org.springframework.util.PropertyPlaceholderHelper nonStrictHelper;

  private org.springframework.util.PropertyPlaceholderHelper strictHelper;

  private boolean ignoreUnresolvableNestedPlaceholders;

  private java.lang.String placeholderPrefix;

  private java.lang.String placeholderSuffix;

  private java.lang.String valueSeparator;

  private final java.util.Set<java.lang.String> requiredProperties;

  public org.springframework.core.env.AbstractPropertyResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class org/springframework/core/convert/support/DefaultConversionService
      19: dup
      20: invokespecial #6                  // Method org/springframework/core/convert/support/DefaultConversionService."<init>":()V
      23: putfield      #7                  // Field conversionService:Lorg/springframework/core/convert/support/ConfigurableConversionService;
      26: aload_0
      27: iconst_0
      28: putfield      #8                  // Field ignoreUnresolvableNestedPlaceholders:Z
      31: aload_0
      32: ldc           #10                 // String ${
      34: putfield      #11                 // Field placeholderPrefix:Ljava/lang/String;
      37: aload_0
      38: ldc           #12                 // String }
      40: putfield      #13                 // Field placeholderSuffix:Ljava/lang/String;
      43: aload_0
      44: ldc           #14                 // String :
      46: putfield      #15                 // Field valueSeparator:Ljava/lang/String;
      49: aload_0
      50: new           #16                 // class java/util/LinkedHashSet
      53: dup
      54: invokespecial #17                 // Method java/util/LinkedHashSet."<init>":()V
      57: putfield      #18                 // Field requiredProperties:Ljava/util/Set;
      60: return

  public org.springframework.core.convert.support.ConfigurableConversionService getConversionService();
    Code:
       0: aload_0
       1: getfield      #7                  // Field conversionService:Lorg/springframework/core/convert/support/ConfigurableConversionService;
       4: areturn

  public void setConversionService(org.springframework.core.convert.support.ConfigurableConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field conversionService:Lorg/springframework/core/convert/support/ConfigurableConversionService;
       5: return

  public java.lang.String getProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnull        14
      10: aload_3
      11: goto          15
      14: aload_2
      15: areturn

  public <T> T getProperty(java.lang.String, java.lang.Class<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #20                 // Method getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       6: astore        4
       8: aload         4
      10: ifnull        18
      13: aload         4
      15: goto          19
      18: aload_3
      19: areturn

  public void setRequiredProperties(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     38
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: getfield      #18                 // Field requiredProperties:Ljava/util/Set;
      24: aload         5
      26: invokeinterface #21,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: iinc          4, 1
      35: goto          8
      38: return

  public void validateRequiredProperties();
    Code:
       0: new           #22                 // class org/springframework/core/env/MissingRequiredPropertiesException
       3: dup
       4: invokespecial #23                 // Method org/springframework/core/env/MissingRequiredPropertiesException."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #18                 // Field requiredProperties:Ljava/util/Set;
      12: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          53
      27: aload_2
      28: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #27                 // class java/lang/String
      36: astore_3
      37: aload_0
      38: aload_3
      39: invokevirtual #19                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
      42: ifnonnull     50
      45: aload_1
      46: aload_3
      47: invokevirtual #28                 // Method org/springframework/core/env/MissingRequiredPropertiesException.addMissingRequiredProperty:(Ljava/lang/String;)V
      50: goto          18
      53: aload_1
      54: invokevirtual #29                 // Method org/springframework/core/env/MissingRequiredPropertiesException.getMissingRequiredProperties:()Ljava/util/Set;
      57: invokeinterface #30,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      62: ifne          67
      65: aload_1
      66: athrow
      67: return

  public java.lang.String getRequiredProperty(java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     31
      10: new           #31                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #32                 // String required key [%s] not found
      16: iconst_1
      17: anewarray     #33                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_2
      32: areturn

  public <T> T getRequiredProperty(java.lang.String, java.lang.Class<T>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #20                 // Method getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       6: astore_3
       7: aload_3
       8: ifnonnull     32
      11: new           #31                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #32                 // String required key [%s] not found
      17: iconst_1
      18: anewarray     #33                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_3
      33: areturn

  public void setPlaceholderPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field placeholderPrefix:Ljava/lang/String;
       5: return

  public void setPlaceholderSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field placeholderSuffix:Ljava/lang/String;
       5: return

  public void setValueSeparator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field valueSeparator:Ljava/lang/String;
       5: return

  public java.lang.String resolvePlaceholders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #36                 // Field nonStrictHelper:Lorg/springframework/util/PropertyPlaceholderHelper;
       4: ifnonnull     16
       7: aload_0
       8: aload_0
       9: iconst_1
      10: invokespecial #37                 // Method createPlaceholderHelper:(Z)Lorg/springframework/util/PropertyPlaceholderHelper;
      13: putfield      #36                 // Field nonStrictHelper:Lorg/springframework/util/PropertyPlaceholderHelper;
      16: aload_0
      17: aload_1
      18: aload_0
      19: getfield      #36                 // Field nonStrictHelper:Lorg/springframework/util/PropertyPlaceholderHelper;
      22: invokespecial #38                 // Method doResolvePlaceholders:(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper;)Ljava/lang/String;
      25: areturn

  public java.lang.String resolveRequiredPlaceholders(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #39                 // Field strictHelper:Lorg/springframework/util/PropertyPlaceholderHelper;
       4: ifnonnull     16
       7: aload_0
       8: aload_0
       9: iconst_0
      10: invokespecial #37                 // Method createPlaceholderHelper:(Z)Lorg/springframework/util/PropertyPlaceholderHelper;
      13: putfield      #39                 // Field strictHelper:Lorg/springframework/util/PropertyPlaceholderHelper;
      16: aload_0
      17: aload_1
      18: aload_0
      19: getfield      #39                 // Field strictHelper:Lorg/springframework/util/PropertyPlaceholderHelper;
      22: invokespecial #38                 // Method doResolvePlaceholders:(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper;)Ljava/lang/String;
      25: areturn

  public void setIgnoreUnresolvableNestedPlaceholders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field ignoreUnresolvableNestedPlaceholders:Z
       5: return

  protected java.lang.String resolveNestedPlaceholders(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ignoreUnresolvableNestedPlaceholders:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokevirtual #40                 // Method resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      12: goto          20
      15: aload_0
      16: aload_1
      17: invokevirtual #41                 // Method resolveRequiredPlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      20: areturn

  private org.springframework.util.PropertyPlaceholderHelper createPlaceholderHelper(boolean);
    Code:
       0: new           #42                 // class org/springframework/util/PropertyPlaceholderHelper
       3: dup
       4: aload_0
       5: getfield      #11                 // Field placeholderPrefix:Ljava/lang/String;
       8: aload_0
       9: getfield      #13                 // Field placeholderSuffix:Ljava/lang/String;
      12: aload_0
      13: getfield      #15                 // Field valueSeparator:Ljava/lang/String;
      16: iload_1
      17: invokespecial #43                 // Method org/springframework/util/PropertyPlaceholderHelper."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      20: areturn

  private java.lang.String doResolvePlaceholders(java.lang.String, org.springframework.util.PropertyPlaceholderHelper);
    Code:
       0: aload_2
       1: aload_1
       2: new           #44                 // class org/springframework/core/env/AbstractPropertyResolver$1
       5: dup
       6: aload_0
       7: invokespecial #45                 // Method org/springframework/core/env/AbstractPropertyResolver$1."<init>":(Lorg/springframework/core/env/AbstractPropertyResolver;)V
      10: invokevirtual #46                 // Method org/springframework/util/PropertyPlaceholderHelper.replacePlaceholders:(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;)Ljava/lang/String;
      13: areturn

  protected abstract java.lang.String getPropertyAsRawString(java.lang.String);
}
