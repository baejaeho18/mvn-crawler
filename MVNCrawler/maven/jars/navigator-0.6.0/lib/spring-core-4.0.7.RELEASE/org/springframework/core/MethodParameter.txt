Compiled from "MethodParameter.java"
public class org.springframework.core.MethodParameter {
  private final java.lang.reflect.Method method;

  private final java.lang.reflect.Constructor<?> constructor;

  private final int parameterIndex;

  private java.lang.Class<?> containingClass;

  private java.lang.Class<?> parameterType;

  private java.lang.reflect.Type genericParameterType;

  private java.lang.annotation.Annotation[] parameterAnnotations;

  private org.springframework.core.ParameterNameDiscoverer parameterNameDiscoverer;

  private java.lang.String parameterName;

  private int nestingLevel;

  java.util.Map<java.lang.Integer, java.lang.Integer> typeIndexesPerLevel;

  public org.springframework.core.MethodParameter(java.lang.reflect.Method, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/reflect/Method;II)V
       7: return

  public org.springframework.core.MethodParameter(java.lang.reflect.Method, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field nestingLevel:I
       9: aload_1
      10: ldc           #4                  // String Method must not be null
      12: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field method:Ljava/lang/reflect/Method;
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field parameterIndex:I
      25: aload_0
      26: iload_3
      27: putfield      #3                  // Field nestingLevel:I
      30: aload_0
      31: aconst_null
      32: putfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      35: return

  public org.springframework.core.MethodParameter(java.lang.reflect.Constructor<?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #9                  // Method "<init>":(Ljava/lang/reflect/Constructor;II)V
       7: return

  public org.springframework.core.MethodParameter(java.lang.reflect.Constructor<?>, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field nestingLevel:I
       9: aload_1
      10: ldc           #10                 // String Constructor must not be null
      12: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field parameterIndex:I
      25: aload_0
      26: iload_3
      27: putfield      #3                  // Field nestingLevel:I
      30: aload_0
      31: aconst_null
      32: putfield      #6                  // Field method:Ljava/lang/reflect/Method;
      35: return

  public org.springframework.core.MethodParameter(org.springframework.core.MethodParameter);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field nestingLevel:I
       9: aload_1
      10: ldc           #11                 // String Original must not be null
      12: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      20: putfield      #6                  // Field method:Ljava/lang/reflect/Method;
      23: aload_0
      24: aload_1
      25: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      28: putfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      31: aload_0
      32: aload_1
      33: getfield      #7                  // Field parameterIndex:I
      36: putfield      #7                  // Field parameterIndex:I
      39: aload_0
      40: aload_1
      41: getfield      #12                 // Field containingClass:Ljava/lang/Class;
      44: putfield      #12                 // Field containingClass:Ljava/lang/Class;
      47: aload_0
      48: aload_1
      49: getfield      #13                 // Field parameterType:Ljava/lang/Class;
      52: putfield      #13                 // Field parameterType:Ljava/lang/Class;
      55: aload_0
      56: aload_1
      57: getfield      #14                 // Field genericParameterType:Ljava/lang/reflect/Type;
      60: putfield      #14                 // Field genericParameterType:Ljava/lang/reflect/Type;
      63: aload_0
      64: aload_1
      65: getfield      #15                 // Field parameterAnnotations:[Ljava/lang/annotation/Annotation;
      68: putfield      #15                 // Field parameterAnnotations:[Ljava/lang/annotation/Annotation;
      71: aload_0
      72: aload_1
      73: getfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
      76: putfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
      79: aload_0
      80: aload_1
      81: getfield      #17                 // Field parameterName:Ljava/lang/String;
      84: putfield      #17                 // Field parameterName:Ljava/lang/String;
      87: aload_0
      88: aload_1
      89: getfield      #3                  // Field nestingLevel:I
      92: putfield      #3                  // Field nestingLevel:I
      95: aload_0
      96: aload_1
      97: getfield      #18                 // Field typeIndexesPerLevel:Ljava/util/Map;
     100: putfield      #18                 // Field typeIndexesPerLevel:Ljava/util/Map;
     103: return

  public java.lang.reflect.Method getMethod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
       4: areturn

  public java.lang.reflect.Constructor<?> getConstructor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
       4: areturn

  public java.lang.reflect.Member getMember();
    Code:
       0: aload_0
       1: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
       4: ifnull        12
       7: aload_0
       8: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      11: areturn
      12: aload_0
      13: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      16: areturn

  public java.lang.reflect.AnnotatedElement getAnnotatedElement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
       4: ifnull        12
       7: aload_0
       8: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      11: areturn
      12: aload_0
      13: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      16: areturn

  public java.lang.Class<?> getDeclaringClass();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getMember:()Ljava/lang/reflect/Member;
       4: invokeinterface #20,  1           // InterfaceMethod java/lang/reflect/Member.getDeclaringClass:()Ljava/lang/Class;
       9: areturn

  public int getParameterIndex();
    Code:
       0: aload_0
       1: getfield      #7                  // Field parameterIndex:I
       4: ireturn

  void setContainingClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field containingClass:Ljava/lang/Class;
       5: return

  public java.lang.Class<?> getContainingClass();
    Code:
       0: aload_0
       1: getfield      #12                 // Field containingClass:Ljava/lang/Class;
       4: ifnull        14
       7: aload_0
       8: getfield      #12                 // Field containingClass:Ljava/lang/Class;
      11: goto          18
      14: aload_0
      15: invokevirtual #21                 // Method getDeclaringClass:()Ljava/lang/Class;
      18: areturn

  void setParameterType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field parameterType:Ljava/lang/Class;
       5: return

  public java.lang.Class<?> getParameterType();
    Code:
       0: aload_0
       1: getfield      #13                 // Field parameterType:Ljava/lang/Class;
       4: ifnonnull     77
       7: aload_0
       8: getfield      #7                  // Field parameterIndex:I
      11: ifge          39
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      19: ifnull        32
      22: aload_0
      23: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      26: invokevirtual #22                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      29: goto          33
      32: aconst_null
      33: putfield      #13                 // Field parameterType:Ljava/lang/Class;
      36: goto          77
      39: aload_0
      40: aload_0
      41: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      44: ifnull        62
      47: aload_0
      48: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      51: invokevirtual #23                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      54: aload_0
      55: getfield      #7                  // Field parameterIndex:I
      58: aaload
      59: goto          74
      62: aload_0
      63: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      66: invokevirtual #24                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
      69: aload_0
      70: getfield      #7                  // Field parameterIndex:I
      73: aaload
      74: putfield      #13                 // Field parameterType:Ljava/lang/Class;
      77: aload_0
      78: getfield      #13                 // Field parameterType:Ljava/lang/Class;
      81: areturn

  public java.lang.reflect.Type getGenericParameterType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field genericParameterType:Ljava/lang/reflect/Type;
       4: ifnonnull     77
       7: aload_0
       8: getfield      #7                  // Field parameterIndex:I
      11: ifge          39
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      19: ifnull        32
      22: aload_0
      23: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      26: invokevirtual #25                 // Method java/lang/reflect/Method.getGenericReturnType:()Ljava/lang/reflect/Type;
      29: goto          33
      32: aconst_null
      33: putfield      #14                 // Field genericParameterType:Ljava/lang/reflect/Type;
      36: goto          77
      39: aload_0
      40: aload_0
      41: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      44: ifnull        62
      47: aload_0
      48: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      51: invokevirtual #26                 // Method java/lang/reflect/Method.getGenericParameterTypes:()[Ljava/lang/reflect/Type;
      54: aload_0
      55: getfield      #7                  // Field parameterIndex:I
      58: aaload
      59: goto          74
      62: aload_0
      63: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      66: invokevirtual #27                 // Method java/lang/reflect/Constructor.getGenericParameterTypes:()[Ljava/lang/reflect/Type;
      69: aload_0
      70: getfield      #7                  // Field parameterIndex:I
      73: aaload
      74: putfield      #14                 // Field genericParameterType:Ljava/lang/reflect/Type;
      77: aload_0
      78: getfield      #14                 // Field genericParameterType:Ljava/lang/reflect/Type;
      81: areturn

  public java.lang.Class<?> getNestedParameterType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nestingLevel:I
       4: iconst_1
       5: if_icmple     105
       8: aload_0
       9: invokevirtual #28                 // Method getGenericParameterType:()Ljava/lang/reflect/Type;
      12: astore_1
      13: aload_1
      14: instanceof    #29                 // class java/lang/reflect/ParameterizedType
      17: ifeq          102
      20: aload_0
      21: invokevirtual #30                 // Method getTypeIndexForCurrentLevel:()Ljava/lang/Integer;
      24: astore_2
      25: aload_1
      26: checkcast     #29                 // class java/lang/reflect/ParameterizedType
      29: invokeinterface #31,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      34: astore_3
      35: aload_3
      36: aload_2
      37: ifnull        47
      40: aload_2
      41: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
      44: goto          51
      47: aload_3
      48: arraylength
      49: iconst_1
      50: isub
      51: aaload
      52: astore        4
      54: aload         4
      56: instanceof    #33                 // class java/lang/Class
      59: ifeq          68
      62: aload         4
      64: checkcast     #33                 // class java/lang/Class
      67: areturn
      68: aload         4
      70: instanceof    #29                 // class java/lang/reflect/ParameterizedType
      73: ifeq          102
      76: aload         4
      78: checkcast     #29                 // class java/lang/reflect/ParameterizedType
      81: invokeinterface #34,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      86: astore        4
      88: aload         4
      90: instanceof    #33                 // class java/lang/Class
      93: ifeq          102
      96: aload         4
      98: checkcast     #33                 // class java/lang/Class
     101: areturn
     102: ldc           #35                 // class java/lang/Object
     104: areturn
     105: aload_0
     106: invokevirtual #36                 // Method getParameterType:()Ljava/lang/Class;
     109: areturn

  public java.lang.annotation.Annotation[] getMethodAnnotations();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAnnotatedElement:()Ljava/lang/reflect/AnnotatedElement;
       4: invokeinterface #38,  1           // InterfaceMethod java/lang/reflect/AnnotatedElement.getAnnotations:()[Ljava/lang/annotation/Annotation;
       9: areturn

  public <T extends java.lang.annotation.Annotation> T getMethodAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAnnotatedElement:()Ljava/lang/reflect/AnnotatedElement;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/lang/reflect/AnnotatedElement.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      10: areturn

  public java.lang.annotation.Annotation[] getParameterAnnotations();
    Code:
       0: aload_0
       1: getfield      #15                 // Field parameterAnnotations:[Ljava/lang/annotation/Annotation;
       4: ifnonnull     69
       7: aload_0
       8: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      11: ifnull        24
      14: aload_0
      15: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      18: invokevirtual #40                 // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
      21: goto          31
      24: aload_0
      25: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      28: invokevirtual #41                 // Method java/lang/reflect/Constructor.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
      31: astore_1
      32: aload_0
      33: getfield      #7                  // Field parameterIndex:I
      36: iflt          61
      39: aload_0
      40: getfield      #7                  // Field parameterIndex:I
      43: aload_1
      44: arraylength
      45: if_icmpge     61
      48: aload_0
      49: aload_1
      50: aload_0
      51: getfield      #7                  // Field parameterIndex:I
      54: aaload
      55: putfield      #15                 // Field parameterAnnotations:[Ljava/lang/annotation/Annotation;
      58: goto          69
      61: aload_0
      62: iconst_0
      63: anewarray     #42                 // class java/lang/annotation/Annotation
      66: putfield      #15                 // Field parameterAnnotations:[Ljava/lang/annotation/Annotation;
      69: aload_0
      70: getfield      #15                 // Field parameterAnnotations:[Ljava/lang/annotation/Annotation;
      73: areturn

  public <T extends java.lang.annotation.Annotation> T getParameterAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getParameterAnnotations:()[Ljava/lang/annotation/Annotation;
       4: astore_2
       5: aload_2
       6: astore_3
       7: aload_3
       8: arraylength
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: iload         4
      18: if_icmpge     45
      21: aload_3
      22: iload         5
      24: aaload
      25: astore        6
      27: aload_1
      28: aload         6
      30: invokevirtual #44                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      33: ifeq          39
      36: aload         6
      38: areturn
      39: iinc          5, 1
      42: goto          14
      45: aconst_null
      46: areturn

  public boolean hasParameterAnnotations();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getParameterAnnotations:()[Ljava/lang/annotation/Annotation;
       4: arraylength
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public <T extends java.lang.annotation.Annotation> boolean hasParameterAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method getParameterAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void initParameterNameDiscovery(org.springframework.core.ParameterNameDiscoverer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
       5: return

  public java.lang.String getParameterName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
       4: ifnull        63
       7: aload_0
       8: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      11: ifnull        30
      14: aload_0
      15: getfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
      18: aload_0
      19: getfield      #6                  // Field method:Ljava/lang/reflect/Method;
      22: invokeinterface #46,  2           // InterfaceMethod org/springframework/core/ParameterNameDiscoverer.getParameterNames:(Ljava/lang/reflect/Method;)[Ljava/lang/String;
      27: goto          43
      30: aload_0
      31: getfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
      34: aload_0
      35: getfield      #8                  // Field constructor:Ljava/lang/reflect/Constructor;
      38: invokeinterface #47,  2           // InterfaceMethod org/springframework/core/ParameterNameDiscoverer.getParameterNames:(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;
      43: astore_1
      44: aload_1
      45: ifnull        58
      48: aload_0
      49: aload_1
      50: aload_0
      51: getfield      #7                  // Field parameterIndex:I
      54: aaload
      55: putfield      #17                 // Field parameterName:Ljava/lang/String;
      58: aload_0
      59: aconst_null
      60: putfield      #16                 // Field parameterNameDiscoverer:Lorg/springframework/core/ParameterNameDiscoverer;
      63: aload_0
      64: getfield      #17                 // Field parameterName:Ljava/lang/String;
      67: areturn

  public void increaseNestingLevel();
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field nestingLevel:I
       5: iconst_1
       6: iadd
       7: putfield      #3                  // Field nestingLevel:I
      10: return

  public void decreaseNestingLevel();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method getTypeIndexesPerLevel:()Ljava/util/Map;
       4: aload_0
       5: getfield      #3                  // Field nestingLevel:I
       8: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #50,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: dup
      19: getfield      #3                  // Field nestingLevel:I
      22: iconst_1
      23: isub
      24: putfield      #3                  // Field nestingLevel:I
      27: return

  public int getNestingLevel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nestingLevel:I
       4: ireturn

  public void setTypeIndexForCurrentLevel(int);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method getTypeIndexesPerLevel:()Ljava/util/Map;
       4: aload_0
       5: getfield      #3                  // Field nestingLevel:I
       8: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: iload_1
      12: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public java.lang.Integer getTypeIndexForCurrentLevel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field nestingLevel:I
       5: invokevirtual #52                 // Method getTypeIndexForLevel:(I)Ljava/lang/Integer;
       8: areturn

  public java.lang.Integer getTypeIndexForLevel(int);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method getTypeIndexesPerLevel:()Ljava/util/Map;
       4: iload_1
       5: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #54                 // class java/lang/Integer
      16: areturn

  private java.util.Map<java.lang.Integer, java.lang.Integer> getTypeIndexesPerLevel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field typeIndexesPerLevel:Ljava/util/Map;
       4: ifnonnull     19
       7: aload_0
       8: new           #55                 // class java/util/HashMap
      11: dup
      12: iconst_4
      13: invokespecial #56                 // Method java/util/HashMap."<init>":(I)V
      16: putfield      #18                 // Field typeIndexesPerLevel:Ljava/util/Map;
      19: aload_0
      20: getfield      #18                 // Field typeIndexesPerLevel:Ljava/util/Map;
      23: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        54
      11: aload_1
      12: instanceof    #57                 // class org/springframework/core/MethodParameter
      15: ifeq          54
      18: aload_1
      19: checkcast     #57                 // class org/springframework/core/MethodParameter
      22: astore_2
      23: aload_0
      24: getfield      #7                  // Field parameterIndex:I
      27: aload_2
      28: getfield      #7                  // Field parameterIndex:I
      31: if_icmpne     52
      34: aload_0
      35: invokevirtual #19                 // Method getMember:()Ljava/lang/reflect/Member;
      38: aload_2
      39: invokevirtual #19                 // Method getMember:()Ljava/lang/reflect/Member;
      42: invokevirtual #58                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn
      54: iconst_0
      55: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getMember:()Ljava/lang/reflect/Member;
       4: invokevirtual #59                 // Method java/lang/Object.hashCode:()I
       7: bipush        31
       9: imul
      10: aload_0
      11: getfield      #7                  // Field parameterIndex:I
      14: iadd
      15: ireturn

  public static org.springframework.core.MethodParameter forMethodOrConstructor(java.lang.Object, int);
    Code:
       0: aload_0
       1: instanceof    #60                 // class java/lang/reflect/Method
       4: ifeq          20
       7: new           #57                 // class org/springframework/core/MethodParameter
      10: dup
      11: aload_0
      12: checkcast     #60                 // class java/lang/reflect/Method
      15: iload_1
      16: invokespecial #61                 // Method "<init>":(Ljava/lang/reflect/Method;I)V
      19: areturn
      20: aload_0
      21: instanceof    #62                 // class java/lang/reflect/Constructor
      24: ifeq          40
      27: new           #57                 // class org/springframework/core/MethodParameter
      30: dup
      31: aload_0
      32: checkcast     #62                 // class java/lang/reflect/Constructor
      35: iload_1
      36: invokespecial #63                 // Method "<init>":(Ljava/lang/reflect/Constructor;I)V
      39: areturn
      40: new           #64                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #65                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #67                 // String Given object [
      53: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #70                 // String ] is neither a Method nor a Constructor
      62: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
}
