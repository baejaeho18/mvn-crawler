Compiled from "InternalNamingStrategy.java"
public interface info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy {
  public static info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy inferNamingStrategy(java.util.Optional<info.archinnov.achilles.annotations.Strategy>, info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy);
    Code:
       0: aload_0
       1: invokedynamic #1,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
       6: invokevirtual #2                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
       9: aload_1
      10: invokevirtual #3                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #4                  // class info/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy
      16: areturn

  public static info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy getNamingStrategy(info.archinnov.achilles.type.strategy.NamingStrategy);
    Code:
       0: getstatic     #5                  // Field info/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy$1.$SwitchMap$info$archinnov$achilles$type$strategy$NamingStrategy:[I
       3: aload_0
       4: invokevirtual #6                  // Method info/archinnov/achilles/type/strategy/NamingStrategy.ordinal:()I
       7: iaload
       8: lookupswitch  { // 2
                     1: 36
                     2: 44
               default: 52
          }
      36: new           #7                  // class info/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming
      39: dup
      40: invokespecial #8                  // Method info/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming."<init>":()V
      43: areturn
      44: new           #9                  // class info/archinnov/achilles/internals/strategy/naming/CaseSensitiveNaming
      47: dup
      48: invokespecial #10                 // Method info/archinnov/achilles/internals/strategy/naming/CaseSensitiveNaming."<init>":()V
      51: areturn
      52: new           #11                 // class info/archinnov/achilles/internals/strategy/naming/LowerCaseNaming
      55: dup
      56: invokespecial #12                 // Method info/archinnov/achilles/internals/strategy/naming/LowerCaseNaming."<init>":()V
      59: areturn

  public abstract java.lang.String apply(java.lang.String);

  public abstract java.lang.String FQCN();

  public default java.lang.String toCaseSensitive(java.lang.String);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #13                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       5: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifeq          13
      11: aload_1
      12: areturn
      13: new           #15                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #17                 // String \"
      22: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #17                 // String \"
      31: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public default java.lang.String toSnakeCase(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #20                 // Method org/apache/commons/lang3/StringUtils.splitByCharacterTypeCamelCase:(Ljava/lang/String;)[Ljava/lang/String;
       4: astore_2
       5: new           #21                 // class java/util/StringJoiner
       8: dup
       9: ldc           #22                 // String _
      11: invokespecial #23                 // Method java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
      14: astore_3
      15: aload_2
      16: invokestatic  #24                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      19: invokeinterface #25,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      24: invokedynamic #26,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      29: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      34: invokedynamic #28,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      39: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      44: aload_3
      45: dup
      46: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      49: pop
      50: invokedynamic #31,  0             // InvokeDynamic #3:accept:(Ljava/util/StringJoiner;)Ljava/util/function/Consumer;
      55: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      60: aload_3
      61: invokevirtual #33                 // Method java/util/StringJoiner.toString:()Ljava/lang/String;
      64: ldc           #34                 // String _+
      66: ldc           #22                 // String _
      68: invokevirtual #35                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      71: areturn

  private static java.lang.String lambda$toSnakeCase$5(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: areturn

  private static boolean lambda$toSnakeCase$4(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  private static info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy lambda$inferNamingStrategy$3(info.archinnov.achilles.annotations.Strategy);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod info/archinnov/achilles/annotations/Strategy.naming:()Linfo/archinnov/achilles/type/strategy/NamingStrategy;
       6: invokestatic  #37                 // InterfaceMethod getNamingStrategy:(Linfo/archinnov/achilles/type/strategy/NamingStrategy;)Linfo/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy;
       9: areturn
}
