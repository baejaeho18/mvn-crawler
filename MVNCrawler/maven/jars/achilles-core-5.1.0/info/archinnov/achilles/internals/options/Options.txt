Compiled from "Options.java"
public class info.archinnov.achilles.internals.options.Options {
  private static final org.slf4j.Logger LOGGER;

  private java.util.Optional<com.datastax.driver.core.ConsistencyLevel> cl;

  private java.util.Optional<com.datastax.driver.core.ConsistencyLevel> serialCL;

  private java.util.Optional<java.lang.Long> defaultTimestamp;

  private java.util.Optional<java.lang.Integer> timeToLive;

  private java.util.Optional<java.lang.Integer> fetchSize;

  private java.util.Optional<java.lang.Boolean> idempotent;

  private java.util.Optional<java.util.Map<java.lang.String, java.nio.ByteBuffer>> outgoingPayLoad;

  private java.util.Optional<com.datastax.driver.core.PagingState> pagingState;

  private java.util.Optional<com.datastax.driver.core.policies.RetryPolicy> retryPolicy;

  private java.util.Optional<java.util.List<java.util.function.Function<com.datastax.driver.core.ResultSet, com.datastax.driver.core.ResultSet>>> resultSetAsyncListeners;

  private java.util.Optional<java.util.List<java.util.function.Function<com.datastax.driver.core.Row, com.datastax.driver.core.Row>>> rowAsyncListeners;

  private java.util.Optional<java.lang.Boolean> tracing;

  private java.util.Optional<info.archinnov.achilles.type.SchemaNameProvider> schemaNameProvider;

  private java.util.Optional<java.lang.Integer> readTimeout;

  private java.util.Optional<java.util.StringJoiner> dseSearchSolrQuery;

  private java.util.Optional<java.lang.String> dseSearchRawSolrQuery;

  public info.archinnov.achilles.internals.options.Options();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field cl:Ljava/util/Optional;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: putfield      #4                  // Field serialCL:Ljava/util/Optional;
      18: aload_0
      19: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: putfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
      25: aload_0
      26: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      29: putfield      #6                  // Field timeToLive:Ljava/util/Optional;
      32: aload_0
      33: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      36: putfield      #7                  // Field fetchSize:Ljava/util/Optional;
      39: aload_0
      40: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      43: putfield      #8                  // Field idempotent:Ljava/util/Optional;
      46: aload_0
      47: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      50: putfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
      53: aload_0
      54: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      57: putfield      #10                 // Field pagingState:Ljava/util/Optional;
      60: aload_0
      61: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      64: putfield      #11                 // Field retryPolicy:Ljava/util/Optional;
      67: aload_0
      68: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      71: putfield      #12                 // Field resultSetAsyncListeners:Ljava/util/Optional;
      74: aload_0
      75: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      78: putfield      #13                 // Field rowAsyncListeners:Ljava/util/Optional;
      81: aload_0
      82: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      85: putfield      #14                 // Field tracing:Ljava/util/Optional;
      88: aload_0
      89: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      92: putfield      #15                 // Field schemaNameProvider:Ljava/util/Optional;
      95: aload_0
      96: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      99: putfield      #16                 // Field readTimeout:Ljava/util/Optional;
     102: aload_0
     103: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
     106: putfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
     109: aload_0
     110: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
     113: putfield      #18                 // Field dseSearchRawSolrQuery:Ljava/util/Optional;
     116: return

  public void appendToSolrQuery(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ifne          26
      10: aload_0
      11: new           #20                 // class java/util/StringJoiner
      14: dup
      15: ldc           #21                 // String  AND
      17: invokespecial #22                 // Method java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
      20: invokestatic  #23                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      23: putfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
      26: aload_0
      27: aload_0
      28: getfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
      31: aload_1
      32: invokedynamic #24,  0             // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      37: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      40: putfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
      43: aload_0
      44: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      47: putfield      #18                 // Field dseSearchRawSolrQuery:Ljava/util/Optional;
      50: return

  public void rawSolrQuery(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #23                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #18                 // Field dseSearchRawSolrQuery:Ljava/util/Optional;
       8: aload_0
       9: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      12: putfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
      15: return

  public boolean hasSolrQuery();
    Code:
       0: aload_0
       1: getfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ifne          20
      10: aload_0
      11: getfield      #18                 // Field dseSearchRawSolrQuery:Ljava/util/Optional;
      14: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean hasRawSolrQuery();
    Code:
       0: aload_0
       1: getfield      #18                 // Field dseSearchRawSolrQuery:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.lang.String generateSolrQuery();
    Code:
       0: aload_0
       1: getfield      #17                 // Field dseSearchSolrQuery:Ljava/util/Optional;
       4: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
       7: checkcast     #20                 // class java/util/StringJoiner
      10: invokevirtual #27                 // Method java/util/StringJoiner.toString:()Ljava/lang/String;
      13: areturn

  public java.lang.String generateRawSolrQuery();
    Code:
       0: aload_0
       1: getfield      #18                 // Field dseSearchRawSolrQuery:Ljava/util/Optional;
       4: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
       7: checkcast     #28                 // class java/lang/String
      10: areturn

  public boolean hasCl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cl:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<com.datastax.driver.core.ConsistencyLevel> getCl();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cl:Ljava/util/Optional;
       4: areturn

  public void setCl(java.util.Optional<com.datastax.driver.core.ConsistencyLevel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field cl:Ljava/util/Optional;
       5: return

  public boolean hasSerialCl();
    Code:
       0: aload_0
       1: getfield      #4                  // Field serialCL:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<com.datastax.driver.core.ConsistencyLevel> getSerialCL();
    Code:
       0: aload_0
       1: getfield      #4                  // Field serialCL:Ljava/util/Optional;
       4: areturn

  public void setSerialCL(java.util.Optional<com.datastax.driver.core.ConsistencyLevel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field serialCL:Ljava/util/Optional;
       5: return

  public boolean hasDefaultTimestamp();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.Long> getDefaultTimestamp();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
       4: areturn

  public void setDefaultTimestamp(java.util.Optional<java.lang.Long>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
       5: return

  public boolean hasFetchSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fetchSize:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.Integer> getFetchSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fetchSize:Ljava/util/Optional;
       4: areturn

  public void setFetchSize(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field fetchSize:Ljava/util/Optional;
       5: return

  public boolean hasIdempotent();
    Code:
       0: aload_0
       1: getfield      #8                  // Field idempotent:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.lang.Boolean> getIdempotent();
    Code:
       0: aload_0
       1: getfield      #8                  // Field idempotent:Ljava/util/Optional;
       4: areturn

  public void setIdempotent(java.util.Optional<java.lang.Boolean>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field idempotent:Ljava/util/Optional;
       5: return

  public boolean hasOutgoingPayload();
    Code:
       0: aload_0
       1: getfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<java.util.Map<java.lang.String, java.nio.ByteBuffer>> getOutgoingPayLoad();
    Code:
       0: aload_0
       1: getfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
       4: areturn

  public void setOutgoingPayLoad(java.util.Optional<java.util.Map<java.lang.String, java.nio.ByteBuffer>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
       5: return

  public boolean hasPagingState();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pagingState:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<com.datastax.driver.core.PagingState> getPagingState();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pagingState:Ljava/util/Optional;
       4: areturn

  public void setPagingState(java.util.Optional<com.datastax.driver.core.PagingState>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field pagingState:Ljava/util/Optional;
       5: return

  public boolean hasRetryPolicy();
    Code:
       0: aload_0
       1: getfield      #11                 // Field retryPolicy:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<com.datastax.driver.core.policies.RetryPolicy> getRetryPolicy();
    Code:
       0: aload_0
       1: getfield      #11                 // Field retryPolicy:Ljava/util/Optional;
       4: areturn

  public void setRetryPolicy(java.util.Optional<com.datastax.driver.core.policies.RetryPolicy>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field retryPolicy:Ljava/util/Optional;
       5: return

  public com.datastax.driver.core.ResultSet resultSetAsyncListener(com.datastax.driver.core.ResultSet);
    Code:
       0: new           #29                 // class info/archinnov/achilles/internals/types/LimitedResultSetWrapper
       3: dup
       4: aload_1
       5: invokespecial #30                 // Method info/archinnov/achilles/internals/types/LimitedResultSetWrapper."<init>":(Lcom/datastax/driver/core/ResultSet;)V
       8: astore_2
       9: getstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
      12: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      17: ifeq          48
      20: getstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
      23: ldc           #33                 // String Applying Async listeners %s to the resultset %s
      25: iconst_2
      26: anewarray     #34                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: getfield      #12                 // Field resultSetAsyncListeners:Ljava/util/Optional;
      35: aastore
      36: dup
      37: iconst_1
      38: aload_2
      39: aastore
      40: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokeinterface #36,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      48: aload_0
      49: getfield      #12                 // Field resultSetAsyncListeners:Ljava/util/Optional;
      52: aload_2
      53: invokedynamic #37,  0             // InvokeDynamic #1:accept:(Linfo/archinnov/achilles/internals/types/LimitedResultSetWrapper;)Ljava/util/function/Consumer;
      58: invokevirtual #38                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      61: aload_1
      62: areturn

  public com.datastax.driver.core.Row rowAsyncListener(com.datastax.driver.core.Row);
    Code:
       0: getstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          39
      11: getstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #39                 // String Applying Async listeners %s to row %s
      16: iconst_2
      17: anewarray     #34                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #13                 // Field rowAsyncListeners:Ljava/util/Optional;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_1
      30: aastore
      31: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: invokeinterface #36,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      39: aload_0
      40: getfield      #13                 // Field rowAsyncListeners:Ljava/util/Optional;
      43: aload_1
      44: invokedynamic #40,  0             // InvokeDynamic #2:apply:(Lcom/datastax/driver/core/Row;)Ljava/util/function/Function;
      49: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      52: lconst_0
      53: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: invokevirtual #42                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_1
      61: areturn

  public java.util.Optional<java.util.List<java.util.function.Function<com.datastax.driver.core.ResultSet, com.datastax.driver.core.ResultSet>>> getResultSetAsyncListeners();
    Code:
       0: aload_0
       1: getfield      #12                 // Field resultSetAsyncListeners:Ljava/util/Optional;
       4: areturn

  public void setResultSetAsyncListeners(java.util.Optional<java.util.List<java.util.function.Function<com.datastax.driver.core.ResultSet, com.datastax.driver.core.ResultSet>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field resultSetAsyncListeners:Ljava/util/Optional;
       5: return

  public java.util.Optional<java.util.List<java.util.function.Function<com.datastax.driver.core.Row, com.datastax.driver.core.Row>>> getRowAsyncListeners();
    Code:
       0: aload_0
       1: getfield      #13                 // Field rowAsyncListeners:Ljava/util/Optional;
       4: areturn

  public void setRowAsyncListeners(java.util.Optional<java.util.List<java.util.function.Function<com.datastax.driver.core.Row, com.datastax.driver.core.Row>>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field rowAsyncListeners:Ljava/util/Optional;
       5: return

  public java.util.Optional<java.lang.Boolean> getTracing();
    Code:
       0: aload_0
       1: getfield      #14                 // Field tracing:Ljava/util/Optional;
       4: areturn

  public void setTracing(java.util.Optional<java.lang.Boolean>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field tracing:Ljava/util/Optional;
       5: return

  public java.util.Optional<java.lang.Integer> getTimeToLive();
    Code:
       0: aload_0
       1: getfield      #6                  // Field timeToLive:Ljava/util/Optional;
       4: areturn

  public void setTimeToLive(java.util.Optional<java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field timeToLive:Ljava/util/Optional;
       5: return

  public boolean hasSchemaNameProvider();
    Code:
       0: aload_0
       1: getfield      #15                 // Field schemaNameProvider:Ljava/util/Optional;
       4: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
       7: ireturn

  public java.util.Optional<info.archinnov.achilles.type.SchemaNameProvider> getSchemaNameProvider();
    Code:
       0: aload_0
       1: getfield      #15                 // Field schemaNameProvider:Ljava/util/Optional;
       4: areturn

  public void setSchemaNameProvider(java.util.Optional<info.archinnov.achilles.type.SchemaNameProvider>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field schemaNameProvider:Ljava/util/Optional;
       5: return

  public void setReadTimeout(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #16                 // Field readTimeout:Ljava/util/Optional;
       8: return

  public com.datastax.driver.core.Statement applyOptions(info.archinnov.achilles.internals.statements.OperationType, info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<?>, com.datastax.driver.core.Statement);
    Code:
       0: getstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          42
      11: getstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #44                 // String Applying options %s to the current statement %s
      16: iconst_2
      17: anewarray     #34                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: invokevirtual #45                 // Method toString:()Ljava/lang/String;
      26: aastore
      27: dup
      28: iconst_1
      29: aload_3
      30: invokevirtual #46                 // Method java/lang/Object.toString:()Ljava/lang/String;
      33: aastore
      34: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokeinterface #36,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      42: aload_2
      43: invokevirtual #47                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.isTable:()Z
      46: ifeq          96
      49: aload_3
      50: aload_1
      51: getfield      #48                 // Field info/archinnov/achilles/internals/statements/OperationType.isUpsert:Z
      54: ifeq          68
      57: aload_2
      58: aload_0
      59: getfield      #3                  // Field cl:Ljava/util/Optional;
      62: invokevirtual #49                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.writeConsistency:(Ljava/util/Optional;)Lcom/datastax/driver/core/ConsistencyLevel;
      65: goto          76
      68: aload_2
      69: aload_0
      70: getfield      #3                  // Field cl:Ljava/util/Optional;
      73: invokevirtual #50                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.readConsistency:(Ljava/util/Optional;)Lcom/datastax/driver/core/ConsistencyLevel;
      76: invokevirtual #51                 // Method com/datastax/driver/core/Statement.setConsistencyLevel:(Lcom/datastax/driver/core/ConsistencyLevel;)Lcom/datastax/driver/core/Statement;
      79: pop
      80: aload_3
      81: aload_2
      82: aload_0
      83: getfield      #4                  // Field serialCL:Ljava/util/Optional;
      86: invokevirtual #52                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.serialConsistency:(Ljava/util/Optional;)Lcom/datastax/driver/core/ConsistencyLevel;
      89: invokevirtual #53                 // Method com/datastax/driver/core/Statement.setSerialConsistencyLevel:(Lcom/datastax/driver/core/ConsistencyLevel;)Lcom/datastax/driver/core/Statement;
      92: pop
      93: goto          116
      96: aload_2
      97: invokevirtual #54                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.isView:()Z
     100: ifeq          116
     103: aload_3
     104: aload_2
     105: aload_0
     106: getfield      #3                  // Field cl:Ljava/util/Optional;
     109: invokevirtual #50                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.readConsistency:(Ljava/util/Optional;)Lcom/datastax/driver/core/ConsistencyLevel;
     112: invokevirtual #51                 // Method com/datastax/driver/core/Statement.setConsistencyLevel:(Lcom/datastax/driver/core/ConsistencyLevel;)Lcom/datastax/driver/core/Statement;
     115: pop
     116: aload_0
     117: getfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
     120: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     123: ifeq          158
     126: aload_1
     127: getfield      #48                 // Field info/archinnov/achilles/internals/statements/OperationType.isUpsert:Z
     130: ifeq          158
     133: aload_2
     134: invokevirtual #47                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.isTable:()Z
     137: ifeq          158
     140: aload_3
     141: aload_0
     142: getfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
     145: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     148: checkcast     #55                 // class java/lang/Long
     151: invokevirtual #56                 // Method java/lang/Long.longValue:()J
     154: invokevirtual #57                 // Method com/datastax/driver/core/Statement.setDefaultTimestamp:(J)Lcom/datastax/driver/core/Statement;
     157: pop
     158: aload_0
     159: getfield      #7                  // Field fetchSize:Ljava/util/Optional;
     162: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     165: ifeq          186
     168: aload_3
     169: aload_0
     170: getfield      #7                  // Field fetchSize:Ljava/util/Optional;
     173: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     176: checkcast     #58                 // class java/lang/Integer
     179: invokevirtual #59                 // Method java/lang/Integer.intValue:()I
     182: invokevirtual #60                 // Method com/datastax/driver/core/Statement.setFetchSize:(I)Lcom/datastax/driver/core/Statement;
     185: pop
     186: aload_0
     187: getfield      #8                  // Field idempotent:Ljava/util/Optional;
     190: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     193: ifeq          214
     196: aload_3
     197: aload_0
     198: getfield      #8                  // Field idempotent:Ljava/util/Optional;
     201: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     204: checkcast     #61                 // class java/lang/Boolean
     207: invokevirtual #62                 // Method java/lang/Boolean.booleanValue:()Z
     210: invokevirtual #63                 // Method com/datastax/driver/core/Statement.setIdempotent:(Z)Lcom/datastax/driver/core/Statement;
     213: pop
     214: aload_0
     215: getfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
     218: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     221: ifeq          239
     224: aload_3
     225: aload_0
     226: getfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
     229: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     232: checkcast     #64                 // class java/util/Map
     235: invokevirtual #65                 // Method com/datastax/driver/core/Statement.setOutgoingPayload:(Ljava/util/Map;)Lcom/datastax/driver/core/Statement;
     238: pop
     239: aload_0
     240: getfield      #10                 // Field pagingState:Ljava/util/Optional;
     243: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     246: ifeq          264
     249: aload_3
     250: aload_0
     251: getfield      #10                 // Field pagingState:Ljava/util/Optional;
     254: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     257: checkcast     #66                 // class com/datastax/driver/core/PagingState
     260: invokevirtual #67                 // Method com/datastax/driver/core/Statement.setPagingState:(Lcom/datastax/driver/core/PagingState;)Lcom/datastax/driver/core/Statement;
     263: pop
     264: aload_0
     265: getfield      #11                 // Field retryPolicy:Ljava/util/Optional;
     268: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     271: ifeq          289
     274: aload_3
     275: aload_0
     276: getfield      #11                 // Field retryPolicy:Ljava/util/Optional;
     279: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     282: checkcast     #68                 // class com/datastax/driver/core/policies/RetryPolicy
     285: invokevirtual #69                 // Method com/datastax/driver/core/Statement.setRetryPolicy:(Lcom/datastax/driver/core/policies/RetryPolicy;)Lcom/datastax/driver/core/Statement;
     288: pop
     289: aload_0
     290: getfield      #14                 // Field tracing:Ljava/util/Optional;
     293: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     296: ifne          311
     299: aload_2
     300: getfield      #70                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityLogger:Lorg/slf4j/Logger;
     303: invokeinterface #32,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
     308: ifeq          316
     311: aload_3
     312: invokevirtual #71                 // Method com/datastax/driver/core/Statement.enableTracing:()Lcom/datastax/driver/core/Statement;
     315: pop
     316: aload_0
     317: getfield      #16                 // Field readTimeout:Ljava/util/Optional;
     320: invokevirtual #19                 // Method java/util/Optional.isPresent:()Z
     323: ifeq          344
     326: aload_3
     327: aload_0
     328: getfield      #16                 // Field readTimeout:Ljava/util/Optional;
     331: invokevirtual #26                 // Method java/util/Optional.get:()Ljava/lang/Object;
     334: checkcast     #58                 // class java/lang/Integer
     337: invokevirtual #59                 // Method java/lang/Integer.intValue:()I
     340: invokevirtual #72                 // Method com/datastax/driver/core/Statement.setReadTimeoutMillis:(I)Lcom/datastax/driver/core/Statement;
     343: pop
     344: aload_3
     345: areturn

  public java.lang.String toString();
    Code:
       0: new           #73                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #74                 // String Options{
       6: invokespecial #75                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: ldc           #76                 // String cl=
      13: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #3                  // Field cl:Ljava/util/Optional;
      20: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #79                 // String , serialCL=
      27: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #4                  // Field serialCL:Ljava/util/Optional;
      34: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: ldc           #80                 // String , defaultTimestamp=
      41: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #5                  // Field defaultTimestamp:Ljava/util/Optional;
      48: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: ldc           #81                 // String , timeToLive=
      55: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #6                  // Field timeToLive:Ljava/util/Optional;
      62: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: ldc           #82                 // String , fetchSize=
      69: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #7                  // Field fetchSize:Ljava/util/Optional;
      76: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: ldc           #83                 // String , idempotent=
      83: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #8                  // Field idempotent:Ljava/util/Optional;
      90: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: pop
      94: aload_1
      95: ldc           #84                 // String , outgoingPayLoad=
      97: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_0
     101: getfield      #9                  // Field outgoingPayLoad:Ljava/util/Optional;
     104: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: pop
     108: aload_1
     109: ldc           #85                 // String , pagingState=
     111: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #10                 // Field pagingState:Ljava/util/Optional;
     118: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: pop
     122: aload_1
     123: ldc           #86                 // String , retryPolicy=
     125: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: getfield      #11                 // Field retryPolicy:Ljava/util/Optional;
     132: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: pop
     136: aload_1
     137: ldc           #87                 // String , resultSetAsyncListeners=
     139: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_0
     143: getfield      #12                 // Field resultSetAsyncListeners:Ljava/util/Optional;
     146: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     149: pop
     150: aload_1
     151: ldc           #88                 // String , rowAsyncListeners=
     153: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #13                 // Field rowAsyncListeners:Ljava/util/Optional;
     160: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: pop
     164: aload_1
     165: ldc           #89                 // String , tracing=
     167: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_0
     171: getfield      #14                 // Field tracing:Ljava/util/Optional;
     174: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     177: pop
     178: aload_1
     179: ldc           #90                 // String , schemaNameProvider=
     181: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: getfield      #15                 // Field schemaNameProvider:Ljava/util/Optional;
     188: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     191: pop
     192: aload_1
     193: ldc           #91                 // String , readTimeoutInMillis=
     195: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: aload_0
     199: getfield      #16                 // Field readTimeout:Ljava/util/Optional;
     202: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     205: pop
     206: aload_1
     207: bipush        125
     209: invokevirtual #92                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     212: pop
     213: aload_1
     214: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     217: areturn

  private static java.lang.Long lambda$rowAsyncListener$374(com.datastax.driver.core.Row, java.util.List);
    Code:
       0: aload_1
       1: invokeinterface #94,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: aload_0
       7: invokedynamic #95,  0             // InvokeDynamic #3:apply:(Lcom/datastax/driver/core/Row;)Ljava/util/function/Function;
      12: invokeinterface #96,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      17: invokeinterface #97,  1           // InterfaceMethod java/util/stream/Stream.count:()J
      22: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: areturn

  private static com.datastax.driver.core.Row lambda$null$373(com.datastax.driver.core.Row, java.util.function.Function);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #98,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #99                 // class com/datastax/driver/core/Row
      10: areturn

  private static void lambda$resultSetAsyncListener$372(info.archinnov.achilles.internals.types.LimitedResultSetWrapper, java.util.List);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #100,  0            // InvokeDynamic #4:accept:(Linfo/archinnov/achilles/internals/types/LimitedResultSetWrapper;)Ljava/util/function/Consumer;
       7: invokeinterface #101,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      12: return

  private static void lambda$null$371(info.archinnov.achilles.internals.types.LimitedResultSetWrapper, java.util.function.Function);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #98,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #102                // class com/datastax/driver/core/ResultSet
      10: pop
      11: return

  private static java.util.StringJoiner lambda$appendToSolrQuery$370(java.lang.String, java.util.StringJoiner);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #103                // Method java/util/StringJoiner.add:(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
       5: areturn

  static {};
    Code:
       0: ldc           #104                // class info/archinnov/achilles/internals/options/Options
       2: invokestatic  #105                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #31                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
