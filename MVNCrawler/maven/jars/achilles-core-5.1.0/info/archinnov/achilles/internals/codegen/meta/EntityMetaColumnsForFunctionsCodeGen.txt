Compiled from "EntityMetaColumnsForFunctionsCodeGen.java"
public class info.archinnov.achilles.internals.codegen.meta.EntityMetaColumnsForFunctionsCodeGen {
  private static final info.archinnov.achilles.internals.strategy.naming.SnakeCaseNaming SNAKE_CASE_NAMING;

  public info.archinnov.achilles.internals.codegen.meta.EntityMetaColumnsForFunctionsCodeGen();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static final com.squareup.javapoet.TypeSpec createColumnsClassForFunctionParam(java.util.List<info.archinnov.achilles.internals.parser.FieldParser$FieldMetaSignature>);
    Code:
       0: ldc           #3                  // String ColumnsForFunctions
       2: invokestatic  #4                  // Method com/squareup/javapoet/TypeSpec.classBuilder:(Ljava/lang/String;)Lcom/squareup/javapoet/TypeSpec$Builder;
       5: ldc           #5                  // String Utility class to expose all fields with their CQL type for function call
       7: iconst_0
       8: anewarray     #6                  // class java/lang/Object
      11: invokevirtual #7                  // Method com/squareup/javapoet/TypeSpec$Builder.addJavadoc:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/TypeSpec$Builder;
      14: iconst_3
      15: anewarray     #8                  // class javax/lang/model/element/Modifier
      18: dup
      19: iconst_0
      20: getstatic     #9                  // Field javax/lang/model/element/Modifier.PUBLIC:Ljavax/lang/model/element/Modifier;
      23: aastore
      24: dup
      25: iconst_1
      26: getstatic     #10                 // Field javax/lang/model/element/Modifier.STATIC:Ljavax/lang/model/element/Modifier;
      29: aastore
      30: dup
      31: iconst_2
      32: getstatic     #11                 // Field javax/lang/model/element/Modifier.FINAL:Ljavax/lang/model/element/Modifier;
      35: aastore
      36: invokevirtual #12                 // Method com/squareup/javapoet/TypeSpec$Builder.addModifiers:([Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/TypeSpec$Builder;
      39: astore_1
      40: aload_0
      41: invokeinterface #13,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      46: invokedynamic #14,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      51: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      56: aload_1
      57: invokedynamic #16,  0             // InvokeDynamic #1:accept:(Lcom/squareup/javapoet/TypeSpec$Builder;)Ljava/util/function/Consumer;
      62: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      67: aload_1
      68: invokevirtual #18                 // Method com/squareup/javapoet/TypeSpec$Builder.build:()Lcom/squareup/javapoet/TypeSpec;
      71: areturn

  private static final com.squareup.javapoet.FieldSpec buildField(info.archinnov.achilles.internals.parser.FieldParser$FieldMetaSignature);
    Code:
       0: aload_0
       1: getfield      #19                 // Field info/archinnov/achilles/internals/parser/FieldParser$FieldMetaSignature.sourceType:Lcom/squareup/javapoet/TypeName;
       4: invokestatic  #20                 // Method info/archinnov/achilles/internals/parser/TypeUtils.determineTypeForFunctionParam:(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeName;
       7: astore_1
       8: getstatic     #21                 // Field SNAKE_CASE_NAMING:Linfo/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming;
      11: aload_0
      12: getfield      #22                 // Field info/archinnov/achilles/internals/parser/FieldParser$FieldMetaSignature.context:Linfo/archinnov/achilles/internals/parser/context/FieldParsingContext;
      15: getfield      #23                 // Field info/archinnov/achilles/internals/parser/context/FieldParsingContext.fieldName:Ljava/lang/String;
      18: invokevirtual #24                 // Method info/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming.apply:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #25                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      24: astore_2
      25: aload_0
      26: getfield      #22                 // Field info/archinnov/achilles/internals/parser/FieldParser$FieldMetaSignature.context:Linfo/archinnov/achilles/internals/parser/context/FieldParsingContext;
      29: getfield      #26                 // Field info/archinnov/achilles/internals/parser/context/FieldParsingContext.quotedCqlColumn:Ljava/lang/String;
      32: astore_3
      33: aload_1
      34: aload_2
      35: iconst_2
      36: anewarray     #8                  // class javax/lang/model/element/Modifier
      39: dup
      40: iconst_0
      41: getstatic     #9                  // Field javax/lang/model/element/Modifier.PUBLIC:Ljavax/lang/model/element/Modifier;
      44: aastore
      45: dup
      46: iconst_1
      47: getstatic     #11                 // Field javax/lang/model/element/Modifier.FINAL:Ljavax/lang/model/element/Modifier;
      50: aastore
      51: invokestatic  #27                 // Method com/squareup/javapoet/FieldSpec.builder:(Lcom/squareup/javapoet/TypeName;Ljava/lang/String;[Ljavax/lang/model/element/Modifier;)Lcom/squareup/javapoet/FieldSpec$Builder;
      54: ldc           #28                 // String <br/>\n
      56: iconst_0
      57: anewarray     #6                  // class java/lang/Object
      60: invokevirtual #29                 // Method com/squareup/javapoet/FieldSpec$Builder.addJavadoc:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;
      63: ldc           #30                 // String Field to be used for <em>manager.dsl().select().function(...)</em> call\n
      65: iconst_0
      66: anewarray     #6                  // class java/lang/Object
      69: invokevirtual #29                 // Method com/squareup/javapoet/FieldSpec$Builder.addJavadoc:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;
      72: ldc           #28                 // String <br/>\n
      74: iconst_0
      75: anewarray     #6                  // class java/lang/Object
      78: invokevirtual #29                 // Method com/squareup/javapoet/FieldSpec$Builder.addJavadoc:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;
      81: ldc           #31                 // String This is an alias for the field <strong>$S</strong>
      83: iconst_1
      84: anewarray     #6                  // class java/lang/Object
      87: dup
      88: iconst_0
      89: aload_0
      90: getfield      #22                 // Field info/archinnov/achilles/internals/parser/FieldParser$FieldMetaSignature.context:Linfo/archinnov/achilles/internals/parser/context/FieldParsingContext;
      93: getfield      #23                 // Field info/archinnov/achilles/internals/parser/context/FieldParsingContext.fieldName:Ljava/lang/String;
      96: aastore
      97: invokevirtual #29                 // Method com/squareup/javapoet/FieldSpec$Builder.addJavadoc:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/FieldSpec$Builder;
     100: invokestatic  #32                 // Method com/squareup/javapoet/CodeBlock.builder:()Lcom/squareup/javapoet/CodeBlock$Builder;
     103: ldc           #33                 // String new $T($T.empty()){\n
     105: iconst_2
     106: anewarray     #6                  // class java/lang/Object
     109: dup
     110: iconst_0
     111: aload_1
     112: aastore
     113: dup
     114: iconst_1
     115: getstatic     #34                 // Field info/archinnov/achilles/internals/parser/TypeUtils.OPTIONAL:Lcom/squareup/javapoet/ClassName;
     118: aastore
     119: invokevirtual #35                 // Method com/squareup/javapoet/CodeBlock$Builder.add:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     122: ldc           #36                 // String   @$T\n
     124: iconst_1
     125: anewarray     #6                  // class java/lang/Object
     128: dup
     129: iconst_0
     130: getstatic     #37                 // Field info/archinnov/achilles/internals/parser/TypeUtils.OVERRIDE_ANNOTATION:Lcom/squareup/javapoet/TypeName;
     133: aastore
     134: invokevirtual #35                 // Method com/squareup/javapoet/CodeBlock$Builder.add:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     137: ldc           #38                 // String   protected String cqlColumn()
     139: iconst_0
     140: anewarray     #6                  // class java/lang/Object
     143: invokevirtual #39                 // Method com/squareup/javapoet/CodeBlock$Builder.beginControlFlow:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     146: ldc           #40                 // String     return $S
     148: iconst_1
     149: anewarray     #6                  // class java/lang/Object
     152: dup
     153: iconst_0
     154: aload_3
     155: aastore
     156: invokevirtual #41                 // Method com/squareup/javapoet/CodeBlock$Builder.addStatement:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     159: invokevirtual #42                 // Method com/squareup/javapoet/CodeBlock$Builder.endControlFlow:()Lcom/squareup/javapoet/CodeBlock$Builder;
     162: ldc           #36                 // String   @$T\n
     164: iconst_1
     165: anewarray     #6                  // class java/lang/Object
     168: dup
     169: iconst_0
     170: getstatic     #37                 // Field info/archinnov/achilles/internals/parser/TypeUtils.OVERRIDE_ANNOTATION:Lcom/squareup/javapoet/TypeName;
     173: aastore
     174: invokevirtual #35                 // Method com/squareup/javapoet/CodeBlock$Builder.add:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     177: ldc           #43                 // String   public boolean isFunctionCall()
     179: iconst_0
     180: anewarray     #6                  // class java/lang/Object
     183: invokevirtual #39                 // Method com/squareup/javapoet/CodeBlock$Builder.beginControlFlow:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     186: ldc           #44                 // String     return false
     188: iconst_0
     189: anewarray     #6                  // class java/lang/Object
     192: invokevirtual #41                 // Method com/squareup/javapoet/CodeBlock$Builder.addStatement:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     195: invokevirtual #42                 // Method com/squareup/javapoet/CodeBlock$Builder.endControlFlow:()Lcom/squareup/javapoet/CodeBlock$Builder;
     198: ldc           #45                 // String   }\n
     200: iconst_0
     201: anewarray     #6                  // class java/lang/Object
     204: invokevirtual #35                 // Method com/squareup/javapoet/CodeBlock$Builder.add:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/squareup/javapoet/CodeBlock$Builder;
     207: invokevirtual #46                 // Method com/squareup/javapoet/CodeBlock$Builder.build:()Lcom/squareup/javapoet/CodeBlock;
     210: invokevirtual #47                 // Method com/squareup/javapoet/FieldSpec$Builder.initializer:(Lcom/squareup/javapoet/CodeBlock;)Lcom/squareup/javapoet/FieldSpec$Builder;
     213: invokevirtual #48                 // Method com/squareup/javapoet/FieldSpec$Builder.build:()Lcom/squareup/javapoet/FieldSpec;
     216: areturn

  private static void lambda$createColumnsClassForFunctionParam$545(com.squareup.javapoet.TypeSpec$Builder, info.archinnov.achilles.internals.parser.FieldParser$FieldMetaSignature);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method buildField:(Linfo/archinnov/achilles/internals/parser/FieldParser$FieldMetaSignature;)Lcom/squareup/javapoet/FieldSpec;
       5: invokevirtual #50                 // Method com/squareup/javapoet/TypeSpec$Builder.addField:(Lcom/squareup/javapoet/FieldSpec;)Lcom/squareup/javapoet/TypeSpec$Builder;
       8: pop
       9: return

  private static boolean lambda$createColumnsClassForFunctionParam$544(info.archinnov.achilles.internals.parser.FieldParser$FieldMetaSignature);
    Code:
       0: aload_0
       1: getfield      #22                 // Field info/archinnov/achilles/internals/parser/FieldParser$FieldMetaSignature.context:Linfo/archinnov/achilles/internals/parser/context/FieldParsingContext;
       4: getfield      #51                 // Field info/archinnov/achilles/internals/parser/context/FieldParsingContext.columnType:Linfo/archinnov/achilles/internals/metamodel/columns/ColumnType;
       7: getstatic     #52                 // Field info/archinnov/achilles/internals/metamodel/columns/ColumnType.COMPUTED:Linfo/archinnov/achilles/internals/metamodel/columns/ColumnType;
      10: if_acmpeq     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  static {};
    Code:
       0: new           #53                 // class info/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming
       3: dup
       4: invokespecial #54                 // Method info/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming."<init>":()V
       7: putstatic     #21                 // Field SNAKE_CASE_NAMING:Linfo/archinnov/achilles/internals/strategy/naming/SnakeCaseNaming;
      10: return
}
