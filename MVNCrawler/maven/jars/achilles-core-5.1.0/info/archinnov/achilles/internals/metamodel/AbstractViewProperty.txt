Compiled from "AbstractViewProperty.java"
public abstract class info.archinnov.achilles.internals.metamodel.AbstractViewProperty<T> extends info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<T> {
  private static final org.slf4j.Logger LOGGER;

  private final java.util.List<info.archinnov.achilles.internals.metamodel.AbstractProperty<T, ?, ?>> EMPTY_LIST;

  private info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<?> baseClassProperty;

  public info.archinnov.achilles.internals.metamodel.AbstractViewProperty();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #2                  // class info/archinnov/achilles/internals/metamodel/AbstractProperty
       9: invokestatic  #3                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: putfield      #4                  // Field EMPTY_LIST:Ljava/util/List;
      15: return

  public abstract java.lang.Class<?> getBaseEntityClass();

  public boolean isTable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isView();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String generateSchema(info.archinnov.achilles.internals.schema.SchemaContext);
    Code:
       0: getstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #6,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #7                  // String Generating DDL script for entity of type %s
      16: iconst_1
      17: anewarray     #8                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #9                  // Field entityClass:Ljava/lang/Class;
      26: invokevirtual #10                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      29: aastore
      30: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: new           #13                 // class java/util/StringJoiner
      41: dup
      42: ldc           #14                 // String \n\n
      44: invokespecial #15                 // Method java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
      47: astore_2
      48: aload_1
      49: aload_0
      50: invokestatic  #16                 // Method info/archinnov/achilles/internals/schema/SchemaCreator.generateView:(Linfo/archinnov/achilles/internals/schema/SchemaContext;Linfo/archinnov/achilles/internals/metamodel/AbstractViewProperty;)Ljava/util/List;
      53: aload_2
      54: dup
      55: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: pop
      59: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Ljava/util/StringJoiner;)Ljava/util/function/Consumer;
      64: invokeinterface #19,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      69: aload_2
      70: invokevirtual #20                 // Method java/util/StringJoiner.toString:()Ljava/lang/String;
      73: areturn

  public void validateSchema(info.archinnov.achilles.internals.context.ConfigurationContext);
    Code:
       0: getstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #6,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #21                 // String Validating schema for entity of type %s
      16: iconst_1
      17: anewarray     #8                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #9                  // Field entityClass:Ljava/lang/Class;
      26: invokevirtual #10                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      29: aastore
      30: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: aload_0
      39: invokevirtual #22                 // Method getKeyspace:()Ljava/util/Optional;
      42: aconst_null
      43: invokevirtual #23                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #24                 // class java/lang/String
      49: astore_2
      50: aload_2
      51: ldc           #25                 // String Current keyspace not provided neither in configuration nor on entity \'%s\' annotation
      53: iconst_1
      54: anewarray     #8                  // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_0
      60: getfield      #9                  // Field entityClass:Ljava/lang/Class;
      63: invokevirtual #10                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      66: aastore
      67: invokestatic  #26                 // Method info/archinnov/achilles/validation/Validator.validateNotBlank:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      70: aload_1
      71: invokevirtual #27                 // Method info/archinnov/achilles/internals/context/ConfigurationContext.getSession:()Lcom/datastax/driver/core/Session;
      74: invokeinterface #28,  1           // InterfaceMethod com/datastax/driver/core/Session.getCluster:()Lcom/datastax/driver/core/Cluster;
      79: invokevirtual #29                 // Method com/datastax/driver/core/Cluster.getMetadata:()Lcom/datastax/driver/core/Metadata;
      82: aload_2
      83: invokevirtual #30                 // Method com/datastax/driver/core/Metadata.getKeyspace:(Ljava/lang/String;)Lcom/datastax/driver/core/KeyspaceMetadata;
      86: astore_3
      87: aload_3
      88: ldc           #31                 // String The keyspace {} defined on entity {} does not exist in Cassandra
      90: iconst_2
      91: anewarray     #8                  // class java/lang/Object
      94: dup
      95: iconst_0
      96: aload_2
      97: aastore
      98: dup
      99: iconst_1
     100: aload_0
     101: getfield      #9                  // Field entityClass:Ljava/lang/Class;
     104: invokevirtual #10                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
     107: aastore
     108: invokestatic  #32                 // Method info/archinnov/achilles/validation/Validator.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
     111: aload_0
     112: invokevirtual #33                 // Method getTableOrViewName:()Ljava/lang/String;
     115: astore        4
     117: aload_3
     118: aload         4
     120: invokevirtual #34                 // Method com/datastax/driver/core/KeyspaceMetadata.getMaterializedView:(Ljava/lang/String;)Lcom/datastax/driver/core/MaterializedViewMetadata;
     123: astore        5
     125: aload         5
     127: ldc           #35                 // String The view {} defined on entity {} does not exist in Cassandra
     129: iconst_2
     130: anewarray     #8                  // class java/lang/Object
     133: dup
     134: iconst_0
     135: aload         4
     137: aastore
     138: dup
     139: iconst_1
     140: aload_0
     141: getfield      #9                  // Field entityClass:Ljava/lang/Class;
     144: invokevirtual #10                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
     147: aastore
     148: invokestatic  #32                 // Method info/archinnov/achilles/validation/Validator.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
     151: aload         5
     153: aload_0
     154: getfield      #36                 // Field partitionKeys:Ljava/util/List;
     157: aload_0
     158: getfield      #9                  // Field entityClass:Ljava/lang/Class;
     161: invokestatic  #37                 // Method info/archinnov/achilles/internals/schema/SchemaValidator.validateColumns:(Lcom/datastax/driver/core/AbstractTableMetadata;Ljava/util/List;Ljava/lang/Class;)V
     164: aload         5
     166: aload_0
     167: getfield      #38                 // Field clusteringColumns:Ljava/util/List;
     170: aload_0
     171: getfield      #9                  // Field entityClass:Ljava/lang/Class;
     174: invokestatic  #37                 // Method info/archinnov/achilles/internals/schema/SchemaValidator.validateColumns:(Lcom/datastax/driver/core/AbstractTableMetadata;Ljava/util/List;Ljava/lang/Class;)V
     177: aload         5
     179: aload_0
     180: getfield      #39                 // Field normalColumns:Ljava/util/List;
     183: aload_0
     184: getfield      #9                  // Field entityClass:Ljava/lang/Class;
     187: invokestatic  #37                 // Method info/archinnov/achilles/internals/schema/SchemaValidator.validateColumns:(Lcom/datastax/driver/core/AbstractTableMetadata;Ljava/util/List;Ljava/lang/Class;)V
     190: return

  public void prepareStaticStatements(com.datastax.driver.core.Session, info.archinnov.achilles.internals.cache.StatementsCache);
    Code:
       0: getstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #6,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #40                 // String Preparing static statements for entity of type %s
      16: iconst_1
      17: anewarray     #8                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #9                  // Field entityClass:Ljava/lang/Class;
      26: invokevirtual #10                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      29: aastore
      30: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      38: aload_1
      39: aload_2
      40: aload_0
      41: invokestatic  #41                 // Method info/archinnov/achilles/internals/statements/PreparedStatementGenerator.generateStaticSelectQuery:(Lcom/datastax/driver/core/Session;Linfo/archinnov/achilles/internals/cache/StatementsCache;Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty;)V
      44: return

  protected java.util.List<info.archinnov.achilles.internals.metamodel.AbstractProperty<T, ?, ?>> getAllColumns();
    Code:
       0: iconst_3
       1: anewarray     #42                 // class java/util/List
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #36                 // Field partitionKeys:Ljava/util/List;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #38                 // Field clusteringColumns:Ljava/util/List;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #39                 // Field normalColumns:Ljava/util/List;
      24: aastore
      25: invokestatic  #43                 // Method info/archinnov/achilles/internals/utils/CollectionsHelper.appendAll:([Ljava/util/List;)Ljava/util/List;
      28: areturn

  protected java.util.List<info.archinnov.achilles.internals.metamodel.AbstractProperty<T, ?, ?>> getAllColumnsWithComputed();
    Code:
       0: iconst_4
       1: anewarray     #42                 // class java/util/List
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #36                 // Field partitionKeys:Ljava/util/List;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #38                 // Field clusteringColumns:Ljava/util/List;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #39                 // Field normalColumns:Ljava/util/List;
      24: aastore
      25: dup
      26: iconst_3
      27: aload_0
      28: getfield      #44                 // Field computedColumns:Ljava/util/List;
      31: aastore
      32: invokestatic  #43                 // Method info/archinnov/achilles/internals/utils/CollectionsHelper.appendAll:([Ljava/util/List;)Ljava/util/List;
      35: areturn

  protected info.archinnov.achilles.internals.metamodel.AbstractEntityProperty$EntityType getType();
    Code:
       0: getstatic     #45                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty$EntityType.VIEW:Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty$EntityType;
       3: areturn

  public void injectConsistencyLevels(com.datastax.driver.core.Session, info.archinnov.achilles.internals.context.ConfigurationContext);
    Code:
       0: aload_1
       1: invokeinterface #28,  1           // InterfaceMethod com/datastax/driver/core/Session.getCluster:()Lcom/datastax/driver/core/Cluster;
       6: invokevirtual #46                 // Method com/datastax/driver/core/Cluster.getConfiguration:()Lcom/datastax/driver/core/Configuration;
       9: invokevirtual #47                 // Method com/datastax/driver/core/Configuration.getQueryOptions:()Lcom/datastax/driver/core/QueryOptions;
      12: invokevirtual #48                 // Method com/datastax/driver/core/QueryOptions.getConsistencyLevel:()Lcom/datastax/driver/core/ConsistencyLevel;
      15: astore_3
      16: aload_0
      17: invokevirtual #33                 // Method getTableOrViewName:()Ljava/lang/String;
      20: astore        4
      22: aload_0
      23: aload_0
      24: getfield      #49                 // Field staticReadConsistency:Ljava/util/Optional;
      27: invokestatic  #50                 // Method info/archinnov/achilles/internals/types/OverridingOptional.from:(Ljava/util/Optional;)Linfo/archinnov/achilles/internals/types/OverridingOptional;
      30: aload_2
      31: aload         4
      33: invokevirtual #51                 // Method info/archinnov/achilles/internals/context/ConfigurationContext.getReadConsistencyLevelForTable:(Ljava/lang/String;)Lcom/datastax/driver/core/ConsistencyLevel;
      36: invokevirtual #52                 // Method info/archinnov/achilles/internals/types/OverridingOptional.andThen:(Ljava/lang/Object;)Linfo/archinnov/achilles/internals/types/OverridingOptional;
      39: aload_3
      40: invokevirtual #52                 // Method info/archinnov/achilles/internals/types/OverridingOptional.andThen:(Ljava/lang/Object;)Linfo/archinnov/achilles/internals/types/OverridingOptional;
      43: aload_2
      44: invokevirtual #53                 // Method info/archinnov/achilles/internals/context/ConfigurationContext.getDefaultReadConsistencyLevel:()Ljava/util/Optional;
      47: invokevirtual #54                 // Method info/archinnov/achilles/internals/types/OverridingOptional.andThen:(Ljava/util/Optional;)Linfo/archinnov/achilles/internals/types/OverridingOptional;
      50: getstatic     #55                 // Field info/archinnov/achilles/internals/context/ConfigurationContext.DEFAULT_CONSISTENCY_LEVEL:Lcom/datastax/driver/core/ConsistencyLevel;
      53: invokevirtual #56                 // Method info/archinnov/achilles/internals/types/OverridingOptional.defaultValue:(Ljava/lang/Object;)Linfo/archinnov/achilles/internals/types/OverridingOptional$OverridingOptionalFinal;
      56: invokevirtual #57                 // Method info/archinnov/achilles/internals/types/OverridingOptional$OverridingOptionalFinal.get:()Ljava/lang/Object;
      59: checkcast     #58                 // class com/datastax/driver/core/ConsistencyLevel
      62: putfield      #59                 // Field readConsistencyLevel:Lcom/datastax/driver/core/ConsistencyLevel;
      65: return

  public void inject(info.archinnov.achilles.type.strategy.InsertStrategy);
    Code:
       0: return

  public void triggerInterceptorsForEvent(info.archinnov.achilles.type.interceptor.Event, T);
    Code:
       0: aload_1
       1: getstatic     #60                 // Field info/archinnov/achilles/type/interceptor/Event.POST_LOAD:Linfo/archinnov/achilles/type/interceptor/Event;
       4: if_acmpeq     37
       7: new           #61                 // class java/lang/RuntimeException
      10: dup
      11: new           #62                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #64                 // String Cannot execute mutation for the materialized view
      20: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #66                 // Method getDerivedTableOrViewName:()Ljava/lang/String;
      27: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: aload_1
      39: aload_2
      40: invokespecial #69                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.triggerInterceptorsForEvent:(Linfo/archinnov/achilles/type/interceptor/Event;Ljava/lang/Object;)V
      43: return

  public info.archinnov.achilles.type.strategy.InsertStrategy insertStrategy();
    Code:
       0: new           #61                 // class java/lang/RuntimeException
       3: dup
       4: new           #62                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #64                 // String Cannot execute mutation for the materialized view
      13: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #66                 // Method getDerivedTableOrViewName:()Ljava/lang/String;
      20: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      29: athrow

  public com.datastax.driver.core.ConsistencyLevel writeConsistency(java.util.Optional<com.datastax.driver.core.ConsistencyLevel>);
    Code:
       0: new           #61                 // class java/lang/RuntimeException
       3: dup
       4: new           #62                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #64                 // String Cannot execute mutation for the materialized view
      13: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #66                 // Method getDerivedTableOrViewName:()Ljava/lang/String;
      20: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      29: athrow

  public com.datastax.driver.core.ConsistencyLevel serialConsistency(java.util.Optional<com.datastax.driver.core.ConsistencyLevel>);
    Code:
       0: new           #61                 // class java/lang/RuntimeException
       3: dup
       4: new           #62                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #64                 // String Cannot execute mutation for the materialized view
      13: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #66                 // Method getDerivedTableOrViewName:()Ljava/lang/String;
      20: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokespecial #68                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      29: athrow

  protected boolean isCounterTable();
    Code:
       0: iconst_0
       1: ireturn

  protected java.util.Optional<com.datastax.driver.core.ConsistencyLevel> getStaticWriteConsistency();
    Code:
       0: invokestatic  #70                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  protected java.util.Optional<com.datastax.driver.core.ConsistencyLevel> getStaticSerialConsistency();
    Code:
       0: invokestatic  #70                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  protected java.util.Optional<java.lang.Integer> getStaticTTL();
    Code:
       0: invokestatic  #70                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  protected java.util.Optional<info.archinnov.achilles.type.strategy.InsertStrategy> getStaticInsertStrategy();
    Code:
       0: invokestatic  #70                 // Method java/util/Optional.empty:()Ljava/util/Optional;
       3: areturn

  protected java.util.List<info.archinnov.achilles.internals.metamodel.AbstractProperty<T, ?, ?>> getStaticColumns();
    Code:
       0: aload_0
       1: getfield      #4                  // Field EMPTY_LIST:Ljava/util/List;
       4: areturn

  protected java.util.List<info.archinnov.achilles.internals.metamodel.AbstractProperty<T, ?, ?>> getCounterColumns();
    Code:
       0: aload_0
       1: getfield      #4                  // Field EMPTY_LIST:Ljava/util/List;
       4: areturn

  public info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<?> getBaseClassProperty();
    Code:
       0: aload_0
       1: getfield      #71                 // Field baseClassProperty:Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty;
       4: areturn

  public void setBaseClassProperty(info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field baseClassProperty:Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty;
       5: return

  static {};
    Code:
       0: ldc           #72                 // class info/archinnov/achilles/internals/metamodel/AbstractViewProperty
       2: invokestatic  #73                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
