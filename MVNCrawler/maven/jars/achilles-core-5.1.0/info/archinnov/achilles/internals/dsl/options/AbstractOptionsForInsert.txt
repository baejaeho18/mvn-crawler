Compiled from "AbstractOptionsForInsert.java"
public abstract class info.archinnov.achilles.internals.dsl.options.AbstractOptionsForInsert<T extends info.archinnov.achilles.internals.dsl.options.AbstractOptionsForInsert<T>> extends info.archinnov.achilles.internals.dsl.options.AbstractOptionsForSelect<T> {
  private static final org.slf4j.Logger LOGGER;

  protected java.util.Optional<info.archinnov.achilles.type.strategy.InsertStrategy> insertStrategy;

  protected java.util.Optional<java.lang.Boolean> ifNotExists;

  protected java.util.Optional<java.util.List<info.archinnov.achilles.type.lightweighttransaction.LWTResultListener>> lwtResultListeners;

  public info.archinnov.achilles.internals.dsl.options.AbstractOptionsForInsert();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method info/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field insertStrategy:Ljava/util/Optional;
      11: aload_0
      12: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      15: putfield      #4                  // Field ifNotExists:Ljava/util/Optional;
      18: aload_0
      19: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      22: putfield      #5                  // Field lwtResultListeners:Ljava/util/Optional;
      25: return

  public T ifNotExists(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       8: putfield      #4                  // Field ifNotExists:Ljava/util/Optional;
      11: aload_0
      12: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      15: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      18: areturn

  public T ifNotExists();
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       8: putfield      #4                  // Field ifNotExists:Ljava/util/Optional;
      11: aload_0
      12: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      15: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      18: areturn

  public T withLwtResultListeners(java.util.List<info.archinnov.achilles.type.lightweighttransaction.LWTResultListener>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #5                  // Field lwtResultListeners:Ljava/util/Optional;
       8: aload_0
       9: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      12: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      15: areturn

  public T withLwtResultListener(info.archinnov.achilles.type.lightweighttransaction.LWTResultListener);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #10                 // class info/archinnov/achilles/type/lightweighttransaction/LWTResultListener
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      15: putfield      #5                  // Field lwtResultListeners:Ljava/util/Optional;
      18: aload_0
      19: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      22: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      25: areturn

  public T usingTimestamp(long);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getOptions:()Linfo/archinnov/achilles/internals/options/Options;
       4: lload_1
       5: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      11: invokevirtual #14                 // Method info/archinnov/achilles/internals/options/Options.setDefaultTimestamp:(Ljava/util/Optional;)V
      14: aload_0
      15: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      18: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      21: areturn

  public T usingTimeToLive(int);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getOptions:()Linfo/archinnov/achilles/internals/options/Options;
       4: iload_1
       5: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      11: invokevirtual #16                 // Method info/archinnov/achilles/internals/options/Options.setTimeToLive:(Ljava/util/Optional;)V
      14: aload_0
      15: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      18: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      21: areturn

  public T withInsertStrategy(info.archinnov.achilles.type.strategy.InsertStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       5: putfield      #3                  // Field insertStrategy:Ljava/util/Optional;
       8: aload_0
       9: invokevirtual #8                  // Method getThis:()Linfo/archinnov/achilles/internals/dsl/options/AbstractOptionsForSelect;
      12: checkcast     #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
      15: areturn

  public info.archinnov.achilles.type.strategy.InsertStrategy getOverridenStrategy(info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<?>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field insertStrategy:Ljava/util/Optional;
       4: invokestatic  #17                 // Method info/archinnov/achilles/internals/types/OverridingOptional.from:(Ljava/util/Optional;)Linfo/archinnov/achilles/internals/types/OverridingOptional;
       7: aload_1
       8: invokevirtual #18                 // Method info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.insertStrategy:()Linfo/archinnov/achilles/type/strategy/InsertStrategy;
      11: invokevirtual #19                 // Method info/archinnov/achilles/internals/types/OverridingOptional.defaultValue:(Ljava/lang/Object;)Linfo/archinnov/achilles/internals/types/OverridingOptional$OverridingOptionalFinal;
      14: invokevirtual #20                 // Method info/archinnov/achilles/internals/types/OverridingOptional$OverridingOptionalFinal.get:()Ljava/lang/Object;
      17: checkcast     #21                 // class info/archinnov/achilles/type/strategy/InsertStrategy
      20: astore_2
      21: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
      24: invokeinterface #23,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      29: ifeq          66
      32: getstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
      35: ldc           #24                 // String Get runtime insert strategy for entity %s : %s
      37: iconst_2
      38: anewarray     #25                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_1
      44: getfield      #26                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
      47: invokevirtual #27                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      50: aastore
      51: dup
      52: iconst_1
      53: aload_2
      54: invokevirtual #28                 // Method info/archinnov/achilles/type/strategy/InsertStrategy.name:()Ljava/lang/String;
      57: aastore
      58: invokestatic  #29                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      61: invokeinterface #30,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      66: aload_2
      67: areturn

  static {};
    Code:
       0: ldc           #9                  // class info/archinnov/achilles/internals/dsl/options/AbstractOptionsForInsert
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #22                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
