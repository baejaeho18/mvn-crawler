Compiled from "GlobalParsingContext.java"
public class info.archinnov.achilles.internals.parser.context.GlobalParsingContext {
  private static final java.util.Map<info.archinnov.achilles.type.CassandraVersion, info.archinnov.achilles.internals.cassandra_version.InternalCassandraVersion> VERSION_MAPPING;

  private static final java.util.Map<info.archinnov.achilles.type.strategy.ColumnMappingStrategy, info.archinnov.achilles.type.tuples.Tuple2<info.archinnov.achilles.internals.strategy.field_filtering.FieldFilter, info.archinnov.achilles.internals.strategy.field_filtering.FieldFilter>> COLUMNS_MAPPING;

  public final info.archinnov.achilles.internals.cassandra_version.InternalCassandraVersion cassandraVersion;

  public final info.archinnov.achilles.type.strategy.InsertStrategy insertStrategy;

  public final info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy namingStrategy;

  public final info.archinnov.achilles.internals.strategy.field_filtering.FieldFilter fieldFilter;

  public final info.archinnov.achilles.internals.strategy.field_filtering.FieldFilter udtFieldFilter;

  public final java.util.Optional<java.lang.String> projectName;

  public final java.util.Map<com.squareup.javapoet.TypeName, com.squareup.javapoet.TypeSpec> udtTypes;

  public final java.util.Map<com.squareup.javapoet.TypeName, info.archinnov.achilles.internals.parser.FieldParser$UDTMetaSignature> udtMetaSignatures;

  public final java.util.Map<com.squareup.javapoet.TypeName, info.archinnov.achilles.internals.parser.CodecFactory$CodecInfo> codecRegistry;

  public static info.archinnov.achilles.internals.parser.context.GlobalParsingContext fromCompileTimeConfig(info.archinnov.achilles.annotations.CompileTimeConfig);
    Code:
       0: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #3,  1            // InterfaceMethod info/archinnov/achilles/annotations/CompileTimeConfig.cassandraVersion:()Linfo/archinnov/achilles/type/CassandraVersion;
       9: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #5                  // class info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion
      17: astore_1
      18: aload_0
      19: invokeinterface #6,  1            // InterfaceMethod info/archinnov/achilles/annotations/CompileTimeConfig.insertStrategy:()Linfo/archinnov/achilles/type/strategy/InsertStrategy;
      24: astore_2
      25: aload_0
      26: invokeinterface #7,  1            // InterfaceMethod info/archinnov/achilles/annotations/CompileTimeConfig.namingStrategy:()Linfo/archinnov/achilles/type/strategy/NamingStrategy;
      31: invokestatic  #8                  // InterfaceMethod info/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy.getNamingStrategy:(Linfo/archinnov/achilles/type/strategy/NamingStrategy;)Linfo/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy;
      34: astore_3
      35: getstatic     #9                  // Field COLUMNS_MAPPING:Ljava/util/Map;
      38: aload_0
      39: invokeinterface #10,  1           // InterfaceMethod info/archinnov/achilles/annotations/CompileTimeConfig.columnMappingStrategy:()Linfo/archinnov/achilles/type/strategy/ColumnMappingStrategy;
      44: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #11                 // class info/archinnov/achilles/type/tuples/Tuple2
      52: astore        4
      54: aload_0
      55: invokeinterface #12,  1           // InterfaceMethod info/archinnov/achilles/annotations/CompileTimeConfig.projectName:()Ljava/lang/String;
      60: invokestatic  #13                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      63: ifeq          72
      66: invokestatic  #14                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      69: goto          81
      72: aload_0
      73: invokeinterface #12,  1           // InterfaceMethod info/archinnov/achilles/annotations/CompileTimeConfig.projectName:()Ljava/lang/String;
      78: invokestatic  #15                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      81: astore        5
      83: new           #16                 // class info/archinnov/achilles/internals/parser/context/GlobalParsingContext
      86: dup
      87: aload_1
      88: aload_2
      89: aload_3
      90: aload         4
      92: invokevirtual #17                 // Method info/archinnov/achilles/type/tuples/Tuple2._1:()Ljava/lang/Object;
      95: checkcast     #18                 // class info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter
      98: aload         4
     100: invokevirtual #19                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
     103: checkcast     #18                 // class info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter
     106: aload         5
     108: invokespecial #20                 // Method "<init>":(Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;Linfo/archinnov/achilles/type/strategy/InsertStrategy;Linfo/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy;Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;Ljava/util/Optional;)V
     111: areturn

  public static info.archinnov.achilles.internals.parser.context.GlobalParsingContext defaultContext();
    Code:
       0: new           #16                 // class info/archinnov/achilles/internals/parser/context/GlobalParsingContext
       3: dup
       4: getstatic     #21                 // Field info/archinnov/achilles/internals/cassandra_version/V3_0.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_0;
       7: getstatic     #22                 // Field info/archinnov/achilles/type/strategy/InsertStrategy.ALL_FIELDS:Linfo/archinnov/achilles/type/strategy/InsertStrategy;
      10: new           #23                 // class info/archinnov/achilles/internals/strategy/naming/LowerCaseNaming
      13: dup
      14: invokespecial #24                 // Method info/archinnov/achilles/internals/strategy/naming/LowerCaseNaming."<init>":()V
      17: getstatic     #25                 // Field info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter.EXPLICIT_ENTITY_FIELD_FILTER:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
      20: getstatic     #26                 // Field info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter.EXPLICIT_UDT_FIELD_FILTER:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
      23: invokestatic  #14                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      26: invokespecial #20                 // Method "<init>":(Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;Linfo/archinnov/achilles/type/strategy/InsertStrategy;Linfo/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy;Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;Ljava/util/Optional;)V
      29: areturn

  public info.archinnov.achilles.internals.parser.context.GlobalParsingContext(info.archinnov.achilles.internals.cassandra_version.InternalCassandraVersion, info.archinnov.achilles.type.strategy.InsertStrategy, info.archinnov.achilles.internals.strategy.naming.InternalNamingStrategy, info.archinnov.achilles.internals.strategy.field_filtering.FieldFilter, info.archinnov.achilles.internals.strategy.field_filtering.FieldFilter, java.util.Optional<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #28                 // class java/util/HashMap
       8: dup
       9: invokespecial #29                 // Method java/util/HashMap."<init>":()V
      12: putfield      #30                 // Field udtTypes:Ljava/util/Map;
      15: aload_0
      16: new           #28                 // class java/util/HashMap
      19: dup
      20: invokespecial #29                 // Method java/util/HashMap."<init>":()V
      23: putfield      #31                 // Field udtMetaSignatures:Ljava/util/Map;
      26: aload_0
      27: new           #28                 // class java/util/HashMap
      30: dup
      31: invokespecial #29                 // Method java/util/HashMap."<init>":()V
      34: putfield      #32                 // Field codecRegistry:Ljava/util/Map;
      37: aload_0
      38: aload_1
      39: putfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
      42: aload_0
      43: aload_2
      44: putfield      #34                 // Field insertStrategy:Linfo/archinnov/achilles/type/strategy/InsertStrategy;
      47: aload_0
      48: aload         4
      50: putfield      #35                 // Field fieldFilter:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
      53: aload_0
      54: aload         5
      56: putfield      #36                 // Field udtFieldFilter:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
      59: aload_0
      60: aload_3
      61: putfield      #37                 // Field namingStrategy:Linfo/archinnov/achilles/internals/strategy/naming/InternalNamingStrategy;
      64: aload_0
      65: aload         6
      67: putfield      #38                 // Field projectName:Ljava/util/Optional;
      70: return

  public java.lang.String managerFactoryBuilderClassName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field projectName:Ljava/util/Optional;
       4: invokevirtual #39                 // Method java/util/Optional.isPresent:()Z
       7: ifeq          44
      10: new           #40                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #42                 // String ManagerFactoryBuilder_For_
      19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #38                 // Field projectName:Ljava/util/Optional;
      26: invokevirtual #44                 // Method java/util/Optional.get:()Ljava/lang/Object;
      29: checkcast     #45                 // class java/lang/String
      32: invokestatic  #46                 // Method info/archinnov/achilles/internals/utils/NamingHelper.upperCaseFirst:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: goto          46
      44: ldc           #48                 // String ManagerFactoryBuilder
      46: areturn

  public java.lang.String managerFactoryClassName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field projectName:Ljava/util/Optional;
       4: invokevirtual #39                 // Method java/util/Optional.isPresent:()Z
       7: ifeq          44
      10: new           #40                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #49                 // String ManagerFactory_For_
      19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #38                 // Field projectName:Ljava/util/Optional;
      26: invokevirtual #44                 // Method java/util/Optional.get:()Ljava/lang/Object;
      29: checkcast     #45                 // class java/lang/String
      32: invokestatic  #46                 // Method info/archinnov/achilles/internals/utils/NamingHelper.upperCaseFirst:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: goto          46
      44: ldc           #50                 // String ManagerFactory
      46: areturn

  public com.squareup.javapoet.TypeName managerFactoryBuilderTypeName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field projectName:Ljava/util/Optional;
       4: invokevirtual #39                 // Method java/util/Optional.isPresent:()Z
       7: ifeq          26
      10: ldc           #51                 // String info.archinnov.achilles.generated
      12: aload_0
      13: invokevirtual #52                 // Method managerFactoryBuilderClassName:()Ljava/lang/String;
      16: iconst_0
      17: anewarray     #45                 // class java/lang/String
      20: invokestatic  #53                 // Method com/squareup/javapoet/ClassName.get:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;
      23: goto          29
      26: getstatic     #54                 // Field info/archinnov/achilles/internals/parser/TypeUtils.MANAGER_FACTORY_BUILDER_TYPE_NAME:Lcom/squareup/javapoet/ClassName;
      29: areturn

  public com.squareup.javapoet.TypeName managerFactoryTypeName();
    Code:
       0: aload_0
       1: getfield      #38                 // Field projectName:Ljava/util/Optional;
       4: invokevirtual #39                 // Method java/util/Optional.isPresent:()Z
       7: ifeq          26
      10: ldc           #51                 // String info.archinnov.achilles.generated
      12: aload_0
      13: invokevirtual #55                 // Method managerFactoryClassName:()Ljava/lang/String;
      16: iconst_0
      17: anewarray     #45                 // class java/lang/String
      20: invokestatic  #53                 // Method com/squareup/javapoet/ClassName.get:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/squareup/javapoet/ClassName;
      23: goto          29
      26: getstatic     #56                 // Field info/archinnov/achilles/internals/parser/TypeUtils.MANAGER_FACTORY_TYPE_NAME:Lcom/squareup/javapoet/ClassName;
      29: areturn

  public info.archinnov.achilles.internals.parser.validator.BeanValidator beanValidator();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #57,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.beanValidator:()Linfo/archinnov/achilles/internals/parser/validator/BeanValidator;
       9: areturn

  public info.archinnov.achilles.internals.parser.validator.FieldValidator fieldValidator();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #58,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.fieldValidator:()Linfo/archinnov/achilles/internals/parser/validator/FieldValidator;
       9: areturn

  public info.archinnov.achilles.internals.parser.validator.TypeValidator typeValidator();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #59,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.typeValidator:()Linfo/archinnov/achilles/internals/parser/validator/TypeValidator;
       9: areturn

  public info.archinnov.achilles.internals.parser.validator.NestedTypesValidator nestedTypesValidator();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #60,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.nestedTypesValidator:()Linfo/archinnov/achilles/internals/parser/validator/NestedTypesValidator;
       9: areturn

  public info.archinnov.achilles.internals.codegen.crud.CrudAPICodeGen crudAPICodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #61,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.crudApiCodeGen:()Linfo/archinnov/achilles/internals/codegen/crud/CrudAPICodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.dsl.select.SelectDSLCodeGen selectDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #62,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.selectDslCodeGen:()Linfo/archinnov/achilles/internals/codegen/dsl/select/SelectDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.index.IndexSelectDSLCodeGen indexSelectDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #63,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.indexSelectDslCodeGen:()Linfo/archinnov/achilles/internals/codegen/index/IndexSelectDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.dsl.select.SelectWhereDSLCodeGen selectWhereDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #64,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.selectWhereDSLCodeGen:()Linfo/archinnov/achilles/internals/codegen/dsl/select/SelectWhereDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.index.IndexSelectWhereDSLCodeGen indexSelectWhereDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #65,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.indexSelectWhereDSLCodeGen:()Linfo/archinnov/achilles/internals/codegen/index/IndexSelectWhereDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.dsl.update.UpdateDSLCodeGen updateDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #66,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.updateDslCodeGen:()Linfo/archinnov/achilles/internals/codegen/dsl/update/UpdateDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.dsl.update.UpdateWhereDSLCodeGen updateWhereDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #67,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.updateWhereDslCodeGen:()Linfo/archinnov/achilles/internals/codegen/dsl/update/UpdateWhereDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.dsl.delete.DeleteDSLCodeGen deleteDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #68,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.deleteDslCodeGen:()Linfo/archinnov/achilles/internals/codegen/dsl/delete/DeleteDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.dsl.delete.DeleteWhereDSLCodeGen deleteWhereDSLCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #69,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.deleteWhereDslCodeGen:()Linfo/archinnov/achilles/internals/codegen/dsl/delete/DeleteWhereDSLCodeGen;
       9: areturn

  public info.archinnov.achilles.internals.codegen.function.FunctionsRegistryCodeGen functionsRegistryCodeGen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: invokeinterface #70,  1           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.functionsRegistryCodeGen:()Linfo/archinnov/achilles/internals/codegen/function/FunctionsRegistryCodeGen;
       9: areturn

  public boolean supportsFeature(info.archinnov.achilles.internals.cassandra_version.CassandraFeature);
    Code:
       0: aload_0
       1: getfield      #33                 // Field cassandraVersion:Linfo/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion;
       4: aload_1
       5: invokeinterface #71,  2           // InterfaceMethod info/archinnov/achilles/internals/cassandra_version/InternalCassandraVersion.supportsFeature:(Linfo/archinnov/achilles/internals/cassandra_version/CassandraFeature;)Z
      10: ireturn

  public boolean hasCodecFor(com.squareup.javapoet.TypeName);
    Code:
       0: aload_0
       1: getfield      #32                 // Field codecRegistry:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public info.archinnov.achilles.internals.parser.CodecFactory$CodecInfo getCodecFor(com.squareup.javapoet.TypeName);
    Code:
       0: aload_0
       1: getfield      #32                 // Field codecRegistry:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #73                 // class info/archinnov/achilles/internals/parser/CodecFactory$CodecInfo
      13: areturn

  static {};
    Code:
       0: new           #28                 // class java/util/HashMap
       3: dup
       4: invokespecial #29                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      10: new           #28                 // class java/util/HashMap
      13: dup
      14: invokespecial #29                 // Method java/util/HashMap."<init>":()V
      17: putstatic     #9                  // Field COLUMNS_MAPPING:Ljava/util/Map;
      20: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      23: getstatic     #74                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_2_1_X:Linfo/archinnov/achilles/type/CassandraVersion;
      26: getstatic     #75                 // Field info/archinnov/achilles/internals/cassandra_version/V2_1.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V2_1;
      29: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      38: getstatic     #77                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_2_2_X:Linfo/archinnov/achilles/type/CassandraVersion;
      41: getstatic     #78                 // Field info/archinnov/achilles/internals/cassandra_version/V2_2.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V2_2;
      44: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      53: getstatic     #79                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_0_X:Linfo/archinnov/achilles/type/CassandraVersion;
      56: getstatic     #21                 // Field info/archinnov/achilles/internals/cassandra_version/V3_0.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_0;
      59: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      68: getstatic     #80                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_1:Linfo/archinnov/achilles/type/CassandraVersion;
      71: getstatic     #81                 // Field info/archinnov/achilles/internals/cassandra_version/V3_1.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_1;
      74: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      83: getstatic     #82                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_2:Linfo/archinnov/achilles/type/CassandraVersion;
      86: getstatic     #83                 // Field info/archinnov/achilles/internals/cassandra_version/V3_2.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_2;
      89: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
      98: getstatic     #84                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_3:Linfo/archinnov/achilles/type/CassandraVersion;
     101: getstatic     #85                 // Field info/archinnov/achilles/internals/cassandra_version/V3_3.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_3;
     104: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     113: getstatic     #86                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_4:Linfo/archinnov/achilles/type/CassandraVersion;
     116: getstatic     #87                 // Field info/archinnov/achilles/internals/cassandra_version/V3_4.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_4;
     119: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     128: getstatic     #88                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_5:Linfo/archinnov/achilles/type/CassandraVersion;
     131: getstatic     #89                 // Field info/archinnov/achilles/internals/cassandra_version/V3_5.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_5;
     134: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     143: getstatic     #90                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_6:Linfo/archinnov/achilles/type/CassandraVersion;
     146: getstatic     #91                 // Field info/archinnov/achilles/internals/cassandra_version/V3_6.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_6;
     149: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     158: getstatic     #92                 // Field info/archinnov/achilles/type/CassandraVersion.CASSANDRA_3_7:Linfo/archinnov/achilles/type/CassandraVersion;
     161: getstatic     #93                 // Field info/archinnov/achilles/internals/cassandra_version/V3_7.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/V3_7;
     164: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     173: getstatic     #94                 // Field info/archinnov/achilles/type/CassandraVersion.DSE_4_8_X:Linfo/archinnov/achilles/type/CassandraVersion;
     176: getstatic     #95                 // Field info/archinnov/achilles/internals/cassandra_version/DSE_4_8_X.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/DSE_4_8_X;
     179: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     184: pop
     185: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     188: getstatic     #96                 // Field info/archinnov/achilles/type/CassandraVersion.DSE_5_0_0:Linfo/archinnov/achilles/type/CassandraVersion;
     191: getstatic     #97                 // Field info/archinnov/achilles/internals/cassandra_version/DSE_5_0_0.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/DSE_5_0_0;
     194: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     199: pop
     200: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     203: getstatic     #98                 // Field info/archinnov/achilles/type/CassandraVersion.DSE_5_0_1:Linfo/archinnov/achilles/type/CassandraVersion;
     206: getstatic     #99                 // Field info/archinnov/achilles/internals/cassandra_version/DSE_5_0_1.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/DSE_5_0_0;
     209: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     214: pop
     215: getstatic     #2                  // Field VERSION_MAPPING:Ljava/util/Map;
     218: getstatic     #100                // Field info/archinnov/achilles/type/CassandraVersion.DSE_5_0_2:Linfo/archinnov/achilles/type/CassandraVersion;
     221: getstatic     #101                // Field info/archinnov/achilles/internals/cassandra_version/DSE_5_0_2.INSTANCE:Linfo/archinnov/achilles/internals/cassandra_version/DSE_5_0_0;
     224: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     229: pop
     230: getstatic     #9                  // Field COLUMNS_MAPPING:Ljava/util/Map;
     233: getstatic     #102                // Field info/archinnov/achilles/type/strategy/ColumnMappingStrategy.EXPLICIT:Linfo/archinnov/achilles/type/strategy/ColumnMappingStrategy;
     236: getstatic     #25                 // Field info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter.EXPLICIT_ENTITY_FIELD_FILTER:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
     239: getstatic     #26                 // Field info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter.EXPLICIT_UDT_FIELD_FILTER:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
     242: invokestatic  #103                // Method info/archinnov/achilles/type/tuples/Tuple2.of:(Ljava/lang/Object;Ljava/lang/Object;)Linfo/archinnov/achilles/type/tuples/Tuple2;
     245: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     250: pop
     251: getstatic     #9                  // Field COLUMNS_MAPPING:Ljava/util/Map;
     254: getstatic     #104                // Field info/archinnov/achilles/type/strategy/ColumnMappingStrategy.IMPLICIT:Linfo/archinnov/achilles/type/strategy/ColumnMappingStrategy;
     257: getstatic     #105                // Field info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter.IMPLICIT_ENTITY_FIELD_FILTER:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
     260: getstatic     #106                // Field info/archinnov/achilles/internals/strategy/field_filtering/FieldFilter.IMPLICIT_UDT_FIELD_FILTER:Linfo/archinnov/achilles/internals/strategy/field_filtering/FieldFilter;
     263: invokestatic  #103                // Method info/archinnov/achilles/type/tuples/Tuple2.of:(Ljava/lang/Object;Ljava/lang/Object;)Linfo/archinnov/achilles/type/tuples/Tuple2;
     266: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     271: pop
     272: return
}
