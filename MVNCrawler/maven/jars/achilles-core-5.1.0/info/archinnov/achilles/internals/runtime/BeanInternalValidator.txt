Compiled from "BeanInternalValidator.java"
public class info.archinnov.achilles.internals.runtime.BeanInternalValidator {
  private static final org.slf4j.Logger LOGGER;

  public info.archinnov.achilles.internals.runtime.BeanInternalValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> void validatePrimaryKey(T, info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<T>);
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #3,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          42
      11: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #4                  // String Validate primary key for instance %s of type %s
      16: iconst_2
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: getfield      #6                  // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
      30: invokevirtual #7                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      33: aastore
      34: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      42: aload_1
      43: getfield      #10                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.partitionKeys:Ljava/util/List;
      46: invokeinterface #11,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      51: aload_0
      52: invokedynamic #12,  0             // InvokeDynamic #0:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      57: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      62: invokedynamic #14,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      67: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      72: aload_1
      73: invokedynamic #16,  0             // InvokeDynamic #2:accept:(Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty;)Ljava/util/function/Consumer;
      78: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      83: aload_1
      84: getfield      #18                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.clusteringColumns:Ljava/util/List;
      87: invokeinterface #11,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      92: aload_0
      93: invokedynamic #19,  0             // InvokeDynamic #3:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      98: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     103: invokedynamic #20,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
     108: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     113: aload_1
     114: invokedynamic #21,  0             // InvokeDynamic #5:accept:(Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty;)Ljava/util/function/Consumer;
     119: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     124: return

  public static <T> void validateColumnsForInsertStatic(T, info.archinnov.achilles.internals.metamodel.AbstractEntityProperty<T>);
    Code:
       0: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
       3: invokeinterface #3,  1            // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          42
      11: getstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
      14: ldc           #22                 // String Validate partition columns and other columns for INSERT STATIC of instance %s of type %s
      16: iconst_2
      17: anewarray     #5                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: aastore
      24: dup
      25: iconst_1
      26: aload_1
      27: getfield      #6                  // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
      30: invokevirtual #7                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      33: aastore
      34: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      42: aload_1
      43: getfield      #10                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.partitionKeys:Ljava/util/List;
      46: invokeinterface #11,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      51: aload_0
      52: invokedynamic #23,  0             // InvokeDynamic #6:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      57: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      62: invokedynamic #24,  0             // InvokeDynamic #7:test:()Ljava/util/function/Predicate;
      67: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      72: aload_1
      73: invokedynamic #25,  0             // InvokeDynamic #8:accept:(Linfo/archinnov/achilles/internals/metamodel/AbstractEntityProperty;)Ljava/util/function/Consumer;
      78: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      83: aload_1
      84: getfield      #26                 // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.staticColumns:Ljava/util/List;
      87: invokeinterface #11,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      92: aload_0
      93: invokedynamic #27,  0             // InvokeDynamic #9:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      98: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     103: invokedynamic #28,  0             // InvokeDynamic #10:test:()Ljava/util/function/Predicate;
     108: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     113: invokeinterface #29,  1           // InterfaceMethod java/util/stream/Stream.count:()J
     118: lstore_2
     119: lload_2
     120: lconst_0
     121: lcmp
     122: ifle          129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: ldc           #30                 // String There should be at least one non null static column in entity of type \'%s\' when calling insertStatic()
     132: iconst_1
     133: anewarray     #5                  // class java/lang/Object
     136: dup
     137: iconst_0
     138: aload_1
     139: getfield      #6                  // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
     142: invokevirtual #7                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
     145: aastore
     146: invokestatic  #31                 // Method info/archinnov/achilles/validation/Validator.validateTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
     149: return

  private static boolean lambda$validateColumnsForInsertStatic$493(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  private static java.lang.Object lambda$validateColumnsForInsertStatic$492(java.lang.Object, info.archinnov.achilles.internals.metamodel.AbstractProperty);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #32                 // Method info/archinnov/achilles/internals/metamodel/AbstractProperty.encodeField:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static void lambda$validateColumnsForInsertStatic$491(info.archinnov.achilles.internals.metamodel.AbstractEntityProperty, info.archinnov.achilles.type.tuples.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
       4: ldc           #34                 // String Field \'%s\' in entity of type \'%s\' should not be null because it is a partition key
       6: iconst_2
       7: anewarray     #5                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokevirtual #35                 // Method info/archinnov/achilles/type/tuples/Tuple2._1:()Ljava/lang/Object;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #6                  // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
      23: invokevirtual #7                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      26: aastore
      27: invokestatic  #36                 // Method info/archinnov/achilles/validation/Validator.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  private static boolean lambda$validateColumnsForInsertStatic$490(info.archinnov.achilles.type.tuples.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static info.archinnov.achilles.type.tuples.Tuple2 lambda$validateColumnsForInsertStatic$489(java.lang.Object, info.archinnov.achilles.internals.metamodel.AbstractProperty);
    Code:
       0: aload_1
       1: getfield      #37                 // Field info/archinnov/achilles/internals/metamodel/AbstractProperty.fieldName:Ljava/lang/String;
       4: aload_1
       5: aload_0
       6: invokevirtual #32                 // Method info/archinnov/achilles/internals/metamodel/AbstractProperty.encodeField:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokestatic  #38                 // Method info/archinnov/achilles/type/tuples/Tuple2.of:(Ljava/lang/Object;Ljava/lang/Object;)Linfo/archinnov/achilles/type/tuples/Tuple2;
      12: areturn

  private static void lambda$validatePrimaryKey$488(info.archinnov.achilles.internals.metamodel.AbstractEntityProperty, info.archinnov.achilles.type.tuples.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
       4: ldc           #39                 // String Field \'%s\' in entity of type \'%s\' should not be null because it is a clustering column
       6: iconst_2
       7: anewarray     #5                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokevirtual #35                 // Method info/archinnov/achilles/type/tuples/Tuple2._1:()Ljava/lang/Object;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #6                  // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
      23: invokevirtual #7                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      26: aastore
      27: invokestatic  #36                 // Method info/archinnov/achilles/validation/Validator.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  private static boolean lambda$validatePrimaryKey$487(info.archinnov.achilles.type.tuples.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static info.archinnov.achilles.type.tuples.Tuple2 lambda$validatePrimaryKey$486(java.lang.Object, info.archinnov.achilles.internals.metamodel.AbstractProperty);
    Code:
       0: aload_1
       1: getfield      #37                 // Field info/archinnov/achilles/internals/metamodel/AbstractProperty.fieldName:Ljava/lang/String;
       4: aload_1
       5: aload_0
       6: invokevirtual #32                 // Method info/archinnov/achilles/internals/metamodel/AbstractProperty.encodeField:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokestatic  #38                 // Method info/archinnov/achilles/type/tuples/Tuple2.of:(Ljava/lang/Object;Ljava/lang/Object;)Linfo/archinnov/achilles/type/tuples/Tuple2;
      12: areturn

  private static void lambda$validatePrimaryKey$485(info.archinnov.achilles.internals.metamodel.AbstractEntityProperty, info.archinnov.achilles.type.tuples.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
       4: ldc           #34                 // String Field \'%s\' in entity of type \'%s\' should not be null because it is a partition key
       6: iconst_2
       7: anewarray     #5                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_1
      13: invokevirtual #35                 // Method info/archinnov/achilles/type/tuples/Tuple2._1:()Ljava/lang/Object;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #6                  // Field info/archinnov/achilles/internals/metamodel/AbstractEntityProperty.entityClass:Ljava/lang/Class;
      23: invokevirtual #7                  // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      26: aastore
      27: invokestatic  #36                 // Method info/archinnov/achilles/validation/Validator.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V
      30: return

  private static boolean lambda$validatePrimaryKey$484(info.archinnov.achilles.type.tuples.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method info/archinnov/achilles/type/tuples/Tuple2._2:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static info.archinnov.achilles.type.tuples.Tuple2 lambda$validatePrimaryKey$483(java.lang.Object, info.archinnov.achilles.internals.metamodel.AbstractProperty);
    Code:
       0: aload_1
       1: getfield      #37                 // Field info/archinnov/achilles/internals/metamodel/AbstractProperty.fieldName:Ljava/lang/String;
       4: aload_1
       5: aload_0
       6: invokevirtual #32                 // Method info/archinnov/achilles/internals/metamodel/AbstractProperty.encodeField:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokestatic  #38                 // Method info/archinnov/achilles/type/tuples/Tuple2.of:(Ljava/lang/Object;Ljava/lang/Object;)Linfo/archinnov/achilles/type/tuples/Tuple2;
      12: areturn

  static {};
    Code:
       0: ldc           #40                 // class info/archinnov/achilles/internals/runtime/BeanInternalValidator
       2: invokestatic  #41                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
