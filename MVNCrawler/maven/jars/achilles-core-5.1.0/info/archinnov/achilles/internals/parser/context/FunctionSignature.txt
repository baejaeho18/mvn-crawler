Compiled from "FunctionSignature.java"
public class info.archinnov.achilles.internals.parser.context.FunctionSignature {
  public final java.util.Optional<java.lang.String> keyspace;

  public final com.squareup.javapoet.TypeName sourceClass;

  public final java.lang.String name;

  public final java.lang.String methodName;

  public final com.squareup.javapoet.TypeName sourceReturnType;

  public final java.util.List<com.squareup.javapoet.TypeName> sourceParameterTypes;

  public final info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature returnTypeSignature;

  public final java.util.List<info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature> parameterSignatures;

  public info.archinnov.achilles.internals.parser.context.FunctionSignature(java.util.Optional<java.lang.String>, com.squareup.javapoet.TypeName, java.lang.String, java.lang.String, info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature, java.util.List<info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field keyspace:Ljava/util/Optional;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sourceClass:Lcom/squareup/javapoet/TypeName;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field name:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field methodName:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field returnTypeSignature:Linfo/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature;
      31: aload_0
      32: aload         5
      34: getfield      #7                  // Field info/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature.sourceTypeName:Lcom/squareup/javapoet/TypeName;
      37: putfield      #8                  // Field sourceReturnType:Lcom/squareup/javapoet/TypeName;
      40: aload_0
      41: aload         6
      43: putfield      #9                  // Field parameterSignatures:Ljava/util/List;
      46: aload_0
      47: aload         6
      49: invokeinterface #10,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      54: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      59: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      64: invokestatic  #13                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      67: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      72: checkcast     #15                 // class java/util/List
      75: putfield      #16                 // Field sourceParameterTypes:Ljava/util/List;
      78: return

  public info.archinnov.achilles.internals.parser.context.FunctionSignature(java.util.Optional<java.lang.String>, com.squareup.javapoet.TypeName, java.lang.String, info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature, java.util.List<info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field keyspace:Ljava/util/Optional;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sourceClass:Lcom/squareup/javapoet/TypeName;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field name:Ljava/lang/String;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field methodName:Ljava/lang/String;
      24: aload_0
      25: aload         4
      27: putfield      #6                  // Field returnTypeSignature:Linfo/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature;
      30: aload_0
      31: aload         4
      33: getfield      #7                  // Field info/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature.sourceTypeName:Lcom/squareup/javapoet/TypeName;
      36: putfield      #8                  // Field sourceReturnType:Lcom/squareup/javapoet/TypeName;
      39: aload_0
      40: aload         5
      42: putfield      #9                  // Field parameterSignatures:Ljava/util/List;
      45: aload_0
      46: aload         5
      48: invokeinterface #10,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      53: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      58: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      63: invokestatic  #13                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      66: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      71: checkcast     #15                 // class java/util/List
      74: putfield      #16                 // Field sourceParameterTypes:Ljava/util/List;
      77: return

  public java.lang.String getFunctionName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keyspace:Ljava/util/Optional;
       4: invokevirtual #18                 // Method java/util/Optional.isPresent:()Z
       7: ifeq          48
      10: new           #19                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_0
      18: getfield      #2                  // Field keyspace:Ljava/util/Optional;
      21: invokevirtual #21                 // Method java/util/Optional.get:()Ljava/lang/Object;
      24: checkcast     #22                 // class java/lang/String
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #24                 // String .
      32: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #4                  // Field name:Ljava/lang/String;
      39: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: goto          52
      48: aload_0
      49: getfield      #4                  // Field name:Ljava/lang/String;
      52: areturn

  public com.squareup.javapoet.TypeName returnTypeForFunctionParam();
    Code:
       0: aload_0
       1: getfield      #6                  // Field returnTypeSignature:Linfo/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature;
       4: getfield      #7                  // Field info/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature.sourceTypeName:Lcom/squareup/javapoet/TypeName;
       7: invokestatic  #26                 // Method info/archinnov/achilles/internals/parser/TypeUtils.determineTypeForFunctionParam:(Lcom/squareup/javapoet/TypeName;)Lcom/squareup/javapoet/TypeName;
      10: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #28                 // class info/archinnov/achilles/internals/parser/context/FunctionSignature
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field keyspace:Ljava/util/Optional;
      33: aload_2
      34: getfield      #2                  // Field keyspace:Ljava/util/Optional;
      37: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          95
      43: aload_0
      44: getfield      #4                  // Field name:Ljava/lang/String;
      47: invokevirtual #30                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      50: aload_2
      51: getfield      #4                  // Field name:Ljava/lang/String;
      54: invokevirtual #30                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      57: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          95
      63: aload_0
      64: getfield      #8                  // Field sourceReturnType:Lcom/squareup/javapoet/TypeName;
      67: aload_2
      68: getfield      #8                  // Field sourceReturnType:Lcom/squareup/javapoet/TypeName;
      71: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      74: ifeq          95
      77: aload_0
      78: getfield      #16                 // Field sourceParameterTypes:Ljava/util/List;
      81: aload_2
      82: getfield      #16                 // Field sourceParameterTypes:Ljava/util/List;
      85: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      88: ifeq          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: ireturn

  public int hashCode();
    Code:
       0: iconst_5
       1: anewarray     #31                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field keyspace:Ljava/util/Optional;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #4                  // Field name:Ljava/lang/String;
      17: invokevirtual #30                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #5                  // Field methodName:Ljava/lang/String;
      27: invokevirtual #30                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_3
      33: aload_0
      34: getfield      #8                  // Field sourceReturnType:Lcom/squareup/javapoet/TypeName;
      37: aastore
      38: dup
      39: iconst_4
      40: aload_0
      41: getfield      #16                 // Field sourceParameterTypes:Ljava/util/List;
      44: aastore
      45: invokestatic  #32                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      48: ireturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #33                 // String UDFSignature{
       6: invokespecial #34                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: ldc           #35                 // String keyspace=
      13: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #2                  // Field keyspace:Ljava/util/Optional;
      20: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #37                 // String , sourceClass=
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #3                  // Field sourceClass:Lcom/squareup/javapoet/TypeName;
      34: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: ldc           #38                 // String , methodName=\'
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #5                  // Field methodName:Ljava/lang/String;
      48: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: bipush        39
      53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: aload_1
      58: ldc           #40                 // String , name=\'
      60: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #4                  // Field name:Ljava/lang/String;
      67: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: bipush        39
      72: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: ldc           #41                 // String , returnType=
      79: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #8                  // Field sourceReturnType:Lcom/squareup/javapoet/TypeName;
      86: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_1
      91: ldc           #42                 // String , sourceParameterTypes=
      93: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #16                 // Field sourceParameterTypes:Ljava/util/List;
     100: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_1
     105: bipush        125
     107: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     110: pop
     111: aload_1
     112: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: areturn

  private static com.squareup.javapoet.TypeName lambda$new$386(info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field info/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature.sourceTypeName:Lcom/squareup/javapoet/TypeName;
       4: areturn

  private static com.squareup.javapoet.TypeName lambda$new$385(info.archinnov.achilles.internals.parser.context.FunctionSignature$FunctionParamSignature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field info/archinnov/achilles/internals/parser/context/FunctionSignature$FunctionParamSignature.sourceTypeName:Lcom/squareup/javapoet/TypeName;
       4: areturn
}
