Compiled from "Metrics.scala"
public class ai.chronon.online.Metrics$Name$ {
  public static final ai.chronon.online.Metrics$Name$ MODULE$;

  private static final java.lang.String FreshnessMillis;

  private static final java.lang.String FreshnessMinutes;

  private static final java.lang.String LatencyMillis;

  private static final java.lang.String LatencyMinutes;

  private static final java.lang.String PartitionCount;

  private static final java.lang.String RowCount;

  private static final java.lang.String RequestCount;

  private static final java.lang.String ColumnBeforeCount;

  private static final java.lang.String ColumnAfterCount;

  private static final java.lang.String FailureCount;

  private static final java.lang.String Bytes;

  private static final java.lang.String KeyBytes;

  private static final java.lang.String ValueBytes;

  private static final java.lang.String Exception;

  public static {};
    Code:
       0: new           #2                  // class ai/chronon/online/Metrics$Name$
       3: dup
       4: invokespecial #30                 // Method "<init>":()V
       7: putstatic     #32                 // Field MODULE$:Lai/chronon/online/Metrics$Name$;
      10: ldc           #34                 // String freshness.millis
      12: putstatic     #36                 // Field FreshnessMillis:Ljava/lang/String;
      15: ldc           #38                 // String freshness.minutes
      17: putstatic     #40                 // Field FreshnessMinutes:Ljava/lang/String;
      20: ldc           #42                 // String latency.millis
      22: putstatic     #44                 // Field LatencyMillis:Ljava/lang/String;
      25: ldc           #46                 // String latency.minutes
      27: putstatic     #48                 // Field LatencyMinutes:Ljava/lang/String;
      30: ldc           #50                 // String partition.count
      32: putstatic     #52                 // Field PartitionCount:Ljava/lang/String;
      35: ldc           #54                 // String row.count
      37: putstatic     #56                 // Field RowCount:Ljava/lang/String;
      40: ldc           #58                 // String request.count
      42: putstatic     #60                 // Field RequestCount:Ljava/lang/String;
      45: ldc           #62                 // String column.before.count
      47: putstatic     #64                 // Field ColumnBeforeCount:Ljava/lang/String;
      50: ldc           #66                 // String column.after.count
      52: putstatic     #68                 // Field ColumnAfterCount:Ljava/lang/String;
      55: ldc           #70                 // String failure.ratio
      57: putstatic     #72                 // Field FailureCount:Ljava/lang/String;
      60: ldc           #74                 // String bytes
      62: putstatic     #76                 // Field Bytes:Ljava/lang/String;
      65: ldc           #78                 // String key.bytes
      67: putstatic     #80                 // Field KeyBytes:Ljava/lang/String;
      70: ldc           #82                 // String value.bytes
      72: putstatic     #84                 // Field ValueBytes:Ljava/lang/String;
      75: ldc           #86                 // String exception
      77: putstatic     #88                 // Field Exception:Ljava/lang/String;
      80: return

  public java.lang.String FreshnessMillis();
    Code:
       0: getstatic     #36                 // Field FreshnessMillis:Ljava/lang/String;
       3: areturn

  public java.lang.String FreshnessMinutes();
    Code:
       0: getstatic     #40                 // Field FreshnessMinutes:Ljava/lang/String;
       3: areturn

  public java.lang.String LatencyMillis();
    Code:
       0: getstatic     #44                 // Field LatencyMillis:Ljava/lang/String;
       3: areturn

  public java.lang.String LatencyMinutes();
    Code:
       0: getstatic     #48                 // Field LatencyMinutes:Ljava/lang/String;
       3: areturn

  public java.lang.String PartitionCount();
    Code:
       0: getstatic     #52                 // Field PartitionCount:Ljava/lang/String;
       3: areturn

  public java.lang.String RowCount();
    Code:
       0: getstatic     #56                 // Field RowCount:Ljava/lang/String;
       3: areturn

  public java.lang.String RequestCount();
    Code:
       0: getstatic     #60                 // Field RequestCount:Ljava/lang/String;
       3: areturn

  public java.lang.String ColumnBeforeCount();
    Code:
       0: getstatic     #64                 // Field ColumnBeforeCount:Ljava/lang/String;
       3: areturn

  public java.lang.String ColumnAfterCount();
    Code:
       0: getstatic     #68                 // Field ColumnAfterCount:Ljava/lang/String;
       3: areturn

  public java.lang.String FailureCount();
    Code:
       0: getstatic     #72                 // Field FailureCount:Ljava/lang/String;
       3: areturn

  public java.lang.String Bytes();
    Code:
       0: getstatic     #76                 // Field Bytes:Ljava/lang/String;
       3: areturn

  public java.lang.String KeyBytes();
    Code:
       0: getstatic     #80                 // Field KeyBytes:Ljava/lang/String;
       3: areturn

  public java.lang.String ValueBytes();
    Code:
       0: getstatic     #84                 // Field ValueBytes:Ljava/lang/String;
       3: areturn

  public java.lang.String Exception();
    Code:
       0: getstatic     #88                 // Field Exception:Ljava/lang/String;
       3: areturn

  public ai.chronon.online.Metrics$Name$();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method java/lang/Object."<init>":()V
       4: return
}
