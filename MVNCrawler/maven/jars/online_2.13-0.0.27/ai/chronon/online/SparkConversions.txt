Compiled from "SparkConversions.scala"
public final class ai.chronon.online.SparkConversions {
  public static scala.Function1<java.lang.Object, java.lang.Object[]> toSparkRow$default$3();
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: invokevirtual #19                 // Method ai/chronon/online/SparkConversions$.toSparkRow$default$3:()Lscala/Function1;
       6: areturn

  public static java.lang.Object toSparkRow(java.lang.Object, ai.chronon.api.DataType, scala.Function1<java.lang.Object, java.lang.Object[]>);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #27                 // Method ai/chronon/online/SparkConversions$.toSparkRow:(Ljava/lang/Object;Lai/chronon/api/DataType;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public static org.apache.spark.sql.types.StructType fromChrononSchema(ai.chronon.api.StructType);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: invokevirtual #35                 // Method ai/chronon/online/SparkConversions$.fromChrononSchema:(Lai/chronon/api/StructType;)Lorg/apache/spark/sql/types/StructType;
       7: areturn

  public static org.apache.spark.sql.types.StructType fromChrononSchema(scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, ai.chronon.api.DataType>>);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: invokevirtual #40                 // Method ai/chronon/online/SparkConversions$.fromChrononSchema:(Lscala/collection/immutable/Seq;)Lorg/apache/spark/sql/types/StructType;
       7: areturn

  public static scala.Tuple2<java.lang.String, ai.chronon.api.DataType>[] toChrononSchema(org.apache.spark.sql.types.StructType);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: invokevirtual #46                 // Method ai/chronon/online/SparkConversions$.toChrononSchema:(Lorg/apache/spark/sql/types/StructType;)[Lscala/Tuple2;
       7: areturn

  public static org.apache.spark.sql.types.DataType fromChrononType(ai.chronon.api.DataType);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: invokevirtual #52                 // Method ai/chronon/online/SparkConversions$.fromChrononType:(Lai/chronon/api/DataType;)Lorg/apache/spark/sql/types/DataType;
       7: areturn

  public static ai.chronon.api.DataType toChrononType(java.lang.String, org.apache.spark.sql.types.DataType);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: aload_1
       5: invokevirtual #57                 // Method ai/chronon/online/SparkConversions$.toChrononType:(Ljava/lang/String;Lorg/apache/spark/sql/types/DataType;)Lai/chronon/api/DataType;
       8: areturn

  public static int toChrononRow$default$4();
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: invokevirtual #63                 // Method ai/chronon/online/SparkConversions$.toChrononRow$default$4:()I
       6: ireturn

  public static int toChrononRow$default$3();
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: invokevirtual #66                 // Method ai/chronon/online/SparkConversions$.toChrononRow$default$3:()I
       6: ireturn

  public static ai.chronon.online.RowWrapper toChrononRow(org.apache.spark.sql.Row, int, int, int);
    Code:
       0: getstatic     #17                 // Field ai/chronon/online/SparkConversions$.MODULE$:Lai/chronon/online/SparkConversions$;
       3: aload_0
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #74                 // Method ai/chronon/online/SparkConversions$.toChrononRow:(Lorg/apache/spark/sql/Row;III)Lai/chronon/online/RowWrapper;
      10: areturn
}
