Compiled from "DefaultNodeCache.java"
public class org.eclipse.milo.opcua.sdk.client.DefaultNodeCache implements org.eclipse.milo.opcua.sdk.client.api.NodeCache {
  private final org.slf4j.Logger logger;

  private volatile long expireAfterNanos;

  private volatile long maximumSize;

  private volatile com.google.common.cache.Cache<org.eclipse.milo.opcua.stack.core.types.builtin.NodeId, java.util.Map<org.eclipse.milo.opcua.stack.core.AttributeId, org.eclipse.milo.opcua.stack.core.types.builtin.DataValue>> cache;

  public org.eclipse.milo.opcua.sdk.client.DefaultNodeCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field logger:Lorg/slf4j/Logger;
      15: aload_0
      16: ldc2_w        #5                  // long 2l
      19: invokestatic  #7                  // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      22: invokevirtual #8                  // Method java/time/Duration.toNanos:()J
      25: putfield      #9                  // Field expireAfterNanos:J
      28: aload_0
      29: ldc2_w        #10                 // long 1024l
      32: putfield      #12                 // Field maximumSize:J
      35: aload_0
      36: aload_0
      37: invokespecial #13                 // Method buildCache:()Lcom/google/common/cache/Cache;
      40: putfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
      43: return

  public java.util.Optional<org.eclipse.milo.opcua.stack.core.types.builtin.DataValue> getAttribute(org.eclipse.milo.opcua.stack.core.types.builtin.NodeId, org.eclipse.milo.opcua.stack.core.AttributeId);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod com/google/common/cache/Cache.getIfPresent:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class java/util/Map
      13: astore_3
      14: aload_3
      15: ifnonnull     24
      18: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      21: goto          34
      24: aload_3
      25: aload_2
      26: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: invokestatic  #19                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      34: areturn
      35: astore        4
      37: invokestatic  #17                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      40: areturn
    Exception table:
       from    to  target type
          14    34    35   Class java/lang/ClassCastException

  public void putAttribute(org.eclipse.milo.opcua.stack.core.types.builtin.NodeId, org.eclipse.milo.opcua.stack.core.AttributeId, org.eclipse.milo.opcua.stack.core.types.builtin.DataValue);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
       4: aload_1
       5: invokedynamic #21,  0             // InvokeDynamic #0:call:()Ljava/util/concurrent/Callable;
      10: invokeinterface #22,  3           // InterfaceMethod com/google/common/cache/Cache.get:(Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Object;
      15: checkcast     #16                 // class java/util/Map
      18: astore        4
      20: aload         4
      22: aload_2
      23: aload_3
      24: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: goto          53
      33: astore        4
      35: aload_0
      36: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      39: ldc           #25                 // String Error loading value: {}
      41: aload         4
      43: invokevirtual #26                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;
      46: aload         4
      48: invokeinterface #27,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      53: return
    Exception table:
       from    to  target type
           0    30    33   Class java/util/concurrent/ExecutionException

  public void invalidate(org.eclipse.milo.opcua.stack.core.types.builtin.NodeId);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod com/google/common/cache/Cache.invalidate:(Ljava/lang/Object;)V
      10: return

  public void invalidate(org.eclipse.milo.opcua.stack.core.types.builtin.NodeId, org.eclipse.milo.opcua.stack.core.AttributeId);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod com/google/common/cache/Cache.getIfPresent:(Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #19                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      13: aload_2
      14: invokedynamic #29,  0             // InvokeDynamic #1:accept:(Lorg/eclipse/milo/opcua/stack/core/AttributeId;)Ljava/util/function/Consumer;
      19: invokevirtual #30                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      22: return

  public void invalidateAll();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
       4: invokeinterface #31,  1           // InterfaceMethod com/google/common/cache/Cache.invalidateAll:()V
       9: return

  public com.google.common.cache.CacheStats getStats();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
       4: invokeinterface #32,  1           // InterfaceMethod com/google/common/cache/Cache.stats:()Lcom/google/common/cache/CacheStats;
       9: areturn

  public synchronized void setExpireAfter(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #33                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: putfield      #9                  // Field expireAfterNanos:J
       9: aload_0
      10: invokespecial #13                 // Method buildCache:()Lcom/google/common/cache/Cache;
      13: astore        4
      15: aload         4
      17: aload_0
      18: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
      21: invokeinterface #34,  1           // InterfaceMethod com/google/common/cache/Cache.asMap:()Ljava/util/concurrent/ConcurrentMap;
      26: invokeinterface #35,  2           // InterfaceMethod com/google/common/cache/Cache.putAll:(Ljava/util/Map;)V
      31: aload_0
      32: aload         4
      34: putfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
      37: return

  public synchronized void setMaximumSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #12                 // Field maximumSize:J
       5: aload_0
       6: invokespecial #13                 // Method buildCache:()Lcom/google/common/cache/Cache;
       9: astore_3
      10: aload_3
      11: aload_0
      12: getfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
      15: invokeinterface #34,  1           // InterfaceMethod com/google/common/cache/Cache.asMap:()Ljava/util/concurrent/ConcurrentMap;
      20: invokeinterface #35,  2           // InterfaceMethod com/google/common/cache/Cache.putAll:(Ljava/util/Map;)V
      25: aload_0
      26: aload_3
      27: putfield      #14                 // Field cache:Lcom/google/common/cache/Cache;
      30: return

  private com.google.common.cache.Cache<org.eclipse.milo.opcua.stack.core.types.builtin.NodeId, java.util.Map<org.eclipse.milo.opcua.stack.core.AttributeId, org.eclipse.milo.opcua.stack.core.types.builtin.DataValue>> buildCache();
    Code:
       0: invokestatic  #36                 // Method com/google/common/cache/CacheBuilder.newBuilder:()Lcom/google/common/cache/CacheBuilder;
       3: aload_0
       4: getfield      #9                  // Field expireAfterNanos:J
       7: getstatic     #37                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokevirtual #38                 // Method com/google/common/cache/CacheBuilder.expireAfterWrite:(JLjava/util/concurrent/TimeUnit;)Lcom/google/common/cache/CacheBuilder;
      13: aload_0
      14: getfield      #12                 // Field maximumSize:J
      17: invokevirtual #39                 // Method com/google/common/cache/CacheBuilder.maximumSize:(J)Lcom/google/common/cache/CacheBuilder;
      20: invokevirtual #40                 // Method com/google/common/cache/CacheBuilder.recordStats:()Lcom/google/common/cache/CacheBuilder;
      23: invokevirtual #41                 // Method com/google/common/cache/CacheBuilder.build:()Lcom/google/common/cache/Cache;
      26: areturn

  private static void lambda$invalidate$1(org.eclipse.milo.opcua.stack.core.AttributeId, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #42,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #43                 // class org/eclipse/milo/opcua/stack/core/types/builtin/DataValue
      10: pop
      11: return

  private static java.util.Map lambda$putAttribute$0() throws java.lang.Exception;
    Code:
       0: ldc           #44                 // class org/eclipse/milo/opcua/stack/core/AttributeId
       2: invokestatic  #45                 // Method com/google/common/collect/Maps.newEnumMap:(Ljava/lang/Class;)Ljava/util/EnumMap;
       5: invokestatic  #46                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
       8: areturn
}
