Compiled from "MockOAuth2ServerApplicationListener.java"
public class no.nav.security.token.support.spring.test.MockOAuth2ServerApplicationListener implements org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationPreparedEvent> {
  private final org.slf4j.Logger log;

  static final java.lang.String PROPERTY_PREFIX;

  private static final java.lang.String PORT_PROPERTY;

  private static final java.lang.String RANDOM_PORT_PROPERTY;

  static final boolean $assertionsDisabled;

  public no.nav.security.token.support.spring.test.MockOAuth2ServerApplicationListener();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // class no/nav/security/token/support/spring/test/MockOAuth2ServerApplicationListener
       7: invokestatic  #11                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #17                 // Field log:Lorg/slf4j/Logger;
      13: return

  public void onApplicationEvent(org.springframework.boot.context.event.ApplicationPreparedEvent);
    Code:
       0: aload_0
       1: getfield      #17                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #21                 // String received ApplicationPreparedEvent, register random port with environment if not set.
       6: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #29                 // Method registerPort:(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
      16: return

  private void registerPort(org.springframework.boot.context.event.ApplicationPreparedEvent);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationPreparedEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: invokeinterface #39,  1           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.getEnvironment:()Lorg/springframework/core/env/ConfigurableEnvironment;
       9: astore_2
      10: aload_2
      11: ldc           #45                 // String mock-oauth2-server.port
      13: ldc           #47                 // class java/lang/Integer
      15: invokeinterface #49,  3           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      20: checkcast     #47                 // class java/lang/Integer
      23: astore_3
      24: aload_0
      25: aload_3
      26: invokevirtual #55                 // Method isRandomPort:(Ljava/lang/Integer;)Z
      29: ifeq          121
      32: aload_0
      33: invokevirtual #59                 // Method findAvailableTcpPort:()I
      36: istore        4
      38: aload_2
      39: invokeinterface #63,  1           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getPropertySources:()Lorg/springframework/core/env/MutablePropertySources;
      44: astore        5
      46: aload_0
      47: aload         5
      49: invokevirtual #67                 // Method addPropertySource:(Lorg/springframework/core/env/MutablePropertySources;)V
      52: aload         5
      54: ldc           #71                 // String mock-oauth2-server
      56: invokevirtual #73                 // Method org/springframework/core/env/MutablePropertySources.get:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      59: invokestatic  #79                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #85                 // class org/springframework/core/env/MapPropertySource
      65: invokevirtual #87                 // Method org/springframework/core/env/MapPropertySource.getSource:()Ljava/lang/Object;
      68: checkcast     #91                 // class java/util/Map
      71: astore        6
      73: aload         6
      75: ldc           #45                 // String mock-oauth2-server.port
      77: iload         4
      79: invokestatic  #93                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: invokeinterface #97,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload         6
      90: ldc           #101                // String mock-oauth2-server.random-port
      92: iconst_1
      93: invokestatic  #103                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      96: invokeinterface #97,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload_0
     103: getfield      #17                 // Field log:Lorg/slf4j/Logger;
     106: iload         4
     108: invokedynamic #108,  0            // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     113: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     118: goto          133
     121: aload_0
     122: getfield      #17                 // Field log:Lorg/slf4j/Logger;
     125: ldc           #112                // String port provided explicitly from annotation ({}), nothing to register.
     127: aload_3
     128: invokeinterface #114,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     133: return

  private int findAvailableTcpPort();
    Code:
       0: new           #117                // class java/net/ServerSocket
       3: dup
       4: iconst_0
       5: invokespecial #119                // Method java/net/ServerSocket."<init>":(I)V
       8: astore_1
       9: aload_1
      10: invokevirtual #122                // Method java/net/ServerSocket.getLocalPort:()I
      13: istore_2
      14: aload_1
      15: invokevirtual #125                // Method java/net/ServerSocket.close:()V
      18: iload_2
      19: ireturn
      20: astore_2
      21: aload_1
      22: invokevirtual #125                // Method java/net/ServerSocket.close:()V
      25: goto          34
      28: astore_3
      29: aload_2
      30: aload_3
      31: invokevirtual #130                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      34: aload_2
      35: athrow
      36: astore_1
      37: new           #136                // class java/lang/IllegalStateException
      40: dup
      41: ldc           #138                // String Fant ikke random port å starte på
      43: aload_1
      44: invokespecial #140                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           9    14    20   Class java/lang/Throwable
          21    25    28   Class java/lang/Throwable
           0    18    36   Class java/io/IOException
          20    36    36   Class java/io/IOException

  private boolean isRandomPort(java.lang.Integer);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #143                // Method java/lang/Integer.intValue:()I
       8: ifgt          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private void addPropertySource(org.springframework.core.env.MutablePropertySources);
    Code:
       0: aload_1
       1: ldc           #71                 // String mock-oauth2-server
       3: invokevirtual #146                // Method org/springframework/core/env/MutablePropertySources.contains:(Ljava/lang/String;)Z
       6: ifne          32
       9: aload_1
      10: new           #85                 // class org/springframework/core/env/MapPropertySource
      13: dup
      14: ldc           #71                 // String mock-oauth2-server
      16: new           #150                // class java/util/HashMap
      19: dup
      20: invokespecial #152                // Method java/util/HashMap."<init>":()V
      23: invokespecial #153                // Method org/springframework/core/env/MapPropertySource."<init>":(Ljava/lang/String;Ljava/util/Map;)V
      26: invokevirtual #156                // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
      29: goto          62
      32: aload_1
      33: ldc           #71                 // String mock-oauth2-server
      35: invokevirtual #160                // Method org/springframework/core/env/MutablePropertySources.remove:(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;
      38: astore_2
      39: getstatic     #163                // Field $assertionsDisabled:Z
      42: ifne          57
      45: aload_2
      46: ifnonnull     57
      49: new           #167                // class java/lang/AssertionError
      52: dup
      53: invokespecial #169                // Method java/lang/AssertionError."<init>":()V
      56: athrow
      57: aload_1
      58: aload_2
      59: invokevirtual #156                // Method org/springframework/core/env/MutablePropertySources.addFirst:(Lorg/springframework/core/env/PropertySource;)V
      62: return

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
       5: invokevirtual #170                // Method onApplicationEvent:(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
       8: return

  static {};
    Code:
       0: ldc           #3                  // class no/nav/security/token/support/spring/test/MockOAuth2ServerApplicationListener
       2: invokevirtual #173                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #163                // Field $assertionsDisabled:Z
      16: return
}
