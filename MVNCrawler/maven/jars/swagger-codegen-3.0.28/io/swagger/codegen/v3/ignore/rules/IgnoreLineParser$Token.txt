Compiled from "IgnoreLineParser.java"
final class io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token extends java.lang.Enum<io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token> {
  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token MATCH_ALL;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token MATCH_ANY;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token ESCAPED_EXCLAMATION;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token ESCAPED_SPACE;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token PATH_DELIM;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token NEGATE;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token TEXT;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token DIRECTORY_MARKER;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token ROOTED_MARKER;

  public static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token COMMENT;

  private java.lang.String pattern;

  private static final io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token[] $VALUES;

  public static io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
       3: invokevirtual #3                  // Method "[Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;"
       9: areturn

  public static io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
       9: areturn

  private io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #1                  // Field pattern:Ljava/lang/String;
      11: return

  public java.lang.String getPattern();
    Code:
       0: aload_0
       1: getfield      #1                  // Field pattern:Ljava/lang/String;
       4: areturn

  static java.lang.String access$000(io.swagger.codegen.v3.ignore.rules.IgnoreLineParser$Token);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pattern:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
       3: dup
       4: ldc           #8                  // String MATCH_ALL
       6: iconst_0
       7: ldc           #9                  // String **
       9: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #11                 // Field MATCH_ALL:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
      15: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
      18: dup
      19: ldc           #12                 // String MATCH_ANY
      21: iconst_1
      22: ldc           #13                 // String *
      24: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #14                 // Field MATCH_ANY:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
      30: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
      33: dup
      34: ldc           #15                 // String ESCAPED_EXCLAMATION
      36: iconst_2
      37: ldc           #16                 // String \\!
      39: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #17                 // Field ESCAPED_EXCLAMATION:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
      45: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
      48: dup
      49: ldc           #18                 // String ESCAPED_SPACE
      51: iconst_3
      52: ldc           #19                 // String \\
      54: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #20                 // Field ESCAPED_SPACE:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
      60: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
      63: dup
      64: ldc           #21                 // String PATH_DELIM
      66: iconst_4
      67: ldc           #22                 // String /
      69: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: putstatic     #23                 // Field PATH_DELIM:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
      75: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
      78: dup
      79: ldc           #24                 // String NEGATE
      81: iconst_5
      82: ldc           #25                 // String !
      84: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      87: putstatic     #26                 // Field NEGATE:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
      90: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
      93: dup
      94: ldc           #27                 // String TEXT
      96: bipush        6
      98: aconst_null
      99: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     102: putstatic     #28                 // Field TEXT:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     105: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
     108: dup
     109: ldc           #29                 // String DIRECTORY_MARKER
     111: bipush        7
     113: ldc           #22                 // String /
     115: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     118: putstatic     #30                 // Field DIRECTORY_MARKER:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     121: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
     124: dup
     125: ldc           #31                 // String ROOTED_MARKER
     127: bipush        8
     129: ldc           #22                 // String /
     131: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     134: putstatic     #32                 // Field ROOTED_MARKER:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     137: new           #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
     140: dup
     141: ldc           #33                 // String COMMENT
     143: bipush        9
     145: aconst_null
     146: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
     149: putstatic     #34                 // Field COMMENT:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     152: bipush        10
     154: anewarray     #5                  // class io/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token
     157: dup
     158: iconst_0
     159: getstatic     #11                 // Field MATCH_ALL:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     162: aastore
     163: dup
     164: iconst_1
     165: getstatic     #14                 // Field MATCH_ANY:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     168: aastore
     169: dup
     170: iconst_2
     171: getstatic     #17                 // Field ESCAPED_EXCLAMATION:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     174: aastore
     175: dup
     176: iconst_3
     177: getstatic     #20                 // Field ESCAPED_SPACE:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     180: aastore
     181: dup
     182: iconst_4
     183: getstatic     #23                 // Field PATH_DELIM:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     186: aastore
     187: dup
     188: iconst_5
     189: getstatic     #26                 // Field NEGATE:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     192: aastore
     193: dup
     194: bipush        6
     196: getstatic     #28                 // Field TEXT:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     199: aastore
     200: dup
     201: bipush        7
     203: getstatic     #30                 // Field DIRECTORY_MARKER:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     206: aastore
     207: dup
     208: bipush        8
     210: getstatic     #32                 // Field ROOTED_MARKER:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     213: aastore
     214: dup
     215: bipush        9
     217: getstatic     #34                 // Field COMMENT:Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     220: aastore
     221: putstatic     #2                  // Field $VALUES:[Lio/swagger/codegen/v3/ignore/rules/IgnoreLineParser$Token;
     224: return
}
