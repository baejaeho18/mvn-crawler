Compiled from "PhysicsVehicle.java"
public class com.jme3.bullet.objects.PhysicsVehicle extends com.jme3.bullet.objects.PhysicsRigidBody {
  protected long vehicleId;

  protected long rayCasterId;

  protected com.jme3.bullet.objects.infos.VehicleTuning tuning;

  protected java.util.ArrayList<com.jme3.bullet.objects.VehicleWheel> wheels;

  protected com.jme3.bullet.PhysicsSpace physicsSpace;

  public com.jme3.bullet.objects.PhysicsVehicle();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field vehicleId:J
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field rayCasterId:J
      14: aload_0
      15: new           #4                  // class com/jme3/bullet/objects/infos/VehicleTuning
      18: dup
      19: invokespecial #5                  // Method com/jme3/bullet/objects/infos/VehicleTuning."<init>":()V
      22: putfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      25: aload_0
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      33: putfield      #9                  // Field wheels:Ljava/util/ArrayList;
      36: return

  public com.jme3.bullet.objects.PhysicsVehicle(com.jme3.bullet.collision.shapes.CollisionShape);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;)V
       5: aload_0
       6: lconst_0
       7: putfield      #2                  // Field vehicleId:J
      10: aload_0
      11: lconst_0
      12: putfield      #3                  // Field rayCasterId:J
      15: aload_0
      16: new           #4                  // class com/jme3/bullet/objects/infos/VehicleTuning
      19: dup
      20: invokespecial #5                  // Method com/jme3/bullet/objects/infos/VehicleTuning."<init>":()V
      23: putfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      26: aload_0
      27: new           #7                  // class java/util/ArrayList
      30: dup
      31: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #9                  // Field wheels:Ljava/util/ArrayList;
      37: return

  public com.jme3.bullet.objects.PhysicsVehicle(com.jme3.bullet.collision.shapes.CollisionShape, float);
    Code:
       0: aload_0
       1: aload_1
       2: fload_2
       3: invokespecial #11                 // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
       6: aload_0
       7: lconst_0
       8: putfield      #2                  // Field vehicleId:J
      11: aload_0
      12: lconst_0
      13: putfield      #3                  // Field rayCasterId:J
      16: aload_0
      17: new           #4                  // class com/jme3/bullet/objects/infos/VehicleTuning
      20: dup
      21: invokespecial #5                  // Method com/jme3/bullet/objects/infos/VehicleTuning."<init>":()V
      24: putfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      27: aload_0
      28: new           #7                  // class java/util/ArrayList
      31: dup
      32: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #9                  // Field wheels:Ljava/util/ArrayList;
      38: return

  public void updateWheels();
    Code:
       0: aload_0
       1: getfield      #2                  // Field vehicleId:J
       4: lconst_0
       5: lcmp
       6: ifeq          52
       9: iconst_0
      10: istore_1
      11: iload_1
      12: aload_0
      13: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
      16: invokevirtual #12                 // Method java/util/ArrayList.size:()I
      19: if_icmpge     52
      22: aload_0
      23: aload_0
      24: getfield      #2                  // Field vehicleId:J
      27: iload_1
      28: iconst_1
      29: invokespecial #13                 // Method updateWheelTransform:(JIZ)V
      32: aload_0
      33: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
      36: iload_1
      37: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      40: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      43: invokevirtual #16                 // Method com/jme3/bullet/objects/VehicleWheel.updatePhysicsState:()V
      46: iinc          1, 1
      49: goto          11
      52: return

  private native void updateWheelTransform(long, int, boolean);

  public void applyWheelTransforms();
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: ifnull        40
       7: iconst_0
       8: istore_1
       9: iload_1
      10: aload_0
      11: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
      14: invokevirtual #12                 // Method java/util/ArrayList.size:()I
      17: if_icmpge     40
      20: aload_0
      21: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
      24: iload_1
      25: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      28: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      31: invokevirtual #17                 // Method com/jme3/bullet/objects/VehicleWheel.applyWheelTransform:()V
      34: iinc          1, 1
      37: goto          9
      40: return

  protected void postRebuild();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method com/jme3/bullet/objects/PhysicsRigidBody.postRebuild:()V
       4: aload_0
       5: getfield      #19                 // Field motionState:Lcom/jme3/bullet/objects/infos/RigidBodyMotionState;
       8: aload_0
       9: invokevirtual #20                 // Method com/jme3/bullet/objects/infos/RigidBodyMotionState.setVehicle:(Lcom/jme3/bullet/objects/PhysicsVehicle;)V
      12: aload_0
      13: aload_0
      14: getfield      #21                 // Field physicsSpace:Lcom/jme3/bullet/PhysicsSpace;
      17: invokevirtual #22                 // Method createVehicle:(Lcom/jme3/bullet/PhysicsSpace;)V
      20: return

  public void createVehicle(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field physicsSpace:Lcom/jme3/bullet/PhysicsSpace;
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_1
      11: invokevirtual #23                 // Method com/jme3/bullet/PhysicsSpace.getSpaceId:()J
      14: lconst_0
      15: lcmp
      16: ifne          29
      19: new           #24                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #25                 // String Physics space is not initialized!
      25: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: getfield      #3                  // Field rayCasterId:J
      33: lconst_0
      34: lcmp
      35: ifeq          100
      38: aload_0
      39: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokestatic  #29                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      48: getstatic     #30                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      51: ldc           #31                 // String Clearing RayCaster {0}
      53: aload_0
      54: getfield      #3                  // Field rayCasterId:J
      57: invokestatic  #32                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      60: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      63: aload_0
      64: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      67: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      70: invokestatic  #29                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      73: getstatic     #30                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      76: ldc           #34                 // String Clearing Vehicle {0}
      78: aload_0
      79: getfield      #2                  // Field vehicleId:J
      82: invokestatic  #32                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      85: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      88: aload_0
      89: aload_0
      90: getfield      #3                  // Field rayCasterId:J
      93: aload_0
      94: getfield      #2                  // Field vehicleId:J
      97: invokespecial #35                 // Method finalizeNative:(JJ)V
     100: aload_0
     101: aload_0
     102: aload_0
     103: getfield      #36                 // Field objectId:J
     106: aload_1
     107: invokevirtual #23                 // Method com/jme3/bullet/PhysicsSpace.getSpaceId:()J
     110: invokespecial #37                 // Method createVehicleRaycaster:(JJ)J
     113: putfield      #3                  // Field rayCasterId:J
     116: aload_0
     117: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     120: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     123: invokestatic  #29                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     126: getstatic     #30                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     129: ldc           #38                 // String Created RayCaster {0}
     131: aload_0
     132: getfield      #3                  // Field rayCasterId:J
     135: invokestatic  #32                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     138: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     141: aload_0
     142: aload_0
     143: aload_0
     144: getfield      #36                 // Field objectId:J
     147: aload_0
     148: getfield      #3                  // Field rayCasterId:J
     151: invokespecial #39                 // Method createRaycastVehicle:(JJ)J
     154: putfield      #2                  // Field vehicleId:J
     157: aload_0
     158: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     161: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     164: invokestatic  #29                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     167: getstatic     #30                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     170: ldc           #40                 // String Created Vehicle {0}
     172: aload_0
     173: getfield      #2                  // Field vehicleId:J
     176: invokestatic  #32                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     179: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     182: aload_0
     183: aload_0
     184: getfield      #2                  // Field vehicleId:J
     187: iconst_0
     188: iconst_1
     189: iconst_2
     190: invokespecial #41                 // Method setCoordinateSystem:(JIII)V
     193: aload_0
     194: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
     197: invokevirtual #42                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     200: astore_2
     201: aload_2
     202: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     207: ifeq          267
     210: aload_2
     211: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     216: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
     219: astore_3
     220: aload_3
     221: aload_0
     222: getfield      #2                  // Field vehicleId:J
     225: aload_0
     226: aload_0
     227: getfield      #2                  // Field vehicleId:J
     230: aload_3
     231: invokevirtual #45                 // Method com/jme3/bullet/objects/VehicleWheel.getLocation:()Lcom/jme3/math/Vector3f;
     234: aload_3
     235: invokevirtual #46                 // Method com/jme3/bullet/objects/VehicleWheel.getDirection:()Lcom/jme3/math/Vector3f;
     238: aload_3
     239: invokevirtual #47                 // Method com/jme3/bullet/objects/VehicleWheel.getAxle:()Lcom/jme3/math/Vector3f;
     242: aload_3
     243: invokevirtual #48                 // Method com/jme3/bullet/objects/VehicleWheel.getRestLength:()F
     246: aload_3
     247: invokevirtual #49                 // Method com/jme3/bullet/objects/VehicleWheel.getRadius:()F
     250: aload_0
     251: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
     254: aload_3
     255: invokevirtual #50                 // Method com/jme3/bullet/objects/VehicleWheel.isFrontWheel:()Z
     258: invokespecial #51                 // Method addWheel:(JLcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;FFLcom/jme3/bullet/objects/infos/VehicleTuning;Z)I
     261: invokevirtual #52                 // Method com/jme3/bullet/objects/VehicleWheel.setVehicleId:(JI)V
     264: goto          201
     267: return

  private native long createVehicleRaycaster(long, long);

  private native long createRaycastVehicle(long, long);

  private native void setCoordinateSystem(long, int, int, int);

  private native int addWheel(long, com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.math.Vector3f, float, float, com.jme3.bullet.objects.infos.VehicleTuning, boolean);

  public com.jme3.bullet.objects.VehicleWheel addWheel(com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.math.Vector3f, float, float, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: fload         4
       7: fload         5
       9: iload         6
      11: invokevirtual #53                 // Method addWheel:(Lcom/jme3/scene/Spatial;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;FFZ)Lcom/jme3/bullet/objects/VehicleWheel;
      14: areturn

  public com.jme3.bullet.objects.VehicleWheel addWheel(com.jme3.scene.Spatial, com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.math.Vector3f, float, float, boolean);
    Code:
       0: aconst_null
       1: astore        8
       3: aload_1
       4: ifnonnull     29
       7: new           #15                 // class com/jme3/bullet/objects/VehicleWheel
      10: dup
      11: aload_2
      12: aload_3
      13: aload         4
      15: fload         5
      17: fload         6
      19: iload         7
      21: invokespecial #54                 // Method com/jme3/bullet/objects/VehicleWheel."<init>":(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;FFZ)V
      24: astore        8
      26: goto          49
      29: new           #15                 // class com/jme3/bullet/objects/VehicleWheel
      32: dup
      33: aload_1
      34: aload_2
      35: aload_3
      36: aload         4
      38: fload         5
      40: fload         6
      42: iload         7
      44: invokespecial #55                 // Method com/jme3/bullet/objects/VehicleWheel."<init>":(Lcom/jme3/scene/Spatial;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;FFZ)V
      47: astore        8
      49: aload         8
      51: aload_0
      52: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      55: getfield      #56                 // Field com/jme3/bullet/objects/infos/VehicleTuning.frictionSlip:F
      58: invokevirtual #57                 // Method com/jme3/bullet/objects/VehicleWheel.setFrictionSlip:(F)V
      61: aload         8
      63: aload_0
      64: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      67: getfield      #58                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionTravelCm:F
      70: invokevirtual #59                 // Method com/jme3/bullet/objects/VehicleWheel.setMaxSuspensionTravelCm:(F)V
      73: aload         8
      75: aload_0
      76: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      79: getfield      #60                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionStiffness:F
      82: invokevirtual #61                 // Method com/jme3/bullet/objects/VehicleWheel.setSuspensionStiffness:(F)V
      85: aload         8
      87: aload_0
      88: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      91: getfield      #62                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionCompression:F
      94: invokevirtual #63                 // Method com/jme3/bullet/objects/VehicleWheel.setWheelsDampingCompression:(F)V
      97: aload         8
      99: aload_0
     100: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
     103: getfield      #64                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionDamping:F
     106: invokevirtual #65                 // Method com/jme3/bullet/objects/VehicleWheel.setWheelsDampingRelaxation:(F)V
     109: aload         8
     111: aload_0
     112: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
     115: getfield      #66                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionForce:F
     118: invokevirtual #67                 // Method com/jme3/bullet/objects/VehicleWheel.setMaxSuspensionForce:(F)V
     121: aload_0
     122: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
     125: aload         8
     127: invokevirtual #68                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     130: pop
     131: aload_0
     132: getfield      #2                  // Field vehicleId:J
     135: lconst_0
     136: lcmp
     137: ifeq          191
     140: aload         8
     142: aload_0
     143: getfield      #2                  // Field vehicleId:J
     146: aload_0
     147: aload_0
     148: getfield      #2                  // Field vehicleId:J
     151: aload         8
     153: invokevirtual #45                 // Method com/jme3/bullet/objects/VehicleWheel.getLocation:()Lcom/jme3/math/Vector3f;
     156: aload         8
     158: invokevirtual #46                 // Method com/jme3/bullet/objects/VehicleWheel.getDirection:()Lcom/jme3/math/Vector3f;
     161: aload         8
     163: invokevirtual #47                 // Method com/jme3/bullet/objects/VehicleWheel.getAxle:()Lcom/jme3/math/Vector3f;
     166: aload         8
     168: invokevirtual #48                 // Method com/jme3/bullet/objects/VehicleWheel.getRestLength:()F
     171: aload         8
     173: invokevirtual #49                 // Method com/jme3/bullet/objects/VehicleWheel.getRadius:()F
     176: aload_0
     177: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
     180: aload         8
     182: invokevirtual #50                 // Method com/jme3/bullet/objects/VehicleWheel.isFrontWheel:()Z
     185: invokespecial #51                 // Method addWheel:(JLcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;FFLcom/jme3/bullet/objects/infos/VehicleTuning;Z)I
     188: invokevirtual #52                 // Method com/jme3/bullet/objects/VehicleWheel.setVehicleId:(JI)V
     191: aload         8
     193: areturn

  public void removeWheel(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #69                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: invokevirtual #70                 // Method rebuildRigidBody:()V
      13: return

  public com.jme3.bullet.objects.VehicleWheel getWheel(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: areturn

  public int getNumWheels();
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: invokevirtual #12                 // Method java/util/ArrayList.size:()I
       7: ireturn

  public float getFrictionSlip();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: getfield      #56                 // Field com/jme3/bullet/objects/infos/VehicleTuning.frictionSlip:F
       7: freturn

  public void setFrictionSlip(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: fload_1
       5: putfield      #56                 // Field com/jme3/bullet/objects/infos/VehicleTuning.frictionSlip:F
       8: return

  public void setFrictionSlip(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #57                 // Method com/jme3/bullet/objects/VehicleWheel.setFrictionSlip:(F)V
      15: return

  public void setRollInfluence(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #71                 // Method com/jme3/bullet/objects/VehicleWheel.setRollInfluence:(F)V
      15: return

  public float getMaxSuspensionTravelCm();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: getfield      #58                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionTravelCm:F
       7: freturn

  public void setMaxSuspensionTravelCm(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: fload_1
       5: putfield      #58                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionTravelCm:F
       8: return

  public void setMaxSuspensionTravelCm(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #59                 // Method com/jme3/bullet/objects/VehicleWheel.setMaxSuspensionTravelCm:(F)V
      15: return

  public float getMaxSuspensionForce();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: getfield      #66                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionForce:F
       7: freturn

  public void setMaxSuspensionForce(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: fload_1
       5: putfield      #66                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionForce:F
       8: return

  public void setMaxSuspensionForce(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #67                 // Method com/jme3/bullet/objects/VehicleWheel.setMaxSuspensionForce:(F)V
      15: return

  public float getSuspensionCompression();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: getfield      #62                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionCompression:F
       7: freturn

  public void setSuspensionCompression(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: fload_1
       5: putfield      #62                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionCompression:F
       8: return

  public void setSuspensionCompression(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #63                 // Method com/jme3/bullet/objects/VehicleWheel.setWheelsDampingCompression:(F)V
      15: return

  public float getSuspensionDamping();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: getfield      #64                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionDamping:F
       7: freturn

  public void setSuspensionDamping(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: fload_1
       5: putfield      #64                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionDamping:F
       8: return

  public void setSuspensionDamping(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #65                 // Method com/jme3/bullet/objects/VehicleWheel.setWheelsDampingRelaxation:(F)V
      15: return

  public float getSuspensionStiffness();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: getfield      #60                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionStiffness:F
       7: freturn

  public void setSuspensionStiffness(float);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
       4: fload_1
       5: putfield      #60                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionStiffness:F
       8: return

  public void setSuspensionStiffness(int, float);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #15                 // class com/jme3/bullet/objects/VehicleWheel
      11: fload_2
      12: invokevirtual #61                 // Method com/jme3/bullet/objects/VehicleWheel.setSuspensionStiffness:(F)V
      15: return

  public void resetSuspension();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field vehicleId:J
       5: invokespecial #72                 // Method resetSuspension:(J)V
       8: return

  private native void resetSuspension(long);

  public void accelerate(float);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       7: invokevirtual #12                 // Method java/util/ArrayList.size:()I
      10: if_icmpge     25
      13: aload_0
      14: iload_2
      15: fload_1
      16: invokevirtual #73                 // Method accelerate:(IF)V
      19: iinc          2, 1
      22: goto          2
      25: return

  public void accelerate(int, float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field vehicleId:J
       5: iload_1
       6: fload_2
       7: invokespecial #74                 // Method applyEngineForce:(JIF)V
      10: return

  private native void applyEngineForce(long, int, float);

  public void steer(float);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       7: invokevirtual #12                 // Method java/util/ArrayList.size:()I
      10: if_icmpge     36
      13: aload_0
      14: iload_2
      15: invokevirtual #75                 // Method getWheel:(I)Lcom/jme3/bullet/objects/VehicleWheel;
      18: invokevirtual #50                 // Method com/jme3/bullet/objects/VehicleWheel.isFrontWheel:()Z
      21: ifeq          30
      24: aload_0
      25: iload_2
      26: fload_1
      27: invokevirtual #76                 // Method steer:(IF)V
      30: iinc          2, 1
      33: goto          2
      36: return

  public void steer(int, float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field vehicleId:J
       5: iload_1
       6: fload_2
       7: invokespecial #77                 // Method steer:(JIF)V
      10: return

  private native void steer(long, int, float);

  public void brake(float);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
       7: invokevirtual #12                 // Method java/util/ArrayList.size:()I
      10: if_icmpge     25
      13: aload_0
      14: iload_2
      15: fload_1
      16: invokevirtual #78                 // Method brake:(IF)V
      19: iinc          2, 1
      22: goto          2
      25: return

  public void brake(int, float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field vehicleId:J
       5: iload_1
       6: fload_2
       7: invokespecial #79                 // Method brake:(JIF)V
      10: return

  private native void brake(long, int, float);

  public float getCurrentVehicleSpeedKmHour();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field vehicleId:J
       5: invokespecial #80                 // Method getCurrentVehicleSpeedKmHour:(J)F
       8: freturn

  private native float getCurrentVehicleSpeedKmHour(long);

  public com.jme3.math.Vector3f getForwardVector(com.jme3.math.Vector3f);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #81                 // class com/jme3/math/Vector3f
       7: dup
       8: invokespecial #82                 // Method com/jme3/math/Vector3f."<init>":()V
      11: astore_1
      12: aload_0
      13: aload_0
      14: getfield      #2                  // Field vehicleId:J
      17: aload_1
      18: invokespecial #83                 // Method getForwardVector:(JLcom/jme3/math/Vector3f;)V
      21: aload_1
      22: areturn

  private native void getForwardVector(long, com.jme3.math.Vector3f);

  public long getVehicleId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field vehicleId:J
       4: lreturn

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #84,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
       7: astore_2
       8: aload_0
       9: new           #4                  // class com/jme3/bullet/objects/infos/VehicleTuning
      12: dup
      13: invokespecial #5                  // Method com/jme3/bullet/objects/infos/VehicleTuning."<init>":()V
      16: putfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      19: aload_0
      20: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      23: aload_2
      24: ldc           #85                 // String frictionSlip
      26: ldc           #86                 // float 10.5f
      28: invokeinterface #87,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      33: putfield      #56                 // Field com/jme3/bullet/objects/infos/VehicleTuning.frictionSlip:F
      36: aload_0
      37: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      40: aload_2
      41: ldc           #88                 // String maxSuspensionTravelCm
      43: ldc           #89                 // float 500.0f
      45: invokeinterface #87,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      50: putfield      #58                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionTravelCm:F
      53: aload_0
      54: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      57: aload_2
      58: ldc           #90                 // String maxSuspensionForce
      60: ldc           #91                 // float 6000.0f
      62: invokeinterface #87,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      67: putfield      #66                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionForce:F
      70: aload_0
      71: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      74: aload_2
      75: ldc           #92                 // String suspensionCompression
      77: ldc           #93                 // float 0.83f
      79: invokeinterface #87,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      84: putfield      #62                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionCompression:F
      87: aload_0
      88: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      91: aload_2
      92: ldc           #94                 // String suspensionDamping
      94: ldc           #95                 // float 0.88f
      96: invokeinterface #87,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     101: putfield      #64                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionDamping:F
     104: aload_0
     105: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
     108: aload_2
     109: ldc           #96                 // String suspensionStiffness
     111: ldc           #97                 // float 5.88f
     113: invokeinterface #87,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     118: putfield      #60                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionStiffness:F
     121: aload_0
     122: aload_2
     123: ldc           #98                 // String wheelsList
     125: new           #7                  // class java/util/ArrayList
     128: dup
     129: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
     132: invokeinterface #99,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavableArrayList:(Ljava/lang/String;Ljava/util/ArrayList;)Ljava/util/ArrayList;
     137: putfield      #9                  // Field wheels:Ljava/util/ArrayList;
     140: aload_0
     141: getfield      #19                 // Field motionState:Lcom/jme3/bullet/objects/infos/RigidBodyMotionState;
     144: aload_0
     145: invokevirtual #20                 // Method com/jme3/bullet/objects/infos/RigidBodyMotionState.setVehicle:(Lcom/jme3/bullet/objects/PhysicsVehicle;)V
     148: aload_0
     149: aload_1
     150: invokespecial #100                // Method com/jme3/bullet/objects/PhysicsRigidBody.read:(Lcom/jme3/export/JmeImporter;)V
     153: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #101,  2          // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      13: getfield      #56                 // Field com/jme3/bullet/objects/infos/VehicleTuning.frictionSlip:F
      16: ldc           #85                 // String frictionSlip
      18: ldc           #86                 // float 10.5f
      20: invokeinterface #102,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      25: aload_2
      26: aload_0
      27: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      30: getfield      #58                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionTravelCm:F
      33: ldc           #88                 // String maxSuspensionTravelCm
      35: ldc           #89                 // float 500.0f
      37: invokeinterface #102,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      42: aload_2
      43: aload_0
      44: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      47: getfield      #66                 // Field com/jme3/bullet/objects/infos/VehicleTuning.maxSuspensionForce:F
      50: ldc           #90                 // String maxSuspensionForce
      52: ldc           #91                 // float 6000.0f
      54: invokeinterface #102,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      59: aload_2
      60: aload_0
      61: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      64: getfield      #62                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionCompression:F
      67: ldc           #92                 // String suspensionCompression
      69: ldc           #93                 // float 0.83f
      71: invokeinterface #102,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      76: aload_2
      77: aload_0
      78: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      81: getfield      #64                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionDamping:F
      84: ldc           #94                 // String suspensionDamping
      86: ldc           #95                 // float 0.88f
      88: invokeinterface #102,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      93: aload_2
      94: aload_0
      95: getfield      #6                  // Field tuning:Lcom/jme3/bullet/objects/infos/VehicleTuning;
      98: getfield      #60                 // Field com/jme3/bullet/objects/infos/VehicleTuning.suspensionStiffness:F
     101: ldc           #96                 // String suspensionStiffness
     103: ldc           #97                 // float 5.88f
     105: invokeinterface #102,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     110: aload_2
     111: aload_0
     112: getfield      #9                  // Field wheels:Ljava/util/ArrayList;
     115: ldc           #98                 // String wheelsList
     117: new           #7                  // class java/util/ArrayList
     120: dup
     121: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
     124: invokeinterface #103,  4          // InterfaceMethod com/jme3/export/OutputCapsule.writeSavableArrayList:(Ljava/util/ArrayList;Ljava/lang/String;Ljava/util/ArrayList;)V
     129: aload_0
     130: aload_1
     131: invokespecial #104                // Method com/jme3/bullet/objects/PhysicsRigidBody.write:(Lcom/jme3/export/JmeExporter;)V
     134: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #105                // Method com/jme3/bullet/objects/PhysicsRigidBody.finalize:()V
       4: aload_0
       5: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokestatic  #29                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      14: getstatic     #30                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      17: ldc           #106                // String Finalizing RayCaster {0}
      19: aload_0
      20: getfield      #3                  // Field rayCasterId:J
      23: invokestatic  #32                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      26: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_0
      30: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokestatic  #29                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      39: getstatic     #30                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      42: ldc           #107                // String Finalizing Vehicle {0}
      44: aload_0
      45: getfield      #2                  // Field vehicleId:J
      48: invokestatic  #32                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      51: invokevirtual #33                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      54: aload_0
      55: aload_0
      56: getfield      #3                  // Field rayCasterId:J
      59: aload_0
      60: getfield      #2                  // Field vehicleId:J
      63: invokespecial #35                 // Method finalizeNative:(JJ)V
      66: return

  private native void finalizeNative(long, long);
}
