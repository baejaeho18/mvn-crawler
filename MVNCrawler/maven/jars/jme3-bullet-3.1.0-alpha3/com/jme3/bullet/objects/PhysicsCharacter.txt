Compiled from "PhysicsCharacter.java"
public class com.jme3.bullet.objects.PhysicsCharacter extends com.jme3.bullet.collision.PhysicsCollisionObject {
  protected long characterId;

  protected float stepHeight;

  protected com.jme3.math.Vector3f walkDirection;

  protected float fallSpeed;

  protected float jumpSpeed;

  protected int upAxis;

  protected boolean locationDirty;

  protected final com.jme3.math.Quaternion tmp_inverseWorldRotation;

  public com.jme3.bullet.objects.PhysicsCharacter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/PhysicsCollisionObject."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field characterId:J
       9: aload_0
      10: new           #3                  // class com/jme3/math/Vector3f
      13: dup
      14: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
      17: putfield      #5                  // Field walkDirection:Lcom/jme3/math/Vector3f;
      20: aload_0
      21: ldc           #6                  // float 55.0f
      23: putfield      #7                  // Field fallSpeed:F
      26: aload_0
      27: ldc           #8                  // float 10.0f
      29: putfield      #9                  // Field jumpSpeed:F
      32: aload_0
      33: iconst_1
      34: putfield      #10                 // Field upAxis:I
      37: aload_0
      38: iconst_0
      39: putfield      #11                 // Field locationDirty:Z
      42: aload_0
      43: new           #12                 // class com/jme3/math/Quaternion
      46: dup
      47: invokespecial #13                 // Method com/jme3/math/Quaternion."<init>":()V
      50: putfield      #14                 // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      53: return

  public com.jme3.bullet.objects.PhysicsCharacter(com.jme3.bullet.collision.shapes.CollisionShape, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/PhysicsCollisionObject."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field characterId:J
       9: aload_0
      10: new           #3                  // class com/jme3/math/Vector3f
      13: dup
      14: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
      17: putfield      #5                  // Field walkDirection:Lcom/jme3/math/Vector3f;
      20: aload_0
      21: ldc           #6                  // float 55.0f
      23: putfield      #7                  // Field fallSpeed:F
      26: aload_0
      27: ldc           #8                  // float 10.0f
      29: putfield      #9                  // Field jumpSpeed:F
      32: aload_0
      33: iconst_1
      34: putfield      #10                 // Field upAxis:I
      37: aload_0
      38: iconst_0
      39: putfield      #11                 // Field locationDirty:Z
      42: aload_0
      43: new           #12                 // class com/jme3/math/Quaternion
      46: dup
      47: invokespecial #13                 // Method com/jme3/math/Quaternion."<init>":()V
      50: putfield      #14                 // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      53: aload_0
      54: aload_1
      55: putfield      #15                 // Field collisionShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
      58: aload_0
      59: fload_2
      60: putfield      #16                 // Field stepHeight:F
      63: aload_0
      64: invokevirtual #17                 // Method buildObject:()V
      67: return

  protected void buildObject();
    Code:
       0: aload_0
       1: getfield      #18                 // Field objectId:J
       4: lconst_0
       5: lcmp
       6: ifne          46
       9: aload_0
      10: aload_0
      11: invokespecial #19                 // Method createGhostObject:()J
      14: putfield      #18                 // Field objectId:J
      17: aload_0
      18: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      27: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      30: ldc           #24                 // String Creating GhostObject {0}
      32: aload_0
      33: getfield      #18                 // Field objectId:J
      36: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      39: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      42: aload_0
      43: invokevirtual #27                 // Method initUserPointer:()V
      46: aload_0
      47: aload_0
      48: getfield      #18                 // Field objectId:J
      51: invokespecial #28                 // Method setCharacterFlags:(J)V
      54: aload_0
      55: aload_0
      56: getfield      #18                 // Field objectId:J
      59: aload_0
      60: getfield      #15                 // Field collisionShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
      63: invokevirtual #29                 // Method com/jme3/bullet/collision/shapes/CollisionShape.getObjectId:()J
      66: invokevirtual #30                 // Method attachCollisionShape:(JJ)V
      69: aload_0
      70: getfield      #2                  // Field characterId:J
      73: lconst_0
      74: lcmp
      75: ifeq          111
      78: aload_0
      79: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      82: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      85: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      88: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      91: ldc           #31                 // String Clearing Character {0}
      93: aload_0
      94: getfield      #18                 // Field objectId:J
      97: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     100: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     103: aload_0
     104: aload_0
     105: getfield      #2                  // Field characterId:J
     108: invokespecial #32                 // Method finalizeNativeCharacter:(J)V
     111: aload_0
     112: aload_0
     113: aload_0
     114: getfield      #18                 // Field objectId:J
     117: aload_0
     118: getfield      #15                 // Field collisionShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
     121: invokevirtual #29                 // Method com/jme3/bullet/collision/shapes/CollisionShape.getObjectId:()J
     124: aload_0
     125: getfield      #16                 // Field stepHeight:F
     128: invokespecial #33                 // Method createCharacterObject:(JJF)J
     131: putfield      #2                  // Field characterId:J
     134: aload_0
     135: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     138: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
     141: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     144: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     147: ldc           #34                 // String Creating Character {0}
     149: aload_0
     150: getfield      #2                  // Field characterId:J
     153: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     156: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     159: return

  private native long createGhostObject();

  private native void setCharacterFlags(long);

  private native long createCharacterObject(long, long, float);

  public void warp(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: aload_1
       6: invokespecial #35                 // Method warp:(JLcom/jme3/math/Vector3f;)V
       9: return

  private native void warp(long, com.jme3.math.Vector3f);

  public void setWalkDirection(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #5                  // Field walkDirection:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #36                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #2                  // Field characterId:J
      14: aload_1
      15: invokespecial #37                 // Method setWalkDirection:(JLcom/jme3/math/Vector3f;)V
      18: return

  private native void setWalkDirection(long, com.jme3.math.Vector3f);

  public com.jme3.math.Vector3f getWalkDirection();
    Code:
       0: aload_0
       1: getfield      #5                  // Field walkDirection:Lcom/jme3/math/Vector3f;
       4: areturn

  public void setUpAxis(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field upAxis:I
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field characterId:J
      10: iload_1
      11: invokespecial #38                 // Method setUpAxis:(JI)V
      14: return

  private native void setUpAxis(long, int);

  public int getUpAxis();
    Code:
       0: aload_0
       1: getfield      #10                 // Field upAxis:I
       4: ireturn

  public void setFallSpeed(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #7                  // Field fallSpeed:F
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field characterId:J
      10: fload_1
      11: invokespecial #39                 // Method setFallSpeed:(JF)V
      14: return

  private native void setFallSpeed(long, float);

  public float getFallSpeed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fallSpeed:F
       4: freturn

  public void setJumpSpeed(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #9                  // Field jumpSpeed:F
       5: aload_0
       6: aload_0
       7: getfield      #2                  // Field characterId:J
      10: fload_1
      11: invokespecial #40                 // Method setJumpSpeed:(JF)V
      14: return

  private native void setJumpSpeed(long, float);

  public float getJumpSpeed();
    Code:
       0: aload_0
       1: getfield      #9                  // Field jumpSpeed:F
       4: freturn

  public void setGravity(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: fload_1
       6: invokespecial #41                 // Method setGravity:(JF)V
       9: return

  private native void setGravity(long, float);

  public float getGravity();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: invokespecial #42                 // Method getGravity:(J)F
       8: freturn

  private native float getGravity(long);

  public void setMaxSlope(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: fload_1
       6: invokespecial #43                 // Method setMaxSlope:(JF)V
       9: return

  private native void setMaxSlope(long, float);

  public float getMaxSlope();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: invokespecial #44                 // Method getMaxSlope:(J)F
       8: freturn

  private native float getMaxSlope(long);

  public boolean onGround();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: invokespecial #45                 // Method onGround:(J)Z
       8: ireturn

  private native boolean onGround(long);

  public void jump();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field characterId:J
       5: invokespecial #46                 // Method jump:(J)V
       8: return

  private native void jump(long);

  public void setCollisionShape(com.jme3.bullet.collision.shapes.CollisionShape);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method com/jme3/bullet/collision/PhysicsCollisionObject.setCollisionShape:(Lcom/jme3/bullet/collision/shapes/CollisionShape;)V
       5: aload_0
       6: getfield      #18                 // Field objectId:J
       9: lconst_0
      10: lcmp
      11: ifne          21
      14: aload_0
      15: invokevirtual #17                 // Method buildObject:()V
      18: goto          33
      21: aload_0
      22: aload_0
      23: getfield      #18                 // Field objectId:J
      26: aload_1
      27: invokevirtual #29                 // Method com/jme3/bullet/collision/shapes/CollisionShape.getObjectId:()J
      30: invokevirtual #30                 // Method attachCollisionShape:(JJ)V
      33: return

  public void setPhysicsLocation(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method warp:(Lcom/jme3/math/Vector3f;)V
       5: return

  public com.jme3.math.Vector3f getPhysicsLocation(com.jme3.math.Vector3f);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #3                  // class com/jme3/math/Vector3f
       7: dup
       8: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
      11: astore_1
      12: aload_0
      13: aload_0
      14: getfield      #18                 // Field objectId:J
      17: aload_1
      18: invokespecial #49                 // Method getPhysicsLocation:(JLcom/jme3/math/Vector3f;)V
      21: aload_1
      22: areturn

  private native void getPhysicsLocation(long, com.jme3.math.Vector3f);

  public com.jme3.math.Vector3f getPhysicsLocation();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #50                 // Method getPhysicsLocation:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       5: areturn

  public void setCcdSweptSphereRadius(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field objectId:J
       5: fload_1
       6: invokespecial #51                 // Method setCcdSweptSphereRadius:(JF)V
       9: return

  private native void setCcdSweptSphereRadius(long, float);

  public void setCcdMotionThreshold(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field objectId:J
       5: fload_1
       6: invokespecial #52                 // Method setCcdMotionThreshold:(JF)V
       9: return

  private native void setCcdMotionThreshold(long, float);

  public float getCcdSweptSphereRadius();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field objectId:J
       5: invokespecial #53                 // Method getCcdSweptSphereRadius:(J)F
       8: freturn

  private native float getCcdSweptSphereRadius(long);

  public float getCcdMotionThreshold();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field objectId:J
       5: invokespecial #54                 // Method getCcdMotionThreshold:(J)F
       8: freturn

  private native float getCcdMotionThreshold(long);

  public float getCcdSquareMotionThreshold();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #18                 // Field objectId:J
       5: invokespecial #55                 // Method getCcdSquareMotionThreshold:(J)F
       8: freturn

  private native float getCcdSquareMotionThreshold(long);

  public long getControllerId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field characterId:J
       4: lreturn

  public void destroy();
    Code:
       0: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // Method com/jme3/bullet/collision/PhysicsCollisionObject.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #57,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #16                 // Field stepHeight:F
      18: ldc           #58                 // String stepHeight
      20: fconst_1
      21: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      26: aload_2
      27: aload_0
      28: invokevirtual #60                 // Method getGravity:()F
      31: ldc           #61                 // String gravity
      33: ldc           #62                 // float 29.400002f
      35: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      40: aload_2
      41: aload_0
      42: invokevirtual #63                 // Method getMaxSlope:()F
      45: ldc           #64                 // String maxSlope
      47: fconst_1
      48: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      53: aload_2
      54: aload_0
      55: getfield      #7                  // Field fallSpeed:F
      58: ldc           #65                 // String fallSpeed
      60: ldc           #6                  // float 55.0f
      62: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      67: aload_2
      68: aload_0
      69: getfield      #9                  // Field jumpSpeed:F
      72: ldc           #66                 // String jumpSpeed
      74: ldc           #8                  // float 10.0f
      76: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      81: aload_2
      82: aload_0
      83: getfield      #10                 // Field upAxis:I
      86: ldc           #67                 // String upAxis
      88: iconst_1
      89: invokeinterface #68,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      94: aload_2
      95: aload_0
      96: invokevirtual #69                 // Method getCcdMotionThreshold:()F
      99: ldc           #70                 // String ccdMotionThreshold
     101: fconst_0
     102: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     107: aload_2
     108: aload_0
     109: invokevirtual #71                 // Method getCcdSweptSphereRadius:()F
     112: ldc           #72                 // String ccdSweptSphereRadius
     114: fconst_0
     115: invokeinterface #59,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     120: aload_2
     121: aload_0
     122: new           #3                  // class com/jme3/math/Vector3f
     125: dup
     126: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
     129: invokevirtual #50                 // Method getPhysicsLocation:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     132: ldc           #73                 // String physicsLocation
     134: new           #3                  // class com/jme3/math/Vector3f
     137: dup
     138: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
     141: invokeinterface #74,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     146: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #75                 // Method com/jme3/bullet/collision/PhysicsCollisionObject.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #76,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #58                 // String stepHeight
      17: fconst_1
      18: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      23: putfield      #16                 // Field stepHeight:F
      26: aload_0
      27: invokevirtual #17                 // Method buildObject:()V
      30: aload_0
      31: aload_2
      32: ldc           #61                 // String gravity
      34: ldc           #62                 // float 29.400002f
      36: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      41: invokevirtual #78                 // Method setGravity:(F)V
      44: aload_0
      45: aload_2
      46: ldc           #64                 // String maxSlope
      48: fconst_1
      49: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      54: invokevirtual #79                 // Method setMaxSlope:(F)V
      57: aload_0
      58: aload_2
      59: ldc           #65                 // String fallSpeed
      61: ldc           #6                  // float 55.0f
      63: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      68: invokevirtual #80                 // Method setFallSpeed:(F)V
      71: aload_0
      72: aload_2
      73: ldc           #66                 // String jumpSpeed
      75: ldc           #8                  // float 10.0f
      77: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      82: invokevirtual #81                 // Method setJumpSpeed:(F)V
      85: aload_0
      86: aload_2
      87: ldc           #67                 // String upAxis
      89: iconst_1
      90: invokeinterface #82,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      95: invokevirtual #83                 // Method setUpAxis:(I)V
      98: aload_0
      99: aload_2
     100: ldc           #70                 // String ccdMotionThreshold
     102: fconst_0
     103: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     108: invokevirtual #84                 // Method setCcdMotionThreshold:(F)V
     111: aload_0
     112: aload_2
     113: ldc           #72                 // String ccdSweptSphereRadius
     115: fconst_0
     116: invokeinterface #77,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     121: invokevirtual #85                 // Method setCcdSweptSphereRadius:(F)V
     124: aload_0
     125: aload_2
     126: ldc           #73                 // String physicsLocation
     128: new           #3                  // class com/jme3/math/Vector3f
     131: dup
     132: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
     135: invokeinterface #86,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     140: checkcast     #3                  // class com/jme3/math/Vector3f
     143: invokevirtual #87                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
     146: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method com/jme3/bullet/collision/PhysicsCollisionObject.finalize:()V
       4: aload_0
       5: aload_0
       6: getfield      #2                  // Field characterId:J
       9: invokespecial #32                 // Method finalizeNativeCharacter:(J)V
      12: return

  private native void finalizeNativeCharacter(long);
}
