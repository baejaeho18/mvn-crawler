Compiled from "BulletGhostObjectDebugControl.java"
public class com.jme3.bullet.debug.BulletGhostObjectDebugControl extends com.jme3.bullet.debug.AbstractPhysicsDebugControl {
  protected final com.jme3.bullet.objects.PhysicsGhostObject body;

  protected final com.jme3.math.Vector3f location;

  protected final com.jme3.math.Quaternion rotation;

  protected com.jme3.bullet.collision.shapes.CollisionShape myShape;

  protected com.jme3.scene.Spatial geom;

  public com.jme3.bullet.debug.BulletGhostObjectDebugControl(com.jme3.bullet.debug.BulletDebugAppState, com.jme3.bullet.objects.PhysicsGhostObject);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/jme3/bullet/debug/AbstractPhysicsDebugControl."<init>":(Lcom/jme3/bullet/debug/BulletDebugAppState;)V
       5: aload_0
       6: new           #2                  // class com/jme3/math/Vector3f
       9: dup
      10: invokespecial #3                  // Method com/jme3/math/Vector3f."<init>":()V
      13: putfield      #4                  // Field location:Lcom/jme3/math/Vector3f;
      16: aload_0
      17: new           #5                  // class com/jme3/math/Quaternion
      20: dup
      21: invokespecial #6                  // Method com/jme3/math/Quaternion."<init>":()V
      24: putfield      #7                  // Field rotation:Lcom/jme3/math/Quaternion;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field body:Lcom/jme3/bullet/objects/PhysicsGhostObject;
      32: aload_0
      33: aload_2
      34: invokevirtual #9                  // Method com/jme3/bullet/objects/PhysicsGhostObject.getCollisionShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
      37: putfield      #10                 // Field myShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
      40: aload_0
      41: aload_2
      42: invokevirtual #9                  // Method com/jme3/bullet/objects/PhysicsGhostObject.getCollisionShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
      45: invokestatic  #11                 // Method com/jme3/bullet/util/DebugShapeFactory.getDebugShape:(Lcom/jme3/bullet/collision/shapes/CollisionShape;)Lcom/jme3/scene/Spatial;
      48: putfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      51: aload_0
      52: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      55: aload_2
      56: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      59: invokevirtual #14                 // Method com/jme3/scene/Spatial.setName:(Ljava/lang/String;)V
      62: aload_0
      63: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      66: aload_2
      67: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      70: invokevirtual #14                 // Method com/jme3/scene/Spatial.setName:(Ljava/lang/String;)V
      73: aload_0
      74: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      77: aload_1
      78: getfield      #15                 // Field com/jme3/bullet/debug/BulletDebugAppState.DEBUG_YELLOW:Lcom/jme3/material/Material;
      81: invokevirtual #16                 // Method com/jme3/scene/Spatial.setMaterial:(Lcom/jme3/material/Material;)V
      84: return

  public void setSpatial(com.jme3.scene.Spatial);
    Code:
       0: aload_1
       1: ifnull        28
       4: aload_1
       5: instanceof    #17                 // class com/jme3/scene/Node
       8: ifeq          28
      11: aload_1
      12: checkcast     #17                 // class com/jme3/scene/Node
      15: astore_2
      16: aload_2
      17: aload_0
      18: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      21: invokevirtual #18                 // Method com/jme3/scene/Node.attachChild:(Lcom/jme3/scene/Spatial;)I
      24: pop
      25: goto          56
      28: aload_1
      29: ifnonnull     56
      32: aload_0
      33: getfield      #19                 // Field spatial:Lcom/jme3/scene/Spatial;
      36: ifnull        56
      39: aload_0
      40: getfield      #19                 // Field spatial:Lcom/jme3/scene/Spatial;
      43: checkcast     #17                 // class com/jme3/scene/Node
      46: astore_2
      47: aload_2
      48: aload_0
      49: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      52: invokevirtual #20                 // Method com/jme3/scene/Node.detachChild:(Lcom/jme3/scene/Spatial;)I
      55: pop
      56: aload_0
      57: aload_1
      58: invokespecial #21                 // Method com/jme3/bullet/debug/AbstractPhysicsDebugControl.setSpatial:(Lcom/jme3/scene/Spatial;)V
      61: return

  protected void controlUpdate(float);
    Code:
       0: aload_0
       1: getfield      #10                 // Field myShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
       4: aload_0
       5: getfield      #8                  // Field body:Lcom/jme3/bullet/objects/PhysicsGhostObject;
       8: invokevirtual #9                  // Method com/jme3/bullet/objects/PhysicsGhostObject.getCollisionShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
      11: if_acmpeq     68
      14: aload_0
      15: getfield      #19                 // Field spatial:Lcom/jme3/scene/Spatial;
      18: checkcast     #17                 // class com/jme3/scene/Node
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      27: invokevirtual #20                 // Method com/jme3/scene/Node.detachChild:(Lcom/jme3/scene/Spatial;)I
      30: pop
      31: aload_0
      32: aload_0
      33: getfield      #8                  // Field body:Lcom/jme3/bullet/objects/PhysicsGhostObject;
      36: invokevirtual #9                  // Method com/jme3/bullet/objects/PhysicsGhostObject.getCollisionShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
      39: invokestatic  #11                 // Method com/jme3/bullet/util/DebugShapeFactory.getDebugShape:(Lcom/jme3/bullet/collision/shapes/CollisionShape;)Lcom/jme3/scene/Spatial;
      42: putfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      45: aload_0
      46: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      49: aload_0
      50: getfield      #22                 // Field debugAppState:Lcom/jme3/bullet/debug/BulletDebugAppState;
      53: getfield      #15                 // Field com/jme3/bullet/debug/BulletDebugAppState.DEBUG_YELLOW:Lcom/jme3/material/Material;
      56: invokevirtual #16                 // Method com/jme3/scene/Spatial.setMaterial:(Lcom/jme3/material/Material;)V
      59: aload_2
      60: aload_0
      61: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      64: invokevirtual #18                 // Method com/jme3/scene/Node.attachChild:(Lcom/jme3/scene/Spatial;)I
      67: pop
      68: aload_0
      69: aload_0
      70: getfield      #8                  // Field body:Lcom/jme3/bullet/objects/PhysicsGhostObject;
      73: aload_0
      74: getfield      #4                  // Field location:Lcom/jme3/math/Vector3f;
      77: invokevirtual #23                 // Method com/jme3/bullet/objects/PhysicsGhostObject.getPhysicsLocation:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      80: aload_0
      81: getfield      #8                  // Field body:Lcom/jme3/bullet/objects/PhysicsGhostObject;
      84: aload_0
      85: getfield      #7                  // Field rotation:Lcom/jme3/math/Quaternion;
      88: invokevirtual #24                 // Method com/jme3/bullet/objects/PhysicsGhostObject.getPhysicsRotation:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      91: invokevirtual #25                 // Method applyPhysicsTransform:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
      94: aload_0
      95: getfield      #12                 // Field geom:Lcom/jme3/scene/Spatial;
      98: aload_0
      99: getfield      #8                  // Field body:Lcom/jme3/bullet/objects/PhysicsGhostObject;
     102: invokevirtual #9                  // Method com/jme3/bullet/objects/PhysicsGhostObject.getCollisionShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
     105: invokevirtual #26                 // Method com/jme3/bullet/collision/shapes/CollisionShape.getScale:()Lcom/jme3/math/Vector3f;
     108: invokevirtual #27                 // Method com/jme3/scene/Spatial.setLocalScale:(Lcom/jme3/math/Vector3f;)V
     111: return

  protected void controlRender(com.jme3.renderer.RenderManager, com.jme3.renderer.ViewPort);
    Code:
       0: return
}
