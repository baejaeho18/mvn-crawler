Compiled from "AbstractPhysicsDebugControl.java"
public abstract class com.jme3.bullet.debug.AbstractPhysicsDebugControl extends com.jme3.scene.control.AbstractControl {
  private final com.jme3.math.Quaternion tmp_inverseWorldRotation;

  protected final com.jme3.bullet.debug.BulletDebugAppState debugAppState;

  public com.jme3.bullet.debug.AbstractPhysicsDebugControl(com.jme3.bullet.debug.BulletDebugAppState);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/scene/control/AbstractControl."<init>":()V
       4: aload_0
       5: new           #2                  // class com/jme3/math/Quaternion
       8: dup
       9: invokespecial #3                  // Method com/jme3/math/Quaternion."<init>":()V
      12: putfield      #4                  // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field debugAppState:Lcom/jme3/bullet/debug/BulletDebugAppState;
      20: return

  protected abstract void controlUpdate(float);

  protected void applyPhysicsTransform(com.jme3.math.Vector3f, com.jme3.math.Quaternion);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #6                  // Field spatial:Lcom/jme3/scene/Spatial;
       7: invokevirtual #7                  // Method applyPhysicsTransform:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;Lcom/jme3/scene/Spatial;)V
      10: return

  protected void applyPhysicsTransform(com.jme3.math.Vector3f, com.jme3.math.Quaternion, com.jme3.scene.Spatial);
    Code:
       0: aload_3
       1: ifnull        133
       4: aload_3
       5: invokevirtual #8                  // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
       8: astore        4
      10: aload_3
      11: invokevirtual #9                  // Method com/jme3/scene/Spatial.getLocalRotation:()Lcom/jme3/math/Quaternion;
      14: astore        5
      16: aload_3
      17: invokevirtual #10                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      20: ifnull        123
      23: aload         4
      25: aload_1
      26: invokevirtual #11                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      29: aload_3
      30: invokevirtual #10                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      33: invokevirtual #12                 // Method com/jme3/scene/Node.getWorldTranslation:()Lcom/jme3/math/Vector3f;
      36: invokevirtual #13                 // Method com/jme3/math/Vector3f.subtractLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      39: pop
      40: aload         4
      42: aload_3
      43: invokevirtual #10                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      46: invokevirtual #14                 // Method com/jme3/scene/Node.getWorldScale:()Lcom/jme3/math/Vector3f;
      49: invokevirtual #15                 // Method com/jme3/math/Vector3f.divideLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      52: pop
      53: aload_0
      54: getfield      #4                  // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      57: aload_3
      58: invokevirtual #10                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      61: invokevirtual #16                 // Method com/jme3/scene/Node.getWorldRotation:()Lcom/jme3/math/Quaternion;
      64: invokevirtual #17                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      67: invokevirtual #18                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
      70: aload         4
      72: invokevirtual #19                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      75: pop
      76: aload         5
      78: aload_2
      79: invokevirtual #17                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      82: pop
      83: aload_0
      84: getfield      #4                  // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      87: aload_3
      88: invokevirtual #10                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      91: invokevirtual #16                 // Method com/jme3/scene/Node.getWorldRotation:()Lcom/jme3/math/Quaternion;
      94: invokevirtual #17                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      97: invokevirtual #18                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     100: aload         5
     102: aload         5
     104: invokevirtual #20                 // Method com/jme3/math/Quaternion.mult:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     107: pop
     108: aload_3
     109: aload         4
     111: invokevirtual #21                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     114: aload_3
     115: aload         5
     117: invokevirtual #22                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     120: goto          133
     123: aload_3
     124: aload_1
     125: invokevirtual #21                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     128: aload_3
     129: aload_2
     130: invokevirtual #22                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     133: return
}
