Compiled from "PhysicsSpace.java"
public class com.jme3.bullet.PhysicsSpace {
  private static final java.util.logging.Logger logger;

  public static final int AXIS_X;

  public static final int AXIS_Y;

  public static final int AXIS_Z;

  private long physicsSpaceId;

  private static java.lang.ThreadLocal<java.util.concurrent.ConcurrentLinkedQueue<com.jme3.app.AppTask<?>>> pQueueTL;

  private java.util.concurrent.ConcurrentLinkedQueue<com.jme3.app.AppTask<?>> pQueue;

  private static java.lang.ThreadLocal<com.jme3.bullet.PhysicsSpace> physicsSpaceTL;

  private com.jme3.bullet.PhysicsSpace$BroadphaseType broadphaseType;

  private java.util.Map<java.lang.Long, com.jme3.bullet.objects.PhysicsGhostObject> physicsGhostObjects;

  private java.util.Map<java.lang.Long, com.jme3.bullet.objects.PhysicsCharacter> physicsCharacters;

  private java.util.Map<java.lang.Long, com.jme3.bullet.objects.PhysicsRigidBody> physicsBodies;

  private java.util.Map<java.lang.Long, com.jme3.bullet.joints.PhysicsJoint> physicsJoints;

  private java.util.Map<java.lang.Long, com.jme3.bullet.objects.PhysicsVehicle> physicsVehicles;

  private java.util.ArrayList<com.jme3.bullet.collision.PhysicsCollisionListener> collisionListeners;

  private java.util.ArrayDeque<com.jme3.bullet.collision.PhysicsCollisionEvent> collisionEvents;

  private java.util.Map<java.lang.Integer, com.jme3.bullet.collision.PhysicsCollisionGroupListener> collisionGroupListeners;

  private java.util.concurrent.ConcurrentLinkedQueue<com.jme3.bullet.PhysicsTickListener> tickListeners;

  private com.jme3.bullet.collision.PhysicsCollisionEventFactory eventFactory;

  private com.jme3.math.Vector3f worldMin;

  private com.jme3.math.Vector3f worldMax;

  private float accuracy;

  private int maxSubSteps;

  private int rayTestFlags;

  private int solverNumIterations;

  private final com.jme3.math.Vector3f gravity;

  public static com.jme3.bullet.PhysicsSpace getPhysicsSpace();
    Code:
       0: getstatic     #1                  // Field physicsSpaceTL:Ljava/lang/ThreadLocal;
       3: invokevirtual #2                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #3                  // class com/jme3/bullet/PhysicsSpace
       9: areturn

  public static void setLocalThreadPhysicsSpace(com.jme3.bullet.PhysicsSpace);
    Code:
       0: getstatic     #1                  // Field physicsSpaceTL:Ljava/lang/ThreadLocal;
       3: aload_0
       4: invokevirtual #4                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  public com.jme3.bullet.PhysicsSpace();
    Code:
       0: aload_0
       1: new           #5                  // class com/jme3/math/Vector3f
       4: dup
       5: ldc           #6                  // float -10000.0f
       7: ldc           #6                  // float -10000.0f
       9: ldc           #6                  // float -10000.0f
      11: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      14: new           #5                  // class com/jme3/math/Vector3f
      17: dup
      18: ldc           #8                  // float 10000.0f
      20: ldc           #8                  // float 10000.0f
      22: ldc           #8                  // float 10000.0f
      24: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      27: getstatic     #9                  // Field com/jme3/bullet/PhysicsSpace$BroadphaseType.DBVT:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
      30: invokespecial #10                 // Method "<init>":(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;)V
      33: return

  public com.jme3.bullet.PhysicsSpace(com.jme3.bullet.PhysicsSpace$BroadphaseType);
    Code:
       0: aload_0
       1: new           #5                  // class com/jme3/math/Vector3f
       4: dup
       5: ldc           #6                  // float -10000.0f
       7: ldc           #6                  // float -10000.0f
       9: ldc           #6                  // float -10000.0f
      11: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      14: new           #5                  // class com/jme3/math/Vector3f
      17: dup
      18: ldc           #8                  // float 10000.0f
      20: ldc           #8                  // float 10000.0f
      22: ldc           #8                  // float 10000.0f
      24: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      27: aload_1
      28: invokespecial #10                 // Method "<init>":(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;)V
      31: return

  public com.jme3.bullet.PhysicsSpace(com.jme3.math.Vector3f, com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #11                 // Field com/jme3/bullet/PhysicsSpace$BroadphaseType.AXIS_SWEEP_3:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
       6: invokespecial #10                 // Method "<init>":(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;)V
       9: return

  public com.jme3.bullet.PhysicsSpace(com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.bullet.PhysicsSpace$BroadphaseType);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #13                 // Field physicsSpaceId:J
       9: aload_0
      10: new           #14                 // class java/util/concurrent/ConcurrentLinkedQueue
      13: dup
      14: invokespecial #15                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      17: putfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      20: aload_0
      21: getstatic     #9                  // Field com/jme3/bullet/PhysicsSpace$BroadphaseType.DBVT:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
      24: putfield      #17                 // Field broadphaseType:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
      27: aload_0
      28: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      31: dup
      32: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      35: putfield      #20                 // Field physicsGhostObjects:Ljava/util/Map;
      38: aload_0
      39: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      42: dup
      43: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      46: putfield      #21                 // Field physicsCharacters:Ljava/util/Map;
      49: aload_0
      50: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      53: dup
      54: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      57: putfield      #22                 // Field physicsBodies:Ljava/util/Map;
      60: aload_0
      61: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      64: dup
      65: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      68: putfield      #23                 // Field physicsJoints:Ljava/util/Map;
      71: aload_0
      72: new           #18                 // class java/util/concurrent/ConcurrentHashMap
      75: dup
      76: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      79: putfield      #24                 // Field physicsVehicles:Ljava/util/Map;
      82: aload_0
      83: new           #25                 // class java/util/ArrayList
      86: dup
      87: invokespecial #26                 // Method java/util/ArrayList."<init>":()V
      90: putfield      #27                 // Field collisionListeners:Ljava/util/ArrayList;
      93: aload_0
      94: new           #28                 // class java/util/ArrayDeque
      97: dup
      98: invokespecial #29                 // Method java/util/ArrayDeque."<init>":()V
     101: putfield      #30                 // Field collisionEvents:Ljava/util/ArrayDeque;
     104: aload_0
     105: new           #18                 // class java/util/concurrent/ConcurrentHashMap
     108: dup
     109: invokespecial #19                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     112: putfield      #31                 // Field collisionGroupListeners:Ljava/util/Map;
     115: aload_0
     116: new           #14                 // class java/util/concurrent/ConcurrentLinkedQueue
     119: dup
     120: invokespecial #15                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
     123: putfield      #32                 // Field tickListeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
     126: aload_0
     127: new           #33                 // class com/jme3/bullet/collision/PhysicsCollisionEventFactory
     130: dup
     131: invokespecial #34                 // Method com/jme3/bullet/collision/PhysicsCollisionEventFactory."<init>":()V
     134: putfield      #35                 // Field eventFactory:Lcom/jme3/bullet/collision/PhysicsCollisionEventFactory;
     137: aload_0
     138: new           #5                  // class com/jme3/math/Vector3f
     141: dup
     142: ldc           #6                  // float -10000.0f
     144: ldc           #6                  // float -10000.0f
     146: ldc           #6                  // float -10000.0f
     148: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     151: putfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
     154: aload_0
     155: new           #5                  // class com/jme3/math/Vector3f
     158: dup
     159: ldc           #8                  // float 10000.0f
     161: ldc           #8                  // float 10000.0f
     163: ldc           #8                  // float 10000.0f
     165: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     168: putfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
     171: aload_0
     172: ldc           #38                 // float 0.016666668f
     174: putfield      #39                 // Field accuracy:F
     177: aload_0
     178: iconst_4
     179: putfield      #40                 // Field maxSubSteps:I
     182: aload_0
     183: iconst_4
     184: putfield      #41                 // Field rayTestFlags:I
     187: aload_0
     188: bipush        10
     190: putfield      #42                 // Field solverNumIterations:I
     193: aload_0
     194: new           #5                  // class com/jme3/math/Vector3f
     197: dup
     198: fconst_0
     199: ldc           #43                 // float -9.81f
     201: fconst_0
     202: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     205: putfield      #44                 // Field gravity:Lcom/jme3/math/Vector3f;
     208: aload_0
     209: getfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
     212: aload_1
     213: invokevirtual #45                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     216: pop
     217: aload_0
     218: getfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
     221: aload_2
     222: invokevirtual #45                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     225: pop
     226: aload_0
     227: aload_3
     228: putfield      #17                 // Field broadphaseType:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
     231: aload_0
     232: invokevirtual #46                 // Method create:()V
     235: return

  public void create();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
       6: getfield      #47                 // Field com/jme3/math/Vector3f.x:F
       9: aload_0
      10: getfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
      13: getfield      #48                 // Field com/jme3/math/Vector3f.y:F
      16: aload_0
      17: getfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
      20: getfield      #49                 // Field com/jme3/math/Vector3f.z:F
      23: aload_0
      24: getfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
      27: getfield      #47                 // Field com/jme3/math/Vector3f.x:F
      30: aload_0
      31: getfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
      34: getfield      #48                 // Field com/jme3/math/Vector3f.y:F
      37: aload_0
      38: getfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
      41: getfield      #49                 // Field com/jme3/math/Vector3f.z:F
      44: aload_0
      45: getfield      #17                 // Field broadphaseType:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
      48: invokevirtual #50                 // Method com/jme3/bullet/PhysicsSpace$BroadphaseType.ordinal:()I
      51: iconst_0
      52: invokespecial #51                 // Method createPhysicsSpace:(FFFFFFIZ)J
      55: putfield      #13                 // Field physicsSpaceId:J
      58: getstatic     #52                 // Field pQueueTL:Ljava/lang/ThreadLocal;
      61: aload_0
      62: getfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      65: invokevirtual #4                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      68: getstatic     #1                  // Field physicsSpaceTL:Ljava/lang/ThreadLocal;
      71: aload_0
      72: invokevirtual #4                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      75: return

  private native long createPhysicsSpace(float, float, float, float, float, float, int, boolean);

  private void preTick_native(float);
    Code:
       0: aload_0
       1: getfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #53                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #54                 // class com/jme3/app/AppTask
      10: astore_2
      11: aload_0
      12: getfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      15: invokevirtual #53                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      18: checkcast     #54                 // class com/jme3/app/AppTask
      21: astore_2
      22: aload_2
      23: ifnull        80
      26: aload_2
      27: invokevirtual #55                 // Method com/jme3/app/AppTask.isCancelled:()Z
      30: ifeq          47
      33: aload_0
      34: getfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      37: invokevirtual #53                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      40: checkcast     #54                 // class com/jme3/app/AppTask
      43: astore_2
      44: goto          26
      47: aload_2
      48: invokevirtual #56                 // Method com/jme3/app/AppTask.invoke:()V
      51: goto          66
      54: astore_3
      55: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      58: getstatic     #59                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      61: aconst_null
      62: aload_3
      63: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      66: aload_0
      67: getfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      70: invokevirtual #53                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      73: checkcast     #54                 // class com/jme3/app/AppTask
      76: astore_2
      77: goto          22
      80: aload_0
      81: getfield      #32                 // Field tickListeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
      84: invokevirtual #61                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
      87: astore_3
      88: aload_3
      89: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          120
      97: aload_3
      98: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #64                 // class com/jme3/bullet/PhysicsTickListener
     106: astore        4
     108: aload         4
     110: aload_0
     111: fload_1
     112: invokeinterface #65,  3           // InterfaceMethod com/jme3/bullet/PhysicsTickListener.prePhysicsTick:(Lcom/jme3/bullet/PhysicsSpace;F)V
     117: goto          88
     120: return
    Exception table:
       from    to  target type
          47    51    54   Class java/lang/Exception

  private void postTick_native(float);
    Code:
       0: aload_0
       1: getfield      #32                 // Field tickListeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #61                 // Method java/util/concurrent/ConcurrentLinkedQueue.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          38
      17: aload_2
      18: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #64                 // class com/jme3/bullet/PhysicsTickListener
      26: astore_3
      27: aload_3
      28: aload_0
      29: fload_1
      30: invokeinterface #66,  3           // InterfaceMethod com/jme3/bullet/PhysicsTickListener.physicsTick:(Lcom/jme3/bullet/PhysicsSpace;F)V
      35: goto          8
      38: return

  private void addCollision_native();
    Code:
       0: return

  private boolean needCollision_native(com.jme3.bullet.collision.PhysicsCollisionObject, com.jme3.bullet.collision.PhysicsCollisionObject);
    Code:
       0: iconst_0
       1: ireturn

  private void addCollisionEvent_native(com.jme3.bullet.collision.PhysicsCollisionObject, com.jme3.bullet.collision.PhysicsCollisionObject, long);
    Code:
       0: aload_0
       1: getfield      #30                 // Field collisionEvents:Ljava/util/ArrayDeque;
       4: aload_0
       5: getfield      #35                 // Field eventFactory:Lcom/jme3/bullet/collision/PhysicsCollisionEventFactory;
       8: iconst_1
       9: aload_1
      10: aload_2
      11: lload_3
      12: invokevirtual #67                 // Method com/jme3/bullet/collision/PhysicsCollisionEventFactory.getEvent:(ILcom/jme3/bullet/collision/PhysicsCollisionObject;Lcom/jme3/bullet/collision/PhysicsCollisionObject;J)Lcom/jme3/bullet/collision/PhysicsCollisionEvent;
      15: invokevirtual #68                 // Method java/util/ArrayDeque.add:(Ljava/lang/Object;)Z
      18: pop
      19: return

  public void update(float);
    Code:
       0: aload_0
       1: fload_1
       2: aload_0
       3: getfield      #40                 // Field maxSubSteps:I
       6: invokevirtual #69                 // Method update:(FI)V
       9: return

  public void update(float, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field physicsSpaceId:J
       5: fload_1
       6: iload_2
       7: aload_0
       8: getfield      #39                 // Field accuracy:F
      11: invokespecial #70                 // Method stepSimulation:(JFIF)V
      14: return

  private native void stepSimulation(long, float, int, float);

  public void distributeEvents();
    Code:
       0: aload_0
       1: getfield      #27                 // Field collisionListeners:Ljava/util/ArrayList;
       4: invokevirtual #71                 // Method java/util/ArrayList.size:()I
       7: istore_1
       8: aload_0
       9: getfield      #30                 // Field collisionEvents:Ljava/util/ArrayDeque;
      12: invokevirtual #72                 // Method java/util/ArrayDeque.isEmpty:()Z
      15: ifne          70
      18: aload_0
      19: getfield      #30                 // Field collisionEvents:Ljava/util/ArrayDeque;
      22: invokevirtual #73                 // Method java/util/ArrayDeque.pop:()Ljava/lang/Object;
      25: checkcast     #74                 // class com/jme3/bullet/collision/PhysicsCollisionEvent
      28: astore_2
      29: iconst_0
      30: istore_3
      31: iload_3
      32: iload_1
      33: if_icmpge     59
      36: aload_0
      37: getfield      #27                 // Field collisionListeners:Ljava/util/ArrayList;
      40: iload_3
      41: invokevirtual #75                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      44: checkcast     #76                 // class com/jme3/bullet/collision/PhysicsCollisionListener
      47: aload_2
      48: invokeinterface #77,  2           // InterfaceMethod com/jme3/bullet/collision/PhysicsCollisionListener.collision:(Lcom/jme3/bullet/collision/PhysicsCollisionEvent;)V
      53: iinc          3, 1
      56: goto          31
      59: aload_0
      60: getfield      #35                 // Field eventFactory:Lcom/jme3/bullet/collision/PhysicsCollisionEventFactory;
      63: aload_2
      64: invokevirtual #78                 // Method com/jme3/bullet/collision/PhysicsCollisionEventFactory.recycle:(Lcom/jme3/bullet/collision/PhysicsCollisionEvent;)V
      67: goto          8
      70: return

  public static <V> java.util.concurrent.Future<V> enqueueOnThisThread(java.util.concurrent.Callable<V>);
    Code:
       0: new           #54                 // class com/jme3/app/AppTask
       3: dup
       4: aload_0
       5: invokespecial #79                 // Method com/jme3/app/AppTask."<init>":(Ljava/util/concurrent/Callable;)V
       8: astore_1
       9: getstatic     #80                 // Field java/lang/System.out:Ljava/io/PrintStream;
      12: ldc           #81                 // String created apptask
      14: invokevirtual #82                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      17: getstatic     #52                 // Field pQueueTL:Ljava/lang/ThreadLocal;
      20: invokevirtual #2                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      23: checkcast     #14                 // class java/util/concurrent/ConcurrentLinkedQueue
      26: aload_1
      27: invokevirtual #83                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_1
      32: areturn

  public <V> java.util.concurrent.Future<V> enqueue(java.util.concurrent.Callable<V>);
    Code:
       0: new           #54                 // class com/jme3/app/AppTask
       3: dup
       4: aload_1
       5: invokespecial #79                 // Method com/jme3/app/AppTask."<init>":(Ljava/util/concurrent/Callable;)V
       8: astore_2
       9: aload_0
      10: getfield      #16                 // Field pQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      13: aload_2
      14: invokevirtual #83                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_2
      19: areturn

  public void add(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #84                 // class com/jme3/bullet/control/PhysicsControl
       4: ifeq          20
       7: aload_1
       8: checkcast     #84                 // class com/jme3/bullet/control/PhysicsControl
      11: aload_0
      12: invokeinterface #85,  2           // InterfaceMethod com/jme3/bullet/control/PhysicsControl.setPhysicsSpace:(Lcom/jme3/bullet/PhysicsSpace;)V
      17: goto          120
      20: aload_1
      21: instanceof    #86                 // class com/jme3/scene/Spatial
      24: ifeq          74
      27: aload_1
      28: checkcast     #86                 // class com/jme3/scene/Spatial
      31: astore_2
      32: iconst_0
      33: istore_3
      34: iload_3
      35: aload_2
      36: invokevirtual #87                 // Method com/jme3/scene/Spatial.getNumControls:()I
      39: if_icmpge     71
      42: aload_2
      43: iload_3
      44: invokevirtual #88                 // Method com/jme3/scene/Spatial.getControl:(I)Lcom/jme3/scene/control/Control;
      47: instanceof    #84                 // class com/jme3/bullet/control/PhysicsControl
      50: ifeq          65
      53: aload_0
      54: aload_2
      55: iload_3
      56: invokevirtual #88                 // Method com/jme3/scene/Spatial.getControl:(I)Lcom/jme3/scene/control/Control;
      59: checkcast     #84                 // class com/jme3/bullet/control/PhysicsControl
      62: invokevirtual #89                 // Method add:(Ljava/lang/Object;)V
      65: iinc          3, 1
      68: goto          34
      71: goto          120
      74: aload_1
      75: instanceof    #90                 // class com/jme3/bullet/collision/PhysicsCollisionObject
      78: ifeq          92
      81: aload_0
      82: aload_1
      83: checkcast     #90                 // class com/jme3/bullet/collision/PhysicsCollisionObject
      86: invokevirtual #91                 // Method addCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      89: goto          120
      92: aload_1
      93: instanceof    #92                 // class com/jme3/bullet/joints/PhysicsJoint
      96: ifeq          110
      99: aload_0
     100: aload_1
     101: checkcast     #92                 // class com/jme3/bullet/joints/PhysicsJoint
     104: invokespecial #93                 // Method addJoint:(Lcom/jme3/bullet/joints/PhysicsJoint;)V
     107: goto          120
     110: new           #94                 // class java/lang/UnsupportedOperationException
     113: dup
     114: ldc           #95                 // String Cannot add this kind of object to the physics space.
     116: invokespecial #96                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     119: athrow
     120: return

  public void addCollisionObject(com.jme3.bullet.collision.PhysicsCollisionObject);
    Code:
       0: aload_1
       1: instanceof    #97                 // class com/jme3/bullet/objects/PhysicsGhostObject
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #97                 // class com/jme3/bullet/objects/PhysicsGhostObject
      12: invokespecial #98                 // Method addGhostObject:(Lcom/jme3/bullet/objects/PhysicsGhostObject;)V
      15: goto          69
      18: aload_1
      19: instanceof    #99                 // class com/jme3/bullet/objects/PhysicsRigidBody
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #99                 // class com/jme3/bullet/objects/PhysicsRigidBody
      30: invokespecial #100                // Method addRigidBody:(Lcom/jme3/bullet/objects/PhysicsRigidBody;)V
      33: goto          69
      36: aload_1
      37: instanceof    #101                // class com/jme3/bullet/objects/PhysicsVehicle
      40: ifeq          54
      43: aload_0
      44: aload_1
      45: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
      48: invokespecial #100                // Method addRigidBody:(Lcom/jme3/bullet/objects/PhysicsRigidBody;)V
      51: goto          69
      54: aload_1
      55: instanceof    #102                // class com/jme3/bullet/objects/PhysicsCharacter
      58: ifeq          69
      61: aload_0
      62: aload_1
      63: checkcast     #102                // class com/jme3/bullet/objects/PhysicsCharacter
      66: invokespecial #103                // Method addCharacter:(Lcom/jme3/bullet/objects/PhysicsCharacter;)V
      69: return

  public void remove(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: instanceof    #84                 // class com/jme3/bullet/control/PhysicsControl
       9: ifeq          25
      12: aload_1
      13: checkcast     #84                 // class com/jme3/bullet/control/PhysicsControl
      16: aconst_null
      17: invokeinterface #85,  2           // InterfaceMethod com/jme3/bullet/control/PhysicsControl.setPhysicsSpace:(Lcom/jme3/bullet/PhysicsSpace;)V
      22: goto          125
      25: aload_1
      26: instanceof    #86                 // class com/jme3/scene/Spatial
      29: ifeq          79
      32: aload_1
      33: checkcast     #86                 // class com/jme3/scene/Spatial
      36: astore_2
      37: iconst_0
      38: istore_3
      39: iload_3
      40: aload_2
      41: invokevirtual #87                 // Method com/jme3/scene/Spatial.getNumControls:()I
      44: if_icmpge     76
      47: aload_2
      48: iload_3
      49: invokevirtual #88                 // Method com/jme3/scene/Spatial.getControl:(I)Lcom/jme3/scene/control/Control;
      52: instanceof    #84                 // class com/jme3/bullet/control/PhysicsControl
      55: ifeq          70
      58: aload_0
      59: aload_2
      60: iload_3
      61: invokevirtual #88                 // Method com/jme3/scene/Spatial.getControl:(I)Lcom/jme3/scene/control/Control;
      64: checkcast     #84                 // class com/jme3/bullet/control/PhysicsControl
      67: invokevirtual #104                // Method remove:(Ljava/lang/Object;)V
      70: iinc          3, 1
      73: goto          39
      76: goto          125
      79: aload_1
      80: instanceof    #90                 // class com/jme3/bullet/collision/PhysicsCollisionObject
      83: ifeq          97
      86: aload_0
      87: aload_1
      88: checkcast     #90                 // class com/jme3/bullet/collision/PhysicsCollisionObject
      91: invokevirtual #105                // Method removeCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      94: goto          125
      97: aload_1
      98: instanceof    #92                 // class com/jme3/bullet/joints/PhysicsJoint
     101: ifeq          115
     104: aload_0
     105: aload_1
     106: checkcast     #92                 // class com/jme3/bullet/joints/PhysicsJoint
     109: invokespecial #106                // Method removeJoint:(Lcom/jme3/bullet/joints/PhysicsJoint;)V
     112: goto          125
     115: new           #94                 // class java/lang/UnsupportedOperationException
     118: dup
     119: ldc           #107                // String Cannot remove this kind of object from the physics space.
     121: invokespecial #96                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: return

  public void removeCollisionObject(com.jme3.bullet.collision.PhysicsCollisionObject);
    Code:
       0: aload_1
       1: instanceof    #97                 // class com/jme3/bullet/objects/PhysicsGhostObject
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #97                 // class com/jme3/bullet/objects/PhysicsGhostObject
      12: invokespecial #108                // Method removeGhostObject:(Lcom/jme3/bullet/objects/PhysicsGhostObject;)V
      15: goto          51
      18: aload_1
      19: instanceof    #99                 // class com/jme3/bullet/objects/PhysicsRigidBody
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #99                 // class com/jme3/bullet/objects/PhysicsRigidBody
      30: invokespecial #109                // Method removeRigidBody:(Lcom/jme3/bullet/objects/PhysicsRigidBody;)V
      33: goto          51
      36: aload_1
      37: instanceof    #102                // class com/jme3/bullet/objects/PhysicsCharacter
      40: ifeq          51
      43: aload_0
      44: aload_1
      45: checkcast     #102                // class com/jme3/bullet/objects/PhysicsCharacter
      48: invokespecial #110                // Method removeCharacter:(Lcom/jme3/bullet/objects/PhysicsCharacter;)V
      51: return

  public void addAll(com.jme3.scene.Spatial);
    Code:
       0: aload_1
       1: ldc_w         #111                // class com/jme3/bullet/control/RigidBodyControl
       4: invokevirtual #112                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
       7: ifnull        85
      10: aload_1
      11: ldc_w         #111                // class com/jme3/bullet/control/RigidBodyControl
      14: invokevirtual #112                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
      17: checkcast     #111                // class com/jme3/bullet/control/RigidBodyControl
      20: astore_2
      21: aload_0
      22: aload_2
      23: invokevirtual #89                 // Method add:(Ljava/lang/Object;)V
      26: aload_2
      27: invokevirtual #113                // Method com/jme3/bullet/control/RigidBodyControl.getJoints:()Ljava/util/List;
      30: astore_3
      31: aload_3
      32: invokeinterface #114,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        4
      39: aload         4
      41: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          82
      49: aload         4
      51: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #92                 // class com/jme3/bullet/joints/PhysicsJoint
      59: astore        5
      61: aload_2
      62: aload         5
      64: invokevirtual #115                // Method com/jme3/bullet/joints/PhysicsJoint.getBodyA:()Lcom/jme3/bullet/objects/PhysicsRigidBody;
      67: invokevirtual #116                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      70: ifeq          79
      73: aload_0
      74: aload         5
      76: invokevirtual #89                 // Method add:(Ljava/lang/Object;)V
      79: goto          39
      82: goto          90
      85: aload_0
      86: aload_1
      87: invokevirtual #89                 // Method add:(Ljava/lang/Object;)V
      90: aload_1
      91: instanceof    #117                // class com/jme3/scene/Node
      94: ifeq          141
      97: aload_1
      98: checkcast     #117                // class com/jme3/scene/Node
     101: invokevirtual #118                // Method com/jme3/scene/Node.getChildren:()Ljava/util/List;
     104: astore_2
     105: aload_2
     106: invokeinterface #114,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     111: astore_3
     112: aload_3
     113: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          141
     121: aload_3
     122: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     127: checkcast     #86                 // class com/jme3/scene/Spatial
     130: astore        4
     132: aload_0
     133: aload         4
     135: invokevirtual #119                // Method addAll:(Lcom/jme3/scene/Spatial;)V
     138: goto          112
     141: return

  public void removeAll(com.jme3.scene.Spatial);
    Code:
       0: aload_1
       1: ldc_w         #111                // class com/jme3/bullet/control/RigidBodyControl
       4: invokevirtual #112                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
       7: ifnull        85
      10: aload_1
      11: ldc_w         #111                // class com/jme3/bullet/control/RigidBodyControl
      14: invokevirtual #112                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
      17: checkcast     #111                // class com/jme3/bullet/control/RigidBodyControl
      20: astore_2
      21: aload_2
      22: invokevirtual #113                // Method com/jme3/bullet/control/RigidBodyControl.getJoints:()Ljava/util/List;
      25: astore_3
      26: aload_3
      27: invokeinterface #114,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore        4
      34: aload         4
      36: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          77
      44: aload         4
      46: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #92                 // class com/jme3/bullet/joints/PhysicsJoint
      54: astore        5
      56: aload_2
      57: aload         5
      59: invokevirtual #115                // Method com/jme3/bullet/joints/PhysicsJoint.getBodyA:()Lcom/jme3/bullet/objects/PhysicsRigidBody;
      62: invokevirtual #116                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      65: ifeq          74
      68: aload_0
      69: aload         5
      71: invokespecial #106                // Method removeJoint:(Lcom/jme3/bullet/joints/PhysicsJoint;)V
      74: goto          34
      77: aload_0
      78: aload_2
      79: invokevirtual #104                // Method remove:(Ljava/lang/Object;)V
      82: goto          100
      85: aload_1
      86: ldc_w         #84                 // class com/jme3/bullet/control/PhysicsControl
      89: invokevirtual #112                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
      92: ifnull        100
      95: aload_0
      96: aload_1
      97: invokevirtual #104                // Method remove:(Ljava/lang/Object;)V
     100: aload_1
     101: instanceof    #117                // class com/jme3/scene/Node
     104: ifeq          151
     107: aload_1
     108: checkcast     #117                // class com/jme3/scene/Node
     111: invokevirtual #118                // Method com/jme3/scene/Node.getChildren:()Ljava/util/List;
     114: astore_2
     115: aload_2
     116: invokeinterface #114,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     121: astore_3
     122: aload_3
     123: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     128: ifeq          151
     131: aload_3
     132: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     137: checkcast     #86                 // class com/jme3/scene/Spatial
     140: astore        4
     142: aload_0
     143: aload         4
     145: invokevirtual #120                // Method removeAll:(Lcom/jme3/scene/Spatial;)V
     148: goto          122
     151: return

  private native void addCollisionObject(long, long);

  private native void removeCollisionObject(long, long);

  private native void addRigidBody(long, long);

  private native void removeRigidBody(long, long);

  private native void addCharacterObject(long, long);

  private native void removeCharacterObject(long, long);

  private native void addAction(long, long);

  private native void removeAction(long, long);

  private native void addVehicle(long, long);

  private native void removeVehicle(long, long);

  private native void addConstraint(long, long);

  private native void addConstraintC(long, long, boolean);

  private native void removeConstraint(long, long);

  private void addGhostObject(com.jme3.bullet.objects.PhysicsGhostObject);
    Code:
       0: aload_0
       1: getfield      #20                 // Field physicsGhostObjects:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #125                // String GhostObject {0} already exists in PhysicsSpace, cannot add.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: aload_0
      33: getfield      #20                 // Field physicsGhostObjects:Ljava/util/Map;
      36: aload_1
      37: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
      40: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: aload_1
      44: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      53: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      56: ldc           #129                // String Adding ghost object {0} to physics space.
      58: aload_1
      59: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
      62: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      65: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      68: aload_0
      69: aload_0
      70: getfield      #13                 // Field physicsSpaceId:J
      73: aload_1
      74: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
      77: invokespecial #131                // Method addCollisionObject:(JJ)V
      80: return

  private void removeGhostObject(com.jme3.bullet.objects.PhysicsGhostObject);
    Code:
       0: aload_0
       1: getfield      #20                 // Field physicsGhostObjects:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifne          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #132                // String GhostObject {0} does not exist in PhysicsSpace, cannot remove.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: aload_0
      33: getfield      #20                 // Field physicsGhostObjects:Ljava/util/Map;
      36: aload_1
      37: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
      40: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      52: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      55: ldc           #134                // String Removing ghost object {0} from physics space.
      57: aload_1
      58: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
      61: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      64: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      67: aload_0
      68: aload_0
      69: getfield      #13                 // Field physicsSpaceId:J
      72: aload_1
      73: invokevirtual #121                // Method com/jme3/bullet/objects/PhysicsGhostObject.getObjectId:()J
      76: invokespecial #135                // Method removeCollisionObject:(JJ)V
      79: return

  private void addCharacter(com.jme3.bullet.objects.PhysicsCharacter);
    Code:
       0: aload_0
       1: getfield      #21                 // Field physicsCharacters:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #137                // String Character {0} already exists in PhysicsSpace, cannot add.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: aload_0
      33: getfield      #21                 // Field physicsCharacters:Ljava/util/Map;
      36: aload_1
      37: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
      40: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: aload_1
      44: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      53: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      56: ldc           #138                // String Adding character {0} to physics space.
      58: aload_1
      59: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
      62: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      65: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      68: aload_0
      69: aload_0
      70: getfield      #13                 // Field physicsSpaceId:J
      73: aload_1
      74: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
      77: invokespecial #139                // Method addCharacterObject:(JJ)V
      80: aload_0
      81: aload_0
      82: getfield      #13                 // Field physicsSpaceId:J
      85: aload_1
      86: invokevirtual #140                // Method com/jme3/bullet/objects/PhysicsCharacter.getControllerId:()J
      89: invokespecial #141                // Method addAction:(JJ)V
      92: return

  private void removeCharacter(com.jme3.bullet.objects.PhysicsCharacter);
    Code:
       0: aload_0
       1: getfield      #21                 // Field physicsCharacters:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifne          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #142                // String Character {0} does not exist in PhysicsSpace, cannot remove.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: aload_0
      33: getfield      #21                 // Field physicsCharacters:Ljava/util/Map;
      36: aload_1
      37: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
      40: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      52: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      55: ldc           #143                // String Removing character {0} from physics space.
      57: aload_1
      58: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
      61: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      64: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      67: aload_0
      68: aload_0
      69: getfield      #13                 // Field physicsSpaceId:J
      72: aload_1
      73: invokevirtual #140                // Method com/jme3/bullet/objects/PhysicsCharacter.getControllerId:()J
      76: invokespecial #144                // Method removeAction:(JJ)V
      79: aload_0
      80: aload_0
      81: getfield      #13                 // Field physicsSpaceId:J
      84: aload_1
      85: invokevirtual #136                // Method com/jme3/bullet/objects/PhysicsCharacter.getObjectId:()J
      88: invokespecial #145                // Method removeCharacterObject:(JJ)V
      91: return

  private void addRigidBody(com.jme3.bullet.objects.PhysicsRigidBody);
    Code:
       0: aload_0
       1: getfield      #22                 // Field physicsBodies:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #147                // String RigidBody {0} already exists in PhysicsSpace, cannot add.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: aload_0
      33: getfield      #22                 // Field physicsBodies:Ljava/util/Map;
      36: aload_1
      37: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
      40: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: aload_1
      44: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: iconst_0
      51: istore_2
      52: aload_1
      53: invokevirtual #148                // Method com/jme3/bullet/objects/PhysicsRigidBody.isKinematic:()Z
      56: ifeq          66
      59: iconst_1
      60: istore_2
      61: aload_1
      62: iconst_0
      63: invokevirtual #149                // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
      66: aload_0
      67: aload_0
      68: getfield      #13                 // Field physicsSpaceId:J
      71: aload_1
      72: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
      75: invokespecial #150                // Method addRigidBody:(JJ)V
      78: iload_2
      79: ifeq          87
      82: aload_1
      83: iconst_1
      84: invokevirtual #149                // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
      87: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      90: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      93: ldc           #151                // String Adding RigidBody {0} to physics space.
      95: aload_1
      96: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
      99: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     102: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     105: aload_1
     106: instanceof    #101                // class com/jme3/bullet/objects/PhysicsVehicle
     109: ifeq          172
     112: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
     115: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     118: ldc           #152                // String Adding vehicle constraint {0} to physics space.
     120: aload_1
     121: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
     124: invokevirtual #153                // Method com/jme3/bullet/objects/PhysicsVehicle.getVehicleId:()J
     127: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     130: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     133: aload_0
     134: getfield      #24                 // Field physicsVehicles:Ljava/util/Map;
     137: aload_1
     138: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
     141: invokevirtual #153                // Method com/jme3/bullet/objects/PhysicsVehicle.getVehicleId:()J
     144: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     147: aload_1
     148: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
     151: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: aload_0
     158: aload_0
     159: getfield      #13                 // Field physicsSpaceId:J
     162: aload_1
     163: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
     166: invokevirtual #153                // Method com/jme3/bullet/objects/PhysicsVehicle.getVehicleId:()J
     169: invokespecial #154                // Method addVehicle:(JJ)V
     172: return

  private void removeRigidBody(com.jme3.bullet.objects.PhysicsRigidBody);
    Code:
       0: aload_0
       1: getfield      #22                 // Field physicsBodies:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifne          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #155                // String RigidBody {0} does not exist in PhysicsSpace, cannot remove.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: aload_1
      33: instanceof    #101                // class com/jme3/bullet/objects/PhysicsVehicle
      36: ifeq          95
      39: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      42: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      45: ldc           #156                // String Removing vehicle constraint {0} from physics space.
      47: aload_1
      48: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
      51: invokevirtual #153                // Method com/jme3/bullet/objects/PhysicsVehicle.getVehicleId:()J
      54: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      57: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      60: aload_0
      61: getfield      #24                 // Field physicsVehicles:Ljava/util/Map;
      64: aload_1
      65: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
      68: invokevirtual #153                // Method com/jme3/bullet/objects/PhysicsVehicle.getVehicleId:()J
      71: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      74: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_0
      81: aload_0
      82: getfield      #13                 // Field physicsSpaceId:J
      85: aload_1
      86: checkcast     #101                // class com/jme3/bullet/objects/PhysicsVehicle
      89: invokevirtual #153                // Method com/jme3/bullet/objects/PhysicsVehicle.getVehicleId:()J
      92: invokespecial #157                // Method removeVehicle:(JJ)V
      95: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      98: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     101: ldc           #158                // String Removing RigidBody {0} from physics space.
     103: aload_1
     104: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     107: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     110: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     113: aload_0
     114: getfield      #22                 // Field physicsBodies:Ljava/util/Map;
     117: aload_1
     118: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     121: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     124: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: aload_0
     132: getfield      #13                 // Field physicsSpaceId:J
     135: aload_1
     136: invokevirtual #146                // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     139: invokespecial #159                // Method removeRigidBody:(JJ)V
     142: return

  private void addJoint(com.jme3.bullet.joints.PhysicsJoint);
    Code:
       0: aload_0
       1: getfield      #23                 // Field physicsJoints:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifeq          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #161                // String Joint {0} already exists in PhysicsSpace, cannot add.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      35: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      38: ldc           #162                // String Adding Joint {0} to physics space.
      40: aload_1
      41: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
      44: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      47: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      50: aload_0
      51: getfield      #23                 // Field physicsJoints:Ljava/util/Map;
      54: aload_1
      55: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
      58: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: aload_1
      62: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: aload_0
      70: getfield      #13                 // Field physicsSpaceId:J
      73: aload_1
      74: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
      77: aload_1
      78: invokevirtual #163                // Method com/jme3/bullet/joints/PhysicsJoint.isCollisionBetweenLinkedBodys:()Z
      81: ifne          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: invokespecial #164                // Method addConstraintC:(JJZ)V
      92: return

  private void removeJoint(com.jme3.bullet.joints.PhysicsJoint);
    Code:
       0: aload_0
       1: getfield      #23                 // Field physicsJoints:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
       8: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: invokeinterface #123,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      16: ifne          32
      19: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      22: getstatic     #124                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      25: ldc           #165                // String Joint {0} does not exist in PhysicsSpace, cannot remove.
      27: aload_1
      28: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      31: return
      32: getstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      35: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      38: ldc           #166                // String Removing Joint {0} from physics space.
      40: aload_1
      41: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
      44: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      47: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      50: aload_0
      51: getfield      #23                 // Field physicsJoints:Ljava/util/Map;
      54: aload_1
      55: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
      58: invokestatic  #122                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload_0
      68: aload_0
      69: getfield      #13                 // Field physicsSpaceId:J
      72: aload_1
      73: invokevirtual #160                // Method com/jme3/bullet/joints/PhysicsJoint.getObjectId:()J
      76: invokespecial #167                // Method removeConstraint:(JJ)V
      79: return

  public java.util.Collection<com.jme3.bullet.objects.PhysicsRigidBody> getRigidBodyList();
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: aload_0
       5: getfield      #22                 // Field physicsBodies:Ljava/util/Map;
       8: invokeinterface #169,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #170                // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public java.util.Collection<com.jme3.bullet.objects.PhysicsGhostObject> getGhostObjectList();
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: aload_0
       5: getfield      #20                 // Field physicsGhostObjects:Ljava/util/Map;
       8: invokeinterface #169,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #170                // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public java.util.Collection<com.jme3.bullet.objects.PhysicsCharacter> getCharacterList();
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: aload_0
       5: getfield      #21                 // Field physicsCharacters:Ljava/util/Map;
       8: invokeinterface #169,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #170                // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public java.util.Collection<com.jme3.bullet.joints.PhysicsJoint> getJointList();
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: aload_0
       5: getfield      #23                 // Field physicsJoints:Ljava/util/Map;
       8: invokeinterface #169,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #170                // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public java.util.Collection<com.jme3.bullet.objects.PhysicsVehicle> getVehicleList();
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: aload_0
       5: getfield      #24                 // Field physicsVehicles:Ljava/util/Map;
       8: invokeinterface #169,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokespecial #170                // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      16: areturn

  public void setGravity(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #44                 // Field gravity:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #45                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #13                 // Field physicsSpaceId:J
      14: aload_1
      15: invokespecial #171                // Method setGravity:(JLcom/jme3/math/Vector3f;)V
      18: return

  private native void setGravity(long, com.jme3.math.Vector3f);

  public com.jme3.math.Vector3f getGravity(com.jme3.math.Vector3f);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #44                 // Field gravity:Lcom/jme3/math/Vector3f;
       5: invokevirtual #45                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: areturn

  public void addTickListener(com.jme3.bullet.PhysicsTickListener);
    Code:
       0: aload_0
       1: getfield      #32                 // Field tickListeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #83                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void removeTickListener(com.jme3.bullet.PhysicsTickListener);
    Code:
       0: aload_0
       1: getfield      #32                 // Field tickListeners:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #172                // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void addCollisionListener(com.jme3.bullet.collision.PhysicsCollisionListener);
    Code:
       0: aload_0
       1: getfield      #27                 // Field collisionListeners:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #173                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void removeCollisionListener(com.jme3.bullet.collision.PhysicsCollisionListener);
    Code:
       0: aload_0
       1: getfield      #27                 // Field collisionListeners:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #174                // Method java/util/ArrayList.remove:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void addCollisionGroupListener(com.jme3.bullet.collision.PhysicsCollisionGroupListener, int);
    Code:
       0: aload_0
       1: getfield      #31                 // Field collisionGroupListeners:Ljava/util/Map;
       4: iload_2
       5: invokestatic  #175                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: aload_1
       9: invokeinterface #127,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void removeCollisionGroupListener(int);
    Code:
       0: aload_0
       1: getfield      #31                 // Field collisionGroupListeners:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #175                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #133,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public java.util.List rayTest(com.jme3.math.Vector3f, com.jme3.math.Vector3f);
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: invokespecial #176                // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokevirtual #177                // Method rayTest:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Ljava/util/List;)Ljava/util/List;
      15: pop
      16: aload_3
      17: areturn

  public void SetRayTestFlags(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field rayTestFlags:I
       5: return

  public int GetRayTestFlags();
    Code:
       0: aload_0
       1: getfield      #41                 // Field rayTestFlags:I
       4: ireturn

  public java.util.List<com.jme3.bullet.collision.PhysicsRayTestResult> rayTest(com.jme3.math.Vector3f, com.jme3.math.Vector3f, java.util.List<com.jme3.bullet.collision.PhysicsRayTestResult>);
    Code:
       0: aload_3
       1: invokeinterface #178,  1          // InterfaceMethod java/util/List.clear:()V
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_0
      10: getfield      #13                 // Field physicsSpaceId:J
      13: aload_3
      14: aload_0
      15: getfield      #41                 // Field rayTestFlags:I
      18: invokevirtual #179                // Method rayTest_native:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;JLjava/util/List;I)V
      21: aload_3
      22: areturn

  public native void rayTest_native(com.jme3.math.Vector3f, com.jme3.math.Vector3f, long, java.util.List<com.jme3.bullet.collision.PhysicsRayTestResult>, int);

  public java.util.List<com.jme3.bullet.collision.PhysicsSweepTestResult> sweepTest(com.jme3.bullet.collision.shapes.CollisionShape, com.jme3.math.Transform, com.jme3.math.Transform);
    Code:
       0: new           #168                // class java/util/LinkedList
       3: dup
       4: invokespecial #176                // Method java/util/LinkedList."<init>":()V
       7: astore        4
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: aload         4
      15: invokevirtual #180                // Method sweepTest:(Lcom/jme3/bullet/collision/shapes/CollisionShape;Lcom/jme3/math/Transform;Lcom/jme3/math/Transform;Ljava/util/List;)Ljava/util/List;
      18: pop
      19: aload         4
      21: areturn

  public java.util.List<com.jme3.bullet.collision.PhysicsSweepTestResult> sweepTest(com.jme3.bullet.collision.shapes.CollisionShape, com.jme3.math.Transform, com.jme3.math.Transform, java.util.List<com.jme3.bullet.collision.PhysicsSweepTestResult>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: fconst_0
       7: invokevirtual #181                // Method sweepTest:(Lcom/jme3/bullet/collision/shapes/CollisionShape;Lcom/jme3/math/Transform;Lcom/jme3/math/Transform;Ljava/util/List;F)Ljava/util/List;
      10: areturn

  public native void sweepTest_native(long, com.jme3.math.Transform, com.jme3.math.Transform, long, java.util.List<com.jme3.bullet.collision.PhysicsSweepTestResult>, float);

  public java.util.List<com.jme3.bullet.collision.PhysicsSweepTestResult> sweepTest(com.jme3.bullet.collision.shapes.CollisionShape, com.jme3.math.Transform, com.jme3.math.Transform, java.util.List<com.jme3.bullet.collision.PhysicsSweepTestResult>, float);
    Code:
       0: aload         4
       2: invokeinterface #178,  1          // InterfaceMethod java/util/List.clear:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #182                // Method com/jme3/bullet/collision/shapes/CollisionShape.getObjectId:()J
      12: aload_2
      13: aload_3
      14: aload_0
      15: getfield      #13                 // Field physicsSpaceId:J
      18: aload         4
      20: fload         5
      22: invokevirtual #183                // Method sweepTest_native:(JLcom/jme3/math/Transform;Lcom/jme3/math/Transform;JLjava/util/List;F)V
      25: aload         4
      27: areturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #22                 // Field physicsBodies:Ljava/util/Map;
       4: invokeinterface #184,  1          // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #23                 // Field physicsJoints:Ljava/util/Map;
      13: invokeinterface #184,  1          // InterfaceMethod java/util/Map.clear:()V
      18: return

  public long getSpaceId();
    Code:
       0: aload_0
       1: getfield      #13                 // Field physicsSpaceId:J
       4: lreturn

  public com.jme3.bullet.PhysicsSpace$BroadphaseType getBroadphaseType();
    Code:
       0: aload_0
       1: getfield      #17                 // Field broadphaseType:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
       4: areturn

  public void setBroadphaseType(com.jme3.bullet.PhysicsSpace$BroadphaseType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field broadphaseType:Lcom/jme3/bullet/PhysicsSpace$BroadphaseType;
       5: return

  public void setMaxSubSteps(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field maxSubSteps:I
       5: return

  public float getAccuracy();
    Code:
       0: aload_0
       1: getfield      #39                 // Field accuracy:F
       4: freturn

  public void setAccuracy(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #39                 // Field accuracy:F
       5: return

  public com.jme3.math.Vector3f getWorldMin();
    Code:
       0: aload_0
       1: getfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
       4: areturn

  public void setWorldMin(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #36                 // Field worldMin:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #45                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: return

  public com.jme3.math.Vector3f getWorldMax();
    Code:
       0: aload_0
       1: getfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
       4: areturn

  public void setWorldMax(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #37                 // Field worldMax:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #45                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: return

  public void setSolverNumIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field solverNumIterations:I
       5: aload_0
       6: getfield      #13                 // Field physicsSpaceId:J
       9: iload_1
      10: invokestatic  #185                // Method setSolverNumIterations:(JI)V
      13: return

  public int getSolverNumIterations();
    Code:
       0: aload_0
       1: getfield      #42                 // Field solverNumIterations:I
       4: ireturn

  private static native void setSolverNumIterations(long, int);

  public static native void initNativePhysics();

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #186                // Method java/lang/Object.finalize:()V
       4: aload_0
       5: invokevirtual #187                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #188                // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokestatic  #189                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      14: getstatic     #128                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      17: ldc           #190                // String Finalizing PhysicsSpace {0}
      19: aload_0
      20: getfield      #13                 // Field physicsSpaceId:J
      23: invokestatic  #130                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      26: invokevirtual #126                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_0
      30: aload_0
      31: getfield      #13                 // Field physicsSpaceId:J
      34: invokespecial #191                // Method finalizeNative:(J)V
      37: return

  private native void finalizeNative(long);

  static {};
    Code:
       0: ldc_w         #3                  // class com/jme3/bullet/PhysicsSpace
       3: invokevirtual #188                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #189                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: putstatic     #58                 // Field logger:Ljava/util/logging/Logger;
      12: new           #192                // class com/jme3/bullet/PhysicsSpace$1
      15: dup
      16: invokespecial #193                // Method com/jme3/bullet/PhysicsSpace$1."<init>":()V
      19: putstatic     #52                 // Field pQueueTL:Ljava/lang/ThreadLocal;
      22: new           #194                // class java/lang/ThreadLocal
      25: dup
      26: invokespecial #195                // Method java/lang/ThreadLocal."<init>":()V
      29: putstatic     #1                  // Field physicsSpaceTL:Ljava/lang/ThreadLocal;
      32: return
}
