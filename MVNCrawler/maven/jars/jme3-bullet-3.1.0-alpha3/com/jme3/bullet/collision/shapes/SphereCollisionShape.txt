Compiled from "SphereCollisionShape.java"
public class com.jme3.bullet.collision.shapes.SphereCollisionShape extends com.jme3.bullet.collision.shapes.CollisionShape {
  protected float radius;

  public com.jme3.bullet.collision.shapes.SphereCollisionShape();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: return

  public com.jme3.bullet.collision.shapes.SphereCollisionShape(float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #2                  // Field radius:F
       9: aload_0
      10: invokevirtual #3                  // Method createShape:()V
      13: return

  public float getRadius();
    Code:
       0: aload_0
       1: getfield      #2                  // Field radius:F
       4: freturn

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/jme3/bullet/collision/shapes/CollisionShape.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #5,  2            // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field radius:F
      18: ldc           #6                  // String radius
      20: ldc           #7                  // float 0.5f
      22: invokeinterface #8,  4            // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      27: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/jme3/bullet/collision/shapes/CollisionShape.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #10,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #6                  // String radius
      17: ldc           #7                  // float 0.5f
      19: invokeinterface #11,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      24: putfield      #2                  // Field radius:F
      27: aload_0
      28: invokevirtual #3                  // Method createShape:()V
      31: return

  public void setScale(com.jme3.math.Vector3f);
    Code:
       0: aload_1
       1: getstatic     #12                 // Field com/jme3/math/Vector3f.UNIT_XYZ:Lcom/jme3/math/Vector3f;
       4: invokevirtual #13                 // Method com/jme3/math/Vector3f.equals:(Ljava/lang/Object;)Z
       7: ifne          28
      10: aload_0
      11: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: invokestatic  #16                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      20: getstatic     #17                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      23: ldc           #18                 // String SphereCollisionShape cannot be scaled
      25: invokevirtual #19                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      28: return

  protected void createShape();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #2                  // Field radius:F
       6: invokespecial #20                 // Method createShape:(F)J
       9: putfield      #21                 // Field objectId:J
      12: aload_0
      13: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokestatic  #16                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      22: getstatic     #22                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      25: ldc           #23                 // String Created Shape {0}
      27: aload_0
      28: getfield      #21                 // Field objectId:J
      31: invokestatic  #24                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      34: invokevirtual #25                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      37: aload_0
      38: aload_0
      39: getfield      #26                 // Field scale:Lcom/jme3/math/Vector3f;
      42: invokevirtual #27                 // Method setScale:(Lcom/jme3/math/Vector3f;)V
      45: aload_0
      46: aload_0
      47: getfield      #28                 // Field margin:F
      50: invokevirtual #29                 // Method setMargin:(F)V
      53: return

  private native long createShape(float);
}
