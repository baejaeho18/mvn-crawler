Compiled from "CylinderCollisionShape.java"
public class com.jme3.bullet.collision.shapes.CylinderCollisionShape extends com.jme3.bullet.collision.shapes.CollisionShape {
  protected com.jme3.math.Vector3f halfExtents;

  protected int axis;

  public com.jme3.bullet.collision.shapes.CylinderCollisionShape();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: return

  public com.jme3.bullet.collision.shapes.CylinderCollisionShape(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field halfExtents:Lcom/jme3/math/Vector3f;
       9: aload_0
      10: iconst_2
      11: putfield      #3                  // Field axis:I
      14: aload_0
      15: invokevirtual #4                  // Method createShape:()V
      18: return

  public com.jme3.bullet.collision.shapes.CylinderCollisionShape(com.jme3.math.Vector3f, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field halfExtents:Lcom/jme3/math/Vector3f;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field axis:I
      14: aload_0
      15: invokevirtual #4                  // Method createShape:()V
      18: return

  public final com.jme3.math.Vector3f getHalfExtents();
    Code:
       0: aload_0
       1: getfield      #2                  // Field halfExtents:Lcom/jme3/math/Vector3f;
       4: areturn

  public int getAxis();
    Code:
       0: aload_0
       1: getfield      #3                  // Field axis:I
       4: ireturn

  public void setScale(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokestatic  #7                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      10: getstatic     #8                  // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      13: ldc           #9                  // String CylinderCollisionShape cannot be scaled
      15: invokevirtual #10                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      18: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/jme3/bullet/collision/shapes/CollisionShape.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #12,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field halfExtents:Lcom/jme3/math/Vector3f;
      18: ldc           #13                 // String halfExtents
      20: new           #14                 // class com/jme3/math/Vector3f
      23: dup
      24: ldc           #15                 // float 0.5f
      26: ldc           #15                 // float 0.5f
      28: ldc           #15                 // float 0.5f
      30: invokespecial #16                 // Method com/jme3/math/Vector3f."<init>":(FFF)V
      33: invokeinterface #17,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      38: aload_2
      39: aload_0
      40: getfield      #3                  // Field axis:I
      43: ldc           #18                 // String axis
      45: iconst_1
      46: invokeinterface #19,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      51: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method com/jme3/bullet/collision/shapes/CollisionShape.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #21,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #13                 // String halfExtents
      17: new           #14                 // class com/jme3/math/Vector3f
      20: dup
      21: ldc           #15                 // float 0.5f
      23: ldc           #15                 // float 0.5f
      25: ldc           #15                 // float 0.5f
      27: invokespecial #16                 // Method com/jme3/math/Vector3f."<init>":(FFF)V
      30: invokeinterface #22,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      35: checkcast     #14                 // class com/jme3/math/Vector3f
      38: putfield      #2                  // Field halfExtents:Lcom/jme3/math/Vector3f;
      41: aload_0
      42: aload_2
      43: ldc           #18                 // String axis
      45: iconst_1
      46: invokeinterface #23,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      51: putfield      #3                  // Field axis:I
      54: aload_0
      55: invokevirtual #4                  // Method createShape:()V
      58: return

  protected void createShape();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #3                  // Field axis:I
       6: aload_0
       7: getfield      #2                  // Field halfExtents:Lcom/jme3/math/Vector3f;
      10: invokespecial #24                 // Method createShape:(ILcom/jme3/math/Vector3f;)J
      13: putfield      #25                 // Field objectId:J
      16: aload_0
      17: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #6                  // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokestatic  #7                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      26: getstatic     #26                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      29: ldc           #27                 // String Created Shape {0}
      31: aload_0
      32: getfield      #25                 // Field objectId:J
      35: invokestatic  #28                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      38: invokevirtual #29                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_0
      42: aload_0
      43: getfield      #30                 // Field scale:Lcom/jme3/math/Vector3f;
      46: invokevirtual #31                 // Method setScale:(Lcom/jme3/math/Vector3f;)V
      49: aload_0
      50: aload_0
      51: getfield      #32                 // Field margin:F
      54: invokevirtual #33                 // Method setMargin:(F)V
      57: return

  private native long createShape(int, com.jme3.math.Vector3f);
}
