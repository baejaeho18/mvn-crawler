Compiled from "GImpactCollisionShape.java"
public class com.jme3.bullet.collision.shapes.GImpactCollisionShape extends com.jme3.bullet.collision.shapes.CollisionShape {
  protected int numVertices;

  protected int numTriangles;

  protected int vertexStride;

  protected int triangleIndexStride;

  protected java.nio.ByteBuffer triangleIndexBase;

  protected java.nio.ByteBuffer vertexBase;

  protected long meshId;

  public com.jme3.bullet.collision.shapes.GImpactCollisionShape();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field meshId:J
       9: return

  public com.jme3.bullet.collision.shapes.GImpactCollisionShape(com.jme3.scene.Mesh);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field meshId:J
       9: aload_0
      10: aload_1
      11: invokespecial #3                  // Method createCollisionMesh:(Lcom/jme3/scene/Mesh;)V
      14: return

  private void createCollisionMesh(com.jme3.scene.Mesh);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method com/jme3/scene/Mesh.getTriangleCount:()I
       5: iconst_3
       6: imul
       7: iconst_4
       8: imul
       9: invokestatic  #5                  // Method com/jme3/util/BufferUtils.createByteBuffer:(I)Ljava/nio/ByteBuffer;
      12: putfield      #6                  // Field triangleIndexBase:Ljava/nio/ByteBuffer;
      15: aload_0
      16: aload_1
      17: invokevirtual #7                  // Method com/jme3/scene/Mesh.getVertexCount:()I
      20: iconst_3
      21: imul
      22: iconst_4
      23: imul
      24: invokestatic  #5                  // Method com/jme3/util/BufferUtils.createByteBuffer:(I)Ljava/nio/ByteBuffer;
      27: putfield      #8                  // Field vertexBase:Ljava/nio/ByteBuffer;
      30: aload_0
      31: aload_1
      32: invokevirtual #7                  // Method com/jme3/scene/Mesh.getVertexCount:()I
      35: putfield      #9                  // Field numVertices:I
      38: aload_0
      39: bipush        12
      41: putfield      #10                 // Field vertexStride:I
      44: aload_0
      45: aload_1
      46: invokevirtual #4                  // Method com/jme3/scene/Mesh.getTriangleCount:()I
      49: putfield      #11                 // Field numTriangles:I
      52: aload_0
      53: bipush        12
      55: putfield      #12                 // Field triangleIndexStride:I
      58: aload_1
      59: invokevirtual #13                 // Method com/jme3/scene/Mesh.getIndicesAsList:()Lcom/jme3/scene/mesh/IndexBuffer;
      62: astore_2
      63: aload_1
      64: getstatic     #14                 // Field com/jme3/scene/VertexBuffer$Type.Position:Lcom/jme3/scene/VertexBuffer$Type;
      67: invokevirtual #15                 // Method com/jme3/scene/Mesh.getFloatBuffer:(Lcom/jme3/scene/VertexBuffer$Type;)Ljava/nio/FloatBuffer;
      70: astore_3
      71: aload_3
      72: invokevirtual #16                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/Buffer;
      75: pop
      76: aload_1
      77: invokevirtual #7                  // Method com/jme3/scene/Mesh.getVertexCount:()I
      80: iconst_3
      81: imul
      82: istore        4
      84: iconst_0
      85: istore        5
      87: iload         5
      89: iload         4
      91: if_icmpge     116
      94: aload_3
      95: invokevirtual #17                 // Method java/nio/FloatBuffer.get:()F
      98: fstore        6
     100: aload_0
     101: getfield      #8                  // Field vertexBase:Ljava/nio/ByteBuffer;
     104: fload         6
     106: invokevirtual #18                 // Method java/nio/ByteBuffer.putFloat:(F)Ljava/nio/ByteBuffer;
     109: pop
     110: iinc          5, 1
     113: goto          87
     116: aload_1
     117: invokevirtual #4                  // Method com/jme3/scene/Mesh.getTriangleCount:()I
     120: iconst_3
     121: imul
     122: istore        5
     124: iconst_0
     125: istore        6
     127: iload         6
     129: iload         5
     131: if_icmpge     154
     134: aload_0
     135: getfield      #6                  // Field triangleIndexBase:Ljava/nio/ByteBuffer;
     138: aload_2
     139: iload         6
     141: invokevirtual #19                 // Method com/jme3/scene/mesh/IndexBuffer.get:(I)I
     144: invokevirtual #20                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     147: pop
     148: iinc          6, 1
     151: goto          127
     154: aload_3
     155: invokevirtual #16                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/Buffer;
     158: pop
     159: aload_3
     160: invokevirtual #21                 // Method java/nio/FloatBuffer.clear:()Ljava/nio/Buffer;
     163: pop
     164: aload_0
     165: invokevirtual #22                 // Method createShape:()V
     168: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method com/jme3/bullet/collision/shapes/CollisionShape.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #24,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #9                  // Field numVertices:I
      18: ldc           #25                 // String numVertices
      20: iconst_0
      21: invokeinterface #26,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      26: aload_2
      27: aload_0
      28: getfield      #11                 // Field numTriangles:I
      31: ldc           #27                 // String numTriangles
      33: iconst_0
      34: invokeinterface #26,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      39: aload_2
      40: aload_0
      41: getfield      #10                 // Field vertexStride:I
      44: ldc           #28                 // String vertexStride
      46: iconst_0
      47: invokeinterface #26,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      52: aload_2
      53: aload_0
      54: getfield      #12                 // Field triangleIndexStride:I
      57: ldc           #29                 // String triangleIndexStride
      59: iconst_0
      60: invokeinterface #26,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      65: aload_2
      66: aload_0
      67: getfield      #6                  // Field triangleIndexBase:Ljava/nio/ByteBuffer;
      70: invokevirtual #30                 // Method java/nio/ByteBuffer.array:()[B
      73: ldc           #31                 // String triangleIndexBase
      75: iconst_0
      76: newarray       byte
      78: invokeinterface #32,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:([BLjava/lang/String;[B)V
      83: aload_2
      84: aload_0
      85: getfield      #8                  // Field vertexBase:Ljava/nio/ByteBuffer;
      88: invokevirtual #30                 // Method java/nio/ByteBuffer.array:()[B
      91: ldc           #33                 // String vertexBase
      93: iconst_0
      94: newarray       byte
      96: invokeinterface #32,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:([BLjava/lang/String;[B)V
     101: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method com/jme3/bullet/collision/shapes/CollisionShape.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #35,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #25                 // String numVertices
      17: iconst_0
      18: invokeinterface #36,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      23: putfield      #9                  // Field numVertices:I
      26: aload_0
      27: aload_2
      28: ldc           #27                 // String numTriangles
      30: iconst_0
      31: invokeinterface #36,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      36: putfield      #11                 // Field numTriangles:I
      39: aload_0
      40: aload_2
      41: ldc           #28                 // String vertexStride
      43: iconst_0
      44: invokeinterface #36,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      49: putfield      #10                 // Field vertexStride:I
      52: aload_0
      53: aload_2
      54: ldc           #29                 // String triangleIndexStride
      56: iconst_0
      57: invokeinterface #36,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      62: putfield      #12                 // Field triangleIndexStride:I
      65: aload_0
      66: aload_2
      67: ldc           #31                 // String triangleIndexBase
      69: iconst_0
      70: newarray       byte
      72: invokeinterface #37,  3           // InterfaceMethod com/jme3/export/InputCapsule.readByteArray:(Ljava/lang/String;[B)[B
      77: invokestatic  #38                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      80: putfield      #6                  // Field triangleIndexBase:Ljava/nio/ByteBuffer;
      83: aload_0
      84: aload_2
      85: ldc           #33                 // String vertexBase
      87: iconst_0
      88: newarray       byte
      90: invokeinterface #37,  3           // InterfaceMethod com/jme3/export/InputCapsule.readByteArray:(Ljava/lang/String;[B)[B
      95: invokestatic  #38                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      98: putfield      #8                  // Field vertexBase:Ljava/nio/ByteBuffer;
     101: aload_0
     102: invokevirtual #22                 // Method createShape:()V
     105: return

  protected void createShape();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field triangleIndexBase:Ljava/nio/ByteBuffer;
       5: aload_0
       6: getfield      #8                  // Field vertexBase:Ljava/nio/ByteBuffer;
       9: aload_0
      10: getfield      #11                 // Field numTriangles:I
      13: aload_0
      14: getfield      #9                  // Field numVertices:I
      17: aload_0
      18: getfield      #10                 // Field vertexStride:I
      21: aload_0
      22: getfield      #12                 // Field triangleIndexStride:I
      25: invokestatic  #39                 // Method com/jme3/bullet/util/NativeMeshUtil.createTriangleIndexVertexArray:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;IIII)J
      28: putfield      #2                  // Field meshId:J
      31: aload_0
      32: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokestatic  #42                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      41: getstatic     #43                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      44: ldc           #44                 // String Created Mesh {0}
      46: aload_0
      47: getfield      #2                  // Field meshId:J
      50: invokestatic  #45                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      53: invokevirtual #46                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      56: aload_0
      57: aload_0
      58: aload_0
      59: getfield      #2                  // Field meshId:J
      62: invokespecial #47                 // Method createShape:(J)J
      65: putfield      #48                 // Field objectId:J
      68: aload_0
      69: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      75: invokestatic  #42                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      78: getstatic     #43                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      81: ldc           #49                 // String Created Shape {0}
      83: aload_0
      84: getfield      #48                 // Field objectId:J
      87: invokestatic  #45                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      90: invokevirtual #46                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      93: aload_0
      94: aload_0
      95: getfield      #50                 // Field scale:Lcom/jme3/math/Vector3f;
      98: invokevirtual #51                 // Method setScale:(Lcom/jme3/math/Vector3f;)V
     101: aload_0
     102: aload_0
     103: getfield      #52                 // Field margin:F
     106: invokevirtual #53                 // Method setMargin:(F)V
     109: return

  private native long createShape(long);

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #54                 // Method com/jme3/bullet/collision/shapes/CollisionShape.finalize:()V
       4: aload_0
       5: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokestatic  #42                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      14: getstatic     #43                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      17: ldc           #55                 // String Finalizing Mesh {0}
      19: aload_0
      20: getfield      #2                  // Field meshId:J
      23: invokestatic  #45                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      26: invokevirtual #46                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_0
      30: aload_0
      31: getfield      #2                  // Field meshId:J
      34: invokespecial #56                 // Method finalizeNative:(J)V
      37: return

  private native void finalizeNative(long);
}
