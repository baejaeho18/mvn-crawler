Compiled from "HullCollisionShape.java"
public class com.jme3.bullet.collision.shapes.HullCollisionShape extends com.jme3.bullet.collision.shapes.CollisionShape {
  private float[] points;

  public com.jme3.bullet.collision.shapes.HullCollisionShape();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: return

  public com.jme3.bullet.collision.shapes.HullCollisionShape(com.jme3.scene.Mesh);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method getPoints:(Lcom/jme3/scene/Mesh;)[F
      10: putfield      #3                  // Field points:[F
      13: aload_0
      14: invokevirtual #4                  // Method createShape:()V
      17: return

  public com.jme3.bullet.collision.shapes.HullCollisionShape(float[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field points:[F
       9: aload_0
      10: invokevirtual #4                  // Method createShape:()V
      13: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method com/jme3/bullet/collision/shapes/CollisionShape.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #6,  2            // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #3                  // Field points:[F
      18: ldc           #7                  // String points
      20: aconst_null
      21: invokeinterface #8,  4            // InterfaceMethod com/jme3/export/OutputCapsule.write:([FLjava/lang/String;[F)V
      26: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/jme3/bullet/collision/shapes/CollisionShape.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #10,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_2
      14: ldc           #11                 // String hullMesh
      16: aconst_null
      17: invokeinterface #12,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      22: checkcast     #13                 // class com/jme3/scene/Mesh
      25: astore_3
      26: aload_3
      27: ifnull        42
      30: aload_0
      31: aload_0
      32: aload_3
      33: invokevirtual #2                  // Method getPoints:(Lcom/jme3/scene/Mesh;)[F
      36: putfield      #3                  // Field points:[F
      39: goto          55
      42: aload_0
      43: aload_2
      44: ldc           #7                  // String points
      46: aconst_null
      47: invokeinterface #14,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloatArray:(Ljava/lang/String;[F)[F
      52: putfield      #3                  // Field points:[F
      55: aload_0
      56: invokevirtual #4                  // Method createShape:()V
      59: return

  protected void createShape();
    Code:
       0: aload_0
       1: getfield      #3                  // Field points:[F
       4: arraylength
       5: iconst_4
       6: imul
       7: invokestatic  #15                 // Method com/jme3/util/BufferUtils.createByteBuffer:(I)Ljava/nio/ByteBuffer;
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #3                  // Field points:[F
      18: arraylength
      19: if_icmpge     41
      22: aload_0
      23: getfield      #3                  // Field points:[F
      26: iload_2
      27: faload
      28: fstore_3
      29: aload_1
      30: fload_3
      31: invokevirtual #16                 // Method java/nio/ByteBuffer.putFloat:(F)Ljava/nio/ByteBuffer;
      34: pop
      35: iinc          2, 1
      38: goto          13
      41: aload_1
      42: invokevirtual #17                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
      45: pop
      46: aload_0
      47: aload_0
      48: aload_1
      49: invokespecial #18                 // Method createShape:(Ljava/nio/ByteBuffer;)J
      52: putfield      #19                 // Field objectId:J
      55: aload_0
      56: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      59: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      62: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      65: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      68: ldc           #24                 // String Created Shape {0}
      70: aload_0
      71: getfield      #19                 // Field objectId:J
      74: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      77: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      80: aload_0
      81: aload_0
      82: getfield      #27                 // Field scale:Lcom/jme3/math/Vector3f;
      85: invokevirtual #28                 // Method setScale:(Lcom/jme3/math/Vector3f;)V
      88: aload_0
      89: aload_0
      90: getfield      #29                 // Field margin:F
      93: invokevirtual #30                 // Method setMargin:(F)V
      96: return

  private native long createShape(java.nio.ByteBuffer);

  protected float[] getPoints(com.jme3.scene.Mesh);
    Code:
       0: aload_1
       1: getstatic     #31                 // Field com/jme3/scene/VertexBuffer$Type.Position:Lcom/jme3/scene/VertexBuffer$Type;
       4: invokevirtual #32                 // Method com/jme3/scene/Mesh.getFloatBuffer:(Lcom/jme3/scene/VertexBuffer$Type;)Ljava/nio/FloatBuffer;
       7: astore_2
       8: aload_2
       9: invokevirtual #33                 // Method java/nio/FloatBuffer.rewind:()Ljava/nio/Buffer;
      12: pop
      13: aload_1
      14: invokevirtual #34                 // Method com/jme3/scene/Mesh.getVertexCount:()I
      17: iconst_3
      18: imul
      19: istore_3
      20: iload_3
      21: newarray       float
      23: astore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: iload_3
      31: if_icmpge     71
      34: aload         4
      36: iload         5
      38: aload_2
      39: invokevirtual #35                 // Method java/nio/FloatBuffer.get:()F
      42: fastore
      43: aload         4
      45: iload         5
      47: iconst_1
      48: iadd
      49: aload_2
      50: invokevirtual #35                 // Method java/nio/FloatBuffer.get:()F
      53: fastore
      54: aload         4
      56: iload         5
      58: iconst_2
      59: iadd
      60: aload_2
      61: invokevirtual #35                 // Method java/nio/FloatBuffer.get:()F
      64: fastore
      65: iinc          5, 3
      68: goto          28
      71: aload         4
      73: areturn
}
