Compiled from "PhysicsSweepTestResult.java"
public class com.jme3.bullet.collision.PhysicsSweepTestResult {
  private com.jme3.bullet.collision.PhysicsCollisionObject collisionObject;

  private com.jme3.math.Vector3f hitNormalLocal;

  private float hitFraction;

  private boolean normalInWorldSpace;

  public com.jme3.bullet.collision.PhysicsSweepTestResult();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.jme3.bullet.collision.PhysicsSweepTestResult(com.jme3.bullet.collision.PhysicsCollisionObject, com.jme3.math.Vector3f, float, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field collisionObject:Lcom/jme3/bullet/collision/PhysicsCollisionObject;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field hitNormalLocal:Lcom/jme3/math/Vector3f;
      14: aload_0
      15: fload_3
      16: putfield      #4                  // Field hitFraction:F
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field normalInWorldSpace:Z
      25: return

  public com.jme3.bullet.collision.PhysicsCollisionObject getCollisionObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field collisionObject:Lcom/jme3/bullet/collision/PhysicsCollisionObject;
       4: areturn

  public com.jme3.math.Vector3f getHitNormalLocal();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hitNormalLocal:Lcom/jme3/math/Vector3f;
       4: areturn

  public float getHitFraction();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hitFraction:F
       4: freturn

  public boolean isNormalInWorldSpace();
    Code:
       0: aload_0
       1: getfield      #5                  // Field normalInWorldSpace:Z
       4: ireturn

  public void fill(com.jme3.bullet.collision.PhysicsCollisionObject, com.jme3.math.Vector3f, float, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field collisionObject:Lcom/jme3/bullet/collision/PhysicsCollisionObject;
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field hitNormalLocal:Lcom/jme3/math/Vector3f;
      10: aload_0
      11: fload_3
      12: putfield      #4                  // Field hitFraction:F
      15: aload_0
      16: iload         4
      18: putfield      #5                  // Field normalInWorldSpace:Z
      21: return
}
