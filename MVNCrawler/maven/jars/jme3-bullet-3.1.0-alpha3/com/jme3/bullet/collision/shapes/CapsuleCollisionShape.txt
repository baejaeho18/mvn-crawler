Compiled from "CapsuleCollisionShape.java"
public class com.jme3.bullet.collision.shapes.CapsuleCollisionShape extends com.jme3.bullet.collision.shapes.CollisionShape {
  protected float radius;

  protected float height;

  protected int axis;

  public com.jme3.bullet.collision.shapes.CapsuleCollisionShape();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: return

  public com.jme3.bullet.collision.shapes.CapsuleCollisionShape(float, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #2                  // Field radius:F
       9: aload_0
      10: fload_2
      11: putfield      #3                  // Field height:F
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field axis:I
      19: aload_0
      20: invokevirtual #5                  // Method createShape:()V
      23: return

  public com.jme3.bullet.collision.shapes.CapsuleCollisionShape(float, float, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/collision/shapes/CollisionShape."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #2                  // Field radius:F
       9: aload_0
      10: fload_2
      11: putfield      #3                  // Field height:F
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field axis:I
      19: aload_0
      20: invokevirtual #5                  // Method createShape:()V
      23: return

  public float getRadius();
    Code:
       0: aload_0
       1: getfield      #2                  // Field radius:F
       4: freturn

  public float getHeight();
    Code:
       0: aload_0
       1: getfield      #3                  // Field height:F
       4: freturn

  public int getAxis();
    Code:
       0: aload_0
       1: getfield      #4                  // Field axis:I
       4: ireturn

  public void setScale(com.jme3.math.Vector3f);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field com/jme3/math/Vector3f.UNIT_XYZ:Lcom/jme3/math/Vector3f;
       4: invokevirtual #7                  // Method com/jme3/math/Vector3f.equals:(Ljava/lang/Object;)Z
       7: ifne          28
      10: aload_0
      11: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      17: invokestatic  #10                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      20: getstatic     #11                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      23: ldc           #12                 // String CapsuleCollisionShape cannot be scaled
      25: invokevirtual #13                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      28: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method com/jme3/bullet/collision/shapes/CollisionShape.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #15,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field radius:F
      18: ldc           #16                 // String radius
      20: ldc           #17                 // float 0.5f
      22: invokeinterface #18,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      27: aload_2
      28: aload_0
      29: getfield      #3                  // Field height:F
      32: ldc           #19                 // String height
      34: fconst_1
      35: invokeinterface #18,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      40: aload_2
      41: aload_0
      42: getfield      #4                  // Field axis:I
      45: ldc           #20                 // String axis
      47: iconst_1
      48: invokeinterface #21,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ILjava/lang/String;I)V
      53: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method com/jme3/bullet/collision/shapes/CollisionShape.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #23,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #16                 // String radius
      17: ldc           #17                 // float 0.5f
      19: invokeinterface #24,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      24: putfield      #2                  // Field radius:F
      27: aload_0
      28: aload_2
      29: ldc           #19                 // String height
      31: ldc           #17                 // float 0.5f
      33: invokeinterface #24,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      38: putfield      #3                  // Field height:F
      41: aload_0
      42: aload_2
      43: ldc           #20                 // String axis
      45: iconst_1
      46: invokeinterface #25,  3           // InterfaceMethod com/jme3/export/InputCapsule.readInt:(Ljava/lang/String;I)I
      51: putfield      #4                  // Field axis:I
      54: aload_0
      55: invokevirtual #5                  // Method createShape:()V
      58: return

  protected void createShape();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #4                  // Field axis:I
       6: aload_0
       7: getfield      #2                  // Field radius:F
      10: aload_0
      11: getfield      #3                  // Field height:F
      14: invokespecial #26                 // Method createShape:(IFF)J
      17: putfield      #27                 // Field objectId:J
      20: aload_0
      21: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      27: invokestatic  #10                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      30: getstatic     #28                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      33: ldc           #29                 // String Created Shape {0}
      35: aload_0
      36: getfield      #27                 // Field objectId:J
      39: invokestatic  #30                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      42: invokevirtual #31                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      45: aload_0
      46: aload_0
      47: getfield      #32                 // Field scale:Lcom/jme3/math/Vector3f;
      50: invokevirtual #33                 // Method setScale:(Lcom/jme3/math/Vector3f;)V
      53: aload_0
      54: aload_0
      55: getfield      #34                 // Field margin:F
      58: invokevirtual #35                 // Method setMargin:(F)V
      61: return

  private native long createShape(int, float, float);
}
