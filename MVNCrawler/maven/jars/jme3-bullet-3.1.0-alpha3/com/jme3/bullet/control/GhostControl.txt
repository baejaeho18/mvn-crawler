Compiled from "GhostControl.java"
public class com.jme3.bullet.control.GhostControl extends com.jme3.bullet.objects.PhysicsGhostObject implements com.jme3.bullet.control.PhysicsControl {
  protected com.jme3.scene.Spatial spatial;

  protected boolean enabled;

  protected boolean added;

  protected com.jme3.bullet.PhysicsSpace space;

  protected boolean applyLocal;

  public com.jme3.bullet.control.GhostControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/objects/PhysicsGhostObject."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field added:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field applyLocal:Z
      24: return

  public com.jme3.bullet.control.GhostControl(com.jme3.bullet.collision.shapes.CollisionShape);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method com/jme3/bullet/objects/PhysicsGhostObject."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;)V
       5: aload_0
       6: iconst_1
       7: putfield      #2                  // Field enabled:Z
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field added:Z
      15: aload_0
      16: aconst_null
      17: putfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field applyLocal:Z
      25: return

  public boolean isApplyPhysicsLocal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field applyLocal:Z
       4: ireturn

  public void setApplyPhysicsLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field applyLocal:Z
       5: return

  private com.jme3.math.Vector3f getSpatialTranslation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field applyLocal:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      11: invokevirtual #8                  // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      14: areturn
      15: aload_0
      16: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      19: invokevirtual #9                  // Method com/jme3/scene/Spatial.getWorldTranslation:()Lcom/jme3/math/Vector3f;
      22: areturn

  private com.jme3.math.Quaternion getSpatialRotation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field applyLocal:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      11: invokevirtual #10                 // Method com/jme3/scene/Spatial.getLocalRotation:()Lcom/jme3/math/Quaternion;
      14: areturn
      15: aload_0
      16: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      19: invokevirtual #11                 // Method com/jme3/scene/Spatial.getWorldRotation:()Lcom/jme3/math/Quaternion;
      22: areturn

  public com.jme3.scene.control.Control cloneForSpatial(com.jme3.scene.Spatial);
    Code:
       0: new           #12                 // class com/jme3/bullet/control/GhostControl
       3: dup
       4: aload_0
       5: getfield      #13                 // Field collisionShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
       8: invokespecial #14                 // Method "<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;)V
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokevirtual #15                 // Method getCcdMotionThreshold:()F
      17: invokevirtual #16                 // Method setCcdMotionThreshold:(F)V
      20: aload_2
      21: aload_0
      22: invokevirtual #17                 // Method getCcdSweptSphereRadius:()F
      25: invokevirtual #18                 // Method setCcdSweptSphereRadius:(F)V
      28: aload_2
      29: aload_0
      30: invokevirtual #19                 // Method getCollideWithGroups:()I
      33: invokevirtual #20                 // Method setCollideWithGroups:(I)V
      36: aload_2
      37: aload_0
      38: invokevirtual #21                 // Method getCollisionGroup:()I
      41: invokevirtual #22                 // Method setCollisionGroup:(I)V
      44: aload_2
      45: aload_0
      46: invokevirtual #23                 // Method getPhysicsLocation:()Lcom/jme3/math/Vector3f;
      49: invokevirtual #24                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      52: aload_2
      53: aload_0
      54: invokevirtual #25                 // Method getPhysicsRotationMatrix:()Lcom/jme3/math/Matrix3f;
      57: invokevirtual #26                 // Method setPhysicsRotation:(Lcom/jme3/math/Matrix3f;)V
      60: aload_2
      61: aload_0
      62: invokevirtual #27                 // Method isApplyPhysicsLocal:()Z
      65: invokevirtual #28                 // Method setApplyPhysicsLocal:(Z)V
      68: aload_2
      69: areturn

  public void setSpatial(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
       5: aload_0
       6: aload_1
       7: invokevirtual #29                 // Method setUserObject:(Ljava/lang/Object;)V
      10: aload_1
      11: ifnonnull     15
      14: return
      15: aload_0
      16: aload_0
      17: invokespecial #30                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      20: invokevirtual #24                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      23: aload_0
      24: aload_0
      25: invokespecial #31                 // Method getSpatialRotation:()Lcom/jme3/math/Quaternion;
      28: invokevirtual #32                 // Method setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      31: return

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field enabled:Z
       5: aload_0
       6: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       9: ifnull        86
      12: iload_1
      13: ifeq          62
      16: aload_0
      17: getfield      #3                  // Field added:Z
      20: ifne          62
      23: aload_0
      24: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      27: ifnull        46
      30: aload_0
      31: aload_0
      32: invokespecial #30                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      35: invokevirtual #24                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      38: aload_0
      39: aload_0
      40: invokespecial #31                 // Method getSpatialRotation:()Lcom/jme3/math/Quaternion;
      43: invokevirtual #32                 // Method setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      46: aload_0
      47: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      50: aload_0
      51: invokevirtual #33                 // Method com/jme3/bullet/PhysicsSpace.addCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      54: aload_0
      55: iconst_1
      56: putfield      #3                  // Field added:Z
      59: goto          86
      62: iload_1
      63: ifne          86
      66: aload_0
      67: getfield      #3                  // Field added:Z
      70: ifeq          86
      73: aload_0
      74: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      77: aload_0
      78: invokevirtual #34                 // Method com/jme3/bullet/PhysicsSpace.removeCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      81: aload_0
      82: iconst_0
      83: putfield      #3                  // Field added:Z
      86: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ireturn

  public void update(float);
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ifne          8
       7: return
       8: aload_0
       9: aload_0
      10: invokespecial #30                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      13: invokevirtual #24                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      16: aload_0
      17: aload_0
      18: invokespecial #31                 // Method getSpatialRotation:()Lcom/jme3/math/Quaternion;
      21: invokevirtual #32                 // Method setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      24: return

  public void render(com.jme3.renderer.RenderManager, com.jme3.renderer.ViewPort);
    Code:
       0: return

  public void setPhysicsSpace(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_1
       1: ifnonnull     27
       4: aload_0
       5: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       8: ifnull        46
      11: aload_0
      12: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      15: aload_0
      16: invokevirtual #34                 // Method com/jme3/bullet/PhysicsSpace.removeCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field added:Z
      24: goto          46
      27: aload_0
      28: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      31: aload_1
      32: if_acmpne     36
      35: return
      36: aload_1
      37: aload_0
      38: invokevirtual #33                 // Method com/jme3/bullet/PhysicsSpace.addCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      41: aload_0
      42: iconst_1
      43: putfield      #3                  // Field added:Z
      46: aload_0
      47: aload_1
      48: putfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      51: return

  public com.jme3.bullet.PhysicsSpace getPhysicsSpace();
    Code:
       0: aload_0
       1: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       4: areturn

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method com/jme3/bullet/objects/PhysicsGhostObject.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #36,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field enabled:Z
      18: ldc           #37                 // String enabled
      20: iconst_1
      21: invokeinterface #38,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      26: aload_2
      27: aload_0
      28: getfield      #5                  // Field applyLocal:Z
      31: ldc           #39                 // String applyLocalPhysics
      33: iconst_0
      34: invokeinterface #38,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      39: aload_2
      40: aload_0
      41: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      44: ldc           #40                 // String spatial
      46: aconst_null
      47: invokeinterface #41,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      52: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method com/jme3/bullet/objects/PhysicsGhostObject.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #43,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #37                 // String enabled
      17: iconst_1
      18: invokeinterface #44,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      23: putfield      #2                  // Field enabled:Z
      26: aload_0
      27: aload_2
      28: ldc           #40                 // String spatial
      30: aconst_null
      31: invokeinterface #45,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      36: checkcast     #46                 // class com/jme3/scene/Spatial
      39: putfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      42: aload_0
      43: aload_2
      44: ldc           #39                 // String applyLocalPhysics
      46: iconst_0
      47: invokeinterface #44,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      52: putfield      #5                  // Field applyLocal:Z
      55: aload_0
      56: aload_0
      57: getfield      #7                  // Field spatial:Lcom/jme3/scene/Spatial;
      60: invokevirtual #29                 // Method setUserObject:(Ljava/lang/Object;)V
      63: return
}
