Compiled from "CharacterControl.java"
public class com.jme3.bullet.control.CharacterControl extends com.jme3.bullet.objects.PhysicsCharacter implements com.jme3.bullet.control.PhysicsControl {
  protected com.jme3.scene.Spatial spatial;

  protected boolean enabled;

  protected boolean added;

  protected com.jme3.bullet.PhysicsSpace space;

  protected com.jme3.math.Vector3f viewDirection;

  protected boolean useViewDirection;

  protected boolean applyLocal;

  public com.jme3.bullet.control.CharacterControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/objects/PhysicsCharacter."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field added:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      19: aload_0
      20: new           #5                  // class com/jme3/math/Vector3f
      23: dup
      24: getstatic     #6                  // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
      27: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      30: putfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
      33: aload_0
      34: iconst_1
      35: putfield      #9                  // Field useViewDirection:Z
      38: aload_0
      39: iconst_0
      40: putfield      #10                 // Field applyLocal:Z
      43: return

  public com.jme3.bullet.control.CharacterControl(com.jme3.bullet.collision.shapes.CollisionShape, float);
    Code:
       0: aload_0
       1: aload_1
       2: fload_2
       3: invokespecial #11                 // Method com/jme3/bullet/objects/PhysicsCharacter."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
       6: aload_0
       7: iconst_1
       8: putfield      #2                  // Field enabled:Z
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field added:Z
      16: aload_0
      17: aconst_null
      18: putfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      21: aload_0
      22: new           #5                  // class com/jme3/math/Vector3f
      25: dup
      26: getstatic     #6                  // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
      29: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      32: putfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
      35: aload_0
      36: iconst_1
      37: putfield      #9                  // Field useViewDirection:Z
      40: aload_0
      41: iconst_0
      42: putfield      #10                 // Field applyLocal:Z
      45: return

  public boolean isApplyPhysicsLocal();
    Code:
       0: aload_0
       1: getfield      #10                 // Field applyLocal:Z
       4: ireturn

  public void setApplyPhysicsLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field applyLocal:Z
       5: return

  private com.jme3.math.Vector3f getSpatialTranslation();
    Code:
       0: aload_0
       1: getfield      #10                 // Field applyLocal:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      11: invokevirtual #13                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      14: areturn
      15: aload_0
      16: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      19: invokevirtual #14                 // Method com/jme3/scene/Spatial.getWorldTranslation:()Lcom/jme3/math/Vector3f;
      22: areturn

  public com.jme3.scene.control.Control cloneForSpatial(com.jme3.scene.Spatial);
    Code:
       0: new           #15                 // class com/jme3/bullet/control/CharacterControl
       3: dup
       4: aload_0
       5: getfield      #16                 // Field collisionShape:Lcom/jme3/bullet/collision/shapes/CollisionShape;
       8: aload_0
       9: getfield      #17                 // Field stepHeight:F
      12: invokespecial #18                 // Method "<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokevirtual #19                 // Method getCcdMotionThreshold:()F
      21: invokevirtual #20                 // Method setCcdMotionThreshold:(F)V
      24: aload_2
      25: aload_0
      26: invokevirtual #21                 // Method getCcdSweptSphereRadius:()F
      29: invokevirtual #22                 // Method setCcdSweptSphereRadius:(F)V
      32: aload_2
      33: aload_0
      34: invokevirtual #23                 // Method getCollideWithGroups:()I
      37: invokevirtual #24                 // Method setCollideWithGroups:(I)V
      40: aload_2
      41: aload_0
      42: invokevirtual #25                 // Method getCollisionGroup:()I
      45: invokevirtual #26                 // Method setCollisionGroup:(I)V
      48: aload_2
      49: aload_0
      50: invokevirtual #27                 // Method getFallSpeed:()F
      53: invokevirtual #28                 // Method setFallSpeed:(F)V
      56: aload_2
      57: aload_0
      58: invokevirtual #29                 // Method getGravity:()F
      61: invokevirtual #30                 // Method setGravity:(F)V
      64: aload_2
      65: aload_0
      66: invokevirtual #31                 // Method getJumpSpeed:()F
      69: invokevirtual #32                 // Method setJumpSpeed:(F)V
      72: aload_2
      73: aload_0
      74: invokevirtual #33                 // Method getMaxSlope:()F
      77: invokevirtual #34                 // Method setMaxSlope:(F)V
      80: aload_2
      81: aload_0
      82: invokevirtual #35                 // Method getPhysicsLocation:()Lcom/jme3/math/Vector3f;
      85: invokevirtual #36                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      88: aload_2
      89: aload_0
      90: invokevirtual #37                 // Method getUpAxis:()I
      93: invokevirtual #38                 // Method setUpAxis:(I)V
      96: aload_2
      97: aload_0
      98: invokevirtual #39                 // Method isApplyPhysicsLocal:()Z
     101: invokevirtual #40                 // Method setApplyPhysicsLocal:(Z)V
     104: aload_2
     105: areturn

  public void setSpatial(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
       5: aload_0
       6: aload_1
       7: invokevirtual #41                 // Method setUserObject:(Ljava/lang/Object;)V
      10: aload_1
      11: ifnonnull     15
      14: return
      15: aload_0
      16: aload_0
      17: invokespecial #42                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      20: invokevirtual #36                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      23: return

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field enabled:Z
       5: aload_0
       6: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       9: ifnull        78
      12: iload_1
      13: ifeq          54
      16: aload_0
      17: getfield      #3                  // Field added:Z
      20: ifne          54
      23: aload_0
      24: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      27: ifnull        38
      30: aload_0
      31: aload_0
      32: invokespecial #42                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      35: invokevirtual #43                 // Method warp:(Lcom/jme3/math/Vector3f;)V
      38: aload_0
      39: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      42: aload_0
      43: invokevirtual #44                 // Method com/jme3/bullet/PhysicsSpace.addCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      46: aload_0
      47: iconst_1
      48: putfield      #3                  // Field added:Z
      51: goto          78
      54: iload_1
      55: ifne          78
      58: aload_0
      59: getfield      #3                  // Field added:Z
      62: ifeq          78
      65: aload_0
      66: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      69: aload_0
      70: invokevirtual #45                 // Method com/jme3/bullet/PhysicsSpace.removeCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      73: aload_0
      74: iconst_0
      75: putfield      #3                  // Field added:Z
      78: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ireturn

  public void setViewDirection(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: return

  public com.jme3.math.Vector3f getViewDirection();
    Code:
       0: aload_0
       1: getfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
       4: areturn

  public boolean isUseViewDirection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field useViewDirection:Z
       4: ireturn

  public void setUseViewDirection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field useViewDirection:Z
       5: return

  public void update(float);
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ifeq          175
       7: aload_0
       8: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      11: ifnull        175
      14: aload_0
      15: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      18: invokevirtual #47                 // Method com/jme3/scene/Spatial.getLocalRotation:()Lcom/jme3/math/Quaternion;
      21: astore_2
      22: aload_0
      23: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      26: invokevirtual #13                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      29: astore_3
      30: aload_0
      31: getfield      #10                 // Field applyLocal:Z
      34: ifne          145
      37: aload_0
      38: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      41: invokevirtual #48                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      44: ifnull        145
      47: aload_0
      48: aload_3
      49: invokevirtual #49                 // Method getPhysicsLocation:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      52: pop
      53: aload_3
      54: aload_0
      55: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      58: invokevirtual #48                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      61: invokevirtual #50                 // Method com/jme3/scene/Node.getWorldTranslation:()Lcom/jme3/math/Vector3f;
      64: invokevirtual #51                 // Method com/jme3/math/Vector3f.subtractLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      67: pop
      68: aload_3
      69: aload_0
      70: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      73: invokevirtual #48                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      76: invokevirtual #52                 // Method com/jme3/scene/Node.getWorldScale:()Lcom/jme3/math/Vector3f;
      79: invokevirtual #53                 // Method com/jme3/math/Vector3f.divideLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      82: pop
      83: aload_0
      84: getfield      #54                 // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      87: aload_0
      88: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      91: invokevirtual #48                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      94: invokevirtual #55                 // Method com/jme3/scene/Node.getWorldRotation:()Lcom/jme3/math/Quaternion;
      97: invokevirtual #56                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     100: invokevirtual #57                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     103: aload_3
     104: invokevirtual #58                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     107: pop
     108: aload_0
     109: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
     112: aload_3
     113: invokevirtual #59                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     116: aload_0
     117: getfield      #9                  // Field useViewDirection:Z
     120: ifeq          175
     123: aload_2
     124: aload_0
     125: getfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
     128: getstatic     #60                 // Field com/jme3/math/Vector3f.UNIT_Y:Lcom/jme3/math/Vector3f;
     131: invokevirtual #61                 // Method com/jme3/math/Quaternion.lookAt:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
     134: aload_0
     135: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
     138: aload_2
     139: invokevirtual #62                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     142: goto          175
     145: aload_0
     146: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
     149: aload_0
     150: invokevirtual #35                 // Method getPhysicsLocation:()Lcom/jme3/math/Vector3f;
     153: invokevirtual #59                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     156: aload_2
     157: aload_0
     158: getfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
     161: getstatic     #60                 // Field com/jme3/math/Vector3f.UNIT_Y:Lcom/jme3/math/Vector3f;
     164: invokevirtual #61                 // Method com/jme3/math/Quaternion.lookAt:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
     167: aload_0
     168: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
     171: aload_2
     172: invokevirtual #62                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     175: return

  public void render(com.jme3.renderer.RenderManager, com.jme3.renderer.ViewPort);
    Code:
       0: return

  public void setPhysicsSpace(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_1
       1: ifnonnull     27
       4: aload_0
       5: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       8: ifnull        46
      11: aload_0
      12: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      15: aload_0
      16: invokevirtual #45                 // Method com/jme3/bullet/PhysicsSpace.removeCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      19: aload_0
      20: iconst_0
      21: putfield      #3                  // Field added:Z
      24: goto          46
      27: aload_0
      28: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      31: aload_1
      32: if_acmpne     36
      35: return
      36: aload_1
      37: aload_0
      38: invokevirtual #44                 // Method com/jme3/bullet/PhysicsSpace.addCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      41: aload_0
      42: iconst_1
      43: putfield      #3                  // Field added:Z
      46: aload_0
      47: aload_1
      48: putfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      51: return

  public com.jme3.bullet.PhysicsSpace getPhysicsSpace();
    Code:
       0: aload_0
       1: getfield      #4                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       4: areturn

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #63                 // Method com/jme3/bullet/objects/PhysicsCharacter.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #64,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #2                  // Field enabled:Z
      18: ldc           #65                 // String enabled
      20: iconst_1
      21: invokeinterface #66,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      26: aload_2
      27: aload_0
      28: getfield      #10                 // Field applyLocal:Z
      31: ldc           #67                 // String applyLocalPhysics
      33: iconst_0
      34: invokeinterface #66,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      39: aload_2
      40: aload_0
      41: getfield      #9                  // Field useViewDirection:Z
      44: ldc           #68                 // String viewDirectionEnabled
      46: iconst_1
      47: invokeinterface #66,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      52: aload_2
      53: aload_0
      54: getfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
      57: ldc           #69                 // String viewDirection
      59: new           #5                  // class com/jme3/math/Vector3f
      62: dup
      63: getstatic     #6                  // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
      66: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      69: invokeinterface #70,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      74: aload_2
      75: aload_0
      76: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      79: ldc           #71                 // String spatial
      81: aconst_null
      82: invokeinterface #70,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      87: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #72                 // Method com/jme3/bullet/objects/PhysicsCharacter.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #73,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #65                 // String enabled
      17: iconst_1
      18: invokeinterface #74,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      23: putfield      #2                  // Field enabled:Z
      26: aload_0
      27: aload_2
      28: ldc           #68                 // String viewDirectionEnabled
      30: iconst_1
      31: invokeinterface #74,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      36: putfield      #9                  // Field useViewDirection:Z
      39: aload_0
      40: aload_2
      41: ldc           #69                 // String viewDirection
      43: new           #5                  // class com/jme3/math/Vector3f
      46: dup
      47: getstatic     #6                  // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
      50: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      53: invokeinterface #75,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      58: checkcast     #5                  // class com/jme3/math/Vector3f
      61: putfield      #8                  // Field viewDirection:Lcom/jme3/math/Vector3f;
      64: aload_0
      65: aload_2
      66: ldc           #67                 // String applyLocalPhysics
      68: iconst_0
      69: invokeinterface #74,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      74: putfield      #10                 // Field applyLocal:Z
      77: aload_0
      78: aload_2
      79: ldc           #71                 // String spatial
      81: aconst_null
      82: invokeinterface #75,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      87: checkcast     #76                 // class com/jme3/scene/Spatial
      90: putfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      93: aload_0
      94: aload_0
      95: getfield      #12                 // Field spatial:Lcom/jme3/scene/Spatial;
      98: invokevirtual #41                 // Method setUserObject:(Ljava/lang/Object;)V
     101: return
}
