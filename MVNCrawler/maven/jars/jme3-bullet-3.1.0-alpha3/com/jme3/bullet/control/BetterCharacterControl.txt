Compiled from "BetterCharacterControl.java"
public class com.jme3.bullet.control.BetterCharacterControl extends com.jme3.bullet.control.AbstractPhysicsControl implements com.jme3.bullet.PhysicsTickListener {
  protected static final java.util.logging.Logger logger;

  protected com.jme3.bullet.objects.PhysicsRigidBody rigidBody;

  protected float radius;

  protected float height;

  protected float mass;

  protected float duckedFactor;

  protected final com.jme3.math.Vector3f localUp;

  protected final com.jme3.math.Vector3f localForward;

  protected final com.jme3.math.Vector3f localLeft;

  protected final com.jme3.math.Quaternion localForwardRotation;

  protected final com.jme3.math.Vector3f viewDirection;

  protected final com.jme3.math.Vector3f location;

  protected final com.jme3.math.Quaternion rotation;

  protected final com.jme3.math.Vector3f rotatedViewDirection;

  protected final com.jme3.math.Vector3f walkDirection;

  protected final com.jme3.math.Vector3f jumpForce;

  protected float physicsDamping;

  protected final com.jme3.math.Vector3f scale;

  protected final com.jme3.math.Vector3f velocity;

  protected boolean jump;

  protected boolean onGround;

  protected boolean ducked;

  protected boolean wantToUnDuck;

  public com.jme3.bullet.control.BetterCharacterControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/control/AbstractPhysicsControl."<init>":()V
       4: aload_0
       5: ldc           #2                  // float 0.6f
       7: putfield      #3                  // Field duckedFactor:F
      10: aload_0
      11: new           #4                  // class com/jme3/math/Vector3f
      14: dup
      15: fconst_0
      16: fconst_1
      17: fconst_0
      18: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      21: putfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      24: aload_0
      25: new           #4                  // class com/jme3/math/Vector3f
      28: dup
      29: fconst_0
      30: fconst_0
      31: fconst_1
      32: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      35: putfield      #7                  // Field localForward:Lcom/jme3/math/Vector3f;
      38: aload_0
      39: new           #4                  // class com/jme3/math/Vector3f
      42: dup
      43: fconst_1
      44: fconst_0
      45: fconst_0
      46: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      49: putfield      #8                  // Field localLeft:Lcom/jme3/math/Vector3f;
      52: aload_0
      53: new           #9                  // class com/jme3/math/Quaternion
      56: dup
      57: getstatic     #10                 // Field com/jme3/math/Quaternion.DIRECTION_Z:Lcom/jme3/math/Quaternion;
      60: invokespecial #11                 // Method com/jme3/math/Quaternion."<init>":(Lcom/jme3/math/Quaternion;)V
      63: putfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
      66: aload_0
      67: new           #4                  // class com/jme3/math/Vector3f
      70: dup
      71: fconst_0
      72: fconst_0
      73: fconst_1
      74: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      77: putfield      #13                 // Field viewDirection:Lcom/jme3/math/Vector3f;
      80: aload_0
      81: new           #4                  // class com/jme3/math/Vector3f
      84: dup
      85: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
      88: putfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      91: aload_0
      92: new           #9                  // class com/jme3/math/Quaternion
      95: dup
      96: getstatic     #10                 // Field com/jme3/math/Quaternion.DIRECTION_Z:Lcom/jme3/math/Quaternion;
      99: invokespecial #11                 // Method com/jme3/math/Quaternion."<init>":(Lcom/jme3/math/Quaternion;)V
     102: putfield      #16                 // Field rotation:Lcom/jme3/math/Quaternion;
     105: aload_0
     106: new           #4                  // class com/jme3/math/Vector3f
     109: dup
     110: fconst_0
     111: fconst_0
     112: fconst_1
     113: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     116: putfield      #17                 // Field rotatedViewDirection:Lcom/jme3/math/Vector3f;
     119: aload_0
     120: new           #4                  // class com/jme3/math/Vector3f
     123: dup
     124: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
     127: putfield      #18                 // Field walkDirection:Lcom/jme3/math/Vector3f;
     130: aload_0
     131: ldc           #19                 // float 0.9f
     133: putfield      #20                 // Field physicsDamping:F
     136: aload_0
     137: new           #4                  // class com/jme3/math/Vector3f
     140: dup
     141: fconst_1
     142: fconst_1
     143: fconst_1
     144: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     147: putfield      #21                 // Field scale:Lcom/jme3/math/Vector3f;
     150: aload_0
     151: new           #4                  // class com/jme3/math/Vector3f
     154: dup
     155: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
     158: putfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     161: aload_0
     162: iconst_0
     163: putfield      #23                 // Field jump:Z
     166: aload_0
     167: iconst_0
     168: putfield      #24                 // Field onGround:Z
     171: aload_0
     172: iconst_0
     173: putfield      #25                 // Field ducked:Z
     176: aload_0
     177: iconst_0
     178: putfield      #26                 // Field wantToUnDuck:Z
     181: aload_0
     182: new           #4                  // class com/jme3/math/Vector3f
     185: dup
     186: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
     189: putfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
     192: return

  public com.jme3.bullet.control.BetterCharacterControl(float, float, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/control/AbstractPhysicsControl."<init>":()V
       4: aload_0
       5: ldc           #2                  // float 0.6f
       7: putfield      #3                  // Field duckedFactor:F
      10: aload_0
      11: new           #4                  // class com/jme3/math/Vector3f
      14: dup
      15: fconst_0
      16: fconst_1
      17: fconst_0
      18: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      21: putfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      24: aload_0
      25: new           #4                  // class com/jme3/math/Vector3f
      28: dup
      29: fconst_0
      30: fconst_0
      31: fconst_1
      32: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      35: putfield      #7                  // Field localForward:Lcom/jme3/math/Vector3f;
      38: aload_0
      39: new           #4                  // class com/jme3/math/Vector3f
      42: dup
      43: fconst_1
      44: fconst_0
      45: fconst_0
      46: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      49: putfield      #8                  // Field localLeft:Lcom/jme3/math/Vector3f;
      52: aload_0
      53: new           #9                  // class com/jme3/math/Quaternion
      56: dup
      57: getstatic     #10                 // Field com/jme3/math/Quaternion.DIRECTION_Z:Lcom/jme3/math/Quaternion;
      60: invokespecial #11                 // Method com/jme3/math/Quaternion."<init>":(Lcom/jme3/math/Quaternion;)V
      63: putfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
      66: aload_0
      67: new           #4                  // class com/jme3/math/Vector3f
      70: dup
      71: fconst_0
      72: fconst_0
      73: fconst_1
      74: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      77: putfield      #13                 // Field viewDirection:Lcom/jme3/math/Vector3f;
      80: aload_0
      81: new           #4                  // class com/jme3/math/Vector3f
      84: dup
      85: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
      88: putfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      91: aload_0
      92: new           #9                  // class com/jme3/math/Quaternion
      95: dup
      96: getstatic     #10                 // Field com/jme3/math/Quaternion.DIRECTION_Z:Lcom/jme3/math/Quaternion;
      99: invokespecial #11                 // Method com/jme3/math/Quaternion."<init>":(Lcom/jme3/math/Quaternion;)V
     102: putfield      #16                 // Field rotation:Lcom/jme3/math/Quaternion;
     105: aload_0
     106: new           #4                  // class com/jme3/math/Vector3f
     109: dup
     110: fconst_0
     111: fconst_0
     112: fconst_1
     113: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     116: putfield      #17                 // Field rotatedViewDirection:Lcom/jme3/math/Vector3f;
     119: aload_0
     120: new           #4                  // class com/jme3/math/Vector3f
     123: dup
     124: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
     127: putfield      #18                 // Field walkDirection:Lcom/jme3/math/Vector3f;
     130: aload_0
     131: ldc           #19                 // float 0.9f
     133: putfield      #20                 // Field physicsDamping:F
     136: aload_0
     137: new           #4                  // class com/jme3/math/Vector3f
     140: dup
     141: fconst_1
     142: fconst_1
     143: fconst_1
     144: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     147: putfield      #21                 // Field scale:Lcom/jme3/math/Vector3f;
     150: aload_0
     151: new           #4                  // class com/jme3/math/Vector3f
     154: dup
     155: invokespecial #14                 // Method com/jme3/math/Vector3f."<init>":()V
     158: putfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     161: aload_0
     162: iconst_0
     163: putfield      #23                 // Field jump:Z
     166: aload_0
     167: iconst_0
     168: putfield      #24                 // Field onGround:Z
     171: aload_0
     172: iconst_0
     173: putfield      #25                 // Field ducked:Z
     176: aload_0
     177: iconst_0
     178: putfield      #26                 // Field wantToUnDuck:Z
     181: aload_0
     182: fload_1
     183: putfield      #28                 // Field radius:F
     186: aload_0
     187: fload_2
     188: putfield      #29                 // Field height:F
     191: aload_0
     192: fload_3
     193: putfield      #30                 // Field mass:F
     196: aload_0
     197: new           #31                 // class com/jme3/bullet/objects/PhysicsRigidBody
     200: dup
     201: aload_0
     202: invokevirtual #32                 // Method getShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
     205: fload_3
     206: invokespecial #33                 // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
     209: putfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     212: aload_0
     213: new           #4                  // class com/jme3/math/Vector3f
     216: dup
     217: fconst_0
     218: fload_3
     219: ldc           #35                 // float 5.0f
     221: fmul
     222: fconst_0
     223: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     226: putfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
     229: aload_0
     230: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     233: fconst_0
     234: invokevirtual #36                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setAngularFactor:(F)V
     237: return

  public void update(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokespecial #37                 // Method com/jme3/bullet/control/AbstractPhysicsControl.update:(F)V
       5: aload_0
       6: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       9: aload_0
      10: getfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      13: invokevirtual #38                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getPhysicsLocation:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      16: pop
      17: aload_0
      18: aload_0
      19: getfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      22: aload_0
      23: getfield      #16                 // Field rotation:Lcom/jme3/math/Quaternion;
      26: invokevirtual #39                 // Method applyPhysicsTransform:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
      29: return

  public void render(com.jme3.renderer.RenderManager, com.jme3.renderer.ViewPort);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #40                 // Method com/jme3/bullet/control/AbstractPhysicsControl.render:(Lcom/jme3/renderer/RenderManager;Lcom/jme3/renderer/ViewPort;)V
       6: return

  public void prePhysicsTick(com.jme3.bullet.PhysicsSpace, float);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method checkOnGround:()V
       4: aload_0
       5: getfield      #26                 // Field wantToUnDuck:Z
       8: ifeq          33
      11: aload_0
      12: invokevirtual #42                 // Method checkCanUnDuck:()Z
      15: ifeq          33
      18: aload_0
      19: fconst_1
      20: invokevirtual #43                 // Method setHeightPercent:(F)V
      23: aload_0
      24: iconst_0
      25: putfield      #26                 // Field wantToUnDuck:Z
      28: aload_0
      29: iconst_0
      30: putfield      #25                 // Field ducked:Z
      33: invokestatic  #44                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
      36: astore_3
      37: aload_3
      38: getfield      #45                 // Field com/jme3/util/TempVars.vect2:Lcom/jme3/math/Vector3f;
      41: aload_0
      42: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
      45: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      48: astore        4
      50: aload_0
      51: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
      54: aload_0
      55: getfield      #8                  // Field localLeft:Lcom/jme3/math/Vector3f;
      58: invokevirtual #47                 // Method com/jme3/math/Vector3f.dot:(Lcom/jme3/math/Vector3f;)F
      61: fstore        5
      63: aload_0
      64: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
      67: aload_0
      68: getfield      #7                  // Field localForward:Lcom/jme3/math/Vector3f;
      71: invokevirtual #47                 // Method com/jme3/math/Vector3f.dot:(Lcom/jme3/math/Vector3f;)F
      74: fstore        6
      76: aload_3
      77: getfield      #48                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
      80: astore        7
      82: fload         5
      84: aload_0
      85: getfield      #20                 // Field physicsDamping:F
      88: fmul
      89: fstore        5
      91: fload         6
      93: aload_0
      94: getfield      #20                 // Field physicsDamping:F
      97: fmul
      98: fstore        6
     100: aload         7
     102: fload         5
     104: fneg
     105: fconst_0
     106: fload         6
     108: fneg
     109: invokevirtual #49                 // Method com/jme3/math/Vector3f.set:(FFF)Lcom/jme3/math/Vector3f;
     112: pop
     113: aload_0
     114: getfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
     117: aload         7
     119: invokevirtual #50                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     122: pop
     123: aload_0
     124: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     127: aload         7
     129: invokevirtual #51                 // Method com/jme3/math/Vector3f.addLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     132: pop
     133: aload_0
     134: getfield      #18                 // Field walkDirection:Lcom/jme3/math/Vector3f;
     137: invokevirtual #52                 // Method com/jme3/math/Vector3f.length:()F
     140: fstore        8
     142: fload         8
     144: fconst_0
     145: fcmpl
     146: ifle          204
     149: aload_3
     150: getfield      #48                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
     153: astore        9
     155: aload         9
     157: aload_0
     158: getfield      #18                 // Field walkDirection:Lcom/jme3/math/Vector3f;
     161: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     164: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
     167: pop
     168: aload_0
     169: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     172: aload         9
     174: invokevirtual #47                 // Method com/jme3/math/Vector3f.dot:(Lcom/jme3/math/Vector3f;)F
     177: fstore        10
     179: fload         8
     181: fload         10
     183: fsub
     184: fstore        11
     186: aload         9
     188: fload         11
     190: invokevirtual #54                 // Method com/jme3/math/Vector3f.multLocal:(F)Lcom/jme3/math/Vector3f;
     193: pop
     194: aload_0
     195: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     198: aload         9
     200: invokevirtual #51                 // Method com/jme3/math/Vector3f.addLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     203: pop
     204: aload         4
     206: aload_0
     207: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     210: invokevirtual #55                 // Method com/jme3/math/Vector3f.distance:(Lcom/jme3/math/Vector3f;)F
     213: ldc           #56                 // float 1.0E-4f
     215: fcmpl
     216: ifle          230
     219: aload_0
     220: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     223: aload_0
     224: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
     227: invokevirtual #57                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setLinearVelocity:(Lcom/jme3/math/Vector3f;)V
     230: aload_0
     231: getfield      #23                 // Field jump:Z
     234: ifeq          277
     237: aload_3
     238: getfield      #48                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
     241: astore        9
     243: aload         9
     245: aload_0
     246: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
     249: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     252: pop
     253: aload_0
     254: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     257: aload_0
     258: getfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
     261: aload         9
     263: invokevirtual #50                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     266: getstatic     #58                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     269: invokevirtual #59                 // Method com/jme3/bullet/objects/PhysicsRigidBody.applyImpulse:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
     272: aload_0
     273: iconst_0
     274: putfield      #23                 // Field jump:Z
     277: aload_3
     278: invokevirtual #60                 // Method com/jme3/util/TempVars.release:()V
     281: return

  public void physicsTick(com.jme3.bullet.PhysicsSpace, float);
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: aload_0
       5: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
       8: invokevirtual #61                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getLinearVelocity:(Lcom/jme3/math/Vector3f;)V
      11: return

  public void warp(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
       5: return

  public void jump();
    Code:
       0: aload_0
       1: getfield      #24                 // Field onGround:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #23                 // Field jump:Z
      13: return

  public void setJumpForce(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: return

  public com.jme3.math.Vector3f getJumpForce();
    Code:
       0: aload_0
       1: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
       4: areturn

  public boolean isOnGround();
    Code:
       0: aload_0
       1: getfield      #24                 // Field onGround:Z
       4: ireturn

  public void setDucked(boolean);
    Code:
       0: iload_1
       1: ifeq          25
       4: aload_0
       5: aload_0
       6: getfield      #3                  // Field duckedFactor:F
       9: invokevirtual #43                 // Method setHeightPercent:(F)V
      12: aload_0
      13: iconst_1
      14: putfield      #25                 // Field ducked:Z
      17: aload_0
      18: iconst_0
      19: putfield      #26                 // Field wantToUnDuck:Z
      22: goto          50
      25: aload_0
      26: invokevirtual #42                 // Method checkCanUnDuck:()Z
      29: ifeq          45
      32: aload_0
      33: fconst_1
      34: invokevirtual #43                 // Method setHeightPercent:(F)V
      37: aload_0
      38: iconst_0
      39: putfield      #25                 // Field ducked:Z
      42: goto          50
      45: aload_0
      46: iconst_1
      47: putfield      #26                 // Field wantToUnDuck:Z
      50: return

  public boolean isDucked();
    Code:
       0: aload_0
       1: getfield      #25                 // Field ducked:Z
       4: ireturn

  public void setDuckedFactor(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #3                  // Field duckedFactor:F
       5: return

  public float getDuckedFactor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field duckedFactor:F
       4: freturn

  public void setWalkDirection(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #18                 // Field walkDirection:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: return

  public com.jme3.math.Vector3f getWalkDirection();
    Code:
       0: aload_0
       1: getfield      #18                 // Field walkDirection:Lcom/jme3/math/Vector3f;
       4: areturn

  public void setViewDirection(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #13                 // Field viewDirection:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: invokevirtual #63                 // Method updateLocalViewDirection:()V
      13: return

  public com.jme3.math.Vector3f getViewDirection();
    Code:
       0: aload_0
       1: getfield      #13                 // Field viewDirection:Lcom/jme3/math/Vector3f;
       4: areturn

  public void resetForward(com.jme3.math.Vector3f);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #64                 // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field localForward:Lcom/jme3/math/Vector3f;
      12: aload_1
      13: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      16: pop
      17: aload_0
      18: invokevirtual #65                 // Method updateLocalCoordinateSystem:()V
      21: return

  public com.jme3.math.Vector3f getVelocity();
    Code:
       0: aload_0
       1: getfield      #22                 // Field velocity:Lcom/jme3/math/Vector3f;
       4: areturn

  public void setGravity(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: aload_1
       5: invokevirtual #66                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setGravity:(Lcom/jme3/math/Vector3f;)V
       8: aload_0
       9: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      12: aload_1
      13: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      16: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
      19: invokevirtual #67                 // Method com/jme3/math/Vector3f.negateLocal:()Lcom/jme3/math/Vector3f;
      22: pop
      23: aload_0
      24: invokevirtual #65                 // Method updateLocalCoordinateSystem:()V
      27: return

  public com.jme3.math.Vector3f getGravity();
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: invokevirtual #68                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getGravity:()Lcom/jme3/math/Vector3f;
       7: areturn

  public com.jme3.math.Vector3f getGravity(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: aload_1
       5: invokevirtual #69                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getGravity:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: areturn

  public void setPhysicsDamping(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #20                 // Field physicsDamping:F
       5: return

  public float getPhysicsDamping();
    Code:
       0: aload_0
       1: getfield      #20                 // Field physicsDamping:F
       4: freturn

  protected void setHeightPercent(float);
    Code:
       0: aload_0
       1: getfield      #21                 // Field scale:Lcom/jme3/math/Vector3f;
       4: fload_1
       5: invokevirtual #70                 // Method com/jme3/math/Vector3f.setY:(F)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      13: aload_0
      14: invokevirtual #32                 // Method getShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
      17: invokevirtual #71                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setCollisionShape:(Lcom/jme3/bullet/collision/shapes/CollisionShape;)V
      20: return

  protected void checkOnGround();
    Code:
       0: invokestatic  #44                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
       3: astore_1
       4: aload_1
       5: getfield      #48                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
       8: astore_2
       9: aload_1
      10: getfield      #45                 // Field com/jme3/util/TempVars.vect2:Lcom/jme3/math/Vector3f;
      13: astore_3
      14: aload_0
      15: invokevirtual #72                 // Method getFinalHeight:()F
      18: fstore        4
      20: aload_2
      21: aload_0
      22: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      25: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      28: fload         4
      30: invokevirtual #54                 // Method com/jme3/math/Vector3f.multLocal:(F)Lcom/jme3/math/Vector3f;
      33: aload_0
      34: getfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      37: invokevirtual #51                 // Method com/jme3/math/Vector3f.addLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      40: pop
      41: aload_3
      42: aload_0
      43: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      46: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      49: fload         4
      51: fneg
      52: ldc           #73                 // float 0.1f
      54: fsub
      55: invokevirtual #54                 // Method com/jme3/math/Vector3f.multLocal:(F)Lcom/jme3/math/Vector3f;
      58: aload_2
      59: invokevirtual #51                 // Method com/jme3/math/Vector3f.addLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      62: pop
      63: aload_0
      64: getfield      #74                 // Field space:Lcom/jme3/bullet/PhysicsSpace;
      67: aload_2
      68: aload_3
      69: invokevirtual #75                 // Method com/jme3/bullet/PhysicsSpace.rayTest:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Ljava/util/List;
      72: astore        5
      74: aload_1
      75: invokevirtual #60                 // Method com/jme3/util/TempVars.release:()V
      78: aload         5
      80: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      85: astore        6
      87: aload         6
      89: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          133
      97: aload         6
      99: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #79                 // class com/jme3/bullet/collision/PhysicsRayTestResult
     107: astore        7
     109: aload         7
     111: invokevirtual #80                 // Method com/jme3/bullet/collision/PhysicsRayTestResult.getCollisionObject:()Lcom/jme3/bullet/collision/PhysicsCollisionObject;
     114: aload_0
     115: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     118: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     121: ifne          130
     124: aload_0
     125: iconst_1
     126: putfield      #24                 // Field onGround:Z
     129: return
     130: goto          87
     133: aload_0
     134: iconst_0
     135: putfield      #24                 // Field onGround:Z
     138: return

  protected boolean checkCanUnDuck();
    Code:
       0: invokestatic  #44                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
       3: astore_1
       4: aload_1
       5: getfield      #48                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
       8: astore_2
       9: aload_1
      10: getfield      #45                 // Field com/jme3/util/TempVars.vect2:Lcom/jme3/math/Vector3f;
      13: astore_3
      14: aload_2
      15: aload_0
      16: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      19: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      22: ldc           #56                 // float 1.0E-4f
      24: invokevirtual #54                 // Method com/jme3/math/Vector3f.multLocal:(F)Lcom/jme3/math/Vector3f;
      27: aload_0
      28: getfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      31: invokevirtual #51                 // Method com/jme3/math/Vector3f.addLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      34: pop
      35: aload_3
      36: aload_0
      37: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      40: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      43: aload_0
      44: getfield      #29                 // Field height:F
      47: ldc           #56                 // float 1.0E-4f
      49: fadd
      50: invokevirtual #54                 // Method com/jme3/math/Vector3f.multLocal:(F)Lcom/jme3/math/Vector3f;
      53: aload_2
      54: invokevirtual #51                 // Method com/jme3/math/Vector3f.addLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      57: pop
      58: aload_0
      59: getfield      #74                 // Field space:Lcom/jme3/bullet/PhysicsSpace;
      62: aload_2
      63: aload_3
      64: invokevirtual #75                 // Method com/jme3/bullet/PhysicsSpace.rayTest:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Ljava/util/List;
      67: astore        4
      69: aload_1
      70: invokevirtual #60                 // Method com/jme3/util/TempVars.release:()V
      73: aload         4
      75: invokeinterface #76,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      80: astore        5
      82: aload         5
      84: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          124
      92: aload         5
      94: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      99: checkcast     #79                 // class com/jme3/bullet/collision/PhysicsRayTestResult
     102: astore        6
     104: aload         6
     106: invokevirtual #80                 // Method com/jme3/bullet/collision/PhysicsRayTestResult.getCollisionObject:()Lcom/jme3/bullet/collision/PhysicsCollisionObject;
     109: aload_0
     110: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     113: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     116: ifne          121
     119: iconst_0
     120: ireturn
     121: goto          82
     124: iconst_1
     125: ireturn

  protected com.jme3.bullet.collision.shapes.CollisionShape getShape();
    Code:
       0: new           #82                 // class com/jme3/bullet/collision/shapes/CapsuleCollisionShape
       3: dup
       4: aload_0
       5: invokevirtual #83                 // Method getFinalRadius:()F
       8: aload_0
       9: invokevirtual #72                 // Method getFinalHeight:()F
      12: fconst_2
      13: aload_0
      14: invokevirtual #83                 // Method getFinalRadius:()F
      17: fmul
      18: fsub
      19: invokespecial #84                 // Method com/jme3/bullet/collision/shapes/CapsuleCollisionShape."<init>":(FF)V
      22: astore_1
      23: new           #85                 // class com/jme3/bullet/collision/shapes/CompoundCollisionShape
      26: dup
      27: invokespecial #86                 // Method com/jme3/bullet/collision/shapes/CompoundCollisionShape."<init>":()V
      30: astore_2
      31: new           #4                  // class com/jme3/math/Vector3f
      34: dup
      35: fconst_0
      36: aload_0
      37: invokevirtual #72                 // Method getFinalHeight:()F
      40: fconst_2
      41: fdiv
      42: fconst_0
      43: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      46: astore_3
      47: aload_2
      48: aload_1
      49: aload_3
      50: invokevirtual #87                 // Method com/jme3/bullet/collision/shapes/CompoundCollisionShape.addChildShape:(Lcom/jme3/bullet/collision/shapes/CollisionShape;Lcom/jme3/math/Vector3f;)V
      53: aload_2
      54: areturn

  protected float getFinalHeight();
    Code:
       0: aload_0
       1: getfield      #29                 // Field height:F
       4: aload_0
       5: getfield      #21                 // Field scale:Lcom/jme3/math/Vector3f;
       8: invokevirtual #88                 // Method com/jme3/math/Vector3f.getY:()F
      11: fmul
      12: freturn

  protected float getFinalRadius();
    Code:
       0: aload_0
       1: getfield      #28                 // Field radius:F
       4: aload_0
       5: getfield      #21                 // Field scale:Lcom/jme3/math/Vector3f;
       8: invokevirtual #89                 // Method com/jme3/math/Vector3f.getZ:()F
      11: fmul
      12: freturn

  protected void updateLocalCoordinateSystem();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
       5: aload_0
       6: getfield      #7                  // Field localForward:Lcom/jme3/math/Vector3f;
       9: aload_0
      10: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      13: invokevirtual #90                 // Method calculateNewForward:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
      16: aload_0
      17: getfield      #8                  // Field localLeft:Lcom/jme3/math/Vector3f;
      20: aload_0
      21: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      24: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      27: aload_0
      28: getfield      #7                  // Field localForward:Lcom/jme3/math/Vector3f;
      31: invokevirtual #91                 // Method com/jme3/math/Vector3f.crossLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      34: pop
      35: aload_0
      36: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      39: aload_0
      40: getfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
      43: invokevirtual #92                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      46: aload_0
      47: invokevirtual #63                 // Method updateLocalViewDirection:()V
      50: return

  protected void updateLocalViewDirection();
    Code:
       0: aload_0
       1: getfield      #12                 // Field localForwardRotation:Lcom/jme3/math/Quaternion;
       4: aload_0
       5: getfield      #17                 // Field rotatedViewDirection:Lcom/jme3/math/Vector3f;
       8: aload_0
       9: getfield      #13                 // Field viewDirection:Lcom/jme3/math/Vector3f;
      12: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      15: invokevirtual #50                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      18: pop
      19: aload_0
      20: aload_0
      21: getfield      #16                 // Field rotation:Lcom/jme3/math/Quaternion;
      24: aload_0
      25: getfield      #17                 // Field rotatedViewDirection:Lcom/jme3/math/Vector3f;
      28: aload_0
      29: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
      32: invokevirtual #90                 // Method calculateNewForward:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
      35: return

  protected final void calculateNewForward(com.jme3.math.Quaternion, com.jme3.math.Vector3f, com.jme3.math.Vector3f);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: invokestatic  #44                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
       8: astore        4
      10: aload         4
      12: getfield      #48                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
      15: astore        5
      17: aload         4
      19: getfield      #45                 // Field com/jme3/util/TempVars.vect2:Lcom/jme3/math/Vector3f;
      22: astore        6
      24: aload         5
      26: aload_3
      27: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      30: aload_2
      31: invokevirtual #91                 // Method com/jme3/math/Vector3f.crossLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      34: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
      37: pop
      38: aload         5
      40: getstatic     #58                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
      43: invokevirtual #93                 // Method com/jme3/math/Vector3f.equals:(Ljava/lang/Object;)Z
      46: ifeq          122
      49: aload_2
      50: getfield      #94                 // Field com/jme3/math/Vector3f.x:F
      53: fconst_0
      54: fcmpl
      55: ifeq          80
      58: aload         5
      60: aload_2
      61: getfield      #95                 // Field com/jme3/math/Vector3f.y:F
      64: aload_2
      65: getfield      #94                 // Field com/jme3/math/Vector3f.x:F
      68: fneg
      69: fconst_0
      70: invokevirtual #49                 // Method com/jme3/math/Vector3f.set:(FFF)Lcom/jme3/math/Vector3f;
      73: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
      76: pop
      77: goto          99
      80: aload         5
      82: fconst_0
      83: aload_2
      84: getfield      #96                 // Field com/jme3/math/Vector3f.z:F
      87: aload_2
      88: getfield      #95                 // Field com/jme3/math/Vector3f.y:F
      91: fneg
      92: invokevirtual #49                 // Method com/jme3/math/Vector3f.set:(FFF)Lcom/jme3/math/Vector3f;
      95: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
      98: pop
      99: getstatic     #97                 // Field logger:Ljava/util/logging/Logger;
     102: getstatic     #98                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     105: ldc           #99                 // String Zero left for direction {0}, up {1}
     107: iconst_2
     108: anewarray     #100                // class java/lang/Object
     111: dup
     112: iconst_0
     113: aload_2
     114: aastore
     115: dup
     116: iconst_1
     117: aload_3
     118: aastore
     119: invokevirtual #101                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
     122: aload         6
     124: aload         5
     126: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     129: invokevirtual #67                 // Method com/jme3/math/Vector3f.negateLocal:()Lcom/jme3/math/Vector3f;
     132: pop
     133: aload_2
     134: aload_3
     135: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     138: aload         6
     140: invokevirtual #91                 // Method com/jme3/math/Vector3f.crossLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     143: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
     146: pop
     147: aload_2
     148: getstatic     #58                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     151: invokevirtual #93                 // Method com/jme3/math/Vector3f.equals:(Ljava/lang/Object;)Z
     154: ifeq          189
     157: aload_2
     158: getstatic     #64                 // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
     161: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     164: pop
     165: getstatic     #97                 // Field logger:Ljava/util/logging/Logger;
     168: getstatic     #98                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     171: ldc           #102                // String Zero left for left {0}, up {1}
     173: iconst_2
     174: anewarray     #100                // class java/lang/Object
     177: dup
     178: iconst_0
     179: aload         5
     181: aastore
     182: dup
     183: iconst_1
     184: aload_3
     185: aastore
     186: invokevirtual #101                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
     189: aload_1
     190: ifnull        202
     193: aload_1
     194: aload         5
     196: aload_3
     197: aload_2
     198: invokevirtual #103                // Method com/jme3/math/Quaternion.fromAxes:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Quaternion;
     201: pop
     202: aload         4
     204: invokevirtual #60                 // Method com/jme3/util/TempVars.release:()V
     207: return

  protected void setPhysicsLocation(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: aload_1
       5: invokevirtual #104                // Method com/jme3/bullet/objects/PhysicsRigidBody.setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
       8: aload_0
       9: getfield      #15                 // Field location:Lcom/jme3/math/Vector3f;
      12: aload_1
      13: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      16: pop
      17: return

  protected void setPhysicsRotation(com.jme3.math.Quaternion);
    Code:
       0: aload_0
       1: getfield      #16                 // Field rotation:Lcom/jme3/math/Quaternion;
       4: aload_1
       5: invokevirtual #105                // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
       8: pop
       9: aload_0
      10: getfield      #16                 // Field rotation:Lcom/jme3/math/Quaternion;
      13: aload_0
      14: getfield      #17                 // Field rotatedViewDirection:Lcom/jme3/math/Vector3f;
      17: aload_0
      18: getfield      #13                 // Field viewDirection:Lcom/jme3/math/Vector3f;
      21: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      24: invokevirtual #50                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      27: pop
      28: aload_0
      29: invokevirtual #63                 // Method updateLocalViewDirection:()V
      32: return

  protected void addPhysics(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field localUp:Lcom/jme3/math/Vector3f;
       5: invokevirtual #106                // Method com/jme3/bullet/PhysicsSpace.getGravity:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: invokevirtual #53                 // Method com/jme3/math/Vector3f.normalizeLocal:()Lcom/jme3/math/Vector3f;
      11: invokevirtual #67                 // Method com/jme3/math/Vector3f.negateLocal:()Lcom/jme3/math/Vector3f;
      14: pop
      15: aload_0
      16: invokevirtual #65                 // Method updateLocalCoordinateSystem:()V
      19: aload_1
      20: aload_0
      21: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      24: invokevirtual #107                // Method com/jme3/bullet/PhysicsSpace.addCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
      27: aload_1
      28: aload_0
      29: invokevirtual #108                // Method com/jme3/bullet/PhysicsSpace.addTickListener:(Lcom/jme3/bullet/PhysicsTickListener;)V
      32: return

  protected void removePhysics(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       5: invokevirtual #109                // Method com/jme3/bullet/PhysicsSpace.removeCollisionObject:(Lcom/jme3/bullet/collision/PhysicsCollisionObject;)V
       8: aload_1
       9: aload_0
      10: invokevirtual #110                // Method com/jme3/bullet/PhysicsSpace.removeTickListener:(Lcom/jme3/bullet/PhysicsTickListener;)V
      13: return

  protected void createSpatialData(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: aload_0
       5: getfield      #111                // Field spatial:Lcom/jme3/scene/Spatial;
       8: invokevirtual #112                // Method com/jme3/bullet/objects/PhysicsRigidBody.setUserObject:(Ljava/lang/Object;)V
      11: return

  protected void removeSpatialData(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: aconst_null
       5: invokevirtual #112                // Method com/jme3/bullet/objects/PhysicsRigidBody.setUserObject:(Ljava/lang/Object;)V
       8: return

  public com.jme3.scene.control.Control cloneForSpatial(com.jme3.scene.Spatial);
    Code:
       0: new           #113                // class com/jme3/bullet/control/BetterCharacterControl
       3: dup
       4: aload_0
       5: getfield      #28                 // Field radius:F
       8: aload_0
       9: getfield      #29                 // Field height:F
      12: aload_0
      13: getfield      #30                 // Field mass:F
      16: invokespecial #114                // Method "<init>":(FFF)V
      19: astore_2
      20: aload_2
      21: aload_0
      22: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
      25: invokevirtual #115                // Method setJumpForce:(Lcom/jme3/math/Vector3f;)V
      28: aload_2
      29: areturn

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #116                // Method com/jme3/bullet/control/AbstractPhysicsControl.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #117,  2          // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #28                 // Field radius:F
      18: ldc           #118                // String radius
      20: fconst_1
      21: invokeinterface #119,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      26: aload_2
      27: aload_0
      28: getfield      #29                 // Field height:F
      31: ldc           #120                // String height
      33: fconst_1
      34: invokeinterface #119,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      39: aload_2
      40: aload_0
      41: getfield      #30                 // Field mass:F
      44: ldc           #121                // String mass
      46: fconst_1
      47: invokeinterface #119,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      52: aload_2
      53: aload_0
      54: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
      57: ldc           #122                // String jumpForce
      59: new           #4                  // class com/jme3/math/Vector3f
      62: dup
      63: fconst_0
      64: aload_0
      65: getfield      #30                 // Field mass:F
      68: ldc           #35                 // float 5.0f
      70: fmul
      71: fconst_0
      72: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      75: invokeinterface #123,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      80: aload_2
      81: aload_0
      82: getfield      #20                 // Field physicsDamping:F
      85: ldc           #124                // String physicsDamping
      87: ldc           #19                 // float 0.9f
      89: invokeinterface #119,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      94: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #125                // Method com/jme3/bullet/control/AbstractPhysicsControl.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #126,  2          // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #118                // String radius
      17: fconst_1
      18: invokeinterface #127,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      23: putfield      #28                 // Field radius:F
      26: aload_0
      27: aload_2
      28: ldc           #120                // String height
      30: fconst_2
      31: invokeinterface #127,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      36: putfield      #29                 // Field height:F
      39: aload_0
      40: aload_2
      41: ldc           #121                // String mass
      43: ldc           #128                // float 80.0f
      45: invokeinterface #127,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      50: putfield      #30                 // Field mass:F
      53: aload_0
      54: aload_2
      55: ldc           #124                // String physicsDamping
      57: ldc           #19                 // float 0.9f
      59: invokeinterface #127,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      64: putfield      #20                 // Field physicsDamping:F
      67: aload_0
      68: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
      71: aload_2
      72: ldc           #122                // String jumpForce
      74: new           #4                  // class com/jme3/math/Vector3f
      77: dup
      78: fconst_0
      79: aload_0
      80: getfield      #30                 // Field mass:F
      83: ldc           #35                 // float 5.0f
      85: fmul
      86: fconst_0
      87: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
      90: invokeinterface #129,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      95: checkcast     #4                  // class com/jme3/math/Vector3f
      98: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     101: pop
     102: aload_0
     103: new           #31                 // class com/jme3/bullet/objects/PhysicsRigidBody
     106: dup
     107: aload_0
     108: invokevirtual #32                 // Method getShape:()Lcom/jme3/bullet/collision/shapes/CollisionShape;
     111: aload_0
     112: getfield      #30                 // Field mass:F
     115: invokespecial #33                 // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
     118: putfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     121: aload_0
     122: getfield      #27                 // Field jumpForce:Lcom/jme3/math/Vector3f;
     125: new           #4                  // class com/jme3/math/Vector3f
     128: dup
     129: fconst_0
     130: aload_0
     131: getfield      #30                 // Field mass:F
     134: ldc           #35                 // float 5.0f
     136: fmul
     137: fconst_0
     138: invokespecial #5                  // Method com/jme3/math/Vector3f."<init>":(FFF)V
     141: invokevirtual #46                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     144: pop
     145: aload_0
     146: getfield      #34                 // Field rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     149: fconst_0
     150: invokevirtual #36                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setAngularFactor:(F)V
     153: return

  static {};
    Code:
       0: ldc_w         #113                // class com/jme3/bullet/control/BetterCharacterControl
       3: invokevirtual #130                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #131                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: putstatic     #97                 // Field logger:Ljava/util/logging/Logger;
      12: return
}
