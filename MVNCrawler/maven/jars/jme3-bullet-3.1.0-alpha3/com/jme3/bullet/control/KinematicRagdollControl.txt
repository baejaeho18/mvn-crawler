Compiled from "KinematicRagdollControl.java"
public class com.jme3.bullet.control.KinematicRagdollControl extends com.jme3.bullet.control.AbstractPhysicsControl implements com.jme3.bullet.collision.PhysicsCollisionListener {
  protected static final java.util.logging.Logger logger;

  protected java.util.List<com.jme3.bullet.collision.RagdollCollisionListener> listeners;

  protected final java.util.Set<java.lang.String> boneList;

  protected final java.util.Map<java.lang.String, com.jme3.bullet.control.KinematicRagdollControl$PhysicsBoneLink> boneLinks;

  protected final com.jme3.math.Vector3f modelPosition;

  protected final com.jme3.math.Quaternion modelRotation;

  protected final com.jme3.bullet.objects.PhysicsRigidBody baseRigidBody;

  protected com.jme3.scene.Spatial targetModel;

  protected com.jme3.animation.Skeleton skeleton;

  protected com.jme3.bullet.control.ragdoll.RagdollPreset preset;

  protected com.jme3.math.Vector3f initScale;

  protected com.jme3.bullet.control.KinematicRagdollControl$Mode mode;

  protected boolean debug;

  protected boolean blendedControl;

  protected float weightThreshold;

  protected float blendStart;

  protected float blendTime;

  protected float eventDispatchImpulseThreshold;

  protected float rootMass;

  protected float totalMass;

  private java.util.Map<java.lang.String, com.jme3.math.Vector3f> ikTargets;

  private java.util.Map<java.lang.String, java.lang.Integer> ikChainDepth;

  private float ikRotSpeed;

  private float limbDampening;

  private float IKThreshold;

  public com.jme3.bullet.control.KinematicRagdollControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/control/AbstractPhysicsControl."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeSet
       8: dup
       9: invokespecial #3                  // Method java/util/TreeSet."<init>":()V
      12: putfield      #4                  // Field boneList:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field boneLinks:Ljava/util/Map;
      26: aload_0
      27: new           #8                  // class com/jme3/math/Vector3f
      30: dup
      31: invokespecial #9                  // Method com/jme3/math/Vector3f."<init>":()V
      34: putfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
      37: aload_0
      38: new           #11                 // class com/jme3/math/Quaternion
      41: dup
      42: invokespecial #12                 // Method com/jme3/math/Quaternion."<init>":()V
      45: putfield      #13                 // Field modelRotation:Lcom/jme3/math/Quaternion;
      48: aload_0
      49: new           #14                 // class com/jme3/bullet/control/ragdoll/HumanoidRagdollPreset
      52: dup
      53: invokespecial #15                 // Method com/jme3/bullet/control/ragdoll/HumanoidRagdollPreset."<init>":()V
      56: putfield      #16                 // Field preset:Lcom/jme3/bullet/control/ragdoll/RagdollPreset;
      59: aload_0
      60: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      63: putfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      66: aload_0
      67: iconst_0
      68: putfield      #19                 // Field debug:Z
      71: aload_0
      72: iconst_0
      73: putfield      #20                 // Field blendedControl:Z
      76: aload_0
      77: ldc           #21                 // float -1.0f
      79: putfield      #22                 // Field weightThreshold:F
      82: aload_0
      83: fconst_0
      84: putfield      #23                 // Field blendStart:F
      87: aload_0
      88: fconst_1
      89: putfield      #24                 // Field blendTime:F
      92: aload_0
      93: ldc           #25                 // float 10.0f
      95: putfield      #26                 // Field eventDispatchImpulseThreshold:F
      98: aload_0
      99: ldc           #27                 // float 15.0f
     101: putfield      #28                 // Field rootMass:F
     104: aload_0
     105: fconst_0
     106: putfield      #29                 // Field totalMass:F
     109: aload_0
     110: new           #5                  // class java/util/HashMap
     113: dup
     114: invokespecial #6                  // Method java/util/HashMap."<init>":()V
     117: putfield      #30                 // Field ikTargets:Ljava/util/Map;
     120: aload_0
     121: new           #5                  // class java/util/HashMap
     124: dup
     125: invokespecial #6                  // Method java/util/HashMap."<init>":()V
     128: putfield      #31                 // Field ikChainDepth:Ljava/util/Map;
     131: aload_0
     132: ldc           #32                 // float 7.0f
     134: putfield      #33                 // Field ikRotSpeed:F
     137: aload_0
     138: ldc           #34                 // float 0.6f
     140: putfield      #35                 // Field limbDampening:F
     143: aload_0
     144: ldc           #36                 // float 0.1f
     146: putfield      #37                 // Field IKThreshold:F
     149: aload_0
     150: new           #38                 // class com/jme3/bullet/objects/PhysicsRigidBody
     153: dup
     154: new           #39                 // class com/jme3/bullet/collision/shapes/BoxCollisionShape
     157: dup
     158: getstatic     #40                 // Field com/jme3/math/Vector3f.UNIT_XYZ:Lcom/jme3/math/Vector3f;
     161: ldc           #36                 // float 0.1f
     163: invokevirtual #41                 // Method com/jme3/math/Vector3f.mult:(F)Lcom/jme3/math/Vector3f;
     166: invokespecial #42                 // Method com/jme3/bullet/collision/shapes/BoxCollisionShape."<init>":(Lcom/jme3/math/Vector3f;)V
     169: fconst_1
     170: invokespecial #43                 // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
     173: putfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     176: aload_0
     177: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     180: aload_0
     181: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     184: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     187: if_acmpne     194
     190: iconst_1
     191: goto          195
     194: iconst_0
     195: invokevirtual #45                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
     198: return

  public com.jme3.bullet.control.KinematicRagdollControl(float);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method "<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #22                 // Field weightThreshold:F
       9: return

  public com.jme3.bullet.control.KinematicRagdollControl(com.jme3.bullet.control.ragdoll.RagdollPreset, float);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #16                 // Field preset:Lcom/jme3/bullet/control/ragdoll/RagdollPreset;
       9: aload_0
      10: fload_2
      11: putfield      #22                 // Field weightThreshold:F
      14: return

  public com.jme3.bullet.control.KinematicRagdollControl(com.jme3.bullet.control.ragdoll.RagdollPreset);
    Code:
       0: aload_0
       1: invokespecial #46                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #16                 // Field preset:Lcom/jme3/bullet/control/ragdoll/RagdollPreset;
       9: return

  public void update(float);
    Code:
       0: aload_0
       1: getfield      #47                 // Field enabled:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      12: getstatic     #48                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.IK:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      15: if_acmpne     26
      18: aload_0
      19: fload_1
      20: invokespecial #49                 // Method ikUpdate:(F)V
      23: goto          71
      26: aload_0
      27: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      30: aload_0
      31: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      34: pop
      35: getstatic     #50                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Ragdoll:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      38: if_acmpne     66
      41: aload_0
      42: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
      45: invokevirtual #52                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      48: aload_0
      49: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
      52: invokevirtual #53                 // Method com/jme3/math/Vector3f.equals:(Ljava/lang/Object;)Z
      55: ifeq          66
      58: aload_0
      59: fload_1
      60: invokevirtual #54                 // Method ragDollUpdate:(F)V
      63: goto          71
      66: aload_0
      67: fload_1
      68: invokevirtual #55                 // Method kinematicUpdate:(F)V
      71: return

  protected void ragDollUpdate(float);
    Code:
       0: invokestatic  #56                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
       3: astore_2
       4: aload_2
       5: getfield      #57                 // Field com/jme3/util/TempVars.quat1:Lcom/jme3/math/Quaternion;
       8: astore_3
       9: aload_2
      10: getfield      #58                 // Field com/jme3/util/TempVars.quat2:Lcom/jme3/math/Quaternion;
      13: astore        4
      15: aload_0
      16: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      19: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      24: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore        5
      31: aload         5
      33: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          305
      41: aload         5
      43: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      51: astore        6
      53: aload_2
      54: getfield      #64                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
      57: astore        7
      59: aload         6
      61: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      64: invokevirtual #66                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getMotionState:()Lcom/jme3/bullet/objects/infos/RigidBodyMotionState;
      67: invokevirtual #67                 // Method com/jme3/bullet/objects/infos/RigidBodyMotionState.getWorldLocation:()Lcom/jme3/math/Vector3f;
      70: astore        8
      72: aload_0
      73: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
      76: invokevirtual #68                 // Method com/jme3/scene/Spatial.getWorldTransform:()Lcom/jme3/math/Transform;
      79: aload         8
      81: aload         7
      83: invokevirtual #69                 // Method com/jme3/math/Transform.transformInverseVector:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      86: pop
      87: aload         6
      89: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      92: invokevirtual #66                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getMotionState:()Lcom/jme3/bullet/objects/infos/RigidBodyMotionState;
      95: invokevirtual #70                 // Method com/jme3/bullet/objects/infos/RigidBodyMotionState.getWorldRotationQuat:()Lcom/jme3/math/Quaternion;
      98: astore        9
     100: aload_3
     101: aload         9
     103: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     106: aload         6
     108: getfield      #72                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.initalWorldRotation:Lcom/jme3/math/Quaternion;
     111: invokevirtual #73                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     114: pop
     115: aload         4
     117: aload_0
     118: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     121: invokevirtual #74                 // Method com/jme3/scene/Spatial.getWorldRotation:()Lcom/jme3/math/Quaternion;
     124: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     127: invokevirtual #75                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     130: aload_3
     131: aload_3
     132: invokevirtual #76                 // Method com/jme3/math/Quaternion.mult:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     135: pop
     136: aload_3
     137: invokevirtual #77                 // Method com/jme3/math/Quaternion.normalizeLocal:()Lcom/jme3/math/Quaternion;
     140: pop
     141: aload         6
     143: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     146: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
     149: ifnonnull     260
     152: aload_0
     153: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
     156: aload         8
     158: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     161: aload         6
     163: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     166: invokevirtual #81                 // Method com/jme3/animation/Bone.getBindPosition:()Lcom/jme3/math/Vector3f;
     169: invokevirtual #82                 // Method com/jme3/math/Vector3f.subtractLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     172: pop
     173: aload_0
     174: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     177: invokevirtual #83                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
     180: invokevirtual #84                 // Method com/jme3/scene/Node.getWorldTransform:()Lcom/jme3/math/Transform;
     183: aload_0
     184: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
     187: aload_0
     188: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
     191: invokevirtual #69                 // Method com/jme3/math/Transform.transformInverseVector:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     194: pop
     195: aload_0
     196: getfield      #13                 // Field modelRotation:Lcom/jme3/math/Quaternion;
     199: aload         9
     201: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     204: aload         4
     206: aload         6
     208: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     211: invokevirtual #85                 // Method com/jme3/animation/Bone.getBindRotation:()Lcom/jme3/math/Quaternion;
     214: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     217: invokevirtual #75                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     220: invokevirtual #73                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     223: pop
     224: aload_0
     225: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     228: aload_0
     229: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
     232: invokevirtual #86                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     235: aload_0
     236: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     239: aload_0
     240: getfield      #13                 // Field modelRotation:Lcom/jme3/math/Quaternion;
     243: invokevirtual #87                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     246: aload         6
     248: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     251: aload         7
     253: aload_3
     254: invokevirtual #88                 // Method com/jme3/animation/Bone.setUserTransformsInModelSpace:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     257: goto          302
     260: aload_0
     261: getfield      #4                  // Field boneList:Ljava/util/Set;
     264: invokeinterface #89,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     269: ifeq          286
     272: aload         6
     274: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     277: aload         7
     279: aload_3
     280: invokevirtual #88                 // Method com/jme3/animation/Bone.setUserTransformsInModelSpace:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     283: goto          302
     286: aload         6
     288: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     291: aload         7
     293: aload_3
     294: iconst_0
     295: aload_0
     296: getfield      #4                  // Field boneList:Ljava/util/Set;
     299: invokestatic  #90                 // Method com/jme3/bullet/control/ragdoll/RagdollUtils.setTransform:(Lcom/jme3/animation/Bone;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;ZLjava/util/Set;)V
     302: goto          31
     305: aload_2
     306: invokevirtual #91                 // Method com/jme3/util/TempVars.release:()V
     309: return

  protected void kinematicUpdate(float);
    Code:
       0: invokestatic  #56                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
       3: astore_2
       4: aload_2
       5: getfield      #57                 // Field com/jme3/util/TempVars.quat1:Lcom/jme3/math/Quaternion;
       8: astore_3
       9: aload_2
      10: getfield      #58                 // Field com/jme3/util/TempVars.quat2:Lcom/jme3/math/Quaternion;
      13: astore        4
      15: aload_2
      16: getfield      #64                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
      19: astore        5
      21: aload_0
      22: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      25: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      30: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore        6
      37: aload         6
      39: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          249
      47: aload         6
      49: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      57: astore        7
      59: aload_0
      60: getfield      #20                 // Field blendedControl:Z
      63: ifeq          222
      66: aload_2
      67: getfield      #92                 // Field com/jme3/util/TempVars.vect2:Lcom/jme3/math/Vector3f;
      70: astore        8
      72: aload         5
      74: aload         7
      76: getfield      #93                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.startBlendingPos:Lcom/jme3/math/Vector3f;
      79: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      82: pop
      83: aload_3
      84: aload         7
      86: getfield      #94                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.startBlendingRot:Lcom/jme3/math/Quaternion;
      89: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      92: pop
      93: aload         4
      95: aload_3
      96: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      99: aload         7
     101: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     104: invokevirtual #95                 // Method com/jme3/animation/Bone.getModelSpaceRotation:()Lcom/jme3/math/Quaternion;
     107: aload_0
     108: getfield      #23                 // Field blendStart:F
     111: aload_0
     112: getfield      #24                 // Field blendTime:F
     115: fdiv
     116: invokevirtual #96                 // Method com/jme3/math/Quaternion.nlerp:(Lcom/jme3/math/Quaternion;F)V
     119: aload         8
     121: aload         5
     123: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     126: aload         7
     128: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     131: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
     134: aload_0
     135: getfield      #23                 // Field blendStart:F
     138: aload_0
     139: getfield      #24                 // Field blendTime:F
     142: fdiv
     143: invokevirtual #98                 // Method com/jme3/math/Vector3f.interpolateLocal:(Lcom/jme3/math/Vector3f;F)Lcom/jme3/math/Vector3f;
     146: pop
     147: aload_3
     148: aload         4
     150: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     153: pop
     154: aload         5
     156: aload         8
     158: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     161: pop
     162: aload_0
     163: getfield      #4                  // Field boneList:Ljava/util/Set;
     166: invokeinterface #89,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     171: ifeq          206
     174: aload         7
     176: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     179: iconst_1
     180: invokevirtual #99                 // Method com/jme3/animation/Bone.setUserControl:(Z)V
     183: aload         7
     185: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     188: aload         5
     190: aload_3
     191: invokevirtual #88                 // Method com/jme3/animation/Bone.setUserTransformsInModelSpace:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     194: aload         7
     196: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     199: iconst_0
     200: invokevirtual #99                 // Method com/jme3/animation/Bone.setUserControl:(Z)V
     203: goto          222
     206: aload         7
     208: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     211: aload         5
     213: aload_3
     214: iconst_1
     215: aload_0
     216: getfield      #4                  // Field boneList:Ljava/util/Set;
     219: invokestatic  #90                 // Method com/jme3/bullet/control/ragdoll/RagdollUtils.setTransform:(Lcom/jme3/animation/Bone;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;ZLjava/util/Set;)V
     222: aload_0
     223: aload         7
     225: aload         5
     227: aload_3
     228: invokevirtual #100                // Method matchPhysicObjectToBone:(Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     231: aload_0
     232: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
     235: aload_0
     236: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     239: invokevirtual #52                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
     242: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     245: pop
     246: goto          37
     249: aload_0
     250: getfield      #20                 // Field blendedControl:Z
     253: ifeq          283
     256: aload_0
     257: dup
     258: getfield      #23                 // Field blendStart:F
     261: fload_1
     262: fadd
     263: putfield      #23                 // Field blendStart:F
     266: aload_0
     267: getfield      #23                 // Field blendStart:F
     270: aload_0
     271: getfield      #24                 // Field blendTime:F
     274: fcmpl
     275: ifle          283
     278: aload_0
     279: iconst_0
     280: putfield      #20                 // Field blendedControl:Z
     283: aload_2
     284: invokevirtual #91                 // Method com/jme3/util/TempVars.release:()V
     287: return

  private void ikUpdate(float);
    Code:
       0: invokestatic  #56                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
       3: astore_2
       4: aload_2
       5: getfield      #57                 // Field com/jme3/util/TempVars.quat1:Lcom/jme3/math/Quaternion;
       8: astore_3
       9: iconst_2
      10: anewarray     #11                 // class com/jme3/math/Quaternion
      13: dup
      14: iconst_0
      15: aload_2
      16: getfield      #58                 // Field com/jme3/util/TempVars.quat2:Lcom/jme3/math/Quaternion;
      19: aastore
      20: dup
      21: iconst_1
      22: new           #11                 // class com/jme3/math/Quaternion
      25: dup
      26: invokespecial #12                 // Method com/jme3/math/Quaternion."<init>":()V
      29: aastore
      30: astore        4
      32: aload_0
      33: getfield      #30                 // Field ikTargets:Ljava/util/Map;
      36: invokeinterface #101,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      41: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        5
      48: aload         5
      50: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          309
      58: aload         5
      60: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #103                // class java/lang/String
      68: astore        8
      70: aload_0
      71: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      74: aload         8
      76: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      84: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      87: astore        7
      89: aload         7
      91: invokevirtual #105                // Method com/jme3/animation/Bone.hasUserControl:()Z
      94: ifne          119
      97: ldc_w         #106                // class com/jme3/bullet/control/KinematicRagdollControl
     100: invokevirtual #107                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     103: invokestatic  #108                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     106: getstatic     #109                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     109: ldc           #110                // String {0} doesn\'t have user control
     111: aload         8
     113: invokevirtual #111                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     116: goto          48
     119: aload         7
     121: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
     124: aload_0
     125: getfield      #30                 // Field ikTargets:Ljava/util/Map;
     128: aload         8
     130: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #8                  // class com/jme3/math/Vector3f
     138: invokevirtual #112                // Method com/jme3/math/Vector3f.distance:(Lcom/jme3/math/Vector3f;)F
     141: fstore        6
     143: fload         6
     145: aload_0
     146: getfield      #37                 // Field IKThreshold:F
     149: fcmpg
     150: ifge          173
     153: ldc_w         #106                // class com/jme3/bullet/control/KinematicRagdollControl
     156: invokevirtual #107                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     159: invokestatic  #108                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     162: getstatic     #109                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     165: ldc           #113                // String Distance is close enough
     167: invokevirtual #114                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
     170: goto          48
     173: iconst_0
     174: istore        9
     176: aload_0
     177: getfield      #31                 // Field ikChainDepth:Ljava/util/Map;
     180: aload         7
     182: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
     185: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     190: checkcast     #116                // class java/lang/Integer
     193: invokevirtual #117                // Method java/lang/Integer.intValue:()I
     196: istore        10
     198: aload_0
     199: aload_0
     200: getfield      #7                  // Field boneLinks:Ljava/util/Map;
     203: aload         7
     205: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
     208: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     213: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
     216: fload_1
     217: fload         6
     219: invokestatic  #118                // Method com/jme3/math/FastMath.sqrt:(F)F
     222: fmul
     223: aload_2
     224: aload_3
     225: aload         4
     227: aload         7
     229: aload_0
     230: getfield      #30                 // Field ikTargets:Ljava/util/Map;
     233: aload         8
     235: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     240: checkcast     #8                  // class com/jme3/math/Vector3f
     243: iload         9
     245: iload         10
     247: invokevirtual #119                // Method updateBone:(Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;FLcom/jme3/util/TempVars;Lcom/jme3/math/Quaternion;[Lcom/jme3/math/Quaternion;Lcom/jme3/animation/Bone;Lcom/jme3/math/Vector3f;II)V
     250: aload_2
     251: getfield      #64                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
     254: astore        11
     256: aload_0
     257: getfield      #7                  // Field boneLinks:Ljava/util/Map;
     260: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     265: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     270: astore        12
     272: aload         12
     274: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     279: ifeq          306
     282: aload         12
     284: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     289: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
     292: astore        13
     294: aload_0
     295: aload         13
     297: aload         11
     299: aload_3
     300: invokevirtual #100                // Method matchPhysicObjectToBone:(Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     303: goto          272
     306: goto          48
     309: aload_2
     310: invokevirtual #91                 // Method com/jme3/util/TempVars.release:()V
     313: return

  public void updateBone(com.jme3.bullet.control.KinematicRagdollControl$PhysicsBoneLink, float, com.jme3.util.TempVars, com.jme3.math.Quaternion, com.jme3.math.Quaternion[], com.jme3.animation.Bone, com.jme3.math.Vector3f, int, int);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
       8: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      11: ifnonnull     15
      14: return
      15: aload_1
      16: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      19: invokevirtual #120                // Method com/jme3/animation/Bone.getLocalRotation:()Lcom/jme3/math/Quaternion;
      22: astore        10
      24: iconst_2
      25: newarray       float
      27: dup
      28: iconst_0
      29: ldc           #121                // float Infinityf
      31: fastore
      32: dup
      33: iconst_1
      34: ldc           #121                // float Infinityf
      36: fastore
      37: astore        12
      39: iconst_0
      40: istore        13
      42: iload         13
      44: iconst_3
      45: if_icmpge     287
      48: iload         13
      50: ifne          61
      53: getstatic     #122                // Field com/jme3/math/Vector3f.UNIT_Z:Lcom/jme3/math/Vector3f;
      56: astore        11
      58: goto          80
      61: iload         13
      63: iconst_1
      64: if_icmpne     75
      67: getstatic     #123                // Field com/jme3/math/Vector3f.UNIT_X:Lcom/jme3/math/Vector3f;
      70: astore        11
      72: goto          80
      75: getstatic     #124                // Field com/jme3/math/Vector3f.UNIT_Y:Lcom/jme3/math/Vector3f;
      78: astore        11
      80: iconst_0
      81: istore        14
      83: iload         14
      85: iconst_2
      86: if_icmpge     232
      89: aload_0
      90: getfield      #33                 // Field ikRotSpeed:F
      93: fload_2
      94: fmul
      95: aload_1
      96: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      99: invokevirtual #125                // Method com/jme3/bullet/objects/PhysicsRigidBody.getMass:()F
     102: fconst_2
     103: fmul
     104: fdiv
     105: fstore        15
     107: fload         15
     109: aload_1
     110: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
     113: iload         13
     115: invokevirtual #127                // Method com/jme3/bullet/joints/SixDofJoint.getRotationalLimitMotor:(I)Lcom/jme3/bullet/joints/motors/RotationalLimitMotor;
     118: invokevirtual #128                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getLoLimit:()F
     121: aload_1
     122: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
     125: iload         13
     127: invokevirtual #127                // Method com/jme3/bullet/joints/SixDofJoint.getRotationalLimitMotor:(I)Lcom/jme3/bullet/joints/motors/RotationalLimitMotor;
     130: invokevirtual #129                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getHiLimit:()F
     133: invokestatic  #130                // Method com/jme3/math/FastMath.clamp:(FFF)F
     136: fstore        15
     138: aload         4
     140: fload         15
     142: aload         11
     144: invokevirtual #131                // Method com/jme3/math/Quaternion.fromAngleAxis:(FLcom/jme3/math/Vector3f;)Lcom/jme3/math/Quaternion;
     147: pop
     148: aload         5
     150: iload         14
     152: aload_1
     153: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     156: invokevirtual #120                // Method com/jme3/animation/Bone.getLocalRotation:()Lcom/jme3/math/Quaternion;
     159: aload         4
     161: invokevirtual #132                // Method com/jme3/math/Quaternion.mult:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     164: aastore
     165: aload         5
     167: iload         14
     169: aaload
     170: invokevirtual #77                 // Method com/jme3/math/Quaternion.normalizeLocal:()Lcom/jme3/math/Quaternion;
     173: pop
     174: aload_0
     175: aload_0
     176: getfield      #33                 // Field ikRotSpeed:F
     179: fneg
     180: putfield      #33                 // Field ikRotSpeed:F
     183: aload_1
     184: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     187: aload         5
     189: iload         14
     191: aaload
     192: invokevirtual #133                // Method com/jme3/animation/Bone.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     195: aload_1
     196: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     199: invokevirtual #134                // Method com/jme3/animation/Bone.update:()V
     202: aload         12
     204: iload         14
     206: aload         6
     208: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
     211: aload         7
     213: invokevirtual #112                // Method com/jme3/math/Vector3f.distance:(Lcom/jme3/math/Vector3f;)F
     216: fastore
     217: aload_1
     218: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     221: aload         10
     223: invokevirtual #133                // Method com/jme3/animation/Bone.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     226: iinc          14, 1
     229: goto          83
     232: aload         12
     234: iconst_0
     235: faload
     236: aload         12
     238: iconst_1
     239: faload
     240: fcmpg
     241: ifge          258
     244: aload_1
     245: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     248: aload         5
     250: iconst_0
     251: aaload
     252: invokevirtual #133                // Method com/jme3/animation/Bone.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     255: goto          281
     258: aload         12
     260: iconst_0
     261: faload
     262: aload         12
     264: iconst_1
     265: faload
     266: fcmpl
     267: ifle          281
     270: aload_1
     271: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     274: aload         5
     276: iconst_1
     277: aaload
     278: invokevirtual #133                // Method com/jme3/animation/Bone.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     281: iinc          13, 1
     284: goto          42
     287: aload_1
     288: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     291: invokevirtual #120                // Method com/jme3/animation/Bone.getLocalRotation:()Lcom/jme3/math/Quaternion;
     294: invokevirtual #77                 // Method com/jme3/math/Quaternion.normalizeLocal:()Lcom/jme3/math/Quaternion;
     297: pop
     298: aload_1
     299: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     302: invokevirtual #134                // Method com/jme3/animation/Bone.update:()V
     305: aload_1
     306: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     309: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
     312: ifnull        369
     315: iload         8
     317: iload         9
     319: if_icmpge     369
     322: aload_0
     323: aload_0
     324: getfield      #7                  // Field boneLinks:Ljava/util/Map;
     327: aload_1
     328: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     331: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
     334: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
     337: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     342: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
     345: fload_2
     346: aload_0
     347: getfield      #35                 // Field limbDampening:F
     350: fmul
     351: aload_3
     352: aload         4
     354: aload         5
     356: aload         6
     358: aload         7
     360: iload         8
     362: iconst_1
     363: iadd
     364: iload         9
     366: invokevirtual #119                // Method updateBone:(Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;FLcom/jme3/util/TempVars;Lcom/jme3/math/Quaternion;[Lcom/jme3/math/Quaternion;Lcom/jme3/animation/Bone;Lcom/jme3/math/Vector3f;II)V
     369: return

  protected void matchPhysicObjectToBone(com.jme3.bullet.control.KinematicRagdollControl$PhysicsBoneLink, com.jme3.math.Vector3f, com.jme3.math.Quaternion);
    Code:
       0: aload_0
       1: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
       4: invokevirtual #68                 // Method com/jme3/scene/Spatial.getWorldTransform:()Lcom/jme3/math/Transform;
       7: aload_1
       8: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      11: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
      14: aload_2
      15: invokevirtual #135                // Method com/jme3/math/Transform.transformVector:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      18: pop
      19: aload_3
      20: aload_1
      21: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      24: invokevirtual #95                 // Method com/jme3/animation/Bone.getModelSpaceRotation:()Lcom/jme3/math/Quaternion;
      27: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      30: aload_1
      31: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      34: invokevirtual #136                // Method com/jme3/animation/Bone.getModelBindInverseRotation:()Lcom/jme3/math/Quaternion;
      37: invokevirtual #73                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      40: pop
      41: aload_0
      42: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
      45: invokevirtual #74                 // Method com/jme3/scene/Spatial.getWorldRotation:()Lcom/jme3/math/Quaternion;
      48: aload_3
      49: aload_3
      50: invokevirtual #76                 // Method com/jme3/math/Quaternion.mult:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      53: pop
      54: aload_3
      55: invokevirtual #77                 // Method com/jme3/math/Quaternion.normalizeLocal:()Lcom/jme3/math/Quaternion;
      58: pop
      59: aload_1
      60: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      63: aload_2
      64: invokevirtual #137                // Method com/jme3/bullet/objects/PhysicsRigidBody.setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      67: aload_1
      68: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      71: aload_3
      72: invokevirtual #138                // Method com/jme3/bullet/objects/PhysicsRigidBody.setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      75: return

  public void reBuild();
    Code:
       0: aload_0
       1: getfield      #139                // Field spatial:Lcom/jme3/scene/Spatial;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: aload_0
      10: getfield      #139                // Field spatial:Lcom/jme3/scene/Spatial;
      13: invokevirtual #140                // Method removeSpatialData:(Lcom/jme3/scene/Spatial;)V
      16: aload_0
      17: aload_0
      18: getfield      #139                // Field spatial:Lcom/jme3/scene/Spatial;
      21: invokevirtual #141                // Method createSpatialData:(Lcom/jme3/scene/Spatial;)V
      24: return

  protected void createSpatialData(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
       5: aload_1
       6: invokevirtual #83                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
       9: astore_2
      10: aload_1
      11: invokevirtual #52                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      14: invokevirtual #142                // Method com/jme3/math/Vector3f.clone:()Lcom/jme3/math/Vector3f;
      17: astore_3
      18: aload_1
      19: invokevirtual #143                // Method com/jme3/scene/Spatial.getLocalRotation:()Lcom/jme3/math/Quaternion;
      22: invokevirtual #144                // Method com/jme3/math/Quaternion.clone:()Lcom/jme3/math/Quaternion;
      25: astore        4
      27: aload_0
      28: aload_1
      29: invokevirtual #145                // Method com/jme3/scene/Spatial.getLocalScale:()Lcom/jme3/math/Vector3f;
      32: invokevirtual #142                // Method com/jme3/math/Vector3f.clone:()Lcom/jme3/math/Vector3f;
      35: putfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
      38: aload_1
      39: invokevirtual #147                // Method com/jme3/scene/Spatial.removeFromParent:()Z
      42: pop
      43: aload_1
      44: getstatic     #148                // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
      47: invokevirtual #86                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
      50: aload_1
      51: getstatic     #149                // Field com/jme3/math/Quaternion.IDENTITY:Lcom/jme3/math/Quaternion;
      54: invokevirtual #87                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
      57: aload_1
      58: fconst_1
      59: invokevirtual #150                // Method com/jme3/scene/Spatial.setLocalScale:(F)V
      62: aload_1
      63: ldc_w         #151                // class com/jme3/animation/SkeletonControl
      66: invokevirtual #152                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
      69: checkcast     #151                // class com/jme3/animation/SkeletonControl
      72: astore        5
      74: aload         5
      76: ifnonnull     89
      79: new           #153                // class java/lang/IllegalArgumentException
      82: dup
      83: ldc           #154                // String The root node of the model should have a SkeletonControl. Make sure the control is there and that it\'s not on a sub node.
      85: invokespecial #155                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_1
      90: aload         5
      92: invokevirtual #156                // Method com/jme3/scene/Spatial.removeControl:(Lcom/jme3/scene/control/Control;)Z
      95: pop
      96: aload_1
      97: aload         5
      99: invokevirtual #157                // Method com/jme3/scene/Spatial.addControl:(Lcom/jme3/scene/control/Control;)V
     102: aload_0
     103: aload_1
     104: invokevirtual #158                // Method scanSpatial:(Lcom/jme3/scene/Spatial;)V
     107: aload_2
     108: ifnull        117
     111: aload_2
     112: aload_1
     113: invokevirtual #159                // Method com/jme3/scene/Node.attachChild:(Lcom/jme3/scene/Spatial;)I
     116: pop
     117: aload_1
     118: aload_3
     119: invokevirtual #86                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     122: aload_1
     123: aload         4
     125: invokevirtual #87                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     128: aload_1
     129: aload_0
     130: getfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
     133: invokevirtual #160                // Method com/jme3/scene/Spatial.setLocalScale:(Lcom/jme3/math/Vector3f;)V
     136: aload_0
     137: getfield      #161                // Field added:Z
     140: ifeq          151
     143: aload_0
     144: aload_0
     145: getfield      #162                // Field space:Lcom/jme3/bullet/PhysicsSpace;
     148: invokevirtual #163                // Method addPhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
     151: getstatic     #164                // Field logger:Ljava/util/logging/Logger;
     154: getstatic     #109                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     157: ldc           #165                // String Created physics ragdoll for skeleton {0}
     159: aload_0
     160: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
     163: invokevirtual #111                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     166: return

  protected void removeSpatialData(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: getfield      #161                // Field added:Z
       4: ifeq          15
       7: aload_0
       8: aload_0
       9: getfield      #162                // Field space:Lcom/jme3/bullet/PhysicsSpace;
      12: invokevirtual #167                // Method removePhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
      15: aload_0
      16: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      19: invokeinterface #168,  1          // InterfaceMethod java/util/Map.clear:()V
      24: return

  public void addBoneName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field boneList:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #169,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected void scanSpatial(com.jme3.scene.Spatial);
    Code:
       0: aload_1
       1: ldc_w         #170                // class com/jme3/animation/AnimControl
       4: invokevirtual #152                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
       7: checkcast     #170                // class com/jme3/animation/AnimControl
      10: astore_2
      11: aconst_null
      12: astore_3
      13: aload_0
      14: getfield      #22                 // Field weightThreshold:F
      17: ldc           #21                 // float -1.0f
      19: fcmpl
      20: ifne          28
      23: aload_1
      24: invokestatic  #171                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.buildPointMap:(Lcom/jme3/scene/Spatial;)Ljava/util/Map;
      27: astore_3
      28: aload_0
      29: aload_2
      30: invokevirtual #172                // Method com/jme3/animation/AnimControl.getSkeleton:()Lcom/jme3/animation/Skeleton;
      33: putfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
      36: aload_0
      37: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
      40: invokevirtual #173                // Method com/jme3/animation/Skeleton.resetAndUpdate:()V
      43: iconst_0
      44: istore        4
      46: iload         4
      48: aload_0
      49: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
      52: invokevirtual #174                // Method com/jme3/animation/Skeleton.getRoots:()[Lcom/jme3/animation/Bone;
      55: arraylength
      56: if_icmpge     113
      59: aload_0
      60: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
      63: invokevirtual #174                // Method com/jme3/animation/Skeleton.getRoots:()[Lcom/jme3/animation/Bone;
      66: iload         4
      68: aaload
      69: astore        5
      71: aload         5
      73: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      76: ifnonnull     107
      79: getstatic     #164                // Field logger:Ljava/util/logging/Logger;
      82: getstatic     #109                // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      85: ldc           #175                // String Found root bone in skeleton {0}
      87: aload_0
      88: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
      91: invokevirtual #111                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      94: aload_0
      95: aload_1
      96: aload         5
      98: aload_0
      99: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     102: iconst_1
     103: aload_3
     104: invokevirtual #176                // Method boneRecursion:(Lcom/jme3/scene/Spatial;Lcom/jme3/animation/Bone;Lcom/jme3/bullet/objects/PhysicsRigidBody;ILjava/util/Map;)V
     107: iinc          4, 1
     110: goto          46
     113: return

  protected void boneRecursion(com.jme3.scene.Spatial, com.jme3.animation.Bone, com.jme3.bullet.objects.PhysicsRigidBody, int, java.util.Map<java.lang.Integer, java.util.List<java.lang.Float>>);
    Code:
       0: aload_3
       1: astore        6
       3: aload_0
       4: getfield      #4                  // Field boneList:Ljava/util/Set;
       7: invokeinterface #89,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      12: ifne          31
      15: aload_0
      16: getfield      #4                  // Field boneList:Ljava/util/Set;
      19: aload_2
      20: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
      23: invokeinterface #177,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      28: ifeq          328
      31: new           #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      34: dup
      35: aload_0
      36: invokespecial #178                // Method com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink."<init>":(Lcom/jme3/bullet/control/KinematicRagdollControl;)V
      39: astore        7
      41: aload         7
      43: aload_2
      44: putfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      47: aconst_null
      48: astore        8
      50: aload         5
      52: ifnull        93
      55: aload         5
      57: aload         7
      59: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      62: aload_0
      63: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
      66: aload_0
      67: getfield      #4                  // Field boneList:Ljava/util/Set;
      70: invokestatic  #179                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.getBoneIndices:(Lcom/jme3/animation/Bone;Lcom/jme3/animation/Skeleton;Ljava/util/Set;)Ljava/util/List;
      73: aload_0
      74: getfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
      77: aload         7
      79: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      82: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
      85: invokestatic  #180                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.makeShapeFromPointMap:(Ljava/util/Map;Ljava/util/List;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/bullet/collision/shapes/HullCollisionShape;
      88: astore        8
      90: goto          131
      93: aload_1
      94: aload         7
      96: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      99: aload_0
     100: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
     103: aload_0
     104: getfield      #4                  // Field boneList:Ljava/util/Set;
     107: invokestatic  #179                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.getBoneIndices:(Lcom/jme3/animation/Bone;Lcom/jme3/animation/Skeleton;Ljava/util/Set;)Ljava/util/List;
     110: aload_0
     111: getfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
     114: aload         7
     116: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     119: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
     122: aload_0
     123: getfield      #22                 // Field weightThreshold:F
     126: invokestatic  #181                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.makeShapeFromVerticeWeights:(Lcom/jme3/scene/Spatial;Ljava/util/List;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;F)Lcom/jme3/bullet/collision/shapes/HullCollisionShape;
     129: astore        8
     131: new           #38                 // class com/jme3/bullet/objects/PhysicsRigidBody
     134: dup
     135: aload         8
     137: aload_0
     138: getfield      #28                 // Field rootMass:F
     141: iload         4
     143: i2f
     144: fdiv
     145: invokespecial #43                 // Method com/jme3/bullet/objects/PhysicsRigidBody."<init>":(Lcom/jme3/bullet/collision/shapes/CollisionShape;F)V
     148: astore        9
     150: aload         9
     152: aload_0
     153: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     156: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     159: if_acmpne     166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: invokevirtual #45                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
     170: aload_0
     171: dup
     172: getfield      #29                 // Field totalMass:F
     175: aload_0
     176: getfield      #28                 // Field rootMass:F
     179: iload         4
     181: i2f
     182: fdiv
     183: fadd
     184: putfield      #29                 // Field totalMass:F
     187: aload         7
     189: aload         9
     191: putfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     194: aload         7
     196: aload_2
     197: invokevirtual #95                 // Method com/jme3/animation/Bone.getModelSpaceRotation:()Lcom/jme3/math/Quaternion;
     200: invokevirtual #144                // Method com/jme3/math/Quaternion.clone:()Lcom/jme3/math/Quaternion;
     203: putfield      #72                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.initalWorldRotation:Lcom/jme3/math/Quaternion;
     206: aload_3
     207: ifnull        301
     210: new           #8                  // class com/jme3/math/Vector3f
     213: dup
     214: invokespecial #9                  // Method com/jme3/math/Vector3f."<init>":()V
     217: astore        10
     219: aload_2
     220: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
     223: ifnull        250
     226: aload_2
     227: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
     230: aload_2
     231: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
     234: invokevirtual #97                 // Method com/jme3/animation/Bone.getModelSpacePosition:()Lcom/jme3/math/Vector3f;
     237: aload         10
     239: invokevirtual #182                // Method com/jme3/math/Vector3f.subtract:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     242: aload_0
     243: getfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
     246: invokevirtual #183                // Method com/jme3/math/Vector3f.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     249: pop
     250: new           #184                // class com/jme3/bullet/joints/SixDofJoint
     253: dup
     254: aload_3
     255: aload         9
     257: aload         10
     259: new           #8                  // class com/jme3/math/Vector3f
     262: dup
     263: fconst_0
     264: fconst_0
     265: fconst_0
     266: invokespecial #185                // Method com/jme3/math/Vector3f."<init>":(FFF)V
     269: iconst_1
     270: invokespecial #186                // Method com/jme3/bullet/joints/SixDofJoint."<init>":(Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Z)V
     273: astore        11
     275: aload_0
     276: getfield      #16                 // Field preset:Lcom/jme3/bullet/control/ragdoll/RagdollPreset;
     279: aload_2
     280: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
     283: aload         11
     285: invokevirtual #187                // Method com/jme3/bullet/control/ragdoll/RagdollPreset.setupJointForBone:(Ljava/lang/String;Lcom/jme3/bullet/joints/SixDofJoint;)V
     288: aload         7
     290: aload         11
     292: putfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
     295: aload         11
     297: iconst_0
     298: invokevirtual #188                // Method com/jme3/bullet/joints/SixDofJoint.setCollisionBetweenLinkedBodys:(Z)V
     301: aload_0
     302: getfield      #7                  // Field boneLinks:Ljava/util/Map;
     305: aload_2
     306: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
     309: aload         7
     311: invokeinterface #189,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     316: pop
     317: aload         9
     319: aload         7
     321: invokevirtual #190                // Method com/jme3/bullet/objects/PhysicsRigidBody.setUserObject:(Ljava/lang/Object;)V
     324: aload         9
     326: astore        6
     328: aload_2
     329: invokevirtual #191                // Method com/jme3/animation/Bone.getChildren:()Ljava/util/ArrayList;
     332: invokevirtual #192                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     335: astore        7
     337: aload         7
     339: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     344: ifeq          377
     347: aload         7
     349: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     354: checkcast     #193                // class com/jme3/animation/Bone
     357: astore        8
     359: aload_0
     360: aload_1
     361: aload         8
     363: aload         6
     365: iload         4
     367: iconst_1
     368: iadd
     369: aload         5
     371: invokevirtual #176                // Method boneRecursion:(Lcom/jme3/scene/Spatial;Lcom/jme3/animation/Bone;Lcom/jme3/bullet/objects/PhysicsRigidBody;ILjava/util/Map;)V
     374: goto          337
     377: return

  public void setJointLimit(java.lang.String, float, float, float, float, float, float);
    Code:
       0: aload_0
       1: getfield      #7                  // Field boneLinks:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      13: astore        8
      15: aload         8
      17: ifnull        41
      20: aload         8
      22: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
      25: fload_2
      26: fload_3
      27: fload         4
      29: fload         5
      31: fload         6
      33: fload         7
      35: invokestatic  #194                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.setJointLimit:(Lcom/jme3/bullet/joints/SixDofJoint;FFFFFF)V
      38: goto          53
      41: getstatic     #164                // Field logger:Ljava/util/logging/Logger;
      44: getstatic     #195                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      47: ldc           #196                // String Not joint was found for bone {0}. make sure you call spatial.addControl(ragdoll) before setting joints limit
      49: aload_1
      50: invokevirtual #111                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      53: return

  public com.jme3.bullet.joints.SixDofJoint getJoint(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field boneLinks:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
      22: areturn
      23: getstatic     #164                // Field logger:Ljava/util/logging/Logger;
      26: getstatic     #195                // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      29: ldc           #196                // String Not joint was found for bone {0}. make sure you call spatial.addControl(ragdoll) before setting joints limit
      31: aload_1
      32: invokevirtual #111                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      35: aconst_null
      36: areturn

  protected void setPhysicsLocation(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: ifnull        15
       7: aload_0
       8: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      11: aload_1
      12: invokevirtual #137                // Method com/jme3/bullet/objects/PhysicsRigidBody.setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      15: return

  protected void setPhysicsRotation(com.jme3.math.Quaternion);
    Code:
       0: aload_0
       1: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: ifnull        15
       7: aload_0
       8: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      11: aload_1
      12: invokevirtual #138                // Method com/jme3/bullet/objects/PhysicsRigidBody.setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      15: return

  protected void addPhysics(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_0
       1: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      12: invokevirtual #197                // Method com/jme3/bullet/PhysicsSpace.add:(Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      19: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      24: invokeinterface #198,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          82
      39: aload_2
      40: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      48: astore_3
      49: aload_3
      50: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      53: ifnull        79
      56: aload_1
      57: aload_3
      58: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      61: invokevirtual #197                // Method com/jme3/bullet/PhysicsSpace.add:(Ljava/lang/Object;)V
      64: aload_3
      65: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
      68: ifnull        79
      71: aload_1
      72: aload_3
      73: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
      76: invokevirtual #197                // Method com/jme3/bullet/PhysicsSpace.add:(Ljava/lang/Object;)V
      79: goto          30
      82: aload_1
      83: aload_0
      84: invokevirtual #199                // Method com/jme3/bullet/PhysicsSpace.addCollisionListener:(Lcom/jme3/bullet/collision/PhysicsCollisionListener;)V
      87: return

  protected void removePhysics(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_0
       1: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      12: invokevirtual #200                // Method com/jme3/bullet/PhysicsSpace.remove:(Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      19: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      24: invokeinterface #198,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          82
      39: aload_2
      40: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      48: astore_3
      49: aload_3
      50: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
      53: ifnull        79
      56: aload_1
      57: aload_3
      58: getfield      #126                // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.joint:Lcom/jme3/bullet/joints/SixDofJoint;
      61: invokevirtual #200                // Method com/jme3/bullet/PhysicsSpace.remove:(Ljava/lang/Object;)V
      64: aload_3
      65: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      68: ifnull        79
      71: aload_1
      72: aload_3
      73: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      76: invokevirtual #200                // Method com/jme3/bullet/PhysicsSpace.remove:(Ljava/lang/Object;)V
      79: goto          30
      82: aload_1
      83: aload_0
      84: invokevirtual #201                // Method com/jme3/bullet/PhysicsSpace.removeCollisionListener:(Lcom/jme3/bullet/collision/PhysicsCollisionListener;)V
      87: return

  public void collision(com.jme3.bullet.collision.PhysicsCollisionEvent);
    Code:
       0: aload_1
       1: invokevirtual #202                // Method com/jme3/bullet/collision/PhysicsCollisionEvent.getObjectA:()Lcom/jme3/bullet/collision/PhysicsCollisionObject;
       4: astore_2
       5: aload_1
       6: invokevirtual #203                // Method com/jme3/bullet/collision/PhysicsCollisionEvent.getObjectB:()Lcom/jme3/bullet/collision/PhysicsCollisionObject;
       9: astore_3
      10: aload_1
      11: invokevirtual #204                // Method com/jme3/bullet/collision/PhysicsCollisionEvent.getNodeA:()Lcom/jme3/scene/Spatial;
      14: ifnonnull     25
      17: aload_1
      18: invokevirtual #205                // Method com/jme3/bullet/collision/PhysicsCollisionEvent.getNodeB:()Lcom/jme3/scene/Spatial;
      21: ifnonnull     25
      24: return
      25: aload_1
      26: invokevirtual #206                // Method com/jme3/bullet/collision/PhysicsCollisionEvent.getAppliedImpulse:()F
      29: aload_0
      30: getfield      #26                 // Field eventDispatchImpulseThreshold:F
      33: fcmpg
      34: ifge          38
      37: return
      38: iconst_0
      39: istore        4
      41: aconst_null
      42: astore        5
      44: aconst_null
      45: astore        6
      47: aload_2
      48: invokevirtual #207                // Method com/jme3/bullet/collision/PhysicsCollisionObject.getUserObject:()Ljava/lang/Object;
      51: instanceof    #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      54: ifeq          84
      57: aload_2
      58: invokevirtual #207                // Method com/jme3/bullet/collision/PhysicsCollisionObject.getUserObject:()Ljava/lang/Object;
      61: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      64: astore        7
      66: aload         7
      68: ifnull        84
      71: iconst_1
      72: istore        4
      74: aload         7
      76: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      79: astore        5
      81: aload_3
      82: astore        6
      84: aload_3
      85: invokevirtual #207                // Method com/jme3/bullet/collision/PhysicsCollisionObject.getUserObject:()Ljava/lang/Object;
      88: instanceof    #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      91: ifeq          121
      94: aload_3
      95: invokevirtual #207                // Method com/jme3/bullet/collision/PhysicsCollisionObject.getUserObject:()Ljava/lang/Object;
      98: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
     101: astore        7
     103: aload         7
     105: ifnull        121
     108: iconst_1
     109: istore        4
     111: aload         7
     113: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
     116: astore        5
     118: aload_2
     119: astore        6
     121: iload         4
     123: ifeq          181
     126: aload_0
     127: getfield      #208                // Field listeners:Ljava/util/List;
     130: ifnull        181
     133: aload_0
     134: getfield      #208                // Field listeners:Ljava/util/List;
     137: invokeinterface #209,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     142: astore        7
     144: aload         7
     146: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     151: ifeq          181
     154: aload         7
     156: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     161: checkcast     #210                // class com/jme3/bullet/collision/RagdollCollisionListener
     164: astore        8
     166: aload         8
     168: aload         5
     170: aload         6
     172: aload_1
     173: invokeinterface #211,  4          // InterfaceMethod com/jme3/bullet/collision/RagdollCollisionListener.collide:(Lcom/jme3/animation/Bone;Lcom/jme3/bullet/collision/PhysicsCollisionObject;Lcom/jme3/bullet/collision/PhysicsCollisionEvent;)V
     178: goto          144
     181: return

  protected void setMode(com.jme3.bullet.control.KinematicRagdollControl$Mode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       5: aload_0
       6: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
       9: ldc_w         #170                // class com/jme3/animation/AnimControl
      12: invokevirtual #152                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
      15: checkcast     #170                // class com/jme3/animation/AnimControl
      18: astore_2
      19: aload_2
      20: aload_1
      21: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      24: if_acmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokevirtual #212                // Method com/jme3/animation/AnimControl.setEnabled:(Z)V
      35: aload_0
      36: getfield      #44                 // Field baseRigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      39: aload_1
      40: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      43: if_acmpne     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: invokevirtual #45                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
      54: aload_1
      55: getstatic     #48                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.IK:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      58: if_acmpeq     159
      61: invokestatic  #56                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
      64: astore_3
      65: aload_0
      66: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      69: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      74: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      79: astore        4
      81: aload         4
      83: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          155
      91: aload         4
      93: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
     101: astore        5
     103: aload         5
     105: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     108: aload_1
     109: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     112: if_acmpne     119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: invokevirtual #45                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
     123: aload_1
     124: getstatic     #50                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Ragdoll:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     127: if_acmpne     152
     130: aload_3
     131: getfield      #57                 // Field com/jme3/util/TempVars.quat1:Lcom/jme3/math/Quaternion;
     134: astore        6
     136: aload_3
     137: getfield      #64                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
     140: astore        7
     142: aload_0
     143: aload         5
     145: aload         7
     147: aload         6
     149: invokevirtual #100                // Method matchPhysicObjectToBone:(Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     152: goto          81
     155: aload_3
     156: invokevirtual #91                 // Method com/jme3/util/TempVars.release:()V
     159: aload_1
     160: getstatic     #48                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.IK:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     163: if_acmpeq     217
     166: aload_0
     167: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
     170: invokevirtual #174                // Method com/jme3/animation/Skeleton.getRoots:()[Lcom/jme3/animation/Bone;
     173: astore_3
     174: aload_3
     175: arraylength
     176: istore        4
     178: iconst_0
     179: istore        5
     181: iload         5
     183: iload         4
     185: if_icmpge     217
     188: aload_3
     189: iload         5
     191: aaload
     192: astore        6
     194: aload         6
     196: aload_1
     197: getstatic     #50                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Ragdoll:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     200: if_acmpne     207
     203: iconst_1
     204: goto          208
     207: iconst_0
     208: invokestatic  #213                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.setUserControl:(Lcom/jme3/animation/Bone;Z)V
     211: iinc          5, 1
     214: goto          181
     217: return

  public void blendToKinematicMode(float);
    Code:
       0: aload_0
       1: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       4: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       7: if_acmpne     11
      10: return
      11: aload_0
      12: iconst_1
      13: putfield      #20                 // Field blendedControl:Z
      16: aload_0
      17: fload_1
      18: putfield      #24                 // Field blendTime:F
      21: aload_0
      22: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      25: putfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      28: aload_0
      29: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
      32: ldc_w         #170                // class com/jme3/animation/AnimControl
      35: invokevirtual #152                // Method com/jme3/scene/Spatial.getControl:(Ljava/lang/Class;)Lcom/jme3/scene/control/Control;
      38: checkcast     #170                // class com/jme3/animation/AnimControl
      41: astore_2
      42: aload_2
      43: iconst_1
      44: invokevirtual #212                // Method com/jme3/animation/AnimControl.setEnabled:(Z)V
      47: invokestatic  #56                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
      50: astore_3
      51: aload_0
      52: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      55: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      60: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      65: astore        4
      67: aload         4
      69: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          230
      77: aload         4
      79: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      87: astore        5
      89: aload         5
      91: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      94: invokevirtual #66                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getMotionState:()Lcom/jme3/bullet/objects/infos/RigidBodyMotionState;
      97: invokevirtual #67                 // Method com/jme3/bullet/objects/infos/RigidBodyMotionState.getWorldLocation:()Lcom/jme3/math/Vector3f;
     100: astore        6
     102: aload_3
     103: getfield      #64                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
     106: astore        7
     108: aload_0
     109: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     112: invokevirtual #68                 // Method com/jme3/scene/Spatial.getWorldTransform:()Lcom/jme3/math/Transform;
     115: aload         6
     117: aload         7
     119: invokevirtual #69                 // Method com/jme3/math/Transform.transformInverseVector:(Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     122: pop
     123: aload         5
     125: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     128: invokevirtual #66                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getMotionState:()Lcom/jme3/bullet/objects/infos/RigidBodyMotionState;
     131: invokevirtual #70                 // Method com/jme3/bullet/objects/infos/RigidBodyMotionState.getWorldRotationQuat:()Lcom/jme3/math/Quaternion;
     134: astore        8
     136: aload_3
     137: getfield      #57                 // Field com/jme3/util/TempVars.quat1:Lcom/jme3/math/Quaternion;
     140: astore        9
     142: aload_3
     143: getfield      #58                 // Field com/jme3/util/TempVars.quat2:Lcom/jme3/math/Quaternion;
     146: astore        10
     148: aload         9
     150: aload         8
     152: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     155: aload         5
     157: getfield      #72                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.initalWorldRotation:Lcom/jme3/math/Quaternion;
     160: invokevirtual #73                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     163: invokevirtual #77                 // Method com/jme3/math/Quaternion.normalizeLocal:()Lcom/jme3/math/Quaternion;
     166: pop
     167: aload         10
     169: aload_0
     170: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     173: invokevirtual #74                 // Method com/jme3/scene/Spatial.getWorldRotation:()Lcom/jme3/math/Quaternion;
     176: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     179: invokevirtual #75                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     182: aload         9
     184: aload         9
     186: invokevirtual #76                 // Method com/jme3/math/Quaternion.mult:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     189: pop
     190: aload         9
     192: invokevirtual #77                 // Method com/jme3/math/Quaternion.normalizeLocal:()Lcom/jme3/math/Quaternion;
     195: pop
     196: aload         5
     198: getfield      #93                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.startBlendingPos:Lcom/jme3/math/Vector3f;
     201: aload         7
     203: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     206: pop
     207: aload         5
     209: getfield      #94                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.startBlendingRot:Lcom/jme3/math/Quaternion;
     212: aload         9
     214: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     217: pop
     218: aload         5
     220: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
     223: iconst_1
     224: invokevirtual #45                 // Method com/jme3/bullet/objects/PhysicsRigidBody.setKinematic:(Z)V
     227: goto          67
     230: aload_3
     231: invokevirtual #91                 // Method com/jme3/util/TempVars.release:()V
     234: aload_0
     235: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
     238: invokevirtual #174                // Method com/jme3/animation/Skeleton.getRoots:()[Lcom/jme3/animation/Bone;
     241: astore        4
     243: aload         4
     245: arraylength
     246: istore        5
     248: iconst_0
     249: istore        6
     251: iload         6
     253: iload         5
     255: if_icmpge     277
     258: aload         4
     260: iload         6
     262: aaload
     263: astore        7
     265: aload         7
     267: iconst_0
     268: invokestatic  #213                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.setUserControl:(Lcom/jme3/animation/Bone;Z)V
     271: iinc          6, 1
     274: goto          251
     277: aload_0
     278: fconst_0
     279: putfield      #23                 // Field blendStart:F
     282: return

  public void setKinematicMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       4: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       7: if_acmpeq     17
      10: aload_0
      11: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      14: invokevirtual #214                // Method setMode:(Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;)V
      17: return

  public void setRagdollMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       4: getstatic     #50                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Ragdoll:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       7: if_acmpeq     17
      10: aload_0
      11: getstatic     #50                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Ragdoll:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      14: invokevirtual #214                // Method setMode:(Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;)V
      17: return

  public void setIKMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       4: getstatic     #48                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.IK:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       7: if_acmpeq     17
      10: aload_0
      11: getstatic     #48                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.IK:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      14: invokevirtual #214                // Method setMode:(Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;)V
      17: return

  public com.jme3.bullet.control.KinematicRagdollControl$Mode getMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
       4: areturn

  public void addCollisionListener(com.jme3.bullet.collision.RagdollCollisionListener);
    Code:
       0: aload_0
       1: getfield      #208                // Field listeners:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #215                // class java/util/ArrayList
      11: dup
      12: invokespecial #216                // Method java/util/ArrayList."<init>":()V
      15: putfield      #208                // Field listeners:Ljava/util/List;
      18: aload_0
      19: getfield      #208                // Field listeners:Ljava/util/List;
      22: aload_1
      23: invokeinterface #217,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public void setRootMass(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #28                 // Field rootMass:F
       5: return

  public float getTotalMass();
    Code:
       0: aload_0
       1: getfield      #29                 // Field totalMass:F
       4: freturn

  public float getWeightThreshold();
    Code:
       0: aload_0
       1: getfield      #22                 // Field weightThreshold:F
       4: freturn

  public void setWeightThreshold(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #22                 // Field weightThreshold:F
       5: return

  public float getEventDispatchImpulseThreshold();
    Code:
       0: aload_0
       1: getfield      #26                 // Field eventDispatchImpulseThreshold:F
       4: freturn

  public void setEventDispatchImpulseThreshold(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #26                 // Field eventDispatchImpulseThreshold:F
       5: return

  public void setCcdMotionThreshold(float);
    Code:
       0: aload_0
       1: getfield      #7                  // Field boneLinks:Ljava/util/Map;
       4: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_2
      25: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      33: astore_3
      34: aload_3
      35: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      38: fload_1
      39: invokevirtual #218                // Method com/jme3/bullet/objects/PhysicsRigidBody.setCcdMotionThreshold:(F)V
      42: goto          15
      45: return

  public void setCcdSweptSphereRadius(float);
    Code:
       0: aload_0
       1: getfield      #7                  // Field boneLinks:Ljava/util/Map;
       4: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_2
      25: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      33: astore_3
      34: aload_3
      35: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      38: fload_1
      39: invokevirtual #219                // Method com/jme3/bullet/objects/PhysicsRigidBody.setCcdSweptSphereRadius:(F)V
      42: goto          15
      45: return

  public com.jme3.bullet.objects.PhysicsRigidBody getBoneRigidBody(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field boneLinks:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: getfield      #65                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.rigidBody:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      22: areturn
      23: aconst_null
      24: areturn

  public void render(com.jme3.renderer.RenderManager, com.jme3.renderer.ViewPort);
    Code:
       0: return

  public com.jme3.scene.control.Control cloneForSpatial(com.jme3.scene.Spatial);
    Code:
       0: new           #106                // class com/jme3/bullet/control/KinematicRagdollControl
       3: dup
       4: aload_0
       5: getfield      #16                 // Field preset:Lcom/jme3/bullet/control/ragdoll/RagdollPreset;
       8: aload_0
       9: getfield      #22                 // Field weightThreshold:F
      12: invokespecial #220                // Method "<init>":(Lcom/jme3/bullet/control/ragdoll/RagdollPreset;F)V
      15: astore_2
      16: aload_2
      17: aload_0
      18: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
      21: invokevirtual #214                // Method setMode:(Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;)V
      24: aload_2
      25: aload_0
      26: getfield      #28                 // Field rootMass:F
      29: invokevirtual #221                // Method setRootMass:(F)V
      32: aload_2
      33: aload_0
      34: getfield      #22                 // Field weightThreshold:F
      37: invokevirtual #222                // Method setWeightThreshold:(F)V
      40: aload_2
      41: aload_0
      42: getfield      #223                // Field applyLocal:Z
      45: invokevirtual #224                // Method setApplyPhysicsLocal:(Z)V
      48: aload_2
      49: areturn

  public com.jme3.math.Vector3f setIKTarget(com.jme3.animation.Bone, com.jme3.math.Vector3f, int);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
       5: invokevirtual #225                // Method com/jme3/scene/Spatial.getWorldTranslation:()Lcom/jme3/math/Vector3f;
       8: invokevirtual #226                // Method com/jme3/math/Vector3f.subtract:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      11: astore        4
      13: aload_0
      14: getfield      #30                 // Field ikTargets:Ljava/util/Map;
      17: aload_1
      18: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
      21: aload         4
      23: invokeinterface #189,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: getfield      #31                 // Field ikChainDepth:Ljava/util/Map;
      33: aload_1
      34: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
      37: iload_3
      38: invokestatic  #227                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: invokeinterface #189,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: iconst_0
      48: istore        5
      50: iload         5
      52: iload_3
      53: iconst_2
      54: iadd
      55: if_icmpge     88
      58: aload_1
      59: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      62: ifnull        88
      65: aload_1
      66: invokevirtual #105                // Method com/jme3/animation/Bone.hasUserControl:()Z
      69: ifne          77
      72: aload_1
      73: iconst_1
      74: invokevirtual #99                 // Method com/jme3/animation/Bone.setUserControl:(Z)V
      77: aload_1
      78: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      81: astore_1
      82: iinc          5, 1
      85: goto          50
      88: aload         4
      90: areturn

  public void removeIKTarget(com.jme3.animation.Bone);
    Code:
       0: aload_0
       1: getfield      #31                 // Field ikChainDepth:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
       8: invokeinterface #228,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #116                // class java/lang/Integer
      16: invokevirtual #117                // Method java/lang/Integer.intValue:()I
      19: istore_2
      20: iconst_0
      21: istore_3
      22: iload_3
      23: iload_2
      24: iconst_2
      25: iadd
      26: if_icmpge     59
      29: aload_1
      30: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      33: ifnull        59
      36: aload_1
      37: invokevirtual #105                // Method com/jme3/animation/Bone.hasUserControl:()Z
      40: ifeq          48
      43: aload_1
      44: iconst_0
      45: invokevirtual #99                 // Method com/jme3/animation/Bone.setUserControl:(Z)V
      48: aload_1
      49: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      52: astore_1
      53: iinc          3, 1
      56: goto          22
      59: return

  public void removeAllIKTargets();
    Code:
       0: aload_0
       1: getfield      #30                 // Field ikTargets:Ljava/util/Map;
       4: invokeinterface #168,  1          // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #31                 // Field ikChainDepth:Ljava/util/Map;
      13: invokeinterface #168,  1          // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: invokevirtual #229                // Method applyUserControl:()V
      22: return

  public void applyUserControl();
    Code:
       0: aload_0
       1: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
       4: invokevirtual #174                // Method com/jme3/animation/Skeleton.getRoots:()[Lcom/jme3/animation/Bone;
       7: astore_1
       8: aload_1
       9: arraylength
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: iload_2
      15: if_icmpge     35
      18: aload_1
      19: iload_3
      20: aaload
      21: astore        4
      23: aload         4
      25: iconst_0
      26: invokestatic  #213                // Method com/jme3/bullet/control/ragdoll/RagdollUtils.setUserControl:(Lcom/jme3/animation/Bone;Z)V
      29: iinc          3, 1
      32: goto          13
      35: aload_0
      36: getfield      #30                 // Field ikTargets:Ljava/util/Map;
      39: invokeinterface #230,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      44: ifeq          54
      47: aload_0
      48: invokevirtual #231                // Method setKinematicMode:()V
      51: goto          155
      54: aload_0
      55: getfield      #30                 // Field ikTargets:Ljava/util/Map;
      58: invokeinterface #101,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      63: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore_1
      69: invokestatic  #56                 // Method com/jme3/util/TempVars.get:()Lcom/jme3/util/TempVars;
      72: astore_2
      73: aload_1
      74: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          151
      82: aload_1
      83: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #193                // class com/jme3/animation/Bone
      91: astore_3
      92: aload_3
      93: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
      96: ifnull        148
      99: aload_2
     100: getfield      #57                 // Field com/jme3/util/TempVars.quat1:Lcom/jme3/math/Quaternion;
     103: astore        4
     105: aload_2
     106: getfield      #64                 // Field com/jme3/util/TempVars.vect1:Lcom/jme3/math/Vector3f;
     109: astore        5
     111: aload_0
     112: aload_0
     113: getfield      #7                  // Field boneLinks:Ljava/util/Map;
     116: aload_3
     117: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
     120: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     125: checkcast     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
     128: aload         5
     130: aload         4
     132: invokevirtual #100                // Method matchPhysicObjectToBone:(Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Quaternion;)V
     135: aload_3
     136: iconst_1
     137: invokevirtual #99                 // Method com/jme3/animation/Bone.setUserControl:(Z)V
     140: aload_3
     141: invokevirtual #79                 // Method com/jme3/animation/Bone.getParent:()Lcom/jme3/animation/Bone;
     144: astore_3
     145: goto          92
     148: goto          73
     151: aload_2
     152: invokevirtual #91                 // Method com/jme3/util/TempVars.release:()V
     155: return

  public float getIkRotSpeed();
    Code:
       0: aload_0
       1: getfield      #33                 // Field ikRotSpeed:F
       4: freturn

  public void setIkRotSpeed(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #33                 // Field ikRotSpeed:F
       5: return

  public float getIKThreshold();
    Code:
       0: aload_0
       1: getfield      #37                 // Field IKThreshold:F
       4: freturn

  public void setIKThreshold(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #37                 // Field IKThreshold:F
       5: return

  public float getLimbDampening();
    Code:
       0: aload_0
       1: getfield      #35                 // Field limbDampening:F
       4: freturn

  public void setLimbDampening(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #35                 // Field limbDampening:F
       5: return

  public com.jme3.animation.Bone getBone(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
       4: aload_1
       5: invokevirtual #232                // Method com/jme3/animation/Skeleton.getBone:(Ljava/lang/String;)Lcom/jme3/animation/Bone;
       8: areturn

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #233                // Method com/jme3/bullet/control/AbstractPhysicsControl.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #234,  2          // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #4                  // Field boneList:Ljava/util/Set;
      18: aload_0
      19: getfield      #4                  // Field boneList:Ljava/util/Set;
      22: invokeinterface #235,  1          // InterfaceMethod java/util/Set.size:()I
      27: anewarray     #103                // class java/lang/String
      30: invokeinterface #236,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      35: checkcast     #237                // class "[Ljava/lang/String;"
      38: ldc           #238                // String boneList
      40: iconst_0
      41: anewarray     #103                // class java/lang/String
      44: invokeinterface #239,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:([Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
      49: aload_2
      50: aload_0
      51: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      54: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      59: aload_0
      60: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      63: invokeinterface #240,  1          // InterfaceMethod java/util/Map.size:()I
      68: anewarray     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      71: invokeinterface #241,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      76: checkcast     #242                // class "[Lcom/jme3/export/Savable;"
      79: ldc           #243                // String boneLinks
      81: iconst_0
      82: anewarray     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      85: invokeinterface #244,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:([Lcom/jme3/export/Savable;Ljava/lang/String;[Lcom/jme3/export/Savable;)V
      90: aload_2
      91: aload_0
      92: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
      95: ldc           #245                // String modelPosition
      97: new           #8                  // class com/jme3/math/Vector3f
     100: dup
     101: invokespecial #9                  // Method com/jme3/math/Vector3f."<init>":()V
     104: invokeinterface #246,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     109: aload_2
     110: aload_0
     111: getfield      #13                 // Field modelRotation:Lcom/jme3/math/Quaternion;
     114: ldc           #247                // String modelRotation
     116: new           #11                 // class com/jme3/math/Quaternion
     119: dup
     120: invokespecial #12                 // Method com/jme3/math/Quaternion."<init>":()V
     123: invokeinterface #246,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     128: aload_2
     129: aload_0
     130: getfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     133: ldc           #248                // String targetModel
     135: aconst_null
     136: invokeinterface #246,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     141: aload_2
     142: aload_0
     143: getfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
     146: ldc           #249                // String skeleton
     148: aconst_null
     149: invokeinterface #246,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     154: aload_2
     155: aload_0
     156: getfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
     159: ldc           #250                // String initScale
     161: aconst_null
     162: invokeinterface #246,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     167: aload_2
     168: aload_0
     169: getfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     172: ldc           #251                // String mode
     174: aconst_null
     175: invokeinterface #252,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Ljava/lang/Enum;Ljava/lang/String;Ljava/lang/Enum;)V
     180: aload_2
     181: aload_0
     182: getfield      #20                 // Field blendedControl:Z
     185: ldc           #253                // String blendedControl
     187: iconst_0
     188: invokeinterface #254,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
     193: aload_2
     194: aload_0
     195: getfield      #22                 // Field weightThreshold:F
     198: ldc           #255                // String weightThreshold
     200: ldc           #21                 // float -1.0f
     202: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     207: aload_2
     208: aload_0
     209: getfield      #23                 // Field blendStart:F
     212: ldc_w         #257                // String blendStart
     215: fconst_0
     216: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     221: aload_2
     222: aload_0
     223: getfield      #24                 // Field blendTime:F
     226: ldc_w         #258                // String blendTime
     229: fconst_1
     230: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     235: aload_2
     236: aload_0
     237: getfield      #26                 // Field eventDispatchImpulseThreshold:F
     240: ldc_w         #259                // String eventDispatchImpulseThreshold
     243: ldc           #25                 // float 10.0f
     245: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     250: aload_2
     251: aload_0
     252: getfield      #28                 // Field rootMass:F
     255: ldc_w         #260                // String rootMass
     258: ldc           #27                 // float 15.0f
     260: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     265: aload_2
     266: aload_0
     267: getfield      #29                 // Field totalMass:F
     270: ldc_w         #261                // String totalMass
     273: fconst_0
     274: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     279: aload_2
     280: aload_0
     281: getfield      #33                 // Field ikRotSpeed:F
     284: ldc_w         #262                // String rotSpeed
     287: ldc           #32                 // float 7.0f
     289: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     294: aload_2
     295: aload_0
     296: getfield      #35                 // Field limbDampening:F
     299: ldc_w         #263                // String limbDampening
     302: ldc           #34                 // float 0.6f
     304: invokeinterface #256,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     309: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #264                // Method com/jme3/bullet/control/AbstractPhysicsControl.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #265,  2          // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_2
      14: ldc           #238                // String boneList
      16: iconst_0
      17: anewarray     #103                // class java/lang/String
      20: invokeinterface #266,  3          // InterfaceMethod com/jme3/export/InputCapsule.readStringArray:(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;
      25: astore_3
      26: aload_0
      27: getfield      #4                  // Field boneList:Ljava/util/Set;
      30: aload_3
      31: invokestatic  #267                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokeinterface #268,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: aload_2
      41: ldc           #238                // String boneList
      43: iconst_0
      44: anewarray     #63                 // class com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink
      47: invokeinterface #269,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavableArray:(Ljava/lang/String;[Lcom/jme3/export/Savable;)[Lcom/jme3/export/Savable;
      52: checkcast     #270                // class "[Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;"
      55: checkcast     #270                // class "[Lcom/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink;"
      58: astore        4
      60: aload         4
      62: astore        5
      64: aload         5
      66: arraylength
      67: istore        6
      69: iconst_0
      70: istore        7
      72: iload         7
      74: iload         6
      76: if_icmpge     112
      79: aload         5
      81: iload         7
      83: aaload
      84: astore        8
      86: aload_0
      87: getfield      #7                  // Field boneLinks:Ljava/util/Map;
      90: aload         8
      92: getfield      #78                 // Field com/jme3/bullet/control/KinematicRagdollControl$PhysicsBoneLink.bone:Lcom/jme3/animation/Bone;
      95: invokevirtual #115                // Method com/jme3/animation/Bone.getName:()Ljava/lang/String;
      98: aload         8
     100: invokeinterface #189,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: iinc          7, 1
     109: goto          72
     112: aload_0
     113: getfield      #10                 // Field modelPosition:Lcom/jme3/math/Vector3f;
     116: aload_2
     117: ldc           #245                // String modelPosition
     119: new           #8                  // class com/jme3/math/Vector3f
     122: dup
     123: invokespecial #9                  // Method com/jme3/math/Vector3f."<init>":()V
     126: invokeinterface #271,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     131: checkcast     #8                  // class com/jme3/math/Vector3f
     134: invokevirtual #80                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     137: pop
     138: aload_0
     139: getfield      #13                 // Field modelRotation:Lcom/jme3/math/Quaternion;
     142: aload_2
     143: ldc           #247                // String modelRotation
     145: new           #11                 // class com/jme3/math/Quaternion
     148: dup
     149: invokespecial #12                 // Method com/jme3/math/Quaternion."<init>":()V
     152: invokeinterface #271,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     157: checkcast     #11                 // class com/jme3/math/Quaternion
     160: invokevirtual #71                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     163: pop
     164: aload_0
     165: aload_2
     166: ldc           #248                // String targetModel
     168: aconst_null
     169: invokeinterface #271,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     174: checkcast     #272                // class com/jme3/scene/Spatial
     177: putfield      #51                 // Field targetModel:Lcom/jme3/scene/Spatial;
     180: aload_0
     181: aload_2
     182: ldc           #249                // String skeleton
     184: aconst_null
     185: invokeinterface #271,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     190: checkcast     #273                // class com/jme3/animation/Skeleton
     193: putfield      #166                // Field skeleton:Lcom/jme3/animation/Skeleton;
     196: aload_0
     197: aload_2
     198: ldc           #250                // String initScale
     200: aconst_null
     201: invokeinterface #271,  3          // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     206: checkcast     #8                  // class com/jme3/math/Vector3f
     209: putfield      #146                // Field initScale:Lcom/jme3/math/Vector3f;
     212: aload_0
     213: aload_2
     214: ldc           #251                // String mode
     216: ldc_w         #274                // class com/jme3/bullet/control/KinematicRagdollControl$Mode
     219: getstatic     #17                 // Field com/jme3/bullet/control/KinematicRagdollControl$Mode.Kinematic:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     222: invokeinterface #275,  4          // InterfaceMethod com/jme3/export/InputCapsule.readEnum:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Enum;)Ljava/lang/Enum;
     227: checkcast     #274                // class com/jme3/bullet/control/KinematicRagdollControl$Mode
     230: putfield      #18                 // Field mode:Lcom/jme3/bullet/control/KinematicRagdollControl$Mode;
     233: aload_0
     234: aload_2
     235: ldc           #253                // String blendedControl
     237: iconst_0
     238: invokeinterface #276,  3          // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
     243: putfield      #20                 // Field blendedControl:Z
     246: aload_0
     247: aload_2
     248: ldc           #255                // String weightThreshold
     250: ldc           #21                 // float -1.0f
     252: invokeinterface #277,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     257: putfield      #22                 // Field weightThreshold:F
     260: aload_0
     261: aload_2
     262: ldc_w         #257                // String blendStart
     265: fconst_0
     266: invokeinterface #277,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     271: putfield      #23                 // Field blendStart:F
     274: aload_0
     275: aload_2
     276: ldc_w         #258                // String blendTime
     279: fconst_1
     280: invokeinterface #277,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     285: putfield      #24                 // Field blendTime:F
     288: aload_0
     289: aload_2
     290: ldc_w         #259                // String eventDispatchImpulseThreshold
     293: ldc           #25                 // float 10.0f
     295: invokeinterface #277,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     300: putfield      #26                 // Field eventDispatchImpulseThreshold:F
     303: aload_0
     304: aload_2
     305: ldc_w         #260                // String rootMass
     308: ldc           #27                 // float 15.0f
     310: invokeinterface #277,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     315: putfield      #28                 // Field rootMass:F
     318: aload_0
     319: aload_2
     320: ldc_w         #261                // String totalMass
     323: fconst_0
     324: invokeinterface #277,  3          // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     329: putfield      #29                 // Field totalMass:F
     332: return

  static {};
    Code:
       0: ldc_w         #106                // class com/jme3/bullet/control/KinematicRagdollControl
       3: invokevirtual #278                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #108                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: putstatic     #164                // Field logger:Ljava/util/logging/Logger;
      12: return
}
