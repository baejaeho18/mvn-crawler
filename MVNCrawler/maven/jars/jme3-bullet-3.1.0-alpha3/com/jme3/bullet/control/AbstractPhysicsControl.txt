Compiled from "AbstractPhysicsControl.java"
public abstract class com.jme3.bullet.control.AbstractPhysicsControl implements com.jme3.bullet.control.PhysicsControl {
  private final com.jme3.math.Quaternion tmp_inverseWorldRotation;

  protected com.jme3.scene.Spatial spatial;

  protected boolean enabled;

  protected boolean added;

  protected com.jme3.bullet.PhysicsSpace space;

  protected boolean applyLocal;

  public com.jme3.bullet.control.AbstractPhysicsControl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/jme3/math/Quaternion
       8: dup
       9: invokespecial #3                  // Method com/jme3/math/Quaternion."<init>":()V
      12: putfield      #4                  // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field enabled:Z
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field added:Z
      25: aload_0
      26: aconst_null
      27: putfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field applyLocal:Z
      35: return

  protected abstract void createSpatialData(com.jme3.scene.Spatial);

  protected abstract void removeSpatialData(com.jme3.scene.Spatial);

  protected abstract void setPhysicsLocation(com.jme3.math.Vector3f);

  protected abstract void setPhysicsRotation(com.jme3.math.Quaternion);

  protected abstract void addPhysics(com.jme3.bullet.PhysicsSpace);

  protected abstract void removePhysics(com.jme3.bullet.PhysicsSpace);

  public boolean isApplyPhysicsLocal();
    Code:
       0: aload_0
       1: getfield      #8                  // Field applyLocal:Z
       4: ireturn

  public void setApplyPhysicsLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field applyLocal:Z
       5: return

  protected com.jme3.math.Vector3f getSpatialTranslation();
    Code:
       0: aload_0
       1: getfield      #8                  // Field applyLocal:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      11: invokevirtual #10                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      14: areturn
      15: aload_0
      16: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      19: invokevirtual #11                 // Method com/jme3/scene/Spatial.getWorldTranslation:()Lcom/jme3/math/Vector3f;
      22: areturn

  protected com.jme3.math.Quaternion getSpatialRotation();
    Code:
       0: aload_0
       1: getfield      #8                  // Field applyLocal:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      11: invokevirtual #12                 // Method com/jme3/scene/Spatial.getLocalRotation:()Lcom/jme3/math/Quaternion;
      14: areturn
      15: aload_0
      16: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      19: invokevirtual #13                 // Method com/jme3/scene/Spatial.getWorldRotation:()Lcom/jme3/math/Quaternion;
      22: areturn

  protected void applyPhysicsTransform(com.jme3.math.Vector3f, com.jme3.math.Quaternion);
    Code:
       0: aload_0
       1: getfield      #5                  // Field enabled:Z
       4: ifeq          178
       7: aload_0
       8: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      11: ifnull        178
      14: aload_0
      15: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      18: invokevirtual #10                 // Method com/jme3/scene/Spatial.getLocalTranslation:()Lcom/jme3/math/Vector3f;
      21: astore_3
      22: aload_0
      23: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      26: invokevirtual #12                 // Method com/jme3/scene/Spatial.getLocalRotation:()Lcom/jme3/math/Quaternion;
      29: astore        4
      31: aload_0
      32: getfield      #8                  // Field applyLocal:Z
      35: ifne          162
      38: aload_0
      39: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      42: invokevirtual #14                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      45: ifnull        162
      48: aload_3
      49: aload_1
      50: invokevirtual #15                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      53: aload_0
      54: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      57: invokevirtual #14                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      60: invokevirtual #16                 // Method com/jme3/scene/Node.getWorldTranslation:()Lcom/jme3/math/Vector3f;
      63: invokevirtual #17                 // Method com/jme3/math/Vector3f.subtractLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      66: pop
      67: aload_3
      68: aload_0
      69: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      72: invokevirtual #14                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      75: invokevirtual #18                 // Method com/jme3/scene/Node.getWorldScale:()Lcom/jme3/math/Vector3f;
      78: invokevirtual #19                 // Method com/jme3/math/Vector3f.divideLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
      81: pop
      82: aload_0
      83: getfield      #4                  // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
      86: aload_0
      87: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      90: invokevirtual #14                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
      93: invokevirtual #20                 // Method com/jme3/scene/Node.getWorldRotation:()Lcom/jme3/math/Quaternion;
      96: invokevirtual #21                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
      99: invokevirtual #22                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     102: aload_3
     103: invokevirtual #23                 // Method com/jme3/math/Quaternion.multLocal:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
     106: pop
     107: aload         4
     109: aload_2
     110: invokevirtual #21                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     113: pop
     114: aload_0
     115: getfield      #4                  // Field tmp_inverseWorldRotation:Lcom/jme3/math/Quaternion;
     118: aload_0
     119: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
     122: invokevirtual #14                 // Method com/jme3/scene/Spatial.getParent:()Lcom/jme3/scene/Node;
     125: invokevirtual #20                 // Method com/jme3/scene/Node.getWorldRotation:()Lcom/jme3/math/Quaternion;
     128: invokevirtual #21                 // Method com/jme3/math/Quaternion.set:(Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     131: invokevirtual #22                 // Method com/jme3/math/Quaternion.inverseLocal:()Lcom/jme3/math/Quaternion;
     134: aload         4
     136: aload         4
     138: invokevirtual #24                 // Method com/jme3/math/Quaternion.mult:(Lcom/jme3/math/Quaternion;Lcom/jme3/math/Quaternion;)Lcom/jme3/math/Quaternion;
     141: pop
     142: aload_0
     143: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
     146: aload_3
     147: invokevirtual #25                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     150: aload_0
     151: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
     154: aload         4
     156: invokevirtual #26                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     159: goto          178
     162: aload_0
     163: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
     166: aload_1
     167: invokevirtual #25                 // Method com/jme3/scene/Spatial.setLocalTranslation:(Lcom/jme3/math/Vector3f;)V
     170: aload_0
     171: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
     174: aload_2
     175: invokevirtual #26                 // Method com/jme3/scene/Spatial.setLocalRotation:(Lcom/jme3/math/Quaternion;)V
     178: return

  public void setSpatial(com.jme3.scene.Spatial);
    Code:
       0: aload_0
       1: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
       4: ifnull        26
       7: aload_0
       8: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      11: aload_1
      12: if_acmpeq     26
      15: aload_0
      16: aload_0
      17: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      20: invokevirtual #27                 // Method removeSpatialData:(Lcom/jme3/scene/Spatial;)V
      23: goto          35
      26: aload_0
      27: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      30: aload_1
      31: if_acmpne     35
      34: return
      35: aload_0
      36: aload_1
      37: putfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      40: aload_1
      41: ifnonnull     45
      44: return
      45: aload_0
      46: aload_0
      47: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      50: invokevirtual #28                 // Method createSpatialData:(Lcom/jme3/scene/Spatial;)V
      53: aload_0
      54: aload_0
      55: invokevirtual #29                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      58: invokevirtual #30                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      61: aload_0
      62: aload_0
      63: invokevirtual #31                 // Method getSpatialRotation:()Lcom/jme3/math/Quaternion;
      66: invokevirtual #32                 // Method setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      69: return

  public void setEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field enabled:Z
       5: aload_0
       6: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       9: ifnull        86
      12: iload_1
      13: ifeq          62
      16: aload_0
      17: getfield      #6                  // Field added:Z
      20: ifne          62
      23: aload_0
      24: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      27: ifnull        46
      30: aload_0
      31: aload_0
      32: invokevirtual #29                 // Method getSpatialTranslation:()Lcom/jme3/math/Vector3f;
      35: invokevirtual #30                 // Method setPhysicsLocation:(Lcom/jme3/math/Vector3f;)V
      38: aload_0
      39: aload_0
      40: invokevirtual #31                 // Method getSpatialRotation:()Lcom/jme3/math/Quaternion;
      43: invokevirtual #32                 // Method setPhysicsRotation:(Lcom/jme3/math/Quaternion;)V
      46: aload_0
      47: aload_0
      48: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      51: invokevirtual #33                 // Method addPhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
      54: aload_0
      55: iconst_1
      56: putfield      #6                  // Field added:Z
      59: goto          86
      62: iload_1
      63: ifne          86
      66: aload_0
      67: getfield      #6                  // Field added:Z
      70: ifeq          86
      73: aload_0
      74: aload_0
      75: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      78: invokevirtual #34                 // Method removePhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
      81: aload_0
      82: iconst_0
      83: putfield      #6                  // Field added:Z
      86: return

  public boolean isEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field enabled:Z
       4: ireturn

  public void update(float);
    Code:
       0: return

  public void render(com.jme3.renderer.RenderManager, com.jme3.renderer.ViewPort);
    Code:
       0: return

  public void setPhysicsSpace(com.jme3.bullet.PhysicsSpace);
    Code:
       0: aload_1
       1: ifnonnull     27
       4: aload_0
       5: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       8: ifnull        61
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      16: invokevirtual #34                 // Method removePhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
      19: aload_0
      20: iconst_0
      21: putfield      #6                  // Field added:Z
      24: goto          61
      27: aload_0
      28: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      31: aload_1
      32: if_acmpne     36
      35: return
      36: aload_0
      37: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      40: ifnull        51
      43: aload_0
      44: aload_0
      45: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      48: invokevirtual #34                 // Method removePhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
      51: aload_0
      52: aload_1
      53: invokevirtual #33                 // Method addPhysics:(Lcom/jme3/bullet/PhysicsSpace;)V
      56: aload_0
      57: iconst_1
      58: putfield      #6                  // Field added:Z
      61: aload_0
      62: aload_1
      63: putfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
      66: return

  public com.jme3.bullet.PhysicsSpace getPhysicsSpace();
    Code:
       0: aload_0
       1: getfield      #7                  // Field space:Lcom/jme3/bullet/PhysicsSpace;
       4: areturn

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #35,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #5                  // Field enabled:Z
      13: ldc           #36                 // String enabled
      15: iconst_1
      16: invokeinterface #37,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      21: aload_2
      22: aload_0
      23: getfield      #8                  // Field applyLocal:Z
      26: ldc           #38                 // String applyLocalPhysics
      28: iconst_0
      29: invokeinterface #37,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      34: aload_2
      35: aload_0
      36: getfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      39: ldc           #39                 // String spatial
      41: aconst_null
      42: invokeinterface #40,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      47: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #41,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
       7: astore_2
       8: aload_0
       9: aload_2
      10: ldc           #36                 // String enabled
      12: iconst_1
      13: invokeinterface #42,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      18: putfield      #5                  // Field enabled:Z
      21: aload_0
      22: aload_2
      23: ldc           #39                 // String spatial
      25: aconst_null
      26: invokeinterface #43,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      31: checkcast     #44                 // class com/jme3/scene/Spatial
      34: putfield      #9                  // Field spatial:Lcom/jme3/scene/Spatial;
      37: aload_0
      38: aload_2
      39: ldc           #38                 // String applyLocalPhysics
      41: iconst_0
      42: invokeinterface #42,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      47: putfield      #8                  // Field applyLocal:Z
      50: return
}
