Compiled from "TranslationalLimitMotor.java"
public class com.jme3.bullet.joints.motors.TranslationalLimitMotor {
  private long motorId;

  public com.jme3.bullet.joints.motors.TranslationalLimitMotor(long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #2                  // Field motorId:J
       9: aload_0
      10: lload_1
      11: putfield      #2                  // Field motorId:J
      14: return

  public long getMotor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field motorId:J
       4: lreturn

  public com.jme3.math.Vector3f getLowerLimit();
    Code:
       0: new           #3                  // class com/jme3/math/Vector3f
       3: dup
       4: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field motorId:J
      13: aload_1
      14: invokespecial #5                  // Method getLowerLimit:(JLcom/jme3/math/Vector3f;)V
      17: aload_1
      18: areturn

  private native void getLowerLimit(long, com.jme3.math.Vector3f);

  public void setLowerLimit(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: aload_1
       6: invokespecial #6                  // Method setLowerLimit:(JLcom/jme3/math/Vector3f;)V
       9: return

  private native void setLowerLimit(long, com.jme3.math.Vector3f);

  public com.jme3.math.Vector3f getUpperLimit();
    Code:
       0: new           #3                  // class com/jme3/math/Vector3f
       3: dup
       4: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field motorId:J
      13: aload_1
      14: invokespecial #7                  // Method getUpperLimit:(JLcom/jme3/math/Vector3f;)V
      17: aload_1
      18: areturn

  private native void getUpperLimit(long, com.jme3.math.Vector3f);

  public void setUpperLimit(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: aload_1
       6: invokespecial #8                  // Method setUpperLimit:(JLcom/jme3/math/Vector3f;)V
       9: return

  private native void setUpperLimit(long, com.jme3.math.Vector3f);

  public com.jme3.math.Vector3f getAccumulatedImpulse();
    Code:
       0: new           #3                  // class com/jme3/math/Vector3f
       3: dup
       4: invokespecial #4                  // Method com/jme3/math/Vector3f."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_0
      10: getfield      #2                  // Field motorId:J
      13: aload_1
      14: invokespecial #9                  // Method getAccumulatedImpulse:(JLcom/jme3/math/Vector3f;)V
      17: aload_1
      18: areturn

  private native void getAccumulatedImpulse(long, com.jme3.math.Vector3f);

  public void setAccumulatedImpulse(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: aload_1
       6: invokespecial #10                 // Method setAccumulatedImpulse:(JLcom/jme3/math/Vector3f;)V
       9: return

  private native void setAccumulatedImpulse(long, com.jme3.math.Vector3f);

  public float getLimitSoftness();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: invokespecial #11                 // Method getLimitSoftness:(J)F
       8: freturn

  private native float getLimitSoftness(long);

  public void setLimitSoftness(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: fload_1
       6: invokespecial #12                 // Method setLimitSoftness:(JF)V
       9: return

  private native void setLimitSoftness(long, float);

  public float getDamping();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: invokespecial #13                 // Method getDamping:(J)F
       8: freturn

  private native float getDamping(long);

  public void setDamping(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: fload_1
       6: invokespecial #14                 // Method setDamping:(JF)V
       9: return

  private native void setDamping(long, float);

  public float getRestitution();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: invokespecial #15                 // Method getRestitution:(J)F
       8: freturn

  private native float getRestitution(long);

  public void setRestitution(float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field motorId:J
       5: fload_1
       6: invokespecial #16                 // Method setRestitution:(JF)V
       9: return

  private native void setRestitution(long, float);
}
