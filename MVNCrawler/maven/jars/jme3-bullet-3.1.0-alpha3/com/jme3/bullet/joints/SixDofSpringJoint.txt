Compiled from "SixDofSpringJoint.java"
public class com.jme3.bullet.joints.SixDofSpringJoint extends com.jme3.bullet.joints.SixDofJoint {
  final boolean[] springEnabled;

  final float[] equilibriumPoint;

  final float[] springStiffness;

  final float[] springDamping;

  public com.jme3.bullet.joints.SixDofSpringJoint();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/joints/SixDofJoint."<init>":()V
       4: aload_0
       5: bipush        6
       7: newarray       boolean
       9: putfield      #2                  // Field springEnabled:[Z
      12: aload_0
      13: bipush        6
      15: newarray       float
      17: putfield      #3                  // Field equilibriumPoint:[F
      20: aload_0
      21: bipush        6
      23: newarray       float
      25: putfield      #4                  // Field springStiffness:[F
      28: aload_0
      29: bipush        6
      31: newarray       float
      33: putfield      #5                  // Field springDamping:[F
      36: return

  public com.jme3.bullet.joints.SixDofSpringJoint(com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, com.jme3.math.Matrix3f, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: invokespecial #6                  // Method com/jme3/bullet/joints/SixDofJoint."<init>":(Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Lcom/jme3/math/Matrix3f;Z)V
      15: aload_0
      16: bipush        6
      18: newarray       boolean
      20: putfield      #2                  // Field springEnabled:[Z
      23: aload_0
      24: bipush        6
      26: newarray       float
      28: putfield      #3                  // Field equilibriumPoint:[F
      31: aload_0
      32: bipush        6
      34: newarray       float
      36: putfield      #4                  // Field springStiffness:[F
      39: aload_0
      40: bipush        6
      42: newarray       float
      44: putfield      #5                  // Field springDamping:[F
      47: return

  public void enableSpring(int, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field objectId:J
       5: iload_1
       6: iload_2
       7: invokevirtual #8                  // Method enableSpring:(JIZ)V
      10: return

  native void enableSpring(long, int, boolean);

  public void setStiffness(int, float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field objectId:J
       5: iload_1
       6: fload_2
       7: invokevirtual #9                  // Method setStiffness:(JIF)V
      10: return

  native void setStiffness(long, int, float);

  public void setDamping(int, float);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field objectId:J
       5: iload_1
       6: fload_2
       7: invokevirtual #10                 // Method setDamping:(JIF)V
      10: return

  native void setDamping(long, int, float);

  public void setEquilibriumPoint();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field objectId:J
       5: invokevirtual #11                 // Method setEquilibriumPoint:(J)V
       8: return

  native void setEquilibriumPoint(long);

  public void setEquilibriumPoint(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field objectId:J
       5: iload_1
       6: invokevirtual #12                 // Method setEquilibriumPoint:(JI)V
       9: return

  native void setEquilibriumPoint(long, int);

  native long createJoint(long, long, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, boolean);
}
