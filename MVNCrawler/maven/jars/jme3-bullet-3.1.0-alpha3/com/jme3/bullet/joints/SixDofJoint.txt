Compiled from "SixDofJoint.java"
public class com.jme3.bullet.joints.SixDofJoint extends com.jme3.bullet.joints.PhysicsJoint {
  com.jme3.math.Matrix3f rotA;

  com.jme3.math.Matrix3f rotB;

  boolean useLinearReferenceFrameA;

  java.util.LinkedList<com.jme3.bullet.joints.motors.RotationalLimitMotor> rotationalMotors;

  com.jme3.bullet.joints.motors.TranslationalLimitMotor translationalMotor;

  com.jme3.math.Vector3f angularUpperLimit;

  com.jme3.math.Vector3f angularLowerLimit;

  com.jme3.math.Vector3f linearUpperLimit;

  com.jme3.math.Vector3f linearLowerLimit;

  public com.jme3.bullet.joints.SixDofJoint();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/joints/PhysicsJoint."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field rotationalMotors:Ljava/util/LinkedList;
      15: aload_0
      16: new           #5                  // class com/jme3/math/Vector3f
      19: dup
      20: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      23: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      26: putfield      #8                  // Field angularUpperLimit:Lcom/jme3/math/Vector3f;
      29: aload_0
      30: new           #5                  // class com/jme3/math/Vector3f
      33: dup
      34: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      37: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      40: putfield      #10                 // Field angularLowerLimit:Lcom/jme3/math/Vector3f;
      43: aload_0
      44: new           #5                  // class com/jme3/math/Vector3f
      47: dup
      48: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      51: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      54: putfield      #11                 // Field linearUpperLimit:Lcom/jme3/math/Vector3f;
      57: aload_0
      58: new           #5                  // class com/jme3/math/Vector3f
      61: dup
      62: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      65: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      68: putfield      #12                 // Field linearLowerLimit:Lcom/jme3/math/Vector3f;
      71: return

  public com.jme3.bullet.joints.SixDofJoint(com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, com.jme3.math.Matrix3f, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #13                 // Method com/jme3/bullet/joints/PhysicsJoint."<init>":(Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
       9: aload_0
      10: new           #2                  // class java/util/LinkedList
      13: dup
      14: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      17: putfield      #4                  // Field rotationalMotors:Ljava/util/LinkedList;
      20: aload_0
      21: new           #5                  // class com/jme3/math/Vector3f
      24: dup
      25: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      28: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      31: putfield      #8                  // Field angularUpperLimit:Lcom/jme3/math/Vector3f;
      34: aload_0
      35: new           #5                  // class com/jme3/math/Vector3f
      38: dup
      39: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      42: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      45: putfield      #10                 // Field angularLowerLimit:Lcom/jme3/math/Vector3f;
      48: aload_0
      49: new           #5                  // class com/jme3/math/Vector3f
      52: dup
      53: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      56: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      59: putfield      #11                 // Field linearUpperLimit:Lcom/jme3/math/Vector3f;
      62: aload_0
      63: new           #5                  // class com/jme3/math/Vector3f
      66: dup
      67: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      70: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      73: putfield      #12                 // Field linearLowerLimit:Lcom/jme3/math/Vector3f;
      76: aload_0
      77: iload         7
      79: putfield      #14                 // Field useLinearReferenceFrameA:Z
      82: aload_0
      83: aload         5
      85: putfield      #15                 // Field rotA:Lcom/jme3/math/Matrix3f;
      88: aload_0
      89: aload         6
      91: putfield      #16                 // Field rotB:Lcom/jme3/math/Matrix3f;
      94: aload_0
      95: aload_0
      96: aload_1
      97: invokevirtual #17                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     100: aload_2
     101: invokevirtual #17                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     104: aload_3
     105: aload         5
     107: aload         4
     109: aload         6
     111: iload         7
     113: invokevirtual #18                 // Method createJoint:(JJLcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Z)J
     116: putfield      #19                 // Field objectId:J
     119: aload_0
     120: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     123: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
     126: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     129: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     132: ldc           #24                 // String Created Joint {0}
     134: aload_0
     135: getfield      #19                 // Field objectId:J
     138: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     141: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     144: aload_0
     145: invokespecial #27                 // Method gatherMotors:()V
     148: return

  public com.jme3.bullet.joints.SixDofJoint(com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.math.Vector3f, com.jme3.math.Vector3f, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #13                 // Method com/jme3/bullet/joints/PhysicsJoint."<init>":(Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
       9: aload_0
      10: new           #2                  // class java/util/LinkedList
      13: dup
      14: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      17: putfield      #4                  // Field rotationalMotors:Ljava/util/LinkedList;
      20: aload_0
      21: new           #5                  // class com/jme3/math/Vector3f
      24: dup
      25: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      28: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      31: putfield      #8                  // Field angularUpperLimit:Lcom/jme3/math/Vector3f;
      34: aload_0
      35: new           #5                  // class com/jme3/math/Vector3f
      38: dup
      39: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      42: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      45: putfield      #10                 // Field angularLowerLimit:Lcom/jme3/math/Vector3f;
      48: aload_0
      49: new           #5                  // class com/jme3/math/Vector3f
      52: dup
      53: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      56: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      59: putfield      #11                 // Field linearUpperLimit:Lcom/jme3/math/Vector3f;
      62: aload_0
      63: new           #5                  // class com/jme3/math/Vector3f
      66: dup
      67: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      70: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      73: putfield      #12                 // Field linearLowerLimit:Lcom/jme3/math/Vector3f;
      76: aload_0
      77: iload         5
      79: putfield      #14                 // Field useLinearReferenceFrameA:Z
      82: aload_0
      83: new           #28                 // class com/jme3/math/Matrix3f
      86: dup
      87: invokespecial #29                 // Method com/jme3/math/Matrix3f."<init>":()V
      90: putfield      #15                 // Field rotA:Lcom/jme3/math/Matrix3f;
      93: aload_0
      94: new           #28                 // class com/jme3/math/Matrix3f
      97: dup
      98: invokespecial #29                 // Method com/jme3/math/Matrix3f."<init>":()V
     101: putfield      #16                 // Field rotB:Lcom/jme3/math/Matrix3f;
     104: aload_0
     105: aload_0
     106: aload_1
     107: invokevirtual #17                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     110: aload_2
     111: invokevirtual #17                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
     114: aload_3
     115: aload_0
     116: getfield      #15                 // Field rotA:Lcom/jme3/math/Matrix3f;
     119: aload         4
     121: aload_0
     122: getfield      #16                 // Field rotB:Lcom/jme3/math/Matrix3f;
     125: iload         5
     127: invokevirtual #18                 // Method createJoint:(JJLcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Z)J
     130: putfield      #19                 // Field objectId:J
     133: aload_0
     134: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     137: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
     140: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
     143: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     146: ldc           #24                 // String Created Joint {0}
     148: aload_0
     149: getfield      #19                 // Field objectId:J
     152: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     155: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     158: aload_0
     159: invokespecial #27                 // Method gatherMotors:()V
     162: return

  private void gatherMotors();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: iconst_3
       4: if_icmpge     39
       7: new           #30                 // class com/jme3/bullet/joints/motors/RotationalLimitMotor
      10: dup
      11: aload_0
      12: aload_0
      13: getfield      #19                 // Field objectId:J
      16: iload_1
      17: invokespecial #31                 // Method getRotationalLimitMotor:(JI)J
      20: invokespecial #32                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor."<init>":(J)V
      23: astore_2
      24: aload_0
      25: getfield      #4                  // Field rotationalMotors:Ljava/util/LinkedList;
      28: aload_2
      29: invokevirtual #33                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      32: pop
      33: iinc          1, 1
      36: goto          2
      39: aload_0
      40: new           #34                 // class com/jme3/bullet/joints/motors/TranslationalLimitMotor
      43: dup
      44: aload_0
      45: aload_0
      46: getfield      #19                 // Field objectId:J
      49: invokespecial #35                 // Method getTranslationalLimitMotor:(J)J
      52: invokespecial #36                 // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor."<init>":(J)V
      55: putfield      #37                 // Field translationalMotor:Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
      58: return

  private native long getRotationalLimitMotor(long, int);

  private native long getTranslationalLimitMotor(long);

  public com.jme3.bullet.joints.motors.TranslationalLimitMotor getTranslationalLimitMotor();
    Code:
       0: aload_0
       1: getfield      #37                 // Field translationalMotor:Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
       4: areturn

  public com.jme3.bullet.joints.motors.RotationalLimitMotor getRotationalLimitMotor(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rotationalMotors:Ljava/util/LinkedList;
       4: iload_1
       5: invokevirtual #38                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
       8: checkcast     #30                 // class com/jme3/bullet/joints/motors/RotationalLimitMotor
      11: areturn

  public void setLinearUpperLimit(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #11                 // Field linearUpperLimit:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #39                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #19                 // Field objectId:J
      14: aload_1
      15: invokespecial #40                 // Method setLinearUpperLimit:(JLcom/jme3/math/Vector3f;)V
      18: return

  private native void setLinearUpperLimit(long, com.jme3.math.Vector3f);

  public void setLinearLowerLimit(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #12                 // Field linearLowerLimit:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #39                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #19                 // Field objectId:J
      14: aload_1
      15: invokespecial #41                 // Method setLinearLowerLimit:(JLcom/jme3/math/Vector3f;)V
      18: return

  private native void setLinearLowerLimit(long, com.jme3.math.Vector3f);

  public void setAngularUpperLimit(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #8                  // Field angularUpperLimit:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #39                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #19                 // Field objectId:J
      14: aload_1
      15: invokespecial #42                 // Method setAngularUpperLimit:(JLcom/jme3/math/Vector3f;)V
      18: return

  private native void setAngularUpperLimit(long, com.jme3.math.Vector3f);

  public void setAngularLowerLimit(com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: getfield      #10                 // Field angularLowerLimit:Lcom/jme3/math/Vector3f;
       4: aload_1
       5: invokevirtual #39                 // Method com/jme3/math/Vector3f.set:(Lcom/jme3/math/Vector3f;)Lcom/jme3/math/Vector3f;
       8: pop
       9: aload_0
      10: aload_0
      11: getfield      #19                 // Field objectId:J
      14: aload_1
      15: invokespecial #43                 // Method setAngularLowerLimit:(JLcom/jme3/math/Vector3f;)V
      18: return

  private native void setAngularLowerLimit(long, com.jme3.math.Vector3f);

  native long createJoint(long, long, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, boolean);

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method com/jme3/bullet/joints/PhysicsJoint.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #45,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_0
      15: aload_0
      16: getfield      #46                 // Field nodeA:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      19: invokevirtual #17                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
      22: aload_0
      23: getfield      #47                 // Field nodeB:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      26: invokevirtual #17                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
      29: aload_0
      30: getfield      #48                 // Field pivotA:Lcom/jme3/math/Vector3f;
      33: aload_0
      34: getfield      #15                 // Field rotA:Lcom/jme3/math/Matrix3f;
      37: aload_0
      38: getfield      #49                 // Field pivotB:Lcom/jme3/math/Vector3f;
      41: aload_0
      42: getfield      #16                 // Field rotB:Lcom/jme3/math/Matrix3f;
      45: aload_0
      46: getfield      #14                 // Field useLinearReferenceFrameA:Z
      49: invokevirtual #18                 // Method createJoint:(JJLcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Z)J
      52: putfield      #19                 // Field objectId:J
      55: aload_0
      56: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      59: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      62: invokestatic  #22                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      65: getstatic     #23                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      68: ldc           #24                 // String Created Joint {0}
      70: aload_0
      71: getfield      #19                 // Field objectId:J
      74: invokestatic  #25                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      77: invokevirtual #26                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      80: aload_0
      81: invokespecial #27                 // Method gatherMotors:()V
      84: aload_0
      85: aload_2
      86: ldc           #50                 // String angularUpperLimit
      88: new           #5                  // class com/jme3/math/Vector3f
      91: dup
      92: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      95: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      98: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     103: checkcast     #5                  // class com/jme3/math/Vector3f
     106: invokevirtual #52                 // Method setAngularUpperLimit:(Lcom/jme3/math/Vector3f;)V
     109: aload_0
     110: aload_2
     111: ldc           #53                 // String angularLowerLimit
     113: new           #5                  // class com/jme3/math/Vector3f
     116: dup
     117: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
     120: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
     123: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     128: checkcast     #5                  // class com/jme3/math/Vector3f
     131: invokevirtual #54                 // Method setAngularLowerLimit:(Lcom/jme3/math/Vector3f;)V
     134: aload_0
     135: aload_2
     136: ldc           #55                 // String linearUpperLimit
     138: new           #5                  // class com/jme3/math/Vector3f
     141: dup
     142: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
     145: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
     148: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     153: checkcast     #5                  // class com/jme3/math/Vector3f
     156: invokevirtual #56                 // Method setLinearUpperLimit:(Lcom/jme3/math/Vector3f;)V
     159: aload_0
     160: aload_2
     161: ldc           #57                 // String linearLowerLimit
     163: new           #5                  // class com/jme3/math/Vector3f
     166: dup
     167: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
     170: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
     173: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     178: checkcast     #5                  // class com/jme3/math/Vector3f
     181: invokevirtual #58                 // Method setLinearLowerLimit:(Lcom/jme3/math/Vector3f;)V
     184: iconst_0
     185: istore_3
     186: iload_3
     187: iconst_3
     188: if_icmpge     570
     191: aload_0
     192: iload_3
     193: invokevirtual #59                 // Method getRotationalLimitMotor:(I)Lcom/jme3/bullet/joints/motors/RotationalLimitMotor;
     196: astore        4
     198: aload         4
     200: aload_2
     201: new           #60                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #62                 // String rotMotor
     210: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: iload_3
     214: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     217: ldc           #65                 // String _Bounce
     219: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     225: fconst_0
     226: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     231: invokevirtual #68                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setBounce:(F)V
     234: aload         4
     236: aload_2
     237: new           #60                 // class java/lang/StringBuilder
     240: dup
     241: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     244: ldc           #62                 // String rotMotor
     246: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: iload_3
     250: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     253: ldc           #69                 // String _Damping
     255: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     261: fconst_1
     262: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     267: invokevirtual #70                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setDamping:(F)V
     270: aload         4
     272: aload_2
     273: new           #60                 // class java/lang/StringBuilder
     276: dup
     277: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     280: ldc           #62                 // String rotMotor
     282: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     285: iload_3
     286: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     289: ldc           #71                 // String _ERP
     291: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: ldc           #72                 // float 0.5f
     299: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     304: invokevirtual #73                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setERP:(F)V
     307: aload         4
     309: aload_2
     310: new           #60                 // class java/lang/StringBuilder
     313: dup
     314: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     317: ldc           #62                 // String rotMotor
     319: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     322: iload_3
     323: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     326: ldc           #74                 // String _HiLimit
     328: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     334: ldc           #75                 // float Infinityf
     336: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     341: invokevirtual #76                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setHiLimit:(F)V
     344: aload         4
     346: aload_2
     347: new           #60                 // class java/lang/StringBuilder
     350: dup
     351: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     354: ldc           #62                 // String rotMotor
     356: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: iload_3
     360: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     363: ldc           #77                 // String _LimitSoftness
     365: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     368: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     371: ldc           #72                 // float 0.5f
     373: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     378: invokevirtual #78                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setLimitSoftness:(F)V
     381: aload         4
     383: aload_2
     384: new           #60                 // class java/lang/StringBuilder
     387: dup
     388: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     391: ldc           #62                 // String rotMotor
     393: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     396: iload_3
     397: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     400: ldc           #79                 // String _LoLimit
     402: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     405: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     408: ldc           #80                 // float -Infinityf
     410: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     415: invokevirtual #81                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setLoLimit:(F)V
     418: aload         4
     420: aload_2
     421: new           #60                 // class java/lang/StringBuilder
     424: dup
     425: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     428: ldc           #62                 // String rotMotor
     430: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     433: iload_3
     434: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     437: ldc           #82                 // String _MaxLimitForce
     439: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     442: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     445: ldc           #83                 // float 300.0f
     447: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     452: invokevirtual #84                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setMaxLimitForce:(F)V
     455: aload         4
     457: aload_2
     458: new           #60                 // class java/lang/StringBuilder
     461: dup
     462: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     465: ldc           #62                 // String rotMotor
     467: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     470: iload_3
     471: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     474: ldc           #85                 // String _MaxMotorForce
     476: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     479: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     482: ldc           #86                 // float 0.1f
     484: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     489: invokevirtual #87                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setMaxMotorForce:(F)V
     492: aload         4
     494: aload_2
     495: new           #60                 // class java/lang/StringBuilder
     498: dup
     499: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     502: ldc           #62                 // String rotMotor
     504: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     507: iload_3
     508: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     511: ldc           #88                 // String _TargetVelocity
     513: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     516: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     519: fconst_0
     520: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     525: invokevirtual #89                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setTargetVelocity:(F)V
     528: aload         4
     530: aload_2
     531: new           #60                 // class java/lang/StringBuilder
     534: dup
     535: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     538: ldc           #62                 // String rotMotor
     540: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     543: iload_3
     544: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     547: ldc           #90                 // String _EnableMotor
     549: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     552: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     555: iconst_0
     556: invokeinterface #91,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
     561: invokevirtual #92                 // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.setEnableMotor:(Z)V
     564: iinc          3, 1
     567: goto          186
     570: aload_0
     571: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     574: aload_2
     575: ldc           #94                 // String transMotor_AccumulatedImpulse
     577: getstatic     #95                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     580: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     585: checkcast     #5                  // class com/jme3/math/Vector3f
     588: invokevirtual #96                 // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.setAccumulatedImpulse:(Lcom/jme3/math/Vector3f;)V
     591: aload_0
     592: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     595: aload_2
     596: ldc           #97                 // String transMotor_Damping
     598: fconst_1
     599: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     604: invokevirtual #98                 // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.setDamping:(F)V
     607: aload_0
     608: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     611: aload_2
     612: ldc           #99                 // String transMotor_LimitSoftness
     614: ldc           #100                // float 0.7f
     616: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     621: invokevirtual #101                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.setLimitSoftness:(F)V
     624: aload_0
     625: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     628: aload_2
     629: ldc           #102                // String transMotor_LowerLimit
     631: getstatic     #95                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     634: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     639: checkcast     #5                  // class com/jme3/math/Vector3f
     642: invokevirtual #103                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.setLowerLimit:(Lcom/jme3/math/Vector3f;)V
     645: aload_0
     646: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     649: aload_2
     650: ldc           #104                // String transMotor_Restitution
     652: ldc           #72                 // float 0.5f
     654: invokeinterface #67,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     659: invokevirtual #105                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.setRestitution:(F)V
     662: aload_0
     663: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     666: aload_2
     667: ldc           #106                // String transMotor_UpperLimit
     669: getstatic     #95                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     672: invokeinterface #51,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
     677: checkcast     #5                  // class com/jme3/math/Vector3f
     680: invokevirtual #107                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.setUpperLimit:(Lcom/jme3/math/Vector3f;)V
     683: return

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #108                // Method com/jme3/bullet/joints/PhysicsJoint.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #109,  2          // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #8                  // Field angularUpperLimit:Lcom/jme3/math/Vector3f;
      18: ldc           #50                 // String angularUpperLimit
      20: new           #5                  // class com/jme3/math/Vector3f
      23: dup
      24: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      27: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      30: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      35: aload_2
      36: aload_0
      37: getfield      #10                 // Field angularLowerLimit:Lcom/jme3/math/Vector3f;
      40: ldc           #53                 // String angularLowerLimit
      42: new           #5                  // class com/jme3/math/Vector3f
      45: dup
      46: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      49: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      52: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      57: aload_2
      58: aload_0
      59: getfield      #11                 // Field linearUpperLimit:Lcom/jme3/math/Vector3f;
      62: ldc           #55                 // String linearUpperLimit
      64: new           #5                  // class com/jme3/math/Vector3f
      67: dup
      68: getstatic     #6                  // Field com/jme3/math/Vector3f.POSITIVE_INFINITY:Lcom/jme3/math/Vector3f;
      71: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      74: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      79: aload_2
      80: aload_0
      81: getfield      #12                 // Field linearLowerLimit:Lcom/jme3/math/Vector3f;
      84: ldc           #57                 // String linearLowerLimit
      86: new           #5                  // class com/jme3/math/Vector3f
      89: dup
      90: getstatic     #9                  // Field com/jme3/math/Vector3f.NEGATIVE_INFINITY:Lcom/jme3/math/Vector3f;
      93: invokespecial #7                  // Method com/jme3/math/Vector3f."<init>":(Lcom/jme3/math/Vector3f;)V
      96: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     101: iconst_0
     102: istore_3
     103: aload_0
     104: getfield      #4                  // Field rotationalMotors:Ljava/util/LinkedList;
     107: invokevirtual #111                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     110: astore        4
     112: aload         4
     114: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          506
     122: aload         4
     124: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #30                 // class com/jme3/bullet/joints/motors/RotationalLimitMotor
     132: astore        5
     134: aload_2
     135: aload         5
     137: invokevirtual #114                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getBounce:()F
     140: new           #60                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #62                 // String rotMotor
     149: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: iload_3
     153: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     156: ldc           #65                 // String _Bounce
     158: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: fconst_0
     165: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     170: aload_2
     171: aload         5
     173: invokevirtual #116                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getDamping:()F
     176: new           #60                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     183: ldc           #62                 // String rotMotor
     185: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: iload_3
     189: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     192: ldc           #69                 // String _Damping
     194: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: fconst_1
     201: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     206: aload_2
     207: aload         5
     209: invokevirtual #117                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getERP:()F
     212: new           #60                 // class java/lang/StringBuilder
     215: dup
     216: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     219: ldc           #62                 // String rotMotor
     221: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     224: iload_3
     225: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     228: ldc           #71                 // String _ERP
     230: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     236: ldc           #72                 // float 0.5f
     238: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     243: aload_2
     244: aload         5
     246: invokevirtual #118                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getHiLimit:()F
     249: new           #60                 // class java/lang/StringBuilder
     252: dup
     253: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     256: ldc           #62                 // String rotMotor
     258: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: iload_3
     262: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     265: ldc           #74                 // String _HiLimit
     267: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: ldc           #75                 // float Infinityf
     275: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     280: aload_2
     281: aload         5
     283: invokevirtual #119                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getLimitSoftness:()F
     286: new           #60                 // class java/lang/StringBuilder
     289: dup
     290: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     293: ldc           #62                 // String rotMotor
     295: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     298: iload_3
     299: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     302: ldc           #77                 // String _LimitSoftness
     304: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     310: ldc           #72                 // float 0.5f
     312: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     317: aload_2
     318: aload         5
     320: invokevirtual #120                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getLoLimit:()F
     323: new           #60                 // class java/lang/StringBuilder
     326: dup
     327: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     330: ldc           #62                 // String rotMotor
     332: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     335: iload_3
     336: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     339: ldc           #79                 // String _LoLimit
     341: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     347: ldc           #80                 // float -Infinityf
     349: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     354: aload_2
     355: aload         5
     357: invokevirtual #121                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getMaxLimitForce:()F
     360: new           #60                 // class java/lang/StringBuilder
     363: dup
     364: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     367: ldc           #62                 // String rotMotor
     369: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     372: iload_3
     373: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     376: ldc           #82                 // String _MaxLimitForce
     378: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     381: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     384: ldc           #83                 // float 300.0f
     386: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     391: aload_2
     392: aload         5
     394: invokevirtual #122                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getMaxMotorForce:()F
     397: new           #60                 // class java/lang/StringBuilder
     400: dup
     401: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     404: ldc           #62                 // String rotMotor
     406: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     409: iload_3
     410: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     413: ldc           #85                 // String _MaxMotorForce
     415: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     418: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     421: ldc           #86                 // float 0.1f
     423: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     428: aload_2
     429: aload         5
     431: invokevirtual #123                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.getTargetVelocity:()F
     434: new           #60                 // class java/lang/StringBuilder
     437: dup
     438: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     441: ldc           #62                 // String rotMotor
     443: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     446: iload_3
     447: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     450: ldc           #88                 // String _TargetVelocity
     452: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     455: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     458: fconst_0
     459: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     464: aload_2
     465: aload         5
     467: invokevirtual #124                // Method com/jme3/bullet/joints/motors/RotationalLimitMotor.isEnableMotor:()Z
     470: new           #60                 // class java/lang/StringBuilder
     473: dup
     474: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
     477: ldc           #62                 // String rotMotor
     479: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     482: iload_3
     483: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     486: ldc           #90                 // String _EnableMotor
     488: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     494: iconst_0
     495: invokeinterface #125,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
     500: iinc          3, 1
     503: goto          112
     506: aload_2
     507: aload_0
     508: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     511: invokevirtual #126                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.getAccumulatedImpulse:()Lcom/jme3/math/Vector3f;
     514: ldc           #94                 // String transMotor_AccumulatedImpulse
     516: getstatic     #95                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     519: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     524: aload_2
     525: aload_0
     526: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     529: invokevirtual #127                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.getDamping:()F
     532: ldc           #97                 // String transMotor_Damping
     534: fconst_1
     535: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     540: aload_2
     541: aload_0
     542: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     545: invokevirtual #128                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.getLimitSoftness:()F
     548: ldc           #99                 // String transMotor_LimitSoftness
     550: ldc           #100                // float 0.7f
     552: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     557: aload_2
     558: aload_0
     559: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     562: invokevirtual #129                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.getLowerLimit:()Lcom/jme3/math/Vector3f;
     565: ldc           #102                // String transMotor_LowerLimit
     567: getstatic     #95                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     570: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     575: aload_2
     576: aload_0
     577: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     580: invokevirtual #130                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.getRestitution:()F
     583: ldc           #104                // String transMotor_Restitution
     585: ldc           #72                 // float 0.5f
     587: invokeinterface #115,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     592: aload_2
     593: aload_0
     594: invokevirtual #93                 // Method getTranslationalLimitMotor:()Lcom/jme3/bullet/joints/motors/TranslationalLimitMotor;
     597: invokevirtual #131                // Method com/jme3/bullet/joints/motors/TranslationalLimitMotor.getUpperLimit:()Lcom/jme3/math/Vector3f;
     600: ldc           #106                // String transMotor_UpperLimit
     602: getstatic     #95                 // Field com/jme3/math/Vector3f.ZERO:Lcom/jme3/math/Vector3f;
     605: invokeinterface #110,  4          // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
     610: return
}
