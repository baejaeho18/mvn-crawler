Compiled from "ConeJoint.java"
public class com.jme3.bullet.joints.ConeJoint extends com.jme3.bullet.joints.PhysicsJoint {
  protected com.jme3.math.Matrix3f rotA;

  protected com.jme3.math.Matrix3f rotB;

  protected float swingSpan1;

  protected float swingSpan2;

  protected float twistSpan;

  protected boolean angularOnly;

  public com.jme3.bullet.joints.ConeJoint();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/jme3/bullet/joints/PhysicsJoint."<init>":()V
       4: aload_0
       5: ldc           #2                  // float 1.0E30f
       7: putfield      #3                  // Field swingSpan1:F
      10: aload_0
      11: ldc           #2                  // float 1.0E30f
      13: putfield      #4                  // Field swingSpan2:F
      16: aload_0
      17: ldc           #2                  // float 1.0E30f
      19: putfield      #5                  // Field twistSpan:F
      22: aload_0
      23: iconst_0
      24: putfield      #6                  // Field angularOnly:Z
      27: return

  public com.jme3.bullet.joints.ConeJoint(com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.math.Vector3f, com.jme3.math.Vector3f);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #7                  // Method com/jme3/bullet/joints/PhysicsJoint."<init>":(Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
       9: aload_0
      10: ldc           #2                  // float 1.0E30f
      12: putfield      #3                  // Field swingSpan1:F
      15: aload_0
      16: ldc           #2                  // float 1.0E30f
      18: putfield      #4                  // Field swingSpan2:F
      21: aload_0
      22: ldc           #2                  // float 1.0E30f
      24: putfield      #5                  // Field twistSpan:F
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field angularOnly:Z
      32: aload_0
      33: new           #8                  // class com/jme3/math/Matrix3f
      36: dup
      37: invokespecial #9                  // Method com/jme3/math/Matrix3f."<init>":()V
      40: putfield      #10                 // Field rotA:Lcom/jme3/math/Matrix3f;
      43: aload_0
      44: new           #8                  // class com/jme3/math/Matrix3f
      47: dup
      48: invokespecial #9                  // Method com/jme3/math/Matrix3f."<init>":()V
      51: putfield      #11                 // Field rotB:Lcom/jme3/math/Matrix3f;
      54: aload_0
      55: invokevirtual #12                 // Method createJoint:()V
      58: return

  public com.jme3.bullet.joints.ConeJoint(com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.bullet.objects.PhysicsRigidBody, com.jme3.math.Vector3f, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, com.jme3.math.Matrix3f);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #7                  // Method com/jme3/bullet/joints/PhysicsJoint."<init>":(Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/bullet/objects/PhysicsRigidBody;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Vector3f;)V
       9: aload_0
      10: ldc           #2                  // float 1.0E30f
      12: putfield      #3                  // Field swingSpan1:F
      15: aload_0
      16: ldc           #2                  // float 1.0E30f
      18: putfield      #4                  // Field swingSpan2:F
      21: aload_0
      22: ldc           #2                  // float 1.0E30f
      24: putfield      #5                  // Field twistSpan:F
      27: aload_0
      28: iconst_0
      29: putfield      #6                  // Field angularOnly:Z
      32: aload_0
      33: aload         5
      35: putfield      #10                 // Field rotA:Lcom/jme3/math/Matrix3f;
      38: aload_0
      39: aload         6
      41: putfield      #11                 // Field rotB:Lcom/jme3/math/Matrix3f;
      44: aload_0
      45: invokevirtual #12                 // Method createJoint:()V
      48: return

  public void setLimit(float, float, float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #3                  // Field swingSpan1:F
       5: aload_0
       6: fload_2
       7: putfield      #4                  // Field swingSpan2:F
      10: aload_0
      11: fload_3
      12: putfield      #5                  // Field twistSpan:F
      15: aload_0
      16: aload_0
      17: getfield      #13                 // Field objectId:J
      20: fload_1
      21: fload_2
      22: fload_3
      23: invokespecial #14                 // Method setLimit:(JFFF)V
      26: return

  private native void setLimit(long, float, float, float);

  public void setAngularOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field angularOnly:Z
       5: aload_0
       6: aload_0
       7: getfield      #13                 // Field objectId:J
      10: iload_1
      11: invokespecial #15                 // Method setAngularOnly:(JZ)V
      14: return

  private native void setAngularOnly(long, boolean);

  public void write(com.jme3.export.JmeExporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/jme3/bullet/joints/PhysicsJoint.write:(Lcom/jme3/export/JmeExporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #17,  2           // InterfaceMethod com/jme3/export/JmeExporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/OutputCapsule;
      12: astore_2
      13: aload_2
      14: aload_0
      15: getfield      #10                 // Field rotA:Lcom/jme3/math/Matrix3f;
      18: ldc           #18                 // String rotA
      20: new           #8                  // class com/jme3/math/Matrix3f
      23: dup
      24: invokespecial #9                  // Method com/jme3/math/Matrix3f."<init>":()V
      27: invokeinterface #19,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      32: aload_2
      33: aload_0
      34: getfield      #11                 // Field rotB:Lcom/jme3/math/Matrix3f;
      37: ldc           #20                 // String rotB
      39: new           #8                  // class com/jme3/math/Matrix3f
      42: dup
      43: invokespecial #9                  // Method com/jme3/math/Matrix3f."<init>":()V
      46: invokeinterface #19,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(Lcom/jme3/export/Savable;Ljava/lang/String;Lcom/jme3/export/Savable;)V
      51: aload_2
      52: aload_0
      53: getfield      #6                  // Field angularOnly:Z
      56: ldc           #21                 // String angularOnly
      58: iconst_0
      59: invokeinterface #22,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(ZLjava/lang/String;Z)V
      64: aload_2
      65: aload_0
      66: getfield      #3                  // Field swingSpan1:F
      69: ldc           #23                 // String swingSpan1
      71: ldc           #2                  // float 1.0E30f
      73: invokeinterface #24,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      78: aload_2
      79: aload_0
      80: getfield      #4                  // Field swingSpan2:F
      83: ldc           #25                 // String swingSpan2
      85: ldc           #2                  // float 1.0E30f
      87: invokeinterface #24,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
      92: aload_2
      93: aload_0
      94: getfield      #5                  // Field twistSpan:F
      97: ldc           #26                 // String twistSpan
      99: ldc           #2                  // float 1.0E30f
     101: invokeinterface #24,  4           // InterfaceMethod com/jme3/export/OutputCapsule.write:(FLjava/lang/String;F)V
     106: return

  public void read(com.jme3.export.JmeImporter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method com/jme3/bullet/joints/PhysicsJoint.read:(Lcom/jme3/export/JmeImporter;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #28,  2           // InterfaceMethod com/jme3/export/JmeImporter.getCapsule:(Lcom/jme3/export/Savable;)Lcom/jme3/export/InputCapsule;
      12: astore_2
      13: aload_0
      14: aload_2
      15: ldc           #18                 // String rotA
      17: new           #8                  // class com/jme3/math/Matrix3f
      20: dup
      21: invokespecial #9                  // Method com/jme3/math/Matrix3f."<init>":()V
      24: invokeinterface #29,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      29: checkcast     #8                  // class com/jme3/math/Matrix3f
      32: putfield      #10                 // Field rotA:Lcom/jme3/math/Matrix3f;
      35: aload_0
      36: aload_2
      37: ldc           #20                 // String rotB
      39: new           #8                  // class com/jme3/math/Matrix3f
      42: dup
      43: invokespecial #9                  // Method com/jme3/math/Matrix3f."<init>":()V
      46: invokeinterface #29,  3           // InterfaceMethod com/jme3/export/InputCapsule.readSavable:(Ljava/lang/String;Lcom/jme3/export/Savable;)Lcom/jme3/export/Savable;
      51: checkcast     #8                  // class com/jme3/math/Matrix3f
      54: putfield      #11                 // Field rotB:Lcom/jme3/math/Matrix3f;
      57: aload_0
      58: aload_2
      59: ldc           #21                 // String angularOnly
      61: iconst_0
      62: invokeinterface #30,  3           // InterfaceMethod com/jme3/export/InputCapsule.readBoolean:(Ljava/lang/String;Z)Z
      67: putfield      #6                  // Field angularOnly:Z
      70: aload_0
      71: aload_2
      72: ldc           #23                 // String swingSpan1
      74: ldc           #2                  // float 1.0E30f
      76: invokeinterface #31,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      81: putfield      #3                  // Field swingSpan1:F
      84: aload_0
      85: aload_2
      86: ldc           #25                 // String swingSpan2
      88: ldc           #2                  // float 1.0E30f
      90: invokeinterface #31,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
      95: putfield      #4                  // Field swingSpan2:F
      98: aload_0
      99: aload_2
     100: ldc           #26                 // String twistSpan
     102: ldc           #2                  // float 1.0E30f
     104: invokeinterface #31,  3           // InterfaceMethod com/jme3/export/InputCapsule.readFloat:(Ljava/lang/String;F)F
     109: putfield      #5                  // Field twistSpan:F
     112: aload_0
     113: invokevirtual #12                 // Method createJoint:()V
     116: return

  protected void createJoint();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #32                 // Field nodeA:Lcom/jme3/bullet/objects/PhysicsRigidBody;
       6: invokevirtual #33                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
       9: aload_0
      10: getfield      #34                 // Field nodeB:Lcom/jme3/bullet/objects/PhysicsRigidBody;
      13: invokevirtual #33                 // Method com/jme3/bullet/objects/PhysicsRigidBody.getObjectId:()J
      16: aload_0
      17: getfield      #35                 // Field pivotA:Lcom/jme3/math/Vector3f;
      20: aload_0
      21: getfield      #10                 // Field rotA:Lcom/jme3/math/Matrix3f;
      24: aload_0
      25: getfield      #36                 // Field pivotB:Lcom/jme3/math/Vector3f;
      28: aload_0
      29: getfield      #11                 // Field rotB:Lcom/jme3/math/Matrix3f;
      32: invokespecial #37                 // Method createJoint:(JJLcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;Lcom/jme3/math/Vector3f;Lcom/jme3/math/Matrix3f;)J
      35: putfield      #13                 // Field objectId:J
      38: aload_0
      39: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokestatic  #40                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      48: getstatic     #41                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      51: ldc           #42                 // String Created Joint {0}
      53: aload_0
      54: getfield      #13                 // Field objectId:J
      57: invokestatic  #43                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
      60: invokevirtual #44                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      63: aload_0
      64: aload_0
      65: getfield      #13                 // Field objectId:J
      68: aload_0
      69: getfield      #3                  // Field swingSpan1:F
      72: aload_0
      73: getfield      #4                  // Field swingSpan2:F
      76: aload_0
      77: getfield      #5                  // Field twistSpan:F
      80: invokespecial #14                 // Method setLimit:(JFFF)V
      83: aload_0
      84: aload_0
      85: getfield      #13                 // Field objectId:J
      88: aload_0
      89: getfield      #6                  // Field angularOnly:Z
      92: invokespecial #15                 // Method setAngularOnly:(JZ)V
      95: return

  private native long createJoint(long, long, com.jme3.math.Vector3f, com.jme3.math.Matrix3f, com.jme3.math.Vector3f, com.jme3.math.Matrix3f);
}
