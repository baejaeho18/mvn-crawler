Compiled from "VertxDeployMojo.java"
class nl.jpoint.maven.vertx.mojo.VertxDeployMojo extends nl.jpoint.maven.vertx.mojo.AbstractDeployMojo {
  nl.jpoint.maven.vertx.mojo.VertxDeployMojo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method nl/jpoint/maven/vertx/mojo/AbstractDeployMojo."<init>":()V
       4: return

  public void execute() throws org.apache.maven.plugin.MojoExecutionException, org.apache.maven.plugin.MojoFailureException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method setActiveDeployConfig:()Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
       4: pop
       5: aload_0
       6: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
       9: invokevirtual #4                  // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isAutoScaling:()Z
      12: ifeq          63
      15: aload_0
      16: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      19: invokevirtual #5                  // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isOpsworks:()Z
      22: ifeq          63
      25: new           #6                  // class org/apache/maven/plugin/MojoFailureException
      28: dup
      29: new           #7                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #9                  // String ActiveConfiguration
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      45: invokevirtual #11                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getTarget:()Ljava/lang/String;
      48: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #12                 // String  has both OpsWorks and Autoscaling enabled
      53: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #14                 // Method org/apache/maven/plugin/MojoFailureException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: new           #15                 // class nl/jpoint/maven/vertx/utils/DeployUtils
      66: dup
      67: aload_0
      68: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
      71: aload_0
      72: getfield      #17                 // Field project:Lorg/apache/maven/project/MavenProject;
      75: invokespecial #18                 // Method nl/jpoint/maven/vertx/utils/DeployUtils."<init>":(Lorg/apache/maven/plugin/logging/Log;Lorg/apache/maven/project/MavenProject;)V
      78: astore_1
      79: aload_1
      80: aload_0
      81: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      84: ldc           #20                 // String mod
      86: invokevirtual #21                 // Method nl/jpoint/maven/vertx/utils/DeployUtils.createDeployModuleList:(Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;Ljava/lang/String;)Ljava/util/List;
      89: astore_2
      90: aload_1
      91: aload_0
      92: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      95: ldc           #22                 // String site
      97: invokevirtual #23                 // Method nl/jpoint/maven/vertx/utils/DeployUtils.createDeploySiteList:(Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;Ljava/lang/String;)Ljava/util/List;
     100: astore_3
     101: aload_1
     102: aload_0
     103: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     106: ldc           #24                 // String config
     108: invokevirtual #25                 // Method nl/jpoint/maven/vertx/utils/DeployUtils.createDeployConfigList:(Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;Ljava/lang/String;)Ljava/util/List;
     111: astore        4
     113: aload_0
     114: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     117: new           #7                  // class java/lang/StringBuilder
     120: dup
     121: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #26                 // String Constructed deploy request with \'
     126: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         4
     131: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     136: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: ldc           #29                 // String \' configs, \'
     141: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_3
     145: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     150: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     153: ldc           #30                 // String \' artifacts and \'
     155: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_2
     159: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     164: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     167: ldc           #31                 // String \' modules
     169: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokeinterface #32,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.info:(Ljava/lang/CharSequence;)V
     180: aload_0
     181: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     184: ldc           #33                 // String Executing deploy request, waiting for Vert.x to respond.... (this might take some time)
     186: invokeinterface #32,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.info:(Ljava/lang/CharSequence;)V
     191: aload_0
     192: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     195: invokevirtual #4                  // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isAutoScaling:()Z
     198: ifeq          212
     201: aload_0
     202: aload_2
     203: aload_3
     204: aload         4
     206: invokespecial #34                 // Method deployWithAutoScaling:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
     209: goto          241
     212: aload_0
     213: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     216: invokevirtual #5                  // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isOpsworks:()Z
     219: ifeq          233
     222: aload_0
     223: aload_2
     224: aload_3
     225: aload         4
     227: invokespecial #35                 // Method deployWithOpsWorks:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
     230: goto          241
     233: aload_0
     234: aload_2
     235: aload_3
     236: aload         4
     238: invokespecial #36                 // Method normalDeploy:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
     241: return

  private void deployWithAutoScaling(java.util.List<nl.jpoint.maven.vertx.request.Request>, java.util.List<nl.jpoint.maven.vertx.request.Request>, java.util.List<nl.jpoint.maven.vertx.request.Request>) throws org.apache.maven.plugin.MojoFailureException, org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
       4: invokevirtual #37                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getAutoScalingGroupId:()Ljava/lang/String;
       7: ifnonnull     48
      10: new           #38                 // class org/apache/maven/plugin/MojoExecutionException
      13: dup
      14: new           #7                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #9                  // String ActiveConfiguration
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      30: invokevirtual #11                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getTarget:()Ljava/lang/String;
      33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #39                 // String  has no autoScalingGroupId set
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #40                 // Method org/apache/maven/plugin/MojoExecutionException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #41                 // Field credentialsId:Ljava/lang/String;
      52: ifnonnull     65
      55: new           #38                 // class org/apache/maven/plugin/MojoExecutionException
      58: dup
      59: ldc           #42                 // String credentialsId is not set
      61: invokespecial #40                 // Method org/apache/maven/plugin/MojoExecutionException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: new           #43                 // class nl/jpoint/maven/vertx/utils/AwsDeployUtils
      68: dup
      69: aload_0
      70: getfield      #41                 // Field credentialsId:Ljava/lang/String;
      73: aload_0
      74: getfield      #44                 // Field settings:Lorg/apache/maven/settings/Settings;
      77: invokespecial #45                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils."<init>":(Ljava/lang/String;Lorg/apache/maven/settings/Settings;)V
      80: astore        4
      82: aload         4
      84: aload_0
      85: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
      88: aload_0
      89: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      92: invokevirtual #46                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.getInstancesForAutoScalingGroup:(Lorg/apache/maven/plugin/logging/Log;Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;)Ljava/util/List;
      95: astore        5
      97: aload         5
      99: new           #47                 // class nl/jpoint/maven/vertx/mojo/VertxDeployMojo$1
     102: dup
     103: aload_0
     104: invokespecial #48                 // Method nl/jpoint/maven/vertx/mojo/VertxDeployMojo$1."<init>":(Lnl/jpoint/maven/vertx/mojo/VertxDeployMojo;)V
     107: invokeinterface #49,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
     112: aload         5
     114: invokeinterface #50,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     119: ifeq          160
     122: new           #6                  // class org/apache/maven/plugin/MojoFailureException
     125: dup
     126: new           #7                  // class java/lang/StringBuilder
     129: dup
     130: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #51                 // String No inService instances found in group
     135: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     142: invokevirtual #37                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getAutoScalingGroupId:()Ljava/lang/String;
     145: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #52                 // String . Nothing to do here, move along
     150: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #14                 // Method org/apache/maven/plugin/MojoFailureException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: aload         4
     162: aload_0
     163: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     166: aload_0
     167: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     170: invokevirtual #53                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.suspendScheduledActions:(Lorg/apache/maven/plugin/logging/Log;Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;)V
     173: aload         4
     175: aload_0
     176: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     179: invokevirtual #54                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.getAutoscalingGroup:(Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;)Lcom/amazonaws/services/autoscaling/model/AutoScalingGroup;
     182: astore        6
     184: aload         6
     186: invokevirtual #55                 // Method com/amazonaws/services/autoscaling/model/AutoScalingGroup.getMinSize:()Ljava/lang/Integer;
     189: astore        7
     191: aload         6
     193: invokevirtual #55                 // Method com/amazonaws/services/autoscaling/model/AutoScalingGroup.getMinSize:()Ljava/lang/Integer;
     196: invokevirtual #56                 // Method java/lang/Integer.intValue:()I
     199: aload         6
     201: invokevirtual #57                 // Method com/amazonaws/services/autoscaling/model/AutoScalingGroup.getDesiredCapacity:()Ljava/lang/Integer;
     204: invokevirtual #56                 // Method java/lang/Integer.intValue:()I
     207: if_icmplt     248
     210: aload         4
     212: aload_0
     213: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     216: aload         6
     218: invokevirtual #57                 // Method com/amazonaws/services/autoscaling/model/AutoScalingGroup.getDesiredCapacity:()Ljava/lang/Integer;
     221: invokevirtual #56                 // Method java/lang/Integer.intValue:()I
     224: ifgt          231
     227: iconst_0
     228: goto          241
     231: aload         6
     233: invokevirtual #57                 // Method com/amazonaws/services/autoscaling/model/AutoScalingGroup.getDesiredCapacity:()Ljava/lang/Integer;
     236: invokevirtual #56                 // Method java/lang/Integer.intValue:()I
     239: iconst_1
     240: isub
     241: aload_0
     242: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     245: invokevirtual #58                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.setMinimalCapacity:(Lorg/apache/maven/plugin/logging/Log;ILnl/jpoint/maven/vertx/mojo/DeployConfiguration;)V
     248: aload         5
     250: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     255: astore        8
     257: aload         8
     259: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     264: ifeq          667
     267: aload         8
     269: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     274: checkcast     #62                 // class nl/jpoint/maven/vertx/utils/Ec2Instance
     277: astore        9
     279: new           #63                 // class nl/jpoint/maven/vertx/utils/RequestExecutor
     282: dup
     283: aload_0
     284: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     287: aload_0
     288: getfield      #64                 // Field requestTimeout:Ljava/lang/Integer;
     291: invokespecial #65                 // Method nl/jpoint/maven/vertx/utils/RequestExecutor."<init>":(Lorg/apache/maven/plugin/logging/Log;Ljava/lang/Integer;)V
     294: astore        10
     296: aload_0
     297: aload         5
     299: invokespecial #66                 // Method isInService:(Ljava/util/List;)Z
     302: istore        11
     304: aload_0
     305: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     308: new           #7                  // class java/lang/StringBuilder
     311: dup
     312: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     315: ldc           #67                 // String Auto scaling group inService :
     317: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: iload         11
     322: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     325: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     328: invokeinterface #32,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.info:(Ljava/lang/CharSequence;)V
     333: aload_0
     334: iload         11
     336: aload         9
     338: aload_0
     339: aload         5
     341: invokespecial #69                 // Method countInServiceInstances:(Ljava/util/List;)I
     344: invokespecial #70                 // Method ignoreFailure:(ZLnl/jpoint/maven/vertx/utils/Ec2Instance;I)Z
     347: istore        12
     349: aload_0
     350: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     353: new           #7                  // class java/lang/StringBuilder
     356: dup
     357: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     360: ldc           #71                 // String Ignoring failure for instance
     362: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     365: aload         9
     367: invokevirtual #72                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getInstanceId:()Ljava/lang/String;
     370: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     373: ldc           #73                 // String  :
     375: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     378: iload         12
     380: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     383: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     386: invokeinterface #32,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.info:(Ljava/lang/CharSequence;)V
     391: new           #74                 // class nl/jpoint/maven/vertx/request/DeployRequest$Builder
     394: dup
     395: invokespecial #75                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder."<init>":()V
     398: aload_1
     399: invokevirtual #76                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withModules:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     402: aload_2
     403: invokevirtual #77                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withArtifacts:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     406: aload_0
     407: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     410: invokevirtual #78                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isDeployConfig:()Z
     413: ifeq          420
     416: aload_3
     417: goto          421
     420: aconst_null
     421: invokevirtual #79                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withConfigs:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     424: aload_0
     425: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     428: invokevirtual #80                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.withElb:()Z
     431: invokevirtual #81                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withElb:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     434: aload         9
     436: invokevirtual #72                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getInstanceId:()Ljava/lang/String;
     439: invokevirtual #82                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withInstanceId:(Ljava/lang/String;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     442: aload_0
     443: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     446: invokevirtual #37                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getAutoScalingGroupId:()Ljava/lang/String;
     449: invokevirtual #83                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withAutoScalingGroup:(Ljava/lang/String;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     452: aload_0
     453: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     456: invokevirtual #84                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isDecrementDesiredCapacity:()Z
     459: invokevirtual #85                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withDecrementDesiredCapacity:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     462: aload_0
     463: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     466: invokevirtual #86                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.doRestart:()Z
     469: invokevirtual #87                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withRestart:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     472: invokevirtual #88                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.build:()Lnl/jpoint/maven/vertx/request/DeployRequest;
     475: astore        13
     477: aload_0
     478: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     481: new           #7                  // class java/lang/StringBuilder
     484: dup
     485: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     488: ldc           #89                 // String Sending deploy request  ->
     490: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     493: aload         13
     495: iconst_1
     496: invokevirtual #90                 // Method nl/jpoint/maven/vertx/request/DeployRequest.toJson:(Z)Ljava/lang/String;
     499: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     502: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     505: invokeinterface #91,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.debug:(Ljava/lang/CharSequence;)V
     510: aload_0
     511: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     514: new           #7                  // class java/lang/StringBuilder
     517: dup
     518: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     521: ldc           #92                 // String Sending deploy request to instance with id
     523: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     526: aload         9
     528: invokevirtual #72                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getInstanceId:()Ljava/lang/String;
     531: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     534: ldc           #93                 // String  state
     536: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     539: aload         9
     541: invokevirtual #94                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getState:()Lnl/jpoint/maven/vertx/utils/AwsState;
     544: invokevirtual #95                 // Method nl/jpoint/maven/vertx/utils/AwsState.name:()Ljava/lang/String;
     547: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     550: ldc           #96                 // String  and public IP
     552: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     555: aload         9
     557: invokevirtual #97                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getPublicIp:()Ljava/lang/String;
     560: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     563: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     566: invokeinterface #32,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.info:(Ljava/lang/CharSequence;)V
     571: aload         10
     573: aload         13
     575: aload_0
     576: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     579: invokevirtual #98                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getAwsPrivateIp:()Z
     582: ifeq          593
     585: aload         9
     587: invokevirtual #99                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getPrivateIp:()Ljava/lang/String;
     590: goto          598
     593: aload         9
     595: invokevirtual #97                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getPublicIp:()Ljava/lang/String;
     598: aload_0
     599: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     602: invokevirtual #80                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.withElb:()Z
     605: iload         12
     607: invokevirtual #100                // Method nl/jpoint/maven/vertx/utils/RequestExecutor.executeAwsDeployRequest:(Lnl/jpoint/maven/vertx/request/DeployRequest;Ljava/lang/String;ZZ)Lnl/jpoint/maven/vertx/utils/AwsState;
     610: astore        14
     612: aload_0
     613: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     616: new           #7                  // class java/lang/StringBuilder
     619: dup
     620: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     623: ldc           #101                // String Updates state for instance
     625: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     628: aload         9
     630: invokevirtual #72                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getInstanceId:()Ljava/lang/String;
     633: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     636: ldc           #102                // String  to
     638: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     641: aload         14
     643: invokevirtual #95                 // Method nl/jpoint/maven/vertx/utils/AwsState.name:()Ljava/lang/String;
     646: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     649: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     652: invokeinterface #32,  2           // InterfaceMethod org/apache/maven/plugin/logging/Log.info:(Ljava/lang/CharSequence;)V
     657: aload         9
     659: aload         14
     661: invokevirtual #103                // Method nl/jpoint/maven/vertx/utils/Ec2Instance.updateState:(Lnl/jpoint/maven/vertx/utils/AwsState;)V
     664: goto          257
     667: aload         4
     669: aload_0
     670: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     673: aload         7
     675: invokevirtual #56                 // Method java/lang/Integer.intValue:()I
     678: aload_0
     679: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     682: invokevirtual #58                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.setMinimalCapacity:(Lorg/apache/maven/plugin/logging/Log;ILnl/jpoint/maven/vertx/mojo/DeployConfiguration;)V
     685: aload         4
     687: aload_0
     688: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     691: aload_0
     692: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     695: invokevirtual #104                // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.resumeScheduledActions:(Lorg/apache/maven/plugin/logging/Log;Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;)V
     698: return

  private int countInServiceInstances(java.util.List<nl.jpoint.maven.vertx.utils.Ec2Instance>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          49
      18: aload_3
      19: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #62                 // class nl/jpoint/maven/vertx/utils/Ec2Instance
      27: astore        4
      29: aload         4
      31: invokevirtual #94                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getState:()Lnl/jpoint/maven/vertx/utils/AwsState;
      34: getstatic     #105                // Field nl/jpoint/maven/vertx/utils/AwsState.INSERVICE:Lnl/jpoint/maven/vertx/utils/AwsState;
      37: invokevirtual #106                // Method nl/jpoint/maven/vertx/utils/AwsState.equals:(Ljava/lang/Object;)Z
      40: ifeq          46
      43: iinc          2, 1
      46: goto          9
      49: iload_2
      50: ireturn

  private boolean ignoreFailure(boolean, nl.jpoint.maven.vertx.utils.Ec2Instance, int);
    Code:
       0: iload_1
       1: ifeq          26
       4: aload_2
       5: invokevirtual #94                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getState:()Lnl/jpoint/maven/vertx/utils/AwsState;
       8: getstatic     #107                // Field nl/jpoint/maven/vertx/utils/AwsState.OUTOFSERVICE:Lnl/jpoint/maven/vertx/utils/AwsState;
      11: invokevirtual #106                // Method nl/jpoint/maven/vertx/utils/AwsState.equals:(Ljava/lang/Object;)Z
      14: ifeq          26
      17: iload_3
      18: iconst_1
      19: if_icmple     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private boolean isInService(java.util.List<nl.jpoint.maven.vertx.utils.Ec2Instance>);
    Code:
       0: aload_1
       1: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          44
      16: aload_2
      17: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #62                 // class nl/jpoint/maven/vertx/utils/Ec2Instance
      25: astore_3
      26: aload_3
      27: invokevirtual #94                 // Method nl/jpoint/maven/vertx/utils/Ec2Instance.getState:()Lnl/jpoint/maven/vertx/utils/AwsState;
      30: getstatic     #105                // Field nl/jpoint/maven/vertx/utils/AwsState.INSERVICE:Lnl/jpoint/maven/vertx/utils/AwsState;
      33: invokevirtual #106                // Method nl/jpoint/maven/vertx/utils/AwsState.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          7
      44: iconst_0
      45: ireturn

  private void deployWithOpsWorks(java.util.List<nl.jpoint.maven.vertx.request.Request>, java.util.List<nl.jpoint.maven.vertx.request.Request>, java.util.List<nl.jpoint.maven.vertx.request.Request>) throws org.apache.maven.plugin.MojoFailureException, org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
       4: invokevirtual #108                // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getOpsWorksStackId:()Ljava/lang/String;
       7: ifnonnull     48
      10: new           #6                  // class org/apache/maven/plugin/MojoFailureException
      13: dup
      14: new           #7                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #9                  // String ActiveConfiguration
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      30: invokevirtual #11                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getTarget:()Ljava/lang/String;
      33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #109                // String  has no opsWorksStackId set
      38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #14                 // Method org/apache/maven/plugin/MojoFailureException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #41                 // Field credentialsId:Ljava/lang/String;
      52: ifnonnull     65
      55: new           #38                 // class org/apache/maven/plugin/MojoExecutionException
      58: dup
      59: ldc           #42                 // String credentialsId is not set
      61: invokespecial #40                 // Method org/apache/maven/plugin/MojoExecutionException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: new           #43                 // class nl/jpoint/maven/vertx/utils/AwsDeployUtils
      68: dup
      69: aload_0
      70: getfield      #41                 // Field credentialsId:Ljava/lang/String;
      73: aload_0
      74: getfield      #44                 // Field settings:Lorg/apache/maven/settings/Settings;
      77: invokespecial #45                 // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils."<init>":(Ljava/lang/String;Lorg/apache/maven/settings/Settings;)V
      80: astore        4
      82: aload         4
      84: aload_0
      85: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
      88: aload_0
      89: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      92: invokevirtual #110                // Method nl/jpoint/maven/vertx/utils/AwsDeployUtils.getHostsOpsWorks:(Lorg/apache/maven/plugin/logging/Log;Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;)V
      95: new           #74                 // class nl/jpoint/maven/vertx/request/DeployRequest$Builder
      98: dup
      99: invokespecial #75                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder."<init>":()V
     102: aload_1
     103: invokevirtual #76                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withModules:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     106: aload_2
     107: invokevirtual #77                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withArtifacts:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     110: aload_3
     111: invokevirtual #79                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withConfigs:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     114: aload_0
     115: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     118: invokevirtual #80                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.withElb:()Z
     121: invokevirtual #81                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withElb:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     124: aload_0
     125: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     128: invokevirtual #86                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.doRestart:()Z
     131: invokevirtual #87                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withRestart:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
     134: invokevirtual #88                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.build:()Lnl/jpoint/maven/vertx/request/DeployRequest;
     137: astore        5
     139: aload_0
     140: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     143: invokevirtual #111                // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getHosts:()Ljava/util/List;
     146: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     151: astore        6
     153: aload         6
     155: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     160: ifeq          213
     163: aload         6
     165: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     170: checkcast     #112                // class java/lang/String
     173: astore        7
     175: new           #63                 // class nl/jpoint/maven/vertx/utils/RequestExecutor
     178: dup
     179: aload_0
     180: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     183: aload_0
     184: getfield      #64                 // Field requestTimeout:Ljava/lang/Integer;
     187: invokespecial #65                 // Method nl/jpoint/maven/vertx/utils/RequestExecutor."<init>":(Lorg/apache/maven/plugin/logging/Log;Ljava/lang/Integer;)V
     190: astore        8
     192: aload         8
     194: aload         5
     196: aload         7
     198: aload_0
     199: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
     202: invokevirtual #80                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.withElb:()Z
     205: iconst_0
     206: invokevirtual #100                // Method nl/jpoint/maven/vertx/utils/RequestExecutor.executeAwsDeployRequest:(Lnl/jpoint/maven/vertx/request/DeployRequest;Ljava/lang/String;ZZ)Lnl/jpoint/maven/vertx/utils/AwsState;
     209: pop
     210: goto          153
     213: return

  private void normalDeploy(java.util.List<nl.jpoint.maven.vertx.request.Request>, java.util.List<nl.jpoint.maven.vertx.request.Request>, java.util.List<nl.jpoint.maven.vertx.request.Request>) throws org.apache.maven.plugin.MojoFailureException, org.apache.maven.plugin.MojoExecutionException;
    Code:
       0: new           #74                 // class nl/jpoint/maven/vertx/request/DeployRequest$Builder
       3: dup
       4: invokespecial #75                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder."<init>":()V
       7: aload_1
       8: invokevirtual #76                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withModules:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
      11: aload_2
      12: invokevirtual #77                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withArtifacts:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
      15: aload_0
      16: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      19: invokevirtual #78                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.isDeployConfig:()Z
      22: ifeq          29
      25: aload_3
      26: goto          30
      29: aconst_null
      30: invokevirtual #79                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withConfigs:(Ljava/util/List;)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
      33: aload_0
      34: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      37: invokevirtual #80                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.withElb:()Z
      40: invokevirtual #81                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withElb:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
      43: aload_0
      44: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      47: invokevirtual #86                 // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.doRestart:()Z
      50: invokevirtual #87                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.withRestart:(Z)Lnl/jpoint/maven/vertx/request/DeployRequest$Builder;
      53: invokevirtual #88                 // Method nl/jpoint/maven/vertx/request/DeployRequest$Builder.build:()Lnl/jpoint/maven/vertx/request/DeployRequest;
      56: astore        4
      58: aload_0
      59: getfield      #3                  // Field activeConfiguration:Lnl/jpoint/maven/vertx/mojo/DeployConfiguration;
      62: invokevirtual #111                // Method nl/jpoint/maven/vertx/mojo/DeployConfiguration.getHosts:()Ljava/util/List;
      65: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      70: astore        5
      72: aload         5
      74: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      79: ifeq          123
      82: aload         5
      84: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      89: checkcast     #112                // class java/lang/String
      92: astore        6
      94: new           #63                 // class nl/jpoint/maven/vertx/utils/RequestExecutor
      97: dup
      98: aload_0
      99: invokevirtual #16                 // Method getLog:()Lorg/apache/maven/plugin/logging/Log;
     102: aload_0
     103: getfield      #64                 // Field requestTimeout:Ljava/lang/Integer;
     106: invokespecial #65                 // Method nl/jpoint/maven/vertx/utils/RequestExecutor."<init>":(Lorg/apache/maven/plugin/logging/Log;Ljava/lang/Integer;)V
     109: astore        7
     111: aload         7
     113: aload         4
     115: aload         6
     117: invokevirtual #113                // Method nl/jpoint/maven/vertx/utils/RequestExecutor.executeDeployRequest:(Lnl/jpoint/maven/vertx/request/DeployRequest;Ljava/lang/String;)V
     120: goto          72
     123: return
}
