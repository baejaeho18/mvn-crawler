Compiled from "JobAutoScaler.java"
public class io.mantisrx.server.worker.jobmaster.JobAutoScaler$StageScaler {
  private final int stage;

  private final io.mantisrx.runtime.descriptor.StageSchedulingInfo stageSchedulingInfo;

  private final java.util.concurrent.atomic.AtomicReference<rx.Subscription> inProgressScalingSubscription;

  private final rx.functions.Func1<rx.Observable<? extends java.lang.Throwable>, rx.Observable<?>> retryLogic;

  final io.mantisrx.server.worker.jobmaster.JobAutoScaler this$0;

  public io.mantisrx.server.worker.jobmaster.JobAutoScaler$StageScaler(io.mantisrx.server.worker.jobmaster.JobAutoScaler, int, io.mantisrx.runtime.descriptor.StageSchedulingInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: aconst_null
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      18: putfield      #5                  // Field inProgressScalingSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      21: aload_0
      22: invokedynamic #6,  0              // InvokeDynamic #0:call:()Lrx/functions/Func1;
      27: putfield      #7                  // Field retryLogic:Lrx/functions/Func1;
      30: aload_0
      31: iload_2
      32: putfield      #8                  // Field stage:I
      35: aload_0
      36: aload_3
      37: putfield      #9                  // Field stageSchedulingInfo:Lio/mantisrx/runtime/descriptor/StageSchedulingInfo;
      40: return

  private void cancelOutstandingScalingRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field inProgressScalingSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        51
      10: aload_0
      11: getfield      #5                  // Field inProgressScalingSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      14: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      17: checkcast     #11                 // class rx/Subscription
      20: invokeinterface #12,  1           // InterfaceMethod rx/Subscription.isUnsubscribed:()Z
      25: ifne          51
      28: aload_0
      29: getfield      #5                  // Field inProgressScalingSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      32: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      35: checkcast     #11                 // class rx/Subscription
      38: invokeinterface #13,  1           // InterfaceMethod rx/Subscription.unsubscribe:()V
      43: aload_0
      44: getfield      #5                  // Field inProgressScalingSubscription:Ljava/util/concurrent/atomic/AtomicReference;
      47: aconst_null
      48: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      51: return

  private void setOutstandingScalingRequest(rx.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field inProgressScalingSubscription:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: aload_1
       6: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: pop
      10: return

  public int getDesiredWorkersForScaleUp(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field stageSchedulingInfo:Lio/mantisrx/runtime/descriptor/StageSchedulingInfo;
       4: invokevirtual #16                 // Method io/mantisrx/runtime/descriptor/StageSchedulingInfo.getScalingPolicy:()Lio/mantisrx/runtime/descriptor/StageScalingPolicy;
       7: invokevirtual #17                 // Method io/mantisrx/runtime/descriptor/StageScalingPolicy.isEnabled:()Z
      10: ifne          69
      13: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
      16: new           #19                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #21                 // String Job
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
      32: invokestatic  #23                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$100:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;)Ljava/lang/String;
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #24                 // String  stage
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #8                  // Field stage:I
      47: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #26                 // String  is not scalable, can\'t increment #workers by
      52: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_1
      56: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      67: iload_2
      68: ireturn
      69: iload_2
      70: iflt          78
      73: iload_1
      74: iconst_1
      75: if_icmpge     98
      78: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
      81: ldc           #29                 // String current number of workers({}) not known or increment({}) < 1, will not scale up
      83: iload_2
      84: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: iload_1
      88: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokeinterface #31,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      96: iload_2
      97: ireturn
      98: aload_0
      99: getfield      #9                  // Field stageSchedulingInfo:Lio/mantisrx/runtime/descriptor/StageSchedulingInfo;
     102: invokevirtual #16                 // Method io/mantisrx/runtime/descriptor/StageSchedulingInfo.getScalingPolicy:()Lio/mantisrx/runtime/descriptor/StageScalingPolicy;
     105: invokevirtual #32                 // Method io/mantisrx/runtime/descriptor/StageScalingPolicy.getMax:()I
     108: istore        4
     110: iload_2
     111: iload_1
     112: iadd
     113: iload         4
     115: invokestatic  #33                 // Method java/lang/Math.min:(II)I
     118: istore_3
     119: iload_3
     120: ireturn

  public void scaleUpStage(int, int, java.lang.String);
    Code:
       0: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
       3: ldc           #34                 // String scaleUpStage incrementing number of workers from {} to {}
       5: iload_1
       6: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: iload_2
      10: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokeinterface #35,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #36                 // Method cancelOutstandingScalingRequest:()V
      22: aload_0
      23: getfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
      26: invokestatic  #37                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$300:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;)Lio/mantisrx/server/master/client/MantisMasterClientApi;
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
      33: invokestatic  #23                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$100:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;)Ljava/lang/String;
      36: aload_0
      37: getfield      #8                  // Field stage:I
      40: iload_2
      41: aload_3
      42: invokevirtual #38                 // Method io/mantisrx/server/master/client/MantisMasterClientApi.scaleJobStage:(Ljava/lang/String;IILjava/lang/String;)Lrx/Observable;
      45: aload_0
      46: getfield      #7                  // Field retryLogic:Lrx/functions/Func1;
      49: invokevirtual #39                 // Method rx/Observable.retryWhen:(Lrx/functions/Func1;)Lrx/Observable;
      52: aload_0
      53: invokedynamic #40,  0             // InvokeDynamic #1:call:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler$StageScaler;)Lrx/functions/Func1;
      58: invokevirtual #41                 // Method rx/Observable.onErrorResumeNext:(Lrx/functions/Func1;)Lrx/Observable;
      61: invokevirtual #42                 // Method rx/Observable.subscribe:()Lrx/Subscription;
      64: astore        4
      66: aload_0
      67: aload         4
      69: invokespecial #43                 // Method setOutstandingScalingRequest:(Lrx/Subscription;)V
      72: return

  public int getDesiredWorkersForScaleDown(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field stageSchedulingInfo:Lio/mantisrx/runtime/descriptor/StageSchedulingInfo;
       4: invokevirtual #16                 // Method io/mantisrx/runtime/descriptor/StageSchedulingInfo.getScalingPolicy:()Lio/mantisrx/runtime/descriptor/StageScalingPolicy;
       7: invokevirtual #17                 // Method io/mantisrx/runtime/descriptor/StageScalingPolicy.isEnabled:()Z
      10: ifne          69
      13: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
      16: new           #19                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #21                 // String Job
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
      32: invokestatic  #23                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$100:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;)Ljava/lang/String;
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #24                 // String  stage
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #8                  // Field stage:I
      47: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #44                 // String  is not scalable, can\'t decrement #workers by
      52: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_1
      56: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      67: iload_2
      68: ireturn
      69: iload_2
      70: iflt          78
      73: iload_1
      74: iconst_1
      75: if_icmpge     98
      78: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
      81: ldc           #45                 // String current number of workers({}) not known or decrement({}) < 1, will not scale down
      83: iload_2
      84: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: iload_1
      88: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokeinterface #31,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      96: iload_2
      97: ireturn
      98: iload_1
      99: iload_2
     100: if_icmple     126
     103: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
     106: ldc           #46                 // String trying to decrement by {} more than current number of workers({}), will set desired workers to 0
     108: iload_1
     109: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     112: iload_2
     113: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     116: invokeinterface #31,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     121: iconst_0
     122: istore_3
     123: goto          147
     126: aload_0
     127: getfield      #9                  // Field stageSchedulingInfo:Lio/mantisrx/runtime/descriptor/StageSchedulingInfo;
     130: invokevirtual #16                 // Method io/mantisrx/runtime/descriptor/StageSchedulingInfo.getScalingPolicy:()Lio/mantisrx/runtime/descriptor/StageScalingPolicy;
     133: invokevirtual #47                 // Method io/mantisrx/runtime/descriptor/StageScalingPolicy.getMin:()I
     136: istore        4
     138: iload_2
     139: iload_1
     140: isub
     141: iload         4
     143: invokestatic  #48                 // Method java/lang/Math.max:(II)I
     146: istore_3
     147: iload_3
     148: ireturn

  public void scaleDownStage(int, int, java.lang.String);
    Code:
       0: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
       3: ldc           #49                 // String scaleDownStage decrementing number of workers from {} to {}
       5: iload_1
       6: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: iload_2
      10: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: invokeinterface #35,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: invokespecial #36                 // Method cancelOutstandingScalingRequest:()V
      22: aload_0
      23: getfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
      26: invokestatic  #37                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$300:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;)Lio/mantisrx/server/master/client/MantisMasterClientApi;
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;
      33: invokestatic  #23                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$100:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler;)Ljava/lang/String;
      36: aload_0
      37: getfield      #8                  // Field stage:I
      40: iload_2
      41: aload_3
      42: invokevirtual #38                 // Method io/mantisrx/server/master/client/MantisMasterClientApi.scaleJobStage:(Ljava/lang/String;IILjava/lang/String;)Lrx/Observable;
      45: aload_0
      46: getfield      #7                  // Field retryLogic:Lrx/functions/Func1;
      49: invokevirtual #39                 // Method rx/Observable.retryWhen:(Lrx/functions/Func1;)Lrx/Observable;
      52: aload_0
      53: invokedynamic #50,  0             // InvokeDynamic #2:call:(Lio/mantisrx/server/worker/jobmaster/JobAutoScaler$StageScaler;)Lrx/functions/Func1;
      58: invokevirtual #41                 // Method rx/Observable.onErrorResumeNext:(Lrx/functions/Func1;)Lrx/Observable;
      61: invokevirtual #42                 // Method rx/Observable.subscribe:()Lrx/Subscription;
      64: astore        4
      66: aload_0
      67: aload         4
      69: invokespecial #43                 // Method setOutstandingScalingRequest:(Lrx/Subscription;)V
      72: return

  public int getStage();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stage:I
       4: ireturn

  private rx.Observable lambda$scaleDownStage$4(java.lang.Throwable);
    Code:
       0: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
       3: ldc           #51                 // String caught error when scaling down stage {}
       5: aload_0
       6: getfield      #8                  // Field stage:I
       9: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      17: invokestatic  #53                 // Method rx/Observable.empty:()Lrx/Observable;
      20: areturn

  private rx.Observable lambda$scaleUpStage$3(java.lang.Throwable);
    Code:
       0: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
       3: ldc           #54                 // String caught error when scaling up stage {}
       5: aload_0
       6: getfield      #8                  // Field stage:I
       9: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      17: invokestatic  #53                 // Method rx/Observable.empty:()Lrx/Observable;
      20: areturn

  private static rx.Observable lambda$new$2(rx.Observable);
    Code:
       0: aload_0
       1: iconst_1
       2: ldc           #56                 // int 2147483647
       4: invokestatic  #57                 // Method rx/Observable.range:(II)Lrx/Observable;
       7: invokedynamic #58,  0             // InvokeDynamic #3:call:()Lrx/functions/Func2;
      12: invokevirtual #59                 // Method rx/Observable.zipWith:(Lrx/Observable;Lrx/functions/Func2;)Lrx/Observable;
      15: invokedynamic #60,  0             // InvokeDynamic #4:call:()Lrx/functions/Func1;
      20: invokevirtual #61                 // Method rx/Observable.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
      23: areturn

  private static rx.Observable lambda$null$1(java.lang.Integer);
    Code:
       0: iconst_2
       1: aload_0
       2: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
       5: iconst_5
       6: if_icmple     14
       9: bipush        10
      11: goto          18
      14: aload_0
      15: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
      18: imul
      19: i2l
      20: lstore_1
      21: invokestatic  #18                 // Method io/mantisrx/server/worker/jobmaster/JobAutoScaler.access$200:()Lorg/slf4j/Logger;
      24: new           #19                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #63                 // String retrying scaleJobStage request after sleeping for
      33: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: lload_1
      37: invokevirtual #64                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      40: ldc           #65                 // String  secs
      42: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokeinterface #66,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      53: lload_1
      54: getstatic     #67                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      57: invokestatic  #68                 // Method rx/Observable.timer:(JLjava/util/concurrent/TimeUnit;)Lrx/Observable;
      60: areturn

  private static java.lang.Integer lambda$null$0(java.lang.Throwable, java.lang.Integer);
    Code:
       0: aload_1
       1: areturn
}
