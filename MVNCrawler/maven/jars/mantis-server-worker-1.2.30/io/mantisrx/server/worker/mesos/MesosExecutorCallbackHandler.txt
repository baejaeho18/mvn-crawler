Compiled from "MesosExecutorCallbackHandler.java"
public class io.mantisrx.server.worker.mesos.MesosExecutorCallbackHandler implements org.apache.mesos.Executor {
  private static final org.slf4j.Logger logger;

  private rx.Observer<io.mantisrx.server.worker.WrappedExecuteStageRequest> executeStageRequestObserver;

  private com.fasterxml.jackson.databind.ObjectMapper mapper;

  public io.mantisrx.server.worker.mesos.MesosExecutorCallbackHandler(rx.Observer<io.mantisrx.server.worker.WrappedExecuteStageRequest>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class com/fasterxml/jackson/databind/ObjectMapper
       8: dup
       9: invokespecial #5                  // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      12: putfield      #6                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field executeStageRequestObserver:Lrx/Observer;
      20: aload_0
      21: getfield      #6                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      24: getstatic     #8                  // Field com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
      27: iconst_0
      28: invokevirtual #9                  // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
      31: pop
      32: return

  public void disconnected(org.apache.mesos.ExecutorDriver);
    Code:
       0: return

  public void error(org.apache.mesos.ExecutorDriver, java.lang.String);
    Code:
       0: getstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       3: aload_2
       4: invokeinterface #10,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
       9: return

  public void frameworkMessage(org.apache.mesos.ExecutorDriver, byte[]);
    Code:
       0: return

  public void killTask(org.apache.mesos.ExecutorDriver, org.apache.mesos.Protos$TaskID);
    Code:
       0: getstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       3: new           #11                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #13                 // String Executor going to kill task
      12: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_2
      16: invokevirtual #15                 // Method org/apache/mesos/Protos$TaskID.getValue:()Ljava/lang/String;
      19: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      30: aload_0
      31: getfield      #7                  // Field executeStageRequestObserver:Lrx/Observer;
      34: invokeinterface #18,  1           // InterfaceMethod rx/Observer.onCompleted:()V
      39: aload_0
      40: invokespecial #19                 // Method waitAndExit:()V
      43: return

  private void waitAndExit();
    Code:
       0: new           #20                 // class io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler$1
       3: dup
       4: aload_0
       5: invokespecial #21                 // Method io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler$1."<init>":(Lio/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler;)V
       8: astore_1
       9: aload_1
      10: iconst_1
      11: invokevirtual #22                 // Method java/lang/Thread.setDaemon:(Z)V
      14: aload_1
      15: invokevirtual #23                 // Method java/lang/Thread.start:()V
      18: return

  private io.mantisrx.server.worker.WrappedExecuteStageRequest createExecuteStageRequest(org.apache.mesos.Protos$TaskInfo);
    Code:
       0: new           #24                 // class io/mantisrx/server/worker/WrappedExecuteStageRequest
       3: dup
       4: invokestatic  #25                 // Method rx/subjects/PublishSubject.create:()Lrx/subjects/PublishSubject;
       7: aload_0
       8: getfield      #6                  // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      11: aload_1
      12: invokevirtual #26                 // Method org/apache/mesos/Protos$TaskInfo.getData:()Lcom/google/protobuf/ByteString;
      15: invokevirtual #27                 // Method com/google/protobuf/ByteString.toByteArray:()[B
      18: ldc           #28                 // class io/mantisrx/server/core/ExecuteStageRequest
      20: invokevirtual #29                 // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:([BLjava/lang/Class;)Ljava/lang/Object;
      23: checkcast     #28                 // class io/mantisrx/server/core/ExecuteStageRequest
      26: invokespecial #30                 // Method io/mantisrx/server/worker/WrappedExecuteStageRequest."<init>":(Lrx/subjects/PublishSubject;Lio/mantisrx/server/core/ExecuteStageRequest;)V
      29: areturn
      30: astore_2
      31: aload_2
      32: invokevirtual #32                 // Method java/io/IOException.printStackTrace:()V
      35: aconst_null
      36: areturn
    Exception table:
       from    to  target type
           0    29    30   Class java/io/IOException

  private void sendLaunchError(org.apache.mesos.ExecutorDriver, org.apache.mesos.Protos$TaskInfo);
    Code:
       0: aload_1
       1: invokestatic  #33                 // Method org/apache/mesos/Protos$TaskStatus.newBuilder:()Lorg/apache/mesos/Protos$TaskStatus$Builder;
       4: aload_2
       5: invokevirtual #34                 // Method org/apache/mesos/Protos$TaskInfo.getTaskId:()Lorg/apache/mesos/Protos$TaskID;
       8: invokevirtual #35                 // Method org/apache/mesos/Protos$TaskStatus$Builder.setTaskId:(Lorg/apache/mesos/Protos$TaskID;)Lorg/apache/mesos/Protos$TaskStatus$Builder;
      11: getstatic     #36                 // Field org/apache/mesos/Protos$TaskState.TASK_FAILED:Lorg/apache/mesos/Protos$TaskState;
      14: invokevirtual #37                 // Method org/apache/mesos/Protos$TaskStatus$Builder.setState:(Lorg/apache/mesos/Protos$TaskState;)Lorg/apache/mesos/Protos$TaskStatus$Builder;
      17: invokevirtual #38                 // Method org/apache/mesos/Protos$TaskStatus$Builder.build:()Lorg/apache/mesos/Protos$TaskStatus;
      20: invokeinterface #39,  2           // InterfaceMethod org/apache/mesos/ExecutorDriver.sendStatusUpdate:(Lorg/apache/mesos/Protos$TaskStatus;)Lorg/apache/mesos/Protos$Status;
      25: pop
      26: aload_0
      27: invokespecial #19                 // Method waitAndExit:()V
      30: return

  private void setupRequestFailureHandler(long, rx.Observable<java.lang.Boolean>, rx.functions.Action0);
    Code:
       0: aload_3
       1: lload_1
       2: getstatic     #40                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: iconst_1
       6: invokevirtual #41                 // Method rx/Observable.buffer:(JLjava/util/concurrent/TimeUnit;I)Lrx/Observable;
       9: iconst_1
      10: invokevirtual #42                 // Method rx/Observable.take:(I)Lrx/Observable;
      13: new           #43                 // class io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler$2
      16: dup
      17: aload_0
      18: aload         4
      20: invokespecial #44                 // Method io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler$2."<init>":(Lio/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler;Lrx/functions/Action0;)V
      23: invokevirtual #45                 // Method rx/Observable.subscribe:(Lrx/Observer;)Lrx/Subscription;
      26: pop
      27: return

  public void launchTask(org.apache.mesos.ExecutorDriver, org.apache.mesos.Protos$TaskInfo);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #46                 // Method createExecuteStageRequest:(Lorg/apache/mesos/Protos$TaskInfo;)Lio/mantisrx/server/worker/WrappedExecuteStageRequest;
       5: astore_3
       6: getstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       9: new           #11                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #47                 // String Worker for task [
      18: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_2
      22: invokevirtual #34                 // Method org/apache/mesos/Protos$TaskInfo.getTaskId:()Lorg/apache/mesos/Protos$TaskID;
      25: invokevirtual #15                 // Method org/apache/mesos/Protos$TaskID.getValue:()Ljava/lang/String;
      28: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #48                 // String ] with startTimeout=
      33: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #49                 // Method io/mantisrx/server/worker/WrappedExecuteStageRequest.getRequest:()Lio/mantisrx/server/core/ExecuteStageRequest;
      40: invokevirtual #50                 // Method io/mantisrx/server/core/ExecuteStageRequest.getTimeoutToReportStart:()J
      43: invokevirtual #51                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      46: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #17,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      54: aload_0
      55: aload_3
      56: invokevirtual #49                 // Method io/mantisrx/server/worker/WrappedExecuteStageRequest.getRequest:()Lio/mantisrx/server/core/ExecuteStageRequest;
      59: invokevirtual #50                 // Method io/mantisrx/server/core/ExecuteStageRequest.getTimeoutToReportStart:()J
      62: aload_3
      63: invokevirtual #52                 // Method io/mantisrx/server/worker/WrappedExecuteStageRequest.getRequestSubject:()Lrx/subjects/PublishSubject;
      66: new           #53                 // class io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler$3
      69: dup
      70: aload_0
      71: aload_1
      72: aload_2
      73: invokespecial #54                 // Method io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler$3."<init>":(Lio/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler;Lorg/apache/mesos/ExecutorDriver;Lorg/apache/mesos/Protos$TaskInfo;)V
      76: invokespecial #55                 // Method setupRequestFailureHandler:(JLrx/Observable;Lrx/functions/Action0;)V
      79: aload_0
      80: getfield      #7                  // Field executeStageRequestObserver:Lrx/Observer;
      83: aload_3
      84: invokeinterface #56,  2           // InterfaceMethod rx/Observer.onNext:(Ljava/lang/Object;)V
      89: return

  public void registered(org.apache.mesos.ExecutorDriver, org.apache.mesos.Protos$ExecutorInfo, org.apache.mesos.Protos$FrameworkInfo, org.apache.mesos.Protos$SlaveInfo);
    Code:
       0: return

  public void reregistered(org.apache.mesos.ExecutorDriver, org.apache.mesos.Protos$SlaveInfo);
    Code:
       0: return

  public void shutdown(org.apache.mesos.ExecutorDriver);
    Code:
       0: return

  static org.slf4j.Logger access$000();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       3: areturn

  static void access$100(io.mantisrx.server.worker.mesos.MesosExecutorCallbackHandler, org.apache.mesos.ExecutorDriver, org.apache.mesos.Protos$TaskInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method sendLaunchError:(Lorg/apache/mesos/ExecutorDriver;Lorg/apache/mesos/Protos$TaskInfo;)V
       6: return

  static {};
    Code:
       0: ldc           #57                 // class io/mantisrx/server/worker/mesos/MesosExecutorCallbackHandler
       2: invokestatic  #58                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
