Compiled from "X509SubjectAlternativeNameUPNPrincipalResolver.java"
public class org.apereo.cas.adaptors.x509.authentication.principal.X509SubjectAlternativeNameUPNPrincipalResolver extends org.apereo.cas.adaptors.x509.authentication.principal.AbstractX509PrincipalResolver {
  public static final java.lang.String UPN_OBJECTID;

  public org.apereo.cas.adaptors.x509.authentication.principal.X509SubjectAlternativeNameUPNPrincipalResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apereo/cas/adaptors/x509/authentication/principal/AbstractX509PrincipalResolver."<init>":()V
       4: return

  protected java.lang.String resolvePrincipalInternal(java.security.cert.X509Certificate);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
       4: ldc           #3                  // String Resolving principal from Subject Alternative Name UPN for {}
       6: aload_1
       7: invokeinterface #4,  3            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_1
      13: invokevirtual #5                  // Method java/security/cert/X509Certificate.getSubjectAlternativeNames:()Ljava/util/Collection;
      16: astore_2
      17: aload_2
      18: ifnull        74
      21: aload_2
      22: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          74
      37: aload_3
      38: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #9                  // class java/util/List
      46: astore        4
      48: aload_0
      49: aload         4
      51: invokespecial #10                 // Method getAltnameSequence:(Ljava/util/List;)Lorg/bouncycastle/asn1/ASN1Sequence;
      54: astore        5
      56: aload         5
      58: invokestatic  #11                 // Method getUPNStringFromSequence:(Lorg/bouncycastle/asn1/ASN1Sequence;)Ljava/lang/String;
      61: astore        6
      63: aload         6
      65: ifnull        71
      68: aload         6
      70: areturn
      71: goto          28
      74: goto          103
      77: astore_2
      78: aload_0
      79: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
      82: ldc           #13                 // String Error is encountered while trying to retrieve subject alternative names collection from certificate
      84: aload_2
      85: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: aload_0
      91: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
      94: ldc           #15                 // String Returning null principal...
      96: invokeinterface #16,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     101: aconst_null
     102: areturn
     103: aload_0
     104: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
     107: ldc           #17                 // String Returning null principal id...
     109: invokeinterface #16,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     114: aconst_null
     115: areturn
    Exception table:
       from    to  target type
          12    70    77   Class java/security/cert/CertificateParsingException
          71    74    77   Class java/security/cert/CertificateParsingException

  private static java.lang.String getUPNStringFromSequence(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: ifnull        102
       4: aload_0
       5: iconst_0
       6: invokevirtual #18                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
       9: invokestatic  #19                 // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      12: astore_1
      13: aload_1
      14: ifnull        102
      17: ldc           #21                 // String 1.3.6.1.4.1.311.20.2.3
      19: aload_1
      20: invokevirtual #22                 // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getId:()Ljava/lang/String;
      23: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          102
      29: aload_0
      30: iconst_1
      31: invokevirtual #18                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      34: checkcast     #24                 // class org/bouncycastle/asn1/ASN1TaggedObject
      37: astore_2
      38: aload_2
      39: invokevirtual #25                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      42: astore_3
      43: aload_3
      44: instanceof    #24                 // class org/bouncycastle/asn1/ASN1TaggedObject
      47: ifeq          58
      50: aload_3
      51: invokestatic  #26                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
      54: invokevirtual #25                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      57: astore_3
      58: aload_3
      59: instanceof    #27                 // class org/bouncycastle/asn1/ASN1OctetString
      62: ifeq          83
      65: new           #28                 // class java/lang/String
      68: dup
      69: aload_3
      70: checkcast     #27                 // class org/bouncycastle/asn1/ASN1OctetString
      73: invokevirtual #29                 // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      76: getstatic     #30                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      79: invokespecial #31                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      82: areturn
      83: aload_3
      84: instanceof    #32                 // class org/bouncycastle/asn1/ASN1String
      87: ifeq          100
      90: aload_3
      91: checkcast     #32                 // class org/bouncycastle/asn1/ASN1String
      94: invokeinterface #33,  1           // InterfaceMethod org/bouncycastle/asn1/ASN1String.getString:()Ljava/lang/String;
      99: areturn
     100: aconst_null
     101: areturn
     102: aconst_null
     103: areturn

  private org.bouncycastle.asn1.ASN1Sequence getAltnameSequence(java.util.List);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_2
       7: if_icmpge     21
      10: aload_0
      11: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
      14: ldc           #35                 // String Subject Alternative Name List does not contain at least two required elements. Returning null principal id...
      16: invokeinterface #36,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      21: aload_1
      22: iconst_0
      23: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #38                 // class java/lang/Integer
      31: astore_2
      32: aload_2
      33: invokevirtual #39                 // Method java/lang/Integer.intValue:()I
      36: ifne          59
      39: aload_1
      40: iconst_1
      41: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      46: checkcast     #40                 // class "[B"
      49: checkcast     #40                 // class "[B"
      52: astore_3
      53: aload_0
      54: aload_3
      55: invokespecial #41                 // Method getAltnameSequence:([B)Lorg/bouncycastle/asn1/ASN1Sequence;
      58: areturn
      59: aconst_null
      60: areturn

  private org.bouncycastle.asn1.ASN1Sequence getAltnameSequence(byte[]);
    Code:
       0: aconst_null
       1: astore_2
       2: new           #42                 // class java/io/ByteArrayInputStream
       5: dup
       6: aload_1
       7: invokespecial #43                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      10: astore_3
      11: aconst_null
      12: astore        4
      14: new           #44                 // class org/bouncycastle/asn1/ASN1InputStream
      17: dup
      18: aload_3
      19: invokespecial #45                 // Method org/bouncycastle/asn1/ASN1InputStream."<init>":(Ljava/io/InputStream;)V
      22: astore        5
      24: aconst_null
      25: astore        6
      27: aload         5
      29: invokevirtual #46                 // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      32: astore_2
      33: aload         5
      35: ifnull        120
      38: aload         6
      40: ifnull        63
      43: aload         5
      45: invokevirtual #47                 // Method org/bouncycastle/asn1/ASN1InputStream.close:()V
      48: goto          120
      51: astore        7
      53: aload         6
      55: aload         7
      57: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      60: goto          120
      63: aload         5
      65: invokevirtual #47                 // Method org/bouncycastle/asn1/ASN1InputStream.close:()V
      68: goto          120
      71: astore        7
      73: aload         7
      75: astore        6
      77: aload         7
      79: athrow
      80: astore        8
      82: aload         5
      84: ifnull        117
      87: aload         6
      89: ifnull        112
      92: aload         5
      94: invokevirtual #47                 // Method org/bouncycastle/asn1/ASN1InputStream.close:()V
      97: goto          117
     100: astore        9
     102: aload         6
     104: aload         9
     106: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     109: goto          117
     112: aload         5
     114: invokevirtual #47                 // Method org/bouncycastle/asn1/ASN1InputStream.close:()V
     117: aload         8
     119: athrow
     120: goto          143
     123: astore        5
     125: aload_0
     126: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
     129: ldc           #51                 // String Error on getting Alt Name as a DERSEquence: {}
     131: aload         5
     133: invokevirtual #52                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     136: aload         5
     138: invokeinterface #53,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     143: aload_2
     144: invokestatic  #54                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
     147: astore        5
     149: aload_3
     150: ifnull        181
     153: aload         4
     155: ifnull        177
     158: aload_3
     159: invokevirtual #55                 // Method java/io/ByteArrayInputStream.close:()V
     162: goto          181
     165: astore        6
     167: aload         4
     169: aload         6
     171: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     174: goto          181
     177: aload_3
     178: invokevirtual #55                 // Method java/io/ByteArrayInputStream.close:()V
     181: aload         5
     183: areturn
     184: astore        5
     186: aload         5
     188: astore        4
     190: aload         5
     192: athrow
     193: astore        10
     195: aload_3
     196: ifnull        227
     199: aload         4
     201: ifnull        223
     204: aload_3
     205: invokevirtual #55                 // Method java/io/ByteArrayInputStream.close:()V
     208: goto          227
     211: astore        11
     213: aload         4
     215: aload         11
     217: invokevirtual #49                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     220: goto          227
     223: aload_3
     224: invokevirtual #55                 // Method java/io/ByteArrayInputStream.close:()V
     227: aload         10
     229: athrow
     230: astore_3
     231: aload_0
     232: getfield      #2                  // Field logger:Lorg/slf4j/Logger;
     235: ldc           #56                 // String An error has occurred while reading the subject alternative name value
     237: aload_3
     238: invokeinterface #14,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     243: aconst_null
     244: areturn
    Exception table:
       from    to  target type
          43    48    51   Class java/lang/Throwable
          27    33    71   Class java/lang/Throwable
          27    33    80   any
          92    97   100   Class java/lang/Throwable
          71    82    80   any
          14   120   123   Class java/io/IOException
         158   162   165   Class java/lang/Throwable
          14   149   184   Class java/lang/Throwable
          14   149   193   any
         204   208   211   Class java/lang/Throwable
         184   195   193   any
           2   181   230   Class java/io/IOException
         184   230   230   Class java/io/IOException
}
