Compiled from "PigpioJNI.java"
public class uk.pigpioj.PigpioJNI implements uk.pigpioj.PigpioInterface {
  private static final java.lang.String LIB_NAME;

  private static boolean loaded;

  public static synchronized int initialise();
    Code:
       0: getstatic     #1                  // Field loaded:Z
       3: ifne          190
       6: ldc           #2                  // class uk/pigpioj/PigpioJ
       8: ldc           #4                  // String /lib/libpigpioj.so
      10: invokevirtual #5                  // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      13: astore_0
      14: aload_0
      15: ifnull        130
      18: ldc           #6                  // String libpigpioj
      20: ldc           #7                  // String .so
      22: iconst_0
      23: anewarray     #8                  // class java/nio/file/attribute/FileAttribute
      26: invokestatic  #9                  // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      29: astore_1
      30: aload_1
      31: invokeinterface #10,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      36: invokevirtual #11                 // Method java/io/File.deleteOnExit:()V
      39: aload_0
      40: aload_1
      41: iconst_1
      42: anewarray     #12                 // class java/nio/file/CopyOption
      45: dup
      46: iconst_0
      47: getstatic     #13                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      50: aastore
      51: invokestatic  #14                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      54: pop2
      55: invokestatic  #15                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      58: aload_1
      59: invokeinterface #16,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      64: invokevirtual #17                 // Method java/lang/Runtime.load:(Ljava/lang/String;)V
      67: iconst_1
      68: putstatic     #1                  // Field loaded:Z
      71: aload_0
      72: invokevirtual #18                 // Method java/io/InputStream.close:()V
      75: goto          130
      78: astore_1
      79: goto          130
      82: astore_1
      83: getstatic     #21                 // Field java/lang/System.err:Ljava/io/PrintStream;
      86: new           #22                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #24                 // String Error loading library from classpath, trying System.loadLibrary:
      95: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokevirtual #28                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     108: aload_0
     109: invokevirtual #18                 // Method java/io/InputStream.close:()V
     112: goto          130
     115: astore_1
     116: goto          130
     119: astore_2
     120: aload_0
     121: invokevirtual #18                 // Method java/io/InputStream.close:()V
     124: goto          128
     127: astore_3
     128: aload_2
     129: athrow
     130: getstatic     #1                  // Field loaded:Z
     133: ifne          178
     136: ldc           #29                 // String pigpioj
     138: invokestatic  #30                 // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
     141: iconst_1
     142: putstatic     #1                  // Field loaded:Z
     145: goto          178
     148: astore_1
     149: getstatic     #21                 // Field java/lang/System.err:Ljava/io/PrintStream;
     152: new           #22                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #31                 // String Error loading pigpioj library from system library path:
     161: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_1
     165: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     168: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: invokevirtual #28                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     174: aload_1
     175: invokevirtual #32                 // Method java/lang/Throwable.printStackTrace:()V
     178: getstatic     #1                  // Field loaded:Z
     181: ifeq          190
     184: invokestatic  #33                 // Method uk/pigpioj/PigpioGpio.initialise:()I
     187: istore_1
     188: iload_1
     189: ireturn
     190: getstatic     #1                  // Field loaded:Z
     193: ifeq          200
     196: iconst_0
     197: goto          201
     200: iconst_m1
     201: ireturn
    Exception table:
       from    to  target type
          71    75    78   Class java/io/IOException
          18    71    82   Class java/lang/Throwable
         108   112   115   Class java/io/IOException
          18    71   119   any
          82   108   119   any
         120   124   127   Class java/io/IOException
         136   145   148   Class java/lang/Throwable

  public uk.pigpioj.PigpioJNI();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/lang/Object."<init>":()V
       4: invokestatic  #36                 // Method initialise:()I
       7: istore_1
       8: iload_1
       9: ifge          39
      12: new           #37                 // class java/lang/RuntimeException
      15: dup
      16: new           #22                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #38                 // String Error initialising pigpio:
      25: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_1
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #40                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: return

  public void close();
    Code:
       0: invokestatic  #41                 // Method uk/pigpioj/PigpioGpio.terminate:()V
       3: return

  public int enableListener(int, int, uk.pigpioj.PigpioCallback);
    Code:
       0: iload_1
       1: iload_2
       2: iconst_m1
       3: aload_3
       4: invokestatic  #42                 // Method uk/pigpioj/PigpioGpio.setISRFunc:(IIILuk/pigpioj/PigpioCallback;)I
       7: ireturn

  public int disableListener(int);
    Code:
       0: iload_1
       1: iconst_2
       2: iconst_m1
       3: aconst_null
       4: invokestatic  #42                 // Method uk/pigpioj/PigpioGpio.setISRFunc:(IIILuk/pigpioj/PigpioCallback;)I
       7: ireturn

  public int getVersion();
    Code:
       0: invokestatic  #43                 // Method uk/pigpioj/PigpioGpio.getVersion:()I
       3: ireturn

  public int getHardwareRevision();
    Code:
       0: invokestatic  #44                 // Method uk/pigpioj/PigpioGpio.getHardwareRevision:()I
       3: ireturn

  public int getMode(int);
    Code:
       0: iload_1
       1: invokestatic  #45                 // Method uk/pigpioj/PigpioGpio.getMode:(I)I
       4: ireturn

  public int setMode(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #46                 // Method uk/pigpioj/PigpioGpio.setMode:(II)I
       5: ireturn

  public int setPullUpDown(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #47                 // Method uk/pigpioj/PigpioGpio.setPullUpDown:(II)I
       5: ireturn

  public int read(int);
    Code:
       0: iload_1
       1: invokestatic  #48                 // Method uk/pigpioj/PigpioGpio.read:(I)I
       4: ireturn

  public int write(int, boolean);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #49                 // Method uk/pigpioj/PigpioGpio.write:(IZ)I
       5: ireturn

  public int getPWMDutyCycle(int);
    Code:
       0: iload_1
       1: invokestatic  #50                 // Method uk/pigpioj/PigpioGpio.getPWMDutyCycle:(I)I
       4: ireturn

  public int setPWMDutyCycle(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #51                 // Method uk/pigpioj/PigpioGpio.setPWMDutyCycle:(II)I
       5: ireturn

  public int getPWMRange(int);
    Code:
       0: iload_1
       1: invokestatic  #52                 // Method uk/pigpioj/PigpioGpio.getPWMRange:(I)I
       4: ireturn

  public int setPWMRange(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #51                 // Method uk/pigpioj/PigpioGpio.setPWMDutyCycle:(II)I
       5: ireturn

  public int getPWMRealRange(int);
    Code:
       0: iload_1
       1: invokestatic  #53                 // Method uk/pigpioj/PigpioGpio.getPWMRealRange:(I)I
       4: ireturn

  public int getPWMFrequency(int);
    Code:
       0: iload_1
       1: invokestatic  #54                 // Method uk/pigpioj/PigpioGpio.getPWMFrequency:(I)I
       4: ireturn

  public int setPWMFrequency(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #55                 // Method uk/pigpioj/PigpioGpio.setPWMFrequency:(II)I
       5: ireturn

  public int getServoPulseWidth(int);
    Code:
       0: iload_1
       1: invokestatic  #56                 // Method uk/pigpioj/PigpioGpio.getServoPulseWidth:(I)I
       4: ireturn

  public int setServoPulseWidth(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #57                 // Method uk/pigpioj/PigpioGpio.setServoPulseWidth:(II)I
       5: ireturn

  public int noiseFilter(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #58                 // Method uk/pigpioj/PigpioGpio.noiseFilter:(III)I
       6: ireturn

  public int glitchFilter(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #59                 // Method uk/pigpioj/PigpioGpio.glitchFilter:(II)I
       5: ireturn

  public int hardwareClock(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #60                 // Method uk/pigpioj/PigpioGpio.hardwareClock:(II)I
       5: ireturn

  public int hardwarePwm(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #61                 // Method uk/pigpioj/PigpioGpio.hardwarePwm:(III)I
       6: ireturn

  public int i2cOpen(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #62                 // Method uk/pigpioj/PigpioI2C.i2cOpen:(III)I
       6: ireturn

  public int i2cClose(int);
    Code:
       0: iload_1
       1: invokestatic  #63                 // Method uk/pigpioj/PigpioI2C.i2cClose:(I)I
       4: ireturn

  public int i2cWriteQuick(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #64                 // Method uk/pigpioj/PigpioI2C.i2cWriteQuick:(II)I
       5: ireturn

  public int i2cReadByte(int);
    Code:
       0: iload_1
       1: invokestatic  #65                 // Method uk/pigpioj/PigpioI2C.i2cReadByte:(I)I
       4: ireturn

  public int i2cWriteByte(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #66                 // Method uk/pigpioj/PigpioI2C.i2cWriteByte:(II)I
       5: ireturn

  public int i2cReadByteData(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #67                 // Method uk/pigpioj/PigpioI2C.i2cReadByteData:(II)I
       5: ireturn

  public int i2cWriteByteData(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #68                 // Method uk/pigpioj/PigpioI2C.i2cWriteByteData:(III)I
       6: ireturn

  public int i2cReadWordData(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #69                 // Method uk/pigpioj/PigpioI2C.i2cReadWordData:(II)I
       5: ireturn

  public int i2cWriteWordData(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #70                 // Method uk/pigpioj/PigpioI2C.i2cWriteWordData:(III)I
       6: ireturn

  public int i2cProcessCall(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #71                 // Method uk/pigpioj/PigpioI2C.i2cProcessCall:(III)I
       6: ireturn

  public int i2cReadBlockData(int, int, byte[]);
    Code:
       0: iload_1
       1: iload_2
       2: aload_3
       3: invokestatic  #72                 // Method uk/pigpioj/PigpioI2C.i2cReadBlockData:(II[B)I
       6: ireturn

  public int i2cWriteBlockData(int, int, byte[], int);
    Code:
       0: iload_1
       1: iload_2
       2: aload_3
       3: iload         4
       5: invokestatic  #73                 // Method uk/pigpioj/PigpioI2C.i2cWriteBlockData:(II[BI)I
       8: ireturn

  public int i2cReadI2CBlockData(int, int, byte[], int);
    Code:
       0: iload_1
       1: iload_2
       2: aload_3
       3: iload         4
       5: invokestatic  #74                 // Method uk/pigpioj/PigpioI2C.i2cReadI2CBlockData:(II[BI)I
       8: ireturn

  public int i2cWriteI2CBlockData(int, int, byte[], int);
    Code:
       0: iload_1
       1: iload_2
       2: aload_3
       3: iload         4
       5: invokestatic  #75                 // Method uk/pigpioj/PigpioI2C.i2cWriteI2CBlockData:(II[BI)I
       8: ireturn

  public int i2cReadDevice(int, byte[], int);
    Code:
       0: iload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #76                 // Method uk/pigpioj/PigpioI2C.i2cReadDevice:(I[BI)I
       6: ireturn

  public int i2cWriteDevice(int, byte[], int);
    Code:
       0: iload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #77                 // Method uk/pigpioj/PigpioI2C.i2cWriteDevice:(I[BI)I
       6: ireturn

  public int spiOpen(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #78                 // Method uk/pigpioj/PigpioSPI.spiOpen:(III)I
       6: ireturn

  public int spiClose(int);
    Code:
       0: iload_1
       1: invokestatic  #79                 // Method uk/pigpioj/PigpioSPI.spiClose:(I)I
       4: ireturn

  public int spiRead(int, byte[], int);
    Code:
       0: iload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #80                 // Method uk/pigpioj/PigpioSPI.spiRead:(I[BI)I
       6: ireturn

  public int spiWrite(int, byte[], int, int);
    Code:
       0: iload_1
       1: aload_2
       2: iload_3
       3: iload         4
       5: invokestatic  #81                 // Method uk/pigpioj/PigpioSPI.spiWrite:(I[BII)I
       8: ireturn

  public int spiXfer(int, byte[], byte[], int);
    Code:
       0: iload_1
       1: aload_2
       2: aload_3
       3: iload         4
       5: invokestatic  #82                 // Method uk/pigpioj/PigpioSPI.spiXfer:(I[B[BI)I
       8: ireturn
}
