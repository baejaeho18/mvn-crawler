Compiled from "SwitchingConnection.java"
public interface org.bidib.wizard.api.model.connection.SwitchingConnection {
  public abstract <P extends org.bidib.wizard.model.ports.Port<?>> java.util.List<P> getPorts(org.bidib.wizard.api.model.NodeInterface, java.lang.Class<?>, org.bidib.jbidibc.core.enumeration.FeatureEnum);

  public abstract void queryPortConfig(org.bidib.wizard.api.model.NodeInterface, java.util.List<org.bidib.wizard.model.ports.GenericPort>);

  public abstract <P extends org.bidib.wizard.model.ports.Port<?>> void queryPortConfig(org.bidib.wizard.api.model.NodeInterface, java.util.List<P>, org.bidib.jbidibc.core.enumeration.LcOutputType);

  public abstract void queryAllPortConfig(org.bidib.wizard.api.model.NodeInterface, org.bidib.jbidibc.core.enumeration.LcOutputType, java.lang.Integer, java.lang.Integer);

  public abstract void queryAllPortStatus(org.bidib.wizard.api.model.NodeInterface, int, int, int);

  public abstract void queryPortStatus(org.bidib.wizard.api.model.SwitchingNodeInterface, org.bidib.jbidibc.core.enumeration.LcOutputType, java.util.List<java.lang.Integer>);

  public abstract void setConfigX(org.bidib.wizard.api.model.NodeInterface, org.bidib.jbidibc.core.enumeration.LcOutputType, int, java.util.Map<java.lang.Byte, org.bidib.jbidibc.core.port.PortConfigValue<?>>);

  public abstract void setConfig(org.bidib.wizard.api.model.NodeInterface, int, org.bidib.jbidibc.core.LcConfig);

  public abstract void setStatus(org.bidib.wizard.api.model.NodeInterface, int, org.bidib.jbidibc.core.enumeration.LcOutputType, int);

  public abstract void getAccessoryContent(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Accessory, int);

  public abstract void saveAccessory(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Accessory);

  public abstract void startAccessory(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Accessory, int);

  public abstract void queryAccessoryState(org.bidib.wizard.api.model.NodeInterface, java.util.List<org.bidib.wizard.api.model.Accessory>);

  public abstract org.bidib.jbidibc.core.enumeration.LcMacroState saveMacro(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Macro);

  public abstract org.bidib.jbidibc.core.enumeration.LcMacroState reloadMacro(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Macro);

  public abstract void transferMacro(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Macro);

  public abstract org.bidib.wizard.api.model.Macro getMacroContent(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Macro);

  public abstract org.bidib.jbidibc.core.enumeration.LcMacroState startMacro(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Macro, boolean);

  public abstract org.bidib.jbidibc.core.enumeration.LcMacroState stopMacro(org.bidib.wizard.api.model.NodeInterface, org.bidib.wizard.api.model.Macro);
}
