Compiled from "BidibConnection.java"
public interface org.bidib.wizard.api.model.connection.BidibConnection {
  public abstract java.lang.String getConnectionId();

  public abstract java.lang.String getUri();

  public abstract void setUri(java.lang.String);

  public abstract io.reactivex.rxjava3.subjects.Subject<org.bidib.wizard.api.model.connection.AbstractMessageEvent> getSubjectMessages();

  public abstract io.reactivex.rxjava3.subjects.Subject<org.bidib.wizard.model.ports.event.PortEvent> getSubjectPortEvents();

  public abstract io.reactivex.rxjava3.subjects.Subject<org.bidib.wizard.api.model.event.NodeEvent> getSubjectNodeEvents();

  public abstract io.reactivex.rxjava3.disposables.Disposable subscribePortEvents(io.reactivex.rxjava3.functions.Consumer<org.bidib.wizard.model.ports.event.PortEvent>, io.reactivex.rxjava3.functions.Consumer<java.lang.Throwable>, io.reactivex.rxjava3.functions.Action);

  public abstract io.reactivex.rxjava3.disposables.Disposable subscribeNodeEvents(io.reactivex.rxjava3.functions.Consumer<org.bidib.wizard.api.model.event.NodeEvent>, io.reactivex.rxjava3.functions.Consumer<java.lang.Throwable>, io.reactivex.rxjava3.functions.Action);

  public abstract io.reactivex.rxjava3.disposables.Disposable subscribeTimeEvents(io.reactivex.rxjava3.functions.Consumer<org.bidib.wizard.api.notification.TimeEvent>, io.reactivex.rxjava3.functions.Consumer<java.lang.Throwable>, io.reactivex.rxjava3.functions.Action);

  public abstract org.bidib.wizard.api.model.connection.ConnectionState getConnectionState();

  public abstract void connect();

  public abstract void disconnect();

  public abstract boolean isConnected();

  public abstract boolean isSimulation();

  public abstract boolean isProxiedConnection();

  public abstract void loadInitialNodes();

  public abstract void releaseAndReloadRootNode(org.bidib.wizard.api.model.NodeInterface);

  public abstract java.util.List<org.bidib.wizard.api.model.NodeInterface> loadSubNodes(org.bidib.wizard.api.model.NodeInterface);

  public abstract org.bidib.wizard.api.model.NodeProvider getNodeProvider();

  public abstract void disable(org.bidib.wizard.api.model.NodeInterface);

  public abstract void enable(org.bidib.wizard.api.model.NodeInterface);

  public abstract int getMagic(org.bidib.wizard.api.model.NodeInterface);

  public abstract org.bidib.jbidibc.core.SoftwareVersion getSoftwareVersion(org.bidib.wizard.api.model.NodeInterface);

  public abstract org.bidib.jbidibc.core.ProtocolVersion getProtocolVersion(org.bidib.wizard.api.model.NodeInterface);

  public abstract java.util.List<org.bidib.jbidibc.core.Feature> getFeatures(org.bidib.wizard.api.model.NodeInterface, boolean);

  public abstract void setFeature(org.bidib.wizard.api.model.NodeInterface, org.bidib.jbidibc.core.Feature);

  public abstract java.lang.String getString(org.bidib.wizard.api.model.NodeInterface, int, int);

  public abstract java.lang.String setString(org.bidib.wizard.api.model.NodeInterface, int, int, java.lang.String);

  public abstract boolean isUpdatable(org.bidib.wizard.api.model.NodeInterface);

  public abstract boolean isValidCoreNode(org.bidib.wizard.api.model.NodeInterface);

  public abstract org.bidib.jbidibc.core.FirmwareUpdateStat sendFirmwareUpdateOperation(org.bidib.wizard.api.model.NodeInterface, org.bidib.jbidibc.core.enumeration.FirmwareUpdateOperation, byte...);

  public abstract void shutdown();

  public abstract java.util.List<org.bidib.jbidibc.core.node.ConfigurationVariable> getConfigurationVariables(org.bidib.wizard.api.model.NodeInterface, java.util.List<org.bidib.jbidibc.core.node.ConfigurationVariable>);

  public abstract java.util.List<org.bidib.jbidibc.core.node.ConfigurationVariable> writeConfigurationVariables(org.bidib.wizard.api.model.NodeInterface, java.util.List<org.bidib.jbidibc.core.node.ConfigurationVariable>);

  public abstract void reset(org.bidib.wizard.api.model.NodeInterface);

  public abstract void identify(org.bidib.wizard.api.model.NodeInterface, org.bidib.jbidibc.core.enumeration.IdentifyState);

  public abstract void setSecureAckEnabled(org.bidib.wizard.api.model.NodeInterface, boolean);

  public abstract void ping(org.bidib.wizard.api.model.NodeInterface, byte);

  public abstract java.lang.Long readUniqueId(org.bidib.wizard.api.model.NodeInterface);

  public abstract void sendTime(boolean, java.util.Calendar, java.lang.Integer);
}
