Compiled from "DataType.scala"
public class wvlet.airframe.sql.catalog.DataType$GenericType extends wvlet.airframe.sql.catalog.DataType implements scala.Product,java.io.Serializable {
  private final java.lang.String typeName;

  private final scala.collection.immutable.Seq typeParams;

  public static wvlet.airframe.sql.catalog.DataType$GenericType apply(java.lang.String, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType>);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/sql/catalog/DataType$GenericType$.MODULE$:Lwvlet/airframe/sql/catalog/DataType$GenericType$;
       3: aload_0
       4: aload_1
       5: invokevirtual #26                 // Method wvlet/airframe/sql/catalog/DataType$GenericType$.apply:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/catalog/DataType$GenericType;
       8: areturn

  public static wvlet.airframe.sql.catalog.DataType$GenericType fromProduct(scala.Product);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/sql/catalog/DataType$GenericType$.MODULE$:Lwvlet/airframe/sql/catalog/DataType$GenericType$;
       3: aload_0
       4: invokevirtual #30                 // Method wvlet/airframe/sql/catalog/DataType$GenericType$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/catalog/DataType$GenericType;
       7: areturn

  public static wvlet.airframe.sql.catalog.DataType$GenericType unapply(wvlet.airframe.sql.catalog.DataType$GenericType);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/sql/catalog/DataType$GenericType$.MODULE$:Lwvlet/airframe/sql/catalog/DataType$GenericType$;
       3: aload_0
       4: invokevirtual #34                 // Method wvlet/airframe/sql/catalog/DataType$GenericType$.unapply:(Lwvlet/airframe/sql/catalog/DataType$GenericType;)Lwvlet/airframe/sql/catalog/DataType$GenericType;
       7: areturn

  public static scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> $lessinit$greater$default$2();
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/sql/catalog/DataType$GenericType$.MODULE$:Lwvlet/airframe/sql/catalog/DataType$GenericType$;
       3: invokevirtual #39                 // Method wvlet/airframe/sql/catalog/DataType$GenericType$.$lessinit$greater$default$2:()Lscala/collection/immutable/Seq;
       6: areturn

  public wvlet.airframe.sql.catalog.DataType$GenericType(java.lang.String, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field typeName:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #46                 // Field typeParams:Lscala/collection/immutable/Seq;
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #48                 // Method wvlet/airframe/sql/catalog/DataType."<init>":(Ljava/lang/String;Lscala/collection/immutable/Seq;)V
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #56                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #67                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #71                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     104
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/catalog/DataType$GenericType
      11: ifeq          97
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/catalog/DataType$GenericType
      18: astore_3
      19: aload_0
      20: invokevirtual #77                 // Method typeName:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #77                 // Method typeName:()Ljava/lang/String;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          93
      42: aload         4
      44: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          93
      50: aload_0
      51: invokevirtual #83                 // Method typeParams:()Lscala/collection/immutable/Seq;
      54: aload_3
      55: invokevirtual #83                 // Method typeParams:()Lscala/collection/immutable/Seq;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          93
      73: aload         5
      75: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          93
      81: aload_3
      82: aload_0
      83: invokevirtual #86                 // Method canEqual:(Ljava/lang/Object;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: goto          101
      97: iconst_0
      98: goto          101
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ireturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/catalog/DataType$GenericType
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #95                 // String GenericType
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: aload_0
       8: invokevirtual #101                // Method _1:()Ljava/lang/String;
      11: areturn
      12: iconst_1
      13: iload_2
      14: if_icmpne     22
      17: aload_0
      18: invokevirtual #104                // Method _2:()Lscala/collection/immutable/Seq;
      21: areturn
      22: new           #106                // class java/lang/IndexOutOfBoundsException
      25: dup
      26: iload_1
      27: invokestatic  #112                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: invokevirtual #117                // Method java/lang/Integer.toString:()Ljava/lang/String;
      33: invokespecial #120                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     10
       7: ldc           #124                // String typeName
       9: areturn
      10: iconst_1
      11: iload_2
      12: if_icmpne     18
      15: ldc           #125                // String typeParams
      17: areturn
      18: new           #106                // class java/lang/IndexOutOfBoundsException
      21: dup
      22: iload_1
      23: invokestatic  #112                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      26: invokevirtual #117                // Method java/lang/Integer.toString:()Ljava/lang/String;
      29: invokespecial #120                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      32: athrow

  public java.lang.String typeName();
    Code:
       0: aload_0
       1: getfield      #44                 // Field typeName:Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> typeParams();
    Code:
       0: aload_0
       1: getfield      #46                 // Field typeParams:Lscala/collection/immutable/Seq;
       4: areturn

  public boolean isBound();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method typeParams:()Lscala/collection/immutable/Seq;
       4: aload_0
       5: invokedynamic #147,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/catalog/DataType$GenericType;)Lscala/Function1;
      10: invokeinterface #151,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
      15: ireturn

  public wvlet.airframe.sql.catalog.DataType bind(scala.collection.immutable.Map<java.lang.String, wvlet.airframe.sql.catalog.DataType>);
    Code:
       0: getstatic     #24                 // Field wvlet/airframe/sql/catalog/DataType$GenericType$.MODULE$:Lwvlet/airframe/sql/catalog/DataType$GenericType$;
       3: aload_0
       4: invokevirtual #77                 // Method typeName:()Ljava/lang/String;
       7: aload_0
       8: invokevirtual #83                 // Method typeParams:()Lscala/collection/immutable/Seq;
      11: aload_0
      12: aload_1
      13: invokedynamic #165,  0            // InvokeDynamic #1:apply:(Lwvlet/airframe/sql/catalog/DataType$GenericType;Lscala/collection/immutable/Map;)Lscala/Function1;
      18: invokeinterface #169,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      23: checkcast     #91                 // class scala/collection/immutable/Seq
      26: invokevirtual #26                 // Method wvlet/airframe/sql/catalog/DataType$GenericType$.apply:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/catalog/DataType$GenericType;
      29: areturn

  public wvlet.airframe.sql.catalog.DataType$GenericType copy(java.lang.String, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/catalog/DataType$GenericType
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #172                // Method "<init>":(Ljava/lang/String;Lscala/collection/immutable/Seq;)V
       9: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method typeName:()Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method typeParams:()Lscala/collection/immutable/Seq;
       4: areturn

  public java.lang.String _1();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method typeName:()Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> _2();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method typeParams:()Lscala/collection/immutable/Seq;
       4: areturn

  private final boolean isBound$$anonfun$2(wvlet.airframe.sql.catalog.DataType);
    Code:
       0: aload_1
       1: invokevirtual #177                // Method wvlet/airframe/sql/catalog/DataType.isBound:()Z
       4: ireturn

  private final wvlet.airframe.sql.catalog.DataType bind$$anonfun$1(scala.collection.immutable.Map, wvlet.airframe.sql.catalog.DataType);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #182                // Method wvlet/airframe/sql/catalog/DataType.bind:(Lscala/collection/immutable/Map;)Lwvlet/airframe/sql/catalog/DataType;
       5: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #194,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
