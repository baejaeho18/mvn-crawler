Compiled from "Catalog.scala"
public interface wvlet.airframe.sql.catalog.Catalog extends wvlet.log.LogSupport {
  public static wvlet.airframe.sql.catalog.Catalog$TableSchema newSchema();
    Code:
       0: getstatic     #50                 // Field wvlet/airframe/sql/catalog/Catalog$.MODULE$:Lwvlet/airframe/sql/catalog/Catalog$;
       3: invokevirtual #52                 // Method wvlet/airframe/sql/catalog/Catalog$.newSchema:()Lwvlet/airframe/sql/catalog/Catalog$TableSchema;
       6: areturn

  public static wvlet.airframe.sql.catalog.Catalog$Table newTable(java.lang.String, java.lang.String, wvlet.airframe.sql.catalog.Catalog$TableSchema);
    Code:
       0: getstatic     #50                 // Field wvlet/airframe/sql/catalog/Catalog$.MODULE$:Lwvlet/airframe/sql/catalog/Catalog$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #56                 // Method wvlet/airframe/sql/catalog/Catalog$.newTable:(Ljava/lang/String;Ljava/lang/String;Lwvlet/airframe/sql/catalog/Catalog$TableSchema;)Lwvlet/airframe/sql/catalog/Catalog$Table;
       9: areturn

  public abstract java.lang.String catalogName();

  public abstract scala.Option<java.lang.String> namespace();

  public abstract scala.collection.immutable.Seq<java.lang.String> listDatabases();

  public abstract wvlet.airframe.sql.catalog.Catalog$Database getDatabase(java.lang.String);

  public abstract boolean databaseExists(java.lang.String);

  public abstract void createDatabase(wvlet.airframe.sql.catalog.Catalog$Database, wvlet.airframe.sql.catalog.Catalog$CreateMode);

  public abstract scala.collection.immutable.Seq<java.lang.String> listTables(java.lang.String);

  public abstract scala.Option<wvlet.airframe.sql.catalog.Catalog$Table> findTable(java.lang.String, java.lang.String);

  public abstract wvlet.airframe.sql.catalog.Catalog$Table getTable(java.lang.String, java.lang.String);

  public abstract boolean tableExists(java.lang.String, java.lang.String);

  public abstract void createTable(wvlet.airframe.sql.catalog.Catalog$Table, wvlet.airframe.sql.catalog.Catalog$CreateMode);

  public static scala.Option findFromQName$(wvlet.airframe.sql.catalog.Catalog, java.lang.String, wvlet.airframe.sql.model.Expression$QName);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #95                 // InterfaceMethod findFromQName:(Ljava/lang/String;Lwvlet/airframe/sql/model/Expression$QName;)Lscala/Option;
       6: areturn

  public default scala.Option<wvlet.airframe.sql.catalog.Catalog$Table> findFromQName(java.lang.String, wvlet.airframe.sql.model.Expression$QName);
    Code:
       0: aload_2
       1: invokevirtual #103                // Method wvlet/airframe/sql/model/Expression$QName.parts:()Lscala/collection/immutable/List;
       4: astore_3
       5: aload_3
       6: instanceof    #105                // class scala/collection/immutable/$colon$colon
       9: ifeq          234
      12: aload_3
      13: checkcast     #105                // class scala/collection/immutable/$colon$colon
      16: astore        4
      18: aload         4
      20: invokevirtual #109                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      23: checkcast     #111                // class java/lang/String
      26: astore        5
      28: aload         4
      30: invokevirtual #114                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      33: astore        6
      35: aload         5
      37: astore        7
      39: aload         6
      41: instanceof    #105                // class scala/collection/immutable/$colon$colon
      44: ifeq          234
      47: aload         6
      49: checkcast     #105                // class scala/collection/immutable/$colon$colon
      52: astore        8
      54: aload         8
      56: invokevirtual #109                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      59: checkcast     #111                // class java/lang/String
      62: astore        9
      64: aload         8
      66: invokevirtual #114                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      69: astore        10
      71: aload         9
      73: astore        11
      75: aload         10
      77: instanceof    #105                // class scala/collection/immutable/$colon$colon
      80: ifeq          184
      83: aload         10
      85: checkcast     #105                // class scala/collection/immutable/$colon$colon
      88: astore        12
      90: aload         12
      92: invokevirtual #114                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      95: astore        13
      97: aload         12
      99: invokevirtual #109                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
     102: checkcast     #111                // class java/lang/String
     105: astore        14
     107: getstatic     #119                // Field scala/package$.MODULE$:Lscala/package$;
     110: invokevirtual #123                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     113: aload         13
     115: astore        15
     117: dup
     118: ifnonnull     130
     121: pop
     122: aload         15
     124: ifnull        138
     127: goto          184
     130: aload         15
     132: invokevirtual #127                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     135: ifeq          184
     138: aload         7
     140: aload_0
     141: invokeinterface #129,  1          // InterfaceMethod catalogName:()Ljava/lang/String;
     146: astore        16
     148: dup
     149: ifnonnull     161
     152: pop
     153: aload         16
     155: ifnull        169
     158: goto          180
     161: aload         16
     163: invokevirtual #127                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     166: ifeq          180
     169: aload_0
     170: aload         11
     172: aload         14
     174: invokeinterface #131,  3          // InterfaceMethod findTable:(Ljava/lang/String;Ljava/lang/String;)Lscala/Option;
     179: areturn
     180: getstatic     #136                // Field scala/None$.MODULE$:Lscala/None$;
     183: areturn
     184: aload         5
     186: astore        17
     188: aload         9
     190: astore        18
     192: getstatic     #119                // Field scala/package$.MODULE$:Lscala/package$;
     195: invokevirtual #123                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     198: aload         10
     200: astore        19
     202: dup
     203: ifnonnull     215
     206: pop
     207: aload         19
     209: ifnull        223
     212: goto          234
     215: aload         19
     217: invokevirtual #127                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     220: ifeq          234
     223: aload_0
     224: aload         17
     226: aload         18
     228: invokeinterface #131,  3          // InterfaceMethod findTable:(Ljava/lang/String;Ljava/lang/String;)Lscala/Option;
     233: areturn
     234: aload_0
     235: aload_1
     236: aload_2
     237: invokevirtual #139                // Method wvlet/airframe/sql/model/Expression$QName.toString:()Ljava/lang/String;
     240: invokeinterface #131,  3          // InterfaceMethod findTable:(Ljava/lang/String;Ljava/lang/String;)Lscala/Option;
     245: areturn

  public abstract scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.SQLFunction> listFunctions();
}
