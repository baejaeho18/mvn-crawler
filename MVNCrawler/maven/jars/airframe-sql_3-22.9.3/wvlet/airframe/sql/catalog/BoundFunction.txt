Compiled from "FunctionCatalog.scala"
public class wvlet.airframe.sql.catalog.BoundFunction implements wvlet.airframe.sql.catalog.SQLFunction,scala.Product,java.io.Serializable {
  private final java.lang.String name;

  private final scala.collection.immutable.Seq args;

  private final wvlet.airframe.sql.catalog.DataType returnType;

  public static wvlet.airframe.sql.catalog.BoundFunction apply(java.lang.String, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType>, wvlet.airframe.sql.catalog.DataType);
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/sql/catalog/BoundFunction$.MODULE$:Lwvlet/airframe/sql/catalog/BoundFunction$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #28                 // Method wvlet/airframe/sql/catalog/BoundFunction$.apply:(Ljava/lang/String;Lscala/collection/immutable/Seq;Lwvlet/airframe/sql/catalog/DataType;)Lwvlet/airframe/sql/catalog/BoundFunction;
       9: areturn

  public static wvlet.airframe.sql.catalog.BoundFunction fromProduct(scala.Product);
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/sql/catalog/BoundFunction$.MODULE$:Lwvlet/airframe/sql/catalog/BoundFunction$;
       3: aload_0
       4: invokevirtual #32                 // Method wvlet/airframe/sql/catalog/BoundFunction$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/catalog/BoundFunction;
       7: areturn

  public static wvlet.airframe.sql.catalog.BoundFunction unapply(wvlet.airframe.sql.catalog.BoundFunction);
    Code:
       0: getstatic     #26                 // Field wvlet/airframe/sql/catalog/BoundFunction$.MODULE$:Lwvlet/airframe/sql/catalog/BoundFunction$;
       3: aload_0
       4: invokevirtual #36                 // Method wvlet/airframe/sql/catalog/BoundFunction$.unapply:(Lwvlet/airframe/sql/catalog/BoundFunction;)Lwvlet/airframe/sql/catalog/BoundFunction;
       7: areturn

  public wvlet.airframe.sql.catalog.BoundFunction(java.lang.String, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType>, wvlet.airframe.sql.catalog.DataType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field name:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #43                 // Field args:Lscala/collection/immutable/Seq;
      10: aload_0
      11: aload_3
      12: putfield      #45                 // Field returnType:Lwvlet/airframe/sql/catalog/DataType;
      15: aload_0
      16: invokespecial #48                 // Method java/lang/Object."<init>":()V
      19: getstatic     #53                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: aload_2
      23: invokedynamic #73,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      28: invokeinterface #79,  2           // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
      33: aload_0
      34: invokedynamic #90,  0             // InvokeDynamic #1:apply:(Lwvlet/airframe/sql/catalog/BoundFunction;)Lscala/Function0;
      39: invokevirtual #94                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      42: getstatic     #53                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      45: aload_3
      46: invokevirtual #100                // Method wvlet/airframe/sql/catalog/DataType.isBound:()Z
      49: aload_3
      50: invokedynamic #108,  0            // InvokeDynamic #2:apply:(Lwvlet/airframe/sql/catalog/DataType;)Lscala/Function0;
      55: invokevirtual #94                 // Method scala/Predef$.require:(ZLscala/Function0;)V
      58: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #127                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #131                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     135
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/catalog/BoundFunction
      11: ifeq          128
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/catalog/BoundFunction
      18: astore_3
      19: aload_0
      20: invokevirtual #136                // Method name:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #136                // Method name:()Ljava/lang/String;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          124
      42: aload         4
      44: invokevirtual #138                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          124
      50: aload_0
      51: invokevirtual #141                // Method args:()Lscala/collection/immutable/Seq;
      54: aload_3
      55: invokevirtual #141                // Method args:()Lscala/collection/immutable/Seq;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          124
      73: aload         5
      75: invokevirtual #138                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          124
      81: aload_0
      82: invokevirtual #144                // Method returnType:()Lwvlet/airframe/sql/catalog/DataType;
      85: aload_3
      86: invokevirtual #144                // Method returnType:()Lwvlet/airframe/sql/catalog/DataType;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          124
     104: aload         6
     106: invokevirtual #138                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          124
     112: aload_3
     113: aload_0
     114: invokevirtual #147                // Method canEqual:(Ljava/lang/Object;)Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: goto          132
     128: iconst_0
     129: goto          132
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #127                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #155                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/catalog/BoundFunction
       4: ireturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #160                // String BoundFunction
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #166                // Method _1:()Ljava/lang/String;
      32: areturn
      33: aload_0
      34: invokevirtual #169                // Method _2:()Lscala/collection/immutable/Seq;
      37: areturn
      38: aload_0
      39: invokevirtual #172                // Method _3:()Lwvlet/airframe/sql/catalog/DataType;
      42: areturn
      43: new           #174                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #180                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: invokevirtual #184                // Method java/lang/Integer.toString:()Ljava/lang/String;
      54: invokespecial #187                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 31
                     2: 34
               default: 37
          }
      28: ldc           #191                // String name
      30: areturn
      31: ldc           #192                // String args
      33: areturn
      34: ldc           #193                // String returnType
      36: areturn
      37: new           #174                // class java/lang/IndexOutOfBoundsException
      40: dup
      41: iload_1
      42: invokestatic  #180                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      45: invokevirtual #184                // Method java/lang/Integer.toString:()Ljava/lang/String;
      48: invokespecial #187                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      51: athrow

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #41                 // Field name:Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> args();
    Code:
       0: aload_0
       1: getfield      #43                 // Field args:Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.catalog.DataType returnType();
    Code:
       0: aload_0
       1: getfield      #45                 // Field returnType:Lwvlet/airframe/sql/catalog/DataType;
       4: areturn

  public wvlet.airframe.sql.catalog.BoundFunction copy(java.lang.String, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType>, wvlet.airframe.sql.catalog.DataType);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/catalog/BoundFunction
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #197                // Method "<init>":(Ljava/lang/String;Lscala/collection/immutable/Seq;Lwvlet/airframe/sql/catalog/DataType;)V
      10: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method name:()Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method args:()Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.catalog.DataType copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method returnType:()Lwvlet/airframe/sql/catalog/DataType;
       4: areturn

  public java.lang.String _1();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method name:()Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.DataType> _2();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method args:()Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.catalog.DataType _3();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method returnType:()Lwvlet/airframe/sql/catalog/DataType;
       4: areturn

  private static final boolean $init$$$anonfun$1(wvlet.airframe.sql.catalog.DataType);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method wvlet/airframe/sql/catalog/DataType.isBound:()Z
       4: ireturn

  private final java.lang.String $init$$$anonfun$2();
    Code:
       0: new           #203                // class java/lang/StringBuilder
       3: dup
       4: ldc           #204                // int 25
       6: invokespecial #207                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #209                // String Found unbound arguments:
      11: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      21: areturn

  private static final java.lang.String $init$$$anonfun$3(wvlet.airframe.sql.catalog.DataType);
    Code:
       0: new           #203                // class java/lang/StringBuilder
       3: dup
       4: ldc           #219                // int 26
       6: invokespecial #207                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #221                // String return type:
      11: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #216                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #223                // String  is not bound
      20: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #217                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #235,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
