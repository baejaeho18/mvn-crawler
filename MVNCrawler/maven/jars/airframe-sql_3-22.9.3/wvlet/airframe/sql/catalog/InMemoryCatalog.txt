Compiled from "Catalog.scala"
public class wvlet.airframe.sql.catalog.InMemoryCatalog implements wvlet.log.LoggingMethods,wvlet.log.LazyLogger,wvlet.airframe.sql.catalog.Catalog {
  public static final long OFFSET$0;

  public wvlet.log.Logger logger$lzy1;

  public long 0bitmap$1;

  private final java.lang.String catalogName;

  private final scala.Option namespace;

  private final scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.SQLFunction> functions;

  private final scala.collection.mutable.Map<java.lang.String, wvlet.airframe.sql.catalog.InMemoryCatalog$DatabaseHolder> databases;

  public final wvlet.airframe.sql.catalog.InMemoryCatalog$DatabaseHolder$ DatabaseHolder$lzy1;

  public wvlet.airframe.sql.catalog.InMemoryCatalog(java.lang.String, scala.Option<java.lang.String>, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.SQLFunction>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field catalogName:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #86                 // Field namespace:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #88                 // Field functions:Lscala/collection/immutable/Seq;
      15: aload_0
      16: invokespecial #91                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: new           #56                 // class wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder$
      23: dup
      24: aload_0
      25: invokespecial #94                 // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder$."<init>":(Lwvlet/airframe/sql/catalog/InMemoryCatalog;)V
      28: putfield      #96                 // Field DatabaseHolder$lzy1:Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder$;
      31: aload_0
      32: getstatic     #102                // Field scala/collection/mutable/Map$.MODULE$:Lscala/collection/mutable/Map$;
      35: invokevirtual #106                // Method scala/collection/mutable/Map$.empty:()Ljava/lang/Object;
      38: checkcast     #108                // class scala/collection/mutable/Map
      41: putfield      #110                // Field databases:Lscala/collection/mutable/Map;
      44: return

  private static {};
    Code:
       0: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/catalog/InMemoryCatalog
       5: ldc           #119                // String 0bitmap$1
       7: invokevirtual #125                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #129                // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #131                // Field OFFSET$0:J
      16: return

  public wvlet.log.Logger wvlet$log$LoggingMethods$$inline$logger();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$logger$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/Logger;
       4: areturn

  public wvlet.log.LoggerMacros$ wvlet$log$LoggingMethods$$inline$LoggerMacros();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$LoggerMacros$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/LoggerMacros$;
       4: areturn

  public wvlet.log.Logger logger();
    Code:
       0: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #131                // Field OFFSET$0:J
       7: invokevirtual #150                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #154                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #155                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #158                // Field logger$lzy1:Lwvlet/log/Logger;
      32: areturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #131                // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #162                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #166                // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      59: astore        5
      61: aload_0
      62: aload         5
      64: putfield      #158                // Field logger$lzy1:Lwvlet/log/Logger;
      67: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #131                // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #170                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: aload         5
      81: areturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #131                // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #170                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #118                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #131                // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #174                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public scala.Option findFromQName(java.lang.String, wvlet.airframe.sql.model.Expression$QName);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #182                // InterfaceMethod wvlet/airframe/sql/catalog/Catalog.findFromQName$:(Lwvlet/airframe/sql/catalog/Catalog;Ljava/lang/String;Lwvlet/airframe/sql/model/Expression$QName;)Lscala/Option;
       6: areturn

  public java.lang.String catalogName();
    Code:
       0: aload_0
       1: getfield      #84                 // Field catalogName:Ljava/lang/String;
       4: areturn

  public scala.Option<java.lang.String> namespace();
    Code:
       0: aload_0
       1: getfield      #86                 // Field namespace:Lscala/Option;
       4: areturn

  private final wvlet.airframe.sql.catalog.InMemoryCatalog$DatabaseHolder$ DatabaseHolder();
    Code:
       0: aload_0
       1: getfield      #96                 // Field DatabaseHolder$lzy1:Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder$;
       4: areturn

  public scala.collection.immutable.Seq<java.lang.String> listDatabases();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
       8: invokeinterface #194,  1          // InterfaceMethod scala/collection/mutable/Map.values:()Lscala/collection/Iterable;
      13: invokedynamic #215,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      18: invokeinterface #221,  2          // InterfaceMethod scala/collection/Iterable.map:(Lscala/Function1;)Ljava/lang/Object;
      23: checkcast     #223                // class scala/collection/IterableOnceOps
      26: invokeinterface #226,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: goto          41
      38: aload_1
      39: monitorexit
      40: athrow
      41: areturn
    Exception table:
       from    to  target type
           4    32    38   any

  private wvlet.airframe.sql.catalog.InMemoryCatalog$DatabaseHolder getDatabaseHolder(java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
       8: aload_1
       9: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      14: astore        4
      16: aload         4
      18: instanceof    #236                // class scala/Some
      21: ifeq          42
      24: aload         4
      26: checkcast     #236                // class scala/Some
      29: invokevirtual #239                // Method scala/Some.value:()Ljava/lang/Object;
      32: checkcast     #53                 // class wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder
      35: astore        5
      37: aload         5
      39: goto          98
      42: getstatic     #244                // Field scala/None$.MODULE$:Lscala/None$;
      45: aload         4
      47: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          88
      53: getstatic     #251                // Field wvlet/airframe/sql/SQLErrorCode$DatabaseNotFound$.MODULE$:Lwvlet/airframe/sql/SQLErrorCode$DatabaseNotFound$;
      56: new           #253                // class java/lang/StringBuilder
      59: dup
      60: ldc           #254                // int 22
      62: invokespecial #257                // Method java/lang/StringBuilder."<init>":(I)V
      65: ldc_w         #259                // String database
      68: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_1
      72: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc_w         #265                // String  is not found
      78: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #268                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #272                // Method wvlet/airframe/sql/SQLErrorCode$DatabaseNotFound$.newException:(Ljava/lang/String;)Lwvlet/airframe/sql/SQLError;
      87: athrow
      88: new           #274                // class scala/MatchError
      91: dup
      92: aload         4
      94: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      97: athrow
      98: astore_3
      99: aload_2
     100: monitorexit
     101: aload_3
     102: goto          108
     105: aload_2
     106: monitorexit
     107: athrow
     108: areturn
    Exception table:
       from    to  target type
           4    99   105   any

  public wvlet.airframe.sql.catalog.Catalog$Database getDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #288                // Method getDatabaseHolder:(Ljava/lang/String;)Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder;
       5: invokevirtual #292                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.db:()Lwvlet/airframe/sql/catalog/Catalog$Database;
       8: areturn

  public boolean databaseExists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
       4: aload_1
       5: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      10: invokevirtual #298                // Method scala/Option.nonEmpty:()Z
      13: ireturn

  public void createDatabase(wvlet.airframe.sql.catalog.Catalog$Database, wvlet.airframe.sql.catalog.Catalog$CreateMode);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
       8: aload_1
       9: invokevirtual #304                // Method wvlet/airframe/sql/catalog/Catalog$Database.name:()Ljava/lang/String;
      12: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      17: astore        4
      19: aload         4
      21: instanceof    #236                // class scala/Some
      24: ifeq          110
      27: aload_2
      28: astore        5
      30: getstatic     #307                // Field wvlet/airframe/sql/catalog/Catalog$CreateMode$CREATE_IF_NOT_EXISTS$.MODULE$:Lwvlet/airframe/sql/catalog/Catalog$CreateMode$CREATE_IF_NOT_EXISTS$;
      33: aload         5
      35: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          44
      41: goto          104
      44: getstatic     #310                // Field wvlet/airframe/sql/catalog/Catalog$CreateMode$FAIL_IF_EXISTS$.MODULE$:Lwvlet/airframe/sql/catalog/Catalog$CreateMode$FAIL_IF_EXISTS$;
      47: aload         5
      49: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      52: ifeq          94
      55: getstatic     #313                // Field wvlet/airframe/sql/SQLErrorCode$DatabaseAlreadyExists$.MODULE$:Lwvlet/airframe/sql/SQLErrorCode$DatabaseAlreadyExists$;
      58: new           #253                // class java/lang/StringBuilder
      61: dup
      62: ldc_w         #314                // int 24
      65: invokespecial #257                // Method java/lang/StringBuilder."<init>":(I)V
      68: ldc_w         #259                // String database
      71: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_1
      75: invokevirtual #304                // Method wvlet/airframe/sql/catalog/Catalog$Database.name:()Ljava/lang/String;
      78: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc_w         #316                // String  already exists
      84: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #268                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokevirtual #317                // Method wvlet/airframe/sql/SQLErrorCode$DatabaseAlreadyExists$.newException:(Ljava/lang/String;)Lwvlet/airframe/sql/SQLError;
      93: athrow
      94: new           #274                // class scala/MatchError
      97: dup
      98: aload         5
     100: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     103: athrow
     104: getstatic     #323                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     107: goto          174
     110: getstatic     #244                // Field scala/None$.MODULE$:Lscala/None$;
     113: aload         4
     115: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     118: ifeq          164
     121: aload_0
     122: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
     125: getstatic     #328                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     128: aload_1
     129: invokevirtual #304                // Method wvlet/airframe/sql/catalog/Catalog$Database.name:()Ljava/lang/String;
     132: invokevirtual #331                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     135: checkcast     #283                // class java/lang/String
     138: astore        6
     140: getstatic     #334                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     143: aload         6
     145: aload_0
     146: invokespecial #336                // Method DatabaseHolder:()Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder$;
     149: aload_1
     150: invokevirtual #339                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder$.apply:(Lwvlet/airframe/sql/catalog/Catalog$Database;)Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder;
     153: invokevirtual #343                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     156: invokeinterface #347,  2          // InterfaceMethod scala/collection/mutable/Map.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
     161: goto          174
     164: new           #274                // class scala/MatchError
     167: dup
     168: aload         4
     170: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     173: athrow
     174: pop
     175: aload_3
     176: monitorexit
     177: goto          183
     180: aload_3
     181: monitorexit
     182: athrow
     183: return
    Exception table:
       from    to  target type
           4   175   180   any

  public scala.collection.immutable.Seq<java.lang.String> listTables(java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: aload_1
       6: invokespecial #288                // Method getDatabaseHolder:(Ljava/lang/String;)Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder;
       9: astore        4
      11: aload         4
      13: invokevirtual #356                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.tables:()Lscala/collection/mutable/Map;
      16: invokeinterface #194,  1          // InterfaceMethod scala/collection/mutable/Map.values:()Lscala/collection/Iterable;
      21: invokedynamic #363,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      26: invokeinterface #221,  2          // InterfaceMethod scala/collection/Iterable.map:(Lscala/Function1;)Ljava/lang/Object;
      31: checkcast     #223                // class scala/collection/IterableOnceOps
      34: invokeinterface #226,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
      39: astore_3
      40: aload_2
      41: monitorexit
      42: aload_3
      43: goto          49
      46: aload_2
      47: monitorexit
      48: athrow
      49: areturn
    Exception table:
       from    to  target type
           4    40    46   any

  public scala.Option<wvlet.airframe.sql.catalog.Catalog$Table> findTable(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
       8: aload_1
       9: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      14: aload_2
      15: invokedynamic #377,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;)Lscala/Function1;
      20: invokevirtual #381                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
      23: astore        4
      25: aload_3
      26: monitorexit
      27: aload         4
      29: goto          35
      32: aload_3
      33: monitorexit
      34: athrow
      35: areturn
    Exception table:
       from    to  target type
           4    25    32   any

  public wvlet.airframe.sql.catalog.Catalog$Table getTable(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: aload_1
       6: invokespecial #288                // Method getDatabaseHolder:(Ljava/lang/String;)Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder;
       9: astore        5
      11: aload         5
      13: invokevirtual #356                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.tables:()Lscala/collection/mutable/Map;
      16: aload_2
      17: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      22: astore        6
      24: aload         6
      26: instanceof    #236                // class scala/Some
      29: ifeq          50
      32: aload         6
      34: checkcast     #236                // class scala/Some
      37: invokevirtual #239                // Method scala/Some.value:()Ljava/lang/Object;
      40: checkcast     #50                 // class wvlet/airframe/sql/catalog/Catalog$Table
      43: astore        7
      45: aload         7
      47: goto          117
      50: getstatic     #244                // Field scala/None$.MODULE$:Lscala/None$;
      53: aload         6
      55: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          107
      61: getstatic     #386                // Field wvlet/airframe/sql/SQLErrorCode$TableNotFound$.MODULE$:Lwvlet/airframe/sql/SQLErrorCode$TableNotFound$;
      64: new           #253                // class java/lang/StringBuilder
      67: dup
      68: ldc_w         #387                // int 20
      71: invokespecial #257                // Method java/lang/StringBuilder."<init>":(I)V
      74: ldc_w         #389                // String table
      77: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc_w         #391                // String .
      87: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_2
      91: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc_w         #265                // String  is not found
      97: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #268                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokevirtual #392                // Method wvlet/airframe/sql/SQLErrorCode$TableNotFound$.newException:(Ljava/lang/String;)Lwvlet/airframe/sql/SQLError;
     106: athrow
     107: new           #274                // class scala/MatchError
     110: dup
     111: aload         6
     113: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     116: athrow
     117: astore        4
     119: aload_3
     120: monitorexit
     121: aload         4
     123: goto          129
     126: aload_3
     127: monitorexit
     128: athrow
     129: areturn
    Exception table:
       from    to  target type
           4   119   126   any

  public boolean tableExists(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #110                // Field databases:Lscala/collection/mutable/Map;
       8: aload_1
       9: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      14: astore        5
      16: getstatic     #244                // Field scala/None$.MODULE$:Lscala/None$;
      19: aload         5
      21: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          31
      27: iconst_0
      28: goto          76
      31: aload         5
      33: instanceof    #236                // class scala/Some
      36: ifeq          66
      39: aload         5
      41: checkcast     #236                // class scala/Some
      44: invokevirtual #239                // Method scala/Some.value:()Ljava/lang/Object;
      47: checkcast     #53                 // class wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder
      50: astore        6
      52: aload         6
      54: invokevirtual #356                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.tables:()Lscala/collection/mutable/Map;
      57: aload_2
      58: invokeinterface #399,  2          // InterfaceMethod scala/collection/mutable/Map.contains:(Ljava/lang/Object;)Z
      63: goto          76
      66: new           #274                // class scala/MatchError
      69: dup
      70: aload         5
      72: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      75: athrow
      76: istore        4
      78: aload_3
      79: monitorexit
      80: iload         4
      82: goto          88
      85: aload_3
      86: monitorexit
      87: athrow
      88: ireturn
    Exception table:
       from    to  target type
           4    78    85   any

  public void createTable(wvlet.airframe.sql.catalog.Catalog$Table, wvlet.airframe.sql.catalog.Catalog$CreateMode);
    Code:
       0: aload_1
       1: invokevirtual #403                // Method wvlet/airframe/sql/catalog/Catalog$Table.database:()Lscala/Option;
       4: aload_1
       5: invokedynamic #412,  0            // InvokeDynamic #3:apply:(Lwvlet/airframe/sql/catalog/Catalog$Table;)Lscala/Function0;
      10: invokevirtual #416                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      13: checkcast     #283                // class java/lang/String
      16: astore_3
      17: aload_0
      18: dup
      19: astore        4
      21: monitorenter
      22: aload_0
      23: aload_3
      24: invokespecial #288                // Method getDatabaseHolder:(Ljava/lang/String;)Lwvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder;
      27: astore        5
      29: aload         5
      31: invokevirtual #356                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.tables:()Lscala/collection/mutable/Map;
      34: aload_1
      35: invokevirtual #417                // Method wvlet/airframe/sql/catalog/Catalog$Table.name:()Ljava/lang/String;
      38: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      43: astore        6
      45: aload         6
      47: instanceof    #236                // class scala/Some
      50: ifeq          158
      53: aload         6
      55: checkcast     #236                // class scala/Some
      58: invokevirtual #239                // Method scala/Some.value:()Ljava/lang/Object;
      61: checkcast     #50                 // class wvlet/airframe/sql/catalog/Catalog$Table
      64: astore        7
      66: aload_2
      67: astore        8
      69: getstatic     #307                // Field wvlet/airframe/sql/catalog/Catalog$CreateMode$CREATE_IF_NOT_EXISTS$.MODULE$:Lwvlet/airframe/sql/catalog/Catalog$CreateMode$CREATE_IF_NOT_EXISTS$;
      72: aload         8
      74: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      77: ifeq          83
      80: goto          152
      83: getstatic     #310                // Field wvlet/airframe/sql/catalog/Catalog$CreateMode$FAIL_IF_EXISTS$.MODULE$:Lwvlet/airframe/sql/catalog/Catalog$CreateMode$FAIL_IF_EXISTS$;
      86: aload         8
      88: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      91: ifeq          142
      94: getstatic     #420                // Field wvlet/airframe/sql/SQLErrorCode$TableAlreadyExists$.MODULE$:Lwvlet/airframe/sql/SQLErrorCode$TableAlreadyExists$;
      97: new           #253                // class java/lang/StringBuilder
     100: dup
     101: ldc           #254                // int 22
     103: invokespecial #257                // Method java/lang/StringBuilder."<init>":(I)V
     106: ldc_w         #389                // String table
     109: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_3
     113: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc_w         #391                // String .
     119: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_1
     123: invokevirtual #417                // Method wvlet/airframe/sql/catalog/Catalog$Table.name:()Ljava/lang/String;
     126: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc_w         #316                // String  already exists
     132: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #268                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokevirtual #421                // Method wvlet/airframe/sql/SQLErrorCode$TableAlreadyExists$.newException:(Ljava/lang/String;)Lwvlet/airframe/sql/SQLError;
     141: athrow
     142: new           #274                // class scala/MatchError
     145: dup
     146: aload         8
     148: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     151: athrow
     152: getstatic     #323                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     155: goto          216
     158: getstatic     #244                // Field scala/None$.MODULE$:Lscala/None$;
     161: aload         6
     163: invokevirtual #248                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     166: ifeq          206
     169: aload         5
     171: invokevirtual #356                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.tables:()Lscala/collection/mutable/Map;
     174: getstatic     #328                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     177: aload_1
     178: invokevirtual #417                // Method wvlet/airframe/sql/catalog/Catalog$Table.name:()Ljava/lang/String;
     181: invokevirtual #331                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     184: checkcast     #283                // class java/lang/String
     187: astore        9
     189: getstatic     #334                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     192: aload         9
     194: aload_1
     195: invokevirtual #343                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     198: invokeinterface #347,  2          // InterfaceMethod scala/collection/mutable/Map.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
     203: goto          216
     206: new           #274                // class scala/MatchError
     209: dup
     210: aload         6
     212: invokespecial #277                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     215: athrow
     216: pop
     217: aload         4
     219: monitorexit
     220: goto          227
     223: aload         4
     225: monitorexit
     226: athrow
     227: return
    Exception table:
       from    to  target type
          22   217   223   any

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.SQLFunction> listFunctions();
    Code:
       0: aload_0
       1: getfield      #88                 // Field functions:Lscala/collection/immutable/Seq;
       4: areturn

  private static final java.lang.String listDatabases$$anonfun$1(wvlet.airframe.sql.catalog.InMemoryCatalog$DatabaseHolder);
    Code:
       0: aload_0
       1: invokevirtual #292                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.db:()Lwvlet/airframe/sql/catalog/Catalog$Database;
       4: invokevirtual #304                // Method wvlet/airframe/sql/catalog/Catalog$Database.name:()Ljava/lang/String;
       7: areturn

  private static final java.lang.String listTables$$anonfun$1(wvlet.airframe.sql.catalog.Catalog$Table);
    Code:
       0: aload_0
       1: invokevirtual #417                // Method wvlet/airframe/sql/catalog/Catalog$Table.name:()Ljava/lang/String;
       4: areturn

  private static final scala.Option findTable$$anonfun$1(java.lang.String, wvlet.airframe.sql.catalog.InMemoryCatalog$DatabaseHolder);
    Code:
       0: aload_1
       1: invokevirtual #356                // Method wvlet/airframe/sql/catalog/InMemoryCatalog$DatabaseHolder.tables:()Lscala/collection/mutable/Map;
       4: aload_0
       5: invokeinterface #234,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      10: areturn

  private static final java.lang.String $anonfun$1(wvlet.airframe.sql.catalog.Catalog$Table);
    Code:
       0: getstatic     #430                // Field wvlet/airframe/sql/SQLErrorCode$InvalidArgument$.MODULE$:Lwvlet/airframe/sql/SQLErrorCode$InvalidArgument$;
       3: new           #253                // class java/lang/StringBuilder
       6: dup
       7: ldc_w         #431                // int 43
      10: invokespecial #257                // Method java/lang/StringBuilder."<init>":(I)V
      13: ldc_w         #433                // String Missing database for create table request:
      16: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #417                // Method wvlet/airframe/sql/catalog/Catalog$Table.name:()Ljava/lang/String;
      23: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #268                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #434                // Method wvlet/airframe/sql/SQLErrorCode$InvalidArgument$.newException:(Ljava/lang/String;)Lwvlet/airframe/sql/SQLError;
      32: athrow

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #446,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
