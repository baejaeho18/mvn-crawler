Compiled from "SqlBaseParser.java"
public class wvlet.airframe.sql.parser.SqlBaseParser$ComparisonOperatorContext extends org.antlr.v4.runtime.ParserRuleContext {
  public org.antlr.v4.runtime.tree.TerminalNode EQ();
    Code:
       0: aload_0
       1: sipush        188
       4: iconst_0
       5: invokevirtual #2                  // Method getToken:(II)Lorg/antlr/v4/runtime/tree/TerminalNode;
       8: areturn

  public org.antlr.v4.runtime.tree.TerminalNode NEQ();
    Code:
       0: aload_0
       1: sipush        189
       4: iconst_0
       5: invokevirtual #2                  // Method getToken:(II)Lorg/antlr/v4/runtime/tree/TerminalNode;
       8: areturn

  public org.antlr.v4.runtime.tree.TerminalNode LT();
    Code:
       0: aload_0
       1: sipush        190
       4: iconst_0
       5: invokevirtual #2                  // Method getToken:(II)Lorg/antlr/v4/runtime/tree/TerminalNode;
       8: areturn

  public org.antlr.v4.runtime.tree.TerminalNode LTE();
    Code:
       0: aload_0
       1: sipush        191
       4: iconst_0
       5: invokevirtual #2                  // Method getToken:(II)Lorg/antlr/v4/runtime/tree/TerminalNode;
       8: areturn

  public org.antlr.v4.runtime.tree.TerminalNode GT();
    Code:
       0: aload_0
       1: sipush        192
       4: iconst_0
       5: invokevirtual #2                  // Method getToken:(II)Lorg/antlr/v4/runtime/tree/TerminalNode;
       8: areturn

  public org.antlr.v4.runtime.tree.TerminalNode GTE();
    Code:
       0: aload_0
       1: sipush        193
       4: iconst_0
       5: invokevirtual #2                  // Method getToken:(II)Lorg/antlr/v4/runtime/tree/TerminalNode;
       8: areturn

  public wvlet.airframe.sql.parser.SqlBaseParser$ComparisonOperatorContext(org.antlr.v4.runtime.ParserRuleContext, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method org/antlr/v4/runtime/ParserRuleContext."<init>":(Lorg/antlr/v4/runtime/ParserRuleContext;I)V
       6: return

  public int getRuleIndex();
    Code:
       0: bipush        34
       2: ireturn

  public void enterRule(org.antlr.v4.runtime.tree.ParseTreeListener);
    Code:
       0: aload_1
       1: instanceof    #4                  // class wvlet/airframe/sql/parser/SqlBaseListener
       4: ifeq          17
       7: aload_1
       8: checkcast     #4                  // class wvlet/airframe/sql/parser/SqlBaseListener
      11: aload_0
      12: invokeinterface #5,  2            // InterfaceMethod wvlet/airframe/sql/parser/SqlBaseListener.enterComparisonOperator:(Lwvlet/airframe/sql/parser/SqlBaseParser$ComparisonOperatorContext;)V
      17: return

  public void exitRule(org.antlr.v4.runtime.tree.ParseTreeListener);
    Code:
       0: aload_1
       1: instanceof    #4                  // class wvlet/airframe/sql/parser/SqlBaseListener
       4: ifeq          17
       7: aload_1
       8: checkcast     #4                  // class wvlet/airframe/sql/parser/SqlBaseListener
      11: aload_0
      12: invokeinterface #6,  2            // InterfaceMethod wvlet/airframe/sql/parser/SqlBaseListener.exitComparisonOperator:(Lwvlet/airframe/sql/parser/SqlBaseParser$ComparisonOperatorContext;)V
      17: return

  public <T> T accept(org.antlr.v4.runtime.tree.ParseTreeVisitor<? extends T>);
    Code:
       0: aload_1
       1: instanceof    #7                  // class wvlet/airframe/sql/parser/SqlBaseVisitor
       4: ifeq          18
       7: aload_1
       8: checkcast     #7                  // class wvlet/airframe/sql/parser/SqlBaseVisitor
      11: aload_0
      12: invokeinterface #8,  2            // InterfaceMethod wvlet/airframe/sql/parser/SqlBaseVisitor.visitComparisonOperator:(Lwvlet/airframe/sql/parser/SqlBaseParser$ComparisonOperatorContext;)Ljava/lang/Object;
      17: areturn
      18: aload_1
      19: aload_0
      20: invokeinterface #9,  2            // InterfaceMethod org/antlr/v4/runtime/tree/ParseTreeVisitor.visitChildren:(Lorg/antlr/v4/runtime/tree/RuleNode;)Ljava/lang/Object;
      25: areturn
}
