Compiled from "Expression.scala"
public class wvlet.airframe.sql.model.Expression$WindowFrame implements scala.Product,wvlet.airframe.sql.model.Expression,wvlet.airframe.sql.model.LeafExpression,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy16;

  public long 0bitmap$16;

  private final wvlet.airframe.sql.model.Expression$FrameType frameType;

  private final wvlet.airframe.sql.model.Expression$FrameBound start;

  private final scala.Option end;

  public static wvlet.airframe.sql.model.Expression$WindowFrame apply(wvlet.airframe.sql.model.Expression$FrameType, wvlet.airframe.sql.model.Expression$FrameBound, scala.Option<wvlet.airframe.sql.model.Expression$FrameBound>);
    Code:
       0: getstatic     #41                 // Field wvlet/airframe/sql/model/Expression$WindowFrame$.MODULE$:Lwvlet/airframe/sql/model/Expression$WindowFrame$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #43                 // Method wvlet/airframe/sql/model/Expression$WindowFrame$.apply:(Lwvlet/airframe/sql/model/Expression$FrameType;Lwvlet/airframe/sql/model/Expression$FrameBound;Lscala/Option;)Lwvlet/airframe/sql/model/Expression$WindowFrame;
       9: areturn

  public static wvlet.airframe.sql.model.Expression$WindowFrame fromProduct(scala.Product);
    Code:
       0: getstatic     #41                 // Field wvlet/airframe/sql/model/Expression$WindowFrame$.MODULE$:Lwvlet/airframe/sql/model/Expression$WindowFrame$;
       3: aload_0
       4: invokevirtual #47                 // Method wvlet/airframe/sql/model/Expression$WindowFrame$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/Expression$WindowFrame;
       7: areturn

  public static wvlet.airframe.sql.model.Expression$WindowFrame unapply(wvlet.airframe.sql.model.Expression$WindowFrame);
    Code:
       0: getstatic     #41                 // Field wvlet/airframe/sql/model/Expression$WindowFrame$.MODULE$:Lwvlet/airframe/sql/model/Expression$WindowFrame$;
       3: aload_0
       4: invokevirtual #51                 // Method wvlet/airframe/sql/model/Expression$WindowFrame$.unapply:(Lwvlet/airframe/sql/model/Expression$WindowFrame;)Lwvlet/airframe/sql/model/Expression$WindowFrame;
       7: areturn

  public wvlet.airframe.sql.model.Expression$WindowFrame(wvlet.airframe.sql.model.Expression$FrameType, wvlet.airframe.sql.model.Expression$FrameBound, scala.Option<wvlet.airframe.sql.model.Expression$FrameBound>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field frameType:Lwvlet/airframe/sql/model/Expression$FrameType;
       5: aload_0
       6: aload_2
       7: putfield      #58                 // Field start:Lwvlet/airframe/sql/model/Expression$FrameBound;
      10: aload_0
      11: aload_3
      12: putfield      #60                 // Field end:Lscala/Option;
      15: aload_0
      16: invokespecial #63                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #67                 // InterfaceMethod wvlet/airframe/sql/model/Expression.$init$:(Lwvlet/airframe/sql/model/Expression;)V
      23: return

  private static {};
    Code:
       0: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/Expression$WindowFrame
       5: ldc           #76                 // String 0bitmap$16
       7: invokevirtual #82                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #86                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #88                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #98                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #88                 // Field OFFSET$0:J
       7: invokevirtual #106                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #110                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #111                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #114                // Field resolved$lzy16:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #88                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #118                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #122                // InterfaceMethod wvlet/airframe/sql/model/Expression.resolved$:(Lwvlet/airframe/sql/model/Expression;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #114                // Field resolved$lzy16:Z
      67: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #88                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #126                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #88                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #126                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #75                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #88                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #130                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String sqlExpr();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod wvlet/airframe/sql/model/Expression.sqlExpr$:(Lwvlet/airframe/sql/model/Expression;)Ljava/lang/String;
       4: areturn

  public wvlet.airframe.sql.model.Expression transformExpression(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #143                // InterfaceMethod wvlet/airframe/sql/model/Expression.transformExpression$:(Lwvlet/airframe/sql/model/Expression;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/Expression;
       5: areturn

  public scala.collection.immutable.List collectSubExpressions();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod wvlet/airframe/sql/model/Expression.collectSubExpressions$:(Lwvlet/airframe/sql/model/Expression;)Lscala/collection/immutable/List;
       4: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // InterfaceMethod wvlet/airframe/sql/model/Expression.traverseExpressions$:(Lwvlet/airframe/sql/model/Expression;Lscala/PartialFunction;)V
       5: return

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // InterfaceMethod wvlet/airframe/sql/model/Expression.collectExpressions$:(Lwvlet/airframe/sql/model/Expression;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod wvlet/airframe/sql/model/Expression.resolvedChildren$:(Lwvlet/airframe/sql/model/Expression;)Z
       4: ireturn

  public boolean resolvedInputs();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod wvlet/airframe/sql/model/Expression.resolvedInputs$:(Lwvlet/airframe/sql/model/Expression;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #177                // InterfaceMethod wvlet/airframe/sql/model/LeafExpression.children$:(Lwvlet/airframe/sql/model/LeafExpression;)Lscala/collection/immutable/Seq;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #184                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #188                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     135
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/Expression$WindowFrame
      11: ifeq          128
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/Expression$WindowFrame
      18: astore_3
      19: aload_0
      20: invokevirtual #194                // Method frameType:()Lwvlet/airframe/sql/model/Expression$FrameType;
      23: aload_3
      24: invokevirtual #194                // Method frameType:()Lwvlet/airframe/sql/model/Expression$FrameType;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          124
      42: aload         4
      44: invokevirtual #196                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          124
      50: aload_0
      51: invokevirtual #199                // Method start:()Lwvlet/airframe/sql/model/Expression$FrameBound;
      54: aload_3
      55: invokevirtual #199                // Method start:()Lwvlet/airframe/sql/model/Expression$FrameBound;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          124
      73: aload         5
      75: invokevirtual #196                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          124
      81: aload_0
      82: invokevirtual #202                // Method end:()Lscala/Option;
      85: aload_3
      86: invokevirtual #202                // Method end:()Lscala/Option;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          124
     104: aload         6
     106: invokevirtual #196                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          124
     112: aload_3
     113: aload_0
     114: invokevirtual #205                // Method canEqual:(Ljava/lang/Object;)Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: goto          132
     128: iconst_0
     129: goto          132
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: ireturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/Expression$WindowFrame
       4: ireturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #212                // String WindowFrame
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #218                // Method _1:()Lwvlet/airframe/sql/model/Expression$FrameType;
      32: areturn
      33: aload_0
      34: invokevirtual #221                // Method _2:()Lwvlet/airframe/sql/model/Expression$FrameBound;
      37: areturn
      38: aload_0
      39: invokevirtual #224                // Method _3:()Lscala/Option;
      42: areturn
      43: new           #226                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #232                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: invokevirtual #237                // Method java/lang/Integer.toString:()Ljava/lang/String;
      54: invokespecial #240                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 31
                     2: 34
               default: 37
          }
      28: ldc           #244                // String frameType
      30: areturn
      31: ldc           #245                // String start
      33: areturn
      34: ldc           #246                // String end
      36: areturn
      37: new           #226                // class java/lang/IndexOutOfBoundsException
      40: dup
      41: iload_1
      42: invokestatic  #232                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      45: invokevirtual #237                // Method java/lang/Integer.toString:()Ljava/lang/String;
      48: invokespecial #240                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      51: athrow

  public wvlet.airframe.sql.model.Expression$FrameType frameType();
    Code:
       0: aload_0
       1: getfield      #56                 // Field frameType:Lwvlet/airframe/sql/model/Expression$FrameType;
       4: areturn

  public wvlet.airframe.sql.model.Expression$FrameBound start();
    Code:
       0: aload_0
       1: getfield      #58                 // Field start:Lwvlet/airframe/sql/model/Expression$FrameBound;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression$FrameBound> end();
    Code:
       0: aload_0
       1: getfield      #60                 // Field end:Lscala/Option;
       4: areturn

  public java.lang.String toString();
    Code:
       0: getstatic     #252                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #256                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       6: invokevirtual #262                // Method scala/collection/immutable/Seq$.newBuilder:()Lscala/collection/mutable/Builder;
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #194                // Method frameType:()Lwvlet/airframe/sql/model/Expression$FrameType;
      15: invokeinterface #263,  1          // InterfaceMethod wvlet/airframe/sql/model/Expression$FrameType.toString:()Ljava/lang/String;
      20: invokeinterface #269,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
      25: pop
      26: aload_0
      27: invokevirtual #202                // Method end:()Lscala/Option;
      30: invokevirtual #272                // Method scala/Option.isDefined:()Z
      33: ifeq          46
      36: aload_1
      37: ldc_w         #274                // String BETWEEN
      40: invokeinterface #269,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
      45: pop
      46: aload_1
      47: aload_0
      48: invokevirtual #199                // Method start:()Lwvlet/airframe/sql/model/Expression$FrameBound;
      51: invokeinterface #275,  1          // InterfaceMethod wvlet/airframe/sql/model/Expression$FrameBound.toString:()Ljava/lang/String;
      56: invokeinterface #269,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
      61: pop
      62: aload_0
      63: invokevirtual #202                // Method end:()Lscala/Option;
      66: invokevirtual #272                // Method scala/Option.isDefined:()Z
      69: ifeq          99
      72: aload_1
      73: ldc_w         #277                // String AND
      76: invokeinterface #269,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
      81: pop
      82: aload_1
      83: aload_0
      84: invokevirtual #202                // Method end:()Lscala/Option;
      87: invokevirtual #280                // Method scala/Option.get:()Ljava/lang/Object;
      90: invokevirtual #281                // Method java/lang/Object.toString:()Ljava/lang/String;
      93: invokeinterface #269,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
      98: pop
      99: aload_1
     100: invokeinterface #284,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
     105: checkcast     #286                // class scala/collection/IterableOnceOps
     108: ldc_w         #288                // String
     111: invokeinterface #292,  2          // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
     116: areturn

  public wvlet.airframe.sql.model.Expression$WindowFrame copy(wvlet.airframe.sql.model.Expression$FrameType, wvlet.airframe.sql.model.Expression$FrameBound, scala.Option<wvlet.airframe.sql.model.Expression$FrameBound>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/Expression$WindowFrame
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #297                // Method "<init>":(Lwvlet/airframe/sql/model/Expression$FrameType;Lwvlet/airframe/sql/model/Expression$FrameBound;Lscala/Option;)V
      10: areturn

  public wvlet.airframe.sql.model.Expression$FrameType copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method frameType:()Lwvlet/airframe/sql/model/Expression$FrameType;
       4: areturn

  public wvlet.airframe.sql.model.Expression$FrameBound copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method start:()Lwvlet/airframe/sql/model/Expression$FrameBound;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression$FrameBound> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method end:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.Expression$FrameType _1();
    Code:
       0: aload_0
       1: invokevirtual #194                // Method frameType:()Lwvlet/airframe/sql/model/Expression$FrameType;
       4: areturn

  public wvlet.airframe.sql.model.Expression$FrameBound _2();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method start:()Lwvlet/airframe/sql/model/Expression$FrameBound;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression$FrameBound> _3();
    Code:
       0: aload_0
       1: invokevirtual #202                // Method end:()Lscala/Option;
       4: areturn
}
