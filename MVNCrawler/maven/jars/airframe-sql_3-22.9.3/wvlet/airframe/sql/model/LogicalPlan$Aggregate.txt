Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$Aggregate implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.UnaryPlan,wvlet.airframe.sql.model.LogicalPlan$UnaryRelation,wvlet.airframe.sql.model.LogicalPlan$Selection,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy12;

  public long 0bitmap$12;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation child;

  private final scala.collection.immutable.List selectItems;

  private final scala.collection.immutable.List groupingKeys;

  private final scala.Option having;

  public static wvlet.airframe.sql.model.LogicalPlan$Aggregate apply(wvlet.airframe.sql.model.LogicalPlan$Relation, scala.collection.immutable.List<wvlet.airframe.sql.model.Attribute>, scala.collection.immutable.List<wvlet.airframe.sql.model.Expression$GroupingKey>, scala.Option<wvlet.airframe.sql.model.Expression>);
    Code:
       0: getstatic     #52                 // Field wvlet/airframe/sql/model/LogicalPlan$Aggregate$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Aggregate$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #54                 // Method wvlet/airframe/sql/model/LogicalPlan$Aggregate$.apply:(Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/Option;)Lwvlet/airframe/sql/model/LogicalPlan$Aggregate;
      10: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$Aggregate fromProduct(scala.Product);
    Code:
       0: getstatic     #52                 // Field wvlet/airframe/sql/model/LogicalPlan$Aggregate$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Aggregate$;
       3: aload_0
       4: invokevirtual #58                 // Method wvlet/airframe/sql/model/LogicalPlan$Aggregate$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$Aggregate;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$Aggregate unapply(wvlet.airframe.sql.model.LogicalPlan$Aggregate);
    Code:
       0: getstatic     #52                 // Field wvlet/airframe/sql/model/LogicalPlan$Aggregate$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Aggregate$;
       3: aload_0
       4: invokevirtual #62                 // Method wvlet/airframe/sql/model/LogicalPlan$Aggregate$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$Aggregate;)Lwvlet/airframe/sql/model/LogicalPlan$Aggregate;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Aggregate(wvlet.airframe.sql.model.LogicalPlan$Relation, scala.collection.immutable.List<wvlet.airframe.sql.model.Attribute>, scala.collection.immutable.List<wvlet.airframe.sql.model.Expression$GroupingKey>, scala.Option<wvlet.airframe.sql.model.Expression>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field child:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       5: aload_0
       6: aload_2
       7: putfield      #69                 // Field selectItems:Lscala/collection/immutable/List;
      10: aload_0
      11: aload_3
      12: putfield      #71                 // Field groupingKeys:Lscala/collection/immutable/List;
      15: aload_0
      16: aload         4
      18: putfield      #73                 // Field having:Lscala/Option;
      21: aload_0
      22: invokespecial #76                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #80                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      29: return

  private static {};
    Code:
       0: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$Aggregate
       5: ldc           #89                 // String 0bitmap$12
       7: invokevirtual #95                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #99                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #101                // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #101                // Field OFFSET$0:J
       7: invokevirtual #125                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #129                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #130                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #133                // Field resolved$lzy12:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #101                // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #137                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #141                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #133                // Field resolved$lzy12:Z
      67: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #101                // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #145                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #101                // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #145                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #88                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #101                // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #149                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #179                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #198                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #205                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #220                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #225                // InterfaceMethod wvlet/airframe/sql/model/UnaryPlan.children$:(Lwvlet/airframe/sql/model/UnaryPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq inputAttributes();
    Code:
       0: aload_0
       1: invokestatic  #229                // InterfaceMethod wvlet/airframe/sql/model/UnaryPlan.inputAttributes$:(Lwvlet/airframe/sql/model/UnaryPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation inputRelation();
    Code:
       0: aload_0
       1: invokestatic  #235                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$UnaryRelation.inputRelation$:(Lwvlet/airframe/sql/model/LogicalPlan$UnaryRelation;)Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #242                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #246                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     166
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$Aggregate
      11: ifeq          159
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$Aggregate
      18: astore_3
      19: aload_0
      20: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      23: aload_3
      24: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          155
      42: aload         4
      44: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          155
      50: aload_0
      51: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
      54: aload_3
      55: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          155
      73: aload         5
      75: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          155
      81: aload_0
      82: invokevirtual #257                // Method groupingKeys:()Lscala/collection/immutable/List;
      85: aload_3
      86: invokevirtual #257                // Method groupingKeys:()Lscala/collection/immutable/List;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          155
     104: aload         6
     106: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          155
     112: aload_0
     113: invokevirtual #260                // Method having:()Lscala/Option;
     116: aload_3
     117: invokevirtual #260                // Method having:()Lscala/Option;
     120: astore        7
     122: dup
     123: ifnonnull     135
     126: pop
     127: aload         7
     129: ifnull        143
     132: goto          155
     135: aload         7
     137: invokevirtual #253                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          155
     143: aload_3
     144: aload_0
     145: invokevirtual #263                // Method canEqual:(Ljava/lang/Object;)Z
     148: ifeq          155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: goto          163
     159: iconst_0
     160: goto          163
     163: ifeq          170
     166: iconst_1
     167: goto          171
     170: iconst_0
     171: ireturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$Aggregate
       4: ireturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #272                // String Aggregate
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 42
                     3: 47
               default: 52
          }
      32: aload_0
      33: invokevirtual #278                // Method _1:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      36: areturn
      37: aload_0
      38: invokevirtual #281                // Method _2:()Lscala/collection/immutable/List;
      41: areturn
      42: aload_0
      43: invokevirtual #284                // Method _3:()Lscala/collection/immutable/List;
      46: areturn
      47: aload_0
      48: invokevirtual #287                // Method _4:()Lscala/Option;
      51: areturn
      52: new           #289                // class java/lang/IndexOutOfBoundsException
      55: dup
      56: iload_1
      57: invokestatic  #295                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      60: invokevirtual #300                // Method java/lang/Integer.toString:()Ljava/lang/String;
      63: invokespecial #303                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      66: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 36
                     2: 40
                     3: 44
               default: 48
          }
      32: ldc_w         #307                // String child
      35: areturn
      36: ldc_w         #308                // String selectItems
      39: areturn
      40: ldc_w         #309                // String groupingKeys
      43: areturn
      44: ldc_w         #310                // String having
      47: areturn
      48: new           #289                // class java/lang/IndexOutOfBoundsException
      51: dup
      52: iload_1
      53: invokestatic  #295                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: invokevirtual #300                // Method java/lang/Integer.toString:()Ljava/lang/String;
      59: invokespecial #303                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      62: athrow

  public wvlet.airframe.sql.model.LogicalPlan$Relation child();
    Code:
       0: aload_0
       1: getfield      #67                 // Field child:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.collection.immutable.List<wvlet.airframe.sql.model.Attribute> selectItems();
    Code:
       0: aload_0
       1: getfield      #69                 // Field selectItems:Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List<wvlet.airframe.sql.model.Expression$GroupingKey> groupingKeys();
    Code:
       0: aload_0
       1: getfield      #71                 // Field groupingKeys:Lscala/collection/immutable/List;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression> having();
    Code:
       0: aload_0
       1: getfield      #73                 // Field having:Lscala/Option;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: getstatic     #321                // Field wvlet/airframe/sql/model/LogicalPlan$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$;
       3: aload_0
       4: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
       7: invokevirtual #325                // Method wvlet/airframe/sql/model/LogicalPlan$.wvlet$airframe$sql$model$LogicalPlan$$$isSelectAll:(Lscala/collection/immutable/Seq;)Z
      10: ifeq          19
      13: ldc_w         #327                // String *
      16: goto          32
      19: aload_0
      20: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
      23: invokevirtual #330                // Method scala/collection/immutable/List.length:()I
      26: invokestatic  #295                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      29: invokestatic  #336                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      32: astore_2
      33: new           #338                // class java/lang/StringBuilder
      36: dup
      37: ldc_w         #339                // int 6
      40: invokespecial #342                // Method java/lang/StringBuilder."<init>":(I)V
      43: ldc_w         #344                // String A[
      46: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_2
      50: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc_w         #350                // String ,
      56: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #257                // Method groupingKeys:()Lscala/collection/immutable/List;
      63: invokevirtual #330                // Method scala/collection/immutable/List.length:()I
      66: invokevirtual #353                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc_w         #355                // String ](
      72: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      79: aload_1
      80: invokeinterface #357,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      85: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc_w         #359                // String )
      91: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #360                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: areturn

  public java.lang.String toString();
    Code:
       0: new           #338                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #364                // int 21
       7: invokespecial #342                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #366                // String Aggregate[
      13: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #257                // Method groupingKeys:()Lscala/collection/immutable/List;
      20: ldc_w         #350                // String ,
      23: invokevirtual #370                // Method scala/collection/immutable/List.mkString:(Ljava/lang/String;)Ljava/lang/String;
      26: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc_w         #372                // String ](Select[
      32: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
      39: ldc_w         #374                // String ,
      42: invokevirtual #370                // Method scala/collection/immutable/List.mkString:(Ljava/lang/String;)Ljava/lang/String;
      45: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc_w         #376                // String (
      51: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      58: invokevirtual #379                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: ldc_w         #359                // String )
      64: invokevirtual #348                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #360                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Aggregate copy(wvlet.airframe.sql.model.LogicalPlan$Relation, scala.collection.immutable.List<wvlet.airframe.sql.model.Attribute>, scala.collection.immutable.List<wvlet.airframe.sql.model.Expression$GroupingKey>, scala.Option<wvlet.airframe.sql.model.Expression>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$Aggregate
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #384                // Method "<init>":(Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/Option;)V
      12: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.collection.immutable.List<wvlet.airframe.sql.model.Attribute> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List<wvlet.airframe.sql.model.Expression$GroupingKey> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #257                // Method groupingKeys:()Lscala/collection/immutable/List;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #260                // Method having:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _1();
    Code:
       0: aload_0
       1: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.collection.immutable.List<wvlet.airframe.sql.model.Attribute> _2();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List<wvlet.airframe.sql.model.Expression$GroupingKey> _3();
    Code:
       0: aload_0
       1: invokevirtual #257                // Method groupingKeys:()Lscala/collection/immutable/List;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression> _4();
    Code:
       0: aload_0
       1: invokevirtual #260                // Method having:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan child();
    Code:
       0: aload_0
       1: invokevirtual #251                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.collection.immutable.Seq selectItems();
    Code:
       0: aload_0
       1: invokevirtual #255                // Method selectItems:()Lscala/collection/immutable/List;
       4: areturn
}
