Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$AliasedRelation implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.UnaryPlan,wvlet.airframe.sql.model.LogicalPlan$UnaryRelation,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy2;

  public long 0bitmap$2;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation child;

  private final wvlet.airframe.sql.model.Expression$Identifier alias;

  private final scala.Option columnNames;

  public static wvlet.airframe.sql.model.LogicalPlan$AliasedRelation apply(wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.Expression$Identifier, scala.Option<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: getstatic     #48                 // Field wvlet/airframe/sql/model/LogicalPlan$AliasedRelation$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #50                 // Method wvlet/airframe/sql/model/LogicalPlan$AliasedRelation$.apply:(Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/Expression$Identifier;Lscala/Option;)Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation;
       9: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$AliasedRelation fromProduct(scala.Product);
    Code:
       0: getstatic     #48                 // Field wvlet/airframe/sql/model/LogicalPlan$AliasedRelation$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation$;
       3: aload_0
       4: invokevirtual #54                 // Method wvlet/airframe/sql/model/LogicalPlan$AliasedRelation$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$AliasedRelation unapply(wvlet.airframe.sql.model.LogicalPlan$AliasedRelation);
    Code:
       0: getstatic     #48                 // Field wvlet/airframe/sql/model/LogicalPlan$AliasedRelation$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation$;
       3: aload_0
       4: invokevirtual #58                 // Method wvlet/airframe/sql/model/LogicalPlan$AliasedRelation$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation;)Lwvlet/airframe/sql/model/LogicalPlan$AliasedRelation;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$AliasedRelation(wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.Expression$Identifier, scala.Option<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field child:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       5: aload_0
       6: aload_2
       7: putfield      #65                 // Field alias:Lwvlet/airframe/sql/model/Expression$Identifier;
      10: aload_0
      11: aload_3
      12: putfield      #67                 // Field columnNames:Lscala/Option;
      15: aload_0
      16: invokespecial #70                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #74                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      23: return

  private static {};
    Code:
       0: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$AliasedRelation
       5: ldc           #83                 // String 0bitmap$2
       7: invokevirtual #89                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #93                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #95                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #95                 // Field OFFSET$0:J
       7: invokevirtual #119                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #123                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #124                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #127                // Field resolved$lzy2:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #95                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #131                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #135                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #127                // Field resolved$lzy2:Z
      67: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #95                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #139                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #95                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #139                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #82                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #95                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #143                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #153                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #192                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #199                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #206                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #214                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod wvlet/airframe/sql/model/UnaryPlan.children$:(Lwvlet/airframe/sql/model/UnaryPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation inputRelation();
    Code:
       0: aload_0
       1: invokestatic  #225                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$UnaryRelation.inputRelation$:(Lwvlet/airframe/sql/model/LogicalPlan$UnaryRelation;)Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #232                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #236                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     135
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$AliasedRelation
      11: ifeq          128
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$AliasedRelation
      18: astore_3
      19: aload_0
      20: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      23: aload_3
      24: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          124
      42: aload         4
      44: invokevirtual #243                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          124
      50: aload_0
      51: invokevirtual #246                // Method alias:()Lwvlet/airframe/sql/model/Expression$Identifier;
      54: aload_3
      55: invokevirtual #246                // Method alias:()Lwvlet/airframe/sql/model/Expression$Identifier;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          124
      73: aload         5
      75: invokevirtual #243                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          124
      81: aload_0
      82: invokevirtual #249                // Method columnNames:()Lscala/Option;
      85: aload_3
      86: invokevirtual #249                // Method columnNames:()Lscala/Option;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          124
     104: aload         6
     106: invokevirtual #243                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          124
     112: aload_3
     113: aload_0
     114: invokevirtual #252                // Method canEqual:(Ljava/lang/Object;)Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: goto          132
     128: iconst_0
     129: goto          132
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #232                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #260                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$AliasedRelation
       4: ireturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #264                // String AliasedRelation
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #270                // Method _1:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      32: areturn
      33: aload_0
      34: invokevirtual #273                // Method _2:()Lwvlet/airframe/sql/model/Expression$Identifier;
      37: areturn
      38: aload_0
      39: invokevirtual #276                // Method _3:()Lscala/Option;
      42: areturn
      43: new           #278                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #284                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: invokevirtual #288                // Method java/lang/Integer.toString:()Ljava/lang/String;
      54: invokespecial #291                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 32
                     2: 36
               default: 40
          }
      28: ldc_w         #295                // String child
      31: areturn
      32: ldc_w         #296                // String alias
      35: areturn
      36: ldc_w         #297                // String columnNames
      39: areturn
      40: new           #278                // class java/lang/IndexOutOfBoundsException
      43: dup
      44: iload_1
      45: invokestatic  #284                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokevirtual #288                // Method java/lang/Integer.toString:()Ljava/lang/String;
      51: invokespecial #291                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow

  public wvlet.airframe.sql.model.LogicalPlan$Relation child();
    Code:
       0: aload_0
       1: getfield      #63                 // Field child:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Identifier alias();
    Code:
       0: aload_0
       1: getfield      #65                 // Field alias:Lwvlet/airframe/sql/model/Expression$Identifier;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> columnNames();
    Code:
       0: aload_0
       1: getfield      #67                 // Field columnNames:Lscala/Option;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: aload_0
       1: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: aload_1
       5: invokeinterface #303,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      10: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #308,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.inputAttributes:()Lscala/collection/immutable/Seq;
       9: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #311,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
       9: areturn

  public wvlet.airframe.sql.model.LogicalPlan$AliasedRelation copy(wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.Expression$Identifier, scala.Option<scala.collection.immutable.Seq<java.lang.String>>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$AliasedRelation
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #314                // Method "<init>":(Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/Expression$Identifier;Lscala/Option;)V
      10: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Identifier copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #246                // Method alias:()Lwvlet/airframe/sql/model/Expression$Identifier;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #249                // Method columnNames:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _1();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Identifier _2();
    Code:
       0: aload_0
       1: invokevirtual #246                // Method alias:()Lwvlet/airframe/sql/model/Expression$Identifier;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<java.lang.String>> _3();
    Code:
       0: aload_0
       1: invokevirtual #249                // Method columnNames:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan child();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn
}
