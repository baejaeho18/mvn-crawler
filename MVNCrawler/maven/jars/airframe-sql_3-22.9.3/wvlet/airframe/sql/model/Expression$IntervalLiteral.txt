Compiled from "Expression.scala"
public class wvlet.airframe.sql.model.Expression$IntervalLiteral implements scala.Product,wvlet.airframe.sql.model.Expression,wvlet.airframe.sql.model.Expression$Literal,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy59;

  public long 0bitmap$59;

  private final java.lang.String value;

  private final wvlet.airframe.sql.model.Expression$Sign sign;

  private final wvlet.airframe.sql.model.Expression$IntervalField startField;

  private final scala.Option end;

  public static wvlet.airframe.sql.model.Expression$IntervalLiteral apply(java.lang.String, wvlet.airframe.sql.model.Expression$Sign, wvlet.airframe.sql.model.Expression$IntervalField, scala.Option<wvlet.airframe.sql.model.Expression$IntervalField>);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/Expression$IntervalLiteral$.MODULE$:Lwvlet/airframe/sql/model/Expression$IntervalLiteral$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #46                 // Method wvlet/airframe/sql/model/Expression$IntervalLiteral$.apply:(Ljava/lang/String;Lwvlet/airframe/sql/model/Expression$Sign;Lwvlet/airframe/sql/model/Expression$IntervalField;Lscala/Option;)Lwvlet/airframe/sql/model/Expression$IntervalLiteral;
      10: areturn

  public static wvlet.airframe.sql.model.Expression$IntervalLiteral fromProduct(scala.Product);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/Expression$IntervalLiteral$.MODULE$:Lwvlet/airframe/sql/model/Expression$IntervalLiteral$;
       3: aload_0
       4: invokevirtual #50                 // Method wvlet/airframe/sql/model/Expression$IntervalLiteral$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/Expression$IntervalLiteral;
       7: areturn

  public static wvlet.airframe.sql.model.Expression$IntervalLiteral unapply(wvlet.airframe.sql.model.Expression$IntervalLiteral);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/Expression$IntervalLiteral$.MODULE$:Lwvlet/airframe/sql/model/Expression$IntervalLiteral$;
       3: aload_0
       4: invokevirtual #54                 // Method wvlet/airframe/sql/model/Expression$IntervalLiteral$.unapply:(Lwvlet/airframe/sql/model/Expression$IntervalLiteral;)Lwvlet/airframe/sql/model/Expression$IntervalLiteral;
       7: areturn

  public wvlet.airframe.sql.model.Expression$IntervalLiteral(java.lang.String, wvlet.airframe.sql.model.Expression$Sign, wvlet.airframe.sql.model.Expression$IntervalField, scala.Option<wvlet.airframe.sql.model.Expression$IntervalField>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field value:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #61                 // Field sign:Lwvlet/airframe/sql/model/Expression$Sign;
      10: aload_0
      11: aload_3
      12: putfield      #63                 // Field startField:Lwvlet/airframe/sql/model/Expression$IntervalField;
      15: aload_0
      16: aload         4
      18: putfield      #65                 // Field end:Lscala/Option;
      21: aload_0
      22: invokespecial #68                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #72                 // InterfaceMethod wvlet/airframe/sql/model/Expression.$init$:(Lwvlet/airframe/sql/model/Expression;)V
      29: return

  private static {};
    Code:
       0: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/Expression$IntervalLiteral
       5: ldc           #81                 // String 0bitmap$59
       7: invokevirtual #87                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #91                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #93                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #93                 // Field OFFSET$0:J
       7: invokevirtual #111                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #115                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #116                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #119                // Field resolved$lzy59:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #93                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #123                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #127                // InterfaceMethod wvlet/airframe/sql/model/Expression.resolved$:(Lwvlet/airframe/sql/model/Expression;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #119                // Field resolved$lzy59:Z
      67: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #93                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #131                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #93                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #131                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #80                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #93                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #135                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public wvlet.airframe.sql.model.Expression transformExpression(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod wvlet/airframe/sql/model/Expression.transformExpression$:(Lwvlet/airframe/sql/model/Expression;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/Expression;
       5: areturn

  public scala.collection.immutable.List collectSubExpressions();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod wvlet/airframe/sql/model/Expression.collectSubExpressions$:(Lwvlet/airframe/sql/model/Expression;)Lscala/collection/immutable/List;
       4: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // InterfaceMethod wvlet/airframe/sql/model/Expression.traverseExpressions$:(Lwvlet/airframe/sql/model/Expression;Lscala/PartialFunction;)V
       5: return

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #162                // InterfaceMethod wvlet/airframe/sql/model/Expression.collectExpressions$:(Lwvlet/airframe/sql/model/Expression;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod wvlet/airframe/sql/model/Expression.resolvedChildren$:(Lwvlet/airframe/sql/model/Expression;)Z
       4: ireturn

  public boolean resolvedInputs();
    Code:
       0: aload_0
       1: invokestatic  #170                // InterfaceMethod wvlet/airframe/sql/model/Expression.resolvedInputs$:(Lwvlet/airframe/sql/model/Expression;)Z
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #177                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #181                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     166
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/Expression$IntervalLiteral
      11: ifeq          159
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/Expression$IntervalLiteral
      18: astore_3
      19: aload_0
      20: invokevirtual #187                // Method value:()Ljava/lang/String;
      23: aload_3
      24: invokevirtual #187                // Method value:()Ljava/lang/String;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          155
      42: aload         4
      44: invokevirtual #189                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          155
      50: aload_0
      51: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
      54: aload_3
      55: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          155
      73: aload         5
      75: invokevirtual #189                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          155
      81: aload_0
      82: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      85: aload_3
      86: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          155
     104: aload         6
     106: invokevirtual #189                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          155
     112: aload_0
     113: invokevirtual #198                // Method end:()Lscala/Option;
     116: aload_3
     117: invokevirtual #198                // Method end:()Lscala/Option;
     120: astore        7
     122: dup
     123: ifnonnull     135
     126: pop
     127: aload         7
     129: ifnull        143
     132: goto          155
     135: aload         7
     137: invokevirtual #189                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          155
     143: aload_3
     144: aload_0
     145: invokevirtual #201                // Method canEqual:(Ljava/lang/Object;)Z
     148: ifeq          155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: goto          163
     159: iconst_0
     160: goto          163
     163: ifeq          170
     166: iconst_1
     167: goto          171
     170: iconst_0
     171: ireturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/Expression$IntervalLiteral
       4: ireturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #210                // String IntervalLiteral
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 42
                     3: 47
               default: 52
          }
      32: aload_0
      33: invokevirtual #216                // Method _1:()Ljava/lang/String;
      36: areturn
      37: aload_0
      38: invokevirtual #219                // Method _2:()Lwvlet/airframe/sql/model/Expression$Sign;
      41: areturn
      42: aload_0
      43: invokevirtual #222                // Method _3:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      46: areturn
      47: aload_0
      48: invokevirtual #225                // Method _4:()Lscala/Option;
      51: areturn
      52: new           #227                // class java/lang/IndexOutOfBoundsException
      55: dup
      56: iload_1
      57: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      60: invokevirtual #238                // Method java/lang/Integer.toString:()Ljava/lang/String;
      63: invokespecial #241                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      66: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 35
                     2: 38
                     3: 41
               default: 44
          }
      32: ldc           #245                // String value
      34: areturn
      35: ldc           #246                // String sign
      37: areturn
      38: ldc           #247                // String startField
      40: areturn
      41: ldc           #248                // String end
      43: areturn
      44: new           #227                // class java/lang/IndexOutOfBoundsException
      47: dup
      48: iload_1
      49: invokestatic  #233                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      52: invokevirtual #238                // Method java/lang/Integer.toString:()Ljava/lang/String;
      55: invokespecial #241                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      58: athrow

  public java.lang.String value();
    Code:
       0: aload_0
       1: getfield      #59                 // Field value:Ljava/lang/String;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Sign sign();
    Code:
       0: aload_0
       1: getfield      #61                 // Field sign:Lwvlet/airframe/sql/model/Expression$Sign;
       4: areturn

  public wvlet.airframe.sql.model.Expression$IntervalField startField();
    Code:
       0: aload_0
       1: getfield      #63                 // Field startField:Lwvlet/airframe/sql/model/Expression$IntervalField;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression$IntervalField> end();
    Code:
       0: aload_0
       1: getfield      #65                 // Field end:Lscala/Option;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression> children();
    Code:
       0: getstatic     #257                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #261                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       6: getstatic     #177                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       9: iconst_1
      10: anewarray     #15                 // class wvlet/airframe/sql/model/Expression$IntervalField
      13: dup
      14: iconst_0
      15: aload_0
      16: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      19: aastore
      20: invokevirtual #265                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      23: invokevirtual #270                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
      26: getstatic     #275                // Field scala/Option$.MODULE$:Lscala/Option$;
      29: aload_0
      30: invokevirtual #198                // Method end:()Lscala/Option;
      33: invokevirtual #279                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
      36: invokeinterface #284,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
      41: invokeinterface #290,  2          // InterfaceMethod scala/collection/SeqOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      46: checkcast     #292                // class scala/collection/immutable/Seq
      49: areturn

  public java.lang.String stringValue();
    Code:
       0: new           #295                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #296                // int 4
       7: invokespecial #299                // Method java/lang/StringBuilder."<init>":(I)V
      10: aload_0
      11: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
      14: invokevirtual #302                // Method wvlet/airframe/sql/model/Expression$Sign.symbol:()Ljava/lang/String;
      17: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc_w         #308                // String  \'
      23: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #187                // Method value:()Ljava/lang/String;
      30: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc_w         #310                // String \'
      36: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      43: invokevirtual #313                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public java.lang.String sqlExpr();
    Code:
       0: new           #295                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #316                // int 13
       7: invokespecial #299                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #318                // String INTERVAL
      13: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
      20: invokevirtual #302                // Method wvlet/airframe/sql/model/Expression$Sign.symbol:()Ljava/lang/String;
      23: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc_w         #308                // String  \'
      29: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #187                // Method value:()Ljava/lang/String;
      36: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc_w         #310                // String \'
      42: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      49: invokevirtual #313                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  public java.lang.String toString();
    Code:
       0: new           #295                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #319                // int 22
       7: invokespecial #299                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #321                // String Literal(INTERVAL
      13: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
      20: invokevirtual #302                // Method wvlet/airframe/sql/model/Expression$Sign.symbol:()Ljava/lang/String;
      23: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc_w         #308                // String  \'
      29: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #187                // Method value:()Ljava/lang/String;
      36: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc_w         #310                // String \'
      42: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
      49: invokevirtual #313                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc_w         #323                // String )
      55: invokevirtual #306                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #314                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public wvlet.airframe.sql.model.Expression$IntervalLiteral copy(java.lang.String, wvlet.airframe.sql.model.Expression$Sign, wvlet.airframe.sql.model.Expression$IntervalField, scala.Option<wvlet.airframe.sql.model.Expression$IntervalField>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/Expression$IntervalLiteral
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #326                // Method "<init>":(Ljava/lang/String;Lwvlet/airframe/sql/model/Expression$Sign;Lwvlet/airframe/sql/model/Expression$IntervalField;Lscala/Option;)V
      12: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #187                // Method value:()Ljava/lang/String;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Sign copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
       4: areturn

  public wvlet.airframe.sql.model.Expression$IntervalField copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression$IntervalField> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method end:()Lscala/Option;
       4: areturn

  public java.lang.String _1();
    Code:
       0: aload_0
       1: invokevirtual #187                // Method value:()Ljava/lang/String;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Sign _2();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method sign:()Lwvlet/airframe/sql/model/Expression$Sign;
       4: areturn

  public wvlet.airframe.sql.model.Expression$IntervalField _3();
    Code:
       0: aload_0
       1: invokevirtual #195                // Method startField:()Lwvlet/airframe/sql/model/Expression$IntervalField;
       4: areturn

  public scala.Option<wvlet.airframe.sql.model.Expression$IntervalField> _4();
    Code:
       0: aload_0
       1: invokevirtual #198                // Method end:()Lscala/Option;
       4: areturn
}
