Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$Join implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.LogicalPlan$Relation,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy16;

  public long 0bitmap$16;

  private final wvlet.airframe.sql.model.LogicalPlan$JoinType joinType;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation left;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation right;

  private final wvlet.airframe.sql.model.Expression$JoinCriteria cond;

  public static wvlet.airframe.sql.model.LogicalPlan$Join apply(wvlet.airframe.sql.model.LogicalPlan$JoinType, wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.Expression$JoinCriteria);
    Code:
       0: getstatic     #49                 // Field wvlet/airframe/sql/model/LogicalPlan$Join$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Join$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #51                 // Method wvlet/airframe/sql/model/LogicalPlan$Join$.apply:(Lwvlet/airframe/sql/model/LogicalPlan$JoinType;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/Expression$JoinCriteria;)Lwvlet/airframe/sql/model/LogicalPlan$Join;
      10: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$Join fromProduct(scala.Product);
    Code:
       0: getstatic     #49                 // Field wvlet/airframe/sql/model/LogicalPlan$Join$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Join$;
       3: aload_0
       4: invokevirtual #55                 // Method wvlet/airframe/sql/model/LogicalPlan$Join$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$Join;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$Join unapply(wvlet.airframe.sql.model.LogicalPlan$Join);
    Code:
       0: getstatic     #49                 // Field wvlet/airframe/sql/model/LogicalPlan$Join$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Join$;
       3: aload_0
       4: invokevirtual #59                 // Method wvlet/airframe/sql/model/LogicalPlan$Join$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$Join;)Lwvlet/airframe/sql/model/LogicalPlan$Join;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Join(wvlet.airframe.sql.model.LogicalPlan$JoinType, wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.Expression$JoinCriteria);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field joinType:Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
       5: aload_0
       6: aload_2
       7: putfield      #65                 // Field left:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      10: aload_0
      11: aload_3
      12: putfield      #67                 // Field right:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      15: aload_0
      16: aload         4
      18: putfield      #69                 // Field cond:Lwvlet/airframe/sql/model/Expression$JoinCriteria;
      21: aload_0
      22: invokespecial #72                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #76                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      29: return

  private static {};
    Code:
       0: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$Join
       5: ldc           #85                 // String 0bitmap$16
       7: invokevirtual #91                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #95                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #97                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #97                 // Field OFFSET$0:J
       7: invokevirtual #121                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #125                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #126                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #129                // Field resolved$lzy16:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #97                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #133                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #137                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #129                // Field resolved$lzy16:Z
      67: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #97                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #141                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #97                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #141                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #84                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #97                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #145                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #157                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #164                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #179                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #197                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #207                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #211                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #218                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #222                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     166
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$Join
      11: ifeq          159
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$Join
      18: astore_3
      19: aload_0
      20: invokevirtual #228                // Method joinType:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
      23: aload_3
      24: invokevirtual #228                // Method joinType:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          155
      42: aload         4
      44: invokevirtual #230                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          155
      50: aload_0
      51: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      54: aload_3
      55: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          155
      73: aload         5
      75: invokevirtual #230                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          155
      81: aload_0
      82: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      85: aload_3
      86: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          155
     104: aload         6
     106: invokevirtual #230                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          155
     112: aload_0
     113: invokevirtual #238                // Method cond:()Lwvlet/airframe/sql/model/Expression$JoinCriteria;
     116: aload_3
     117: invokevirtual #238                // Method cond:()Lwvlet/airframe/sql/model/Expression$JoinCriteria;
     120: astore        7
     122: dup
     123: ifnonnull     135
     126: pop
     127: aload         7
     129: ifnull        143
     132: goto          155
     135: aload         7
     137: invokevirtual #230                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          155
     143: aload_3
     144: aload_0
     145: invokevirtual #241                // Method canEqual:(Ljava/lang/Object;)Z
     148: ifeq          155
     151: iconst_1
     152: goto          156
     155: iconst_0
     156: goto          163
     159: iconst_0
     160: goto          163
     163: ifeq          170
     166: iconst_1
     167: goto          171
     170: iconst_0
     171: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #218                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #247                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$Join
       4: ireturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #251                // String Join
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 42
                     3: 47
               default: 52
          }
      32: aload_0
      33: invokevirtual #257                // Method _1:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
      36: areturn
      37: aload_0
      38: invokevirtual #260                // Method _2:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      41: areturn
      42: aload_0
      43: invokevirtual #263                // Method _3:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      46: areturn
      47: aload_0
      48: invokevirtual #266                // Method _4:()Lwvlet/airframe/sql/model/Expression$JoinCriteria;
      51: areturn
      52: new           #268                // class java/lang/IndexOutOfBoundsException
      55: dup
      56: iload_1
      57: invokestatic  #274                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      60: invokevirtual #278                // Method java/lang/Integer.toString:()Ljava/lang/String;
      63: invokespecial #281                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      66: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 36
                     2: 40
                     3: 44
               default: 48
          }
      32: ldc_w         #285                // String joinType
      35: areturn
      36: ldc_w         #286                // String left
      39: areturn
      40: ldc_w         #287                // String right
      43: areturn
      44: ldc_w         #288                // String cond
      47: areturn
      48: new           #268                // class java/lang/IndexOutOfBoundsException
      51: dup
      52: iload_1
      53: invokestatic  #274                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: invokevirtual #278                // Method java/lang/Integer.toString:()Ljava/lang/String;
      59: invokespecial #281                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      62: athrow

  public wvlet.airframe.sql.model.LogicalPlan$JoinType joinType();
    Code:
       0: aload_0
       1: getfield      #63                 // Field joinType:Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation left();
    Code:
       0: aload_0
       1: getfield      #65                 // Field left:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation right();
    Code:
       0: aload_0
       1: getfield      #67                 // Field right:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$JoinCriteria cond();
    Code:
       0: aload_0
       1: getfield      #69                 // Field cond:Lwvlet/airframe/sql/model/Expression$JoinCriteria;
       4: areturn

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokevirtual #228                // Method joinType:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
       4: invokevirtual #290                // Method wvlet/airframe/sql/model/LogicalPlan$JoinType.toString:()Ljava/lang/String;
       7: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan> children();
    Code:
       0: getstatic     #297                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #301                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       6: getstatic     #218                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       9: iconst_2
      10: anewarray     #12                 // class wvlet/airframe/sql/model/LogicalPlan$Relation
      13: dup
      14: iconst_0
      15: aload_0
      16: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      19: aastore
      20: dup
      21: iconst_1
      22: aload_0
      23: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      26: aastore
      27: invokevirtual #305                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      30: invokevirtual #310                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
      33: checkcast     #312                // class scala/collection/immutable/Seq
      36: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: new           #317                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #318                // int 3
       7: invokespecial #321                // Method java/lang/StringBuilder."<init>":(I)V
      10: aload_0
      11: invokevirtual #228                // Method joinType:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
      14: invokevirtual #324                // Method wvlet/airframe/sql/model/LogicalPlan$JoinType.symbol:()Ljava/lang/String;
      17: invokevirtual #328                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc_w         #330                // String (
      23: invokevirtual #328                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      30: aload_1
      31: invokeinterface #332,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      36: invokevirtual #328                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc_w         #334                // String ,
      42: invokevirtual #328                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      49: aload_1
      50: invokeinterface #332,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      55: invokevirtual #328                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc_w         #336                // String )
      61: invokevirtual #328                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #337                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #343,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
       9: aload_0
      10: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      13: invokeinterface #343,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
      18: invokeinterface #347,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      23: checkcast     #312                // class scala/collection/immutable/Seq
      26: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #238                // Method cond:()Lwvlet/airframe/sql/model/Expression$JoinCriteria;
       4: astore_1
       5: aload_1
       6: instanceof    #22                 // class wvlet/airframe/sql/model/Expression$JoinOnEq
       9: ifeq          42
      12: aload_1
      13: checkcast     #22                 // class wvlet/airframe/sql/model/Expression$JoinOnEq
      16: astore_2
      17: aload_2
      18: invokevirtual #350                // Method wvlet/airframe/sql/model/Expression$JoinOnEq.duplicateKeys:()Lscala/collection/immutable/Seq;
      21: astore_3
      22: aload_0
      23: invokevirtual #352                // Method inputAttributes:()Lscala/collection/immutable/Seq;
      26: aload_0
      27: aload_3
      28: invokedynamic #373,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/model/LogicalPlan$Join;Lscala/collection/immutable/Seq;)Lscala/Function1;
      33: invokeinterface #377,  2          // InterfaceMethod scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
      38: checkcast     #312                // class scala/collection/immutable/Seq
      41: areturn
      42: aload_0
      43: invokevirtual #352                // Method inputAttributes:()Lscala/collection/immutable/Seq;
      46: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Join withCond(wvlet.airframe.sql.model.Expression$JoinCriteria);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #385                // Method copy$default$1:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
       5: aload_0
       6: invokevirtual #388                // Method copy$default$2:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       9: aload_0
      10: invokevirtual #391                // Method copy$default$3:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      13: aload_1
      14: invokevirtual #394                // Method copy:(Lwvlet/airframe/sql/model/LogicalPlan$JoinType;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/Expression$JoinCriteria;)Lwvlet/airframe/sql/model/LogicalPlan$Join;
      17: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Join copy(wvlet.airframe.sql.model.LogicalPlan$JoinType, wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.LogicalPlan$Relation, wvlet.airframe.sql.model.Expression$JoinCriteria);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$Join
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #396                // Method "<init>":(Lwvlet/airframe/sql/model/LogicalPlan$JoinType;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lwvlet/airframe/sql/model/Expression$JoinCriteria;)V
      12: areturn

  public wvlet.airframe.sql.model.LogicalPlan$JoinType copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #228                // Method joinType:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$JoinCriteria copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #238                // Method cond:()Lwvlet/airframe/sql/model/Expression$JoinCriteria;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$JoinType _1();
    Code:
       0: aload_0
       1: invokevirtual #228                // Method joinType:()Lwvlet/airframe/sql/model/LogicalPlan$JoinType;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _2();
    Code:
       0: aload_0
       1: invokevirtual #233                // Method left:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _3();
    Code:
       0: aload_0
       1: invokevirtual #235                // Method right:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$JoinCriteria _4();
    Code:
       0: aload_0
       1: invokevirtual #238                // Method cond:()Lwvlet/airframe/sql/model/Expression$JoinCriteria;
       4: areturn

  private final boolean outputAttributes$$anonfun$3(scala.collection.immutable.Seq, wvlet.airframe.sql.model.Attribute);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #402,  2          // InterfaceMethod scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #415,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
