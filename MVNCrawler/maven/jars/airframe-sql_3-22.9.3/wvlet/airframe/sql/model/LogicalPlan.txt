Compiled from "LogicalPlan.scala"
public interface wvlet.airframe.sql.model.LogicalPlan extends wvlet.airframe.sql.model.TreeNode<wvlet.airframe.sql.model.LogicalPlan>, scala.Product, wvlet.airframe.sql.model.SQLSig {
  public static void $init$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: return

  public static java.lang.String modelName$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokespecial #276                // InterfaceMethod modelName:()Ljava/lang/String;
       4: areturn

  public default java.lang.String modelName();
    Code:
       0: aload_0
       1: invokeinterface #280,  1          // InterfaceMethod getClass:()Ljava/lang/Class;
       6: invokevirtual #285                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: ldc_w         #287                // String $
      14: invokevirtual #293                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      17: ifeq          32
      20: aload_1
      21: iconst_0
      22: aload_1
      23: invokevirtual #297                // Method java/lang/String.length:()I
      26: iconst_1
      27: isub
      28: invokevirtual #301                // Method java/lang/String.substring:(II)Ljava/lang/String;
      31: areturn
      32: aload_1
      33: areturn

  public static java.lang.String pp$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokespecial #308                // InterfaceMethod pp:()Ljava/lang/String;
       4: areturn

  public default java.lang.String pp();
    Code:
       0: getstatic     #314                // Field wvlet/airframe/sql/model/LogicalPlanPrinter$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlanPrinter$;
       3: aload_0
       4: invokevirtual #317                // Method wvlet/airframe/sql/model/LogicalPlanPrinter$.print:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       7: areturn

  public abstract scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan> children();

  public static scala.collection.immutable.Seq expressions$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokespecial #325                // InterfaceMethod expressions:()Lscala/collection/immutable/Seq;
       4: areturn

  public default scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression> expressions();
    Code:
       0: aload_0
       1: invokeinterface #330,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
       6: invokedynamic #351,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      11: invokeinterface #357,  2          // InterfaceMethod scala/collection/Iterator.flatMap:(Lscala/Function1;)Lscala/collection/Iterator;
      16: invokeinterface #360,  1          // InterfaceMethod scala/collection/Iterator.toSeq:()Lscala/collection/immutable/Seq;
      21: areturn

  public static wvlet.airframe.sql.model.LogicalPlan mapChildren$(wvlet.airframe.sql.model.LogicalPlan, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #367                // InterfaceMethod mapChildren:(Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public default wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1<wvlet.airframe.sql.model.LogicalPlan, wvlet.airframe.sql.model.LogicalPlan>);
    Code:
       0: iconst_0
       1: invokestatic  #375                // Method scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
       4: astore_2
       5: aload_0
       6: invokeinterface #330,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
      11: aload_1
      12: aload_2
      13: invokedynamic #383,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Lscala/runtime/BooleanRef;)Lscala/Function1;
      18: invokeinterface #386,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      23: invokeinterface #390,  1          // InterfaceMethod scala/collection/Iterator.toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
      28: astore_3
      29: aload_2
      30: getfield      #394                // Field scala/runtime/BooleanRef.elem:Z
      33: ifeq          44
      36: aload_0
      37: aload_3
      38: invokeinterface #398,  2          // InterfaceMethod copyInstance:(Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
      43: areturn
      44: aload_0
      45: areturn

  public static void traverse$(wvlet.airframe.sql.model.LogicalPlan, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #410                // InterfaceMethod traverse:(Lscala/PartialFunction;)V
       5: return

  public default <U> void traverse(scala.PartialFunction<wvlet.airframe.sql.model.LogicalPlan, U>);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #416                // InterfaceMethod recursiveTraverse$1:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  public static wvlet.airframe.sql.model.LogicalPlan transform$(wvlet.airframe.sql.model.LogicalPlan, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #423                // InterfaceMethod transform:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public default wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction<wvlet.airframe.sql.model.LogicalPlan, wvlet.airframe.sql.model.LogicalPlan>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #431,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       7: invokeinterface #437,  3          // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      12: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      15: astore_2
      16: aload_2
      17: aload_0
      18: if_acmpne     34
      21: aload_0
      22: aload_1
      23: invokedynamic #445,  0            // InvokeDynamic #3:apply:(Lscala/PartialFunction;)Lscala/Function1;
      28: invokeinterface #367,  2          // InterfaceMethod mapChildren:(Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
      33: areturn
      34: aload_2
      35: aload_1
      36: invokedynamic #450,  0            // InvokeDynamic #4:apply:(Lscala/PartialFunction;)Lscala/Function1;
      41: invokeinterface #367,  2          // InterfaceMethod mapChildren:(Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
      46: areturn

  public static wvlet.airframe.sql.model.LogicalPlan transformExpressions$(wvlet.airframe.sql.model.LogicalPlan, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #455                // InterfaceMethod transformExpressions:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public default wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction<wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression>);
    Code:
       0: aload_0
       1: invokeinterface #330,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
       6: aload_1
       7: invokedynamic #462,  0            // InvokeDynamic #5:apply:(Lscala/PartialFunction;)Lscala/Function1;
      12: invokeinterface #386,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      17: invokeinterface #390,  1          // InterfaceMethod scala/collection/Iterator.toIndexedSeq:()Lscala/collection/immutable/IndexedSeq;
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokeinterface #398,  2          // InterfaceMethod copyInstance:(Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
      30: areturn

  public static wvlet.airframe.sql.model.LogicalPlan copyInstance$(wvlet.airframe.sql.model.LogicalPlan, scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #398                // InterfaceMethod copyInstance:(Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public default wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq<java.lang.Object>);
    Code:
       0: aload_0
       1: invokeinterface #280,  1          // InterfaceMethod getClass:()Ljava/lang/Class;
       6: invokevirtual #470                // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
       9: iconst_0
      10: aaload
      11: astore_2
      12: aload_2
      13: getstatic     #475                // Field scala/runtime/Arrays$.MODULE$:Lscala/runtime/Arrays$;
      16: aload_1
      17: ldc           #5                  // class java/lang/Object
      19: invokevirtual #479                // Method scala/runtime/Arrays$.seqToArray:(Lscala/collection/immutable/Seq;Ljava/lang/Class;)Ljava/lang/Object;
      22: checkcast     #481                // class "[Ljava/lang/Object;"
      25: invokevirtual #487                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      28: astore_3
      29: aload_3
      30: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      33: areturn

  public static scala.collection.immutable.List inputExpressions$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokespecial #497                // InterfaceMethod inputExpressions:()Lscala/collection/immutable/List;
       4: areturn

  public default scala.collection.immutable.List<wvlet.airframe.sql.model.Expression> inputExpressions();
    Code:
       0: aload_0
       1: invokeinterface #330,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
       6: invokedynamic #503,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      11: invokeinterface #357,  2          // InterfaceMethod scala/collection/Iterator.flatMap:(Lscala/Function1;)Lscala/collection/Iterator;
      16: invokeinterface #506,  1          // InterfaceMethod scala/collection/Iterator.toList:()Lscala/collection/immutable/List;
      21: areturn

  public static scala.collection.immutable.List collectExpressions$(wvlet.airframe.sql.model.LogicalPlan, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #513                // InterfaceMethod collectExpressions:(Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public default scala.collection.immutable.List<wvlet.airframe.sql.model.Expression> collectExpressions(scala.PartialFunction<wvlet.airframe.sql.model.Expression, java.lang.Object>);
    Code:
       0: getstatic     #519                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #523                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       6: invokevirtual #529                // Method scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
       9: astore_2
      10: aload_0
      11: new           #14                 // class wvlet/airframe/sql/model/LogicalPlan$$anon$1
      14: dup
      15: aload_1
      16: aload_2
      17: invokespecial #533                // Method wvlet/airframe/sql/model/LogicalPlan$$anon$1."<init>":(Lscala/PartialFunction;Lscala/collection/mutable/Builder;)V
      20: invokeinterface #536,  2          // InterfaceMethod traverseExpressions:(Lscala/PartialFunction;)V
      25: aload_2
      26: invokeinterface #542,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
      31: checkcast     #544                // class scala/collection/immutable/List
      34: areturn

  public static void traverseExpressions$(wvlet.airframe.sql.model.LogicalPlan, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #536                // InterfaceMethod traverseExpressions:(Lscala/PartialFunction;)V
       5: return

  public default <U> void traverseExpressions(scala.PartialFunction<wvlet.airframe.sql.model.Expression, U>);
    Code:
       0: aload_0
       1: invokeinterface #330,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
       6: aload_1
       7: invokedynamic #558,  0            // InvokeDynamic #7:applyVoid:(Lscala/PartialFunction;)Lscala/runtime/function/JProcedure1;
      12: invokeinterface #562,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      17: return

  public abstract scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();

  public abstract scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();

  public static boolean resolved$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokespecial #571                // InterfaceMethod resolved:()Z
       4: ireturn

  public default boolean resolved();
    Code:
       0: aload_0
       1: invokeinterface #325,  1          // InterfaceMethod expressions:()Lscala/collection/immutable/Seq;
       6: invokedynamic #578,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
      11: invokeinterface #584,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
      16: ifeq          32
      19: aload_0
      20: invokeinterface #587,  1          // InterfaceMethod resolvedChildren:()Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static boolean resolvedChildren$(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokespecial #587                // InterfaceMethod resolvedChildren:()Z
       4: ireturn

  public default boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokeinterface #590,  1          // InterfaceMethod children:()Lscala/collection/immutable/Seq;
       6: invokedynamic #596,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
      11: invokeinterface #584,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
      16: ireturn

  private static scala.collection.IterableOnce collectExpression$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #602                // InterfaceMethod collectExpression$1:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
       4: areturn

  private static scala.collection.immutable.Seq collectExpression$1(java.lang.Object);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #604                // class wvlet/airframe/sql/model/Expression
       6: ifeq          25
       9: aload_1
      10: checkcast     #604                // class wvlet/airframe/sql/model/Expression
      13: astore_2
      14: getstatic     #519                // Field scala/package$.MODULE$:Lscala/package$;
      17: invokevirtual #608                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
      20: aload_2
      21: invokevirtual #614                // Method scala/collection/immutable/Nil$.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      24: areturn
      25: aload_1
      26: instanceof    #616                // class scala/Some
      29: ifeq          45
      32: aload_1
      33: checkcast     #616                // class scala/Some
      36: invokevirtual #619                // Method scala/Some.value:()Ljava/lang/Object;
      39: astore_3
      40: aload_3
      41: astore_0
      42: goto          0
      45: aload_1
      46: instanceof    #621                // class scala/collection/Iterable
      49: ifeq          79
      52: aload_1
      53: checkcast     #621                // class scala/collection/Iterable
      56: astore        4
      58: aload         4
      60: invokedynamic #625,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
      65: invokeinterface #628,  2          // InterfaceMethod scala/collection/Iterable.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      70: checkcast     #630                // class scala/collection/IterableOnceOps
      73: invokeinterface #631,  1          // InterfaceMethod scala/collection/IterableOnceOps.toSeq:()Lscala/collection/immutable/Seq;
      78: areturn
      79: aload_1
      80: astore        5
      82: getstatic     #519                // Field scala/package$.MODULE$:Lscala/package$;
      85: invokevirtual #608                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
      88: areturn

  private static scala.collection.IterableOnce expressions$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #602                // InterfaceMethod collectExpression$1:(Ljava/lang/Object;)Lscala/collection/immutable/Seq;
       4: areturn

  private static java.lang.Object recursiveTransform$1$$anonfun$1(scala.Function1, scala.runtime.BooleanRef, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #643                // InterfaceMethod recursiveTransform$1:(Lscala/Function1;Lscala/runtime/BooleanRef;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  private static java.lang.Object recursiveTransform$1(scala.Function1, scala.runtime.BooleanRef, java.lang.Object);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #604                // class wvlet/airframe/sql/model/Expression
       6: ifeq          18
       9: aload_3
      10: checkcast     #604                // class wvlet/airframe/sql/model/Expression
      13: astore        4
      15: aload         4
      17: areturn
      18: aload_3
      19: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan
      22: ifeq          63
      25: aload_3
      26: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      29: astore        5
      31: aload_0
      32: aload         5
      34: invokeinterface #649,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      42: astore        6
      44: aload         6
      46: aload         5
      48: if_acmpeq     60
      51: iconst_1
      52: istore        7
      54: aload_1
      55: iload         7
      57: putfield      #394                // Field scala/runtime/BooleanRef.elem:Z
      60: aload         6
      62: areturn
      63: aload_3
      64: instanceof    #616                // class scala/Some
      67: ifeq          93
      70: aload_3
      71: checkcast     #616                // class scala/Some
      74: invokevirtual #619                // Method scala/Some.value:()Ljava/lang/Object;
      77: astore        8
      79: getstatic     #654                // Field scala/Some$.MODULE$:Lscala/Some$;
      82: aload_0
      83: aload_1
      84: aload         8
      86: invokestatic  #643                // InterfaceMethod recursiveTransform$1:(Lscala/Function1;Lscala/runtime/BooleanRef;Ljava/lang/Object;)Ljava/lang/Object;
      89: invokevirtual #657                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      92: areturn
      93: aload_3
      94: instanceof    #580                // class scala/collection/immutable/Seq
      97: ifeq          121
     100: aload_3
     101: checkcast     #580                // class scala/collection/immutable/Seq
     104: astore        9
     106: aload         9
     108: aload_0
     109: aload_1
     110: invokedynamic #661,  0            // InvokeDynamic #11:apply:(Lscala/Function1;Lscala/runtime/BooleanRef;)Lscala/Function1;
     115: invokeinterface #663,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
     120: areturn
     121: aload_3
     122: instanceof    #5                  // class java/lang/Object
     125: ifeq          134
     128: aload_3
     129: astore        10
     131: aload         10
     133: areturn
     134: aload_3
     135: ifnonnull     140
     138: aconst_null
     139: areturn
     140: new           #665                // class scala/MatchError
     143: dup
     144: aload_3
     145: invokespecial #667                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     148: athrow

  private static java.lang.Object $anonfun$1(scala.Function1, scala.runtime.BooleanRef, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #643                // InterfaceMethod recursiveTransform$1:(Lscala/Function1;Lscala/runtime/BooleanRef;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  private static void recursiveTraverse$1$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod recursiveTraverse$1:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  private static void recursiveTraverse$1$$anonfun$2(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #416                // InterfaceMethod recursiveTraverse$1:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  private static void recursiveTraverse$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #604                // class wvlet/airframe/sql/model/Expression
       6: ifeq          15
       9: aload_2
      10: checkcast     #604                // class wvlet/airframe/sql/model/Expression
      13: astore_3
      14: return
      15: aload_2
      16: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan
      19: ifeq          67
      22: aload_2
      23: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      26: astore        4
      28: aload_0
      29: aload         4
      31: invokeinterface #679,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
      36: ifeq          48
      39: aload_0
      40: aload         4
      42: invokeinterface #680,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload         4
      50: invokeinterface #330,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
      55: aload_0
      56: invokedynamic #684,  0            // InvokeDynamic #12:applyVoid:(Lscala/PartialFunction;)Lscala/runtime/function/JProcedure1;
      61: invokeinterface #562,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      66: return
      67: aload_2
      68: instanceof    #616                // class scala/Some
      71: ifeq          100
      74: aload_2
      75: checkcast     #616                // class scala/Some
      78: invokevirtual #619                // Method scala/Some.value:()Ljava/lang/Object;
      81: astore        5
      83: getstatic     #654                // Field scala/Some$.MODULE$:Lscala/Some$;
      86: aload_0
      87: aload         5
      89: invokestatic  #416                // InterfaceMethod recursiveTraverse$1:(Lscala/PartialFunction;Ljava/lang/Object;)V
      92: getstatic     #690                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      95: invokevirtual #657                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      98: pop
      99: return
     100: aload_2
     101: instanceof    #580                // class scala/collection/immutable/Seq
     104: ifeq          128
     107: aload_2
     108: checkcast     #580                // class scala/collection/immutable/Seq
     111: astore        6
     113: aload         6
     115: aload_0
     116: invokedynamic #694,  0            // InvokeDynamic #13:applyVoid:(Lscala/PartialFunction;)Lscala/runtime/function/JProcedure1;
     121: invokeinterface #663,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
     126: pop
     127: return
     128: aload_2
     129: instanceof    #5                  // class java/lang/Object
     132: ifeq          139
     135: aload_2
     136: astore        7
     138: return
     139: aload_2
     140: ifnonnull     144
     143: return
     144: new           #665                // class scala/MatchError
     147: dup
     148: aload_2
     149: invokespecial #667                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     152: athrow

  private static wvlet.airframe.sql.model.LogicalPlan $anonfun$2(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: getstatic     #699                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #702                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      10: areturn

  private static wvlet.airframe.sql.model.LogicalPlan transform$$anonfun$1(scala.PartialFunction, wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #423,  2          // InterfaceMethod transform:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       7: areturn

  private static wvlet.airframe.sql.model.LogicalPlan transform$$anonfun$2(scala.PartialFunction, wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #423,  2          // InterfaceMethod transform:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       7: areturn

  private static java.lang.Object recursiveTransform$2$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #711                // InterfaceMethod recursiveTransform$2:(Lscala/PartialFunction;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static java.lang.Object recursiveTransform$2(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #604                // class wvlet/airframe/sql/model/Expression
       6: ifeq          22
       9: aload_2
      10: checkcast     #604                // class wvlet/airframe/sql/model/Expression
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokeinterface #716,  2          // InterfaceMethod wvlet/airframe/sql/model/Expression.transformExpression:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/Expression;
      21: areturn
      22: aload_2
      23: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan
      26: ifeq          44
      29: aload_2
      30: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      33: astore        4
      35: aload         4
      37: aload_0
      38: invokeinterface #455,  2          // InterfaceMethod transformExpressions:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
      43: areturn
      44: aload_2
      45: instanceof    #616                // class scala/Some
      48: ifeq          73
      51: aload_2
      52: checkcast     #616                // class scala/Some
      55: invokevirtual #619                // Method scala/Some.value:()Ljava/lang/Object;
      58: astore        5
      60: getstatic     #654                // Field scala/Some$.MODULE$:Lscala/Some$;
      63: aload_0
      64: aload         5
      66: invokestatic  #711                // InterfaceMethod recursiveTransform$2:(Lscala/PartialFunction;Ljava/lang/Object;)Ljava/lang/Object;
      69: invokevirtual #657                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      72: areturn
      73: aload_2
      74: instanceof    #580                // class scala/collection/immutable/Seq
      77: ifeq          100
      80: aload_2
      81: checkcast     #580                // class scala/collection/immutable/Seq
      84: astore        6
      86: aload         6
      88: aload_0
      89: invokedynamic #720,  0            // InvokeDynamic #14:apply:(Lscala/PartialFunction;)Lscala/Function1;
      94: invokeinterface #663,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      99: areturn
     100: aload_2
     101: instanceof    #5                  // class java/lang/Object
     104: ifeq          113
     107: aload_2
     108: astore        7
     110: aload         7
     112: areturn
     113: aload_2
     114: ifnonnull     119
     117: aconst_null
     118: areturn
     119: new           #665                // class scala/MatchError
     122: dup
     123: aload_2
     124: invokespecial #667                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     127: athrow

  private static java.lang.Object $anonfun$3(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #711                // InterfaceMethod recursiveTransform$2:(Lscala/PartialFunction;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static scala.collection.IterableOnce recursiveCollect$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #725                // InterfaceMethod recursiveCollect$1:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       4: areturn

  private static scala.collection.immutable.List recursiveCollect$1(java.lang.Object);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #604                // class wvlet/airframe/sql/model/Expression
       6: ifeq          25
       9: aload_1
      10: checkcast     #604                // class wvlet/airframe/sql/model/Expression
      13: astore_2
      14: aload_2
      15: invokeinterface #728,  1          // InterfaceMethod wvlet/airframe/sql/model/Expression.collectSubExpressions:()Lscala/collection/immutable/List;
      20: aload_2
      21: invokevirtual #729                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      24: areturn
      25: aload_1
      26: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan
      29: ifeq          44
      32: aload_1
      33: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      36: astore_3
      37: aload_3
      38: invokeinterface #497,  1          // InterfaceMethod inputExpressions:()Lscala/collection/immutable/List;
      43: areturn
      44: aload_1
      45: instanceof    #616                // class scala/Some
      48: ifeq          66
      51: aload_1
      52: checkcast     #616                // class scala/Some
      55: invokevirtual #619                // Method scala/Some.value:()Ljava/lang/Object;
      58: astore        4
      60: aload         4
      62: astore_0
      63: goto          0
      66: aload_1
      67: instanceof    #580                // class scala/collection/immutable/Seq
      70: ifeq          100
      73: aload_1
      74: checkcast     #580                // class scala/collection/immutable/Seq
      77: astore        5
      79: aload         5
      81: invokedynamic #733,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
      86: invokeinterface #734,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      91: checkcast     #630                // class scala/collection/IterableOnceOps
      94: invokeinterface #735,  1          // InterfaceMethod scala/collection/IterableOnceOps.toList:()Lscala/collection/immutable/List;
      99: areturn
     100: aload_1
     101: instanceof    #5                  // class java/lang/Object
     104: ifeq          117
     107: aload_1
     108: astore        6
     110: getstatic     #519                // Field scala/package$.MODULE$:Lscala/package$;
     113: invokevirtual #608                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     116: areturn
     117: aload_1
     118: ifnonnull     128
     121: getstatic     #519                // Field scala/package$.MODULE$:Lscala/package$;
     124: invokevirtual #608                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     127: areturn
     128: new           #665                // class scala/MatchError
     131: dup
     132: aload_1
     133: invokespecial #667                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow

  private static scala.collection.IterableOnce inputExpressions$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #725                // InterfaceMethod recursiveCollect$1:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       4: areturn

  private static void recursiveTraverse$2$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #740                // InterfaceMethod recursiveTraverse$2:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  private static void recursiveTraverse$2(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #604                // class wvlet/airframe/sql/model/Expression
       6: ifeq          22
       9: aload_2
      10: checkcast     #604                // class wvlet/airframe/sql/model/Expression
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokeinterface #742,  2          // InterfaceMethod wvlet/airframe/sql/model/Expression.traverseExpressions:(Lscala/PartialFunction;)V
      21: return
      22: aload_2
      23: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan
      26: ifeq          44
      29: aload_2
      30: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan
      33: astore        4
      35: aload         4
      37: aload_0
      38: invokeinterface #536,  2          // InterfaceMethod traverseExpressions:(Lscala/PartialFunction;)V
      43: return
      44: aload_2
      45: instanceof    #616                // class scala/Some
      48: ifeq          66
      51: aload_2
      52: checkcast     #616                // class scala/Some
      55: invokevirtual #619                // Method scala/Some.value:()Ljava/lang/Object;
      58: astore        5
      60: aload         5
      62: astore_1
      63: goto          0
      66: aload_2
      67: instanceof    #580                // class scala/collection/immutable/Seq
      70: ifeq          93
      73: aload_2
      74: checkcast     #580                // class scala/collection/immutable/Seq
      77: astore        6
      79: aload         6
      81: aload_0
      82: invokedynamic #746,  0            // InvokeDynamic #16:applyVoid:(Lscala/PartialFunction;)Lscala/runtime/function/JProcedure1;
      87: invokeinterface #747,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
      92: return
      93: aload_2
      94: instanceof    #5                  // class java/lang/Object
      97: ifeq          104
     100: aload_2
     101: astore        7
     103: return
     104: aload_2
     105: ifnonnull     109
     108: return
     109: new           #665                // class scala/MatchError
     112: dup
     113: aload_2
     114: invokespecial #667                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     117: athrow

  private static void traverseExpressions$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #740                // InterfaceMethod recursiveTraverse$2:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  private static boolean resolved$$anonfun$1(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokeinterface #750,  1          // InterfaceMethod wvlet/airframe/sql/model/Expression.resolved:()Z
       6: ireturn

  private static boolean resolvedChildren$$anonfun$1(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_0
       1: invokeinterface #571,  1          // InterfaceMethod resolved:()Z
       6: ireturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #763,  0            // InvokeDynamic #17:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
