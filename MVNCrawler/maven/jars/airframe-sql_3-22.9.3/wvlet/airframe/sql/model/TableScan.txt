Compiled from "ResolvedPlan.scala"
public class wvlet.airframe.sql.model.TableScan implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.LogicalPlan$Relation,wvlet.airframe.sql.model.LeafPlan,java.io.Serializable {
  public static final long OFFSET$0;

  public long 0bitmap$1;

  private final wvlet.airframe.sql.catalog.Catalog$Table table;

  private final scala.collection.immutable.Seq columns;

  public boolean resolved$lzy1;

  public static wvlet.airframe.sql.model.TableScan apply(wvlet.airframe.sql.catalog.Catalog$Table, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.Catalog$TableColumn>);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/TableScan$.MODULE$:Lwvlet/airframe/sql/model/TableScan$;
       3: aload_0
       4: aload_1
       5: invokevirtual #46                 // Method wvlet/airframe/sql/model/TableScan$.apply:(Lwvlet/airframe/sql/catalog/Catalog$Table;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/TableScan;
       8: areturn

  public static wvlet.airframe.sql.model.TableScan fromProduct(scala.Product);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/TableScan$.MODULE$:Lwvlet/airframe/sql/model/TableScan$;
       3: aload_0
       4: invokevirtual #50                 // Method wvlet/airframe/sql/model/TableScan$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/TableScan;
       7: areturn

  public static wvlet.airframe.sql.model.TableScan unapply(wvlet.airframe.sql.model.TableScan);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/TableScan$.MODULE$:Lwvlet/airframe/sql/model/TableScan$;
       3: aload_0
       4: invokevirtual #54                 // Method wvlet/airframe/sql/model/TableScan$.unapply:(Lwvlet/airframe/sql/model/TableScan;)Lwvlet/airframe/sql/model/TableScan;
       7: areturn

  public wvlet.airframe.sql.model.TableScan(wvlet.airframe.sql.catalog.Catalog$Table, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.Catalog$TableColumn>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field table:Lwvlet/airframe/sql/catalog/Catalog$Table;
       5: aload_0
       6: aload_2
       7: putfield      #61                 // Field columns:Lscala/collection/immutable/Seq;
      10: aload_0
      11: invokespecial #64                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #68                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      18: return

  private static {};
    Code:
       0: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/TableScan
       5: ldc           #77                 // String 0bitmap$1
       7: invokevirtual #83                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #87                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #89                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #95                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #99                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #115                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #143                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #160                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #171                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #177                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #182                // InterfaceMethod wvlet/airframe/sql/model/LeafPlan.children$:(Lwvlet/airframe/sql/model/LeafPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #189                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #193                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     104
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/TableScan
      11: ifeq          97
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/TableScan
      18: astore_3
      19: aload_0
      20: invokevirtual #199                // Method table:()Lwvlet/airframe/sql/catalog/Catalog$Table;
      23: aload_3
      24: invokevirtual #199                // Method table:()Lwvlet/airframe/sql/catalog/Catalog$Table;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          93
      42: aload         4
      44: invokevirtual #201                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          93
      50: aload_0
      51: invokevirtual #203                // Method columns:()Lscala/collection/immutable/Seq;
      54: aload_3
      55: invokevirtual #203                // Method columns:()Lscala/collection/immutable/Seq;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          93
      73: aload         5
      75: invokevirtual #201                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          93
      81: aload_3
      82: aload_0
      83: invokevirtual #206                // Method canEqual:(Ljava/lang/Object;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: goto          101
      97: iconst_0
      98: goto          101
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #189                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #214                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/TableScan
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #219                // String TableScan
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: aload_0
       8: invokevirtual #225                // Method _1:()Lwvlet/airframe/sql/catalog/Catalog$Table;
      11: areturn
      12: iconst_1
      13: iload_2
      14: if_icmpne     22
      17: aload_0
      18: invokevirtual #228                // Method _2:()Lscala/collection/immutable/Seq;
      21: areturn
      22: new           #230                // class java/lang/IndexOutOfBoundsException
      25: dup
      26: iload_1
      27: invokestatic  #236                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: invokevirtual #240                // Method java/lang/Integer.toString:()Ljava/lang/String;
      33: invokespecial #243                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     10
       7: ldc           #247                // String table
       9: areturn
      10: iconst_1
      11: iload_2
      12: if_icmpne     18
      15: ldc           #248                // String columns
      17: areturn
      18: new           #230                // class java/lang/IndexOutOfBoundsException
      21: dup
      22: iload_1
      23: invokestatic  #236                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      26: invokevirtual #240                // Method java/lang/Integer.toString:()Ljava/lang/String;
      29: invokespecial #243                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      32: athrow

  public wvlet.airframe.sql.catalog.Catalog$Table table();
    Code:
       0: aload_0
       1: getfield      #59                 // Field table:Lwvlet/airframe/sql/catalog/Catalog$Table;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.Catalog$TableColumn> columns();
    Code:
       0: aload_0
       1: getfield      #61                 // Field columns:Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: getstatic     #256                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #260                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       6: invokevirtual #266                // Method scala/collection/immutable/Seq$.empty:()Lscala/collection/SeqOps;
       9: checkcast     #209                // class scala/collection/immutable/Seq
      12: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method columns:()Lscala/collection/immutable/Seq;
       4: aload_0
       5: invokedynamic #287,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/model/TableScan;)Lscala/Function1;
      10: invokeinterface #291,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      15: checkcast     #209                // class scala/collection/immutable/Seq
      18: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: aload_1
       1: invokevirtual #299                // Method wvlet/airframe/sql/analyzer/QuerySignatureConfig.embedTableNames:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #199                // Method table:()Lwvlet/airframe/sql/catalog/Catalog$Table;
      11: invokevirtual #302                // Method wvlet/airframe/sql/catalog/Catalog$Table.fullName:()Ljava/lang/String;
      14: areturn
      15: ldc_w         #304                // String T
      18: areturn

  public boolean resolved();
    Code:
       0: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #89                 // Field OFFSET$0:J
       7: invokevirtual #312                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #316                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #317                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #320                // Field resolved$lzy1:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          109
      39: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #89                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #324                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          106
      55: iconst_1
      56: istore        5
      58: aload_0
      59: iload         5
      61: putfield      #320                // Field resolved$lzy1:Z
      64: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      67: aload_0
      68: getstatic     #89                 // Field OFFSET$0:J
      71: iconst_3
      72: iconst_0
      73: invokevirtual #328                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      76: iload         5
      78: ireturn
      79: nop
      80: nop
      81: athrow
      82: astore        6
      84: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      87: aload_0
      88: getstatic     #89                 // Field OFFSET$0:J
      91: iconst_0
      92: iconst_0
      93: invokevirtual #328                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      96: aload         6
      98: athrow
      99: nop
     100: nop
     101: athrow
     102: athrow
     103: nop
     104: nop
     105: athrow
     106: goto          0
     109: getstatic     #76                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     112: aload_0
     113: getstatic     #89                 // Field OFFSET$0:J
     116: lload_1
     117: iconst_0
     118: invokevirtual #332                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     121: goto          0
    Exception table:
       from    to  target type
          55    79    82   Class java/lang/Throwable

  public wvlet.airframe.sql.model.TableScan copy(wvlet.airframe.sql.catalog.Catalog$Table, scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.Catalog$TableColumn>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/TableScan
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #335                // Method "<init>":(Lwvlet/airframe/sql/catalog/Catalog$Table;Lscala/collection/immutable/Seq;)V
       9: areturn

  public wvlet.airframe.sql.catalog.Catalog$Table copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method table:()Lwvlet/airframe/sql/catalog/Catalog$Table;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.Catalog$TableColumn> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method columns:()Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.catalog.Catalog$Table _1();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method table:()Lwvlet/airframe/sql/catalog/Catalog$Table;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.catalog.Catalog$TableColumn> _2();
    Code:
       0: aload_0
       1: invokevirtual #203                // Method columns:()Lscala/collection/immutable/Seq;
       4: areturn

  private final wvlet.airframe.sql.model.ResolvedAttribute outputAttributes$$anonfun$1(wvlet.airframe.sql.catalog.Catalog$TableColumn);
    Code:
       0: getstatic     #343                // Field wvlet/airframe/sql/model/ResolvedAttribute$.MODULE$:Lwvlet/airframe/sql/model/ResolvedAttribute$;
       3: aload_1
       4: invokevirtual #346                // Method wvlet/airframe/sql/catalog/Catalog$TableColumn.name:()Ljava/lang/String;
       7: aload_1
       8: invokevirtual #350                // Method wvlet/airframe/sql/catalog/Catalog$TableColumn.dataType:()Lwvlet/airframe/sql/catalog/DataType;
      11: getstatic     #355                // Field scala/Some$.MODULE$:Lscala/Some$;
      14: aload_0
      15: invokevirtual #199                // Method table:()Lwvlet/airframe/sql/catalog/Catalog$Table;
      18: invokevirtual #358                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      21: getstatic     #355                // Field scala/Some$.MODULE$:Lscala/Some$;
      24: aload_1
      25: invokevirtual #358                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      28: invokevirtual #361                // Method wvlet/airframe/sql/model/ResolvedAttribute$.apply:(Ljava/lang/String;Lwvlet/airframe/sql/catalog/DataType;Lscala/Option;Lscala/Option;)Lwvlet/airframe/sql/model/ResolvedAttribute;
      31: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #374,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
