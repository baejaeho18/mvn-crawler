Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$CreateTableAs implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.LogicalPlan$DDL,wvlet.airframe.sql.model.LogicalPlan$Update,wvlet.airframe.sql.model.UnaryPlan,wvlet.airframe.sql.model.LogicalPlan$UnaryRelation,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy34;

  public long 0bitmap$34;

  private final wvlet.airframe.sql.model.Expression$QName table;

  private final boolean ifNotEotExists;

  private final scala.Option columnAliases;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation query;

  public static wvlet.airframe.sql.model.LogicalPlan$CreateTableAs apply(wvlet.airframe.sql.model.Expression$QName, boolean, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>, wvlet.airframe.sql.model.LogicalPlan$Relation);
    Code:
       0: getstatic     #64                 // Field wvlet/airframe/sql/model/LogicalPlan$CreateTableAs$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #66                 // Method wvlet/airframe/sql/model/LogicalPlan$CreateTableAs$.apply:(Lwvlet/airframe/sql/model/Expression$QName;ZLscala/Option;Lwvlet/airframe/sql/model/LogicalPlan$Relation;)Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs;
      10: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$CreateTableAs fromProduct(scala.Product);
    Code:
       0: getstatic     #64                 // Field wvlet/airframe/sql/model/LogicalPlan$CreateTableAs$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs$;
       3: aload_0
       4: invokevirtual #70                 // Method wvlet/airframe/sql/model/LogicalPlan$CreateTableAs$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$CreateTableAs unapply(wvlet.airframe.sql.model.LogicalPlan$CreateTableAs);
    Code:
       0: getstatic     #64                 // Field wvlet/airframe/sql/model/LogicalPlan$CreateTableAs$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs$;
       3: aload_0
       4: invokevirtual #74                 // Method wvlet/airframe/sql/model/LogicalPlan$CreateTableAs$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs;)Lwvlet/airframe/sql/model/LogicalPlan$CreateTableAs;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$CreateTableAs(wvlet.airframe.sql.model.Expression$QName, boolean, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>, wvlet.airframe.sql.model.LogicalPlan$Relation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field table:Lwvlet/airframe/sql/model/Expression$QName;
       5: aload_0
       6: iload_2
       7: putfield      #81                 // Field ifNotEotExists:Z
      10: aload_0
      11: aload_3
      12: putfield      #83                 // Field columnAliases:Lscala/Option;
      15: aload_0
      16: aload         4
      18: putfield      #85                 // Field query:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      21: aload_0
      22: invokespecial #88                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #92                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      29: return

  private static {};
    Code:
       0: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$CreateTableAs
       5: ldc           #101                // String 0bitmap$34
       7: invokevirtual #107                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #111                // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #113                // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #113                // Field OFFSET$0:J
       7: invokevirtual #137                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #141                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #142                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #145                // Field resolved$lzy34:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #113                // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #149                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #153                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #145                // Field resolved$lzy34:Z
      67: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #113                // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #157                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #113                // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #157                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #100                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #113                // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #161                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #177                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #199                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #210                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #217                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #224                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #228                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #232                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #237                // InterfaceMethod wvlet/airframe/sql/model/UnaryPlan.children$:(Lwvlet/airframe/sql/model/UnaryPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation inputRelation();
    Code:
       0: aload_0
       1: invokestatic  #243                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$UnaryRelation.inputRelation$:(Lwvlet/airframe/sql/model/LogicalPlan$UnaryRelation;)Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public int hashCode();
    Code:
       0: ldc           #246                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #249                // Method productPrefix:()Ljava/lang/String;
       8: invokevirtual #253                // Method java/lang/String.hashCode:()I
      11: invokestatic  #259                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #262                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      20: invokestatic  #266                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #259                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #268                // Method ifNotEotExists:()Z
      32: ifeq          41
      35: sipush        1231
      38: goto          44
      41: sipush        1237
      44: invokestatic  #259                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: aload_0
      50: invokevirtual #271                // Method columnAliases:()Lscala/Option;
      53: invokestatic  #266                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      56: invokestatic  #259                // Method scala/runtime/Statics.mix:(II)I
      59: istore_1
      60: iload_1
      61: aload_0
      62: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      65: invokestatic  #266                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      68: invokestatic  #259                // Method scala/runtime/Statics.mix:(II)I
      71: istore_1
      72: iload_1
      73: iconst_4
      74: invokestatic  #276                // Method scala/runtime/Statics.finalizeHash:(II)I
      77: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     146
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$CreateTableAs
      11: ifeq          139
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$CreateTableAs
      18: astore_3
      19: aload_0
      20: invokevirtual #268                // Method ifNotEotExists:()Z
      23: aload_3
      24: invokevirtual #268                // Method ifNotEotExists:()Z
      27: if_icmpne     135
      30: aload_0
      31: invokevirtual #262                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      34: aload_3
      35: invokevirtual #262                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      38: astore        4
      40: dup
      41: ifnonnull     53
      44: pop
      45: aload         4
      47: ifnull        61
      50: goto          135
      53: aload         4
      55: invokevirtual #281                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          135
      61: aload_0
      62: invokevirtual #271                // Method columnAliases:()Lscala/Option;
      65: aload_3
      66: invokevirtual #271                // Method columnAliases:()Lscala/Option;
      69: astore        5
      71: dup
      72: ifnonnull     84
      75: pop
      76: aload         5
      78: ifnull        92
      81: goto          135
      84: aload         5
      86: invokevirtual #281                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      89: ifeq          135
      92: aload_0
      93: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      96: aload_3
      97: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
     100: astore        6
     102: dup
     103: ifnonnull     115
     106: pop
     107: aload         6
     109: ifnull        123
     112: goto          135
     115: aload         6
     117: invokevirtual #281                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     120: ifeq          135
     123: aload_3
     124: aload_0
     125: invokevirtual #284                // Method canEqual:(Ljava/lang/Object;)Z
     128: ifeq          135
     131: iconst_1
     132: goto          136
     135: iconst_0
     136: goto          143
     139: iconst_0
     140: goto          143
     143: ifeq          150
     146: iconst_1
     147: goto          151
     150: iconst_0
     151: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #293                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #297                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$CreateTableAs
       4: ireturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #300                // String CreateTableAs
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 45
                     3: 50
               default: 55
          }
      32: aload_0
      33: invokevirtual #306                // Method _1:()Lwvlet/airframe/sql/model/Expression$QName;
      36: areturn
      37: aload_0
      38: invokevirtual #309                // Method _2:()Z
      41: invokestatic  #315                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_0
      46: invokevirtual #318                // Method _3:()Lscala/Option;
      49: areturn
      50: aload_0
      51: invokevirtual #321                // Method _4:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      54: areturn
      55: new           #323                // class java/lang/IndexOutOfBoundsException
      58: dup
      59: iload_1
      60: invokestatic  #327                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      63: invokevirtual #331                // Method java/lang/Integer.toString:()Ljava/lang/String;
      66: invokespecial #334                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      69: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 36
                     2: 40
                     3: 44
               default: 48
          }
      32: ldc_w         #338                // String table
      35: areturn
      36: ldc_w         #339                // String ifNotEotExists
      39: areturn
      40: ldc_w         #340                // String columnAliases
      43: areturn
      44: ldc_w         #341                // String query
      47: areturn
      48: new           #323                // class java/lang/IndexOutOfBoundsException
      51: dup
      52: iload_1
      53: invokestatic  #327                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: invokevirtual #331                // Method java/lang/Integer.toString:()Ljava/lang/String;
      59: invokespecial #334                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      62: athrow

  public wvlet.airframe.sql.model.Expression$QName table();
    Code:
       0: aload_0
       1: getfield      #79                 // Field table:Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public boolean ifNotEotExists();
    Code:
       0: aload_0
       1: getfield      #81                 // Field ifNotEotExists:Z
       4: ireturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> columnAliases();
    Code:
       0: aload_0
       1: getfield      #83                 // Field columnAliases:Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation query();
    Code:
       0: aload_0
       1: getfield      #85                 // Field query:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: new           #347                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #348                // int 5
       7: invokespecial #351                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #353                // String CT(
      13: invokevirtual #357                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: getstatic     #360                // Field wvlet/airframe/sql/model/LogicalPlan$TableRef$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$TableRef$;
      19: aload_0
      20: invokevirtual #262                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      23: invokevirtual #363                // Method wvlet/airframe/sql/model/LogicalPlan$TableRef$.apply:(Lwvlet/airframe/sql/model/Expression$QName;)Lwvlet/airframe/sql/model/LogicalPlan$TableRef;
      26: aload_1
      27: invokevirtual #365                // Method wvlet/airframe/sql/model/LogicalPlan$TableRef.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      30: invokevirtual #357                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc_w         #367                // String ,
      36: invokevirtual #357                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      43: aload_1
      44: invokeinterface #368,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      49: invokevirtual #357                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc_w         #370                // String )
      55: invokevirtual #357                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #371                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #376,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.inputAttributes:()Lscala/collection/immutable/Seq;
       9: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #379,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
       9: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation child();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$CreateTableAs copy(wvlet.airframe.sql.model.Expression$QName, boolean, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>, wvlet.airframe.sql.model.LogicalPlan$Relation);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$CreateTableAs
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokespecial #383                // Method "<init>":(Lwvlet/airframe/sql/model/Expression$QName;ZLscala/Option;Lwvlet/airframe/sql/model/LogicalPlan$Relation;)V
      12: areturn

  public wvlet.airframe.sql.model.Expression$QName copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #262                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public boolean copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #268                // Method ifNotEotExists:()Z
       4: ireturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #271                // Method columnAliases:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$QName _1();
    Code:
       0: aload_0
       1: invokevirtual #262                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public boolean _2();
    Code:
       0: aload_0
       1: invokevirtual #268                // Method ifNotEotExists:()Z
       4: ireturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> _3();
    Code:
       0: aload_0
       1: invokevirtual #271                // Method columnAliases:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _4();
    Code:
       0: aload_0
       1: invokevirtual #273                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan child();
    Code:
       0: aload_0
       1: invokevirtual #390                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn
}
