Compiled from "Expression.scala"
public final class wvlet.airframe.sql.model.Expression$IfExpr$ implements scala.deriving.Mirror$Product,java.io.Serializable {
  public static final wvlet.airframe.sql.model.Expression$IfExpr$ MODULE$;

  public wvlet.airframe.sql.model.Expression$IfExpr$();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/Expression$IfExpr$
       3: dup
       4: invokespecial #30                 // Method "<init>":()V
       7: putstatic     #32                 // Field MODULE$:Lwvlet/airframe/sql/model/Expression$IfExpr$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #36                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class wvlet/airframe/sql/model/Expression$IfExpr$
       6: invokespecial #39                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public wvlet.airframe.sql.model.Expression$IfExpr apply(wvlet.airframe.sql.model.Expression$ConditionalExpression, wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression);
    Code:
       0: new           #19                 // class wvlet/airframe/sql/model/Expression$IfExpr
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #47                 // Method wvlet/airframe/sql/model/Expression$IfExpr."<init>":(Lwvlet/airframe/sql/model/Expression$ConditionalExpression;Lwvlet/airframe/sql/model/Expression;Lwvlet/airframe/sql/model/Expression;)V
      10: areturn

  public wvlet.airframe.sql.model.Expression$IfExpr unapply(wvlet.airframe.sql.model.Expression$IfExpr);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #56                 // String IfExpr
       2: areturn

  public wvlet.airframe.sql.model.Expression$IfExpr fromProduct(scala.Product);
    Code:
       0: new           #19                 // class wvlet/airframe/sql/model/Expression$IfExpr
       3: dup
       4: aload_1
       5: iconst_0
       6: invokeinterface #65,  2           // InterfaceMethod scala/Product.productElement:(I)Ljava/lang/Object;
      11: checkcast     #14                 // class wvlet/airframe/sql/model/Expression$ConditionalExpression
      14: aload_1
      15: iconst_1
      16: invokeinterface #65,  2           // InterfaceMethod scala/Product.productElement:(I)Ljava/lang/Object;
      21: checkcast     #16                 // class wvlet/airframe/sql/model/Expression
      24: aload_1
      25: iconst_2
      26: invokeinterface #65,  2           // InterfaceMethod scala/Product.productElement:(I)Ljava/lang/Object;
      31: checkcast     #16                 // class wvlet/airframe/sql/model/Expression
      34: invokespecial #47                 // Method wvlet/airframe/sql/model/Expression$IfExpr."<init>":(Lwvlet/airframe/sql/model/Expression$ConditionalExpression;Lwvlet/airframe/sql/model/Expression;Lwvlet/airframe/sql/model/Expression;)V
      37: areturn

  public java.lang.Object fromProduct(scala.Product);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/Expression$IfExpr;
       5: areturn
}
