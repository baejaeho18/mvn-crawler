Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$Values implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.LogicalPlan$Relation,wvlet.airframe.sql.model.LeafPlan,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy3;

  public long 0bitmap$3;

  private final scala.collection.immutable.Seq rows;

  public static wvlet.airframe.sql.model.LogicalPlan$Values apply(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression>);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/LogicalPlan$Values$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Values$;
       3: aload_0
       4: invokevirtual #46                 // Method wvlet/airframe/sql/model/LogicalPlan$Values$.apply:(Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan$Values;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$Values fromProduct(scala.Product);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/LogicalPlan$Values$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Values$;
       3: aload_0
       4: invokevirtual #50                 // Method wvlet/airframe/sql/model/LogicalPlan$Values$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$Values;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$Values unapply(wvlet.airframe.sql.model.LogicalPlan$Values);
    Code:
       0: getstatic     #44                 // Field wvlet/airframe/sql/model/LogicalPlan$Values$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Values$;
       3: aload_0
       4: invokevirtual #54                 // Method wvlet/airframe/sql/model/LogicalPlan$Values$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$Values;)Lwvlet/airframe/sql/model/LogicalPlan$Values;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Values(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field rows:Lscala/collection/immutable/Seq;
       5: aload_0
       6: invokespecial #62                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #66                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      13: return

  private static {};
    Code:
       0: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$Values
       5: ldc           #75                 // String 0bitmap$3
       7: invokevirtual #81                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #85                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #87                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #93                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #97                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #87                 // Field OFFSET$0:J
       7: invokevirtual #111                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #115                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #116                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #119                // Field resolved$lzy3:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #87                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #123                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #127                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #119                // Field resolved$lzy3:Z
      67: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #87                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #131                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #87                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #131                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #74                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #87                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #135                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #145                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #173                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #190                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #201                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #205                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #210                // InterfaceMethod wvlet/airframe/sql/model/LeafPlan.children$:(Lwvlet/airframe/sql/model/LeafPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq inputAttributes();
    Code:
       0: aload_0
       1: invokestatic  #214                // InterfaceMethod wvlet/airframe/sql/model/LeafPlan.inputAttributes$:(Lwvlet/airframe/sql/model/LeafPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #221                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #225                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     73
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$Values
      11: ifeq          66
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$Values
      18: astore_3
      19: aload_0
      20: invokevirtual #230                // Method rows:()Lscala/collection/immutable/Seq;
      23: aload_3
      24: invokevirtual #230                // Method rows:()Lscala/collection/immutable/Seq;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          62
      42: aload         4
      44: invokevirtual #232                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          62
      50: aload_3
      51: aload_0
      52: invokevirtual #235                // Method canEqual:(Ljava/lang/Object;)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: goto          70
      66: iconst_0
      67: goto          70
      70: ifeq          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #221                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #243                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$Values
       4: ireturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #247                // String Values
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: aload_0
       8: invokevirtual #253                // Method _1:()Lscala/collection/immutable/Seq;
      11: areturn
      12: new           #255                // class java/lang/IndexOutOfBoundsException
      15: dup
      16: iload_1
      17: invokestatic  #261                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #265                // Method java/lang/Integer.toString:()Ljava/lang/String;
      23: invokespecial #268                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     11
       7: ldc_w         #272                // String rows
      10: areturn
      11: new           #255                // class java/lang/IndexOutOfBoundsException
      14: dup
      15: iload_1
      16: invokestatic  #261                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      19: invokevirtual #265                // Method java/lang/Integer.toString:()Ljava/lang/String;
      22: invokespecial #268                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      25: athrow

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression> rows();
    Code:
       0: aload_0
       1: getfield      #59                 // Field rows:Lscala/collection/immutable/Seq;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: new           #278                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #279                // int 3
       7: invokespecial #282                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #284                // String V[
      13: invokevirtual #288                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #230                // Method rows:()Lscala/collection/immutable/Seq;
      20: invokeinterface #291,  1          // InterfaceMethod scala/collection/immutable/Seq.length:()I
      25: invokevirtual #294                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc_w         #296                // String ]
      31: invokevirtual #288                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #297                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: getstatic     #305                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #310                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_0
       7: invokevirtual #314                // Method scala/Predef$.intWrapper:(I)I
      10: aload_0
      11: invokevirtual #230                // Method rows:()Lscala/collection/immutable/Seq;
      14: invokeinterface #317,  1          // InterfaceMethod scala/collection/immutable/Seq.size:()I
      19: invokevirtual #321                // Method scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
      22: aload_0
      23: invokedynamic #341,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/model/LogicalPlan$Values;)Lscala/Function1;
      28: invokevirtual #347                // Method scala/collection/immutable/Range.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      31: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Values copy(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$Values
       3: dup
       4: aload_1
       5: invokespecial #350                // Method "<init>":(Lscala/collection/immutable/Seq;)V
       8: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method rows:()Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression> _1();
    Code:
       0: aload_0
       1: invokevirtual #230                // Method rows:()Lscala/collection/immutable/Seq;
       4: areturn

  private final wvlet.airframe.sql.model.Expression$UnresolvedAttribute outputAttributes$$anonfun$1(int);
    Code:
       0: getstatic     #357                // Field wvlet/airframe/sql/model/Expression$UnresolvedAttribute$.MODULE$:Lwvlet/airframe/sql/model/Expression$UnresolvedAttribute$;
       3: new           #278                // class java/lang/StringBuilder
       6: dup
       7: ldc_w         #331                // int 1
      10: invokespecial #282                // Method java/lang/StringBuilder."<init>":(I)V
      13: ldc_w         #359                // String i
      16: invokevirtual #288                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: iload_1
      20: invokevirtual #294                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: invokevirtual #297                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #362                // Method wvlet/airframe/sql/model/Expression$UnresolvedAttribute$.apply:(Ljava/lang/String;)Lwvlet/airframe/sql/model/Expression$UnresolvedAttribute;
      29: areturn

  private wvlet.airframe.sql.model.Expression$UnresolvedAttribute outputAttributes$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #366                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokespecial #368                // Method outputAttributes$$anonfun$1:(I)Lwvlet/airframe/sql/model/Expression$UnresolvedAttribute;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #380,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
