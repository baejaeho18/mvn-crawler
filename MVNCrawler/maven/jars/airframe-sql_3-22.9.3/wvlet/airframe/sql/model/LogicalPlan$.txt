Compiled from "LogicalPlan.scala"
public final class wvlet.airframe.sql.model.LogicalPlan$ implements java.io.Serializable {
  public static final wvlet.airframe.sql.model.LogicalPlan$ParenthesizedRelation$ ParenthesizedRelation;

  public static final wvlet.airframe.sql.model.LogicalPlan$AliasedRelation$ AliasedRelation;

  public static final wvlet.airframe.sql.model.LogicalPlan$Values$ Values;

  public static final wvlet.airframe.sql.model.LogicalPlan$TableRef$ TableRef;

  public static final wvlet.airframe.sql.model.LogicalPlan$RawSQL$ RawSQL;

  public static final wvlet.airframe.sql.model.LogicalPlan$Distinct$ Distinct;

  public static final wvlet.airframe.sql.model.LogicalPlan$Sort$ Sort;

  public static final wvlet.airframe.sql.model.LogicalPlan$Limit$ Limit;

  public static final wvlet.airframe.sql.model.LogicalPlan$Filter$ Filter;

  public static final wvlet.airframe.sql.model.LogicalPlan$EmptyRelation$ EmptyRelation;

  public static final wvlet.airframe.sql.model.LogicalPlan$Project$ Project;

  public static final wvlet.airframe.sql.model.LogicalPlan$Aggregate$ Aggregate;

  public static final wvlet.airframe.sql.model.LogicalPlan$Query$ Query;

  public static final wvlet.airframe.sql.model.LogicalPlan$With$ With;

  public static final wvlet.airframe.sql.model.LogicalPlan$WithQuery$ WithQuery;

  public static final wvlet.airframe.sql.model.LogicalPlan$Join$ Join;

  public static final wvlet.airframe.sql.model.LogicalPlan$InnerJoin$ InnerJoin;

  public static final wvlet.airframe.sql.model.LogicalPlan$LeftOuterJoin$ LeftOuterJoin;

  public static final wvlet.airframe.sql.model.LogicalPlan$RightOuterJoin$ RightOuterJoin;

  public static final wvlet.airframe.sql.model.LogicalPlan$FullOuterJoin$ FullOuterJoin;

  public static final wvlet.airframe.sql.model.LogicalPlan$CrossJoin$ CrossJoin;

  public static final wvlet.airframe.sql.model.LogicalPlan$ImplicitJoin$ ImplicitJoin;

  public static final wvlet.airframe.sql.model.LogicalPlan$Intersect$ Intersect;

  public static final wvlet.airframe.sql.model.LogicalPlan$Except$ Except;

  public static final wvlet.airframe.sql.model.LogicalPlan$Union$ Union;

  public static final wvlet.airframe.sql.model.LogicalPlan$Unnest$ Unnest;

  public static final wvlet.airframe.sql.model.LogicalPlan$Lateral$ Lateral;

  public static final wvlet.airframe.sql.model.LogicalPlan$LateralView$ LateralView;

  public static final wvlet.airframe.sql.model.LogicalPlan$CreateSchema$ CreateSchema;

  public static final wvlet.airframe.sql.model.LogicalPlan$DropSchema$ DropSchema;

  public static final wvlet.airframe.sql.model.LogicalPlan$RenameSchema$ RenameSchema;

  public static final wvlet.airframe.sql.model.LogicalPlan$CreateTable$ CreateTable;

  public static final wvlet.airframe.sql.model.LogicalPlan$DropTable$ DropTable;

  public static final wvlet.airframe.sql.model.LogicalPlan$RenameTable$ RenameTable;

  public static final wvlet.airframe.sql.model.LogicalPlan$RenameColumn$ RenameColumn;

  public static final wvlet.airframe.sql.model.LogicalPlan$DropColumn$ DropColumn;

  public static final wvlet.airframe.sql.model.LogicalPlan$AddColumn$ AddColumn;

  public static final wvlet.airframe.sql.model.LogicalPlan$CreateView$ CreateView;

  public static final wvlet.airframe.sql.model.LogicalPlan$DropView$ DropView;

  public static final wvlet.airframe.sql.model.LogicalPlan$CreateTableAs$ CreateTableAs;

  public static final wvlet.airframe.sql.model.LogicalPlan$InsertInto$ InsertInto;

  public static final wvlet.airframe.sql.model.LogicalPlan$Delete$ Delete;

  public static final wvlet.airframe.sql.model.LogicalPlan$ MODULE$;

  private wvlet.airframe.sql.model.LogicalPlan$();
    Code:
       0: aload_0
       1: invokespecial #324                // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$
       3: dup
       4: invokespecial #327                // Method "<init>":()V
       7: putstatic     #329                // Field MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #333                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$
       6: invokespecial #336                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public boolean wvlet$airframe$sql$model$LogicalPlan$$$isSelectAll(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #361,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/model/LogicalPlan$;)Lscala/Function1;
       7: invokeinterface #367,  2          // InterfaceMethod scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
      12: ireturn

  private final boolean isSelectAll$$anonfun$1(wvlet.airframe.sql.model.Attribute);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #9                  // class wvlet/airframe/sql/model/Expression$AllColumns
       6: ifeq          32
       9: getstatic     #372                // Field wvlet/airframe/sql/model/Expression$AllColumns$.MODULE$:Lwvlet/airframe/sql/model/Expression$AllColumns$;
      12: aload_2
      13: checkcast     #9                  // class wvlet/airframe/sql/model/Expression$AllColumns
      16: invokevirtual #376                // Method wvlet/airframe/sql/model/Expression$AllColumns$.unapply:(Lwvlet/airframe/sql/model/Expression$AllColumns;)Lwvlet/airframe/sql/model/Expression$AllColumns;
      19: astore_3
      20: aload_3
      21: invokevirtual #380                // Method wvlet/airframe/sql/model/Expression$AllColumns._1:()Lscala/Option;
      24: astore        4
      26: aload         4
      28: astore        5
      30: iconst_1
      31: ireturn
      32: iconst_0
      33: ireturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #397,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
