Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$InsertInto implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.LogicalPlan$Update,wvlet.airframe.sql.model.UnaryPlan,wvlet.airframe.sql.model.LogicalPlan$UnaryRelation,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy35;

  public long 0bitmap$35;

  private final wvlet.airframe.sql.model.Expression$QName table;

  private final scala.Option columnAliases;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation query;

  public static wvlet.airframe.sql.model.LogicalPlan$InsertInto apply(wvlet.airframe.sql.model.Expression$QName, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>, wvlet.airframe.sql.model.LogicalPlan$Relation);
    Code:
       0: getstatic     #60                 // Field wvlet/airframe/sql/model/LogicalPlan$InsertInto$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$InsertInto$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #62                 // Method wvlet/airframe/sql/model/LogicalPlan$InsertInto$.apply:(Lwvlet/airframe/sql/model/Expression$QName;Lscala/Option;Lwvlet/airframe/sql/model/LogicalPlan$Relation;)Lwvlet/airframe/sql/model/LogicalPlan$InsertInto;
       9: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$InsertInto fromProduct(scala.Product);
    Code:
       0: getstatic     #60                 // Field wvlet/airframe/sql/model/LogicalPlan$InsertInto$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$InsertInto$;
       3: aload_0
       4: invokevirtual #66                 // Method wvlet/airframe/sql/model/LogicalPlan$InsertInto$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$InsertInto;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$InsertInto unapply(wvlet.airframe.sql.model.LogicalPlan$InsertInto);
    Code:
       0: getstatic     #60                 // Field wvlet/airframe/sql/model/LogicalPlan$InsertInto$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$InsertInto$;
       3: aload_0
       4: invokevirtual #70                 // Method wvlet/airframe/sql/model/LogicalPlan$InsertInto$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$InsertInto;)Lwvlet/airframe/sql/model/LogicalPlan$InsertInto;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$InsertInto(wvlet.airframe.sql.model.Expression$QName, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>, wvlet.airframe.sql.model.LogicalPlan$Relation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field table:Lwvlet/airframe/sql/model/Expression$QName;
       5: aload_0
       6: aload_2
       7: putfield      #77                 // Field columnAliases:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #79                 // Field query:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      15: aload_0
      16: invokespecial #82                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #86                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      23: return

  private static {};
    Code:
       0: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$InsertInto
       5: ldc           #95                 // String 0bitmap$35
       7: invokevirtual #101                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #105                // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #107                // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #107                // Field OFFSET$0:J
       7: invokevirtual #131                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #135                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #136                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #139                // Field resolved$lzy35:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #107                // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #143                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #147                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #139                // Field resolved$lzy35:Z
      67: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #107                // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #151                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #107                // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #151                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #94                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #107                // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #155                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #161                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #178                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #193                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #197                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #211                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #222                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #226                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #231                // InterfaceMethod wvlet/airframe/sql/model/UnaryPlan.children$:(Lwvlet/airframe/sql/model/UnaryPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation inputRelation();
    Code:
       0: aload_0
       1: invokestatic  #237                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$UnaryRelation.inputRelation$:(Lwvlet/airframe/sql/model/LogicalPlan$UnaryRelation;)Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #244                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #248                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     135
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$InsertInto
      11: ifeq          128
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$InsertInto
      18: astore_3
      19: aload_0
      20: invokevirtual #254                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      23: aload_3
      24: invokevirtual #254                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          124
      42: aload         4
      44: invokevirtual #256                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          124
      50: aload_0
      51: invokevirtual #259                // Method columnAliases:()Lscala/Option;
      54: aload_3
      55: invokevirtual #259                // Method columnAliases:()Lscala/Option;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          124
      73: aload         5
      75: invokevirtual #256                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          124
      81: aload_0
      82: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      85: aload_3
      86: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          124
     104: aload         6
     106: invokevirtual #256                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          124
     112: aload_3
     113: aload_0
     114: invokevirtual #264                // Method canEqual:(Ljava/lang/Object;)Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: goto          132
     128: iconst_0
     129: goto          132
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #244                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #272                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$InsertInto
       4: ireturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #276                // String InsertInto
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #282                // Method _1:()Lwvlet/airframe/sql/model/Expression$QName;
      32: areturn
      33: aload_0
      34: invokevirtual #285                // Method _2:()Lscala/Option;
      37: areturn
      38: aload_0
      39: invokevirtual #288                // Method _3:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      42: areturn
      43: new           #290                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: invokevirtual #300                // Method java/lang/Integer.toString:()Ljava/lang/String;
      54: invokespecial #303                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 32
                     2: 36
               default: 40
          }
      28: ldc_w         #307                // String table
      31: areturn
      32: ldc_w         #308                // String columnAliases
      35: areturn
      36: ldc_w         #309                // String query
      39: areturn
      40: new           #290                // class java/lang/IndexOutOfBoundsException
      43: dup
      44: iload_1
      45: invokestatic  #296                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokevirtual #300                // Method java/lang/Integer.toString:()Ljava/lang/String;
      51: invokespecial #303                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow

  public wvlet.airframe.sql.model.Expression$QName table();
    Code:
       0: aload_0
       1: getfield      #75                 // Field table:Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> columnAliases();
    Code:
       0: aload_0
       1: getfield      #77                 // Field columnAliases:Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation query();
    Code:
       0: aload_0
       1: getfield      #79                 // Field query:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation child();
    Code:
       0: aload_0
       1: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: new           #316                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #317                // int 4
       7: invokespecial #320                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #322                // String I(
      13: invokevirtual #326                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: getstatic     #329                // Field wvlet/airframe/sql/model/LogicalPlan$TableRef$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$TableRef$;
      19: aload_0
      20: invokevirtual #254                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
      23: invokevirtual #332                // Method wvlet/airframe/sql/model/LogicalPlan$TableRef$.apply:(Lwvlet/airframe/sql/model/Expression$QName;)Lwvlet/airframe/sql/model/LogicalPlan$TableRef;
      26: aload_1
      27: invokevirtual #334                // Method wvlet/airframe/sql/model/LogicalPlan$TableRef.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      30: invokevirtual #326                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc_w         #336                // String ,
      36: invokevirtual #326                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      43: aload_1
      44: invokeinterface #337,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      49: invokevirtual #326                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc_w         #339                // String )
      55: invokevirtual #326                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #340                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #345,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.inputAttributes:()Lscala/collection/immutable/Seq;
       9: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: getstatic     #351                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #355                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
       6: areturn

  public wvlet.airframe.sql.model.LogicalPlan$InsertInto copy(wvlet.airframe.sql.model.Expression$QName, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>, wvlet.airframe.sql.model.LogicalPlan$Relation);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$InsertInto
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #358                // Method "<init>":(Lwvlet/airframe/sql/model/Expression$QName;Lscala/Option;Lwvlet/airframe/sql/model/LogicalPlan$Relation;)V
      10: areturn

  public wvlet.airframe.sql.model.Expression$QName copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #254                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #259                // Method columnAliases:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.Expression$QName _1();
    Code:
       0: aload_0
       1: invokevirtual #254                // Method table:()Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> _2();
    Code:
       0: aload_0
       1: invokevirtual #259                // Method columnAliases:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _3();
    Code:
       0: aload_0
       1: invokevirtual #261                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan child();
    Code:
       0: aload_0
       1: invokevirtual #364                // Method child:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn
}
