Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$With implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy14;

  public long 0bitmap$14;

  private final boolean recursive;

  private final scala.collection.immutable.Seq queries;

  public static wvlet.airframe.sql.model.LogicalPlan$With apply(boolean, scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan$WithQuery>);
    Code:
       0: getstatic     #35                 // Field wvlet/airframe/sql/model/LogicalPlan$With$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$With$;
       3: iload_0
       4: aload_1
       5: invokevirtual #37                 // Method wvlet/airframe/sql/model/LogicalPlan$With$.apply:(ZLscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan$With;
       8: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$With fromProduct(scala.Product);
    Code:
       0: getstatic     #35                 // Field wvlet/airframe/sql/model/LogicalPlan$With$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$With$;
       3: aload_0
       4: invokevirtual #41                 // Method wvlet/airframe/sql/model/LogicalPlan$With$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$With;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$With unapply(wvlet.airframe.sql.model.LogicalPlan$With);
    Code:
       0: getstatic     #35                 // Field wvlet/airframe/sql/model/LogicalPlan$With$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$With$;
       3: aload_0
       4: invokevirtual #45                 // Method wvlet/airframe/sql/model/LogicalPlan$With$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$With;)Lwvlet/airframe/sql/model/LogicalPlan$With;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$With(boolean, scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan$WithQuery>);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field recursive:Z
       5: aload_0
       6: aload_2
       7: putfield      #52                 // Field queries:Lscala/collection/immutable/Seq;
      10: aload_0
      11: invokespecial #55                 // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #59                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      18: return

  private static {};
    Code:
       0: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$With
       5: ldc           #68                 // String 0bitmap$14
       7: invokevirtual #74                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #78                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #80                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #86                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #80                 // Field OFFSET$0:J
       7: invokevirtual #104                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #108                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #109                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #112                // Field resolved$lzy14:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #80                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #116                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #120                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #112                // Field resolved$lzy14:Z
      67: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #80                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #124                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #80                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #124                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #67                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #80                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #128                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #138                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #144                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #170                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #177                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #183                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #190                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #194                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #198                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #201                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #204                // Method productPrefix:()Ljava/lang/String;
       8: invokevirtual #208                // Method java/lang/String.hashCode:()I
      11: invokestatic  #214                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #216                // Method recursive:()Z
      20: ifeq          29
      23: sipush        1231
      26: goto          32
      29: sipush        1237
      32: invokestatic  #214                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #218                // Method queries:()Lscala/collection/immutable/Seq;
      41: invokestatic  #222                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      44: invokestatic  #214                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: iconst_2
      50: invokestatic  #225                // Method scala/runtime/Statics.finalizeHash:(II)I
      53: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     84
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$With
      11: ifeq          77
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$With
      18: astore_3
      19: aload_0
      20: invokevirtual #216                // Method recursive:()Z
      23: aload_3
      24: invokevirtual #216                // Method recursive:()Z
      27: if_icmpne     73
      30: aload_0
      31: invokevirtual #218                // Method queries:()Lscala/collection/immutable/Seq;
      34: aload_3
      35: invokevirtual #218                // Method queries:()Lscala/collection/immutable/Seq;
      38: astore        4
      40: dup
      41: ifnonnull     53
      44: pop
      45: aload         4
      47: ifnull        61
      50: goto          73
      53: aload         4
      55: invokevirtual #230                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          73
      61: aload_3
      62: aload_0
      63: invokevirtual #233                // Method canEqual:(Ljava/lang/Object;)Z
      66: ifeq          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: goto          81
      77: iconst_0
      78: goto          81
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #242                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #246                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$With
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #249                // String With
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     15
       7: aload_0
       8: invokevirtual #255                // Method _1:()Z
      11: invokestatic  #261                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      14: areturn
      15: iconst_1
      16: iload_2
      17: if_icmpne     25
      20: aload_0
      21: invokevirtual #264                // Method _2:()Lscala/collection/immutable/Seq;
      24: areturn
      25: new           #266                // class java/lang/IndexOutOfBoundsException
      28: dup
      29: iload_1
      30: invokestatic  #270                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      33: invokevirtual #274                // Method java/lang/Integer.toString:()Ljava/lang/String;
      36: invokespecial #277                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     11
       7: ldc_w         #281                // String recursive
      10: areturn
      11: iconst_1
      12: iload_2
      13: if_icmpne     20
      16: ldc_w         #282                // String queries
      19: areturn
      20: new           #266                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #270                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #274                // Method java/lang/Integer.toString:()Ljava/lang/String;
      31: invokespecial #277                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow

  public boolean recursive();
    Code:
       0: aload_0
       1: getfield      #50                 // Field recursive:Z
       4: ireturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan$WithQuery> queries();
    Code:
       0: aload_0
       1: getfield      #52                 // Field queries:Lscala/collection/immutable/Seq;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: ldc_w         #288                // String
       3: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan> children();
    Code:
       0: aload_0
       1: invokevirtual #218                // Method queries:()Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #302                // Method scala/Predef$.$qmark$qmark$qmark:()Lscala/runtime/Nothing$;
       6: athrow
       7: athrow

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #302                // Method scala/Predef$.$qmark$qmark$qmark:()Lscala/runtime/Nothing$;
       6: athrow
       7: athrow

  public wvlet.airframe.sql.model.LogicalPlan$With copy(boolean, scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan$WithQuery>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$With
       3: dup
       4: iload_1
       5: aload_2
       6: invokespecial #306                // Method "<init>":(ZLscala/collection/immutable/Seq;)V
       9: areturn

  public boolean copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #216                // Method recursive:()Z
       4: ireturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan$WithQuery> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #218                // Method queries:()Lscala/collection/immutable/Seq;
       4: areturn

  public boolean _1();
    Code:
       0: aload_0
       1: invokevirtual #216                // Method recursive:()Z
       4: ireturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.LogicalPlan$WithQuery> _2();
    Code:
       0: aload_0
       1: invokevirtual #218                // Method queries:()Lscala/collection/immutable/Seq;
       4: areturn
}
