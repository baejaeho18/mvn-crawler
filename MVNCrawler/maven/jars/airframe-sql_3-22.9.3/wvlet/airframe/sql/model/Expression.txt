Compiled from "Expression.scala"
public interface wvlet.airframe.sql.model.Expression extends wvlet.airframe.sql.model.TreeNode<wvlet.airframe.sql.model.Expression>, scala.Product {
  public static wvlet.airframe.sql.model.Expression concat(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression>, scala.Function2<wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression>);
    Code:
       0: getstatic     #585                // Field wvlet/airframe/sql/model/Expression$.MODULE$:Lwvlet/airframe/sql/model/Expression$;
       3: aload_0
       4: aload_1
       5: invokevirtual #587                // Method wvlet/airframe/sql/model/Expression$.concat:(Lscala/collection/immutable/Seq;Lscala/Function2;)Lwvlet/airframe/sql/model/Expression;
       8: areturn

  public static wvlet.airframe.sql.model.Expression concatWithAnd(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression>);
    Code:
       0: getstatic     #585                // Field wvlet/airframe/sql/model/Expression$.MODULE$:Lwvlet/airframe/sql/model/Expression$;
       3: aload_0
       4: invokevirtual #592                // Method wvlet/airframe/sql/model/Expression$.concatWithAnd:(Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/Expression;
       7: areturn

  public static wvlet.airframe.sql.model.Expression concatWithEq(scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression>);
    Code:
       0: getstatic     #585                // Field wvlet/airframe/sql/model/Expression$.MODULE$:Lwvlet/airframe/sql/model/Expression$;
       3: aload_0
       4: invokevirtual #595                // Method wvlet/airframe/sql/model/Expression$.concatWithEq:(Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/Expression;
       7: areturn

  public static void $init$(wvlet.airframe.sql.model.Expression);
    Code:
       0: return

  public static java.lang.String sqlExpr$(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokespecial #605                // InterfaceMethod sqlExpr:()Ljava/lang/String;
       4: areturn

  public default java.lang.String sqlExpr();
    Code:
       0: aload_0
       1: invokeinterface #608,  1          // InterfaceMethod toString:()Ljava/lang/String;
       6: areturn

  public static wvlet.airframe.sql.model.Expression transformExpression$(wvlet.airframe.sql.model.Expression, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #616                // InterfaceMethod transformExpression:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/Expression;
       5: areturn

  public default wvlet.airframe.sql.model.Expression transformExpression(scala.PartialFunction<wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression>);
    Code:
       0: aload_0
       1: invokeinterface #622,  1          // InterfaceMethod productArity:()I
       6: iconst_0
       7: if_icmpne     14
      10: aload_0
      11: goto          70
      14: aload_0
      15: invokeinterface #626,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
      20: aload_1
      21: invokedynamic #645,  0            // InvokeDynamic #0:apply:(Lscala/PartialFunction;)Lscala/Function1;
      26: invokeinterface #651,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      31: getstatic     #656                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      34: ldc           #5                  // class java/lang/Object
      36: invokevirtual #659                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      39: invokeinterface #663,  2          // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      44: checkcast     #665                // class "[Ljava/lang/Object;"
      47: astore_3
      48: aload_0
      49: invokeinterface #669,  1          // InterfaceMethod getClass:()Ljava/lang/Class;
      54: invokevirtual #675                // Method java/lang/Class.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;
      57: iconst_0
      58: aaload
      59: astore        4
      61: aload         4
      63: aload_3
      64: invokevirtual #681                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #2                  // class wvlet/airframe/sql/model/Expression
      70: astore_2
      71: aload_1
      72: aload_2
      73: invokedynamic #691,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      78: invokeinterface #697,  3          // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      83: checkcast     #2                  // class wvlet/airframe/sql/model/Expression
      86: areturn

  public static scala.collection.immutable.List collectSubExpressions$(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokespecial #707                // InterfaceMethod collectSubExpressions:()Lscala/collection/immutable/List;
       4: areturn

  public default scala.collection.immutable.List<wvlet.airframe.sql.model.Expression> collectSubExpressions();
    Code:
       0: aload_0
       1: invokeinterface #626,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
       6: invokedynamic #715,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      11: invokeinterface #718,  2          // InterfaceMethod scala/collection/Iterator.flatMap:(Lscala/Function1;)Lscala/collection/Iterator;
      16: invokeinterface #721,  1          // InterfaceMethod scala/collection/Iterator.toList:()Lscala/collection/immutable/List;
      21: areturn

  public static void traverseExpressions$(wvlet.airframe.sql.model.Expression, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #727                // InterfaceMethod traverseExpressions:(Lscala/PartialFunction;)V
       5: return

  public default <U> void traverseExpressions(scala.PartialFunction<wvlet.airframe.sql.model.Expression, U>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #732,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
       7: ifeq          18
      10: aload_1
      11: aload_0
      12: invokeinterface #734,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: aload_0
      19: invokeinterface #626,  1          // InterfaceMethod productIterator:()Lscala/collection/Iterator;
      24: aload_1
      25: invokedynamic #745,  0            // InvokeDynamic #3:applyVoid:(Lscala/PartialFunction;)Lscala/runtime/function/JProcedure1;
      30: invokeinterface #749,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      35: return

  public static scala.collection.immutable.List collectExpressions$(wvlet.airframe.sql.model.Expression, scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #756                // InterfaceMethod collectExpressions:(Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public default scala.collection.immutable.List<wvlet.airframe.sql.model.Expression> collectExpressions(scala.PartialFunction<wvlet.airframe.sql.model.Expression, java.lang.Object>);
    Code:
       0: getstatic     #762                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #766                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       6: invokevirtual #772                // Method scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
       9: astore_2
      10: aload_0
      11: new           #12                 // class wvlet/airframe/sql/model/Expression$$anon$1
      14: dup
      15: aload_1
      16: aload_2
      17: invokespecial #776                // Method wvlet/airframe/sql/model/Expression$$anon$1."<init>":(Lscala/PartialFunction;Lscala/collection/mutable/Builder;)V
      20: invokeinterface #727,  2          // InterfaceMethod traverseExpressions:(Lscala/PartialFunction;)V
      25: aload_2
      26: invokeinterface #782,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
      31: checkcast     #784                // class scala/collection/immutable/List
      34: areturn

  public static boolean resolved$(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokespecial #792                // InterfaceMethod resolved:()Z
       4: ireturn

  public default boolean resolved();
    Code:
       0: aload_0
       1: invokeinterface #795,  1          // InterfaceMethod resolvedChildren:()Z
       6: ireturn

  public static boolean resolvedChildren$(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokespecial #795                // InterfaceMethod resolvedChildren:()Z
       4: ireturn

  public default boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokeinterface #800,  1          // InterfaceMethod children:()Lscala/collection/immutable/Seq;
       6: invokedynamic #806,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      11: invokeinterface #812,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
      16: ifeq          32
      19: aload_0
      20: invokeinterface #815,  1          // InterfaceMethod resolvedInputs:()Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static boolean resolvedInputs$(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokespecial #815                // InterfaceMethod resolvedInputs:()Z
       4: ireturn

  public default boolean resolvedInputs();
    Code:
       0: iconst_1
       1: ireturn

  private static java.lang.Object recursiveTransform$1$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #822                // InterfaceMethod recursiveTransform$1:(Lscala/PartialFunction;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static java.lang.Object recursiveTransform$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #2                  // class wvlet/airframe/sql/model/Expression
       6: ifeq          22
       9: aload_2
      10: checkcast     #2                  // class wvlet/airframe/sql/model/Expression
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokeinterface #616,  2          // InterfaceMethod transformExpression:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/Expression;
      21: areturn
      22: aload_2
      23: instanceof    #826                // class wvlet/airframe/sql/model/LogicalPlan
      26: ifeq          44
      29: aload_2
      30: checkcast     #826                // class wvlet/airframe/sql/model/LogicalPlan
      33: astore        4
      35: aload         4
      37: aload_0
      38: invokeinterface #830,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
      43: areturn
      44: aload_2
      45: instanceof    #832                // class scala/Some
      48: ifeq          73
      51: aload_2
      52: checkcast     #832                // class scala/Some
      55: invokevirtual #835                // Method scala/Some.value:()Ljava/lang/Object;
      58: astore        5
      60: getstatic     #840                // Field scala/Some$.MODULE$:Lscala/Some$;
      63: aload_0
      64: aload         5
      66: invokestatic  #822                // InterfaceMethod recursiveTransform$1:(Lscala/PartialFunction;Ljava/lang/Object;)Ljava/lang/Object;
      69: invokevirtual #843                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      72: areturn
      73: aload_2
      74: instanceof    #808                // class scala/collection/immutable/Seq
      77: ifeq          100
      80: aload_2
      81: checkcast     #808                // class scala/collection/immutable/Seq
      84: astore        6
      86: aload         6
      88: aload_0
      89: invokedynamic #847,  0            // InvokeDynamic #5:apply:(Lscala/PartialFunction;)Lscala/Function1;
      94: invokeinterface #850,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      99: areturn
     100: aload_2
     101: instanceof    #5                  // class java/lang/Object
     104: ifeq          113
     107: aload_2
     108: astore        7
     110: aload         7
     112: areturn
     113: aload_2
     114: ifnonnull     119
     117: aconst_null
     118: areturn
     119: new           #852                // class scala/MatchError
     122: dup
     123: aload_2
     124: invokespecial #854                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     127: athrow

  private static java.lang.Object $anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #822                // InterfaceMethod recursiveTransform$1:(Lscala/PartialFunction;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static wvlet.airframe.sql.model.Expression transformExpression$$anonfun$1(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: areturn

  private static scala.collection.IterableOnce recursiveCollect$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #866                // InterfaceMethod recursiveCollect$1:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       4: areturn

  private static scala.collection.immutable.List recursiveCollect$1(java.lang.Object);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #2                  // class wvlet/airframe/sql/model/Expression
       6: ifeq          25
       9: aload_1
      10: checkcast     #2                  // class wvlet/airframe/sql/model/Expression
      13: astore_2
      14: aload_2
      15: invokeinterface #707,  1          // InterfaceMethod collectSubExpressions:()Lscala/collection/immutable/List;
      20: aload_2
      21: invokevirtual #869                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
      24: areturn
      25: aload_1
      26: instanceof    #826                // class wvlet/airframe/sql/model/LogicalPlan
      29: ifeq          44
      32: aload_1
      33: checkcast     #826                // class wvlet/airframe/sql/model/LogicalPlan
      36: astore_3
      37: aload_3
      38: invokeinterface #872,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions:()Lscala/collection/immutable/List;
      43: areturn
      44: aload_1
      45: instanceof    #832                // class scala/Some
      48: ifeq          66
      51: aload_1
      52: checkcast     #832                // class scala/Some
      55: invokevirtual #835                // Method scala/Some.value:()Ljava/lang/Object;
      58: astore        4
      60: aload         4
      62: astore_0
      63: goto          0
      66: aload_1
      67: instanceof    #808                // class scala/collection/immutable/Seq
      70: ifeq          100
      73: aload_1
      74: checkcast     #808                // class scala/collection/immutable/Seq
      77: astore        5
      79: aload         5
      81: invokedynamic #876,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
      86: invokeinterface #878,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
      91: checkcast     #880                // class scala/collection/IterableOnceOps
      94: invokeinterface #881,  1          // InterfaceMethod scala/collection/IterableOnceOps.toList:()Lscala/collection/immutable/List;
      99: areturn
     100: aload_1
     101: instanceof    #5                  // class java/lang/Object
     104: ifeq          117
     107: aload_1
     108: astore        6
     110: getstatic     #762                // Field scala/package$.MODULE$:Lscala/package$;
     113: invokevirtual #885                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     116: areturn
     117: aload_1
     118: ifnonnull     128
     121: getstatic     #762                // Field scala/package$.MODULE$:Lscala/package$;
     124: invokevirtual #885                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     127: areturn
     128: new           #852                // class scala/MatchError
     131: dup
     132: aload_1
     133: invokespecial #854                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow

  private static scala.collection.IterableOnce collectSubExpressions$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #866                // InterfaceMethod recursiveCollect$1:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       4: areturn

  private static void recursiveTraverse$1$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #890                // InterfaceMethod recursiveTraverse$1:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  private static void recursiveTraverse$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #2                  // class wvlet/airframe/sql/model/Expression
       6: ifeq          22
       9: aload_2
      10: checkcast     #2                  // class wvlet/airframe/sql/model/Expression
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokeinterface #727,  2          // InterfaceMethod traverseExpressions:(Lscala/PartialFunction;)V
      21: return
      22: aload_2
      23: instanceof    #826                // class wvlet/airframe/sql/model/LogicalPlan
      26: ifeq          44
      29: aload_2
      30: checkcast     #826                // class wvlet/airframe/sql/model/LogicalPlan
      33: astore        4
      35: aload         4
      37: aload_0
      38: invokeinterface #892,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions:(Lscala/PartialFunction;)V
      43: return
      44: aload_2
      45: instanceof    #832                // class scala/Some
      48: ifeq          66
      51: aload_2
      52: checkcast     #832                // class scala/Some
      55: invokevirtual #835                // Method scala/Some.value:()Ljava/lang/Object;
      58: astore        5
      60: aload         5
      62: astore_1
      63: goto          0
      66: aload_2
      67: instanceof    #808                // class scala/collection/immutable/Seq
      70: ifeq          93
      73: aload_2
      74: checkcast     #808                // class scala/collection/immutable/Seq
      77: astore        6
      79: aload         6
      81: aload_0
      82: invokedynamic #896,  0            // InvokeDynamic #7:applyVoid:(Lscala/PartialFunction;)Lscala/runtime/function/JProcedure1;
      87: invokeinterface #897,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
      92: return
      93: aload_2
      94: instanceof    #5                  // class java/lang/Object
      97: ifeq          104
     100: aload_2
     101: astore        7
     103: return
     104: aload_2
     105: ifnonnull     109
     108: return
     109: new           #852                // class scala/MatchError
     112: dup
     113: aload_2
     114: invokespecial #854                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     117: athrow

  private static void traverseExpressions$$anonfun$1(scala.PartialFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #890                // InterfaceMethod recursiveTraverse$1:(Lscala/PartialFunction;Ljava/lang/Object;)V
       5: return

  private static boolean resolvedChildren$$anonfun$1(wvlet.airframe.sql.model.Expression);
    Code:
       0: aload_0
       1: invokeinterface #792,  1          // InterfaceMethod resolved:()Z
       6: ireturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #911,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
