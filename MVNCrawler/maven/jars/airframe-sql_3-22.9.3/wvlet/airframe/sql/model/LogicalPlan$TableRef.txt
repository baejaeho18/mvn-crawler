Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$TableRef implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.LogicalPlan$Relation,wvlet.airframe.sql.model.LeafPlan,java.io.Serializable {
  public static final long OFFSET$0;

  public long 0bitmap$4;

  private final wvlet.airframe.sql.model.Expression$QName name;

  public boolean resolved$lzy4;

  public static wvlet.airframe.sql.model.LogicalPlan$TableRef apply(wvlet.airframe.sql.model.Expression$QName);
    Code:
       0: getstatic     #40                 // Field wvlet/airframe/sql/model/LogicalPlan$TableRef$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$TableRef$;
       3: aload_0
       4: invokevirtual #42                 // Method wvlet/airframe/sql/model/LogicalPlan$TableRef$.apply:(Lwvlet/airframe/sql/model/Expression$QName;)Lwvlet/airframe/sql/model/LogicalPlan$TableRef;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$TableRef fromProduct(scala.Product);
    Code:
       0: getstatic     #40                 // Field wvlet/airframe/sql/model/LogicalPlan$TableRef$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$TableRef$;
       3: aload_0
       4: invokevirtual #46                 // Method wvlet/airframe/sql/model/LogicalPlan$TableRef$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$TableRef;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$TableRef unapply(wvlet.airframe.sql.model.LogicalPlan$TableRef);
    Code:
       0: getstatic     #40                 // Field wvlet/airframe/sql/model/LogicalPlan$TableRef$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$TableRef$;
       3: aload_0
       4: invokevirtual #50                 // Method wvlet/airframe/sql/model/LogicalPlan$TableRef$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$TableRef;)Lwvlet/airframe/sql/model/LogicalPlan$TableRef;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$TableRef(wvlet.airframe.sql.model.Expression$QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field name:Lwvlet/airframe/sql/model/Expression$QName;
       5: aload_0
       6: invokespecial #57                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #61                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      13: return

  private static {};
    Code:
       0: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$TableRef
       5: ldc           #70                 // String 0bitmap$4
       7: invokevirtual #76                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #80                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #82                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #98                 // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #121                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #136                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #140                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #154                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #176                // InterfaceMethod wvlet/airframe/sql/model/LeafPlan.children$:(Lwvlet/airframe/sql/model/LeafPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq inputAttributes();
    Code:
       0: aload_0
       1: invokestatic  #180                // InterfaceMethod wvlet/airframe/sql/model/LeafPlan.inputAttributes$:(Lwvlet/airframe/sql/model/LeafPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #187                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #191                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     73
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$TableRef
      11: ifeq          66
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$TableRef
      18: astore_3
      19: aload_0
      20: invokevirtual #197                // Method name:()Lwvlet/airframe/sql/model/Expression$QName;
      23: aload_3
      24: invokevirtual #197                // Method name:()Lwvlet/airframe/sql/model/Expression$QName;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          62
      42: aload         4
      44: invokevirtual #199                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          62
      50: aload_3
      51: aload_0
      52: invokevirtual #202                // Method canEqual:(Ljava/lang/Object;)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: goto          70
      66: iconst_0
      67: goto          70
      70: ifeq          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #187                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #208                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$TableRef
       4: ireturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #212                // String TableRef
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: aload_0
       8: invokevirtual #218                // Method _1:()Lwvlet/airframe/sql/model/Expression$QName;
      11: areturn
      12: new           #220                // class java/lang/IndexOutOfBoundsException
      15: dup
      16: iload_1
      17: invokestatic  #226                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      20: invokevirtual #230                // Method java/lang/Integer.toString:()Ljava/lang/String;
      23: invokespecial #233                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      26: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     10
       7: ldc           #237                // String name
       9: areturn
      10: new           #220                // class java/lang/IndexOutOfBoundsException
      13: dup
      14: iload_1
      15: invokestatic  #226                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      18: invokevirtual #230                // Method java/lang/Integer.toString:()Ljava/lang/String;
      21: invokespecial #233                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      24: athrow

  public wvlet.airframe.sql.model.Expression$QName name();
    Code:
       0: aload_0
       1: getfield      #54                 // Field name:Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: aload_1
       1: invokevirtual #245                // Method wvlet/airframe/sql/analyzer/QuerySignatureConfig.embedTableNames:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #197                // Method name:()Lwvlet/airframe/sql/model/Expression$QName;
      11: invokevirtual #246                // Method wvlet/airframe/sql/model/Expression$QName.toString:()Ljava/lang/String;
      14: areturn
      15: ldc           #248                // String T
      17: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: getstatic     #256                // Field scala/package$.MODULE$:Lscala/package$;
       3: invokevirtual #260                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
       6: areturn

  public boolean resolved();
    Code:
       0: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #82                 // Field OFFSET$0:J
       7: invokevirtual #267                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #271                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #272                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #275                // Field resolved$lzy4:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          109
      39: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #82                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #279                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          106
      55: iconst_0
      56: istore        5
      58: aload_0
      59: iload         5
      61: putfield      #275                // Field resolved$lzy4:Z
      64: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      67: aload_0
      68: getstatic     #82                 // Field OFFSET$0:J
      71: iconst_3
      72: iconst_0
      73: invokevirtual #283                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      76: iload         5
      78: ireturn
      79: nop
      80: nop
      81: athrow
      82: astore        6
      84: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      87: aload_0
      88: getstatic     #82                 // Field OFFSET$0:J
      91: iconst_0
      92: iconst_0
      93: invokevirtual #283                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      96: aload         6
      98: athrow
      99: nop
     100: nop
     101: athrow
     102: athrow
     103: nop
     104: nop
     105: athrow
     106: goto          0
     109: getstatic     #69                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     112: aload_0
     113: getstatic     #82                 // Field OFFSET$0:J
     116: lload_1
     117: iconst_0
     118: invokevirtual #287                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     121: goto          0
    Exception table:
       from    to  target type
          55    79    82   Class java/lang/Throwable

  public wvlet.airframe.sql.model.LogicalPlan$TableRef copy(wvlet.airframe.sql.model.Expression$QName);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$TableRef
       3: dup
       4: aload_1
       5: invokespecial #290                // Method "<init>":(Lwvlet/airframe/sql/model/Expression$QName;)V
       8: areturn

  public wvlet.airframe.sql.model.Expression$QName copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method name:()Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn

  public wvlet.airframe.sql.model.Expression$QName _1();
    Code:
       0: aload_0
       1: invokevirtual #197                // Method name:()Lwvlet/airframe/sql/model/Expression$QName;
       4: areturn
}
