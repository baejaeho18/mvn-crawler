Compiled from "LogicalPlan.scala"
public class wvlet.airframe.sql.model.LogicalPlan$WithQuery implements scala.Product,wvlet.airframe.sql.model.SQLSig,wvlet.airframe.sql.model.LogicalPlan,wvlet.airframe.sql.model.UnaryPlan,java.io.Serializable {
  public static final long OFFSET$0;

  public boolean resolved$lzy15;

  public long 0bitmap$15;

  private final wvlet.airframe.sql.model.Expression$Identifier name;

  private final wvlet.airframe.sql.model.LogicalPlan$Relation query;

  private final scala.Option columnNames;

  public static wvlet.airframe.sql.model.LogicalPlan$WithQuery apply(wvlet.airframe.sql.model.Expression$Identifier, wvlet.airframe.sql.model.LogicalPlan$Relation, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>);
    Code:
       0: getstatic     #51                 // Field wvlet/airframe/sql/model/LogicalPlan$WithQuery$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$WithQuery$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #53                 // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery$.apply:(Lwvlet/airframe/sql/model/Expression$Identifier;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lscala/Option;)Lwvlet/airframe/sql/model/LogicalPlan$WithQuery;
       9: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$WithQuery fromProduct(scala.Product);
    Code:
       0: getstatic     #51                 // Field wvlet/airframe/sql/model/LogicalPlan$WithQuery$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$WithQuery$;
       3: aload_0
       4: invokevirtual #57                 // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery$.fromProduct:(Lscala/Product;)Lwvlet/airframe/sql/model/LogicalPlan$WithQuery;
       7: areturn

  public static wvlet.airframe.sql.model.LogicalPlan$WithQuery unapply(wvlet.airframe.sql.model.LogicalPlan$WithQuery);
    Code:
       0: getstatic     #51                 // Field wvlet/airframe/sql/model/LogicalPlan$WithQuery$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$WithQuery$;
       3: aload_0
       4: invokevirtual #61                 // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$WithQuery;)Lwvlet/airframe/sql/model/LogicalPlan$WithQuery;
       7: areturn

  public wvlet.airframe.sql.model.LogicalPlan$WithQuery(wvlet.airframe.sql.model.Expression$Identifier, wvlet.airframe.sql.model.LogicalPlan$Relation, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field name:Lwvlet/airframe/sql/model/Expression$Identifier;
       5: aload_0
       6: aload_2
       7: putfield      #68                 // Field query:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      10: aload_0
      11: aload_3
      12: putfield      #70                 // Field columnNames:Lscala/Option;
      15: aload_0
      16: invokespecial #73                 // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #77                 // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.$init$:(Lwvlet/airframe/sql/model/LogicalPlan;)V
      23: return

  private static {};
    Code:
       0: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/model/LogicalPlan$WithQuery
       5: ldc           #86                 // String 0bitmap$15
       7: invokevirtual #92                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #96                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #98                 // Field OFFSET$0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig sig$default$1();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod wvlet/airframe/sql/model/SQLSig.sig$default$1$:(Lwvlet/airframe/sql/model/SQLSig;)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
       4: areturn

  public boolean resolved();
    Code:
       0: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #98                 // Field OFFSET$0:J
       7: invokevirtual #122                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #126                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #127                // long 3l
      24: lcmp
      25: ifne          33
      28: aload_0
      29: getfield      #130                // Field resolved$lzy15:Z
      32: ireturn
      33: lload_3
      34: lconst_0
      35: lcmp
      36: ifne          112
      39: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      42: aload_0
      43: getstatic     #98                 // Field OFFSET$0:J
      46: lload_1
      47: iconst_1
      48: iconst_0
      49: invokevirtual #134                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      52: ifeq          109
      55: aload_0
      56: invokestatic  #138                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
      59: istore        5
      61: aload_0
      62: iload         5
      64: putfield      #130                // Field resolved$lzy15:Z
      67: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #98                 // Field OFFSET$0:J
      74: iconst_3
      75: iconst_0
      76: invokevirtual #142                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      79: iload         5
      81: ireturn
      82: nop
      83: nop
      84: athrow
      85: astore        6
      87: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      90: aload_0
      91: getstatic     #98                 // Field OFFSET$0:J
      94: iconst_0
      95: iconst_0
      96: invokevirtual #142                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      99: aload         6
     101: athrow
     102: nop
     103: nop
     104: athrow
     105: athrow
     106: nop
     107: nop
     108: athrow
     109: goto          0
     112: getstatic     #85                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     115: aload_0
     116: getstatic     #98                 // Field OFFSET$0:J
     119: lload_1
     120: iconst_0
     121: invokevirtual #146                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     124: goto          0
    Exception table:
       from    to  target type
          55    82    85   Class java/lang/Throwable

  public java.lang.String modelName();
    Code:
       0: aload_0
       1: invokestatic  #152                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.modelName$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public java.lang.String pp();
    Code:
       0: aload_0
       1: invokestatic  #156                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp$:(Lwvlet/airframe/sql/model/LogicalPlan;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Seq expressions();
    Code:
       0: aload_0
       1: invokestatic  #162                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.expressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan mapChildren(scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #169                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.mapChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public void traverse(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverse$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public wvlet.airframe.sql.model.LogicalPlan transform(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #184                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan transformExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transformExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public wvlet.airframe.sql.model.LogicalPlan copyInstance(scala.collection.immutable.Seq);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.copyInstance$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan;
       5: areturn

  public scala.collection.immutable.List inputExpressions();
    Code:
       0: aload_0
       1: invokestatic  #202                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.inputExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;)Lscala/collection/immutable/List;
       4: areturn

  public scala.collection.immutable.List collectExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #209                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.collectExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)Lscala/collection/immutable/List;
       5: areturn

  public void traverseExpressions(scala.PartialFunction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #213                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions$:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/PartialFunction;)V
       5: return

  public boolean resolvedChildren();
    Code:
       0: aload_0
       1: invokestatic  #217                // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolvedChildren$:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       4: ireturn

  public scala.collection.immutable.Seq children();
    Code:
       0: aload_0
       1: invokestatic  #222                // InterfaceMethod wvlet/airframe/sql/model/UnaryPlan.children$:(Lwvlet/airframe/sql/model/UnaryPlan;)Lscala/collection/immutable/Seq;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #229                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #233                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     135
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$WithQuery
      11: ifeq          128
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/sql/model/LogicalPlan$WithQuery
      18: astore_3
      19: aload_0
      20: invokevirtual #239                // Method name:()Lwvlet/airframe/sql/model/Expression$Identifier;
      23: aload_3
      24: invokevirtual #239                // Method name:()Lwvlet/airframe/sql/model/Expression$Identifier;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          124
      42: aload         4
      44: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          124
      50: aload_0
      51: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      54: aload_3
      55: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          124
      73: aload         5
      75: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          124
      81: aload_0
      82: invokevirtual #247                // Method columnNames:()Lscala/Option;
      85: aload_3
      86: invokevirtual #247                // Method columnNames:()Lscala/Option;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          124
     104: aload         6
     106: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          124
     112: aload_3
     113: aload_0
     114: invokevirtual #250                // Method canEqual:(Ljava/lang/Object;)Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: goto          132
     128: iconst_0
     129: goto          132
     132: ifeq          139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #229                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #258                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/sql/model/LogicalPlan$WithQuery
       4: ireturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #262                // String WithQuery
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #268                // Method _1:()Lwvlet/airframe/sql/model/Expression$Identifier;
      32: areturn
      33: aload_0
      34: invokevirtual #271                // Method _2:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      37: areturn
      38: aload_0
      39: invokevirtual #274                // Method _3:()Lscala/Option;
      42: areturn
      43: new           #276                // class java/lang/IndexOutOfBoundsException
      46: dup
      47: iload_1
      48: invokestatic  #282                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      51: invokevirtual #286                // Method java/lang/Integer.toString:()Ljava/lang/String;
      54: invokespecial #289                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 32
                     2: 36
               default: 40
          }
      28: ldc_w         #293                // String name
      31: areturn
      32: ldc_w         #294                // String query
      35: areturn
      36: ldc_w         #295                // String columnNames
      39: areturn
      40: new           #276                // class java/lang/IndexOutOfBoundsException
      43: dup
      44: iload_1
      45: invokestatic  #282                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokevirtual #286                // Method java/lang/Integer.toString:()Ljava/lang/String;
      51: invokespecial #289                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow

  public wvlet.airframe.sql.model.Expression$Identifier name();
    Code:
       0: aload_0
       1: getfield      #66                 // Field name:Lwvlet/airframe/sql/model/Expression$Identifier;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation query();
    Code:
       0: aload_0
       1: getfield      #68                 // Field query:Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> columnNames();
    Code:
       0: aload_0
       1: getfield      #70                 // Field columnNames:Lscala/Option;
       4: areturn

  public java.lang.String sig(wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: ldc_w         #301                // String
       3: areturn

  public wvlet.airframe.sql.model.LogicalPlan child();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> inputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: invokeinterface #308,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.inputAttributes:()Lscala/collection/immutable/Seq;
       9: areturn

  public scala.collection.immutable.Seq<wvlet.airframe.sql.model.Attribute> outputAttributes();
    Code:
       0: aload_0
       1: invokevirtual #247                // Method columnNames:()Lscala/Option;
       4: astore_1
       5: aload_1
       6: instanceof    #311                // class scala/Some
       9: ifeq          56
      12: aload_1
      13: checkcast     #311                // class scala/Some
      16: invokevirtual #315                // Method scala/Some.value:()Ljava/lang/Object;
      19: checkcast     #317                // class scala/collection/immutable/Seq
      22: astore_2
      23: aload_0
      24: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      27: invokeinterface #319,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
      32: aload_2
      33: invokeinterface #323,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
      38: checkcast     #325                // class scala/collection/IterableOps
      41: aload_0
      42: invokedynamic #345,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/model/LogicalPlan$WithQuery;)Lscala/Function1;
      47: invokeinterface #349,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
      52: checkcast     #317                // class scala/collection/immutable/Seq
      55: areturn
      56: getstatic     #354                // Field scala/None$.MODULE$:Lscala/None$;
      59: aload_1
      60: invokevirtual #241                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          76
      66: aload_0
      67: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      70: invokeinterface #319,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
      75: areturn
      76: new           #356                // class scala/MatchError
      79: dup
      80: aload_1
      81: invokespecial #359                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      84: athrow

  public wvlet.airframe.sql.model.LogicalPlan$WithQuery copy(wvlet.airframe.sql.model.Expression$Identifier, wvlet.airframe.sql.model.LogicalPlan$Relation, scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>>);
    Code:
       0: new           #2                  // class wvlet/airframe/sql/model/LogicalPlan$WithQuery
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #363                // Method "<init>":(Lwvlet/airframe/sql/model/Expression$Identifier;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lscala/Option;)V
      10: areturn

  public wvlet.airframe.sql.model.Expression$Identifier copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method name:()Lwvlet/airframe/sql/model/Expression$Identifier;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #247                // Method columnNames:()Lscala/Option;
       4: areturn

  public wvlet.airframe.sql.model.Expression$Identifier _1();
    Code:
       0: aload_0
       1: invokevirtual #239                // Method name:()Lwvlet/airframe/sql/model/Expression$Identifier;
       4: areturn

  public wvlet.airframe.sql.model.LogicalPlan$Relation _2();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
       4: areturn

  public scala.Option<scala.collection.immutable.Seq<wvlet.airframe.sql.model.Expression$Identifier>> _3();
    Code:
       0: aload_0
       1: invokevirtual #247                // Method columnNames:()Lscala/Option;
       4: areturn

  private final wvlet.airframe.sql.model.Expression$SingleColumn outputAttributes$$anonfun$2(scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        39
       6: aload_2
       7: invokevirtual #371                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #373                // class wvlet/airframe/sql/model/Attribute
      13: astore_3
      14: aload_2
      15: invokevirtual #375                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #17                 // class wvlet/airframe/sql/model/Expression$Identifier
      21: astore        4
      23: getstatic     #378                // Field wvlet/airframe/sql/model/Expression$SingleColumn$.MODULE$:Lwvlet/airframe/sql/model/Expression$SingleColumn$;
      26: aload_3
      27: getstatic     #383                // Field scala/Some$.MODULE$:Lscala/Some$;
      30: aload         4
      32: invokevirtual #386                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      35: invokevirtual #389                // Method wvlet/airframe/sql/model/Expression$SingleColumn$.apply:(Lwvlet/airframe/sql/model/Expression;Lscala/Option;)Lwvlet/airframe/sql/model/Expression$SingleColumn;
      38: areturn
      39: new           #356                // class scala/MatchError
      42: dup
      43: aload_2
      44: invokespecial #359                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      47: athrow

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #405,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
