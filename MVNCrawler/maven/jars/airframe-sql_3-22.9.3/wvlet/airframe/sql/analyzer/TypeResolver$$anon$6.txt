Compiled from "TypeResolver.scala"
public final class wvlet.airframe.sql.analyzer.TypeResolver$$anon$6 extends scala.runtime.AbstractPartialFunction<wvlet.airframe.sql.model.LogicalPlan, wvlet.airframe.sql.model.LogicalPlan> implements java.io.Serializable {
  public wvlet.airframe.sql.analyzer.TypeResolver$$anon$6();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
       4: return

  public final boolean isDefinedAt(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #19                 // class wvlet/airframe/sql/model/LogicalPlan$Filter
       6: ifeq          50
       9: aload_2
      10: checkcast     #19                 // class wvlet/airframe/sql/model/LogicalPlan$Filter
      13: astore_3
      14: getstatic     #41                 // Field wvlet/airframe/sql/model/LogicalPlan$Filter$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Filter$;
      17: aload_3
      18: invokevirtual #45                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$Filter;)Lwvlet/airframe/sql/model/LogicalPlan$Filter;
      21: astore        4
      23: aload         4
      25: invokevirtual #49                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter._1:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      28: astore        5
      30: aload         4
      32: invokevirtual #53                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter._2:()Lwvlet/airframe/sql/model/Expression;
      35: astore        6
      37: aload         5
      39: astore        7
      41: aload         6
      43: astore        8
      45: aload_3
      46: astore        9
      48: iconst_1
      49: ireturn
      50: aload_2
      51: instanceof    #27                 // class wvlet/airframe/sql/model/LogicalPlan$Relation
      54: ifeq          65
      57: aload_2
      58: checkcast     #27                 // class wvlet/airframe/sql/model/LogicalPlan$Relation
      61: astore        10
      63: iconst_1
      64: ireturn
      65: iconst_0
      66: ireturn

  public final java.lang.Object applyOrElse(wvlet.airframe.sql.model.LogicalPlan, scala.Function1);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #19                 // class wvlet/airframe/sql/model/LogicalPlan$Filter
       6: ifeq          66
       9: aload_3
      10: checkcast     #19                 // class wvlet/airframe/sql/model/LogicalPlan$Filter
      13: astore        4
      15: getstatic     #41                 // Field wvlet/airframe/sql/model/LogicalPlan$Filter$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Filter$;
      18: aload         4
      20: invokevirtual #45                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter$.unapply:(Lwvlet/airframe/sql/model/LogicalPlan$Filter;)Lwvlet/airframe/sql/model/LogicalPlan$Filter;
      23: astore        5
      25: aload         5
      27: invokevirtual #49                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter._1:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      30: astore        6
      32: aload         5
      34: invokevirtual #53                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter._2:()Lwvlet/airframe/sql/model/Expression;
      37: astore        7
      39: aload         6
      41: astore        8
      43: aload         7
      45: astore        9
      47: aload         4
      49: astore        10
      51: aload         10
      53: new           #15                 // class wvlet/airframe/sql/analyzer/TypeResolver$$anon$7
      56: dup
      57: aload         10
      59: invokespecial #67                 // Method wvlet/airframe/sql/analyzer/TypeResolver$$anon$7."<init>":(Lwvlet/airframe/sql/model/LogicalPlan$Filter;)V
      62: invokevirtual #71                 // Method wvlet/airframe/sql/model/LogicalPlan$Filter.transformExpressions:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
      65: areturn
      66: aload_3
      67: instanceof    #27                 // class wvlet/airframe/sql/model/LogicalPlan$Relation
      70: ifeq          96
      73: aload_3
      74: checkcast     #27                 // class wvlet/airframe/sql/model/LogicalPlan$Relation
      77: astore        11
      79: aload         11
      81: new           #17                 // class wvlet/airframe/sql/analyzer/TypeResolver$$anon$8
      84: dup
      85: aload         11
      87: invokespecial #74                 // Method wvlet/airframe/sql/analyzer/TypeResolver$$anon$8."<init>":(Lwvlet/airframe/sql/model/LogicalPlan$Relation;)V
      90: invokeinterface #75,  2           // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.transformExpressions:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
      95: areturn
      96: aload_2
      97: aload_1
      98: invokeinterface #81,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     103: areturn

  public boolean isDefinedAt(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class wvlet/airframe/sql/model/LogicalPlan
       5: invokevirtual #85                 // Method isDefinedAt:(Lwvlet/airframe/sql/model/LogicalPlan;)Z
       8: ireturn

  public java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class wvlet/airframe/sql/model/LogicalPlan
       5: aload_2
       6: invokevirtual #89                 // Method applyOrElse:(Lwvlet/airframe/sql/model/LogicalPlan;Lscala/Function1;)Ljava/lang/Object;
       9: areturn
}
