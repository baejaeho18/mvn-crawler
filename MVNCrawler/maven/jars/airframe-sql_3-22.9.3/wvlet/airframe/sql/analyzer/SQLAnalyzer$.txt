Compiled from "SQLAnalyzer.scala"
public final class wvlet.airframe.sql.analyzer.SQLAnalyzer$ implements wvlet.log.LoggingMethods,wvlet.log.LazyLogger,wvlet.log.LogSupport,java.io.Serializable {
  public static final long OFFSET$_m_0;

  public static wvlet.log.Logger logger$lzy1;

  public long 0bitmap$1;

  public static final wvlet.airframe.sql.analyzer.SQLAnalyzer$ MODULE$;

  private wvlet.airframe.sql.analyzer.SQLAnalyzer$();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object."<init>":()V
       4: return

  private static {};
    Code:
       0: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/analyzer/SQLAnalyzer$
       5: ldc           #37                 // String 0bitmap$1
       7: invokevirtual #43                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #47                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #49                 // Field OFFSET$_m_0:J
      16: new           #2                  // class wvlet/airframe/sql/analyzer/SQLAnalyzer$
      19: dup
      20: invokespecial #50                 // Method "<init>":()V
      23: putstatic     #52                 // Field MODULE$:Lwvlet/airframe/sql/analyzer/SQLAnalyzer$;
      26: return

  public wvlet.log.Logger wvlet$log$LoggingMethods$$inline$logger();
    Code:
       0: aload_0
       1: invokestatic  #58                 // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$logger$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/Logger;
       4: areturn

  public wvlet.log.LoggerMacros$ wvlet$log$LoggingMethods$$inline$LoggerMacros();
    Code:
       0: aload_0
       1: invokestatic  #64                 // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$LoggerMacros$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/LoggerMacros$;
       4: areturn

  public wvlet.log.Logger logger();
    Code:
       0: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #49                 // Field OFFSET$_m_0:J
       7: invokevirtual #71                 // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #75                 // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #76                 // long 3l
      24: lcmp
      25: ifne          32
      28: getstatic     #79                 // Field logger$lzy1:Lwvlet/log/Logger;
      31: areturn
      32: lload_3
      33: lconst_0
      34: lcmp
      35: ifne          110
      38: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      41: aload_0
      42: getstatic     #49                 // Field OFFSET$_m_0:J
      45: lload_1
      46: iconst_1
      47: iconst_0
      48: invokevirtual #83                 // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      51: ifeq          107
      54: aload_0
      55: invokestatic  #87                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      58: astore        5
      60: aload         5
      62: putstatic     #79                 // Field logger$lzy1:Lwvlet/log/Logger;
      65: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      68: aload_0
      69: getstatic     #49                 // Field OFFSET$_m_0:J
      72: iconst_3
      73: iconst_0
      74: invokevirtual #91                 // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      77: aload         5
      79: areturn
      80: nop
      81: nop
      82: athrow
      83: astore        6
      85: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      88: aload_0
      89: getstatic     #49                 // Field OFFSET$_m_0:J
      92: iconst_0
      93: iconst_0
      94: invokevirtual #91                 // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      97: aload         6
      99: athrow
     100: nop
     101: nop
     102: athrow
     103: athrow
     104: nop
     105: nop
     106: athrow
     107: goto          0
     110: getstatic     #36                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     113: aload_0
     114: getstatic     #49                 // Field OFFSET$_m_0:J
     117: lload_1
     118: iconst_0
     119: invokevirtual #95                 // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     122: goto          0
    Exception table:
       from    to  target type
          54    80    83   Class java/lang/Throwable

  private java.lang.Object writeReplace();
    Code:
       0: new           #99                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class wvlet/airframe/sql/analyzer/SQLAnalyzer$
       6: invokespecial #102                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public wvlet.airframe.sql.model.LogicalPlan analyze(java.lang.String, java.lang.String, wvlet.airframe.sql.catalog.Catalog);
    Code:
       0: aload_0
       1: astore        4
       3: aload         4
       5: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
       8: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
      11: invokevirtual #118                // Method wvlet/log/Logger.isEnabled:(Lwvlet/log/LogLevel;)Z
      14: ifeq          63
      17: aload         4
      19: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
      22: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
      25: getstatic     #123                // Field wvlet/log/LogSource$.MODULE$:Lwvlet/log/LogSource$;
      28: ldc           #125                // String
      30: ldc           #126                // String SQLAnalyzer.scala
      32: bipush        60
      34: bipush        30
      36: invokevirtual #130                // Method wvlet/log/LogSource$.apply:(Ljava/lang/String;Ljava/lang/String;II)Lwvlet/log/LogSource;
      39: new           #132                // class java/lang/StringBuilder
      42: dup
      43: ldc           #133                // int 9
      45: invokespecial #136                // Method java/lang/StringBuilder."<init>":(I)V
      48: ldc           #138                // String analyze:\n
      50: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokevirtual #150                // Method wvlet/log/Logger.log:(Lwvlet/log/LogLevel;Lwvlet/log/LogSource;Ljava/lang/Object;)V
      63: aload_0
      64: getstatic     #155                // Field wvlet/airframe/sql/parser/SQLParser$.MODULE$:Lwvlet/airframe/sql/parser/SQLParser$;
      67: aload_1
      68: invokevirtual #159                // Method wvlet/airframe/sql/parser/SQLParser$.parse:(Ljava/lang/String;)Lwvlet/airframe/sql/model/LogicalPlan;
      71: aload_2
      72: aload_3
      73: invokevirtual #162                // Method analyze:(Lwvlet/airframe/sql/model/LogicalPlan;Ljava/lang/String;Lwvlet/airframe/sql/catalog/Catalog;)Lwvlet/airframe/sql/model/LogicalPlan;
      76: areturn

  public wvlet.airframe.sql.model.LogicalPlan analyze(wvlet.airframe.sql.model.LogicalPlan, java.lang.String, wvlet.airframe.sql.catalog.Catalog);
    Code:
       0: aload_1
       1: invokeinterface #172,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.resolved:()Z
       6: ifeq          11
       9: aload_1
      10: areturn
      11: getstatic     #177                // Field wvlet/airframe/sql/analyzer/AnalyzerContext$.MODULE$:Lwvlet/airframe/sql/analyzer/AnalyzerContext$;
      14: aload_2
      15: aload_3
      16: getstatic     #182                // Field scala/Some$.MODULE$:Lscala/Some$;
      19: aload_1
      20: invokeinterface #186,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.outputAttributes:()Lscala/collection/immutable/Seq;
      25: invokevirtual #189                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      28: getstatic     #177                // Field wvlet/airframe/sql/analyzer/AnalyzerContext$.MODULE$:Lwvlet/airframe/sql/analyzer/AnalyzerContext$;
      31: invokevirtual #193                // Method wvlet/airframe/sql/analyzer/AnalyzerContext$.$lessinit$greater$default$4:()Lscala/collection/immutable/Map;
      34: invokevirtual #196                // Method wvlet/airframe/sql/analyzer/AnalyzerContext$.apply:(Ljava/lang/String;Lwvlet/airframe/sql/catalog/Catalog;Lscala/Option;Lscala/collection/immutable/Map;)Lwvlet/airframe/sql/analyzer/AnalyzerContext;
      37: astore        4
      39: aload_0
      40: astore        5
      42: aload         5
      44: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
      47: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
      50: invokevirtual #118                // Method wvlet/log/Logger.isEnabled:(Lwvlet/log/LogLevel;)Z
      53: ifeq          107
      56: aload         5
      58: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
      61: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
      64: getstatic     #123                // Field wvlet/log/LogSource$.MODULE$:Lwvlet/log/LogSource$;
      67: ldc           #125                // String
      69: ldc           #126                // String SQLAnalyzer.scala
      71: bipush        70
      73: bipush        44
      75: invokevirtual #130                // Method wvlet/log/LogSource$.apply:(Ljava/lang/String;Ljava/lang/String;II)Lwvlet/log/LogSource;
      78: new           #132                // class java/lang/StringBuilder
      81: dup
      82: ldc           #197                // int 17
      84: invokespecial #136                // Method java/lang/StringBuilder."<init>":(I)V
      87: ldc           #199                // String Unresolved plan:\n
      89: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokeinterface #202,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp:()Ljava/lang/String;
      98: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokevirtual #150                // Method wvlet/log/Logger.log:(Lwvlet/log/LogLevel;Lwvlet/log/LogSource;Ljava/lang/Object;)V
     107: getstatic     #207                // Field wvlet/airframe/sql/analyzer/TypeResolver$.MODULE$:Lwvlet/airframe/sql/analyzer/TypeResolver$;
     110: aload         4
     112: aload_1
     113: invokevirtual #211                // Method wvlet/airframe/sql/analyzer/TypeResolver$.resolve:(Lwvlet/airframe/sql/analyzer/AnalyzerContext;Lwvlet/airframe/sql/model/LogicalPlan;)Lwvlet/airframe/sql/model/LogicalPlan;
     116: astore        6
     118: aload_0
     119: astore        7
     121: aload         7
     123: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
     126: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
     129: invokevirtual #118                // Method wvlet/log/Logger.isEnabled:(Lwvlet/log/LogLevel;)Z
     132: ifeq          187
     135: aload         7
     137: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
     140: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
     143: getstatic     #123                // Field wvlet/log/LogSource$.MODULE$:Lwvlet/log/LogSource$;
     146: ldc           #125                // String
     148: ldc           #126                // String SQLAnalyzer.scala
     150: bipush        73
     152: bipush        50
     154: invokevirtual #130                // Method wvlet/log/LogSource$.apply:(Ljava/lang/String;Ljava/lang/String;II)Lwvlet/log/LogSource;
     157: new           #132                // class java/lang/StringBuilder
     160: dup
     161: ldc           #212                // int 15
     163: invokespecial #136                // Method java/lang/StringBuilder."<init>":(I)V
     166: ldc           #214                // String Resolved plan:\n
     168: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload         6
     173: invokeinterface #202,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp:()Ljava/lang/String;
     178: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: invokevirtual #150                // Method wvlet/log/Logger.log:(Lwvlet/log/LogLevel;Lwvlet/log/LogSource;Ljava/lang/Object;)V
     187: getstatic     #219                // Field wvlet/airframe/sql/analyzer/Optimizer$.MODULE$:Lwvlet/airframe/sql/analyzer/Optimizer$;
     190: invokevirtual #223                // Method wvlet/airframe/sql/analyzer/Optimizer$.optimizerRules:()Lscala/collection/immutable/List;
     193: aload         6
     195: aload_0
     196: aload         4
     198: invokedynamic #244,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/analyzer/SQLAnalyzer$;Lwvlet/airframe/sql/analyzer/AnalyzerContext;)Lscala/Function2;
     203: invokevirtual #250                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
     206: checkcast     #168                // class wvlet/airframe/sql/model/LogicalPlan
     209: astore        8
     211: aload_0
     212: astore        9
     214: aload         9
     216: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
     219: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
     222: invokevirtual #118                // Method wvlet/log/Logger.isEnabled:(Lwvlet/log/LogLevel;)Z
     225: ifeq          280
     228: aload         9
     230: invokevirtual #109                // Method wvlet$log$LoggingMethods$$inline$logger:()Lwvlet/log/Logger;
     233: getstatic     #112                // Field wvlet/log/LogLevel$DEBUG$.MODULE$:Lwvlet/log/LogLevel$DEBUG$;
     236: getstatic     #123                // Field wvlet/log/LogSource$.MODULE$:Lwvlet/log/LogSource$;
     239: ldc           #125                // String
     241: ldc           #126                // String SQLAnalyzer.scala
     243: bipush        81
     245: bipush        46
     247: invokevirtual #130                // Method wvlet/log/LogSource$.apply:(Ljava/lang/String;Ljava/lang/String;II)Lwvlet/log/LogSource;
     250: new           #132                // class java/lang/StringBuilder
     253: dup
     254: ldc           #251                // int 10
     256: invokespecial #136                // Method java/lang/StringBuilder."<init>":(I)V
     259: ldc           #253                // String new plan:\n
     261: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: aload         8
     266: invokeinterface #202,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.pp:()Ljava/lang/String;
     271: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: invokevirtual #146                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     277: invokevirtual #150                // Method wvlet/log/Logger.log:(Lwvlet/log/LogLevel;Lwvlet/log/LogSource;Ljava/lang/Object;)V
     280: aload         8
     282: areturn

  private final wvlet.airframe.sql.model.LogicalPlan $anonfun$1(wvlet.airframe.sql.analyzer.AnalyzerContext, wvlet.airframe.sql.model.LogicalPlan, scala.Function1);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #268,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #270                // class scala/PartialFunction
      10: astore        4
      12: aload_2
      13: aload         4
      15: invokeinterface #274,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
      20: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #289,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
