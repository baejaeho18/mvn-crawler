Compiled from "Graph.scala"
public final class wvlet.airframe.sql.analyzer.EdgeOrdering {
  public static boolean canEqual(java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #25                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.canEqual:(Ljava/lang/Object;)Z
       7: ireturn

  public static int compare(wvlet.airframe.sql.analyzer.Edge, wvlet.airframe.sql.analyzer.Edge);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #29                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.compare:(Lwvlet/airframe/sql/analyzer/Edge;Lwvlet/airframe/sql/analyzer/Edge;)I
       8: ireturn

  public static boolean equiv(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #33                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.equiv:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public static scala.deriving.Mirror$Singleton fromProduct(scala.Product);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #37                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.fromProduct:(Lscala/Product;)Lscala/deriving/Mirror$Singleton;
       7: areturn

  public static boolean gt(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #40                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.gt:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public static boolean gteq(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #43                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.gteq:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public static int hashCode();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #47                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.hashCode:()I
       6: ireturn

  public static boolean isReverseOf(scala.math.Ordering<?>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #52                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.isReverseOf:(Lscala/math/Ordering;)Z
       7: ireturn

  public static boolean lt(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #55                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.lt:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public static boolean lteq(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #58                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.lteq:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public static java.lang.Object max(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #62                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.max:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static java.lang.Object min(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #65                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.min:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public static scala.math.Ordering$OrderingOps mkOrderingOps(java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #69                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.mkOrderingOps:(Ljava/lang/Object;)Lscala/math/Ordering$OrderingOps;
       7: areturn

  public static <U> scala.math.Ordering<U> on(scala.Function1<U, wvlet.airframe.sql.analyzer.Edge>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #74                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.on:(Lscala/Function1;)Lscala/math/Ordering;
       7: areturn

  public static scala.math.Ordering<wvlet.airframe.sql.analyzer.Edge> orElse(scala.math.Ordering<wvlet.airframe.sql.analyzer.Edge>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #79                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.orElse:(Lscala/math/Ordering;)Lscala/math/Ordering;
       7: areturn

  public static <S> scala.math.Ordering<wvlet.airframe.sql.analyzer.Edge> orElseBy(scala.Function1<wvlet.airframe.sql.analyzer.Edge, S>, scala.math.Ordering<S>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #84                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.orElseBy:(Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
       8: areturn

  public static int productArity();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #87                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.productArity:()I
       6: ireturn

  public static java.lang.Object productElement(int);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: iload_0
       4: invokevirtual #91                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.productElement:(I)Ljava/lang/Object;
       7: areturn

  public static java.lang.String productElementName(int);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: iload_0
       4: invokevirtual #95                 // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.productElementName:(I)Ljava/lang/String;
       7: areturn

  public static scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #100                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.productElementNames:()Lscala/collection/Iterator;
       6: areturn

  public static scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #104                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.productIterator:()Lscala/collection/Iterator;
       6: areturn

  public static java.lang.String productPrefix();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #108                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.productPrefix:()Ljava/lang/String;
       6: areturn

  public static scala.math.Ordering<wvlet.airframe.sql.analyzer.Edge> reverse();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #113                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.reverse:()Lscala/math/Ordering;
       6: areturn

  public static scala.math.PartialOrdering<wvlet.airframe.sql.analyzer.Edge> reverse();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #117                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.reverse:()Lscala/math/PartialOrdering;
       6: areturn

  public static java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> reversed();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #122                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.reversed:()Ljava/util/Comparator;
       6: areturn

  public static java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> thenComparing(java.util.Comparator<? super wvlet.airframe.sql.analyzer.Edge>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #127                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.thenComparing:(Ljava/util/Comparator;)Ljava/util/Comparator;
       7: areturn

  public static <U extends java.lang.Comparable<? super U>> java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> thenComparing(java.util.function.Function<? super wvlet.airframe.sql.analyzer.Edge, ? extends U>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #131                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.thenComparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
       7: areturn

  public static <U> java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> thenComparing(java.util.function.Function<? super wvlet.airframe.sql.analyzer.Edge, ? extends U>, java.util.Comparator<? super U>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #135                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.thenComparing:(Ljava/util/function/Function;Ljava/util/Comparator;)Ljava/util/Comparator;
       8: areturn

  public static java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> thenComparingDouble(java.util.function.ToDoubleFunction<? super wvlet.airframe.sql.analyzer.Edge>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #140                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.thenComparingDouble:(Ljava/util/function/ToDoubleFunction;)Ljava/util/Comparator;
       7: areturn

  public static java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> thenComparingInt(java.util.function.ToIntFunction<? super wvlet.airframe.sql.analyzer.Edge>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #145                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.thenComparingInt:(Ljava/util/function/ToIntFunction;)Ljava/util/Comparator;
       7: areturn

  public static java.util.Comparator<wvlet.airframe.sql.analyzer.Edge> thenComparingLong(java.util.function.ToLongFunction<? super wvlet.airframe.sql.analyzer.Edge>);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: invokevirtual #150                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.thenComparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;
       7: areturn

  public static java.lang.String toString();
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: invokevirtual #153                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.toString:()Ljava/lang/String;
       6: areturn

  public static scala.Some tryCompare(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #23                 // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
       3: aload_0
       4: aload_1
       5: invokevirtual #157                // Method wvlet/airframe/sql/analyzer/EdgeOrdering$.tryCompare:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Some;
       8: areturn
}
