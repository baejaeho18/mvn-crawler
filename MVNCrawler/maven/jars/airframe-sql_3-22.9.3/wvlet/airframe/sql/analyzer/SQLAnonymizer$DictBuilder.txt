Compiled from "SQLAnonymizer.scala"
public class wvlet.airframe.sql.analyzer.SQLAnonymizer$DictBuilder {
  private final scala.collection.mutable.Builder m;

  private final wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable identifierTable;

  private wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable stringLiteralTable;

  private wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable longLiteralTable;

  private wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable qnameTable;

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$DictBuilder();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #30                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: invokevirtual #34                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      11: invokevirtual #40                 // Method scala/collection/immutable/Map$.newBuilder:()Lscala/collection/mutable/Builder;
      14: putfield      #42                 // Field m:Lscala/collection/mutable/Builder;
      17: aload_0
      18: new           #12                 // class wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable
      21: dup
      22: ldc           #44                 // String i
      24: invokespecial #47                 // Method wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable."<init>":(Ljava/lang/String;)V
      27: putfield      #49                 // Field identifierTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
      30: aload_0
      31: new           #12                 // class wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable
      34: dup
      35: ldc           #51                 // String s
      37: invokespecial #47                 // Method wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable."<init>":(Ljava/lang/String;)V
      40: putfield      #53                 // Field stringLiteralTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
      43: aload_0
      44: new           #12                 // class wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable
      47: dup
      48: ldc           #55                 // String l
      50: invokespecial #47                 // Method wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable."<init>":(Ljava/lang/String;)V
      53: putfield      #57                 // Field longLiteralTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
      56: aload_0
      57: new           #12                 // class wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable
      60: dup
      61: ldc           #59                 // String t
      63: invokespecial #47                 // Method wvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable."<init>":(Ljava/lang/String;)V
      66: putfield      #61                 // Field qnameTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
      69: return

  public scala.collection.mutable.Builder<scala.Tuple2<wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression>, scala.collection.immutable.Map<wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression>> m();
    Code:
       0: aload_0
       1: getfield      #42                 // Field m:Lscala/collection/mutable/Builder;
       4: areturn

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable identifierTable();
    Code:
       0: aload_0
       1: getfield      #49                 // Field identifierTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       4: areturn

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable stringLiteralTable();
    Code:
       0: aload_0
       1: getfield      #53                 // Field stringLiteralTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       4: areturn

  public void stringLiteralTable_$eq(wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field stringLiteralTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       5: return

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable longLiteralTable();
    Code:
       0: aload_0
       1: getfield      #57                 // Field longLiteralTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       4: areturn

  public void longLiteralTable_$eq(wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field longLiteralTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       5: return

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable qnameTable();
    Code:
       0: aload_0
       1: getfield      #61                 // Field qnameTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       4: areturn

  public void qnameTable_$eq(wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field qnameTable:Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;
       5: return

  public scala.collection.immutable.Map<wvlet.airframe.sql.model.Expression, wvlet.airframe.sql.model.Expression> build();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method m:()Lscala/collection/mutable/Builder;
       4: invokeinterface #81,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       9: checkcast     #83                 // class scala/collection/immutable/Map
      12: areturn

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$DictBuilder add(wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_1
       1: new           #10                 // class wvlet/airframe/sql/analyzer/SQLAnonymizer$DictBuilder$$anon$3
       4: dup
       5: aload_0
       6: invokespecial #89                 // Method wvlet/airframe/sql/analyzer/SQLAnonymizer$DictBuilder$$anon$3."<init>":(Lwvlet/airframe/sql/analyzer/SQLAnonymizer$DictBuilder;)V
       9: invokeinterface #95,  2           // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.traverseExpressions:(Lscala/PartialFunction;)V
      14: aload_0
      15: areturn
}
