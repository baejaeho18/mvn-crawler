Compiled from "CTEResolver.scala"
public final class wvlet.airframe.sql.analyzer.CTEResolver$ implements wvlet.log.LoggingMethods,wvlet.log.LazyLogger,wvlet.log.LogSupport,java.io.Serializable {
  public static final long OFFSET$_m_0;

  public static wvlet.log.Logger logger$lzy1;

  public long 0bitmap$1;

  public static final wvlet.airframe.sql.analyzer.CTEResolver$ MODULE$;

  private wvlet.airframe.sql.analyzer.CTEResolver$();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method java/lang/Object."<init>":()V
       4: return

  private static {};
    Code:
       0: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/analyzer/CTEResolver$
       5: ldc           #67                 // String 0bitmap$1
       7: invokevirtual #73                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #77                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #79                 // Field OFFSET$_m_0:J
      16: new           #2                  // class wvlet/airframe/sql/analyzer/CTEResolver$
      19: dup
      20: invokespecial #80                 // Method "<init>":()V
      23: putstatic     #82                 // Field MODULE$:Lwvlet/airframe/sql/analyzer/CTEResolver$;
      26: return

  public wvlet.log.Logger wvlet$log$LoggingMethods$$inline$logger();
    Code:
       0: aload_0
       1: invokestatic  #88                 // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$logger$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/Logger;
       4: areturn

  public wvlet.log.LoggerMacros$ wvlet$log$LoggingMethods$$inline$LoggerMacros();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$LoggerMacros$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/LoggerMacros$;
       4: areturn

  public wvlet.log.Logger logger();
    Code:
       0: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #79                 // Field OFFSET$_m_0:J
       7: invokevirtual #101                // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #105                // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #106                // long 3l
      24: lcmp
      25: ifne          32
      28: getstatic     #109                // Field logger$lzy1:Lwvlet/log/Logger;
      31: areturn
      32: lload_3
      33: lconst_0
      34: lcmp
      35: ifne          110
      38: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      41: aload_0
      42: getstatic     #79                 // Field OFFSET$_m_0:J
      45: lload_1
      46: iconst_1
      47: iconst_0
      48: invokevirtual #113                // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      51: ifeq          107
      54: aload_0
      55: invokestatic  #117                // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      58: astore        5
      60: aload         5
      62: putstatic     #109                // Field logger$lzy1:Lwvlet/log/Logger;
      65: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      68: aload_0
      69: getstatic     #79                 // Field OFFSET$_m_0:J
      72: iconst_3
      73: iconst_0
      74: invokevirtual #121                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      77: aload         5
      79: areturn
      80: nop
      81: nop
      82: athrow
      83: astore        6
      85: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      88: aload_0
      89: getstatic     #79                 // Field OFFSET$_m_0:J
      92: iconst_0
      93: iconst_0
      94: invokevirtual #121                // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      97: aload         6
      99: athrow
     100: nop
     101: nop
     102: athrow
     103: athrow
     104: nop
     105: nop
     106: athrow
     107: goto          0
     110: getstatic     #66                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     113: aload_0
     114: getstatic     #79                 // Field OFFSET$_m_0:J
     117: lload_1
     118: iconst_0
     119: invokevirtual #125                // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     122: goto          0
    Exception table:
       from    to  target type
          54    80    83   Class java/lang/Throwable

  private java.lang.Object writeReplace();
    Code:
       0: new           #129                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class wvlet/airframe/sql/analyzer/CTEResolver$
       6: invokespecial #132                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public wvlet.airframe.sql.model.LogicalPlan resolveCTE(wvlet.airframe.sql.analyzer.AnalyzerContext, wvlet.airframe.sql.model.LogicalPlan);
    Code:
       0: aload_2
       1: new           #20                 // class wvlet/airframe/sql/analyzer/CTEResolver$$anon$1
       4: dup
       5: aload_1
       6: invokespecial #139                // Method wvlet/airframe/sql/analyzer/CTEResolver$$anon$1."<init>":(Lwvlet/airframe/sql/analyzer/AnalyzerContext;)V
       9: invokeinterface #143,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.transform:(Lscala/PartialFunction;)Lwvlet/airframe/sql/model/LogicalPlan;
      14: areturn

  private static final wvlet.airframe.sql.model.Attribute $anonfun$2(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        43
       6: aload_1
       7: invokevirtual #153                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #155                // class wvlet/airframe/sql/model/Attribute
      13: astore_2
      14: aload_1
      15: invokevirtual #158                // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: checkcast     #22                 // class wvlet/airframe/sql/model/Expression$Identifier
      21: astore_3
      22: getstatic     #163                // Field wvlet/airframe/sql/analyzer/TypeResolver$.MODULE$:Lwvlet/airframe/sql/analyzer/TypeResolver$;
      25: getstatic     #166                // Field wvlet/airframe/sql/model/Expression$SingleColumn$.MODULE$:Lwvlet/airframe/sql/model/Expression$SingleColumn$;
      28: aload_2
      29: getstatic     #171                // Field scala/Some$.MODULE$:Lscala/Some$;
      32: aload_3
      33: invokevirtual #175                // Method scala/Some$.apply:(Ljava/lang/Object;)Lscala/Some;
      36: invokevirtual #178                // Method wvlet/airframe/sql/model/Expression$SingleColumn$.apply:(Lwvlet/airframe/sql/model/Expression;Lscala/Option;)Lwvlet/airframe/sql/model/Expression$SingleColumn;
      39: invokevirtual #182                // Method wvlet/airframe/sql/analyzer/TypeResolver$.resolveAttribute:(Lwvlet/airframe/sql/model/Attribute;)Lwvlet/airframe/sql/model/Attribute;
      42: areturn
      43: new           #184                // class scala/MatchError
      46: dup
      47: aload_1
      48: invokespecial #187                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      51: athrow

  public static final wvlet.airframe.sql.model.LogicalPlan$WithQuery wvlet$airframe$sql$analyzer$CTEResolver$$anon$1$$_$_$$anonfun$1(scala.runtime.ObjectRef, wvlet.airframe.sql.model.LogicalPlan$WithQuery);
    Code:
       0: getstatic     #163                // Field wvlet/airframe/sql/analyzer/TypeResolver$.MODULE$:Lwvlet/airframe/sql/analyzer/TypeResolver$;
       3: aload_0
       4: getfield      #202                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       7: checkcast     #204                // class wvlet/airframe/sql/analyzer/AnalyzerContext
      10: aload_1
      11: invokevirtual #208                // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery.query:()Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      14: invokevirtual #212                // Method wvlet/airframe/sql/analyzer/TypeResolver$.resolveRelation:(Lwvlet/airframe/sql/analyzer/AnalyzerContext;Lwvlet/airframe/sql/model/LogicalPlan;)Lwvlet/airframe/sql/model/LogicalPlan$Relation;
      17: astore_2
      18: aload_1
      19: invokevirtual #216                // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery.columnNames:()Lscala/Option;
      22: astore        4
      24: getstatic     #221                // Field scala/None$.MODULE$:Lscala/None$;
      27: aload         4
      29: invokevirtual #225                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ifeq          39
      35: aload_2
      36: goto          186
      39: aload         4
      41: instanceof    #227                // class scala/Some
      44: ifeq          176
      47: aload         4
      49: checkcast     #227                // class scala/Some
      52: invokevirtual #230                // Method scala/Some.value:()Ljava/lang/Object;
      55: checkcast     #232                // class scala/collection/immutable/Seq
      58: astore        5
      60: aload_2
      61: invokeinterface #236,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
      66: invokeinterface #240,  1          // InterfaceMethod scala/collection/immutable/Seq.size:()I
      71: aload         5
      73: invokeinterface #240,  1          // InterfaceMethod scala/collection/immutable/Seq.size:()I
      78: if_icmpeq     133
      81: getstatic     #243                // Field wvlet/airframe/sql/SQLErrorCode$SyntaxError$.MODULE$:Lwvlet/airframe/sql/SQLErrorCode$SyntaxError$;
      84: new           #245                // class java/lang/StringBuilder
      87: dup
      88: ldc           #246                // int 55
      90: invokespecial #249                // Method java/lang/StringBuilder."<init>":(I)V
      93: ldc           #251                // String A wrong number of columns
      95: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload         5
     100: invokeinterface #240,  1          // InterfaceMethod scala/collection/immutable/Seq.size:()I
     105: invokevirtual #258                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     108: ldc_w         #260                // String  is used for WITH statement:
     111: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_1
     115: invokevirtual #264                // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery.name:()Lwvlet/airframe/sql/model/Expression$Identifier;
     118: invokeinterface #267,  1          // InterfaceMethod wvlet/airframe/sql/model/Expression$Identifier.value:()Ljava/lang/String;
     123: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: invokevirtual #270                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokevirtual #274                // Method wvlet/airframe/sql/SQLErrorCode$SyntaxError$.newException:(Ljava/lang/String;)Lwvlet/airframe/sql/SQLError;
     132: athrow
     133: aload_2
     134: invokeinterface #236,  1          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan$Relation.outputAttributes:()Lscala/collection/immutable/Seq;
     139: aload         5
     141: invokeinterface #278,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
     146: checkcast     #280                // class scala/collection/IterableOps
     149: invokedynamic #298,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
     154: invokeinterface #302,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
     159: checkcast     #232                // class scala/collection/immutable/Seq
     162: astore        6
     164: getstatic     #305                // Field wvlet/airframe/sql/model/LogicalPlan$Project$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$Project$;
     167: aload_2
     168: aload         6
     170: invokevirtual #308                // Method wvlet/airframe/sql/model/LogicalPlan$Project$.apply:(Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lscala/collection/immutable/Seq;)Lwvlet/airframe/sql/model/LogicalPlan$Project;
     173: goto          186
     176: new           #184                // class scala/MatchError
     179: dup
     180: aload         4
     182: invokespecial #187                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     185: athrow
     186: astore_3
     187: aload_0
     188: getfield      #202                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
     191: checkcast     #204                // class wvlet/airframe/sql/analyzer/AnalyzerContext
     194: aload_1
     195: invokevirtual #264                // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery.name:()Lwvlet/airframe/sql/model/Expression$Identifier;
     198: invokeinterface #267,  1          // InterfaceMethod wvlet/airframe/sql/model/Expression$Identifier.value:()Ljava/lang/String;
     203: aload_3
     204: invokevirtual #312                // Method wvlet/airframe/sql/analyzer/AnalyzerContext.withOuterQuery:(Ljava/lang/String;Lwvlet/airframe/sql/model/LogicalPlan;)Lwvlet/airframe/sql/analyzer/AnalyzerContext;
     207: astore        7
     209: aload_0
     210: aload         7
     212: putfield      #202                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
     215: aconst_null
     216: checkcast     #204                // class wvlet/airframe/sql/analyzer/AnalyzerContext
     219: astore        7
     221: getstatic     #315                // Field wvlet/airframe/sql/model/LogicalPlan$WithQuery$.MODULE$:Lwvlet/airframe/sql/model/LogicalPlan$WithQuery$;
     224: aload_1
     225: invokevirtual #264                // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery.name:()Lwvlet/airframe/sql/model/Expression$Identifier;
     228: aload_3
     229: getstatic     #221                // Field scala/None$.MODULE$:Lscala/None$;
     232: invokevirtual #318                // Method wvlet/airframe/sql/model/LogicalPlan$WithQuery$.apply:(Lwvlet/airframe/sql/model/Expression$Identifier;Lwvlet/airframe/sql/model/LogicalPlan$Relation;Lscala/Option;)Lwvlet/airframe/sql/model/LogicalPlan$WithQuery;
     235: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #340,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
