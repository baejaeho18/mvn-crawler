Compiled from "SQLAnonymizer.scala"
public class wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable {
  private final java.lang.String prefix;

  private final java.util.concurrent.atomic.AtomicInteger count;

  private final scala.collection.mutable.Map<java.lang.String, java.lang.String> symbolTable;

  public wvlet.airframe.sql.analyzer.SQLAnonymizer$SymbolTable(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field prefix:Ljava/lang/String;
       5: aload_0
       6: invokespecial #22                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #24                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: iconst_0
      15: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #29                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: getstatic     #35                 // Field scala/collection/mutable/Map$.MODULE$:Lscala/collection/mutable/Map$;
      25: invokevirtual #39                 // Method scala/collection/mutable/Map$.empty:()Ljava/lang/Object;
      28: checkcast     #41                 // class scala/collection/mutable/Map
      31: putfield      #43                 // Field symbolTable:Lscala/collection/mutable/Map;
      34: return

  public java.lang.String lookup(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #43                 // Field symbolTable:Lscala/collection/mutable/Map;
       4: aload_1
       5: aload_0
       6: invokedynamic #68,  0             // InvokeDynamic #0:apply:(Lwvlet/airframe/sql/analyzer/SQLAnonymizer$SymbolTable;)Lscala/Function0;
      11: invokeinterface #72,  3           // InterfaceMethod scala/collection/mutable/Map.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      16: checkcast     #74                 // class java/lang/String
      19: areturn

  private final java.lang.String lookup$$anonfun$1();
    Code:
       0: aload_0
       1: getfield      #29                 // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: istore_1
       8: new           #80                 // class java/lang/StringBuilder
      11: dup
      12: ldc           #81                 // int 0
      14: invokespecial #82                 // Method java/lang/StringBuilder."<init>":(I)V
      17: aload_0
      18: getfield      #19                 // Field prefix:Ljava/lang/String;
      21: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #106,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
