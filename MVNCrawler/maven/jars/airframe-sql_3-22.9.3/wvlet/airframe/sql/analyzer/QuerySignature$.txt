Compiled from "QuerySignature.scala"
public final class wvlet.airframe.sql.analyzer.QuerySignature$ implements wvlet.log.LoggingMethods,wvlet.log.LazyLogger,wvlet.log.LogSupport,java.io.Serializable {
  public static final long OFFSET$_m_0;

  public static wvlet.log.Logger logger$lzy1;

  public long 0bitmap$1;

  public static final wvlet.airframe.sql.analyzer.QuerySignature$ MODULE$;

  private wvlet.airframe.sql.analyzer.QuerySignature$();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: return

  private static {};
    Code:
       0: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/sql/analyzer/QuerySignature$
       5: ldc           #32                 // String 0bitmap$1
       7: invokevirtual #38                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #42                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #44                 // Field OFFSET$_m_0:J
      16: new           #2                  // class wvlet/airframe/sql/analyzer/QuerySignature$
      19: dup
      20: invokespecial #45                 // Method "<init>":()V
      23: putstatic     #47                 // Field MODULE$:Lwvlet/airframe/sql/analyzer/QuerySignature$;
      26: return

  public wvlet.log.Logger wvlet$log$LoggingMethods$$inline$logger();
    Code:
       0: aload_0
       1: invokestatic  #53                 // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$logger$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/Logger;
       4: areturn

  public wvlet.log.LoggerMacros$ wvlet$log$LoggingMethods$$inline$LoggerMacros();
    Code:
       0: aload_0
       1: invokestatic  #59                 // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$LoggerMacros$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/LoggerMacros$;
       4: areturn

  public wvlet.log.Logger logger();
    Code:
       0: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: aload_0
       4: getstatic     #44                 // Field OFFSET$_m_0:J
       7: invokevirtual #66                 // Method scala/runtime/LazyVals$.get:(Ljava/lang/Object;J)J
      10: lstore_1
      11: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      14: lload_1
      15: iconst_0
      16: invokevirtual #70                 // Method scala/runtime/LazyVals$.STATE:(JI)J
      19: lstore_3
      20: lload_3
      21: ldc2_w        #71                 // long 3l
      24: lcmp
      25: ifne          32
      28: getstatic     #74                 // Field logger$lzy1:Lwvlet/log/Logger;
      31: areturn
      32: lload_3
      33: lconst_0
      34: lcmp
      35: ifne          110
      38: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      41: aload_0
      42: getstatic     #44                 // Field OFFSET$_m_0:J
      45: lload_1
      46: iconst_1
      47: iconst_0
      48: invokevirtual #78                 // Method scala/runtime/LazyVals$.CAS:(Ljava/lang/Object;JJII)Z
      51: ifeq          107
      54: aload_0
      55: invokestatic  #82                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      58: astore        5
      60: aload         5
      62: putstatic     #74                 // Field logger$lzy1:Lwvlet/log/Logger;
      65: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      68: aload_0
      69: getstatic     #44                 // Field OFFSET$_m_0:J
      72: iconst_3
      73: iconst_0
      74: invokevirtual #86                 // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      77: aload         5
      79: areturn
      80: nop
      81: nop
      82: athrow
      83: astore        6
      85: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      88: aload_0
      89: getstatic     #44                 // Field OFFSET$_m_0:J
      92: iconst_0
      93: iconst_0
      94: invokevirtual #86                 // Method scala/runtime/LazyVals$.setFlag:(Ljava/lang/Object;JII)V
      97: aload         6
      99: athrow
     100: nop
     101: nop
     102: athrow
     103: athrow
     104: nop
     105: nop
     106: athrow
     107: goto          0
     110: getstatic     #31                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     113: aload_0
     114: getstatic     #44                 // Field OFFSET$_m_0:J
     117: lload_1
     118: iconst_0
     119: invokevirtual #90                 // Method scala/runtime/LazyVals$.wait4Notification:(Ljava/lang/Object;JJI)V
     122: goto          0
    Exception table:
       from    to  target type
          54    80    83   Class java/lang/Throwable

  private java.lang.Object writeReplace();
    Code:
       0: new           #94                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class wvlet/airframe/sql/analyzer/QuerySignature$
       6: invokespecial #97                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public java.lang.String of(java.lang.String, wvlet.airframe.sql.analyzer.QuerySignatureConfig);
    Code:
       0: getstatic     #106                // Field wvlet/airframe/sql/parser/SQLParser$.MODULE$:Lwvlet/airframe/sql/parser/SQLParser$;
       3: aload_1
       4: invokevirtual #110                // Method wvlet/airframe/sql/parser/SQLParser$.parse:(Ljava/lang/String;)Lwvlet/airframe/sql/model/LogicalPlan;
       7: astore_3
       8: getstatic     #115                // Field wvlet/airframe/sql/analyzer/TableGraph$.MODULE$:Lwvlet/airframe/sql/analyzer/TableGraph$;
      11: aload_3
      12: invokevirtual #118                // Method wvlet/airframe/sql/analyzer/TableGraph$.of:(Lwvlet/airframe/sql/model/LogicalPlan;)Lwvlet/airframe/sql/analyzer/Graph;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokevirtual #122                // Method printEdges:(Lwvlet/airframe/sql/analyzer/Graph;)Ljava/lang/String;
      23: astore        5
      25: aload_3
      26: aload_2
      27: invokeinterface #128,  2          // InterfaceMethod wvlet/airframe/sql/model/LogicalPlan.sig:(Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;)Ljava/lang/String;
      32: astore        6
      34: new           #130                // class java/lang/StringBuilder
      37: dup
      38: ldc           #131                // int 1
      40: invokespecial #134                // Method java/lang/StringBuilder."<init>":(I)V
      43: aload         6
      45: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #140                // String
      50: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload         5
      55: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #144                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public wvlet.airframe.sql.analyzer.QuerySignatureConfig of$default$2();
    Code:
       0: getstatic     #158                // Field wvlet/airframe/sql/analyzer/QuerySignatureConfig$.MODULE$:Lwvlet/airframe/sql/analyzer/QuerySignatureConfig$;
       3: getstatic     #158                // Field wvlet/airframe/sql/analyzer/QuerySignatureConfig$.MODULE$:Lwvlet/airframe/sql/analyzer/QuerySignatureConfig$;
       6: invokevirtual #162                // Method wvlet/airframe/sql/analyzer/QuerySignatureConfig$.$lessinit$greater$default$1:()Z
       9: invokevirtual #166                // Method wvlet/airframe/sql/analyzer/QuerySignatureConfig$.apply:(Z)Lwvlet/airframe/sql/analyzer/QuerySignatureConfig;
      12: areturn

  public java.lang.String normalizeTableName(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ldc           #171                // String _[0-9a-fA-F]+$
       5: ldc           #173                // String _X
       7: invokevirtual #179                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ldc           #181                // String [0-9]+
      14: ldc           #183                // String N
      16: invokevirtual #179                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: areturn

  public java.lang.String printEdges(wvlet.airframe.sql.analyzer.Graph);
    Code:
       0: aload_1
       1: invokevirtual #190                // Method wvlet/airframe/sql/analyzer/Graph.edges:()Lscala/collection/immutable/Set;
       4: invokeinterface #196,  1          // InterfaceMethod scala/collection/immutable/Set.toSeq:()Lscala/collection/immutable/Seq;
       9: getstatic     #201                // Field wvlet/airframe/sql/analyzer/EdgeOrdering$.MODULE$:Lwvlet/airframe/sql/analyzer/EdgeOrdering$;
      12: invokeinterface #207,  2          // InterfaceMethod scala/collection/immutable/Seq.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
      17: checkcast     #203                // class scala/collection/immutable/Seq
      20: astore_2
      21: aload_2
      22: ldc           #209                // String ,
      24: invokeinterface #212,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
      29: astore_3
      30: aload_3
      31: areturn
}
