Compiled from "GenericTestContainerProvider.java"
public class io.micronaut.testresources.testcontainers.GenericTestContainerProvider implements io.micronaut.testresources.core.TestResourcesResolver {
  private static final org.slf4j.Logger LOGGER;

  public io.micronaut.testresources.testcontainers.GenericTestContainerProvider();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  public int getOrder();
    Code:
       0: sipush        1000
       3: ireturn

  public java.util.List<java.lang.String> getResolvableProperties(java.util.Map<java.lang.String, java.util.Collection<java.lang.String>>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #9                  // Method containerMetadataFrom:(Ljava/util/Map;)Ljava/util/stream/Stream;
       5: invokedynamic #15,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      10: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      15: invokeinterface #25,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      20: invokestatic  #29                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      23: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #39                 // class java/util/List
      31: astore_3
      32: getstatic     #41                 // Field LOGGER:Lorg/slf4j/Logger;
      35: invokeinterface #45,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      40: ifeq          54
      43: getstatic     #41                 // Field LOGGER:Lorg/slf4j/Logger;
      46: ldc           #51                 // String Properties which can be resolved by generic containers: {}
      48: aload_3
      49: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      54: aload_3
      55: areturn

  private java.util.stream.Stream<io.micronaut.testresources.testcontainers.TestContainerMetadata> containerMetadataFrom(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #57                 // Method containerNamesFrom:(Ljava/util/Map;)Ljava/util/List;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #61                 // Method io/micronaut/testresources/testcontainers/TestContainerMetadataSupport.containerMetadataFor:(Ljava/util/List;Ljava/util/Map;)Ljava/util/stream/Stream;
      10: areturn

  public java.util.Optional<java.lang.String> resolve(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #9                  // Method containerMetadataFrom:(Ljava/util/Map;)Ljava/util/stream/Stream;
       5: aload_1
       6: invokedynamic #65,  0             // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      11: invokeinterface #69,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      16: invokedynamic #73,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      21: invokeinterface #69,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: invokeinterface #76,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokedynamic #80,  0             // InvokeDynamic #3:apply:(Lio/micronaut/testresources/testcontainers/GenericTestContainerProvider;Ljava/lang/String;Ljava/util/Map;)Ljava/util/function/Function;
      39: invokevirtual #83                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      42: aload_1
      43: invokedynamic #89,  0             // InvokeDynamic #4:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      48: invokevirtual #83                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      51: areturn

  private static java.util.List<java.lang.String> containerNamesFrom(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokeinterface #92,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: invokeinterface #98,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      11: invokedynamic #103,  0            // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      16: invokeinterface #69,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      21: invokedynamic #104,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      26: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      31: invokedynamic #107,  0            // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      36: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      41: invokeinterface #25,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      46: invokestatic  #29                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      49: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      54: checkcast     #39                 // class java/util/List
      57: areturn

  private static java.lang.String lambda$containerNamesFrom$8(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: bipush        46
       5: invokevirtual #108                // Method java/lang/String.indexOf:(I)I
       8: invokevirtual #114                // Method java/lang/String.substring:(II)Ljava/lang/String;
      11: areturn

  private static java.lang.String lambda$containerNamesFrom$7(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #118                // String containers.
       3: invokevirtual #120                // Method java/lang/String.length:()I
       6: invokevirtual #124                // Method java/lang/String.substring:(I)Ljava/lang/String;
       9: areturn

  private static boolean lambda$containerNamesFrom$6(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #118                // String containers.
       3: invokevirtual #127                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ireturn

  private static java.lang.String lambda$resolve$5(java.lang.String, io.micronaut.testresources.testcontainers.GenericTestContainerProvider$1MappedContainer);
    Code:
       0: aload_1
       1: getfield      #131                // Field io/micronaut/testresources/testcontainers/GenericTestContainerProvider$1MappedContainer.md:Lio/micronaut/testresources/testcontainers/TestContainerMetadata;
       4: invokevirtual #137                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getExposedPorts:()Ljava/util/Map;
       7: aload_0
       8: invokeinterface #143,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #147                // class java/lang/Integer
      16: astore_2
      17: aload_2
      18: ifnull        36
      21: aload_1
      22: getfield      #149                // Field io/micronaut/testresources/testcontainers/GenericTestContainerProvider$1MappedContainer.container:Lorg/testcontainers/containers/GenericContainer;
      25: aload_2
      26: invokevirtual #153                // Method java/lang/Integer.intValue:()I
      29: invokevirtual #156                // Method org/testcontainers/containers/GenericContainer.getMappedPort:(I)Ljava/lang/Integer;
      32: invokestatic  #162                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      35: areturn
      36: aload_1
      37: getfield      #131                // Field io/micronaut/testresources/testcontainers/GenericTestContainerProvider$1MappedContainer.md:Lio/micronaut/testresources/testcontainers/TestContainerMetadata;
      40: invokevirtual #166                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getHostNames:()Ljava/util/Set;
      43: aload_0
      44: invokeinterface #169,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      49: ifeq          60
      52: aload_1
      53: getfield      #149                // Field io/micronaut/testresources/testcontainers/GenericTestContainerProvider$1MappedContainer.container:Lorg/testcontainers/containers/GenericContainer;
      56: invokevirtual #173                // Method org/testcontainers/containers/GenericContainer.getHost:()Ljava/lang/String;
      59: areturn
      60: aconst_null
      61: areturn

  private io.micronaut.testresources.testcontainers.GenericTestContainerProvider$1MappedContainer lambda$resolve$4(java.lang.String, java.util.Map, io.micronaut.testresources.testcontainers.TestContainerMetadata);
    Code:
       0: aload_3
       1: invokevirtual #177                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getImageName:()Ljava/util/Optional;
       4: invokevirtual #180                // Method java/util/Optional.get:()Ljava/lang/Object;
       7: checkcast     #109                // class java/lang/String
      10: invokestatic  #183                // Method org/testcontainers/utility/DockerImageName.parse:(Ljava/lang/String;)Lorg/testcontainers/utility/DockerImageName;
      13: astore        4
      15: new           #132                // class io/micronaut/testresources/testcontainers/GenericTestContainerProvider$1MappedContainer
      18: dup
      19: aload_0
      20: aload_3
      21: aload_1
      22: ldc           #10                 // class io/micronaut/testresources/testcontainers/GenericTestContainerProvider
      24: aload_3
      25: invokevirtual #189                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getId:()Ljava/lang/String;
      28: aload_2
      29: aload         4
      31: aload_3
      32: invokedynamic #192,  0            // InvokeDynamic #8:get:(Lorg/testcontainers/utility/DockerImageName;Lio/micronaut/testresources/testcontainers/TestContainerMetadata;)Ljava/util/function/Supplier;
      37: invokestatic  #195                // Method io/micronaut/testresources/testcontainers/TestContainers.getOrCreate:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/util/Map;Ljava/util/function/Supplier;)Lorg/testcontainers/containers/GenericContainer;
      40: invokespecial #201                // Method io/micronaut/testresources/testcontainers/GenericTestContainerProvider$1MappedContainer."<init>":(Lio/micronaut/testresources/testcontainers/GenericTestContainerProvider;Lio/micronaut/testresources/testcontainers/TestContainerMetadata;Lorg/testcontainers/containers/GenericContainer;)V
      43: areturn

  private static org.testcontainers.containers.GenericContainer lambda$resolve$3(org.testcontainers.utility.DockerImageName, io.micronaut.testresources.testcontainers.TestContainerMetadata);
    Code:
       0: new           #157                // class org/testcontainers/containers/GenericContainer
       3: dup
       4: aload_0
       5: invokespecial #204                // Method org/testcontainers/containers/GenericContainer."<init>":(Lorg/testcontainers/utility/DockerImageName;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokestatic  #207                // Method io/micronaut/testresources/testcontainers/TestContainerMetadataSupport.applyMetadata:(Lio/micronaut/testresources/testcontainers/TestContainerMetadata;Lorg/testcontainers/containers/GenericContainer;)Lorg/testcontainers/containers/GenericContainer;
      14: areturn

  private static boolean lambda$resolve$2(io.micronaut.testresources.testcontainers.TestContainerMetadata);
    Code:
       0: aload_0
       1: invokevirtual #177                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getImageName:()Ljava/util/Optional;
       4: invokevirtual #211                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static boolean lambda$resolve$1(java.lang.String, io.micronaut.testresources.testcontainers.TestContainerMetadata);
    Code:
       0: aload_1
       1: invokevirtual #137                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getExposedPorts:()Ljava/util/Map;
       4: aload_0
       5: invokeinterface #214,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          26
      13: aload_1
      14: invokevirtual #166                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getHostNames:()Ljava/util/Set;
      17: aload_0
      18: invokeinterface #169,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private static java.util.stream.Stream lambda$getResolvableProperties$0(io.micronaut.testresources.testcontainers.TestContainerMetadata);
    Code:
       0: aload_0
       1: invokevirtual #137                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getExposedPorts:()Ljava/util/Map;
       4: invokeinterface #92,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #98,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      14: aload_0
      15: invokevirtual #166                // Method io/micronaut/testresources/testcontainers/TestContainerMetadata.getHostNames:()Ljava/util/Set;
      18: invokeinterface #98,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      23: invokestatic  #217                // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      26: areturn

  static {};
    Code:
       0: ldc           #10                 // class io/micronaut/testresources/testcontainers/GenericTestContainerProvider
       2: invokestatic  #221                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #41                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
