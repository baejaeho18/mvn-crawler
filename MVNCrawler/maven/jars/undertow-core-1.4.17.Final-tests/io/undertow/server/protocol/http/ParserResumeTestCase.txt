Compiled from "ParserResumeTestCase.java"
public class io.undertow.server.protocol.http.ParserResumeTestCase {
  public static final java.lang.String DATA;

  public static final io.undertow.server.protocol.http.HttpRequestParser PARSER;

  final io.undertow.server.protocol.http.ParseState context;

  public io.undertow.server.protocol.http.ParserResumeTestCase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/server/protocol/http/ParseState
       8: dup
       9: bipush        10
      11: invokespecial #3                  // Method io/undertow/server/protocol/http/ParseState."<init>":(I)V
      14: putfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
      17: return

  public void testMethodSplit();
    Code:
       0: ldc           #6                  // String GET http://www.somehost.net/apath+with+spaces%20and%20I%C3%B1t%C3%ABrn%C3%A2ti%C3%B4n%C3%A0li%C5%BE%C3%A6ti%C3%B8n?key1=value1&key2=I%C3%B1t%C3%ABrn%C3%A2ti%C3%B4n%C3%A0li%C5%BE%C3%A6ti%C3%B8n HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\nHostee:another\r\nAccept-garbage:   a\r\n\r\ntttt
       2: invokevirtual #7                  // Method java/lang/String.getBytes:()[B
       5: astore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_1
      10: arraylength
      11: iconst_4
      12: isub
      13: if_icmpge     60
      16: aload_0
      17: iload_2
      18: aload_1
      19: invokespecial #8                  // Method testResume:(I[B)V
      22: goto          54
      25: astore_3
      26: new           #10                 // class java/lang/RuntimeException
      29: dup
      30: new           #11                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #13                 // String Test failed at split
      39: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: aload_3
      50: invokespecial #17                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: athrow
      54: iinc          2, 1
      57: goto          8
      60: return
    Exception table:
       from    to  target type
          16    22    25   Class java/lang/Throwable

  public void testOneCharacterAtATime() throws io.undertow.util.BadRequestException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
       4: invokevirtual #18                 // Method io/undertow/server/protocol/http/ParseState.reset:()V
       7: ldc           #6                  // String GET http://www.somehost.net/apath+with+spaces%20and%20I%C3%B1t%C3%ABrn%C3%A2ti%C3%B4n%C3%A0li%C5%BE%C3%A6ti%C3%B8n?key1=value1&key2=I%C3%B1t%C3%ABrn%C3%A2ti%C3%B4n%C3%A0li%C5%BE%C3%A6ti%C3%B8n HTTP/1.1\r\nHost:   www.somehost.net\r\nOtherHeader: some\r\n    value\r\nHostee:another\r\nAccept-garbage:   a\r\n\r\ntttt
       9: invokevirtual #7                  // Method java/lang/String.getBytes:()[B
      12: astore_1
      13: new           #19                 // class io/undertow/server/HttpServerExchange
      16: dup
      17: aconst_null
      18: invokespecial #20                 // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      21: astore_2
      22: aload_1
      23: invokestatic  #21                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      26: astore_3
      27: aload_3
      28: invokevirtual #22                 // Method java/nio/ByteBuffer.limit:()I
      31: istore        4
      33: aload_3
      34: iconst_1
      35: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      38: pop
      39: aload_0
      40: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
      43: getfield      #24                 // Field io/undertow/server/protocol/http/ParseState.state:I
      46: bipush        8
      48: if_icmpeq     89
      51: getstatic     #25                 // Field PARSER:Lio/undertow/server/protocol/http/HttpRequestParser;
      54: aload_3
      55: aload_0
      56: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
      59: aload_2
      60: invokevirtual #26                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      63: aload_0
      64: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
      67: getfield      #24                 // Field io/undertow/server/protocol/http/ParseState.state:I
      70: bipush        8
      72: if_icmpeq     39
      75: aload_3
      76: aload_3
      77: invokevirtual #22                 // Method java/nio/ByteBuffer.limit:()I
      80: iconst_1
      81: iadd
      82: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      85: pop
      86: goto          39
      89: iload         4
      91: i2l
      92: aload_3
      93: invokevirtual #22                 // Method java/nio/ByteBuffer.limit:()I
      96: iconst_4
      97: iadd
      98: i2l
      99: invokestatic  #27                 // Method org/junit/Assert.assertEquals:(JJ)V
     102: aload_0
     103: aload_2
     104: invokespecial #28                 // Method runAssertions:(Lio/undertow/server/HttpServerExchange;)V
     107: return

  private void testResume(int, byte[]) throws io.undertow.util.BadRequestException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
       4: invokevirtual #18                 // Method io/undertow/server/protocol/http/ParseState.reset:()V
       7: new           #19                 // class io/undertow/server/HttpServerExchange
      10: dup
      11: aconst_null
      12: invokespecial #20                 // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;)V
      15: astore_3
      16: aload_2
      17: invokestatic  #21                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      20: astore        4
      22: aload         4
      24: iload_1
      25: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      28: pop
      29: getstatic     #25                 // Field PARSER:Lio/undertow/server/protocol/http/HttpRequestParser;
      32: aload         4
      34: aload_0
      35: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
      38: aload_3
      39: invokevirtual #26                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      42: aload         4
      44: aload         4
      46: invokevirtual #29                 // Method java/nio/ByteBuffer.capacity:()I
      49: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      52: pop
      53: getstatic     #25                 // Field PARSER:Lio/undertow/server/protocol/http/HttpRequestParser;
      56: aload         4
      58: aload_0
      59: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
      62: aload_3
      63: invokevirtual #26                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
      66: aload_0
      67: aload_3
      68: invokespecial #28                 // Method runAssertions:(Lio/undertow/server/HttpServerExchange;)V
      71: ldc2_w        #30                 // long 4l
      74: aload         4
      76: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
      79: i2l
      80: invokestatic  #27                 // Method org/junit/Assert.assertEquals:(JJ)V
      83: return

  private void runAssertions(io.undertow.server.HttpServerExchange);
    Code:
       0: getstatic     #33                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
       3: aload_1
       4: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       7: invokestatic  #35                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      10: ldc           #36                 // String /apath with spaces and Iñtërnâtiônàližætiøn
      12: aload_1
      13: invokevirtual #37                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      16: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      19: ldc           #39                 // String http://www.somehost.net/apath+with+spaces%20and%20I%C3%B1t%C3%ABrn%C3%A2ti%C3%B4n%C3%A0li%C5%BE%C3%A6ti%C3%B8n
      21: aload_1
      22: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      25: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      28: getstatic     #41                 // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
      31: aload_1
      32: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
      35: invokestatic  #35                 // Method org/junit/Assert.assertSame:(Ljava/lang/Object;Ljava/lang/Object;)V
      38: ldc           #43                 // String www.somehost.net
      40: aload_1
      41: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      44: new           #45                 // class io/undertow/util/HttpString
      47: dup
      48: ldc           #46                 // String Host
      50: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      53: invokevirtual #48                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      56: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: ldc           #49                 // String some value
      61: aload_1
      62: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      65: new           #45                 // class io/undertow/util/HttpString
      68: dup
      69: ldc           #50                 // String OtherHeader
      71: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      74: invokevirtual #48                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      77: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      80: ldc           #51                 // String another
      82: aload_1
      83: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      86: new           #45                 // class io/undertow/util/HttpString
      89: dup
      90: ldc           #52                 // String Hostee
      92: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      95: invokevirtual #48                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      98: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     101: ldc           #53                 // String a
     103: aload_1
     104: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     107: new           #45                 // class io/undertow/util/HttpString
     110: dup
     111: ldc           #54                 // String Accept-garbage
     113: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     116: invokevirtual #48                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     119: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     122: ldc2_w        #30                 // long 4l
     125: aload_1
     126: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     129: invokevirtual #55                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     132: invokeinterface #56,  1           // InterfaceMethod java/util/Collection.size:()I
     137: i2l
     138: invokestatic  #27                 // Method org/junit/Assert.assertEquals:(JJ)V
     141: ldc2_w        #57                 // long 8l
     144: aload_0
     145: getfield      #4                  // Field context:Lio/undertow/server/protocol/http/ParseState;
     148: getfield      #24                 // Field io/undertow/server/protocol/http/ParseState.state:I
     151: i2l
     152: invokestatic  #27                 // Method org/junit/Assert.assertEquals:(JJ)V
     155: ldc           #59                 // String key1=value1&key2=I%C3%B1t%C3%ABrn%C3%A2ti%C3%B4n%C3%A0li%C5%BE%C3%A6ti%C3%B8n
     157: aload_1
     158: invokevirtual #60                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
     161: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     164: ldc           #61                 // String value1
     166: aload_1
     167: invokevirtual #62                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     170: ldc           #63                 // String key1
     172: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     177: checkcast     #65                 // class java/util/Deque
     180: invokeinterface #66,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     185: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     188: ldc           #67                 // String Iñtërnâtiônàližætiøn
     190: aload_1
     191: invokevirtual #62                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
     194: ldc           #68                 // String key2
     196: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     201: checkcast     #65                 // class java/util/Deque
     204: invokeinterface #66,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     209: invokestatic  #38                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     212: return

  static {};
    Code:
       0: getstatic     #69                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
       3: iconst_1
       4: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokestatic  #71                 // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      10: invokestatic  #72                 // Method io/undertow/server/protocol/http/HttpRequestParser.instance:(Lorg/xnio/OptionMap;)Lio/undertow/server/protocol/http/HttpRequestParser;
      13: putstatic     #25                 // Field PARSER:Lio/undertow/server/protocol/http/HttpRequestParser;
      16: return
}
