Compiled from "WriteTimeoutTestCase.java"
class io.undertow.server.WriteTimeoutTestCase$1$1 implements org.xnio.ChannelListener<java.nio.channels.Channel> {
  private java.nio.ByteBuffer buffer;

  int count;

  final java.nio.ByteBuffer val$originalBuffer;

  final org.xnio.channels.StreamSinkChannel val$response;

  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.server.WriteTimeoutTestCase$1 this$1;

  io.undertow.server.WriteTimeoutTestCase$1$1(io.undertow.server.WriteTimeoutTestCase$1, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/undertow/server/WriteTimeoutTestCase$1;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$originalBuffer:Ljava/nio/ByteBuffer;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$response:Lorg/xnio/channels/StreamSinkChannel;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: aload_0
      26: aload_0
      27: getfield      #2                  // Field val$originalBuffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #6                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      33: putfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      36: aload_0
      37: iconst_0
      38: putfield      #8                  // Field count:I
      41: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$response:Lorg/xnio/channels/StreamSinkChannel;
       4: aload_0
       5: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       8: invokeinterface #9,  2            // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      13: istore_2
      14: iload_2
      15: ifne          19
      18: return
      19: goto          41
      22: astore_2
      23: aload_0
      24: getfield      #1                  // Field this$1:Lio/undertow/server/WriteTimeoutTestCase$1;
      27: getfield      #11                 // Field io/undertow/server/WriteTimeoutTestCase$1.this$0:Lio/undertow/server/WriteTimeoutTestCase;
      30: aload_2
      31: invokestatic  #12                 // Method io/undertow/server/WriteTimeoutTestCase.access$002:(Lio/undertow/server/WriteTimeoutTestCase;Ljava/lang/Exception;)Ljava/lang/Exception;
      34: pop
      35: invokestatic  #13                 // Method io/undertow/server/WriteTimeoutTestCase.access$100:()Ljava/util/concurrent/CountDownLatch;
      38: invokevirtual #14                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      41: aload_0
      42: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      45: invokevirtual #15                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      48: ifne          72
      51: aload_0
      52: dup
      53: getfield      #8                  // Field count:I
      56: iconst_1
      57: iadd
      58: putfield      #8                  // Field count:I
      61: aload_0
      62: aload_0
      63: getfield      #2                  // Field val$originalBuffer:Ljava/nio/ByteBuffer;
      66: invokevirtual #6                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      69: putfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      72: aload_0
      73: getfield      #8                  // Field count:I
      76: sipush        1000
      79: if_icmplt     0
      82: aload_0
      83: getfield      #4                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      86: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      89: pop
      90: return
    Exception table:
       from    to  target type
           0    18    22   Class java/io/IOException
}
