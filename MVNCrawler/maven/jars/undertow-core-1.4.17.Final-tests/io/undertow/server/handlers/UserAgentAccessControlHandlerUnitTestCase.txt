Compiled from "UserAgentAccessControlHandlerUnitTestCase.java"
public class io.undertow.server.handlers.UserAgentAccessControlHandlerUnitTestCase {
  private static final java.lang.String PATTERN_IE_ALL;

  private static final java.lang.String PATTERN_IE_ALL_ABOVE_6;

  private static final java.lang.String PATTERN_FF_ALL;

  private static final java.lang.String IE_6;

  private static final java.lang.String IE_10;

  private static final java.lang.String FF_25;

  private static final java.lang.String SAFARI;

  public io.undertow.server.handlers.UserAgentAccessControlHandlerUnitTestCase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void testInvalidPattern();
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: ldc           #6                  // String [bogus
      15: invokevirtual #7                  // Method io/undertow/server/handlers/AccessControlListHandler.addAllow:(Ljava/lang/String;)Lio/undertow/server/handlers/AccessControlListHandler;
      18: pop
      19: return

  public void testFalseDefault();
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: iconst_0
      14: invokevirtual #8                  // Method io/undertow/server/handlers/AccessControlListHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/AccessControlListHandler;
      17: ldc           #9                  // String some useragent
      19: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      22: invokestatic  #11                 // Method org/junit/Assert.assertFalse:(Z)V
      25: return

  public void testTrueDefault() throws java.net.UnknownHostException;
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: iconst_1
      14: invokevirtual #8                  // Method io/undertow/server/handlers/AccessControlListHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/AccessControlListHandler;
      17: ldc           #9                  // String some useragent
      19: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      22: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      25: return

  public void testNullUserAgent();
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: iconst_1
      14: invokevirtual #8                  // Method io/undertow/server/handlers/AccessControlListHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/AccessControlListHandler;
      17: aconst_null
      18: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      21: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      24: return

  public void testAllowAllButOne() throws java.net.UnknownHostException;
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: iconst_1
      14: invokevirtual #8                  // Method io/undertow/server/handlers/AccessControlListHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/AccessControlListHandler;
      17: ldc           #14                 // String Mozilla.+\\(compatible; MSIE .+
      19: invokevirtual #15                 // Method io/undertow/server/handlers/AccessControlListHandler.addDeny:(Ljava/lang/String;)Lio/undertow/server/handlers/AccessControlListHandler;
      22: astore_1
      23: aload_1
      24: ldc           #16                 // String Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
      26: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      29: invokestatic  #11                 // Method org/junit/Assert.assertFalse:(Z)V
      32: aload_1
      33: ldc           #17                 // String Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0
      35: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      38: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      41: return

  public void testDenyAllButOne() throws java.net.UnknownHostException;
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: iconst_0
      14: invokevirtual #8                  // Method io/undertow/server/handlers/AccessControlListHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/AccessControlListHandler;
      17: ldc           #18                 // String Mozilla.+\\(.+ Gecko.* Firefox.+
      19: invokevirtual #7                  // Method io/undertow/server/handlers/AccessControlListHandler.addAllow:(Ljava/lang/String;)Lio/undertow/server/handlers/AccessControlListHandler;
      22: astore_1
      23: aload_1
      24: ldc           #17                 // String Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0
      26: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      29: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      32: aload_1
      33: ldc           #19                 // String Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0
      35: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      38: invokestatic  #11                 // Method org/junit/Assert.assertFalse:(Z)V
      41: return

  public void testAllowIE6AndAboveAndAllOthers() throws java.net.UnknownHostException;
    Code:
       0: new           #2                  // class io/undertow/server/handlers/AccessControlListHandler
       3: dup
       4: getstatic     #3                  // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
       7: invokestatic  #4                  // Method io/undertow/attribute/ExchangeAttributes.requestHeader:(Lio/undertow/util/HttpString;)Lio/undertow/attribute/ExchangeAttribute;
      10: invokespecial #5                  // Method io/undertow/server/handlers/AccessControlListHandler."<init>":(Lio/undertow/attribute/ExchangeAttribute;)V
      13: iconst_1
      14: invokevirtual #8                  // Method io/undertow/server/handlers/AccessControlListHandler.setDefaultAllow:(Z)Lio/undertow/server/handlers/AccessControlListHandler;
      17: ldc           #20                 // String Mozilla.+\\(compatible; MSIE ([7-9]|1[0-9]).+
      19: invokevirtual #7                  // Method io/undertow/server/handlers/AccessControlListHandler.addAllow:(Ljava/lang/String;)Lio/undertow/server/handlers/AccessControlListHandler;
      22: ldc           #14                 // String Mozilla.+\\(compatible; MSIE .+
      24: invokevirtual #15                 // Method io/undertow/server/handlers/AccessControlListHandler.addDeny:(Ljava/lang/String;)Lio/undertow/server/handlers/AccessControlListHandler;
      27: astore_1
      28: aload_1
      29: ldc           #16                 // String Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.4322; .NET CLR 2.0.50727)
      31: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      34: invokestatic  #11                 // Method org/junit/Assert.assertFalse:(Z)V
      37: aload_1
      38: ldc           #19                 // String Mozilla/5.0 (compatible; MSIE 10.6; Windows NT 6.1; Trident/5.0; InfoPath.2; SLCC1; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 2.0.50727) 3gpp-gba UNTRUSTED/1.0
      40: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      43: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      46: aload_1
      47: ldc           #17                 // String Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:25.0) Gecko/20100101 Firefox/25.0
      49: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      52: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      55: aload_1
      56: ldc           #21                 // String Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25
      58: invokevirtual #10                 // Method io/undertow/server/handlers/AccessControlListHandler.isAllowed:(Ljava/lang/String;)Z
      61: invokestatic  #12                 // Method org/junit/Assert.assertTrue:(Z)V
      64: return
}
