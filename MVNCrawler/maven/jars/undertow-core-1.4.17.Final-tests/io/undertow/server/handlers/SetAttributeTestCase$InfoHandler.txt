Compiled from "SetAttributeTestCase.java"
class io.undertow.server.handlers.SetAttributeTestCase$InfoHandler implements io.undertow.server.HttpHandler {
  final io.undertow.server.handlers.SetAttributeTestCase this$0;

  private io.undertow.server.handlers.SetAttributeTestCase$InfoHandler(io.undertow.server.handlers.SetAttributeTestCase);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/handlers/SetAttributeTestCase;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: new           #4                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #6                  // String URI:
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #9                  // String  relative:
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #11                 // String  QS:
      37: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
      44: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      53: astore_2
      54: aload_1
      55: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.getQueryParameters:()Ljava/util/Map;
      58: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      63: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore_3
      69: aload_3
      70: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          151
      78: aload_3
      79: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #20                 // class java/util/Map$Entry
      87: astore        4
      89: aload_2
      90: new           #4                  // class java/lang/StringBuilder
      93: dup
      94: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #21                 // String
      99: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload         4
     104: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     109: checkcast     #23                 // class java/lang/String
     112: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #24                 // String :
     117: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload         4
     122: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     127: checkcast     #26                 // class java/util/Deque
     130: invokeinterface #27,  1           // InterfaceMethod java/util/Deque.getFirst:()Ljava/lang/Object;
     135: checkcast     #23                 // class java/lang/String
     138: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: pop
     148: goto          69
     151: aload_1
     152: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.getResponseSender:()Lio/undertow/io/Sender;
     155: aload_2
     156: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokeinterface #29,  2           // InterfaceMethod io/undertow/io/Sender.send:(Ljava/lang/String;)V
     164: return

  io.undertow.server.handlers.SetAttributeTestCase$InfoHandler(io.undertow.server.handlers.SetAttributeTestCase, io.undertow.server.handlers.SetAttributeTestCase$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/server/handlers/SetAttributeTestCase;)V
       5: return
}
