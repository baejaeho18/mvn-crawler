Compiled from "ChunkedRequestTrailersTestCase.java"
public class io.undertow.server.handlers.ChunkedRequestTrailersTestCase {
  private static volatile io.undertow.server.protocol.http.HttpServerConnection connection;

  private static org.xnio.OptionMap existing;

  public io.undertow.server.handlers.ChunkedRequestTrailersTestCase();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setup();
    Code:
       0: new           #3                  // class io/undertow/server/handlers/BlockingHandler
       3: dup
       4: invokespecial #4                  // Method io/undertow/server/handlers/BlockingHandler."<init>":()V
       7: astore_0
       8: invokestatic  #5                  // Method io/undertow/testutils/DefaultServer.getUndertowOptions:()Lorg/xnio/OptionMap;
      11: putstatic     #6                  // Field existing:Lorg/xnio/OptionMap;
      14: getstatic     #7                  // Field io/undertow/UndertowOptions.ALWAYS_SET_DATE:Lorg/xnio/Option;
      17: iconst_0
      18: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: invokestatic  #9                  // Method org/xnio/OptionMap.create:(Lorg/xnio/Option;Ljava/lang/Object;)Lorg/xnio/OptionMap;
      24: invokestatic  #10                 // Method io/undertow/testutils/DefaultServer.setUndertowOptions:(Lorg/xnio/OptionMap;)V
      27: aload_0
      28: invokestatic  #11                 // Method io/undertow/testutils/DefaultServer.setRootHandler:(Lio/undertow/server/HttpHandler;)V
      31: aload_0
      32: new           #12                 // class io/undertow/server/handlers/ChunkedRequestTrailersTestCase$1
      35: dup
      36: invokespecial #13                 // Method io/undertow/server/handlers/ChunkedRequestTrailersTestCase$1."<init>":()V
      39: invokevirtual #14                 // Method io/undertow/server/handlers/BlockingHandler.setRootHandler:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/handlers/BlockingHandler;
      42: pop
      43: return

  public static void cleanup();
    Code:
       0: getstatic     #6                  // Field existing:Lorg/xnio/OptionMap;
       3: invokestatic  #10                 // Method io/undertow/testutils/DefaultServer.setUndertowOptions:(Lorg/xnio/OptionMap;)V
       6: return

  public void testChunkedRequestsWithTrailers() throws java.io.IOException;
    Code:
       0: aconst_null
       1: putstatic     #1                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
       4: ldc           #15                 // String POST / HTTP/1.1\r\nHost: default\r\nTrailer:foo, bar\r\nTransfer-Encoding: chunked\r\n\r\n9\r\nabcdefghi\r\n0\r\nfoo: fooVal\r\n bar: barVal\r\n\r\n
       6: astore_1
       7: ldc           #16                 // String HTTP/1.1 200 OK\r\nConnection: keep-alive\r\nContent-Length: 26\r\n\r\nfoo: fooVal\r\nbar: barVal\r\n
       9: astore_2
      10: ldc           #16                 // String HTTP/1.1 200 OK\r\nConnection: keep-alive\r\nContent-Length: 26\r\n\r\nfoo: fooVal\r\nbar: barVal\r\n
      12: astore_3
      13: new           #17                 // class java/net/Socket
      16: dup
      17: invokestatic  #18                 // Method io/undertow/testutils/DefaultServer.getDefaultServerAddress:()Ljava/net/InetSocketAddress;
      20: invokevirtual #19                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      23: invokestatic  #18                 // Method io/undertow/testutils/DefaultServer.getDefaultServerAddress:()Ljava/net/InetSocketAddress;
      26: invokevirtual #20                 // Method java/net/InetSocketAddress.getPort:()I
      29: invokespecial #21                 // Method java/net/Socket."<init>":(Ljava/net/InetAddress;I)V
      32: astore        4
      34: aload         4
      36: invokevirtual #22                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      39: aload_1
      40: invokevirtual #23                 // Method java/lang/String.getBytes:()[B
      43: invokevirtual #24                 // Method java/io/OutputStream.write:([B)V
      46: new           #25                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      53: astore        5
      55: iconst_0
      56: istore        6
      58: bipush        100
      60: newarray       byte
      62: astore        7
      64: iload         6
      66: aload_2
      67: invokevirtual #27                 // Method java/lang/String.length:()I
      70: if_icmpge     126
      73: aload         4
      75: invokevirtual #28                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      78: aload         7
      80: invokevirtual #29                 // Method java/io/InputStream.read:([B)I
      83: istore        8
      85: iload         8
      87: ifgt          93
      90: goto          126
      93: iload         8
      95: ifle          123
      98: iload         6
     100: iload         8
     102: iadd
     103: istore        6
     105: aload         5
     107: new           #30                 // class java/lang/String
     110: dup
     111: aload         7
     113: iconst_0
     114: iload         8
     116: invokespecial #31                 // Method java/lang/String."<init>":([BII)V
     119: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: goto          64
     126: aload_2
     127: aload         5
     129: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokestatic  #34                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     135: goto          149
     138: astore        8
     140: aload_3
     141: aload         5
     143: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokestatic  #34                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     149: aload         4
     151: invokevirtual #22                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
     154: aload_1
     155: invokevirtual #23                 // Method java/lang/String.getBytes:()[B
     158: invokevirtual #24                 // Method java/io/OutputStream.write:([B)V
     161: new           #25                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     168: astore        5
     170: iconst_0
     171: istore        6
     173: bipush        100
     175: newarray       byte
     177: astore        7
     179: iload         6
     181: aload_2
     182: invokevirtual #27                 // Method java/lang/String.length:()I
     185: if_icmpge     241
     188: aload         4
     190: invokevirtual #28                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
     193: aload         7
     195: invokevirtual #29                 // Method java/io/InputStream.read:([B)I
     198: istore        8
     200: iload         8
     202: ifgt          208
     205: goto          241
     208: iload         8
     210: ifle          238
     213: iload         6
     215: iload         8
     217: iadd
     218: istore        6
     220: aload         5
     222: new           #30                 // class java/lang/String
     225: dup
     226: aload         7
     228: iconst_0
     229: iload         8
     231: invokespecial #31                 // Method java/lang/String."<init>":([BII)V
     234: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: pop
     238: goto          179
     241: aload_2
     242: aload         5
     244: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     247: invokestatic  #34                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     250: goto          264
     253: astore        8
     255: aload_3
     256: aload         5
     258: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     261: invokestatic  #34                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     264: aload         4
     266: invokevirtual #36                 // Method java/net/Socket.close:()V
     269: goto          282
     272: astore        9
     274: aload         4
     276: invokevirtual #36                 // Method java/net/Socket.close:()V
     279: aload         9
     281: athrow
     282: return
    Exception table:
       from    to  target type
         126   135   138   Class java/lang/AssertionError
         241   250   253   Class java/lang/AssertionError
          34   264   272   any
         272   274   272   any

  static io.undertow.server.protocol.http.HttpServerConnection access$000();
    Code:
       0: getstatic     #1                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
       3: areturn

  static io.undertow.server.protocol.http.HttpServerConnection access$002(io.undertow.server.protocol.http.HttpServerConnection);
    Code:
       0: aload_0
       1: dup
       2: putstatic     #1                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
       5: areturn
}
