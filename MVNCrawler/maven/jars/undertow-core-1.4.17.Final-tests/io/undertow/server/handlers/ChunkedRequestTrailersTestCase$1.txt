Compiled from "ChunkedRequestTrailersTestCase.java"
final class io.undertow.server.handlers.ChunkedRequestTrailersTestCase$1 implements io.undertow.server.HttpHandler {
  io.undertow.server.handlers.ChunkedRequestTrailersTestCase$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: invokestatic  #2                  // Method io/undertow/server/handlers/ChunkedRequestTrailersTestCase.access$000:()Lio/undertow/server/protocol/http/HttpServerConnection;
       3: ifnonnull     20
       6: aload_1
       7: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      10: checkcast     #4                  // class io/undertow/server/protocol/http/HttpServerConnection
      13: invokestatic  #5                  // Method io/undertow/server/handlers/ChunkedRequestTrailersTestCase.access$002:(Lio/undertow/server/protocol/http/HttpServerConnection;)Lio/undertow/server/protocol/http/HttpServerConnection;
      16: pop
      17: goto          63
      20: invokestatic  #6                  // Method io/undertow/testutils/DefaultServer.isProxy:()Z
      23: ifne          63
      26: invokestatic  #2                  // Method io/undertow/server/handlers/ChunkedRequestTrailersTestCase.access$000:()Lio/undertow/server/protocol/http/HttpServerConnection;
      29: aload_1
      30: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      33: if_acmpeq     63
      36: aload_1
      37: sipush        500
      40: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      43: pop
      44: aload_1
      45: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getOutputStream:()Ljava/io/OutputStream;
      48: astore_2
      49: aload_2
      50: ldc           #10                 // String Connection not persistent
      52: invokevirtual #11                 // Method java/lang/String.getBytes:()[B
      55: invokevirtual #12                 // Method java/io/OutputStream.write:([B)V
      58: aload_2
      59: invokevirtual #13                 // Method java/io/OutputStream.close:()V
      62: return
      63: aload_1
      64: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.getOutputStream:()Ljava/io/OutputStream;
      67: astore_2
      68: aload_1
      69: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
      72: astore_3
      73: aload_3
      74: invokestatic  #15                 // Method io/undertow/testutils/HttpClientUtils.readResponse:(Ljava/io/InputStream;)Ljava/lang/String;
      77: astore        4
      79: ldc           #16                 // String abcdefghi
      81: aload         4
      83: invokestatic  #17                 // Method org/junit/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      86: aload_1
      87: getstatic     #18                 // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
      90: invokevirtual #19                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      93: checkcast     #20                 // class io/undertow/util/HeaderMap
      96: astore        5
      98: aload         5
     100: invokevirtual #21                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     103: astore        6
     105: aload         6
     107: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     112: ifeq          204
     115: aload         6
     117: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #24                 // class io/undertow/util/HeaderValues
     125: astore        7
     127: aload         7
     129: invokevirtual #25                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
     132: astore        8
     134: aload         8
     136: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          201
     144: aload         8
     146: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     151: checkcast     #26                 // class java/lang/String
     154: astore        9
     156: aload_2
     157: aload         7
     159: invokevirtual #27                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     162: invokevirtual #28                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     165: invokevirtual #11                 // Method java/lang/String.getBytes:()[B
     168: invokevirtual #12                 // Method java/io/OutputStream.write:([B)V
     171: aload_2
     172: ldc           #29                 // String :
     174: invokevirtual #11                 // Method java/lang/String.getBytes:()[B
     177: invokevirtual #12                 // Method java/io/OutputStream.write:([B)V
     180: aload_2
     181: aload         9
     183: invokevirtual #11                 // Method java/lang/String.getBytes:()[B
     186: invokevirtual #12                 // Method java/io/OutputStream.write:([B)V
     189: aload_2
     190: ldc           #30                 // String \r\n
     192: invokevirtual #11                 // Method java/lang/String.getBytes:()[B
     195: invokevirtual #12                 // Method java/io/OutputStream.write:([B)V
     198: goto          134
     201: goto          105
     204: aload_3
     205: invokevirtual #31                 // Method java/io/InputStream.close:()V
     208: aload_2
     209: invokevirtual #13                 // Method java/io/OutputStream.close:()V
     212: goto          229
     215: astore_2
     216: aload_2
     217: invokevirtual #33                 // Method java/io/IOException.printStackTrace:()V
     220: new           #34                 // class java/lang/RuntimeException
     223: dup
     224: aload_2
     225: invokespecial #35                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     228: athrow
     229: return
    Exception table:
       from    to  target type
           0    62   215   Class java/io/IOException
          63   212   215   Class java/io/IOException
}
