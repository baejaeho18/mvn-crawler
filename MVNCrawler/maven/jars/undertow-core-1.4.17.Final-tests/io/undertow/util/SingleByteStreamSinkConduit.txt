Compiled from "SingleByteStreamSinkConduit.java"
public class io.undertow.util.SingleByteStreamSinkConduit extends org.xnio.conduits.AbstractStreamSinkConduit<org.xnio.conduits.StreamSinkConduit> {
  private final int singleByteWrites;

  private int state;

  public io.undertow.util.SingleByteStreamSinkConduit(org.xnio.conduits.StreamSinkConduit, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/xnio/conduits/AbstractStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field state:I
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field singleByteWrites:I
      15: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteWrites:I
       8: if_icmple     25
      11: aload_0
      12: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      18: aload_1
      19: invokeinterface #6,  2            // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      24: ireturn
      25: aload_0
      26: dup
      27: getfield      #2                  // Field state:I
      30: dup_x1
      31: iconst_1
      32: iadd
      33: putfield      #2                  // Field state:I
      36: iconst_2
      37: irem
      38: ifne          43
      41: iconst_0
      42: ireturn
      43: aload_1
      44: invokevirtual #7                  // Method java/nio/ByteBuffer.remaining:()I
      47: ifne          52
      50: iconst_0
      51: ireturn
      52: aload_1
      53: invokevirtual #8                  // Method java/nio/ByteBuffer.limit:()I
      56: istore_2
      57: aload_1
      58: aload_1
      59: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
      62: iconst_1
      63: iadd
      64: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      67: pop
      68: aload_0
      69: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      72: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      75: aload_1
      76: invokeinterface #6,  2            // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      81: istore_3
      82: aload_1
      83: iload_2
      84: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      87: pop
      88: iload_3
      89: ireturn
      90: astore        4
      92: aload_1
      93: iload_2
      94: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      97: pop
      98: aload         4
     100: athrow
    Exception table:
       from    to  target type
          57    82    90   any
          90    92    90   any

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteWrites:I
       8: if_icmple     27
      11: aload_0
      12: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokeinterface #11,  4           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
      26: lreturn
      27: aload_0
      28: dup
      29: getfield      #2                  // Field state:I
      32: dup_x1
      33: iconst_1
      34: iadd
      35: putfield      #2                  // Field state:I
      38: iconst_2
      39: irem
      40: ifne          45
      43: lconst_0
      44: lreturn
      45: aconst_null
      46: astore        4
      48: iload_2
      49: istore        5
      51: iload         5
      53: iload_2
      54: iload_3
      55: iadd
      56: if_icmpge     84
      59: aload_1
      60: iload         5
      62: aaload
      63: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      66: ifeq          78
      69: aload_1
      70: iload         5
      72: aaload
      73: astore        4
      75: goto          84
      78: iinc          5, 1
      81: goto          51
      84: aload         4
      86: ifnonnull     91
      89: lconst_0
      90: lreturn
      91: aload         4
      93: invokevirtual #8                  // Method java/nio/ByteBuffer.limit:()I
      96: istore        5
      98: aload         4
     100: aload         4
     102: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
     105: iconst_1
     106: iadd
     107: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     110: pop
     111: aload_0
     112: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
     115: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
     118: aload         4
     120: invokeinterface #6,  2            // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
     125: i2l
     126: lstore        6
     128: aload         4
     130: iload         5
     132: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     135: pop
     136: lload         6
     138: lreturn
     139: astore        8
     141: aload         4
     143: iload         5
     145: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     148: pop
     149: aload         8
     151: athrow
    Exception table:
       from    to  target type
          98   128   139   any
         139   141   139   any

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteWrites:I
       8: if_icmple     28
      11: aload_0
      12: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      18: aload_1
      19: lload_2
      20: lload         4
      22: invokeinterface #13,  6           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      27: lreturn
      28: aload_0
      29: dup
      30: getfield      #2                  // Field state:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #2                  // Field state:I
      39: iconst_2
      40: irem
      41: ifne          46
      44: lconst_0
      45: lreturn
      46: aload_0
      47: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      50: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      53: aload_1
      54: lload_2
      55: lload         4
      57: lconst_0
      58: lcmp
      59: ifne          66
      62: lconst_0
      63: goto          67
      66: lconst_1
      67: invokeinterface #13,  6           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
      72: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: aload_0
       5: getfield      #3                  // Field singleByteWrites:I
       8: if_icmple     28
      11: aload_0
      12: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      15: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      18: aload_1
      19: lload_2
      20: aload         4
      22: invokeinterface #14,  5           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.transferFrom:(Lorg/xnio/channels/StreamSourceChannel;JLjava/nio/ByteBuffer;)J
      27: lreturn
      28: aload_0
      29: dup
      30: getfield      #2                  // Field state:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #2                  // Field state:I
      39: iconst_2
      40: irem
      41: ifne          57
      44: aload         4
      46: aload         4
      48: invokevirtual #9                  // Method java/nio/ByteBuffer.position:()I
      51: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      54: pop
      55: lconst_0
      56: lreturn
      57: aload_0
      58: getfield      #4                  // Field next:Lorg/xnio/conduits/Conduit;
      61: checkcast     #5                  // class org/xnio/conduits/StreamSinkConduit
      64: aload_1
      65: lload_2
      66: lconst_0
      67: lcmp
      68: ifne          75
      71: lconst_0
      72: goto          76
      75: lconst_1
      76: aload         4
      78: invokeinterface #14,  5           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.transferFrom:(Lorg/xnio/channels/StreamSourceChannel;JLjava/nio/ByteBuffer;)J
      83: lreturn
}
