Compiled from "StreamSourceChannelAdapter.java"
public class io.undertow.websockets.utils.StreamSourceChannelAdapter implements org.xnio.channels.StreamSourceChannel {
  private final java.nio.channels.ReadableByteChannel channel;

  private final org.xnio.ChannelListener$SimpleSetter<? extends org.xnio.channels.StreamSourceChannel> readSetter;

  private final org.xnio.ChannelListener$SimpleSetter<? extends org.xnio.channels.StreamSourceChannel> closeSetter;

  public io.undertow.websockets.utils.StreamSourceChannelAdapter(java.nio.channels.ReadableByteChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #4                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #2                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #3                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
      31: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      10: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       4: invokeinterface #8,  1            // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
       9: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       4: invokeinterface #9,  1            // InterfaceMethod java/nio/channels/ReadableByteChannel.isOpen:()Z
       9: ireturn

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #10                 // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       4: aload_1
       5: iconst_0
       6: aaload
       7: invokeinterface #7,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      12: i2l
      13: lreturn

  public void suspendReads();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void resumeReads();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isReadResumed();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wakeupReads();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioWorker getWorker();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aconst_null
       1: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: lload_3
       1: l2i
       2: invokestatic  #13                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: astore        6
       7: aload_0
       8: getfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
      11: aload         6
      13: invokeinterface #7,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      18: istore        7
      20: aload         6
      22: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      25: pop
      26: aload         6
      28: invokevirtual #15                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      31: ifeq          55
      34: aload         5
      36: aload         6
      38: invokevirtual #16                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
      41: iconst_1
      42: if_icmpge     26
      45: new           #17                 // class java/io/IOException
      48: dup
      49: ldc           #18                 // String Unable to write out all bytes
      51: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload         6
      57: invokevirtual #20                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      60: pop
      61: iload         7
      63: i2l
      64: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_3
       1: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       4: pop
       5: lload_1
       6: aload_3
       7: invokevirtual #21                 // Method java/nio/ByteBuffer.remaining:()I
      10: i2l
      11: lcmp
      12: ifge          27
      15: aload_3
      16: aload_3
      17: invokevirtual #22                 // Method java/nio/ByteBuffer.position:()I
      20: lload_1
      21: l2i
      22: iadd
      23: invokevirtual #23                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      26: pop
      27: aload_0
      28: getfield      #6                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
      31: aload_3
      32: invokeinterface #7,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      37: istore        5
      39: aload_3
      40: invokevirtual #15                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      43: ifeq          68
      46: aload         4
      48: aload_3
      49: invokeinterface #24,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      54: iconst_1
      55: if_icmpge     39
      58: new           #17                 // class java/io/IOException
      61: dup
      62: ldc           #18                 // String Unable to write out all bytes
      64: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload         5
      70: i2l
      71: lreturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.StreamSourceChannel> getReadSetter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.channels.StreamSourceChannel> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn
}
