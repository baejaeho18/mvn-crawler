Compiled from "AutobahnExtensionCustomReceiverServer.java"
public class io.undertow.websockets.extensions.AutobahnExtensionCustomReceiverServer {
  private io.undertow.server.protocol.http.HttpOpenListener openListener;

  private org.xnio.XnioWorker worker;

  private org.xnio.channels.AcceptingChannel<org.xnio.StreamConnection> server;

  private org.xnio.Xnio xnio;

  private final int port;

  public static io.undertow.websockets.core.WebSocketChannel current;

  private static final org.xnio.ChannelExceptionHandler<io.undertow.websockets.core.StreamSinkFrameChannel> W_H;

  private static final org.xnio.ChannelExceptionHandler<io.undertow.websockets.core.StreamSourceFrameChannel> R_H;

  public io.undertow.websockets.extensions.AutobahnExtensionCustomReceiverServer(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field port:I
       9: return

  public void run();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method org/xnio/Xnio.getInstance:()Lorg/xnio/Xnio;
       4: putfield      #6                  // Field xnio:Lorg/xnio/Xnio;
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field xnio:Lorg/xnio/Xnio;
      12: invokestatic  #7                  // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      15: getstatic     #8                  // Field org/xnio/Options.WORKER_WRITE_THREADS:Lorg/xnio/Option;
      18: iconst_4
      19: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      22: getstatic     #10                 // Field org/xnio/Options.WORKER_READ_THREADS:Lorg/xnio/Option;
      25: iconst_4
      26: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      29: getstatic     #11                 // Field org/xnio/Options.CONNECTION_HIGH_WATER:Lorg/xnio/Option;
      32: ldc           #12                 // int 1000000
      34: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      37: getstatic     #13                 // Field org/xnio/Options.CONNECTION_LOW_WATER:Lorg/xnio/Option;
      40: ldc           #12                 // int 1000000
      42: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      45: getstatic     #14                 // Field org/xnio/Options.WORKER_TASK_CORE_THREADS:Lorg/xnio/Option;
      48: bipush        10
      50: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      53: getstatic     #15                 // Field org/xnio/Options.WORKER_TASK_MAX_THREADS:Lorg/xnio/Option;
      56: bipush        12
      58: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      61: getstatic     #16                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      64: iconst_1
      65: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      68: getstatic     #18                 // Field org/xnio/Options.CORK:Lorg/xnio/Option;
      71: iconst_1
      72: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
      75: invokevirtual #19                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
      78: invokevirtual #20                 // Method org/xnio/Xnio.createWorker:(Lorg/xnio/OptionMap;)Lorg/xnio/XnioWorker;
      81: putfield      #21                 // Field worker:Lorg/xnio/XnioWorker;
      84: invokestatic  #7                  // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
      87: getstatic     #22                 // Field org/xnio/Options.WORKER_ACCEPT_THREADS:Lorg/xnio/Option;
      90: iconst_4
      91: invokevirtual #9                  // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;I)Lorg/xnio/OptionMap$Builder;
      94: getstatic     #16                 // Field org/xnio/Options.TCP_NODELAY:Lorg/xnio/Option;
      97: iconst_1
      98: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     101: getstatic     #23                 // Field org/xnio/Options.REUSE_ADDRESSES:Lorg/xnio/Option;
     104: iconst_1
     105: invokevirtual #17                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     108: invokevirtual #19                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     111: astore_1
     112: aload_0
     113: new           #24                 // class io/undertow/server/protocol/http/HttpOpenListener
     116: dup
     117: new           #25                 // class io/undertow/server/DefaultByteBufferPool
     120: dup
     121: iconst_0
     122: sipush        8192
     125: invokespecial #26                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZI)V
     128: invokespecial #27                 // Method io/undertow/server/protocol/http/HttpOpenListener."<init>":(Lio/undertow/connector/ByteBufferPool;)V
     131: putfield      #28                 // Field openListener:Lio/undertow/server/protocol/http/HttpOpenListener;
     134: aload_0
     135: getfield      #28                 // Field openListener:Lio/undertow/server/protocol/http/HttpOpenListener;
     138: invokestatic  #29                 // Method org/xnio/ChannelListeners.openListenerAdapter:(Lorg/xnio/ChannelListener;)Lorg/xnio/ChannelListener;
     141: astore_2
     142: aload_0
     143: aload_0
     144: getfield      #21                 // Field worker:Lorg/xnio/XnioWorker;
     147: new           #30                 // class java/net/InetSocketAddress
     150: dup
     151: aload_0
     152: getfield      #4                  // Field port:I
     155: invokespecial #31                 // Method java/net/InetSocketAddress."<init>":(I)V
     158: aload_2
     159: aload_1
     160: invokevirtual #32                 // Method org/xnio/XnioWorker.createStreamConnectionServer:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/channels/AcceptingChannel;
     163: putfield      #33                 // Field server:Lorg/xnio/channels/AcceptingChannel;
     166: aload_0
     167: invokestatic  #34                 // Method getRootHandler:()Lio/undertow/websockets/WebSocketProtocolHandshakeHandler;
     170: new           #35                 // class io/undertow/websockets/extensions/PerMessageDeflateHandshake
     173: dup
     174: invokespecial #36                 // Method io/undertow/websockets/extensions/PerMessageDeflateHandshake."<init>":()V
     177: invokevirtual #37                 // Method io/undertow/websockets/WebSocketProtocolHandshakeHandler.addExtension:(Lio/undertow/websockets/extensions/ExtensionHandshake;)Lio/undertow/websockets/WebSocketProtocolHandshakeHandler;
     180: invokespecial #38                 // Method setRootHandler:(Lio/undertow/server/HttpHandler;)V
     183: aload_0
     184: getfield      #33                 // Field server:Lorg/xnio/channels/AcceptingChannel;
     187: invokeinterface #39,  1           // InterfaceMethod org/xnio/channels/AcceptingChannel.resumeAccepts:()V
     192: goto          205
     195: astore_1
     196: new           #41                 // class java/lang/RuntimeException
     199: dup
     200: aload_1
     201: invokespecial #42                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     204: athrow
     205: return
    Exception table:
       from    to  target type
           7   192   195   Class java/io/IOException

  public static io.undertow.websockets.WebSocketProtocolHandshakeHandler getRootHandler();
    Code:
       0: new           #43                 // class io/undertow/websockets/WebSocketProtocolHandshakeHandler
       3: dup
       4: new           #44                 // class io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer$3
       7: dup
       8: invokespecial #45                 // Method io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer$3."<init>":()V
      11: invokespecial #46                 // Method io/undertow/websockets/WebSocketProtocolHandshakeHandler."<init>":(Lio/undertow/websockets/WebSocketConnectionCallback;)V
      14: areturn

  private void setRootHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: getfield      #28                 // Field openListener:Lio/undertow/server/protocol/http/HttpOpenListener;
       4: aload_1
       5: invokevirtual #47                 // Method io/undertow/server/protocol/http/HttpOpenListener.setRootHandler:(Lio/undertow/server/HttpHandler;)V
       8: return

  public static void main(java.lang.String[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpne     20
       6: aload_0
       7: iconst_0
       8: aaload
       9: ldc           #48                 // String --debug
      11: invokevirtual #49                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          20
      17: invokestatic  #50                 // Method org/apache/log4j/BasicConfigurator.configure:()V
      20: new           #51                 // class io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer
      23: dup
      24: sipush        7777
      27: invokespecial #52                 // Method "<init>":(I)V
      30: invokevirtual #53                 // Method run:()V
      33: return

  static org.xnio.ChannelExceptionHandler access$100();
    Code:
       0: getstatic     #2                  // Field W_H:Lorg/xnio/ChannelExceptionHandler;
       3: areturn

  static org.xnio.ChannelExceptionHandler access$200();
    Code:
       0: getstatic     #1                  // Field R_H:Lorg/xnio/ChannelExceptionHandler;
       3: areturn

  static {};
    Code:
       0: new           #54                 // class io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer$1
       3: dup
       4: invokespecial #55                 // Method io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer$1."<init>":()V
       7: putstatic     #2                  // Field W_H:Lorg/xnio/ChannelExceptionHandler;
      10: new           #56                 // class io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer$2
      13: dup
      14: invokespecial #57                 // Method io/undertow/websockets/extensions/AutobahnExtensionCustomReceiverServer$2."<init>":()V
      17: putstatic     #1                  // Field R_H:Lorg/xnio/ChannelExceptionHandler;
      20: return
}
