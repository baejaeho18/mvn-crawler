Compiled from "ProcessedFileThread.java"
public class org.apache.pulsar.io.file.ProcessedFileThread extends java.lang.Thread {
  private final java.util.concurrent.BlockingQueue<java.io.File> recentlyProcessed;

  private final boolean keepOriginal;

  private final java.lang.String processedFileSuffix;

  public org.apache.pulsar.io.file.ProcessedFileThread(org.apache.pulsar.io.file.FileSourceConfig, java.util.concurrent.BlockingQueue<java.io.File>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/pulsar/io/file/FileSourceConfig.getKeepFile:()Ljava/lang/Boolean;
       9: invokestatic  #3                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      12: iconst_0
      13: invokestatic  #4                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: invokevirtual #5                  // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #6                  // class java/lang/Boolean
      22: invokevirtual #7                  // Method java/lang/Boolean.booleanValue:()Z
      25: putfield      #8                  // Field keepOriginal:Z
      28: aload_0
      29: aload_1
      30: invokevirtual #9                  // Method org/apache/pulsar/io/file/FileSourceConfig.getProcessedFileSuffix:()Ljava/lang/String;
      33: putfield      #10                 // Field processedFileSuffix:Ljava/lang/String;
      36: aload_0
      37: aload_2
      38: putfield      #11                 // Field recentlyProcessed:Ljava/util/concurrent/BlockingQueue;
      41: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #11                 // Field recentlyProcessed:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
       9: checkcast     #13                 // class java/io/File
      12: astore_1
      13: aload_0
      14: aload_1
      15: invokespecial #14                 // Method handle:(Ljava/io/File;)V
      18: goto          0
      21: astore_1
      22: return
    Exception table:
       from    to  target type
           0    21    21   Class java/lang/InterruptedException

  private void handle(java.io.File);
    Code:
       0: aload_0
       1: getfield      #8                  // Field keepOriginal:Z
       4: ifne          94
       7: aload_0
       8: getfield      #10                 // Field processedFileSuffix:Ljava/lang/String;
      11: invokestatic  #16                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      14: ifeq          28
      17: aload_1
      18: invokevirtual #17                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      21: invokestatic  #18                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      24: pop
      25: goto          86
      28: new           #13                 // class java/io/File
      31: dup
      32: aload_1
      33: invokevirtual #19                 // Method java/io/File.getParentFile:()Ljava/io/File;
      36: new           #20                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_1
      44: invokevirtual #22                 // Method java/io/File.getName:()Ljava/lang/String;
      47: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #10                 // Field processedFileSuffix:Ljava/lang/String;
      54: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #25                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      63: astore_2
      64: aload_1
      65: invokevirtual #17                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      68: aload_2
      69: invokevirtual #17                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      72: iconst_1
      73: anewarray     #26                 // class java/nio/file/CopyOption
      76: dup
      77: iconst_0
      78: getstatic     #27                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      81: aastore
      82: invokestatic  #28                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      85: pop
      86: goto          94
      89: astore_2
      90: aload_2
      91: invokevirtual #30                 // Method java/io/IOException.printStackTrace:()V
      94: return
    Exception table:
       from    to  target type
           7    86    89   Class java/io/IOException
}
