Compiled from "GZipFiles.java"
public class org.apache.pulsar.io.file.utils.GZipFiles {
  public org.apache.pulsar.io.file.utils.GZipFiles();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isGzip(java.io.File);
    Code:
       0: new           #2                  // class java/io/FileInputStream
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: astore_1
       9: aconst_null
      10: astore_2
      11: new           #4                  // class java/io/PushbackInputStream
      14: dup
      15: aload_1
      16: iconst_2
      17: invokespecial #5                  // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      20: astore_3
      21: iconst_2
      22: newarray       byte
      24: astore        4
      26: aload_3
      27: aload         4
      29: invokevirtual #6                  // Method java/io/PushbackInputStream.read:([B)I
      32: istore        5
      34: aload_3
      35: aload         4
      37: iconst_0
      38: iload         5
      40: invokevirtual #7                  // Method java/io/PushbackInputStream.unread:([BII)V
      43: aload         4
      45: iconst_0
      46: baload
      47: bipush        31
      49: if_icmpne     65
      52: aload         4
      54: iconst_1
      55: baload
      56: bipush        -117
      58: if_icmpne     65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: istore        6
      68: aload_1
      69: ifnull        98
      72: aload_2
      73: ifnull        94
      76: aload_1
      77: invokevirtual #8                  // Method java/io/InputStream.close:()V
      80: goto          98
      83: astore        7
      85: aload_2
      86: aload         7
      88: invokevirtual #10                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      91: goto          98
      94: aload_1
      95: invokevirtual #8                  // Method java/io/InputStream.close:()V
      98: iload         6
     100: ireturn
     101: astore_3
     102: aload_3
     103: astore_2
     104: aload_3
     105: athrow
     106: astore        8
     108: aload_1
     109: ifnull        138
     112: aload_2
     113: ifnull        134
     116: aload_1
     117: invokevirtual #8                  // Method java/io/InputStream.close:()V
     120: goto          138
     123: astore        9
     125: aload_2
     126: aload         9
     128: invokevirtual #10                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     131: goto          138
     134: aload_1
     135: invokevirtual #8                  // Method java/io/InputStream.close:()V
     138: aload         8
     140: athrow
     141: astore_1
     142: iconst_0
     143: ireturn
    Exception table:
       from    to  target type
          76    80    83   Class java/lang/Throwable
          11    68   101   Class java/lang/Throwable
          11    68   106   any
         116   120   123   Class java/lang/Throwable
         101   108   106   any
           0    98   141   Class java/lang/Exception
         101   141   141   Class java/lang/Exception

  public static java.util.stream.Stream<java.lang.String> lines(java.nio.file.Path);
    Code:
       0: aconst_null
       1: astore_1
       2: new           #12                 // class java/util/zip/GZIPInputStream
       5: dup
       6: aload_0
       7: iconst_0
       8: anewarray     #13                 // class java/nio/file/OpenOption
      11: invokestatic  #14                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      14: invokespecial #15                 // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
      17: astore_1
      18: goto          35
      21: astore_2
      22: aload_1
      23: invokestatic  #17                 // Method closeSafely:(Ljava/io/Closeable;)V
      26: new           #18                 // class java/io/UncheckedIOException
      29: dup
      30: aload_2
      31: invokespecial #19                 // Method java/io/UncheckedIOException."<init>":(Ljava/io/IOException;)V
      34: athrow
      35: new           #20                 // class java/io/BufferedReader
      38: dup
      39: new           #21                 // class java/io/InputStreamReader
      42: dup
      43: aload_1
      44: invokespecial #22                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      47: invokespecial #23                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      50: astore_2
      51: aload_2
      52: invokevirtual #24                 // Method java/io/BufferedReader.lines:()Ljava/util/stream/Stream;
      55: aload_2
      56: invokedynamic #25,  0             // InvokeDynamic #0:run:(Ljava/io/BufferedReader;)Ljava/lang/Runnable;
      61: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;
      66: checkcast     #27                 // class java/util/stream/Stream
      69: areturn
    Exception table:
       from    to  target type
           2    18    21   Class java/io/IOException

  private static void closeSafely(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokeinterface #28,  1           // InterfaceMethod java/io/Closeable.close:()V
      10: goto          14
      13: astore_1
      14: return
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  private static void lambda$lines$0(java.io.BufferedReader);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method closeSafely:(Ljava/io/Closeable;)V
       4: return
}
