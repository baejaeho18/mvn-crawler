Compiled from "DefaultBaseTypeLimitingValidator.java"
public class com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator extends com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator implements java.io.Serializable {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator."<init>":()V
       4: return

  public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2                  // Method isUnsafeBaseType:(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/JavaType;)Z
       6: ifeq          13
       9: getstatic     #3                  // Field com/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity.DENIED:Lcom/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity;
      12: areturn
      13: getstatic     #4                  // Field com/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity.INDETERMINATE:Lcom/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity;
      16: areturn

  public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.JavaType, java.lang.String);
    Code:
       0: getstatic     #4                  // Field com/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity.INDETERMINATE:Lcom/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity;
       3: areturn

  public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #5                  // Method isSafeSubType:(Lcom/fasterxml/jackson/databind/cfg/MapperConfig;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;)Z
       7: ifeq          16
      10: getstatic     #6                  // Field com/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity.ALLOWED:Lcom/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity;
      13: goto          19
      16: getstatic     #3                  // Field com/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity.DENIED:Lcom/fasterxml/jackson/databind/jsontype/PolymorphicTypeValidator$Validity;
      19: areturn

  protected boolean isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.JavaType);
    Code:
       0: getstatic     #7                  // Field com/fasterxml/jackson/databind/jsontype/DefaultBaseTypeLimitingValidator$UnsafeBaseTypes.instance:Lcom/fasterxml/jackson/databind/jsontype/DefaultBaseTypeLimitingValidator$UnsafeBaseTypes;
       3: aload_2
       4: invokevirtual #8                  // Method com/fasterxml/jackson/databind/JavaType.getRawClass:()Ljava/lang/Class;
       7: invokevirtual #9                  // Method com/fasterxml/jackson/databind/jsontype/DefaultBaseTypeLimitingValidator$UnsafeBaseTypes.isUnsafeBaseType:(Ljava/lang/Class;)Z
      10: ireturn

  protected boolean isSafeSubType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType);
    Code:
       0: iconst_1
       1: ireturn
}
