Compiled from "Functions.java"
public class org.apache.commons.lang3.Functions {
  public org.apache.commons.lang3.Functions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <O1, O2, T extends java.lang.Throwable> void accept(org.apache.commons.lang3.Functions$FailableBiConsumer<O1, O2, T>, O1, O2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #2,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/Functions$FailableRunnable;
       8: invokestatic  #3                  // Method run:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)V
      11: return

  public static <O, T extends java.lang.Throwable> void accept(org.apache.commons.lang3.Functions$FailableConsumer<O, T>, O);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #4,  0              // InvokeDynamic #1:run:(Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/Functions$FailableRunnable;
       7: invokestatic  #3                  // Method run:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)V
      10: return

  public static <O1, O2, O, T extends java.lang.Throwable> O apply(org.apache.commons.lang3.Functions$FailableBiFunction<O1, O2, O, T>, O1, O2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #5,  0              // InvokeDynamic #2:get:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/Functions$FailableSupplier;
       8: invokestatic  #6                  // Method get:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/lang/Object;
      11: areturn

  public static <I, O, T extends java.lang.Throwable> O apply(org.apache.commons.lang3.Functions$FailableFunction<I, O, T>, I);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #7,  0              // InvokeDynamic #3:get:(Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/Functions$FailableSupplier;
       7: invokestatic  #6                  // Method get:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/lang/Object;
      10: areturn

  public static <O1, O2> java.util.function.BiConsumer<O1, O2> asBiConsumer(org.apache.commons.lang3.Functions$FailableBiConsumer<O1, O2, ?>);
    Code:
       0: aload_0
       1: invokedynamic #8,  0              // InvokeDynamic #4:accept:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;)Ljava/util/function/BiConsumer;
       6: areturn

  public static <O1, O2, O> java.util.function.BiFunction<O1, O2, O> asBiFunction(org.apache.commons.lang3.Functions$FailableBiFunction<O1, O2, O, ?>);
    Code:
       0: aload_0
       1: invokedynamic #9,  0              // InvokeDynamic #5:apply:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;)Ljava/util/function/BiFunction;
       6: areturn

  public static <O1, O2> java.util.function.BiPredicate<O1, O2> asBiPredicate(org.apache.commons.lang3.Functions$FailableBiPredicate<O1, O2, ?>);
    Code:
       0: aload_0
       1: invokedynamic #10,  0             // InvokeDynamic #6:test:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;)Ljava/util/function/BiPredicate;
       6: areturn

  public static <O> java.util.concurrent.Callable<O> asCallable(org.apache.commons.lang3.Functions$FailableCallable<O, ?>);
    Code:
       0: aload_0
       1: invokedynamic #11,  0             // InvokeDynamic #7:call:(Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/util/concurrent/Callable;
       6: areturn

  public static <I> java.util.function.Consumer<I> asConsumer(org.apache.commons.lang3.Functions$FailableConsumer<I, ?>);
    Code:
       0: aload_0
       1: invokedynamic #12,  0             // InvokeDynamic #8:accept:(Lorg/apache/commons/lang3/Functions$FailableConsumer;)Ljava/util/function/Consumer;
       6: areturn

  public static <I, O> java.util.function.Function<I, O> asFunction(org.apache.commons.lang3.Functions$FailableFunction<I, O, ?>);
    Code:
       0: aload_0
       1: invokedynamic #13,  0             // InvokeDynamic #9:apply:(Lorg/apache/commons/lang3/Functions$FailableFunction;)Ljava/util/function/Function;
       6: areturn

  public static <I> java.util.function.Predicate<I> asPredicate(org.apache.commons.lang3.Functions$FailablePredicate<I, ?>);
    Code:
       0: aload_0
       1: invokedynamic #14,  0             // InvokeDynamic #10:test:(Lorg/apache/commons/lang3/Functions$FailablePredicate;)Ljava/util/function/Predicate;
       6: areturn

  public static java.lang.Runnable asRunnable(org.apache.commons.lang3.Functions$FailableRunnable<?>);
    Code:
       0: aload_0
       1: invokedynamic #15,  0             // InvokeDynamic #11:run:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)Ljava/lang/Runnable;
       6: areturn

  public static <O> java.util.function.Supplier<O> asSupplier(org.apache.commons.lang3.Functions$FailableSupplier<O, ?>);
    Code:
       0: aload_0
       1: invokedynamic #16,  0             // InvokeDynamic #12:get:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/util/function/Supplier;
       6: areturn

  public static <O, T extends java.lang.Throwable> O call(org.apache.commons.lang3.Functions$FailableCallable<O, T>);
    Code:
       0: aload_0
       1: dup
       2: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: pop
       6: invokedynamic #18,  0             // InvokeDynamic #13:get:(Lorg/apache/commons/lang3/Functions$FailableCallable;)Lorg/apache/commons/lang3/Functions$FailableSupplier;
      11: invokestatic  #6                  // Method get:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/lang/Object;
      14: areturn

  public static <O, T extends java.lang.Throwable> O get(org.apache.commons.lang3.Functions$FailableSupplier<O, T>);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod org/apache/commons/lang3/Functions$FailableSupplier.get:()Ljava/lang/Object;
       6: areturn
       7: astore_1
       8: aload_1
       9: invokestatic  #21                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  private static <T extends java.lang.Throwable> boolean getAsBoolean(org.apache.commons.lang3.function.FailableBooleanSupplier<T>);
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableBooleanSupplier.getAsBoolean:()Z
       6: ireturn
       7: astore_1
       8: aload_1
       9: invokestatic  #21                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static java.lang.RuntimeException rethrow(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #23                 // String throwable
       3: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #25                 // class java/lang/RuntimeException
      11: ifeq          19
      14: aload_0
      15: checkcast     #25                 // class java/lang/RuntimeException
      18: athrow
      19: aload_0
      20: instanceof    #26                 // class java/lang/Error
      23: ifeq          31
      26: aload_0
      27: checkcast     #26                 // class java/lang/Error
      30: athrow
      31: aload_0
      32: instanceof    #27                 // class java/io/IOException
      35: ifeq          50
      38: new           #28                 // class java/io/UncheckedIOException
      41: dup
      42: aload_0
      43: checkcast     #27                 // class java/io/IOException
      46: invokespecial #29                 // Method java/io/UncheckedIOException."<init>":(Ljava/io/IOException;)V
      49: athrow
      50: new           #30                 // class java/lang/reflect/UndeclaredThrowableException
      53: dup
      54: aload_0
      55: invokespecial #31                 // Method java/lang/reflect/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      58: athrow

  public static <T extends java.lang.Throwable> void run(org.apache.commons.lang3.Functions$FailableRunnable<T>);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/lang3/Functions$FailableRunnable.run:()V
       6: goto          15
       9: astore_1
      10: aload_1
      11: invokestatic  #21                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      14: athrow
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  public static <O> org.apache.commons.lang3.Streams$FailableStream<O> stream(java.util.Collection<O>);
    Code:
       0: new           #33                 // class org/apache/commons/lang3/Streams$FailableStream
       3: dup
       4: aload_0
       5: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      10: invokespecial #35                 // Method org/apache/commons/lang3/Streams$FailableStream."<init>":(Ljava/util/stream/Stream;)V
      13: areturn

  public static <O> org.apache.commons.lang3.Streams$FailableStream<O> stream(java.util.stream.Stream<O>);
    Code:
       0: new           #33                 // class org/apache/commons/lang3/Streams$FailableStream
       3: dup
       4: aload_0
       5: invokespecial #35                 // Method org/apache/commons/lang3/Streams$FailableStream."<init>":(Ljava/util/stream/Stream;)V
       8: areturn

  public static <O1, O2, T extends java.lang.Throwable> boolean test(org.apache.commons.lang3.Functions$FailableBiPredicate<O1, O2, T>, O1, O2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #36,  0             // InvokeDynamic #14:getAsBoolean:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;
       8: invokestatic  #37                 // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z
      11: ireturn

  public static <O, T extends java.lang.Throwable> boolean test(org.apache.commons.lang3.Functions$FailablePredicate<O, T>, O);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #38,  0             // InvokeDynamic #15:getAsBoolean:(Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;
       7: invokestatic  #37                 // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z
      10: ireturn

  public static void tryWithResources(org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.Functions$FailableConsumer<java.lang.Throwable, ? extends java.lang.Throwable>, org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>...);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: invokedynamic #39,  0             // InvokeDynamic #16:accept:()Lorg/apache/commons/lang3/Functions$FailableConsumer;
       9: astore_3
      10: goto          15
      13: aload_1
      14: astore_3
      15: aload_2
      16: ifnull        58
      19: aload_2
      20: astore        4
      22: aload         4
      24: arraylength
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload         5
      34: if_icmpge     58
      37: aload         4
      39: iload         6
      41: aaload
      42: astore        7
      44: aload         7
      46: ldc           #40                 // String runnable
      48: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      51: pop
      52: iinc          6, 1
      55: goto          30
      58: aconst_null
      59: astore        4
      61: aload_0
      62: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/lang3/Functions$FailableRunnable.run:()V
      67: goto          76
      70: astore        5
      72: aload         5
      74: astore        4
      76: aload_2
      77: ifnull        132
      80: aload_2
      81: astore        5
      83: aload         5
      85: arraylength
      86: istore        6
      88: iconst_0
      89: istore        7
      91: iload         7
      93: iload         6
      95: if_icmpge     132
      98: aload         5
     100: iload         7
     102: aaload
     103: astore        8
     105: aload         8
     107: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/lang3/Functions$FailableRunnable.run:()V
     112: goto          126
     115: astore        9
     117: aload         4
     119: ifnonnull     126
     122: aload         9
     124: astore        4
     126: iinc          7, 1
     129: goto          91
     132: aload         4
     134: ifnull        156
     137: aload_3
     138: aload         4
     140: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/lang3/Functions$FailableConsumer.accept:(Ljava/lang/Object;)V
     145: goto          156
     148: astore        5
     150: aload         5
     152: invokestatic  #21                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     155: athrow
     156: return
    Exception table:
       from    to  target type
          61    67    70   Class java/lang/Throwable
         105   112   115   Class java/lang/Throwable
         137   145   148   Class java/lang/Throwable

  public static void tryWithResources(org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #42                 // Method tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V
       6: return

  private static boolean lambda$test$14(org.apache.commons.lang3.Functions$FailablePredicate, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #43,  2           // InterfaceMethod org/apache/commons/lang3/Functions$FailablePredicate.test:(Ljava/lang/Object;)Z
       7: ireturn

  private static boolean lambda$test$13(org.apache.commons.lang3.Functions$FailableBiPredicate, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #44,  3           // InterfaceMethod org/apache/commons/lang3/Functions$FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  private static java.lang.Object lambda$asSupplier$12(org.apache.commons.lang3.Functions$FailableSupplier);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method get:(Lorg/apache/commons/lang3/Functions$FailableSupplier;)Ljava/lang/Object;
       4: areturn

  private static void lambda$asRunnable$11(org.apache.commons.lang3.Functions$FailableRunnable);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method run:(Lorg/apache/commons/lang3/Functions$FailableRunnable;)V
       4: return

  private static boolean lambda$asPredicate$10(org.apache.commons.lang3.Functions$FailablePredicate, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // Method test:(Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z
       5: ireturn

  private static java.lang.Object lambda$asFunction$9(org.apache.commons.lang3.Functions$FailableFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // Method apply:(Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static void lambda$asConsumer$8(org.apache.commons.lang3.Functions$FailableConsumer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // Method accept:(Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V
       5: return

  private static java.lang.Object lambda$asCallable$7(org.apache.commons.lang3.Functions$FailableCallable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #48                 // Method call:(Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/lang/Object;
       4: areturn

  private static boolean lambda$asBiPredicate$6(org.apache.commons.lang3.Functions$FailableBiPredicate, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #49                 // Method test:(Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  private static java.lang.Object lambda$asBiFunction$5(org.apache.commons.lang3.Functions$FailableBiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #50                 // Method apply:(Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  private static void lambda$asBiConsumer$4(org.apache.commons.lang3.Functions$FailableBiConsumer, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #51                 // Method accept:(Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  private static java.lang.Object lambda$apply$3(org.apache.commons.lang3.Functions$FailableFunction, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #52,  2           // InterfaceMethod org/apache/commons/lang3/Functions$FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private static java.lang.Object lambda$apply$2(org.apache.commons.lang3.Functions$FailableBiFunction, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #53,  3           // InterfaceMethod org/apache/commons/lang3/Functions$FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private static void lambda$accept$1(org.apache.commons.lang3.Functions$FailableConsumer, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #41,  2           // InterfaceMethod org/apache/commons/lang3/Functions$FailableConsumer.accept:(Ljava/lang/Object;)V
       7: return

  private static void lambda$accept$0(org.apache.commons.lang3.Functions$FailableBiConsumer, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #54,  3           // InterfaceMethod org/apache/commons/lang3/Functions$FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return
}
