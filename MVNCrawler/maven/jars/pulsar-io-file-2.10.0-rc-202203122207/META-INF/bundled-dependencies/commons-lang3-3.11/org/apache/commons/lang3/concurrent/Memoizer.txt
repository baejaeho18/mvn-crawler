Compiled from "Memoizer.java"
public class org.apache.commons.lang3.concurrent.Memoizer<I, O> implements org.apache.commons.lang3.concurrent.Computable<I, O> {
  private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.Future<O>> cache;

  private final org.apache.commons.lang3.concurrent.Computable<I, O> computable;

  private final boolean recalculate;

  public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V
       6: return

  public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field recalculate:Z
      25: return

  public O compute(I) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class java/util/concurrent/Future
      13: astore_2
      14: aload_2
      15: ifnonnull     64
      18: aload_0
      19: aload_1
      20: invokedynamic #10,  0             // InvokeDynamic #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;
      25: astore_3
      26: new           #11                 // class java/util/concurrent/FutureTask
      29: dup
      30: aload_3
      31: invokespecial #12                 // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      34: astore        4
      36: aload_0
      37: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      40: aload_1
      41: aload         4
      43: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #9                  // class java/util/concurrent/Future
      51: astore_2
      52: aload_2
      53: ifnonnull     64
      56: aload         4
      58: astore_2
      59: aload         4
      61: invokevirtual #14                 // Method java/util/concurrent/FutureTask.run:()V
      64: aload_2
      65: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      70: areturn
      71: astore_3
      72: aload_0
      73: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      76: aload_1
      77: aload_2
      78: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      83: pop
      84: goto          116
      87: astore_3
      88: aload_0
      89: getfield      #7                  // Field recalculate:Z
      92: ifeq          107
      95: aload_0
      96: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      99: aload_1
     100: aload_2
     101: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     106: pop
     107: aload_0
     108: aload_3
     109: invokevirtual #19                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
     112: invokespecial #20                 // Method launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     115: athrow
     116: goto          0
    Exception table:
       from    to  target type
          64    70    71   Class java/util/concurrent/CancellationException
          64    70    87   Class java/util/concurrent/ExecutionException

  private java.lang.RuntimeException launderException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #21                 // class java/lang/RuntimeException
       4: ifeq          12
       7: aload_1
       8: checkcast     #21                 // class java/lang/RuntimeException
      11: areturn
      12: aload_1
      13: instanceof    #22                 // class java/lang/Error
      16: ifeq          24
      19: aload_1
      20: checkcast     #22                 // class java/lang/Error
      23: athrow
      24: new           #23                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #24                 // String Unchecked exception
      30: aload_1
      31: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: athrow

  private java.lang.Object lambda$compute$0(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn
}
