Compiled from "PropertyUtils.java"
public class org.yaml.snakeyaml.introspector.PropertyUtils {
  private final java.util.Map<java.lang.Class<?>, java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.Property>> propertiesCache;

  private final java.util.Map<java.lang.Class<?>, java.util.Set<org.yaml.snakeyaml.introspector.Property>> readableProperties;

  private org.yaml.snakeyaml.introspector.BeanAccess beanAccess;

  private boolean allowReadOnlyProperties;

  private boolean skipMissingProperties;

  private org.yaml.snakeyaml.util.PlatformFeatureDetector platformFeatureDetector;

  private static final java.lang.String TRANSIENT;

  public org.yaml.snakeyaml.introspector.PropertyUtils();
    Code:
       0: aload_0
       1: new           #1                  // class org/yaml/snakeyaml/util/PlatformFeatureDetector
       4: dup
       5: invokespecial #2                  // Method org/yaml/snakeyaml/util/PlatformFeatureDetector."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lorg/yaml/snakeyaml/util/PlatformFeatureDetector;)V
      11: return

  org.yaml.snakeyaml.introspector.PropertyUtils(org.yaml.snakeyaml.util.PlatformFeatureDetector);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/HashMap
       8: dup
       9: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      12: putfield      #7                  // Field propertiesCache:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #8                  // Field readableProperties:Ljava/util/Map;
      26: aload_0
      27: getstatic     #9                  // Field org/yaml/snakeyaml/introspector/BeanAccess.DEFAULT:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      30: putfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      33: aload_0
      34: iconst_0
      35: putfield      #11                 // Field allowReadOnlyProperties:Z
      38: aload_0
      39: iconst_0
      40: putfield      #12                 // Field skipMissingProperties:Z
      43: aload_0
      44: aload_1
      45: putfield      #13                 // Field platformFeatureDetector:Lorg/yaml/snakeyaml/util/PlatformFeatureDetector;
      48: aload_1
      49: invokevirtual #14                 // Method org/yaml/snakeyaml/util/PlatformFeatureDetector.isRunningOnAndroid:()Z
      52: ifeq          62
      55: aload_0
      56: getstatic     #15                 // Field org/yaml/snakeyaml/introspector/BeanAccess.FIELD:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      59: putfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      62: return

  protected java.util.Map<java.lang.String, org.yaml.snakeyaml.introspector.Property> getPropertiesMap(java.lang.Class<?>, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #18                 // class java/util/Map
      26: areturn
      27: new           #19                 // class java/util/LinkedHashMap
      30: dup
      31: invokespecial #20                 // Method java/util/LinkedHashMap."<init>":()V
      34: astore_3
      35: iconst_0
      36: istore        4
      38: getstatic     #21                 // Field org/yaml/snakeyaml/introspector/PropertyUtils$1.$SwitchMap$org$yaml$snakeyaml$introspector$BeanAccess:[I
      41: aload_2
      42: invokevirtual #22                 // Method org/yaml/snakeyaml/introspector/BeanAccess.ordinal:()I
      45: iaload
      46: lookupswitch  { // 1
                     1: 64
               default: 178
          }
      64: aload_1
      65: astore        5
      67: aload         5
      69: ifnull        175
      72: aload         5
      74: invokevirtual #23                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      77: astore        6
      79: aload         6
      81: arraylength
      82: istore        7
      84: iconst_0
      85: istore        8
      87: iload         8
      89: iload         7
      91: if_icmpge     165
      94: aload         6
      96: iload         8
      98: aaload
      99: astore        9
     101: aload         9
     103: invokevirtual #24                 // Method java/lang/reflect/Field.getModifiers:()I
     106: istore        10
     108: iload         10
     110: invokestatic  #25                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
     113: ifne          159
     116: iload         10
     118: invokestatic  #26                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     121: ifne          159
     124: aload_3
     125: aload         9
     127: invokevirtual #27                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     130: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     135: ifne          159
     138: aload_3
     139: aload         9
     141: invokevirtual #27                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     144: new           #28                 // class org/yaml/snakeyaml/introspector/FieldProperty
     147: dup
     148: aload         9
     150: invokespecial #29                 // Method org/yaml/snakeyaml/introspector/FieldProperty."<init>":(Ljava/lang/reflect/Field;)V
     153: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: iinc          8, 1
     162: goto          87
     165: aload         5
     167: invokevirtual #31                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     170: astore        5
     172: goto          67
     175: goto          398
     178: aload_1
     179: invokestatic  #32                 // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
     182: invokeinterface #33,  1           // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
     187: astore        5
     189: aload         5
     191: arraylength
     192: istore        6
     194: iconst_0
     195: istore        7
     197: iload         7
     199: iload         6
     201: if_icmpge     272
     204: aload         5
     206: iload         7
     208: aaload
     209: astore        8
     211: aload         8
     213: invokevirtual #34                 // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
     216: astore        9
     218: aload         9
     220: ifnull        236
     223: aload         9
     225: invokevirtual #35                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
     228: ldc           #36                 // String getClass
     230: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     233: ifne          266
     236: aload_0
     237: aload         8
     239: invokespecial #38                 // Method isTransient:(Ljava/beans/FeatureDescriptor;)Z
     242: ifne          266
     245: aload_3
     246: aload         8
     248: invokevirtual #39                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     251: new           #40                 // class org/yaml/snakeyaml/introspector/MethodProperty
     254: dup
     255: aload         8
     257: invokespecial #41                 // Method org/yaml/snakeyaml/introspector/MethodProperty."<init>":(Ljava/beans/PropertyDescriptor;)V
     260: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     265: pop
     266: iinc          7, 1
     269: goto          197
     272: goto          287
     275: astore        5
     277: new           #43                 // class org/yaml/snakeyaml/error/YAMLException
     280: dup
     281: aload         5
     283: invokespecial #44                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/Throwable;)V
     286: athrow
     287: aload_1
     288: astore        5
     290: aload         5
     292: ifnull        398
     295: aload         5
     297: invokevirtual #23                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
     300: astore        6
     302: aload         6
     304: arraylength
     305: istore        7
     307: iconst_0
     308: istore        8
     310: iload         8
     312: iload         7
     314: if_icmpge     388
     317: aload         6
     319: iload         8
     321: aaload
     322: astore        9
     324: aload         9
     326: invokevirtual #24                 // Method java/lang/reflect/Field.getModifiers:()I
     329: istore        10
     331: iload         10
     333: invokestatic  #25                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
     336: ifne          382
     339: iload         10
     341: invokestatic  #26                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     344: ifne          382
     347: iload         10
     349: invokestatic  #45                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     352: ifeq          379
     355: aload_3
     356: aload         9
     358: invokevirtual #27                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     361: new           #28                 // class org/yaml/snakeyaml/introspector/FieldProperty
     364: dup
     365: aload         9
     367: invokespecial #29                 // Method org/yaml/snakeyaml/introspector/FieldProperty."<init>":(Ljava/lang/reflect/Field;)V
     370: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     375: pop
     376: goto          382
     379: iconst_1
     380: istore        4
     382: iinc          8, 1
     385: goto          310
     388: aload         5
     390: invokevirtual #31                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     393: astore        5
     395: goto          290
     398: aload_3
     399: invokeinterface #46,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     404: ifeq          442
     407: iload         4
     409: ifeq          442
     412: new           #43                 // class org/yaml/snakeyaml/error/YAMLException
     415: dup
     416: new           #47                 // class java/lang/StringBuilder
     419: dup
     420: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
     423: ldc           #49                 // String No JavaBean properties found in
     425: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     428: aload_1
     429: invokevirtual #51                 // Method java/lang/Class.getName:()Ljava/lang/String;
     432: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     435: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     438: invokespecial #53                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
     441: athrow
     442: aload_0
     443: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
     446: aload_1
     447: aload_3
     448: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     453: pop
     454: aload_3
     455: areturn
    Exception table:
       from    to  target type
         178   272   275   Class java/beans/IntrospectionException

  private boolean isTransient(java.beans.FeatureDescriptor);
    Code:
       0: getstatic     #54                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
       3: aload_1
       4: ldc           #55                 // String transient
       6: invokevirtual #56                 // Method java/beans/FeatureDescriptor.getValue:(Ljava/lang/String;)Ljava/lang/Object;
       9: invokevirtual #57                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      12: ireturn

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       6: invokevirtual #58                 // Method getProperties:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
       9: areturn

  public java.util.Set<org.yaml.snakeyaml.introspector.Property> getProperties(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #8                  // Field readableProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #59                 // class java/util/Set
      26: areturn
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #60                 // Method createPropertySet:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Set;
      33: astore_3
      34: aload_0
      35: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      38: aload_1
      39: aload_3
      40: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: areturn

  protected java.util.Set<org.yaml.snakeyaml.introspector.Property> createPropertySet(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: new           #61                 // class java/util/TreeSet
       3: dup
       4: invokespecial #62                 // Method java/util/TreeSet."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #63                 // Method getPropertiesMap:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Map;
      14: invokeinterface #64,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      19: astore        4
      21: aload         4
      23: invokeinterface #65,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          87
      40: aload         5
      42: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #68                 // class org/yaml/snakeyaml/introspector/Property
      50: astore        6
      52: aload         6
      54: invokevirtual #69                 // Method org/yaml/snakeyaml/introspector/Property.isReadable:()Z
      57: ifeq          84
      60: aload_0
      61: getfield      #11                 // Field allowReadOnlyProperties:Z
      64: ifne          75
      67: aload         6
      69: invokevirtual #70                 // Method org/yaml/snakeyaml/introspector/Property.isWritable:()Z
      72: ifeq          84
      75: aload_3
      76: aload         6
      78: invokeinterface #71,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          30
      87: aload_3
      88: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class<? extends java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
       7: invokevirtual #72                 // Method getProperty:(Ljava/lang/Class;Ljava/lang/String;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Lorg/yaml/snakeyaml/introspector/Property;
      10: areturn

  public org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class<? extends java.lang.Object>, java.lang.String, org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #63                 // Method getPropertiesMap:(Ljava/lang/Class;Lorg/yaml/snakeyaml/introspector/BeanAccess;)Ljava/util/Map;
       6: astore        4
       8: aload         4
      10: aload_2
      11: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #68                 // class org/yaml/snakeyaml/introspector/Property
      19: astore        5
      21: aload         5
      23: ifnonnull     43
      26: aload_0
      27: getfield      #12                 // Field skipMissingProperties:Z
      30: ifeq          43
      33: new           #73                 // class org/yaml/snakeyaml/introspector/MissingProperty
      36: dup
      37: aload_2
      38: invokespecial #74                 // Method org/yaml/snakeyaml/introspector/MissingProperty."<init>":(Ljava/lang/String;)V
      41: astore        5
      43: aload         5
      45: ifnonnull     87
      48: new           #43                 // class org/yaml/snakeyaml/error/YAMLException
      51: dup
      52: new           #47                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #75                 // String Unable to find property \'
      61: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_2
      65: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #76                 // String \' on class:
      70: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #51                 // Method java/lang/Class.getName:()Ljava/lang/String;
      77: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #53                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload         5
      89: areturn

  public void setBeanAccess(org.yaml.snakeyaml.introspector.BeanAccess);
    Code:
       0: aload_0
       1: getfield      #13                 // Field platformFeatureDetector:Lorg/yaml/snakeyaml/util/PlatformFeatureDetector;
       4: invokevirtual #14                 // Method org/yaml/snakeyaml/util/PlatformFeatureDetector.isRunningOnAndroid:()Z
       7: ifeq          27
      10: aload_1
      11: getstatic     #15                 // Field org/yaml/snakeyaml/introspector/BeanAccess.FIELD:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      14: if_acmpeq     27
      17: new           #77                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #78                 // String JVM is Android - only BeanAccess.FIELD is available
      23: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      31: aload_1
      32: if_acmpeq     58
      35: aload_0
      36: aload_1
      37: putfield      #10                 // Field beanAccess:Lorg/yaml/snakeyaml/introspector/BeanAccess;
      40: aload_0
      41: getfield      #7                  // Field propertiesCache:Ljava/util/Map;
      44: invokeinterface #80,  1           // InterfaceMethod java/util/Map.clear:()V
      49: aload_0
      50: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      53: invokeinterface #80,  1           // InterfaceMethod java/util/Map.clear:()V
      58: return

  public void setAllowReadOnlyProperties(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field allowReadOnlyProperties:Z
       4: iload_1
       5: if_icmpeq     22
       8: aload_0
       9: iload_1
      10: putfield      #11                 // Field allowReadOnlyProperties:Z
      13: aload_0
      14: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      17: invokeinterface #80,  1           // InterfaceMethod java/util/Map.clear:()V
      22: return

  public boolean isAllowReadOnlyProperties();
    Code:
       0: aload_0
       1: getfield      #11                 // Field allowReadOnlyProperties:Z
       4: ireturn

  public void setSkipMissingProperties(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipMissingProperties:Z
       4: iload_1
       5: if_icmpeq     22
       8: aload_0
       9: iload_1
      10: putfield      #12                 // Field skipMissingProperties:Z
      13: aload_0
      14: getfield      #8                  // Field readableProperties:Ljava/util/Map;
      17: invokeinterface #80,  1           // InterfaceMethod java/util/Map.clear:()V
      22: return

  public boolean isSkipMissingProperties();
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipMissingProperties:Z
       4: ireturn
}
