Compiled from "Constructor.java"
public class org.yaml.snakeyaml.constructor.Constructor extends org.yaml.snakeyaml.constructor.SafeConstructor {
  public org.yaml.snakeyaml.constructor.Constructor();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/Class;)V
       7: return

  public org.yaml.snakeyaml.constructor.Constructor(org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: aload_1
       5: invokespecial #3                  // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/LoaderOptions;)V
       8: return

  public org.yaml.snakeyaml.constructor.Constructor(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: new           #4                  // class org/yaml/snakeyaml/TypeDescription
       4: dup
       5: aload_1
       6: invokestatic  #5                  // Method checkRoot:(Ljava/lang/Class;)Ljava/lang/Class;
       9: invokespecial #6                  // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;)V
      12: invokespecial #7                  // Method "<init>":(Lorg/yaml/snakeyaml/TypeDescription;)V
      15: return

  public org.yaml.snakeyaml.constructor.Constructor(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: new           #4                  // class org/yaml/snakeyaml/TypeDescription
       4: dup
       5: aload_1
       6: invokestatic  #5                  // Method checkRoot:(Ljava/lang/Class;)Ljava/lang/Class;
       9: invokespecial #6                  // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;)V
      12: aload_2
      13: invokespecial #8                  // Method "<init>":(Lorg/yaml/snakeyaml/TypeDescription;Lorg/yaml/snakeyaml/LoaderOptions;)V
      16: return

  private static java.lang.Class<? extends java.lang.Object> checkRoot(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #10                 // String Root class must be provided.
      10: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: areturn

  public org.yaml.snakeyaml.constructor.Constructor(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: new           #12                 // class org/yaml/snakeyaml/LoaderOptions
       6: dup
       7: invokespecial #13                 // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      10: invokespecial #14                 // Method "<init>":(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;Lorg/yaml/snakeyaml/LoaderOptions;)V
      13: return

  public org.yaml.snakeyaml.constructor.Constructor(org.yaml.snakeyaml.TypeDescription, org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #14                 // Method "<init>":(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;Lorg/yaml/snakeyaml/LoaderOptions;)V
       7: return

  public org.yaml.snakeyaml.constructor.Constructor(org.yaml.snakeyaml.TypeDescription, java.util.Collection<org.yaml.snakeyaml.TypeDescription>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #12                 // class org/yaml/snakeyaml/LoaderOptions
       6: dup
       7: invokespecial #13                 // Method org/yaml/snakeyaml/LoaderOptions."<init>":()V
      10: invokespecial #14                 // Method "<init>":(Lorg/yaml/snakeyaml/TypeDescription;Ljava/util/Collection;Lorg/yaml/snakeyaml/LoaderOptions;)V
      13: return

  public org.yaml.snakeyaml.constructor.Constructor(org.yaml.snakeyaml.TypeDescription, java.util.Collection<org.yaml.snakeyaml.TypeDescription>, org.yaml.snakeyaml.LoaderOptions);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #15                 // Method org/yaml/snakeyaml/constructor/SafeConstructor."<init>":(Lorg/yaml/snakeyaml/LoaderOptions;)V
       5: aload_1
       6: ifnonnull     19
       9: new           #9                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #16                 // String Root type must be provided.
      15: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #17                 // Field yamlConstructors:Ljava/util/Map;
      23: aconst_null
      24: new           #18                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject
      27: dup
      28: aload_0
      29: invokespecial #19                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
      32: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: ldc_w         #1                  // class java/lang/Object
      41: aload_1
      42: invokevirtual #21                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      45: invokevirtual #22                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifne          66
      51: aload_0
      52: new           #23                 // class org/yaml/snakeyaml/nodes/Tag
      55: dup
      56: aload_1
      57: invokevirtual #21                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      60: invokespecial #24                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/Class;)V
      63: putfield      #25                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      66: aload_0
      67: getfield      #26                 // Field yamlClassConstructors:Ljava/util/Map;
      70: getstatic     #27                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
      73: new           #28                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructScalar
      76: dup
      77: aload_0
      78: invokespecial #29                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructScalar."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
      81: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload_0
      88: getfield      #26                 // Field yamlClassConstructors:Ljava/util/Map;
      91: getstatic     #30                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
      94: new           #31                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructMapping
      97: dup
      98: aload_0
      99: invokespecial #32                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructMapping."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
     102: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload_0
     109: getfield      #26                 // Field yamlClassConstructors:Ljava/util/Map;
     112: getstatic     #33                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
     115: new           #34                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructSequence
     118: dup
     119: aload_0
     120: invokespecial #35                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructSequence."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
     123: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_0
     130: aload_1
     131: invokevirtual #36                 // Method addTypeDescription:(Lorg/yaml/snakeyaml/TypeDescription;)Lorg/yaml/snakeyaml/TypeDescription;
     134: pop
     135: aload_2
     136: ifnull        179
     139: aload_2
     140: invokeinterface #37,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     145: astore        4
     147: aload         4
     149: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     154: ifeq          179
     157: aload         4
     159: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     164: checkcast     #4                  // class org/yaml/snakeyaml/TypeDescription
     167: astore        5
     169: aload_0
     170: aload         5
     172: invokevirtual #36                 // Method addTypeDescription:(Lorg/yaml/snakeyaml/TypeDescription;)Lorg/yaml/snakeyaml/TypeDescription;
     175: pop
     176: goto          147
     179: return

  public org.yaml.snakeyaml.constructor.Constructor(java.lang.String) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method check:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #41                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: invokespecial #2                  // Method "<init>":(Ljava/lang/Class;)V
      11: return

  public org.yaml.snakeyaml.constructor.Constructor(java.lang.String, org.yaml.snakeyaml.LoaderOptions) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method check:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #41                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: aload_2
       9: invokespecial #3                  // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/LoaderOptions;)V
      12: return

  private static final java.lang.String check(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #16                 // String Root type must be provided.
      10: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #42                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokevirtual #43                 // Method java/lang/String.length:()I
      21: ifne          34
      24: new           #44                 // class org/yaml/snakeyaml/error/YAMLException
      27: dup
      28: ldc           #16                 // String Root type must be provided.
      30: invokespecial #45                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: areturn

  protected java.lang.Class<?> getClassForNode(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #46                 // Field typeTags:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
       8: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #49                 // class java/lang/Class
      16: astore_2
      17: aload_2
      18: ifnonnull     87
      21: aload_1
      22: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      25: invokevirtual #50                 // Method org/yaml/snakeyaml/nodes/Tag.getClassName:()Ljava/lang/String;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokevirtual #51                 // Method getClassForName:(Ljava/lang/String;)Ljava/lang/Class;
      34: astore        4
      36: goto          68
      39: astore        5
      41: new           #44                 // class org/yaml/snakeyaml/error/YAMLException
      44: dup
      45: new           #53                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #55                 // String Class not found:
      54: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #45                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #46                 // Field typeTags:Ljava/util/Map;
      72: aload_1
      73: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      76: aload         4
      78: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload         4
      86: areturn
      87: aload_2
      88: areturn
    Exception table:
       from    to  target type
          29    36    39   Class java/lang/ClassNotFoundException

  protected java.lang.Class<?> getClassForName(java.lang.String) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #58                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       5: invokevirtual #59                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #60                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      11: areturn
      12: astore_2
      13: aload_1
      14: invokestatic  #41                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/ClassNotFoundException
}
