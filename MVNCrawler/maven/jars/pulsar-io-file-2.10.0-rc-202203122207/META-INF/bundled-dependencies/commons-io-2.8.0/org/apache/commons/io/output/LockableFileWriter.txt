Compiled from "LockableFileWriter.java"
public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer {
  private static final java.lang.String LCK;

  private final java.io.Writer out;

  private final java.io.File lockFile;

  public org.apache.commons.io.output.LockableFileWriter(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
       7: return

  public org.apache.commons.io.output.LockableFileWriter(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;ZLjava/lang/String;)V
       7: return

  public org.apache.commons.io.output.LockableFileWriter(java.lang.String, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: iload_2
      10: aload_3
      11: invokespecial #4                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
      14: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
       7: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(Ljava/io/File;ZLjava/lang/String;)V
       7: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: iload_2
       6: aload_3
       7: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
      10: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aconst_null
       5: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
       8: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aconst_null
       5: invokespecial #7                  // Method "<init>":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V
       8: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/io/Writer."<init>":()V
       4: aload_1
       5: invokevirtual #9                  // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
       8: astore_1
       9: aload_1
      10: invokevirtual #10                 // Method java/io/File.getParentFile:()Ljava/io/File;
      13: ifnull        23
      16: aload_1
      17: invokevirtual #10                 // Method java/io/File.getParentFile:()Ljava/io/File;
      20: invokestatic  #11                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
      23: aload_1
      24: invokevirtual #12                 // Method java/io/File.isDirectory:()Z
      27: ifeq          40
      30: new           #13                 // class java/io/IOException
      33: dup
      34: ldc           #14                 // String File specified is a directory
      36: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload         4
      42: ifnonnull     52
      45: ldc           #16                 // String java.io.tmpdir
      47: invokestatic  #17                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      50: astore        4
      52: new           #2                  // class java/io/File
      55: dup
      56: aload         4
      58: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
      61: astore        5
      63: aload         5
      65: invokestatic  #11                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
      68: aload_0
      69: aload         5
      71: invokespecial #18                 // Method testLockDir:(Ljava/io/File;)V
      74: aload_0
      75: new           #2                  // class java/io/File
      78: dup
      79: aload         5
      81: new           #19                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      88: aload_1
      89: invokevirtual #21                 // Method java/io/File.getName:()Ljava/lang/String;
      92: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #24                 // String .lck
      97: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     106: putfield      #27                 // Field lockFile:Ljava/io/File;
     109: aload_0
     110: invokespecial #28                 // Method createLock:()V
     113: aload_0
     114: aload_0
     115: aload_1
     116: aload_2
     117: iload_3
     118: invokespecial #29                 // Method initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;
     121: putfield      #30                 // Field out:Ljava/io/Writer;
     124: return

  public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.lang.String, boolean, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #31                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: aload         4
       9: invokespecial #6                  // Method "<init>":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V
      12: return

  private void testLockDir(java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method java/io/File.exists:()Z
       4: ifne          37
       7: new           #13                 // class java/io/IOException
      10: dup
      11: new           #19                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #33                 // String Could not find lockDir:
      20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_1
      38: invokevirtual #35                 // Method java/io/File.canWrite:()Z
      41: ifne          74
      44: new           #13                 // class java/io/IOException
      47: dup
      48: new           #19                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #36                 // String Could not write to lockDir:
      57: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: return

  private void createLock() throws java.io.IOException;
    Code:
       0: ldc           #23                 // class org/apache/commons/io/output/LockableFileWriter
       2: dup
       3: astore_1
       4: monitorenter
       5: aload_0
       6: getfield      #27                 // Field lockFile:Ljava/io/File;
       9: invokevirtual #37                 // Method java/io/File.createNewFile:()Z
      12: ifne          53
      15: new           #13                 // class java/io/IOException
      18: dup
      19: new           #19                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #38                 // String Can\'t write file, lock
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #27                 // Field lockFile:Ljava/io/File;
      35: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      38: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #39                 // String  exists
      43: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #15                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: getfield      #27                 // Field lockFile:Ljava/io/File;
      57: invokevirtual #40                 // Method java/io/File.deleteOnExit:()V
      60: aload_1
      61: monitorexit
      62: goto          70
      65: astore_2
      66: aload_1
      67: monitorexit
      68: aload_2
      69: athrow
      70: return
    Exception table:
       from    to  target type
           5    62    65   any
          65    68    65   any

  private java.io.Writer initWriter(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method java/io/File.exists:()Z
       4: istore        4
       6: new           #41                 // class java/io/OutputStreamWriter
       9: dup
      10: new           #42                 // class java/io/FileOutputStream
      13: dup
      14: aload_1
      15: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      18: iload_3
      19: invokespecial #43                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;Z)V
      22: aload_2
      23: invokestatic  #44                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      26: invokespecial #45                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      29: areturn
      30: astore        5
      32: aload_0
      33: getfield      #27                 // Field lockFile:Ljava/io/File;
      36: invokestatic  #47                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
      39: pop
      40: iload         4
      42: ifne          50
      45: aload_1
      46: invokestatic  #47                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
      49: pop
      50: aload         5
      52: athrow
    Exception table:
       from    to  target type
           6    29    30   Class java/io/IOException
           6    29    30   Class java/lang/RuntimeException

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: invokevirtual #48                 // Method java/io/Writer.close:()V
       7: aload_0
       8: getfield      #27                 // Field lockFile:Ljava/io/File;
      11: invokevirtual #49                 // Method java/io/File.delete:()Z
      14: pop
      15: goto          29
      18: astore_1
      19: aload_0
      20: getfield      #27                 // Field lockFile:Ljava/io/File;
      23: invokevirtual #49                 // Method java/io/File.delete:()Z
      26: pop
      27: aload_1
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0     7    18   any

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: iload_1
       5: invokevirtual #50                 // Method java/io/Writer.write:(I)V
       8: return

  public void write(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #51                 // Method java/io/Writer.write:([C)V
       8: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #52                 // Method java/io/Writer.write:([CII)V
      10: return

  public void write(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: aload_1
       5: invokevirtual #53                 // Method java/io/Writer.write:(Ljava/lang/String;)V
       8: return

  public void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #54                 // Method java/io/Writer.write:(Ljava/lang/String;II)V
      10: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field out:Ljava/io/Writer;
       4: invokevirtual #55                 // Method java/io/Writer.flush:()V
       7: return
}
