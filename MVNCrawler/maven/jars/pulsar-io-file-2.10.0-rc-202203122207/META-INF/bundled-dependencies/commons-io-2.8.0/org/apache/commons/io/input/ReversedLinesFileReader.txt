Compiled from "ReversedLinesFileReader.java"
public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable {
  private static final java.lang.String EMPTY_STRING;

  private static final int DEFAULT_BLOCK_SIZE;

  private final int blockSize;

  private final java.nio.charset.Charset encoding;

  private final java.nio.channels.SeekableByteChannel channel;

  private final long totalByteLength;

  private final long totalBlockCount;

  private final byte[][] newLineSequences;

  private final int avoidNewlineSplitBufferSize;

  private final int byteDecrement;

  private org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart;

  private boolean trailingNewlineOfFileSkipped;

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokestatic  #9                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       8: invokespecial #10                 // Method "<init>":(Ljava/io/File;ILjava/nio/charset/Charset;)V
      11: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: aload_2
       6: invokespecial #12                 // Method "<init>":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V
       9: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: iload_2
       6: aload_3
       7: invokespecial #13                 // Method "<init>":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V
      10: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       5: iload_2
       6: aload_3
       7: invokespecial #14                 // Method "<init>":(Ljava/nio/file/Path;ILjava/lang/String;)V
      10: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: aload_2
       6: invokespecial #13                 // Method "<init>":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V
       9: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, int, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #7                  // Field blockSize:I
       9: aload_0
      10: aload_3
      11: invokestatic  #16                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      14: putfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
      17: aload_0
      18: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
      21: invokevirtual #17                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      24: astore        4
      26: aload         4
      28: invokevirtual #18                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
      31: fstore        5
      33: fload         5
      35: fconst_1
      36: fcmpl
      37: ifne          48
      40: aload_0
      41: iconst_1
      42: putfield      #2                  // Field byteDecrement:I
      45: goto          214
      48: aload_0
      49: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
      52: getstatic     #19                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      55: if_acmpne     66
      58: aload_0
      59: iconst_1
      60: putfield      #2                  // Field byteDecrement:I
      63: goto          214
      66: aload_0
      67: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
      70: ldc           #20                 // String Shift_JIS
      72: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      75: if_acmpeq     126
      78: aload_0
      79: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
      82: ldc           #22                 // String windows-31j
      84: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      87: if_acmpeq     126
      90: aload_0
      91: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
      94: ldc           #23                 // String x-windows-949
      96: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      99: if_acmpeq     126
     102: aload_0
     103: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     106: ldc           #24                 // String gbk
     108: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     111: if_acmpeq     126
     114: aload_0
     115: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     118: ldc           #25                 // String x-windows-950
     120: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     123: if_acmpne     134
     126: aload_0
     127: iconst_1
     128: putfield      #2                  // Field byteDecrement:I
     131: goto          214
     134: aload_0
     135: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     138: getstatic     #26                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;
     141: if_acmpeq     154
     144: aload_0
     145: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     148: getstatic     #27                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;
     151: if_acmpne     162
     154: aload_0
     155: iconst_2
     156: putfield      #2                  // Field byteDecrement:I
     159: goto          214
     162: aload_0
     163: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     166: getstatic     #28                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;
     169: if_acmpne     182
     172: new           #29                 // class java/io/UnsupportedEncodingException
     175: dup
     176: ldc           #30                 // String For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)
     178: invokespecial #31                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     181: athrow
     182: new           #29                 // class java/io/UnsupportedEncodingException
     185: dup
     186: new           #32                 // class java/lang/StringBuilder
     189: dup
     190: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     193: ldc           #34                 // String Encoding
     195: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: aload_3
     199: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     202: ldc           #37                 // String  is not supported yet (feel free to submit a patch)
     204: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #31                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     213: athrow
     214: aload_0
     215: iconst_3
     216: anewarray     #39                 // class "[B"
     219: dup
     220: iconst_0
     221: ldc           #40                 // String \r\n
     223: aload_0
     224: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     227: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     230: aastore
     231: dup
     232: iconst_1
     233: ldc           #42                 // String \n
     235: aload_0
     236: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     239: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     242: aastore
     243: dup
     244: iconst_2
     245: ldc           #43                 // String \r
     247: aload_0
     248: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
     251: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     254: aastore
     255: putfield      #5                  // Field newLineSequences:[[B
     258: aload_0
     259: aload_0
     260: getfield      #5                  // Field newLineSequences:[[B
     263: iconst_0
     264: aaload
     265: arraylength
     266: putfield      #4                  // Field avoidNewlineSplitBufferSize:I
     269: aload_0
     270: aload_1
     271: iconst_1
     272: anewarray     #44                 // class java/nio/file/OpenOption
     275: dup
     276: iconst_0
     277: getstatic     #45                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
     280: aastore
     281: invokestatic  #46                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
     284: putfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
     287: aload_0
     288: aload_0
     289: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
     292: invokeinterface #47,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J
     297: putfield      #48                 // Field totalByteLength:J
     300: aload_0
     301: getfield      #48                 // Field totalByteLength:J
     304: iload_2
     305: i2l
     306: lrem
     307: l2i
     308: istore        6
     310: iload         6
     312: ifle          331
     315: aload_0
     316: aload_0
     317: getfield      #48                 // Field totalByteLength:J
     320: iload_2
     321: i2l
     322: ldiv
     323: lconst_1
     324: ladd
     325: putfield      #49                 // Field totalBlockCount:J
     328: goto          354
     331: aload_0
     332: aload_0
     333: getfield      #48                 // Field totalByteLength:J
     336: iload_2
     337: i2l
     338: ldiv
     339: putfield      #49                 // Field totalBlockCount:J
     342: aload_0
     343: getfield      #48                 // Field totalByteLength:J
     346: lconst_0
     347: lcmp
     348: ifle          354
     351: iload_2
     352: istore        6
     354: aload_0
     355: new           #50                 // class org/apache/commons/io/input/ReversedLinesFileReader$FilePart
     358: dup
     359: aload_0
     360: aload_0
     361: getfield      #49                 // Field totalBlockCount:J
     364: iload         6
     366: aconst_null
     367: aconst_null
     368: invokespecial #51                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart."<init>":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V
     371: putfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
     374: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #53                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: invokespecial #13                 // Method "<init>":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V
      10: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: invokeinterface #54,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V
       9: return

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
       4: invokestatic  #55                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnonnull     41
      12: aload_0
      13: aload_0
      14: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      17: invokestatic  #56                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      20: putfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      23: aload_0
      24: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      27: ifnull        41
      30: aload_0
      31: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      34: invokestatic  #55                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
      37: astore_1
      38: goto          8
      41: ldc           #57                 // String
      43: aload_1
      44: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          67
      50: aload_0
      51: getfield      #59                 // Field trailingNewlineOfFileSkipped:Z
      54: ifne          67
      57: aload_0
      58: iconst_1
      59: putfield      #59                 // Field trailingNewlineOfFileSkipped:Z
      62: aload_0
      63: invokevirtual #60                 // Method readLine:()Ljava/lang/String;
      66: astore_1
      67: aload_1
      68: areturn

  public java.util.List<java.lang.String> readLines(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          14
       4: new           #61                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #62                 // String lineCount < 0
      10: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #64                 // class java/util/ArrayList
      17: dup
      18: iload_1
      19: invokespecial #65                 // Method java/util/ArrayList."<init>":(I)V
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iload_3
      26: iload_1
      27: if_icmpge     56
      30: aload_0
      31: invokevirtual #60                 // Method readLine:()Ljava/lang/String;
      34: astore        4
      36: aload         4
      38: ifnonnull     43
      41: aload_2
      42: areturn
      43: aload_2
      44: aload         4
      46: invokevirtual #66                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          3, 1
      53: goto          25
      56: aload_2
      57: areturn

  public java.lang.String toString(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method readLines:(I)Ljava/util/List;
       5: astore_2
       6: aload_2
       7: invokestatic  #68                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      10: aload_2
      11: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          24
      19: ldc           #57                 // String
      21: goto          50
      24: new           #32                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      31: invokestatic  #70                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      34: aload_2
      35: invokestatic  #71                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokestatic  #70                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
      44: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn

  static int access$000(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #7                  // Field blockSize:I
       4: ireturn

  static java.nio.channels.SeekableByteChannel access$100(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;
       4: areturn

  static byte[][] access$200(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #5                  // Field newLineSequences:[[B
       4: areturn

  static int access$300(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field avoidNewlineSplitBufferSize:I
       4: ireturn

  static java.nio.charset.Charset access$400(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #3                  // Field encoding:Ljava/nio/charset/Charset;
       4: areturn

  static int access$500(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field byteDecrement:I
       4: ireturn
}
