Compiled from "VarStoreImpl.java"
final class net.yudichev.jiotty.common.varstore.VarStoreImpl implements net.yudichev.jiotty.common.varstore.VarStore {
  private static final com.fasterxml.jackson.databind.ObjectMapper mapper;

  private final java.nio.file.Path storeFile;

  private final java.util.concurrent.locks.Lock lock;

  private final java.nio.file.Path storeFileTmp;

  net.yudichev.jiotty.common.varstore.VarStoreImpl(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      15: aload_0
      16: aload_1
      17: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class java/nio/file/Path
      23: putfield      #7                  // Field storeFile:Ljava/nio/file/Path;
      26: aload_0
      27: aload_0
      28: getfield      #7                  // Field storeFile:Ljava/nio/file/Path;
      31: ldc           #8                  // String data.tmp
      33: invokeinterface #9,  2            // InterfaceMethod java/nio/file/Path.resolveSibling:(Ljava/lang/String;)Ljava/nio/file/Path;
      38: putfield      #10                 // Field storeFileTmp:Ljava/nio/file/Path;
      41: return

  public void saveValue(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #11,  0             // InvokeDynamic #0:run:(Lnet/yudichev/jiotty/common/varstore/VarStoreImpl;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Runnable;
      12: invokestatic  #12                 // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      15: return

  public <T> java.util.Optional<T> readValue(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: aload_2
       6: aload_1
       7: invokedynamic #13,  0             // InvokeDynamic #1:get:(Lnet/yudichev/jiotty/common/varstore/VarStoreImpl;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/function/Supplier;
      12: invokestatic  #14                 // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/util/function/Supplier;)Ljava/lang/Object;
      15: checkcast     #15                 // class java/util/Optional
      18: areturn

  private com.fasterxml.jackson.databind.node.ObjectNode readConfig() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field storeFile:Ljava/nio/file/Path;
       4: iconst_0
       5: anewarray     #16                 // class java/nio/file/LinkOption
       8: invokestatic  #17                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      11: ifne          43
      14: aload_0
      15: getfield      #7                  // Field storeFile:Ljava/nio/file/Path;
      18: invokeinterface #18,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      23: iconst_0
      24: anewarray     #19                 // class java/nio/file/attribute/FileAttribute
      27: invokestatic  #20                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      30: pop
      31: aload_0
      32: getfield      #7                  // Field storeFile:Ljava/nio/file/Path;
      35: iconst_0
      36: anewarray     #19                 // class java/nio/file/attribute/FileAttribute
      39: invokestatic  #21                 // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      42: pop
      43: aload_0
      44: getfield      #7                  // Field storeFile:Ljava/nio/file/Path;
      47: invokestatic  #22                 // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
      50: astore_2
      51: aload_2
      52: arraylength
      53: ifle          72
      56: getstatic     #23                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      59: aload_2
      60: ldc           #24                 // class com/fasterxml/jackson/databind/node/ObjectNode
      62: invokevirtual #25                 // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:([BLjava/lang/Class;)Ljava/lang/Object;
      65: checkcast     #24                 // class com/fasterxml/jackson/databind/node/ObjectNode
      68: astore_1
      69: goto          79
      72: getstatic     #23                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      75: invokevirtual #26                 // Method com/fasterxml/jackson/databind/ObjectMapper.createObjectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
      78: astore_1
      79: aload_1
      80: areturn

  private java.util.Optional lambda$readValue$5(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #27,  0             // InvokeDynamic #2:get:(Lnet/yudichev/jiotty/common/varstore/VarStoreImpl;Ljava/lang/String;Ljava/lang/Class;)Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingSupplier;
       8: invokestatic  #28                 // Method net/yudichev/jiotty/common/lang/MoreThrowables.getAsUnchecked:(Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingSupplier;)Ljava/lang/Object;
      11: checkcast     #15                 // class java/util/Optional
      14: areturn

  private java.util.Optional lambda$readValue$4(java.lang.String, java.lang.Class) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method readConfig:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
       4: astore_3
       5: aload_3
       6: aload_1
       7: invokevirtual #30                 // Method com/fasterxml/jackson/databind/node/ObjectNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      10: invokestatic  #31                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      13: aload_2
      14: invokedynamic #32,  0             // InvokeDynamic #3:apply:(Ljava/lang/Class;)Ljava/util/function/Function;
      19: invokevirtual #33                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      22: areturn

  private static java.lang.Object lambda$readValue$3(java.lang.Class, com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #34,  0             // InvokeDynamic #4:get:(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/JsonNode;)Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingSupplier;
       7: invokestatic  #28                 // Method net/yudichev/jiotty/common/lang/MoreThrowables.getAsUnchecked:(Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingSupplier;)Ljava/lang/Object;
      10: areturn

  private static java.lang.Object lambda$readValue$2(java.lang.Class, com.fasterxml.jackson.databind.JsonNode) throws java.lang.Exception;
    Code:
       0: getstatic     #23                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_0
       4: invokevirtual #35                 // Method com/fasterxml/jackson/databind/ObjectMapper.readerFor:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/ObjectReader;
       7: aload_1
       8: invokevirtual #36                 // Method com/fasterxml/jackson/databind/ObjectReader.readValue:(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/lang/Object;
      11: areturn

  private void lambda$saveValue$1(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #37,  0             // InvokeDynamic #5:run:(Lnet/yudichev/jiotty/common/varstore/VarStoreImpl;Ljava/lang/String;Ljava/lang/Object;)Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingRunnable;
       8: invokestatic  #38                 // Method net/yudichev/jiotty/common/lang/MoreThrowables.asUnchecked:(Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingRunnable;)V
      11: return

  private void lambda$saveValue$0(java.lang.String, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method readConfig:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
       4: astore_3
       5: aload_3
       6: aload_1
       7: getstatic     #23                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      10: aload_2
      11: invokevirtual #39                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
      14: invokevirtual #40                 // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      17: pop
      18: getstatic     #23                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      21: aload_0
      22: getfield      #10                 // Field storeFileTmp:Ljava/nio/file/Path;
      25: invokeinterface #41,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      30: aload_3
      31: invokevirtual #42                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValue:(Ljava/io/File;Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #10                 // Field storeFileTmp:Ljava/nio/file/Path;
      38: aload_0
      39: getfield      #7                  // Field storeFile:Ljava/nio/file/Path;
      42: iconst_1
      43: anewarray     #43                 // class java/nio/file/CopyOption
      46: dup
      47: iconst_0
      48: getstatic     #44                 // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      51: aastore
      52: invokestatic  #45                 // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      55: pop
      56: return

  static {};
    Code:
       0: new           #46                 // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #47                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: new           #48                 // class com/fasterxml/jackson/datatype/jdk8/Jdk8Module
      10: dup
      11: invokespecial #49                 // Method com/fasterxml/jackson/datatype/jdk8/Jdk8Module."<init>":()V
      14: invokevirtual #50                 // Method com/fasterxml/jackson/databind/ObjectMapper.registerModule:(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      17: new           #51                 // class com/fasterxml/jackson/datatype/jsr310/JavaTimeModule
      20: dup
      21: invokespecial #52                 // Method com/fasterxml/jackson/datatype/jsr310/JavaTimeModule."<init>":()V
      24: invokevirtual #50                 // Method com/fasterxml/jackson/databind/ObjectMapper.registerModule:(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      27: new           #53                 // class com/fasterxml/jackson/datatype/guava/GuavaModule
      30: dup
      31: invokespecial #54                 // Method com/fasterxml/jackson/datatype/guava/GuavaModule."<init>":()V
      34: invokevirtual #50                 // Method com/fasterxml/jackson/databind/ObjectMapper.registerModule:(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      37: getstatic     #55                 // Field com/fasterxml/jackson/databind/SerializationFeature.INDENT_OUTPUT:Lcom/fasterxml/jackson/databind/SerializationFeature;
      40: invokevirtual #56                 // Method com/fasterxml/jackson/databind/ObjectMapper.enable:(Lcom/fasterxml/jackson/databind/SerializationFeature;)Lcom/fasterxml/jackson/databind/ObjectMapper;
      43: putstatic     #23                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      46: return
}
