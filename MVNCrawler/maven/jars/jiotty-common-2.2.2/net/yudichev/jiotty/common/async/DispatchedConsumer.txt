Compiled from "DispatchedConsumer.java"
public final class net.yudichev.jiotty.common.async.DispatchedConsumer<T> implements java.util.function.Consumer<T> {
  private final java.util.function.Consumer<T> delegate;

  private final java.util.concurrent.Executor executor;

  public net.yudichev.jiotty.common.async.DispatchedConsumer(java.util.function.Consumer<T>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/util/function/Consumer
      12: putfield      #4                  // Field delegate:Ljava/util/function/Consumer;
      15: aload_0
      16: aload_2
      17: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #5                  // class java/util/concurrent/Executor
      23: putfield      #6                  // Field executor:Ljava/util/concurrent/Executor;
      26: return

  public void accept(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/Executor;
       4: aload_0
       5: aload_1
       6: invokedynamic #7,  0              // InvokeDynamic #0:run:(Lnet/yudichev/jiotty/common/async/DispatchedConsumer;Ljava/lang/Object;)Ljava/lang/Runnable;
      11: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      16: return

  private void lambda$accept$0(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Ljava/util/function/Consumer;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      10: return
}
