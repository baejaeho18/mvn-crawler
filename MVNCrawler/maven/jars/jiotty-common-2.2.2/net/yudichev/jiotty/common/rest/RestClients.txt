Compiled from "RestClients.java"
public final class net.yudichev.jiotty.common.rest.RestClients {
  private static final org.slf4j.Logger logger;

  private static final int DEFAULT_CALL_RETRY_COUNT;

  private static final java.time.Duration DEFAULT_HTTP_TIMEOUT;

  private net.yudichev.jiotty.common.rest.RestClients();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static okhttp3.OkHttpClient newClient();
    Code:
       0: invokedynamic #2,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
       5: invokestatic  #3                  // Method newClient:(Ljava/util/function/Consumer;)Lokhttp3/OkHttpClient;
       8: areturn

  public static okhttp3.OkHttpClient newClient(java.util.function.Consumer<? super okhttp3.OkHttpClient$Builder>);
    Code:
       0: new           #4                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore_1
       8: new           #6                  // class okhttp3/OkHttpClient$Builder
      11: dup
      12: invokespecial #7                  // Method okhttp3/OkHttpClient$Builder."<init>":()V
      15: iconst_1
      16: invokevirtual #8                  // Method okhttp3/OkHttpClient$Builder.followRedirects:(Z)Lokhttp3/OkHttpClient$Builder;
      19: iconst_1
      20: invokevirtual #9                  // Method okhttp3/OkHttpClient$Builder.followSslRedirects:(Z)Lokhttp3/OkHttpClient$Builder;
      23: getstatic     #10                 // Field DEFAULT_HTTP_TIMEOUT:Ljava/time/Duration;
      26: invokevirtual #11                 // Method okhttp3/OkHttpClient$Builder.connectTimeout:(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
      29: getstatic     #10                 // Field DEFAULT_HTTP_TIMEOUT:Ljava/time/Duration;
      32: invokevirtual #12                 // Method okhttp3/OkHttpClient$Builder.callTimeout:(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
      35: getstatic     #10                 // Field DEFAULT_HTTP_TIMEOUT:Ljava/time/Duration;
      38: invokevirtual #13                 // Method okhttp3/OkHttpClient$Builder.readTimeout:(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
      41: getstatic     #10                 // Field DEFAULT_HTTP_TIMEOUT:Ljava/time/Duration;
      44: invokevirtual #14                 // Method okhttp3/OkHttpClient$Builder.writeTimeout:(Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
      47: astore_2
      48: aload_0
      49: aload_2
      50: invokeinterface #15,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      55: aload_2
      56: invokevirtual #16                 // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      59: astore_3
      60: aload_1
      61: aload_3
      62: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      65: aload_3
      66: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> call(okhttp3.Request, java.lang.Class<? extends T>);
    Code:
       0: invokestatic  #18                 // Method newClient:()Lokhttp3/OkHttpClient;
       3: aload_0
       4: invokevirtual #19                 // Method okhttp3/OkHttpClient.newCall:(Lokhttp3/Request;)Lokhttp3/Call;
       7: aload_1
       8: invokestatic  #20                 // Method call:(Lokhttp3/Call;Ljava/lang/Class;)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> call(okhttp3.Request, com.google.common.reflect.TypeToken<? extends T>);
    Code:
       0: invokestatic  #18                 // Method newClient:()Lokhttp3/OkHttpClient;
       3: aload_0
       4: invokevirtual #19                 // Method okhttp3/OkHttpClient.newCall:(Lokhttp3/Request;)Lokhttp3/Call;
       7: aload_1
       8: invokestatic  #21                 // Method call:(Lokhttp3/Call;Lcom/google/common/reflect/TypeToken;)Ljava/util/concurrent/CompletableFuture;
      11: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> call(okhttp3.Call, java.lang.Class<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_3
       3: invokestatic  #23                 // Method call:(Lokhttp3/Call;Ljava/lang/Class;I)Ljava/util/concurrent/CompletableFuture;
       6: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> call(okhttp3.Call, com.google.common.reflect.TypeToken<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_3
       3: invokestatic  #24                 // Method call:(Lokhttp3/Call;Lcom/google/common/reflect/TypeToken;I)Ljava/util/concurrent/CompletableFuture;
       6: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> call(okhttp3.Call, java.lang.Class<? extends T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // Method com/google/common/reflect/TypeToken.of:(Ljava/lang/Class;)Lcom/google/common/reflect/TypeToken;
       5: iload_2
       6: invokestatic  #24                 // Method call:(Lokhttp3/Call;Lcom/google/common/reflect/TypeToken;I)Ljava/util/concurrent/CompletableFuture;
       9: areturn

  public static <T> java.util.concurrent.CompletableFuture<T> call(okhttp3.Call, com.google.common.reflect.TypeToken<? extends T>, int);
    Code:
       0: new           #26                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #27                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_3
       8: aload_0
       9: new           #28                 // class net/yudichev/jiotty/common/rest/RestClients$1
      12: dup
      13: iload_2
      14: aload_3
      15: aload_1
      16: invokespecial #29                 // Method net/yudichev/jiotty/common/rest/RestClients$1."<init>":(ILjava/util/concurrent/CompletableFuture;Lcom/google/common/reflect/TypeToken;)V
      19: invokeinterface #30,  2           // InterfaceMethod okhttp3/Call.enqueue:(Lokhttp3/Callback;)V
      24: aload_3
      25: areturn

  public static com.fasterxml.jackson.databind.JsonNode getRequiredNode(com.fasterxml.jackson.databind.JsonNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method com/fasterxml/jackson/databind/JsonNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_2
       6: aload_2
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #32                 // String no \'%s\' node in response: %s
      17: aload_1
      18: aload_0
      19: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      22: aload_2
      23: areturn

  public static java.lang.String getRequiredNodeString(com.fasterxml.jackson.databind.JsonNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // Method getRequiredNode:(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_2
       6: aload_2
       7: invokevirtual #35                 // Method com/fasterxml/jackson/databind/JsonNode.isTextual:()Z
      10: ldc           #36                 // String node \'%s\' is not textual in %s
      12: aload_1
      13: aload_0
      14: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_2
      18: invokevirtual #37                 // Method com/fasterxml/jackson/databind/JsonNode.asText:()Ljava/lang/String;
      21: areturn

  public static int getRequiredNodeInt(com.fasterxml.jackson.databind.JsonNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // Method getRequiredNode:(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_2
       6: aload_2
       7: invokevirtual #38                 // Method com/fasterxml/jackson/databind/JsonNode.isInt:()Z
      10: ldc           #39                 // String node \'%s\' is not an integer in %s
      12: aload_1
      13: aload_0
      14: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_2
      18: invokevirtual #40                 // Method com/fasterxml/jackson/databind/JsonNode.asInt:()I
      21: ireturn

  public static long getRequiredNodeLong(com.fasterxml.jackson.databind.JsonNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #34                 // Method getRequiredNode:(Lcom/fasterxml/jackson/databind/JsonNode;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_2
       6: aload_2
       7: invokevirtual #41                 // Method com/fasterxml/jackson/databind/JsonNode.isLong:()Z
      10: ldc           #42                 // String node \'%s\' is not a long in %s
      12: aload_1
      13: aload_0
      14: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_2
      18: invokevirtual #43                 // Method com/fasterxml/jackson/databind/JsonNode.asLong:()J
      21: lreturn

  private static void lambda$newClient$0(okhttp3.OkHttpClient$Builder);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #22                 // class net/yudichev/jiotty/common/rest/RestClients
       2: invokestatic  #44                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #45                 // Field logger:Lorg/slf4j/Logger;
       8: ldc2_w        #46                 // long 60l
      11: invokestatic  #48                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      14: putstatic     #10                 // Field DEFAULT_HTTP_TIMEOUT:Ljava/time/Duration;
      17: return
}
