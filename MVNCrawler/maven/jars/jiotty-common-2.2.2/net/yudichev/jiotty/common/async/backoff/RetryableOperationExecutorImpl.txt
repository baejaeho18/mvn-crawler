Compiled from "RetryableOperationExecutorImpl.java"
final class net.yudichev.jiotty.common.async.backoff.RetryableOperationExecutorImpl implements net.yudichev.jiotty.common.async.backoff.RetryableOperationExecutor {
  private static final org.slf4j.Logger logger;

  private final javax.inject.Provider<net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandler> exceptionHandlerProvider;

  net.yudichev.jiotty.common.async.backoff.RetryableOperationExecutorImpl(javax.inject.Provider<net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandler>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class javax/inject/Provider
      12: putfield      #4                  // Field exceptionHandlerProvider:Ljavax/inject/Provider;
      15: return

  public <T> java.util.concurrent.CompletableFuture<T> withBackOffAndRetry(java.lang.String, java.util.function.Supplier<? extends java.util.concurrent.CompletableFuture<T>>, java.util.function.LongConsumer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exceptionHandlerProvider:Ljavax/inject/Provider;
       4: invokeinterface #5,  1            // InterfaceMethod javax/inject/Provider.get:()Ljava/lang/Object;
       9: checkcast     #6                  // class net/yudichev/jiotty/common/async/backoff/BackingOffExceptionHandler
      12: astore        4
      14: getstatic     #7                  // Field logger:Lorg/slf4j/Logger;
      17: ldc           #8                  // String Executing operation \'{}\' with retries using handler {}
      19: aload_1
      20: aload         4
      22: invokeinterface #9,  4            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_0
      28: aload_1
      29: aload_2
      30: aload_3
      31: aload         4
      33: invokevirtual #10                 // Method doWithBackOffAndRetry:(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/LongConsumer;Lnet/yudichev/jiotty/common/async/backoff/BackingOffExceptionHandler;)Ljava/util/concurrent/CompletableFuture;
      36: areturn

  private <T> java.util.concurrent.CompletableFuture<T> doWithBackOffAndRetry(java.lang.String, java.util.function.Supplier<? extends java.util.concurrent.CompletableFuture<T>>, java.util.function.LongConsumer, net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandler);
    Code:
       0: aload_2
       1: invokeinterface #11,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #12                 // class java/util/concurrent/CompletableFuture
       9: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokevirtual #14                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      17: aload         4
      19: aload_1
      20: invokedynamic #15,  0             // InvokeDynamic #1:apply:(Lnet/yudichev/jiotty/common/async/backoff/BackingOffExceptionHandler;Ljava/lang/String;)Ljava/util/function/Function;
      25: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.exceptionally:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      28: aload_0
      29: aload_1
      30: aload_3
      31: aload_2
      32: invokedynamic #17,  0             // InvokeDynamic #2:apply:(Lnet/yudichev/jiotty/common/async/backoff/RetryableOperationExecutorImpl;Ljava/lang/String;Ljava/util/function/LongConsumer;Ljava/util/function/Supplier;)Ljava/util/function/Function;
      37: invokevirtual #18                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      40: areturn

  private java.util.concurrent.CompletionStage lambda$doWithBackOffAndRetry$4(java.lang.String, java.util.function.LongConsumer, java.util.function.Supplier, net.yudichev.jiotty.common.lang.Either);
    Code:
       0: aload         4
       2: invokedynamic #19,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #20,  0             // InvokeDynamic #4:apply:(Lnet/yudichev/jiotty/common/async/backoff/RetryableOperationExecutorImpl;Ljava/lang/String;Ljava/util/function/LongConsumer;Ljava/util/function/Supplier;)Ljava/util/function/Function;
      16: invokevirtual #21                 // Method net/yudichev/jiotty/common/lang/Either.map:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object;
      19: checkcast     #22                 // class java/util/concurrent/CompletionStage
      22: areturn

  private java.util.concurrent.CompletableFuture lambda$doWithBackOffAndRetry$3(java.lang.String, java.util.function.LongConsumer, java.util.function.Supplier, net.yudichev.jiotty.common.async.backoff.RetryableFailure);
    Code:
       0: aload         4
       2: invokevirtual #23                 // Method net/yudichev/jiotty/common/async/backoff/RetryableFailure.backoffDelayMs:()Ljava/util/Optional;
       5: aload_0
       6: aload_1
       7: aload         4
       9: aload_2
      10: aload_3
      11: invokedynamic #24,  0             // InvokeDynamic #5:apply:(Lnet/yudichev/jiotty/common/async/backoff/RetryableOperationExecutorImpl;Ljava/lang/String;Lnet/yudichev/jiotty/common/async/backoff/RetryableFailure;Ljava/util/function/LongConsumer;Ljava/util/function/Supplier;)Ljava/util/function/Function;
      16: invokevirtual #25                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      19: aload         4
      21: invokedynamic #26,  0             // InvokeDynamic #6:get:(Lnet/yudichev/jiotty/common/async/backoff/RetryableFailure;)Ljava/util/function/Supplier;
      26: invokevirtual #27                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      29: checkcast     #12                 // class java/util/concurrent/CompletableFuture
      32: areturn

  private static java.util.concurrent.CompletableFuture lambda$doWithBackOffAndRetry$2(net.yudichev.jiotty.common.async.backoff.RetryableFailure);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method net/yudichev/jiotty/common/async/backoff/RetryableFailure.exception:()Ljava/lang/Throwable;
       4: invokestatic  #29                 // Method net/yudichev/jiotty/common/lang/CompletableFutures.failure:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture;
       7: areturn

  private java.util.concurrent.CompletableFuture lambda$doWithBackOffAndRetry$1(java.lang.String, net.yudichev.jiotty.common.async.backoff.RetryableFailure, java.util.function.LongConsumer, java.util.function.Supplier, java.lang.Long);
    Code:
       0: getstatic     #7                  // Field logger:Lorg/slf4j/Logger;
       3: ldc           #30                 // String Retrying operation \'{}\' with backoff {}ms
       5: aload_1
       6: aload_2
       7: invokevirtual #23                 // Method net/yudichev/jiotty/common/async/backoff/RetryableFailure.backoffDelayMs:()Ljava/util/Optional;
      10: invokeinterface #9,  4            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_3
      16: aload         5
      18: invokevirtual #31                 // Method java/lang/Long.longValue:()J
      21: invokeinterface #32,  3           // InterfaceMethod java/util/function/LongConsumer.accept:(J)V
      26: aload_0
      27: aload_1
      28: aload         4
      30: aload_3
      31: invokevirtual #33                 // Method withBackOffAndRetry:(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/LongConsumer;)Ljava/util/concurrent/CompletableFuture;
      34: areturn

  private static net.yudichev.jiotty.common.lang.Either lambda$doWithBackOffAndRetry$0(net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandler, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #34,  3           // InterfaceMethod net/yudichev/jiotty/common/async/backoff/BackingOffExceptionHandler.handle:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/Optional;
       8: astore_3
       9: aload_2
      10: aload_3
      11: invokestatic  #35                 // Method net/yudichev/jiotty/common/async/backoff/RetryableFailure.of:(Ljava/lang/Throwable;Ljava/util/Optional;)Lnet/yudichev/jiotty/common/async/backoff/RetryableFailure;
      14: invokestatic  #36                 // Method net/yudichev/jiotty/common/lang/Either.right:(Ljava/lang/Object;)Lnet/yudichev/jiotty/common/lang/Either;
      17: areturn

  static {};
    Code:
       0: ldc           #37                 // class net/yudichev/jiotty/common/async/backoff/RetryableOperationExecutorImpl
       2: invokestatic  #38                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #7                  // Field logger:Lorg/slf4j/Logger;
       8: return
}
