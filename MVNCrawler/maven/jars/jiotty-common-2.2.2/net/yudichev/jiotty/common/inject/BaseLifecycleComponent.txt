Compiled from "BaseLifecycleComponent.java"
public abstract class net.yudichev.jiotty.common.inject.BaseLifecycleComponent implements net.yudichev.jiotty.common.inject.LifecycleComponent {
  private final java.util.concurrent.locks.Lock lifecycleStateLock;

  private boolean started;

  public net.yudichev.jiotty.common.inject.BaseLifecycleComponent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
      15: return

  public final void start();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: invokedynamic #5,  0              // InvokeDynamic #0:run:(Lnet/yudichev/jiotty/common/inject/BaseLifecycleComponent;)Ljava/lang/Runnable;
      10: invokestatic  #6                  // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      13: return

  public final void stop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: invokedynamic #7,  0              // InvokeDynamic #1:run:(Lnet/yudichev/jiotty/common/inject/BaseLifecycleComponent;)Ljava/lang/Runnable;
      10: invokestatic  #6                  // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      13: return

  protected final boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: invokedynamic #8,  0              // InvokeDynamic #2:get:(Lnet/yudichev/jiotty/common/inject/BaseLifecycleComponent;)Ljava/util/function/Supplier;
      10: invokestatic  #9                  // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/util/function/Supplier;)Ljava/lang/Object;
      13: checkcast     #10                 // class java/lang/Boolean
      16: invokevirtual #11                 // Method java/lang/Boolean.booleanValue:()Z
      19: ireturn

  protected final void checkStarted();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: invokedynamic #12,  0             // InvokeDynamic #3:run:(Lnet/yudichev/jiotty/common/inject/BaseLifecycleComponent;)Ljava/lang/Runnable;
      10: invokestatic  #6                  // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      13: return

  protected final void whenNotLifecycling(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_1
       5: invokestatic  #6                  // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
       8: return

  protected final void whenStartedAndNotLifecycling(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #13,  0             // InvokeDynamic #4:run:(Lnet/yudichev/jiotty/common/inject/BaseLifecycleComponent;Ljava/lang/Runnable;)Ljava/lang/Runnable;
       8: invokevirtual #14                 // Method whenNotLifecycling:(Ljava/lang/Runnable;)V
      11: return

  protected final <T> T whenNotLifecycling(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lifecycleStateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_1
       5: invokestatic  #9                  // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/util/function/Supplier;)Ljava/lang/Object;
       8: areturn

  protected final <T> T whenStartedAndNotLifecycling(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokedynamic #15,  0             // InvokeDynamic #5:get:(Lnet/yudichev/jiotty/common/inject/BaseLifecycleComponent;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
       8: invokevirtual #16                 // Method whenNotLifecycling:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      11: areturn

  protected void doStart();
    Code:
       0: return

  protected void doStop();
    Code:
       0: return

  private java.lang.Object lambda$whenStartedAndNotLifecycling$5(java.util.function.Supplier);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStarted:()V
       4: aload_1
       5: invokeinterface #18,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      10: areturn

  private void lambda$whenStartedAndNotLifecycling$4(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method checkStarted:()V
       4: aload_1
       5: invokeinterface #19,  1           // InterfaceMethod java/lang/Runnable.run:()V
      10: return

  private void lambda$checkStarted$3();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isStarted:()Z
       4: ldc           #21                 // String Component %s is not started or already stopped
       6: aload_0
       7: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      10: return

  private java.lang.Boolean lambda$isStarted$2();
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: areturn

  private void lambda$stop$1();
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ifeq          16
       7: aload_0
       8: iconst_0
       9: putfield      #23                 // Field started:Z
      12: aload_0
      13: invokevirtual #25                 // Method doStop:()V
      16: return

  private void lambda$start$0();
    Code:
       0: aload_0
       1: getfield      #23                 // Field started:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #26                 // String Component %s is already started
      14: aload_0
      15: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #27                 // Method doStart:()V
      22: aload_0
      23: iconst_1
      24: putfield      #23                 // Field started:Z
      27: return
}
