Compiled from "BackingOffExceptionHandlerImpl.java"
final class net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandlerImpl implements net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandler {
  private static final org.slf4j.Logger logger;

  private final net.yudichev.jiotty.common.lang.backoff.BackOff backOff;

  private final java.util.function.Predicate<? super java.lang.Throwable> retryableExceptionPredicate;

  net.yudichev.jiotty.common.async.backoff.BackingOffExceptionHandlerImpl(net.yudichev.jiotty.common.lang.backoff.BackOff, java.util.function.Predicate<? super java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class net/yudichev/jiotty/common/lang/backoff/BackOff
      12: putfield      #4                  // Field backOff:Lnet/yudichev/jiotty/common/lang/backoff/BackOff;
      15: aload_0
      16: aload_2
      17: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #5                  // class java/util/function/Predicate
      23: putfield      #6                  // Field retryableExceptionPredicate:Ljava/util/function/Predicate;
      26: return

  public java.util.Optional<java.lang.Long> handle(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_2
       1: invokestatic  #7                  // Method com/google/common/base/Throwables.getCausalChain:(Ljava/lang/Throwable;)Ljava/util/List;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: getfield      #6                  // Field retryableExceptionPredicate:Ljava/util/function/Predicate;
      13: invokeinterface #9,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokeinterface #10,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      23: aload_0
      24: aload_1
      25: invokedynamic #11,  0             // InvokeDynamic #0:apply:(Lnet/yudichev/jiotty/common/async/backoff/BackingOffExceptionHandlerImpl;Ljava/lang/String;)Ljava/util/function/Function;
      30: invokevirtual #12                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      33: invokestatic  #13                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      36: invokevirtual #14                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #15                 // class java/util/Optional
      42: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field backOff:Lnet/yudichev/jiotty/common/lang/backoff/BackOff;
       4: dup
       5: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: invokedynamic #17,  0             // InvokeDynamic #1:run:(Lnet/yudichev/jiotty/common/lang/backoff/BackOff;)Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingRunnable;
      14: invokestatic  #18                 // Method net/yudichev/jiotty/common/lang/MoreThrowables.asUnchecked:(Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingRunnable;)V
      17: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #20                 // String backOff
       6: aload_0
       7: getfield      #4                  // Field backOff:Lnet/yudichev/jiotty/common/lang/backoff/BackOff;
      10: invokevirtual #21                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      13: invokevirtual #22                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      16: areturn

  private java.util.Optional lambda$handle$1(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field backOff:Lnet/yudichev/jiotty/common/lang/backoff/BackOff;
       4: invokeinterface #23,  1           // InterfaceMethod net/yudichev/jiotty/common/lang/backoff/BackOff.nextBackOffMillis:()J
       9: lstore_3
      10: getstatic     #24                 // Field logger:Lorg/slf4j/Logger;
      13: ldc           #25                 // String Operation \'{}\': backoff: {}
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field backOff:Lnet/yudichev/jiotty/common/lang/backoff/BackOff;
      20: invokeinterface #26,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      25: lload_3
      26: ldc2_w        #27                 // long -1l
      29: lcmp
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #29                 // String Operation %s is being retried for too long - giving up
      40: aload_1
      41: invokestatic  #30                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      44: getstatic     #24                 // Field logger:Lorg/slf4j/Logger;
      47: ldc           #31                 // String Retryable exception performing operation \'{}\', backing off by waiting for {}ms
      49: iconst_3
      50: anewarray     #32                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_1
      56: aastore
      57: dup
      58: iconst_1
      59: lload_3
      60: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      63: aastore
      64: dup
      65: iconst_2
      66: aload_2
      67: aastore
      68: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      73: lload_3
      74: invokedynamic #35,  0             // InvokeDynamic #2:run:(J)Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingRunnable;
      79: invokestatic  #18                 // Method net/yudichev/jiotty/common/lang/MoreThrowables.asUnchecked:(Lnet/yudichev/jiotty/common/lang/MoreThrowables$CheckedExceptionThrowingRunnable;)V
      82: lload_3
      83: invokestatic  #33                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      86: invokestatic  #36                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      89: areturn

  private static void lambda$handle$0(long) throws java.lang.Exception;
    Code:
       0: lload_0
       1: invokestatic  #37                 // Method java/lang/Thread.sleep:(J)V
       4: return

  static {};
    Code:
       0: ldc           #38                 // class net/yudichev/jiotty/common/async/backoff/BackingOffExceptionHandlerImpl
       2: invokestatic  #39                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
