Compiled from "ThrottlingConsumer.java"
public final class net.yudichev.jiotty.common.lang.throttling.ThrottlingConsumer<T> extends net.yudichev.jiotty.common.lang.BaseIdempotentCloseable implements java.util.function.Consumer<T> {
  private final net.yudichev.jiotty.common.async.SchedulingExecutor executor;

  private final java.time.Duration throttlingDuration;

  private final java.util.function.Consumer<T> delegate;

  private final java.util.concurrent.locks.Lock stateLock;

  private T pendingValue;

  private boolean throttling;

  private net.yudichev.jiotty.common.lang.Closeable throttlingTimerHandle;

  private boolean closed;

  public net.yudichev.jiotty.common.lang.throttling.ThrottlingConsumer(net.yudichev.jiotty.common.async.SchedulingExecutor, java.time.Duration, java.util.function.Consumer<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/yudichev/jiotty/common/lang/BaseIdempotentCloseable."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #4                  // Field stateLock:Ljava/util/concurrent/locks/Lock;
      15: aload_0
      16: invokestatic  #5                  // InterfaceMethod net/yudichev/jiotty/common/lang/Closeable.noop:()Lnet/yudichev/jiotty/common/lang/Closeable;
      19: putfield      #6                  // Field throttlingTimerHandle:Lnet/yudichev/jiotty/common/lang/Closeable;
      22: aload_0
      23: aload_1
      24: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #8                  // class net/yudichev/jiotty/common/async/SchedulingExecutor
      30: putfield      #9                  // Field executor:Lnet/yudichev/jiotty/common/async/SchedulingExecutor;
      33: aload_2
      34: invokevirtual #10                 // Method java/time/Duration.isNegative:()Z
      37: ifne          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ldc           #11                 // String throttlingDuration must not be negative, but was %s
      47: aload_2
      48: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      51: aload_0
      52: aload_2
      53: putfield      #13                 // Field throttlingDuration:Ljava/time/Duration;
      56: aload_0
      57: aload_3
      58: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #14                 // class java/util/function/Consumer
      64: putfield      #15                 // Field delegate:Ljava/util/function/Consumer;
      67: return

  public void accept(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: aload_1
       6: invokedynamic #16,  0             // InvokeDynamic #0:run:(Lnet/yudichev/jiotty/common/lang/throttling/ThrottlingConsumer;Ljava/lang/Object;)Ljava/lang/Runnable;
      11: invokestatic  #17                 // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      14: return

  protected void doClose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stateLock:Ljava/util/concurrent/locks/Lock;
       4: aload_0
       5: invokedynamic #18,  0             // InvokeDynamic #1:run:(Lnet/yudichev/jiotty/common/lang/throttling/ThrottlingConsumer;)Ljava/lang/Runnable;
      10: invokestatic  #17                 // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      13: return

  private void deliverValue();
    Code:
       0: aload_0
       1: getfield      #15                 // Field delegate:Ljava/util/function/Consumer;
       4: aload_0
       5: getfield      #19                 // Field pendingValue:Ljava/lang/Object;
       8: invokeinterface #20,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: aload_0
      14: aconst_null
      15: putfield      #19                 // Field pendingValue:Ljava/lang/Object;
      18: aload_0
      19: getfield      #4                  // Field stateLock:Ljava/util/concurrent/locks/Lock;
      22: aload_0
      23: invokedynamic #21,  0             // InvokeDynamic #2:run:(Lnet/yudichev/jiotty/common/lang/throttling/ThrottlingConsumer;)Ljava/lang/Runnable;
      28: invokestatic  #17                 // Method net/yudichev/jiotty/common/lang/Locks.inLock:(Ljava/util/concurrent/locks/Lock;Ljava/lang/Runnable;)V
      31: return

  private void onTimer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field pendingValue:Ljava/lang/Object;
       4: ifnull        14
       7: aload_0
       8: invokevirtual #22                 // Method deliverValue:()V
      11: goto          19
      14: aload_0
      15: iconst_0
      16: putfield      #23                 // Field throttling:Z
      19: return

  private void lambda$deliverValue$3();
    Code:
       0: aload_0
       1: getfield      #24                 // Field closed:Z
       4: ifne          35
       7: aload_0
       8: aload_0
       9: getfield      #9                  // Field executor:Lnet/yudichev/jiotty/common/async/SchedulingExecutor;
      12: aload_0
      13: getfield      #13                 // Field throttlingDuration:Ljava/time/Duration;
      16: aload_0
      17: invokedynamic #25,  0             // InvokeDynamic #3:run:(Lnet/yudichev/jiotty/common/lang/throttling/ThrottlingConsumer;)Ljava/lang/Runnable;
      22: invokeinterface #26,  3           // InterfaceMethod net/yudichev/jiotty/common/async/SchedulingExecutor.schedule:(Ljava/time/Duration;Ljava/lang/Runnable;)Lnet/yudichev/jiotty/common/lang/Closeable;
      27: putfield      #6                  // Field throttlingTimerHandle:Lnet/yudichev/jiotty/common/lang/Closeable;
      30: aload_0
      31: iconst_1
      32: putfield      #23                 // Field throttling:Z
      35: return

  private void lambda$doClose$2();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #24                 // Field closed:Z
       5: aload_0
       6: getfield      #6                  // Field throttlingTimerHandle:Lnet/yudichev/jiotty/common/lang/Closeable;
       9: invokestatic  #27                 // InterfaceMethod net/yudichev/jiotty/common/lang/Closeable.closeIfNotNull:(Ljava/lang/AutoCloseable;)V
      12: return

  private void lambda$accept$1(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #24                 // Field closed:Z
       4: ifne          23
       7: aload_0
       8: getfield      #9                  // Field executor:Lnet/yudichev/jiotty/common/async/SchedulingExecutor;
      11: aload_0
      12: aload_1
      13: invokedynamic #28,  0             // InvokeDynamic #4:run:(Lnet/yudichev/jiotty/common/lang/throttling/ThrottlingConsumer;Ljava/lang/Object;)Ljava/lang/Runnable;
      18: invokeinterface #29,  2           // InterfaceMethod net/yudichev/jiotty/common/async/SchedulingExecutor.execute:(Ljava/lang/Runnable;)V
      23: return

  private void lambda$accept$0(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field pendingValue:Ljava/lang/Object;
       5: aload_0
       6: getfield      #23                 // Field throttling:Z
       9: ifne          16
      12: aload_0
      13: invokevirtual #22                 // Method deliverValue:()V
      16: return
}
