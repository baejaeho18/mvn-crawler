Compiled from "RetryableOperationExecutor.java"
public interface net.yudichev.jiotty.common.async.backoff.RetryableOperationExecutor {
  public default <T> java.util.concurrent.CompletableFuture<T> withBackOffAndRetry(java.lang.String, java.util.function.Supplier<? extends java.util.concurrent.CompletableFuture<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1,  0              // InvokeDynamic #0:accept:()Ljava/util/function/LongConsumer;
       8: invokeinterface #2,  4            // InterfaceMethod withBackOffAndRetry:(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/LongConsumer;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public abstract <T> java.util.concurrent.CompletableFuture<T> withBackOffAndRetry(java.lang.String, java.util.function.Supplier<? extends java.util.concurrent.CompletableFuture<T>>, java.util.function.LongConsumer);

  private static void lambda$withBackOffAndRetry$0(long);
    Code:
       0: return
}
