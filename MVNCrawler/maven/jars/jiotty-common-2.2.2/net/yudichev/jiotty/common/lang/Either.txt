Compiled from "Either.java"
public final class net.yudichev.jiotty.common.lang.Either<L, R> {
  private final L left;

  private final R right;

  private final boolean isLeft;

  private net.yudichev.jiotty.common.lang.Either(L, R, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field left:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field right:Ljava/lang/Object;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field isLeft:Z
      19: return

  public static <L, R> net.yudichev.jiotty.common.lang.Either<L, R> left(L);
    Code:
       0: new           #5                  // class net/yudichev/jiotty/common/lang/Either
       3: dup
       4: aload_0
       5: aconst_null
       6: iconst_1
       7: invokespecial #6                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Z)V
      10: areturn

  public static <L, R> net.yudichev.jiotty.common.lang.Either<L, R> right(R);
    Code:
       0: new           #5                  // class net/yudichev/jiotty/common/lang/Either
       3: dup
       4: aconst_null
       5: aload_0
       6: iconst_0
       7: invokespecial #6                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Z)V
      10: areturn

  public void accept(java.util.function.Consumer<? super L>, java.util.function.Consumer<? super R>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isLeft:Z
       4: ifeq          20
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field left:Ljava/lang/Object;
      12: invokeinterface #7,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: goto          30
      20: aload_2
      21: aload_0
      22: getfield      #3                  // Field right:Ljava/lang/Object;
      25: invokeinterface #7,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      30: return

  public <T> T map(java.util.function.Function<? super L, ? extends T>, java.util.function.Function<? super R, ? extends T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isLeft:Z
       4: ifeq          20
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field left:Ljava/lang/Object;
      12: invokeinterface #8,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      17: goto          30
      20: aload_2
      21: aload_0
      22: getfield      #3                  // Field right:Ljava/lang/Object;
      25: invokeinterface #8,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      30: areturn

  public java.util.Optional<L> getLeft();
    Code:
       0: aload_0
       1: getfield      #2                  // Field left:Ljava/lang/Object;
       4: invokestatic  #9                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public java.util.Optional<R> getRight();
    Code:
       0: aload_0
       1: getfield      #3                  // Field right:Ljava/lang/Object;
       4: invokestatic  #9                  // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #5                  // class net/yudichev/jiotty/common/lang/Either
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field left:Ljava/lang/Object;
      33: aload_2
      34: getfield      #2                  // Field left:Ljava/lang/Object;
      37: invokestatic  #11                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          61
      43: aload_0
      44: getfield      #3                  // Field right:Ljava/lang/Object;
      47: aload_2
      48: getfield      #3                  // Field right:Ljava/lang/Object;
      51: invokestatic  #11                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #12                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field left:Ljava/lang/Object;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field right:Ljava/lang/Object;
      17: aastore
      18: invokestatic  #13                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      21: ireturn
}
