Compiled from "RandomClient.java"
public class io.vertx.circuitbreaker.metrics.RandomClient extends io.vertx.core.AbstractVerticle {
  java.util.List<java.lang.String> paths;

  java.util.Random random;

  public io.vertx.circuitbreaker.metrics.RandomClient();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/vertx/core/AbstractVerticle."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field paths:Ljava/util/List;
      15: aload_0
      16: new           #5                  // class java/util/Random
      19: dup
      20: invokespecial #6                  // Method java/util/Random."<init>":()V
      23: putfield      #7                  // Field random:Ljava/util/Random;
      26: return

  public static void main(java.lang.String[]);
    Code:
       0: invokestatic  #8                  // InterfaceMethod io/vertx/core/Vertx.vertx:()Lio/vertx/core/Vertx;
       3: astore_1
       4: aload_1
       5: ldc           #9                  // class io/vertx/circuitbreaker/metrics/RandomClient
       7: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      10: new           #11                 // class io/vertx/core/DeploymentOptions
      13: dup
      14: invokespecial #12                 // Method io/vertx/core/DeploymentOptions."<init>":()V
      17: iconst_4
      18: invokevirtual #13                 // Method io/vertx/core/DeploymentOptions.setInstances:(I)Lio/vertx/core/DeploymentOptions;
      21: invokeinterface #14,  3           // InterfaceMethod io/vertx/core/Vertx.deployVerticle:(Ljava/lang/String;Lio/vertx/core/DeploymentOptions;)V
      26: return

  public void start() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field paths:Ljava/util/List;
       4: ldc           #15                 // String /A
       6: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      11: pop
      12: aload_0
      13: getfield      #4                  // Field paths:Ljava/util/List;
      16: ldc           #15                 // String /A
      18: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: getfield      #4                  // Field paths:Ljava/util/List;
      28: ldc           #17                 // String /B
      30: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: getfield      #4                  // Field paths:Ljava/util/List;
      40: ldc           #18                 // String /C
      42: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: new           #19                 // class java/util/concurrent/atomic/AtomicInteger
      51: dup
      52: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      55: astore_1
      56: aload_0
      57: getfield      #21                 // Field vertx:Lio/vertx/core/Vertx;
      60: ldc2_w        #22                 // long 500l
      63: aload_0
      64: aload_1
      65: invokedynamic #24,  0             // InvokeDynamic #0:handle:(Lio/vertx/circuitbreaker/metrics/RandomClient;Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      70: invokeinterface #25,  4           // InterfaceMethod io/vertx/core/Vertx.setPeriodic:(JLio/vertx/core/Handler;)J
      75: pop2
      76: return

  private void lambda$start$2(java.util.concurrent.atomic.AtomicInteger, java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field random:Ljava/util/Random;
       4: aload_0
       5: getfield      #4                  // Field paths:Ljava/util/List;
       8: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      13: invokevirtual #27                 // Method java/util/Random.nextInt:(I)I
      16: istore_3
      17: aload_1
      18: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      21: istore        4
      23: aload_0
      24: getfield      #21                 // Field vertx:Lio/vertx/core/Vertx;
      27: invokeinterface #29,  1           // InterfaceMethod io/vertx/core/Vertx.createHttpClient:()Lio/vertx/core/http/HttpClient;
      32: sipush        8080
      35: ldc           #30                 // String localhost
      37: aload_0
      38: getfield      #4                  // Field paths:Ljava/util/List;
      41: iload_3
      42: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      47: checkcast     #32                 // class java/lang/String
      50: aload_0
      51: iload         4
      53: iload_3
      54: invokedynamic #33,  0             // InvokeDynamic #1:handle:(Lio/vertx/circuitbreaker/metrics/RandomClient;II)Lio/vertx/core/Handler;
      59: invokeinterface #34,  5           // InterfaceMethod io/vertx/core/http/HttpClient.get:(ILjava/lang/String;Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      64: invokeinterface #35,  1           // InterfaceMethod io/vertx/core/http/HttpClientRequest.end:()V
      69: return

  private void lambda$null$1(int, int, io.vertx.core.http.HttpClientResponse);
    Code:
       0: getstatic     #36                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #37                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      10: aload_0
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #40                 // String [
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: iload_1
      20: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: ldc           #43                 // String ] (
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #4                  // Field paths:Ljava/util/List;
      32: iload_2
      33: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      38: checkcast     #32                 // class java/lang/String
      41: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #44                 // String ) Response:
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_3
      50: invokeinterface #45,  1           // InterfaceMethod io/vertx/core/http/HttpClientResponse.statusMessage:()Ljava/lang/String;
      55: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      64: aload_3
      65: aload_0
      66: iload_1
      67: iload_2
      68: invokedynamic #48,  0             // InvokeDynamic #2:handle:(Lio/vertx/circuitbreaker/metrics/RandomClient;II)Lio/vertx/core/Handler;
      73: invokeinterface #49,  2           // InterfaceMethod io/vertx/core/http/HttpClientResponse.bodyHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      78: pop
      79: return

  private void lambda$null$0(int, int, io.vertx.core.buffer.Buffer);
    Code:
       0: getstatic     #36                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #37                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      10: aload_0
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #40                 // String [
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: iload_1
      20: invokevirtual #42                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      23: ldc           #43                 // String ] (
      25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #4                  // Field paths:Ljava/util/List;
      32: iload_2
      33: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      38: checkcast     #32                 // class java/lang/String
      41: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #50                 // String ) Data:
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_3
      50: invokeinterface #51,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.toString:()Ljava/lang/String;
      55: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      64: return
}
