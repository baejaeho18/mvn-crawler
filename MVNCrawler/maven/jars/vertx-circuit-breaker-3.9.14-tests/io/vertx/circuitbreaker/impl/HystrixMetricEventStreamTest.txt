Compiled from "HystrixMetricEventStreamTest.java"
public class io.vertx.circuitbreaker.impl.HystrixMetricEventStreamTest {
  public io.vertx.ext.unit.junit.RepeatRule rule;

  private io.vertx.circuitbreaker.CircuitBreaker breakerA;

  private io.vertx.circuitbreaker.CircuitBreaker breakerB;

  private io.vertx.circuitbreaker.CircuitBreaker breakerC;

  private io.vertx.core.Vertx vertx;

  private java.util.Random random;

  public io.vertx.circuitbreaker.impl.HystrixMetricEventStreamTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/vertx/ext/unit/junit/RepeatRule
       8: dup
       9: invokespecial #3                  // Method io/vertx/ext/unit/junit/RepeatRule."<init>":()V
      12: putfield      #4                  // Field rule:Lio/vertx/ext/unit/junit/RepeatRule;
      15: aload_0
      16: new           #5                  // class java/util/Random
      19: dup
      20: invokespecial #6                  // Method java/util/Random."<init>":()V
      23: putfield      #7                  // Field random:Ljava/util/Random;
      26: return

  public void setUp(io.vertx.ext.unit.TestContext);
    Code:
       0: aload_0
       1: invokestatic  #8                  // InterfaceMethod io/vertx/core/Vertx.vertx:()Lio/vertx/core/Vertx;
       4: putfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
       7: aload_0
       8: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
      11: aload_1
      12: invokeinterface #10,  1           // InterfaceMethod io/vertx/ext/unit/TestContext.exceptionHandler:()Lio/vertx/core/Handler;
      17: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/Vertx.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Vertx;
      22: pop
      23: return

  public void tearDown();
    Code:
       0: aload_0
       1: getfield      #12                 // Field breakerA:Lio/vertx/circuitbreaker/CircuitBreaker;
       4: ifnull        17
       7: aload_0
       8: getfield      #12                 // Field breakerA:Lio/vertx/circuitbreaker/CircuitBreaker;
      11: invokeinterface #13,  1           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.close:()Lio/vertx/circuitbreaker/CircuitBreaker;
      16: pop
      17: aload_0
      18: getfield      #14                 // Field breakerB:Lio/vertx/circuitbreaker/CircuitBreaker;
      21: ifnull        34
      24: aload_0
      25: getfield      #14                 // Field breakerB:Lio/vertx/circuitbreaker/CircuitBreaker;
      28: invokeinterface #13,  1           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.close:()Lio/vertx/circuitbreaker/CircuitBreaker;
      33: pop
      34: aload_0
      35: getfield      #15                 // Field breakerC:Lio/vertx/circuitbreaker/CircuitBreaker;
      38: ifnull        51
      41: aload_0
      42: getfield      #15                 // Field breakerC:Lio/vertx/circuitbreaker/CircuitBreaker;
      45: invokeinterface #13,  1           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.close:()Lio/vertx/circuitbreaker/CircuitBreaker;
      50: pop
      51: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
      54: dup
      55: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      58: astore_1
      59: aload_0
      60: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
      63: aload_1
      64: invokedynamic #18,  0             // InvokeDynamic #0:handle:(Ljava/util/concurrent/atomic/AtomicBoolean;)Lio/vertx/core/Handler;
      69: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/Vertx.close:(Lio/vertx/core/Handler;)V
      74: invokestatic  #20                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      77: aload_1
      78: iconst_1
      79: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      82: invokestatic  #22                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      85: invokevirtual #23                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
      88: return

  public void test();
    Code:
       0: aload_0
       1: ldc           #24                 // String A
       3: aload_0
       4: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #25                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #26                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: ldc2_w        #27                 // long 1000l
      17: invokevirtual #29                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      20: invokestatic  #30                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      23: putfield      #12                 // Field breakerA:Lio/vertx/circuitbreaker/CircuitBreaker;
      26: aload_0
      27: ldc           #31                 // String B
      29: aload_0
      30: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
      33: new           #25                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      36: dup
      37: invokespecial #26                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      40: ldc2_w        #27                 // long 1000l
      43: invokevirtual #29                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      46: invokestatic  #30                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      49: putfield      #14                 // Field breakerB:Lio/vertx/circuitbreaker/CircuitBreaker;
      52: aload_0
      53: ldc           #32                 // String C
      55: aload_0
      56: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
      59: new           #25                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      62: dup
      63: invokespecial #26                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      66: ldc2_w        #27                 // long 1000l
      69: invokevirtual #29                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      72: invokestatic  #30                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      75: putfield      #15                 // Field breakerC:Lio/vertx/circuitbreaker/CircuitBreaker;
      78: aload_0
      79: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
      82: invokestatic  #33                 // InterfaceMethod io/vertx/ext/web/Router.router:(Lio/vertx/core/Vertx;)Lio/vertx/ext/web/Router;
      85: astore_1
      86: aload_1
      87: ldc           #34                 // String /metrics
      89: invokeinterface #35,  2           // InterfaceMethod io/vertx/ext/web/Router.get:(Ljava/lang/String;)Lio/vertx/ext/web/Route;
      94: aload_0
      95: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
      98: invokestatic  #36                 // InterfaceMethod io/vertx/circuitbreaker/HystrixMetricHandler.create:(Lio/vertx/core/Vertx;)Lio/vertx/circuitbreaker/HystrixMetricHandler;
     101: invokeinterface #37,  2           // InterfaceMethod io/vertx/ext/web/Route.handler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/Route;
     106: pop
     107: new           #16                 // class java/util/concurrent/atomic/AtomicBoolean
     110: dup
     111: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
     114: astore_2
     115: aload_0
     116: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
     119: invokeinterface #38,  1           // InterfaceMethod io/vertx/core/Vertx.createHttpServer:()Lio/vertx/core/http/HttpServer;
     124: aload_1
     125: dup
     126: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     129: pop
     130: invokedynamic #40,  0             // InvokeDynamic #1:handle:(Lio/vertx/ext/web/Router;)Lio/vertx/core/Handler;
     135: invokeinterface #41,  2           // InterfaceMethod io/vertx/core/http/HttpServer.requestHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServer;
     140: sipush        8080
     143: aload_2
     144: invokedynamic #42,  0             // InvokeDynamic #2:handle:(Ljava/util/concurrent/atomic/AtomicBoolean;)Lio/vertx/core/Handler;
     149: invokeinterface #43,  3           // InterfaceMethod io/vertx/core/http/HttpServer.listen:(ILio/vertx/core/Handler;)Lio/vertx/core/http/HttpServer;
     154: pop
     155: invokestatic  #20                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     158: aload_2
     159: iconst_1
     160: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     163: invokestatic  #22                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
     166: invokevirtual #23                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
     169: new           #44                 // class java/util/concurrent/CopyOnWriteArrayList
     172: dup
     173: invokespecial #45                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
     176: astore_3
     177: aload_0
     178: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
     181: invokeinterface #46,  1           // InterfaceMethod io/vertx/core/Vertx.createHttpClient:()Lio/vertx/core/http/HttpClient;
     186: astore        4
     188: ldc           #47                 // String \n\n
     190: aload_3
     191: invokedynamic #48,  0             // InvokeDynamic #3:handle:(Ljava/util/List;)Lio/vertx/core/Handler;
     196: invokestatic  #49                 // InterfaceMethod io/vertx/core/parsetools/RecordParser.newDelimited:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/parsetools/RecordParser;
     199: astore        5
     201: aload         4
     203: sipush        8080
     206: ldc           #50                 // String localhost
     208: ldc           #34                 // String /metrics
     210: invokeinterface #51,  4           // InterfaceMethod io/vertx/core/http/HttpClient.get:(ILjava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
     215: aload         5
     217: invokedynamic #52,  0             // InvokeDynamic #4:handle:(Lio/vertx/core/parsetools/RecordParser;)Lio/vertx/core/Handler;
     222: invokeinterface #53,  2           // InterfaceMethod io/vertx/core/http/HttpClientRequest.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
     227: invokeinterface #54,  1           // InterfaceMethod io/vertx/core/http/HttpClientRequest.end:()V
     232: iconst_0
     233: istore        6
     235: iload         6
     237: sipush        1000
     240: if_icmpge     291
     243: aload_0
     244: getfield      #12                 // Field breakerA:Lio/vertx/circuitbreaker/CircuitBreaker;
     247: aload_0
     248: invokespecial #55                 // Method choose:()Lio/vertx/core/Handler;
     251: invokeinterface #56,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     256: pop
     257: aload_0
     258: getfield      #14                 // Field breakerB:Lio/vertx/circuitbreaker/CircuitBreaker;
     261: aload_0
     262: invokespecial #55                 // Method choose:()Lio/vertx/core/Handler;
     265: invokeinterface #56,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     270: pop
     271: aload_0
     272: getfield      #15                 // Field breakerC:Lio/vertx/circuitbreaker/CircuitBreaker;
     275: aload_0
     276: invokespecial #55                 // Method choose:()Lio/vertx/core/Handler;
     279: invokeinterface #56,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     284: pop
     285: iinc          6, 1
     288: goto          235
     291: invokestatic  #20                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     294: lconst_1
     295: getstatic     #57                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
     298: invokevirtual #58                 // Method com/jayway/awaitility/core/ConditionFactory.atMost:(JLjava/util/concurrent/TimeUnit;)Lcom/jayway/awaitility/core/ConditionFactory;
     301: aload_3
     302: invokedynamic #59,  0             // InvokeDynamic #5:call:(Ljava/util/List;)Ljava/util/concurrent/Callable;
     307: invokevirtual #60                 // Method com/jayway/awaitility/core/ConditionFactory.until:(Ljava/util/concurrent/Callable;)V
     310: aconst_null
     311: astore        6
     313: aconst_null
     314: astore        7
     316: aconst_null
     317: astore        8
     319: aload_3
     320: invokeinterface #61,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     325: astore        9
     327: aload         9
     329: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     334: ifeq          415
     337: aload         9
     339: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     344: checkcast     #64                 // class io/vertx/core/json/JsonObject
     347: astore        10
     349: aload         10
     351: ldc           #65                 // String name
     353: invokevirtual #66                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
     356: ldc           #24                 // String A
     358: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     361: ifeq          371
     364: aload         10
     366: astore        6
     368: goto          412
     371: aload         10
     373: ldc           #65                 // String name
     375: invokevirtual #66                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
     378: ldc           #31                 // String B
     380: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     383: ifeq          393
     386: aload         10
     388: astore        7
     390: goto          412
     393: aload         10
     395: ldc           #65                 // String name
     397: invokevirtual #66                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
     400: ldc           #32                 // String C
     402: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     405: ifeq          412
     408: aload         10
     410: astore        8
     412: goto          327
     415: aload         6
     417: ifnonnull     434
     420: aload         7
     422: ifnonnull     434
     425: aload         8
     427: ifnonnull     434
     430: iconst_1
     431: goto          435
     434: iconst_0
     435: invokestatic  #68                 // Method org/assertj/core/api/Assertions.assertThat:(Z)Lorg/assertj/core/api/AbstractBooleanAssert;
     438: pop
     439: return

  private io.vertx.core.Handler<io.vertx.core.Promise<java.lang.Void>> choose();
    Code:
       0: aload_0
       1: getfield      #7                  // Field random:Ljava/util/Random;
       4: iconst_5
       5: invokevirtual #69                 // Method java/util/Random.nextInt:(I)I
       8: istore_1
       9: iload_1
      10: tableswitch   { // 0 to 4
                     0: 44
                     1: 49
                     2: 54
                     3: 59
                     4: 67
               default: 75
          }
      44: aload_0
      45: invokespecial #70                 // Method commandThatWorks:()Lio/vertx/core/Handler;
      48: areturn
      49: aload_0
      50: invokespecial #71                 // Method commandThatFails:()Lio/vertx/core/Handler;
      53: areturn
      54: aload_0
      55: invokespecial #72                 // Method commandThatCrashes:()Lio/vertx/core/Handler;
      58: areturn
      59: aload_0
      60: sipush        1000
      63: invokespecial #73                 // Method commandThatTimeout:(I)Lio/vertx/core/Handler;
      66: areturn
      67: aload_0
      68: sipush        1000
      71: invokespecial #74                 // Method commandThatTimeoutAndFail:(I)Lio/vertx/core/Handler;
      74: areturn
      75: aload_0
      76: invokespecial #70                 // Method commandThatWorks:()Lio/vertx/core/Handler;
      79: areturn

  private io.vertx.core.Handler<io.vertx.core.Promise<java.lang.Void>> commandThatWorks();
    Code:
       0: aload_0
       1: invokedynamic #75,  0             // InvokeDynamic #6:handle:(Lio/vertx/circuitbreaker/impl/HystrixMetricEventStreamTest;)Lio/vertx/core/Handler;
       6: areturn

  private io.vertx.core.Handler<io.vertx.core.Promise<java.lang.Void>> commandThatFails();
    Code:
       0: aload_0
       1: invokedynamic #76,  0             // InvokeDynamic #7:handle:(Lio/vertx/circuitbreaker/impl/HystrixMetricEventStreamTest;)Lio/vertx/core/Handler;
       6: areturn

  private io.vertx.core.Handler<io.vertx.core.Promise<java.lang.Void>> commandThatCrashes();
    Code:
       0: invokedynamic #77,  0             // InvokeDynamic #8:handle:()Lio/vertx/core/Handler;
       5: areturn

  private io.vertx.core.Handler<io.vertx.core.Promise<java.lang.Void>> commandThatTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokedynamic #78,  0             // InvokeDynamic #9:handle:(Lio/vertx/circuitbreaker/impl/HystrixMetricEventStreamTest;I)Lio/vertx/core/Handler;
       7: areturn

  private io.vertx.core.Handler<io.vertx.core.Promise<java.lang.Void>> commandThatTimeoutAndFail(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokedynamic #79,  0             // InvokeDynamic #10:handle:(Lio/vertx/circuitbreaker/impl/HystrixMetricEventStreamTest;I)Lio/vertx/core/Handler;
       7: areturn

  private void lambda$commandThatTimeoutAndFail$13(int, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
       4: iload_1
       5: sipush        500
       8: iadd
       9: i2l
      10: aload_2
      11: invokedynamic #80,  0             // InvokeDynamic #11:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      16: invokeinterface #81,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      21: pop2
      22: return

  private static void lambda$null$12(io.vertx.core.Promise, java.lang.Long);
    Code:
       0: aload_0
       1: ldc           #82                 // String late failure
       3: invokeinterface #83,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
       8: return

  private void lambda$commandThatTimeout$11(int, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
       4: iload_1
       5: sipush        500
       8: iadd
       9: i2l
      10: aload_2
      11: invokedynamic #84,  0             // InvokeDynamic #12:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      16: invokeinterface #81,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      21: pop2
      22: return

  private static void lambda$null$10(io.vertx.core.Promise, java.lang.Long);
    Code:
       0: aload_0
       1: aconst_null
       2: invokeinterface #85,  2           // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
       7: return

  private static void lambda$commandThatCrashes$9(io.vertx.core.Promise);
    Code:
       0: new           #86                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #87                 // String Expected error
       6: invokespecial #88                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  private void lambda$commandThatFails$8(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
       4: ldc2_w        #89                 // long 5l
       7: aload_1
       8: invokedynamic #91,  0             // InvokeDynamic #13:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      13: invokeinterface #81,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      18: pop2
      19: return

  private static void lambda$null$7(io.vertx.core.Promise, java.lang.Long);
    Code:
       0: aload_0
       1: ldc           #92                 // String expected failure
       3: invokeinterface #83,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
       8: return

  private void lambda$commandThatWorks$6(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field vertx:Lio/vertx/core/Vertx;
       4: ldc2_w        #89                 // long 5l
       7: aload_1
       8: invokedynamic #93,  0             // InvokeDynamic #14:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      13: invokeinterface #81,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      18: pop2
      19: return

  private static void lambda$null$5(io.vertx.core.Promise, java.lang.Long);
    Code:
       0: aload_0
       1: aconst_null
       2: invokeinterface #85,  2           // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
       7: return

  private static java.lang.Boolean lambda$test$4(java.util.List) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #94,  1           // InterfaceMethod java/util/List.size:()I
       6: bipush        100
       8: if_icmple     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      19: areturn

  private static void lambda$test$3(io.vertx.core.parsetools.RecordParser, io.vertx.core.http.HttpClientResponse);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #95,  2           // InterfaceMethod io/vertx/core/http/HttpClientResponse.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
       7: pop
       8: return

  private static void lambda$test$2(java.util.List, io.vertx.core.buffer.Buffer);
    Code:
       0: aload_1
       1: invokeinterface #96,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.toString:()Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: ldc           #97                 // String \n
      10: invokevirtual #98                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      13: astore_3
      14: aload_3
      15: astore        4
      17: aload         4
      19: arraylength
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         6
      27: iload         5
      29: if_icmpge     94
      32: aload         4
      34: iload         6
      36: aaload
      37: astore        7
      39: aload         7
      41: invokevirtual #99                 // Method java/lang/String.trim:()Ljava/lang/String;
      44: astore        8
      46: aload         8
      48: ldc           #100                // String data:
      50: invokevirtual #101                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      53: ifeq          88
      56: aload         8
      58: ldc           #100                // String data:
      60: invokevirtual #102                // Method java/lang/String.length:()I
      63: invokevirtual #103                // Method java/lang/String.substring:(I)Ljava/lang/String;
      66: astore        9
      68: new           #64                 // class io/vertx/core/json/JsonObject
      71: dup
      72: aload         9
      74: invokespecial #104                // Method io/vertx/core/json/JsonObject."<init>":(Ljava/lang/String;)V
      77: astore        10
      79: aload_0
      80: aload         10
      82: invokeinterface #105,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: iinc          6, 1
      91: goto          25
      94: return

  private static void lambda$test$1(java.util.concurrent.atomic.AtomicBoolean, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #106,  1          // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       7: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      10: return

  private static void lambda$tearDown$0(java.util.concurrent.atomic.AtomicBoolean, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #106,  1          // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       7: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      10: return
}
