Compiled from "AsyncBreakerTest.java"
public class io.vertx.circuitbreaker.impl.AsyncBreakerTest {
  private io.vertx.core.Vertx vertx;

  private io.vertx.circuitbreaker.CircuitBreaker breaker;

  private int count;

  private static org.slf4j.Logger LOG;

  public io.vertx.circuitbreaker.impl.AsyncBreakerTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setUp();
    Code:
       0: aload_0
       1: invokestatic  #2                  // InterfaceMethod io/vertx/core/Vertx.vertx:()Lio/vertx/core/Vertx;
       4: putfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: aload_0
       8: ldc           #4                  // String collector-circuit-breaker
      10: aload_0
      11: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
      14: new           #5                  // class io/vertx/circuitbreaker/CircuitBreakerOptions
      17: dup
      18: invokespecial #6                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      21: iconst_2
      22: invokevirtual #7                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxFailures:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      25: ldc2_w        #8                  // long 1000l
      28: invokevirtual #10                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      31: iconst_0
      32: invokevirtual #11                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setFallbackOnFailure:(Z)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      35: ldc2_w        #12                 // long 2000l
      38: invokevirtual #14                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setResetTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      41: lconst_0
      42: invokevirtual #15                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setNotificationPeriod:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      45: invokestatic  #16                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      48: putfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      51: aload_0
      52: iconst_0
      53: putfield      #18                 // Field count:I
      56: return

  public void tearDown(io.vertx.ext.unit.TestContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       4: aload_1
       5: invokeinterface #19,  1           // InterfaceMethod io/vertx/ext/unit/TestContext.asyncAssertSuccess:()Lio/vertx/core/Handler;
      10: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/Vertx.close:(Lio/vertx/core/Handler;)V
      15: return

  private void x(io.vertx.ext.unit.TestContext, int);
    Code:
       0: aload_1
       1: bipush        10
       3: invokeinterface #21,  2           // InterfaceMethod io/vertx/ext/unit/TestContext.async:(I)Lio/vertx/ext/unit/Async;
       8: astore_3
       9: aload_0
      10: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      13: aload_0
      14: iload_2
      15: aload_3
      16: invokedynamic #22,  0             // InvokeDynamic #0:handle:(Lio/vertx/circuitbreaker/impl/AsyncBreakerTest;ILio/vertx/ext/unit/Async;)Lio/vertx/core/Handler;
      21: iload_2
      22: aload_3
      23: invokedynamic #23,  0             // InvokeDynamic #1:apply:(ILio/vertx/ext/unit/Async;)Ljava/util/function/Function;
      28: invokeinterface #24,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      33: pop
      34: return

  public void test1(io.vertx.ext.unit.TestContext) throws java.lang.InterruptedException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        20
       5: if_icmpge     20
       8: aload_0
       9: aload_1
      10: iload_2
      11: invokespecial #25                 // Method x:(Lio/vertx/ext/unit/TestContext;I)V
      14: iinc          2, 1
      17: goto          2
      20: aload_0
      21: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      24: invokedynamic #26,  0             // InvokeDynamic #2:handle:()Lio/vertx/core/Handler;
      29: invokeinterface #27,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.openHandler:(Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      34: pop
      35: aload_0
      36: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      39: aload_1
      40: invokedynamic #28,  0             // InvokeDynamic #3:handle:(Lio/vertx/ext/unit/TestContext;)Lio/vertx/core/Handler;
      45: invokeinterface #29,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.closeHandler:(Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      50: pop
      51: aload_0
      52: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      55: invokedynamic #30,  0             // InvokeDynamic #4:handle:()Lio/vertx/core/Handler;
      60: invokeinterface #31,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.halfOpenHandler:(Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      65: pop
      66: return

  public void test2(io.vertx.ext.unit.TestContext) throws java.lang.InterruptedException;
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod io/vertx/ext/unit/TestContext.async:()Lio/vertx/ext/unit/Async;
       6: astore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: bipush        20
      12: if_icmpge     27
      15: aload_0
      16: aload_1
      17: iload_3
      18: invokespecial #25                 // Method x:(Lio/vertx/ext/unit/TestContext;I)V
      21: iinc          3, 1
      24: goto          9
      27: aload_0
      28: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      31: invokedynamic #33,  0             // InvokeDynamic #5:handle:()Lio/vertx/core/Handler;
      36: invokeinterface #27,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.openHandler:(Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      41: pop
      42: aload_0
      43: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      46: aload_2
      47: invokedynamic #34,  0             // InvokeDynamic #6:handle:(Lio/vertx/ext/unit/Async;)Lio/vertx/core/Handler;
      52: invokeinterface #29,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.closeHandler:(Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      57: pop
      58: aload_0
      59: getfield      #17                 // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      62: invokedynamic #35,  0             // InvokeDynamic #7:handle:()Lio/vertx/core/Handler;
      67: invokeinterface #31,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.halfOpenHandler:(Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      72: pop
      73: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
      76: ldc           #37                 // String Waiting for test to complete
      78: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      83: ldc2_w        #39                 // long 3000l
      86: invokestatic  #41                 // Method java/lang/Thread.sleep:(J)V
      89: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
      92: ldc           #42                 // String Sleep done
      94: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      99: iconst_0
     100: istore_3
     101: iload_3
     102: iconst_5
     103: if_icmpge     118
     106: aload_0
     107: aload_1
     108: iload_3
     109: invokespecial #25                 // Method x:(Lio/vertx/ext/unit/TestContext;I)V
     112: iinc          3, 1
     115: goto          101
     118: return

  private static void lambda$test2$8(java.lang.Void);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #43                 // String Breaker half open
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: return

  private static void lambda$test2$7(io.vertx.ext.unit.Async, java.lang.Void);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #44                 // String Breaker closed
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: aload_0
      11: invokeinterface #45,  1           // InterfaceMethod io/vertx/ext/unit/Async.complete:()V
      16: return

  private static void lambda$test2$6(java.lang.Void);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #46                 // String Breaker open
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: return

  private static void lambda$test1$5(java.lang.Void);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #43                 // String Breaker half open
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: return

  private static void lambda$test1$4(io.vertx.ext.unit.TestContext, java.lang.Void);
    Code:
       0: aload_0
       1: ldc           #47                 // String should not close
       3: invokeinterface #48,  2           // InterfaceMethod io/vertx/ext/unit/TestContext.fail:(Ljava/lang/String;)V
       8: return

  private static void lambda$test1$3(java.lang.Void);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #46                 // String Breaker open
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: return

  private static java.lang.String lambda$x$2(int, io.vertx.ext.unit.Async, java.lang.Throwable);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #49                 // String OPEN {}
       5: iload_0
       6: invokestatic  #50                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_1
      15: invokeinterface #45,  1           // InterfaceMethod io/vertx/ext/unit/Async.complete:()V
      20: ldc           #52                 // String OPEN
      22: areturn

  private void lambda$x$1(int, io.vertx.ext.unit.Async, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       4: bipush        100
       6: iload_1
       7: bipush        10
       9: imul
      10: iadd
      11: i2l
      12: aload_0
      13: aload_3
      14: aload_2
      15: invokedynamic #53,  0             // InvokeDynamic #8:handle:(Lio/vertx/circuitbreaker/impl/AsyncBreakerTest;Lio/vertx/core/Promise;Lio/vertx/ext/unit/Async;)Lio/vertx/core/Handler;
      20: invokeinterface #54,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      25: pop2
      26: return

  private void lambda$null$0(io.vertx.core.Promise, io.vertx.ext.unit.Async, java.lang.Long);
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: dup
       7: getfield      #18                 // Field count:I
      10: iconst_1
      11: iadd
      12: putfield      #18                 // Field count:I
      15: aload_0
      16: getfield      #18                 // Field count:I
      19: iconst_5
      20: if_icmplt     32
      23: aload_0
      24: getfield      #18                 // Field count:I
      27: bipush        12
      29: if_icmple     49
      32: aload_1
      33: ldc           #55                 // String OK
      35: invokeinterface #56,  2           // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
      40: aload_2
      41: invokeinterface #45,  1           // InterfaceMethod io/vertx/ext/unit/Async.complete:()V
      46: goto          63
      49: aload_1
      50: ldc           #57                 // String kapot
      52: invokeinterface #58,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      57: aload_2
      58: invokeinterface #45,  1           // InterfaceMethod io/vertx/ext/unit/Async.complete:()V
      63: aload         4
      65: monitorexit
      66: goto          77
      69: astore        5
      71: aload         4
      73: monitorexit
      74: aload         5
      76: athrow
      77: return
    Exception table:
       from    to  target type
           5    66    69   any
          69    74    69   any

  static {};
    Code:
       0: ldc           #59                 // class io/vertx/circuitbreaker/impl/AsyncBreakerTest
       2: invokestatic  #60                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
