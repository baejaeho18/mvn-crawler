Compiled from "UsageTest.java"
public class io.vertx.circuitbreaker.impl.UsageTest {
  public io.vertx.ext.unit.junit.RepeatRule repeatRule;

  public com.github.tomakehurst.wiremock.junit.WireMockRule wireMockRule;

  private io.vertx.core.Vertx vertx;

  private io.vertx.circuitbreaker.CircuitBreaker cb;

  private java.util.List<java.lang.String> items;

  public io.vertx.circuitbreaker.impl.UsageTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/vertx/ext/unit/junit/RepeatRule
       8: dup
       9: invokespecial #3                  // Method io/vertx/ext/unit/junit/RepeatRule."<init>":()V
      12: putfield      #4                  // Field repeatRule:Lio/vertx/ext/unit/junit/RepeatRule;
      15: aload_0
      16: new           #5                  // class com/github/tomakehurst/wiremock/junit/WireMockRule
      19: dup
      20: sipush        8089
      23: invokespecial #6                  // Method com/github/tomakehurst/wiremock/junit/WireMockRule."<init>":(I)V
      26: putfield      #7                  // Field wireMockRule:Lcom/github/tomakehurst/wiremock/junit/WireMockRule;
      29: aload_0
      30: new           #8                  // class java/util/ArrayList
      33: dup
      34: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      37: putfield      #10                 // Field items:Ljava/util/List;
      40: return

  public void setUp();
    Code:
       0: aload_0
       1: invokestatic  #11                 // InterfaceMethod io/vertx/core/Vertx.vertx:()Lio/vertx/core/Vertx;
       4: putfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       7: aload_0
       8: getfield      #10                 // Field items:Ljava/util/List;
      11: invokeinterface #13,  1           // InterfaceMethod java/util/List.clear:()V
      16: aload_0
      17: ldc           #14                 // String circuit-breaker
      19: aload_0
      20: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
      23: new           #15                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      26: dup
      27: invokespecial #16                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      30: iconst_1
      31: invokevirtual #17                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setFallbackOnFailure:(Z)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      34: ldc2_w        #18                 // long 500l
      37: invokevirtual #20                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      40: ldc2_w        #21                 // long 1000l
      43: invokevirtual #23                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setResetTimeout:(J)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      46: invokestatic  #24                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      49: putfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
      52: aload_0
      53: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
      56: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
      61: ldc           #27                 // String ok
      63: invokedynamic #28,  0             // InvokeDynamic #0:handle:()Lio/vertx/core/Handler;
      68: invokeinterface #29,  3           // InterfaceMethod io/vertx/core/eventbus/EventBus.consumer:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/MessageConsumer;
      73: pop
      74: aload_0
      75: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
      78: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
      83: ldc           #30                 // String fail
      85: invokedynamic #31,  0             // InvokeDynamic #1:handle:()Lio/vertx/core/Handler;
      90: invokeinterface #29,  3           // InterfaceMethod io/vertx/core/eventbus/EventBus.consumer:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/MessageConsumer;
      95: pop
      96: aload_0
      97: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
     100: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
     105: ldc           #32                 // String exception
     107: invokedynamic #33,  0             // InvokeDynamic #2:handle:()Lio/vertx/core/Handler;
     112: invokeinterface #29,  3           // InterfaceMethod io/vertx/core/eventbus/EventBus.consumer:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/MessageConsumer;
     117: pop
     118: aload_0
     119: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
     122: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
     127: ldc           #34                 // String timeout
     129: aload_0
     130: invokedynamic #35,  0             // InvokeDynamic #3:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
     135: invokeinterface #29,  3           // InterfaceMethod io/vertx/core/eventbus/EventBus.consumer:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/MessageConsumer;
     140: pop
     141: return

  public void tearDown();
    Code:
       0: aload_0
       1: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
       4: invokeinterface #36,  1           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.close:()Lio/vertx/circuitbreaker/CircuitBreaker;
       9: pop
      10: aload_0
      11: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
      14: invokeinterface #37,  1           // InterfaceMethod io/vertx/core/Vertx.close:()V
      19: return

  public void testCBWithReadOperation();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method prepareHttpServer:()V
       4: aload_0
       5: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       8: invokeinterface #39,  1           // InterfaceMethod io/vertx/core/Vertx.createHttpClient:()Lio/vertx/core/http/HttpClient;
      13: astore_1
      14: new           #40                 // class java/util/concurrent/atomic/AtomicReference
      17: dup
      18: invokespecial #41                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      21: astore_2
      22: aload_0
      23: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
      26: aload_1
      27: invokedynamic #42,  0             // InvokeDynamic #4:handle:(Lio/vertx/core/http/HttpClient;)Lio/vertx/core/Handler;
      32: invokedynamic #43,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      37: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      42: aload_2
      43: invokedynamic #45,  0             // InvokeDynamic #6:handle:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/vertx/core/Handler;
      48: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      53: pop
      54: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      57: lconst_1
      58: getstatic     #48                 // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      61: invokevirtual #49                 // Method com/jayway/awaitility/core/ConditionFactory.atMost:(JLjava/util/concurrent/TimeUnit;)Lcom/jayway/awaitility/core/ConditionFactory;
      64: aload_2
      65: invokestatic  #50                 // Method org/hamcrest/CoreMatchers.notNullValue:()Lorg/hamcrest/Matcher;
      68: invokestatic  #51                 // Method org/hamcrest/CoreMatchers.is:(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
      71: invokevirtual #52                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/hamcrest/Matcher;)Ljava/lang/Object;
      74: pop
      75: aload_2
      76: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      79: checkcast     #54                 // class io/vertx/core/json/JsonObject
      82: ldc           #55                 // String status
      84: invokevirtual #56                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
      87: invokestatic  #57                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      90: ldc           #58                 // String OK
      92: invokevirtual #59                 // Method org/assertj/core/api/AbstractCharSequenceAssert.isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      95: pop
      96: aload_2
      97: aconst_null
      98: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     101: aload_0
     102: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
     105: aload_1
     106: invokedynamic #61,  0             // InvokeDynamic #7:handle:(Lio/vertx/core/http/HttpClient;)Lio/vertx/core/Handler;
     111: invokedynamic #62,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
     116: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
     121: aload_2
     122: invokedynamic #63,  0             // InvokeDynamic #9:handle:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/vertx/core/Handler;
     127: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     132: pop
     133: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     136: aload_2
     137: invokestatic  #50                 // Method org/hamcrest/CoreMatchers.notNullValue:()Lorg/hamcrest/Matcher;
     140: invokestatic  #51                 // Method org/hamcrest/CoreMatchers.is:(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
     143: invokevirtual #52                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/hamcrest/Matcher;)Ljava/lang/Object;
     146: pop
     147: aload_2
     148: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     151: checkcast     #54                 // class io/vertx/core/json/JsonObject
     154: ldc           #55                 // String status
     156: invokevirtual #56                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
     159: invokestatic  #57                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
     162: ldc           #64                 // String KO
     164: invokevirtual #59                 // Method org/assertj/core/api/AbstractCharSequenceAssert.isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
     167: pop
     168: aload_2
     169: aconst_null
     170: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     173: aload_0
     174: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
     177: aload_1
     178: invokedynamic #65,  0             // InvokeDynamic #10:handle:(Lio/vertx/core/http/HttpClient;)Lio/vertx/core/Handler;
     183: invokedynamic #66,  0             // InvokeDynamic #11:apply:()Ljava/util/function/Function;
     188: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
     193: aload_2
     194: invokedynamic #67,  0             // InvokeDynamic #12:handle:(Ljava/util/concurrent/atomic/AtomicReference;)Lio/vertx/core/Handler;
     199: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     204: pop
     205: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     208: aload_2
     209: invokestatic  #50                 // Method org/hamcrest/CoreMatchers.notNullValue:()Lorg/hamcrest/Matcher;
     212: invokestatic  #51                 // Method org/hamcrest/CoreMatchers.is:(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
     215: invokevirtual #52                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicReference;Lorg/hamcrest/Matcher;)Ljava/lang/Object;
     218: pop
     219: aload_2
     220: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     223: checkcast     #54                 // class io/vertx/core/json/JsonObject
     226: ldc           #55                 // String status
     228: invokevirtual #56                 // Method io/vertx/core/json/JsonObject.getString:(Ljava/lang/String;)Ljava/lang/String;
     231: invokestatic  #57                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
     234: ldc           #64                 // String KO
     236: invokevirtual #59                 // Method org/assertj/core/api/AbstractCharSequenceAssert.isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
     239: pop
     240: return

  private void prepareHttpServer();
    Code:
       0: ldc           #68                 // String /resource
       2: invokestatic  #69                 // Method com/github/tomakehurst/wiremock/client/WireMock.urlEqualTo:(Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/matching/UrlPattern;
       5: invokestatic  #70                 // Method com/github/tomakehurst/wiremock/client/WireMock.get:(Lcom/github/tomakehurst/wiremock/matching/UrlPattern;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
       8: ldc           #71                 // String Accept
      10: ldc           #72                 // String application/json
      12: invokestatic  #73                 // Method com/github/tomakehurst/wiremock/client/WireMock.equalTo:(Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/matching/StringValuePattern;
      15: invokeinterface #74,  3           // InterfaceMethod com/github/tomakehurst/wiremock/client/MappingBuilder.withHeader:(Ljava/lang/String;Lcom/github/tomakehurst/wiremock/matching/StringValuePattern;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
      20: invokestatic  #75                 // Method com/github/tomakehurst/wiremock/client/WireMock.aResponse:()Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      23: sipush        200
      26: invokevirtual #76                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withStatus:(I)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      29: ldc           #77                 // String Content-Type
      31: ldc           #72                 // String application/json
      33: invokevirtual #78                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withHeader:(Ljava/lang/String;Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      36: ldc           #79                 // String {\"status\":\"OK\"}
      38: invokevirtual #80                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withBody:(Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      41: invokeinterface #81,  2           // InterfaceMethod com/github/tomakehurst/wiremock/client/MappingBuilder.willReturn:(Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
      46: invokestatic  #82                 // Method com/github/tomakehurst/wiremock/client/WireMock.stubFor:(Lcom/github/tomakehurst/wiremock/client/MappingBuilder;)Lcom/github/tomakehurst/wiremock/stubbing/StubMapping;
      49: pop
      50: ldc           #83                 // String /delayed
      52: invokestatic  #69                 // Method com/github/tomakehurst/wiremock/client/WireMock.urlEqualTo:(Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/matching/UrlPattern;
      55: invokestatic  #70                 // Method com/github/tomakehurst/wiremock/client/WireMock.get:(Lcom/github/tomakehurst/wiremock/matching/UrlPattern;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
      58: invokestatic  #75                 // Method com/github/tomakehurst/wiremock/client/WireMock.aResponse:()Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      61: sipush        200
      64: invokevirtual #76                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withStatus:(I)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      67: sipush        2000
      70: invokestatic  #84                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: invokevirtual #85                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withFixedDelay:(Ljava/lang/Integer;)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      76: invokeinterface #81,  2           // InterfaceMethod com/github/tomakehurst/wiremock/client/MappingBuilder.willReturn:(Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
      81: invokestatic  #82                 // Method com/github/tomakehurst/wiremock/client/WireMock.stubFor:(Lcom/github/tomakehurst/wiremock/client/MappingBuilder;)Lcom/github/tomakehurst/wiremock/stubbing/StubMapping;
      84: pop
      85: ldc           #86                 // String /error
      87: invokestatic  #69                 // Method com/github/tomakehurst/wiremock/client/WireMock.urlEqualTo:(Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/matching/UrlPattern;
      90: invokestatic  #70                 // Method com/github/tomakehurst/wiremock/client/WireMock.get:(Lcom/github/tomakehurst/wiremock/matching/UrlPattern;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
      93: invokestatic  #75                 // Method com/github/tomakehurst/wiremock/client/WireMock.aResponse:()Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
      96: sipush        500
      99: invokevirtual #76                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withStatus:(I)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
     102: ldc           #87                 // String This is an error
     104: invokevirtual #80                 // Method com/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder.withBody:(Ljava/lang/String;)Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;
     107: invokeinterface #81,  2           // InterfaceMethod com/github/tomakehurst/wiremock/client/MappingBuilder.willReturn:(Lcom/github/tomakehurst/wiremock/client/ResponseDefinitionBuilder;)Lcom/github/tomakehurst/wiremock/client/MappingBuilder;
     112: invokestatic  #82                 // Method com/github/tomakehurst/wiremock/client/WireMock.stubFor:(Lcom/github/tomakehurst/wiremock/client/MappingBuilder;)Lcom/github/tomakehurst/wiremock/stubbing/StubMapping;
     115: pop
     116: return

  public void asyncWrite(java.lang.String, io.vertx.circuitbreaker.impl.UsageTest$Scenario, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: invokestatic  #88                 // Method java/lang/Math.random:()D
       3: ldc2_w        #89                 // double 1000.0d
       6: dmul
       7: d2l
       8: lstore        4
      10: getstatic     #91                 // Field io/vertx/circuitbreaker/impl/UsageTest$1.$SwitchMap$io$vertx$circuitbreaker$impl$UsageTest$Scenario:[I
      13: aload_2
      14: invokevirtual #92                 // Method io/vertx/circuitbreaker/impl/UsageTest$Scenario.ordinal:()I
      17: iaload
      18: lookupswitch  { // 2
                     1: 44
                     2: 52
               default: 62
          }
      44: ldc2_w        #93                 // long 2000l
      47: lstore        4
      49: goto          62
      52: new           #95                 // class java/lang/RuntimeException
      55: dup
      56: ldc           #96                 // String Bad bad bad
      58: invokespecial #97                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
      66: lload         4
      68: aload_0
      69: aload_2
      70: aload_3
      71: aload_1
      72: invokedynamic #98,  0             // InvokeDynamic #13:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;Lio/vertx/core/Handler;Ljava/lang/String;)Lio/vertx/core/Handler;
      77: invokeinterface #99,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      82: pop2
      83: return

  public void testCBWithWriteOperation();
    Code:
       0: aload_0
       1: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
       4: aload_0
       5: invokedynamic #100,  0            // InvokeDynamic #14:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
      10: invokedynamic #101,  0            // InvokeDynamic #15:apply:()Ljava/util/function/Function;
      15: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      20: pop
      21: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      24: aload_0
      25: invokedynamic #102,  0            // InvokeDynamic #16:call:(Lio/vertx/circuitbreaker/impl/UsageTest;)Ljava/util/concurrent/Callable;
      30: invokevirtual #103                // Method com/jayway/awaitility/core/ConditionFactory.until:(Ljava/util/concurrent/Callable;)V
      33: aload_0
      34: getfield      #10                 // Field items:Ljava/util/List;
      37: invokeinterface #13,  1           // InterfaceMethod java/util/List.clear:()V
      42: new           #104                // class java/util/concurrent/atomic/AtomicBoolean
      45: dup
      46: invokespecial #105                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      49: astore_1
      50: aload_0
      51: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
      54: aload_0
      55: invokedynamic #106,  0            // InvokeDynamic #17:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
      60: aload_1
      61: invokedynamic #107,  0            // InvokeDynamic #18:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
      66: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      71: pop
      72: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      75: aload_0
      76: invokedynamic #108,  0            // InvokeDynamic #19:call:(Lio/vertx/circuitbreaker/impl/UsageTest;)Ljava/util/concurrent/Callable;
      81: invokevirtual #103                // Method com/jayway/awaitility/core/ConditionFactory.until:(Ljava/util/concurrent/Callable;)V
      84: aload_1
      85: invokevirtual #109                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      88: invokestatic  #110                // Method org/assertj/core/api/Assertions.assertThat:(Z)Lorg/assertj/core/api/AbstractBooleanAssert;
      91: invokevirtual #111                // Method org/assertj/core/api/AbstractBooleanAssert.isTrue:()Lorg/assertj/core/api/AbstractBooleanAssert;
      94: pop
      95: aload_0
      96: getfield      #10                 // Field items:Ljava/util/List;
      99: invokeinterface #13,  1           // InterfaceMethod java/util/List.clear:()V
     104: aload_1
     105: iconst_0
     106: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     109: aload_0
     110: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
     113: aload_0
     114: invokedynamic #113,  0            // InvokeDynamic #20:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
     119: aload_1
     120: invokedynamic #114,  0            // InvokeDynamic #21:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
     125: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
     130: pop
     131: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     134: aload_1
     135: iconst_1
     136: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     139: invokestatic  #116                // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
     142: invokevirtual #117                // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
     145: aload_0
     146: getfield      #10                 // Field items:Ljava/util/List;
     149: invokestatic  #118                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;)Lorg/assertj/core/api/AbstractListAssert;
     152: invokevirtual #119                // Method org/assertj/core/api/AbstractListAssert.isEmpty:()V
     155: aload_0
     156: getfield      #10                 // Field items:Ljava/util/List;
     159: invokeinterface #13,  1           // InterfaceMethod java/util/List.clear:()V
     164: aload_1
     165: iconst_0
     166: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     169: aload_0
     170: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
     173: aload_0
     174: invokedynamic #120,  0            // InvokeDynamic #22:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
     179: aload_1
     180: invokedynamic #121,  0            // InvokeDynamic #23:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
     185: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
     190: pop
     191: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     194: aload_1
     195: iconst_1
     196: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     199: invokestatic  #116                // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
     202: invokevirtual #117                // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
     205: aload_0
     206: getfield      #10                 // Field items:Ljava/util/List;
     209: invokestatic  #118                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;)Lorg/assertj/core/api/AbstractListAssert;
     212: invokevirtual #119                // Method org/assertj/core/api/AbstractListAssert.isEmpty:()V
     215: return

  public void testCBWithEventBus();
    Code:
       0: aload_0
       1: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
       4: aload_0
       5: invokedynamic #122,  0            // InvokeDynamic #24:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
      10: invokedynamic #123,  0            // InvokeDynamic #25:apply:()Ljava/util/function/Function;
      15: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      20: aload_0
      21: invokedynamic #124,  0            // InvokeDynamic #26:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
      26: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      31: pop
      32: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      35: aload_0
      36: invokedynamic #125,  0            // InvokeDynamic #27:call:(Lio/vertx/circuitbreaker/impl/UsageTest;)Ljava/util/concurrent/Callable;
      41: invokevirtual #103                // Method com/jayway/awaitility/core/ConditionFactory.until:(Ljava/util/concurrent/Callable;)V
      44: aload_0
      45: getfield      #10                 // Field items:Ljava/util/List;
      48: invokeinterface #13,  1           // InterfaceMethod java/util/List.clear:()V
      53: new           #104                // class java/util/concurrent/atomic/AtomicBoolean
      56: dup
      57: invokespecial #105                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      60: astore_1
      61: aload_0
      62: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
      65: aload_0
      66: invokedynamic #126,  0            // InvokeDynamic #28:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
      71: aload_1
      72: invokedynamic #127,  0            // InvokeDynamic #29:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
      77: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      82: pop
      83: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      86: aload_1
      87: iconst_1
      88: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      91: invokestatic  #116                // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      94: invokevirtual #117                // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
      97: aload_0
      98: getfield      #10                 // Field items:Ljava/util/List;
     101: invokestatic  #118                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;)Lorg/assertj/core/api/AbstractListAssert;
     104: invokevirtual #119                // Method org/assertj/core/api/AbstractListAssert.isEmpty:()V
     107: aload_1
     108: iconst_0
     109: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     112: aload_0
     113: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
     116: aload_0
     117: invokedynamic #128,  0            // InvokeDynamic #30:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
     122: aload_1
     123: invokedynamic #129,  0            // InvokeDynamic #31:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
     128: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
     133: pop
     134: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     137: aload_1
     138: iconst_1
     139: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     142: invokestatic  #116                // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
     145: invokevirtual #117                // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
     148: aload_0
     149: getfield      #10                 // Field items:Ljava/util/List;
     152: invokestatic  #118                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;)Lorg/assertj/core/api/AbstractListAssert;
     155: invokevirtual #119                // Method org/assertj/core/api/AbstractListAssert.isEmpty:()V
     158: aload_1
     159: iconst_0
     160: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     163: aload_0
     164: getfield      #25                 // Field cb:Lio/vertx/circuitbreaker/CircuitBreaker;
     167: aload_0
     168: invokedynamic #130,  0            // InvokeDynamic #32:handle:(Lio/vertx/circuitbreaker/impl/UsageTest;)Lio/vertx/core/Handler;
     173: aload_1
     174: invokedynamic #131,  0            // InvokeDynamic #33:apply:(Ljava/util/concurrent/atomic/AtomicBoolean;)Ljava/util/function/Function;
     179: invokeinterface #44,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
     184: pop
     185: invokestatic  #47                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
     188: aload_1
     189: iconst_1
     190: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     193: invokestatic  #116                // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
     196: invokevirtual #117                // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
     199: aload_0
     200: getfield      #10                 // Field items:Ljava/util/List;
     203: invokestatic  #118                // Method org/assertj/core/api/Assertions.assertThat:(Ljava/util/List;)Lorg/assertj/core/api/AbstractListAssert;
     206: invokevirtual #119                // Method org/assertj/core/api/AbstractListAssert.isEmpty:()V
     209: aload_1
     210: iconst_0
     211: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     214: return

  private static io.vertx.core.eventbus.Message lambda$testCBWithEventBus$40(java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aconst_null
       6: areturn

  private void lambda$testCBWithEventBus$39(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       4: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
       9: ldc           #32                 // String exception
      11: ldc           #132                // String
      13: aload_1
      14: invokeinterface #133,  4          // InterfaceMethod io/vertx/core/eventbus/EventBus.send:(Ljava/lang/String;Ljava/lang/Object;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/EventBus;
      19: pop
      20: return

  private static io.vertx.core.eventbus.Message lambda$testCBWithEventBus$38(java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aconst_null
       6: areturn

  private void lambda$testCBWithEventBus$37(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       4: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
       9: ldc           #30                 // String fail
      11: ldc           #132                // String
      13: aload_1
      14: invokeinterface #133,  4          // InterfaceMethod io/vertx/core/eventbus/EventBus.send:(Ljava/lang/String;Ljava/lang/Object;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/EventBus;
      19: pop
      20: return

  private static io.vertx.core.eventbus.Message lambda$testCBWithEventBus$36(java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aconst_null
       6: areturn

  private void lambda$testCBWithEventBus$35(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       4: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
       9: ldc           #34                 // String timeout
      11: ldc           #132                // String
      13: aload_1
      14: invokeinterface #133,  4          // InterfaceMethod io/vertx/core/eventbus/EventBus.send:(Ljava/lang/String;Ljava/lang/Object;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/EventBus;
      19: pop
      20: return

  private java.lang.Boolean lambda$testCBWithEventBus$34() throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #10                 // Field items:Ljava/util/List;
       8: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: aload_1
      26: monitorexit
      27: areturn
      28: astore_2
      29: aload_1
      30: monitorexit
      31: aload_2
      32: athrow
    Exception table:
       from    to  target type
           4    27    28   any
          28    31    28   any

  private void lambda$testCBWithEventBus$33(io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: getfield      #10                 // Field items:Ljava/util/List;
       4: aload_1
       5: invokeinterface #135,  1          // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
      10: checkcast     #136                // class io/vertx/core/eventbus/Message
      13: invokeinterface #137,  1          // InterfaceMethod io/vertx/core/eventbus/Message.body:()Ljava/lang/Object;
      18: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  private static io.vertx.core.eventbus.Message lambda$testCBWithEventBus$32(java.lang.Throwable);
    Code:
       0: aconst_null
       1: areturn

  private void lambda$testCBWithEventBus$31(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       4: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
       9: ldc           #27                 // String ok
      11: ldc           #132                // String
      13: aload_1
      14: invokeinterface #133,  4          // InterfaceMethod io/vertx/core/eventbus/EventBus.send:(Ljava/lang/String;Ljava/lang/Object;Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/EventBus;
      19: pop
      20: return

  private static java.lang.Void lambda$testCBWithWriteOperation$30(java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aconst_null
       6: areturn

  private void lambda$testCBWithWriteOperation$29(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: ldc           #139                // String Hello
       3: getstatic     #140                // Field io/vertx/circuitbreaker/impl/UsageTest$Scenario.RUNTIME_EXCEPTION:Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;
       6: aload_1
       7: invokevirtual #141                // Method asyncWrite:(Ljava/lang/String;Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;Lio/vertx/core/Handler;)V
      10: return

  private static java.lang.Void lambda$testCBWithWriteOperation$28(java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aconst_null
       6: areturn

  private void lambda$testCBWithWriteOperation$27(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: ldc           #139                // String Hello
       3: getstatic     #142                // Field io/vertx/circuitbreaker/impl/UsageTest$Scenario.TIMEOUT:Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;
       6: aload_1
       7: invokevirtual #141                // Method asyncWrite:(Ljava/lang/String;Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;Lio/vertx/core/Handler;)V
      10: return

  private java.lang.Boolean lambda$testCBWithWriteOperation$26() throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #10                 // Field items:Ljava/util/List;
       8: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: aload_1
      26: monitorexit
      27: areturn
      28: astore_2
      29: aload_1
      30: monitorexit
      31: aload_2
      32: athrow
    Exception table:
       from    to  target type
           4    27    28   any
          28    31    28   any

  private static java.lang.Void lambda$testCBWithWriteOperation$25(java.util.concurrent.atomic.AtomicBoolean, java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #112                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       5: aconst_null
       6: areturn

  private void lambda$testCBWithWriteOperation$24(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: ldc           #139                // String Hello
       3: getstatic     #143                // Field io/vertx/circuitbreaker/impl/UsageTest$Scenario.FAILURE:Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;
       6: aload_1
       7: invokevirtual #141                // Method asyncWrite:(Ljava/lang/String;Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;Lio/vertx/core/Handler;)V
      10: return

  private java.lang.Boolean lambda$testCBWithWriteOperation$23() throws java.lang.Exception;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #10                 // Field items:Ljava/util/List;
       8: invokeinterface #134,  1          // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #115                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: aload_1
      26: monitorexit
      27: areturn
      28: astore_2
      29: aload_1
      30: monitorexit
      31: aload_2
      32: athrow
    Exception table:
       from    to  target type
           4    27    28   any
          28    31    28   any

  private static java.lang.Void lambda$testCBWithWriteOperation$22(java.lang.Throwable);
    Code:
       0: aconst_null
       1: areturn

  private void lambda$testCBWithWriteOperation$21(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: ldc           #139                // String Hello
       3: getstatic     #144                // Field io/vertx/circuitbreaker/impl/UsageTest$Scenario.OK:Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;
       6: aload_1
       7: invokevirtual #141                // Method asyncWrite:(Ljava/lang/String;Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;Lio/vertx/core/Handler;)V
      10: return

  private void lambda$asyncWrite$20(io.vertx.circuitbreaker.impl.UsageTest$Scenario, io.vertx.core.Handler, java.lang.String, java.lang.Long);
    Code:
       0: aload_1
       1: getstatic     #143                // Field io/vertx/circuitbreaker/impl/UsageTest$Scenario.FAILURE:Lio/vertx/circuitbreaker/impl/UsageTest$Scenario;
       4: if_acmpne     52
       7: aload_0
       8: dup
       9: astore        5
      11: monitorenter
      12: aload_0
      13: getfield      #10                 // Field items:Ljava/util/List;
      16: ldc           #145                // String Error
      18: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload         5
      26: monitorexit
      27: goto          38
      30: astore        6
      32: aload         5
      34: monitorexit
      35: aload         6
      37: athrow
      38: aload_2
      39: ldc           #146                // String Bad Bad Bad
      41: invokestatic  #147                // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/String;)Lio/vertx/core/Future;
      44: invokeinterface #148,  2          // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      49: goto          91
      52: aload_0
      53: dup
      54: astore        5
      56: monitorenter
      57: aload_0
      58: getfield      #10                 // Field items:Ljava/util/List;
      61: aload_3
      62: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload         5
      70: monitorexit
      71: goto          82
      74: astore        7
      76: aload         5
      78: monitorexit
      79: aload         7
      81: athrow
      82: aload_2
      83: invokestatic  #149                // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      86: invokeinterface #148,  2          // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      91: return
    Exception table:
       from    to  target type
          12    27    30   any
          30    35    30   any
          57    71    74   any
          74    79    74   any

  private static void lambda$testCBWithReadOperation$19(java.util.concurrent.atomic.AtomicReference, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #135,  1          // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: return

  private static io.vertx.core.json.JsonObject lambda$testCBWithReadOperation$18(java.lang.Throwable);
    Code:
       0: new           #54                 // class io/vertx/core/json/JsonObject
       3: dup
       4: invokespecial #150                // Method io/vertx/core/json/JsonObject."<init>":()V
       7: ldc           #55                 // String status
       9: ldc           #64                 // String KO
      11: invokevirtual #151                // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
      14: areturn

  private static void lambda$testCBWithReadOperation$17(io.vertx.core.http.HttpClient, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: sipush        8089
       4: ldc           #152                // String localhost
       6: ldc           #83                 // String /delayed
       8: invokeinterface #153,  4          // InterfaceMethod io/vertx/core/http/HttpClient.get:(ILjava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
      13: aload_1
      14: invokedynamic #154,  0            // InvokeDynamic #34:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      19: invokeinterface #155,  2          // InterfaceMethod io/vertx/core/http/HttpClientRequest.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      24: ldc           #71                 // String Accept
      26: ldc           #72                 // String application/json
      28: invokeinterface #156,  3          // InterfaceMethod io/vertx/core/http/HttpClientRequest.putHeader:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
      33: aload_1
      34: dup
      35: invokevirtual #157                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: pop
      39: invokedynamic #158,  0            // InvokeDynamic #35:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      44: invokeinterface #159,  2          // InterfaceMethod io/vertx/core/http/HttpClientRequest.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      49: invokeinterface #160,  1          // InterfaceMethod io/vertx/core/http/HttpClientRequest.end:()V
      54: return

  private static void lambda$null$16(io.vertx.core.Promise, io.vertx.core.http.HttpClientResponse);
    Code:
       0: aload_1
       1: aload_0
       2: dup
       3: invokevirtual #157                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #158,  0            // InvokeDynamic #35:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      12: invokeinterface #161,  2          // InterfaceMethod io/vertx/core/http/HttpClientResponse.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      17: pop
      18: aload_1
      19: invokeinterface #162,  1          // InterfaceMethod io/vertx/core/http/HttpClientResponse.statusCode:()I
      24: sipush        200
      27: if_icmpeq     41
      30: aload_0
      31: ldc           #163                // String Invalid response
      33: invokeinterface #164,  2          // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      38: goto          54
      41: aload_1
      42: aload_0
      43: invokedynamic #165,  0            // InvokeDynamic #36:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      48: invokeinterface #166,  2          // InterfaceMethod io/vertx/core/http/HttpClientResponse.bodyHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      53: pop
      54: return

  private static void lambda$null$15(io.vertx.core.Promise, io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #167,  1          // InterfaceMethod io/vertx/core/buffer/Buffer.toJsonObject:()Lio/vertx/core/json/JsonObject;
       7: invokeinterface #168,  2          // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
      12: return

  private static void lambda$testCBWithReadOperation$14(java.util.concurrent.atomic.AtomicReference, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #135,  1          // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: return

  private static io.vertx.core.json.JsonObject lambda$testCBWithReadOperation$13(java.lang.Throwable);
    Code:
       0: new           #54                 // class io/vertx/core/json/JsonObject
       3: dup
       4: invokespecial #150                // Method io/vertx/core/json/JsonObject."<init>":()V
       7: ldc           #55                 // String status
       9: ldc           #64                 // String KO
      11: invokevirtual #151                // Method io/vertx/core/json/JsonObject.put:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/json/JsonObject;
      14: areturn

  private static void lambda$testCBWithReadOperation$12(io.vertx.core.http.HttpClient, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: sipush        8089
       4: ldc           #152                // String localhost
       6: ldc           #86                 // String /error
       8: invokeinterface #153,  4          // InterfaceMethod io/vertx/core/http/HttpClient.get:(ILjava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
      13: aload_1
      14: invokedynamic #169,  0            // InvokeDynamic #37:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      19: invokeinterface #155,  2          // InterfaceMethod io/vertx/core/http/HttpClientRequest.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      24: ldc           #71                 // String Accept
      26: ldc           #72                 // String application/json
      28: invokeinterface #156,  3          // InterfaceMethod io/vertx/core/http/HttpClientRequest.putHeader:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
      33: aload_1
      34: dup
      35: invokevirtual #157                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: pop
      39: invokedynamic #158,  0            // InvokeDynamic #35:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      44: invokeinterface #159,  2          // InterfaceMethod io/vertx/core/http/HttpClientRequest.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      49: invokeinterface #160,  1          // InterfaceMethod io/vertx/core/http/HttpClientRequest.end:()V
      54: return

  private static void lambda$null$11(io.vertx.core.Promise, io.vertx.core.http.HttpClientResponse);
    Code:
       0: aload_1
       1: aload_0
       2: dup
       3: invokevirtual #157                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #158,  0            // InvokeDynamic #35:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      12: invokeinterface #161,  2          // InterfaceMethod io/vertx/core/http/HttpClientResponse.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      17: pop
      18: aload_1
      19: invokeinterface #162,  1          // InterfaceMethod io/vertx/core/http/HttpClientResponse.statusCode:()I
      24: sipush        200
      27: if_icmpeq     41
      30: aload_0
      31: ldc           #163                // String Invalid response
      33: invokeinterface #164,  2          // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      38: goto          54
      41: aload_1
      42: aload_0
      43: invokedynamic #170,  0            // InvokeDynamic #38:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      48: invokeinterface #166,  2          // InterfaceMethod io/vertx/core/http/HttpClientResponse.bodyHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      53: pop
      54: return

  private static void lambda$null$10(io.vertx.core.Promise, io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #167,  1          // InterfaceMethod io/vertx/core/buffer/Buffer.toJsonObject:()Lio/vertx/core/json/JsonObject;
       7: invokeinterface #168,  2          // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
      12: return

  private static void lambda$testCBWithReadOperation$9(java.util.concurrent.atomic.AtomicReference, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #135,  1          // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: invokevirtual #60                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: return

  private static io.vertx.core.json.JsonObject lambda$testCBWithReadOperation$8(java.lang.Throwable);
    Code:
       0: aconst_null
       1: areturn

  private static void lambda$testCBWithReadOperation$7(io.vertx.core.http.HttpClient, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: sipush        8089
       4: ldc           #152                // String localhost
       6: ldc           #68                 // String /resource
       8: invokeinterface #153,  4          // InterfaceMethod io/vertx/core/http/HttpClient.get:(ILjava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
      13: aload_1
      14: invokedynamic #171,  0            // InvokeDynamic #39:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      19: invokeinterface #155,  2          // InterfaceMethod io/vertx/core/http/HttpClientRequest.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      24: ldc           #71                 // String Accept
      26: ldc           #72                 // String application/json
      28: invokeinterface #156,  3          // InterfaceMethod io/vertx/core/http/HttpClientRequest.putHeader:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/HttpClientRequest;
      33: aload_1
      34: dup
      35: invokevirtual #157                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: pop
      39: invokedynamic #158,  0            // InvokeDynamic #35:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      44: invokeinterface #159,  2          // InterfaceMethod io/vertx/core/http/HttpClientRequest.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      49: invokeinterface #160,  1          // InterfaceMethod io/vertx/core/http/HttpClientRequest.end:()V
      54: return

  private static void lambda$null$6(io.vertx.core.Promise, io.vertx.core.http.HttpClientResponse);
    Code:
       0: aload_1
       1: aload_0
       2: dup
       3: invokevirtual #157                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #158,  0            // InvokeDynamic #35:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      12: invokeinterface #161,  2          // InterfaceMethod io/vertx/core/http/HttpClientResponse.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      17: aload_0
      18: invokedynamic #172,  0            // InvokeDynamic #40:handle:(Lio/vertx/core/Promise;)Lio/vertx/core/Handler;
      23: invokeinterface #166,  2          // InterfaceMethod io/vertx/core/http/HttpClientResponse.bodyHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      28: pop
      29: return

  private static void lambda$null$5(io.vertx.core.Promise, io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #167,  1          // InterfaceMethod io/vertx/core/buffer/Buffer.toJsonObject:()Lio/vertx/core/json/JsonObject;
       7: invokeinterface #168,  2          // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
      12: return

  private void lambda$setUp$4(io.vertx.core.eventbus.Message);
    Code:
       0: aload_0
       1: getfield      #12                 // Field vertx:Lio/vertx/core/Vertx;
       4: ldc2_w        #93                 // long 2000l
       7: aload_1
       8: invokedynamic #173,  0            // InvokeDynamic #41:handle:(Lio/vertx/core/eventbus/Message;)Lio/vertx/core/Handler;
      13: invokeinterface #99,  4           // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      18: pop2
      19: return

  private static void lambda$null$3(io.vertx.core.eventbus.Message, java.lang.Long);
    Code:
       0: aload_0
       1: ldc           #174                // String Too late
       3: invokeinterface #175,  2          // InterfaceMethod io/vertx/core/eventbus/Message.reply:(Ljava/lang/Object;)V
       8: return

  private static void lambda$setUp$2(io.vertx.core.eventbus.Message);
    Code:
       0: new           #95                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #176                // String RT - Bad bad bad
       6: invokespecial #97                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  private static void lambda$setUp$1(io.vertx.core.eventbus.Message);
    Code:
       0: aload_0
       1: bipush        100
       3: ldc           #96                 // String Bad bad bad
       5: invokeinterface #177,  3          // InterfaceMethod io/vertx/core/eventbus/Message.fail:(ILjava/lang/String;)V
      10: return

  private static void lambda$setUp$0(io.vertx.core.eventbus.Message);
    Code:
       0: aload_0
       1: ldc           #58                 // String OK
       3: invokeinterface #175,  2          // InterfaceMethod io/vertx/core/eventbus/Message.reply:(Ljava/lang/Object;)V
       8: return
}
