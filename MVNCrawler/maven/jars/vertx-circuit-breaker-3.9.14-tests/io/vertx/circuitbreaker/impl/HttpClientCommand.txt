Compiled from "HttpClientCommand.java"
public class io.vertx.circuitbreaker.impl.HttpClientCommand extends com.netflix.hystrix.HystrixCommand<java.lang.String> {
  private final io.vertx.core.http.HttpClient client;

  private final java.lang.String path;

  public io.vertx.circuitbreaker.impl.HttpClientCommand(io.vertx.core.http.HttpClient, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #1                  // String test
       3: invokestatic  #2                  // Method com/netflix/hystrix/HystrixCommandGroupKey$Factory.asKey:(Ljava/lang/String;)Lcom/netflix/hystrix/HystrixCommandGroupKey;
       6: invokespecial #3                  // Method com/netflix/hystrix/HystrixCommand."<init>":(Lcom/netflix/hystrix/HystrixCommandGroupKey;)V
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field client:Lio/vertx/core/http/HttpClient;
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field path:Ljava/lang/String;
      19: return

  protected java.lang.String run() throws java.lang.Exception;
    Code:
       0: new           #6                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore_1
       8: new           #8                  // class java/util/concurrent/CountDownLatch
      11: dup
      12: iconst_1
      13: invokespecial #9                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      16: astore_2
      17: aload_2
      18: invokedynamic #10,  0             // InvokeDynamic #0:handle:(Ljava/util/concurrent/CountDownLatch;)Lio/vertx/core/Handler;
      23: astore_3
      24: aload_0
      25: getfield      #4                  // Field client:Lio/vertx/core/http/HttpClient;
      28: aload_0
      29: getfield      #5                  // Field path:Ljava/lang/String;
      32: aload_3
      33: aload_2
      34: aload_1
      35: invokedynamic #11,  0             // InvokeDynamic #1:handle:(Lio/vertx/core/Handler;Ljava/util/concurrent/CountDownLatch;Ljava/util/concurrent/atomic/AtomicReference;)Lio/vertx/core/Handler;
      40: invokeinterface #12,  3           // InterfaceMethod io/vertx/core/http/HttpClient.get:(Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      45: aload_3
      46: invokeinterface #13,  2           // InterfaceMethod io/vertx/core/http/HttpClientRequest.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientRequest;
      51: invokeinterface #14,  1           // InterfaceMethod io/vertx/core/http/HttpClientRequest.end:()V
      56: aload_2
      57: invokevirtual #15                 // Method java/util/concurrent/CountDownLatch.await:()V
      60: aload_1
      61: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      64: ifnonnull     77
      67: new           #17                 // class java/lang/RuntimeException
      70: dup
      71: ldc           #18                 // String Failed to retrieve the HTTP response
      73: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_1
      78: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      81: checkcast     #20                 // class java/lang/String
      84: areturn

  protected java.lang.String getFallback();
    Code:
       0: ldc           #21                 // String fallback
       2: areturn

  protected java.lang.Object getFallback();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getFallback:()Ljava/lang/String;
       4: areturn

  protected java.lang.Object run() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method run:()Ljava/lang/String;
       4: areturn

  private static void lambda$run$2(io.vertx.core.Handler, java.util.concurrent.CountDownLatch, java.util.concurrent.atomic.AtomicReference, io.vertx.core.http.HttpClientResponse);
    Code:
       0: aload_3
       1: aload_0
       2: invokeinterface #24,  2           // InterfaceMethod io/vertx/core/http/HttpClientResponse.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
       7: pop
       8: aload_3
       9: invokeinterface #25,  1           // InterfaceMethod io/vertx/core/http/HttpClientResponse.statusCode:()I
      14: sipush        200
      17: if_icmpeq     25
      20: aload_1
      21: invokevirtual #26                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      24: return
      25: aload_3
      26: aload_2
      27: aload_1
      28: invokedynamic #27,  0             // InvokeDynamic #2:handle:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/CountDownLatch;)Lio/vertx/core/Handler;
      33: invokeinterface #28,  2           // InterfaceMethod io/vertx/core/http/HttpClientResponse.bodyHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpClientResponse;
      38: pop
      39: return

  private static void lambda$null$1(java.util.concurrent.atomic.AtomicReference, java.util.concurrent.CountDownLatch, io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #29,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.toString:()Ljava/lang/String;
       7: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_1
      11: invokevirtual #26                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      14: return

  private static void lambda$run$0(java.util.concurrent.CountDownLatch, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/util/concurrent/CountDownLatch.countDown:()V
       4: return
}
