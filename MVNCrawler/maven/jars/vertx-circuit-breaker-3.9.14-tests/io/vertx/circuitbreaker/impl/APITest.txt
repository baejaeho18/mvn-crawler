Compiled from "APITest.java"
public class io.vertx.circuitbreaker.impl.APITest {
  private io.vertx.circuitbreaker.CircuitBreaker breaker;

  private io.vertx.core.Vertx vertx;

  public io.vertx.circuitbreaker.impl.APITest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setUp();
    Code:
       0: aload_0
       1: invokestatic  #2                  // InterfaceMethod io/vertx/core/Vertx.vertx:()Lio/vertx/core/Vertx;
       4: putfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: return

  public void tearDown();
    Code:
       0: aload_0
       1: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      11: invokeinterface #5,  1            // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.close:()Lio/vertx/circuitbreaker/CircuitBreaker;
      16: pop
      17: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      24: astore_1
      25: aload_0
      26: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
      29: aload_1
      30: invokedynamic #8,  0              // InvokeDynamic #0:handle:(Ljava/util/concurrent/atomic/AtomicBoolean;)Lio/vertx/core/Handler;
      35: invokeinterface #9,  2            // InterfaceMethod io/vertx/core/Vertx.close:(Lio/vertx/core/Handler;)V
      40: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      43: aload_1
      44: iconst_1
      45: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      48: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      51: invokevirtual #13                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicBoolean;Lorg/hamcrest/Matcher;)V
      54: return

  public void testWhenOptionsAreNull();
    Code:
       0: ldc           #14                 // String name
       2: aload_0
       3: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       6: aconst_null
       7: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      10: astore_1
      11: aload_1
      12: invokestatic  #16                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractObjectAssert;
      15: invokevirtual #17                 // Method org/assertj/core/api/AbstractObjectAssert.isNotNull:()Lorg/assertj/core/api/AbstractAssert;
      18: pop
      19: aload_1
      20: invokeinterface #18,  1           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.name:()Ljava/lang/String;
      25: invokestatic  #19                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/String;)Lorg/assertj/core/api/AbstractCharSequenceAssert;
      28: ldc           #14                 // String name
      30: invokevirtual #20                 // Method org/assertj/core/api/AbstractCharSequenceAssert.isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      33: pop
      34: aload_1
      35: invokeinterface #21,  1           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.state:()Lio/vertx/circuitbreaker/CircuitBreakerState;
      40: invokestatic  #22                 // Method org/assertj/core/api/Assertions.assertThat:(Ljava/lang/Comparable;)Lorg/assertj/core/api/AbstractComparableAssert;
      43: getstatic     #23                 // Field io/vertx/circuitbreaker/CircuitBreakerState.CLOSED:Lio/vertx/circuitbreaker/CircuitBreakerState;
      46: invokevirtual #24                 // Method org/assertj/core/api/AbstractComparableAssert.isEqualTo:(Ljava/lang/Object;)Lorg/assertj/core/api/AbstractAssert;
      49: pop
      50: return

  public void testWithOperationWithHandler();
    Code:
       0: aload_0
       1: ldc           #25                 // String test
       3: aload_0
       4: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #26                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #27                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      17: putfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      20: new           #28                 // class java/util/concurrent/atomic/AtomicInteger
      23: dup
      24: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      27: astore_1
      28: aload_0
      29: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      32: invokedynamic #30,  0             // InvokeDynamic #1:handle:()Lio/vertx/core/Handler;
      37: invokedynamic #31,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      42: invokeinterface #32,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      47: aload_1
      48: invokedynamic #33,  0             // InvokeDynamic #3:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      53: invokeinterface #34,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      58: pop
      59: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      62: aload_1
      63: iconst_2
      64: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      70: invokevirtual #36                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      73: pop
      74: return

  public void testWithOperationWithCompletionHandler();
    Code:
       0: aload_0
       1: ldc           #25                 // String test
       3: aload_0
       4: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #26                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #27                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      17: putfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      20: new           #28                 // class java/util/concurrent/atomic/AtomicInteger
      23: dup
      24: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      27: astore_1
      28: aload_0
      29: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      32: invokedynamic #37,  0             // InvokeDynamic #4:handle:()Lio/vertx/core/Handler;
      37: invokedynamic #38,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      42: aload_1
      43: invokedynamic #39,  0             // InvokeDynamic #6:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      48: invokeinterface #40,  4           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;Lio/vertx/core/Handler;)V
      53: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      56: aload_1
      57: iconst_2
      58: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      64: invokevirtual #36                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      67: pop
      68: return

  public void testWithFailingOperationWithHandler();
    Code:
       0: aload_0
       1: ldc           #25                 // String test
       3: aload_0
       4: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #26                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #27                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: iconst_1
      15: invokevirtual #41                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setFallbackOnFailure:(Z)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      18: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      21: putfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      24: new           #28                 // class java/util/concurrent/atomic/AtomicInteger
      27: dup
      28: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      31: astore_1
      32: aload_0
      33: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      36: invokedynamic #42,  0             // InvokeDynamic #7:handle:()Lio/vertx/core/Handler;
      41: invokedynamic #43,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      46: invokeinterface #32,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/core/Future;
      51: aload_1
      52: invokedynamic #44,  0             // InvokeDynamic #9:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      57: invokeinterface #34,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      62: pop
      63: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      66: aload_1
      67: iconst_m1
      68: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      74: invokevirtual #36                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      77: pop
      78: return

  public void testWithFailingOperationWithCompletionHandler();
    Code:
       0: aload_0
       1: ldc           #25                 // String test
       3: aload_0
       4: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #26                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #27                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: iconst_1
      15: invokevirtual #41                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setFallbackOnFailure:(Z)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      18: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      21: putfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      24: new           #28                 // class java/util/concurrent/atomic/AtomicInteger
      27: dup
      28: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      31: astore_1
      32: aload_0
      33: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      36: invokedynamic #45,  0             // InvokeDynamic #10:handle:()Lio/vertx/core/Handler;
      41: invokedynamic #46,  0             // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      46: aload_1
      47: invokedynamic #47,  0             // InvokeDynamic #12:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      52: invokeinterface #40,  4           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeWithFallback:(Lio/vertx/core/Handler;Ljava/util/function/Function;Lio/vertx/core/Handler;)V
      57: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      60: aload_1
      61: iconst_m1
      62: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      68: invokevirtual #36                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      71: pop
      72: return

  public void testWithOperationWithFuture();
    Code:
       0: aload_0
       1: ldc           #25                 // String test
       3: aload_0
       4: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #26                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #27                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: iconst_1
      15: invokevirtual #41                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setFallbackOnFailure:(Z)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      18: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      21: putfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      24: new           #28                 // class java/util/concurrent/atomic/AtomicInteger
      27: dup
      28: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      31: astore_1
      32: invokestatic  #48                 // InterfaceMethod io/vertx/core/Future.future:()Lio/vertx/core/Future;
      35: astore_2
      36: aload_2
      37: aload_1
      38: invokedynamic #49,  0             // InvokeDynamic #13:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      43: invokeinterface #34,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      48: pop
      49: aload_0
      50: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      53: aload_2
      54: invokedynamic #50,  0             // InvokeDynamic #14:handle:()Lio/vertx/core/Handler;
      59: invokeinterface #51,  3           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeAndReport:(Lio/vertx/core/Future;Lio/vertx/core/Handler;)Lio/vertx/circuitbreaker/CircuitBreaker;
      64: pop
      65: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      68: aload_1
      69: iconst_2
      70: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      76: invokevirtual #36                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      79: pop
      80: return

  public void testWithFailingOperationWithFuture();
    Code:
       0: aload_0
       1: ldc           #25                 // String test
       3: aload_0
       4: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: new           #26                 // class io/vertx/circuitbreaker/CircuitBreakerOptions
      10: dup
      11: invokespecial #27                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      14: iconst_1
      15: invokevirtual #41                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setFallbackOnFailure:(Z)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      18: invokestatic  #15                 // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      21: putfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      24: new           #28                 // class java/util/concurrent/atomic/AtomicInteger
      27: dup
      28: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      31: astore_1
      32: invokestatic  #48                 // InterfaceMethod io/vertx/core/Future.future:()Lio/vertx/core/Future;
      35: astore_2
      36: aload_2
      37: aload_1
      38: invokedynamic #52,  0             // InvokeDynamic #15:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      43: invokeinterface #34,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      48: pop
      49: aload_0
      50: getfield      #4                  // Field breaker:Lio/vertx/circuitbreaker/CircuitBreaker;
      53: aload_2
      54: invokedynamic #53,  0             // InvokeDynamic #16:handle:()Lio/vertx/core/Handler;
      59: invokedynamic #54,  0             // InvokeDynamic #17:apply:()Ljava/util/function/Function;
      64: invokeinterface #55,  4           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.executeAndReportWithFallback:(Lio/vertx/core/Future;Lio/vertx/core/Handler;Ljava/util/function/Function;)Lio/vertx/circuitbreaker/CircuitBreaker;
      69: pop
      70: invokestatic  #10                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      73: aload_1
      74: iconst_m1
      75: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: invokestatic  #12                 // Method org/hamcrest/core/Is.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      81: invokevirtual #36                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      84: pop
      85: return

  private static java.lang.Integer lambda$testWithFailingOperationWithFuture$16(java.lang.Throwable);
    Code:
       0: iconst_m1
       1: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static void lambda$testWithFailingOperationWithFuture$15(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: checkcast     #57                 // class java/lang/Integer
      10: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      13: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: return

  private static void lambda$testWithOperationWithFuture$14(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_1
       3: invokestatic  #60                 // Method io/vertx/circuitbreaker/impl/MyAsyncOperations.operation:(Lio/vertx/core/Promise;II)V
       6: return

  private static void lambda$testWithOperationWithFuture$13(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: checkcast     #57                 // class java/lang/Integer
      10: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      13: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: return

  private static void lambda$testWithFailingOperationWithCompletionHandler$12(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: checkcast     #57                 // class java/lang/Integer
      10: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      13: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: return

  private static java.lang.Integer lambda$testWithFailingOperationWithCompletionHandler$11(java.lang.Throwable);
    Code:
       0: iconst_m1
       1: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static void lambda$testWithFailingOperationWithCompletionHandler$10(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method io/vertx/circuitbreaker/impl/MyAsyncOperations.fail:(Lio/vertx/core/Promise;)V
       4: return

  private static void lambda$testWithFailingOperationWithHandler$9(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: checkcast     #57                 // class java/lang/Integer
      10: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      13: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: return

  private static java.lang.Integer lambda$testWithFailingOperationWithHandler$8(java.lang.Throwable);
    Code:
       0: iconst_m1
       1: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static void lambda$testWithFailingOperationWithHandler$7(io.vertx.core.Promise);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method io/vertx/circuitbreaker/impl/MyAsyncOperations.fail:(Lio/vertx/core/Promise;)V
       4: return

  private static void lambda$testWithOperationWithCompletionHandler$6(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: checkcast     #57                 // class java/lang/Integer
      10: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      13: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: return

  private static java.lang.Integer lambda$testWithOperationWithCompletionHandler$5(java.lang.Throwable);
    Code:
       0: iconst_0
       1: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static void lambda$testWithOperationWithCompletionHandler$4(io.vertx.core.Promise);
    Code:
       0: iconst_1
       1: iconst_1
       2: aload_0
       3: invokestatic  #62                 // Method io/vertx/circuitbreaker/impl/MyAsyncOperations.operation:(IILio/vertx/core/Handler;)V
       6: return

  private static void lambda$testWithOperationWithHandler$3(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #56,  1           // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
       7: checkcast     #57                 // class java/lang/Integer
      10: invokevirtual #58                 // Method java/lang/Integer.intValue:()I
      13: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
      16: return

  private static java.lang.Integer lambda$testWithOperationWithHandler$2(java.lang.Throwable);
    Code:
       0: iconst_0
       1: invokestatic  #35                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static void lambda$testWithOperationWithHandler$1(io.vertx.core.Promise);
    Code:
       0: iconst_1
       1: iconst_1
       2: aload_0
       3: invokestatic  #62                 // Method io/vertx/circuitbreaker/impl/MyAsyncOperations.operation:(IILio/vertx/core/Handler;)V
       6: return

  private static void lambda$tearDown$0(java.util.concurrent.atomic.AtomicBoolean, io.vertx.core.AsyncResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #63,  1           // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       7: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      10: return
}
