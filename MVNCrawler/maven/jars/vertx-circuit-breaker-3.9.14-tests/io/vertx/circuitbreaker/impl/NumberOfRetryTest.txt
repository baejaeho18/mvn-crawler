Compiled from "NumberOfRetryTest.java"
public class io.vertx.circuitbreaker.impl.NumberOfRetryTest {
  private io.vertx.core.Vertx vertx;

  public io.vertx.circuitbreaker.impl.NumberOfRetryTest();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setup();
    Code:
       0: aload_0
       1: invokestatic  #2                  // InterfaceMethod io/vertx/core/Vertx.vertx:()Lio/vertx/core/Vertx;
       4: putfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       7: return

  public void tearDown();
    Code:
       0: aload_0
       1: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       4: invokeinterface #4,  1            // InterfaceMethod io/vertx/core/Vertx.close:()V
       9: return

  public void testWithoutRetry();
    Code:
       0: ldc           #5                  // String my-circuit-breaker
       2: aload_0
       3: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       6: new           #6                  // class io/vertx/circuitbreaker/CircuitBreakerOptions
       9: dup
      10: invokespecial #7                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      13: iconst_5
      14: invokevirtual #8                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxFailures:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      17: invokestatic  #9                  // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      20: astore_1
      21: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      24: dup
      25: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      28: astore_2
      29: aload_1
      30: aload_2
      31: invokedynamic #12,  0             // InvokeDynamic #0:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      36: invokeinterface #13,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      41: invokedynamic #14,  0             // InvokeDynamic #1:handle:()Lio/vertx/core/Handler;
      46: invokeinterface #15,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      51: pop
      52: invokestatic  #16                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      55: aload_2
      56: iconst_1
      57: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: invokestatic  #18                 // Method org/hamcrest/Matchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      63: invokevirtual #19                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      66: pop
      67: return

  public void testWithRetrySetToZero();
    Code:
       0: ldc           #5                  // String my-circuit-breaker
       2: aload_0
       3: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       6: new           #6                  // class io/vertx/circuitbreaker/CircuitBreakerOptions
       9: dup
      10: invokespecial #7                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      13: iconst_5
      14: invokevirtual #8                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxFailures:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      17: iconst_0
      18: invokevirtual #20                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxRetries:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      21: invokestatic  #9                  // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      24: astore_1
      25: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      28: dup
      29: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      32: astore_2
      33: aload_1
      34: aload_2
      35: invokedynamic #21,  0             // InvokeDynamic #2:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      40: invokeinterface #13,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      45: invokedynamic #22,  0             // InvokeDynamic #3:handle:()Lio/vertx/core/Handler;
      50: invokeinterface #15,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      55: pop
      56: invokestatic  #16                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      59: aload_2
      60: iconst_1
      61: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: invokestatic  #18                 // Method org/hamcrest/Matchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      67: invokevirtual #19                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      70: pop
      71: return

  public void testWithRetrySetToOne();
    Code:
       0: ldc           #5                  // String my-circuit-breaker
       2: aload_0
       3: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       6: new           #6                  // class io/vertx/circuitbreaker/CircuitBreakerOptions
       9: dup
      10: invokespecial #7                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      13: iconst_5
      14: invokevirtual #8                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxFailures:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      17: iconst_1
      18: invokevirtual #20                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxRetries:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      21: invokestatic  #9                  // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      24: astore_1
      25: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      28: dup
      29: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      32: astore_2
      33: aload_1
      34: aload_2
      35: invokedynamic #23,  0             // InvokeDynamic #4:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      40: invokeinterface #13,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      45: invokedynamic #24,  0             // InvokeDynamic #5:handle:()Lio/vertx/core/Handler;
      50: invokeinterface #15,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      55: pop
      56: invokestatic  #16                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      59: aload_2
      60: iconst_2
      61: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: invokestatic  #18                 // Method org/hamcrest/Matchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      67: invokevirtual #19                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      70: pop
      71: return

  public void testWithRetrySetToFive();
    Code:
       0: ldc           #5                  // String my-circuit-breaker
       2: aload_0
       3: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       6: new           #6                  // class io/vertx/circuitbreaker/CircuitBreakerOptions
       9: dup
      10: invokespecial #7                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions."<init>":()V
      13: iconst_5
      14: invokevirtual #8                  // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxFailures:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      17: iconst_5
      18: invokevirtual #20                 // Method io/vertx/circuitbreaker/CircuitBreakerOptions.setMaxRetries:(I)Lio/vertx/circuitbreaker/CircuitBreakerOptions;
      21: invokestatic  #9                  // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.create:(Ljava/lang/String;Lio/vertx/core/Vertx;Lio/vertx/circuitbreaker/CircuitBreakerOptions;)Lio/vertx/circuitbreaker/CircuitBreaker;
      24: astore_1
      25: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      28: dup
      29: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      32: astore_2
      33: aload_1
      34: aload_2
      35: invokedynamic #25,  0             // InvokeDynamic #6:handle:(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/vertx/core/Handler;
      40: invokeinterface #13,  2           // InterfaceMethod io/vertx/circuitbreaker/CircuitBreaker.execute:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      45: invokedynamic #26,  0             // InvokeDynamic #7:handle:()Lio/vertx/core/Handler;
      50: invokeinterface #15,  2           // InterfaceMethod io/vertx/core/Future.setHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      55: pop
      56: invokestatic  #16                 // Method com/jayway/awaitility/Awaitility.await:()Lcom/jayway/awaitility/core/ConditionFactory;
      59: aload_2
      60: bipush        6
      62: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: invokestatic  #18                 // Method org/hamcrest/Matchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      68: invokevirtual #19                 // Method com/jayway/awaitility/core/ConditionFactory.untilAtomic:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/hamcrest/Matcher;)Ljava/lang/Integer;
      71: pop
      72: return

  private static void lambda$testWithRetrySetToFive$7(io.vertx.core.AsyncResult);
    Code:
       0: return

  private static void lambda$testWithRetrySetToFive$6(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       4: pop
       5: aload_1
       6: ldc           #28                 // String FAILED
       8: invokeinterface #29,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      13: return

  private static void lambda$testWithRetrySetToOne$5(io.vertx.core.AsyncResult);
    Code:
       0: return

  private static void lambda$testWithRetrySetToOne$4(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       4: pop
       5: aload_1
       6: ldc           #28                 // String FAILED
       8: invokeinterface #29,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      13: return

  private static void lambda$testWithRetrySetToZero$3(io.vertx.core.AsyncResult);
    Code:
       0: return

  private static void lambda$testWithRetrySetToZero$2(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       4: pop
       5: aload_1
       6: ldc           #28                 // String FAILED
       8: invokeinterface #29,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      13: return

  private static void lambda$testWithoutRetry$1(io.vertx.core.AsyncResult);
    Code:
       0: return

  private static void lambda$testWithoutRetry$0(java.util.concurrent.atomic.AtomicInteger, io.vertx.core.Promise);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       4: pop
       5: aload_1
       6: ldc           #28                 // String FAILED
       8: invokeinterface #29,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      13: return
}
