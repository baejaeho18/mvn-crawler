Compiled from "ReverseProxyService.java"
public class org.smallmind.web.reverse.http1_1.ReverseProxyService {
  private final java.util.concurrent.CountDownLatch terminationLatch;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private final java.nio.channels.ServerSocketChannel serverSocketChannel;

  private final java.nio.channels.Selector selector;

  private final org.smallmind.web.reverse.http1_1.ProxyDictionary dictionary;

  private final org.smallmind.web.reverse.http1_1.ProxyExecutor proxyExecutor;

  private final java.util.concurrent.locks.Lock selectLock;

  private final java.util.concurrent.locks.Lock loopLock;

  private final java.nio.ByteBuffer byteBuffer;

  private final int connectTimeoutMillis;

  private org.smallmind.web.reverse.http1_1.ReverseProxyService$EventLoop eventLoop;

  public org.smallmind.web.reverse.http1_1.ReverseProxyService(java.lang.String, int, org.smallmind.web.reverse.http1_1.ProxyDictionary, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/CountDownLatch
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      13: putfield      #4                  // Field terminationLatch:Ljava/util/concurrent/CountDownLatch;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: iconst_0
      22: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      25: putfield      #7                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: aload_0
      29: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      32: dup
      33: iconst_1
      34: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      37: putfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
      40: aload_0
      41: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      44: dup
      45: iconst_1
      46: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      49: putfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
      52: aload_0
      53: sipush        8192
      56: invokestatic  #12                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      59: putfield      #13                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      62: aload_0
      63: aload_3
      64: putfield      #14                 // Field dictionary:Lorg/smallmind/web/reverse/http1_1/ProxyDictionary;
      67: aload_0
      68: iload         4
      70: putfield      #15                 // Field connectTimeoutMillis:I
      73: aload_0
      74: new           #16                 // class org/smallmind/web/reverse/http1_1/ProxyExecutor
      77: dup
      78: iload         5
      80: invokespecial #17                 // Method org/smallmind/web/reverse/http1_1/ProxyExecutor."<init>":(I)V
      83: putfield      #18                 // Field proxyExecutor:Lorg/smallmind/web/reverse/http1_1/ProxyExecutor;
      86: aload_0
      87: invokestatic  #19                 // Method java/nio/channels/ServerSocketChannel.open:()Ljava/nio/channels/ServerSocketChannel;
      90: putfield      #20                 // Field serverSocketChannel:Ljava/nio/channels/ServerSocketChannel;
      93: aload_0
      94: getfield      #20                 // Field serverSocketChannel:Ljava/nio/channels/ServerSocketChannel;
      97: iconst_0
      98: invokevirtual #21                 // Method java/nio/channels/ServerSocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
     101: pop
     102: aload_0
     103: getfield      #20                 // Field serverSocketChannel:Ljava/nio/channels/ServerSocketChannel;
     106: invokevirtual #22                 // Method java/nio/channels/ServerSocketChannel.socket:()Ljava/net/ServerSocket;
     109: new           #23                 // class java/net/InetSocketAddress
     112: dup
     113: aload_1
     114: iload_2
     115: invokespecial #24                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     118: invokevirtual #25                 // Method java/net/ServerSocket.bind:(Ljava/net/SocketAddress;)V
     121: aload_0
     122: getfield      #20                 // Field serverSocketChannel:Ljava/nio/channels/ServerSocketChannel;
     125: aload_0
     126: invokestatic  #26                 // Method java/nio/channels/Selector.open:()Ljava/nio/channels/Selector;
     129: dup_x1
     130: putfield      #27                 // Field selector:Ljava/nio/channels/Selector;
     133: bipush        16
     135: invokevirtual #29                 // Method java/nio/channels/ServerSocketChannel.register:(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
     138: pop
     139: aload_0
     140: invokevirtual #30                 // Method startEventLoop:()V
     143: return

  private void startEventLoop();
    Code:
       0: new           #31                 // class java/lang/Thread
       3: dup
       4: aload_0
       5: new           #32                 // class org/smallmind/web/reverse/http1_1/ReverseProxyService$EventLoop
       8: dup
       9: aload_0
      10: invokespecial #33                 // Method org/smallmind/web/reverse/http1_1/ReverseProxyService$EventLoop."<init>":(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;)V
      13: dup_x1
      14: putfield      #34                 // Field eventLoop:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService$EventLoop;
      17: invokespecial #35                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      20: astore_1
      21: aload_1
      22: iconst_1
      23: invokevirtual #36                 // Method java/lang/Thread.setDaemon:(Z)V
      26: aload_1
      27: invokevirtual #37                 // Method java/lang/Thread.start:()V
      30: return

  public void destroy() throws java.io.IOException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field eventLoop:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService$EventLoop;
       4: invokevirtual #38                 // Method org/smallmind/web/reverse/http1_1/ReverseProxyService$EventLoop.stop:()V
       7: aload_0
       8: getfield      #7                  // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      16: ifeq          40
      19: aload_0
      20: getfield      #27                 // Field selector:Ljava/nio/channels/Selector;
      23: invokevirtual #40                 // Method java/nio/channels/Selector.close:()V
      26: aload_0
      27: getfield      #20                 // Field serverSocketChannel:Ljava/nio/channels/ServerSocketChannel;
      30: invokevirtual #41                 // Method java/nio/channels/ServerSocketChannel.close:()V
      33: aload_0
      34: getfield      #18                 // Field proxyExecutor:Lorg/smallmind/web/reverse/http1_1/ProxyExecutor;
      37: invokevirtual #42                 // Method org/smallmind/web/reverse/http1_1/ProxyExecutor.shutdown:()V
      40: return

  public java.nio.channels.SelectionKey keyFor(java.nio.channels.SelectableChannel);
    Code:
       0: aload_0
       1: getfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
      13: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      18: aload_1
      19: aload_0
      20: getfield      #27                 // Field selector:Ljava/nio/channels/Selector;
      23: invokevirtual #44                 // Method java/nio/channels/SelectableChannel.keyFor:(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;
      26: astore_2
      27: aload_0
      28: getfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
      31: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      36: aload_0
      37: getfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
      40: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      45: aload_2
      46: areturn
      47: astore_3
      48: aload_0
      49: getfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: aload_3
      58: athrow
      59: astore        4
      61: aload_0
      62: getfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
      65: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      70: aload         4
      72: athrow
    Exception table:
       from    to  target type
          18    27    47   any
           9    36    59   any
          47    61    59   any

  public void execute(java.nio.channels.SocketChannel, java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field proxyExecutor:Lorg/smallmind/web/reverse/http1_1/ProxyExecutor;
       4: aload_1
       5: aload_2
       6: invokevirtual #46                 // Method org/smallmind/web/reverse/http1_1/ProxyExecutor.execute:(Ljava/nio/channels/SocketChannel;Ljava/lang/Runnable;)V
       9: return

  public org.smallmind.web.reverse.http1_1.ProxyTarget lookup(org.smallmind.web.reverse.http1_1.HttpRequestFrame) throws org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field dictionary:Lorg/smallmind/web/reverse/http1_1/ProxyDictionary;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod org/smallmind/web/reverse/http1_1/ProxyDictionary.lookup:(Lorg/smallmind/web/reverse/http1_1/HttpRequestFrame;)Lorg/smallmind/web/reverse/http1_1/ProxyTarget;
      10: dup
      11: astore_2
      12: ifnonnull     26
      15: new           #48                 // class org/smallmind/web/reverse/http1_1/ProtocolException
      18: dup
      19: getstatic     #49                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.NOT_FOUND:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
      22: invokespecial #50                 // Method org/smallmind/web/reverse/http1_1/ProtocolException."<init>":(Lorg/smallmind/web/reverse/http1_1/CannedResponse;)V
      25: athrow
      26: aload_2
      27: areturn

  public void connectDestination(java.nio.channels.SocketChannel, org.smallmind.web.reverse.http1_1.HttpRequestFrameReader, org.smallmind.web.reverse.http1_1.ProxyTarget);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_3
       4: aload_1
       5: aload_2
       6: invokedynamic #51,  0             // InvokeDynamic #0:run:(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;Lorg/smallmind/web/reverse/http1_1/ProxyTarget;Ljava/nio/channels/SocketChannel;Lorg/smallmind/web/reverse/http1_1/HttpRequestFrameReader;)Ljava/lang/Runnable;
      11: invokevirtual #52                 // Method execute:(Ljava/nio/channels/SocketChannel;Ljava/lang/Runnable;)V
      14: return

  private void lambda$connectDestination$0(org.smallmind.web.reverse.http1_1.ProxyTarget, java.nio.channels.SocketChannel, org.smallmind.web.reverse.http1_1.HttpRequestFrameReader);
    Code:
       0: aconst_null
       1: astore        4
       3: invokestatic  #53                 // Method java/nio/channels/SocketChannel.open:()Ljava/nio/channels/SocketChannel;
       6: astore        4
       8: aload         4
      10: invokevirtual #54                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      13: new           #23                 // class java/net/InetSocketAddress
      16: dup
      17: aload_1
      18: invokevirtual #55                 // Method org/smallmind/web/reverse/http1_1/ProxyTarget.getHost:()Ljava/lang/String;
      21: aload_1
      22: invokevirtual #56                 // Method org/smallmind/web/reverse/http1_1/ProxyTarget.getPort:()I
      25: invokespecial #24                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      28: aload_0
      29: getfield      #15                 // Field connectTimeoutMillis:I
      32: invokevirtual #57                 // Method java/net/Socket.connect:(Ljava/net/SocketAddress;I)V
      35: aload         4
      37: getstatic     #58                 // Field java/net/StandardSocketOptions.SO_KEEPALIVE:Ljava/net/SocketOption;
      40: iconst_1
      41: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: invokevirtual #60                 // Method java/nio/channels/SocketChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/SocketChannel;
      47: getstatic     #61                 // Field java/net/StandardSocketOptions.TCP_NODELAY:Ljava/net/SocketOption;
      50: iconst_1
      51: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      54: invokevirtual #60                 // Method java/nio/channels/SocketChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/SocketChannel;
      57: iconst_0
      58: invokevirtual #62                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      61: pop
      62: aload_0
      63: getfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      71: aload_0
      72: getfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
      75: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      80: aload         4
      82: aload_0
      83: getfield      #27                 // Field selector:Ljava/nio/channels/Selector;
      86: iconst_1
      87: new           #63                 // class org/smallmind/web/reverse/http1_1/HttpResponseFrameReader
      90: dup
      91: aload_0
      92: aload_2
      93: aload         4
      95: invokespecial #64                 // Method org/smallmind/web/reverse/http1_1/HttpResponseFrameReader."<init>":(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;)V
      98: invokevirtual #65                 // Method java/nio/channels/SocketChannel.register:(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;
     101: pop
     102: aload_0
     103: getfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
     106: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     111: goto          128
     114: astore        5
     116: aload_0
     117: getfield      #10                 // Field selectLock:Ljava/util/concurrent/locks/Lock;
     120: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     125: aload         5
     127: athrow
     128: aload_0
     129: getfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
     132: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     137: goto          154
     140: astore        6
     142: aload_0
     143: getfield      #11                 // Field loopLock:Ljava/util/concurrent/locks/Lock;
     146: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     151: aload         6
     153: athrow
     154: aload_3
     155: aload_1
     156: aload         4
     158: invokevirtual #66                 // Method org/smallmind/web/reverse/http1_1/HttpRequestFrameReader.registerDestination:(Lorg/smallmind/web/reverse/http1_1/ProxyTarget;Ljava/nio/channels/SocketChannel;)V
     161: goto          199
     164: astore        5
     166: aload         4
     168: ifnull        176
     171: aload         4
     173: invokevirtual #68                 // Method java/nio/channels/SocketChannel.close:()V
     176: goto          191
     179: astore        6
     181: ldc           #69                 // class org/smallmind/web/reverse/http1_1/ReverseProxyService
     183: invokestatic  #70                 // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
     186: aload         6
     188: invokevirtual #71                 // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
     191: aload_3
     192: getstatic     #49                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.NOT_FOUND:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
     195: aconst_null
     196: invokevirtual #72                 // Method org/smallmind/web/reverse/http1_1/HttpRequestFrameReader.fail:(Lorg/smallmind/web/reverse/http1_1/CannedResponse;Ljava/nio/channels/SocketChannel;)V
     199: return
    Exception table:
       from    to  target type
          80   102   114   any
         114   116   114   any
          71   128   140   any
         140   142   140   any
           3   161   164   Class java/io/IOException
         166   176   179   Class java/io/IOException
}
