Compiled from "HttpFrame.java"
public abstract class org.smallmind.web.reverse.http1_1.HttpFrame {
  private final java.util.List<org.smallmind.web.reverse.http1_1.HttpHeader> headerList;

  private final java.lang.String version;

  public org.smallmind.web.reverse.http1_1.HttpFrame(org.smallmind.web.reverse.http1_1.HttpProtocolInputStream, java.lang.String) throws java.io.IOException, org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field version:Ljava/lang/String;
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokevirtual #3                  // Method parseHeaders:(Lorg/smallmind/web/reverse/http1_1/HttpProtocolInputStream;)Ljava/util/List;
      15: putfield      #4                  // Field headerList:Ljava/util/List;
      18: return

  public abstract org.smallmind.web.reverse.http1_1.HttpDirection getDirection();

  private java.util.List<org.smallmind.web.reverse.http1_1.HttpHeader> parseHeaders(org.smallmind.web.reverse.http1_1.HttpProtocolInputStream) throws java.io.IOException, org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: new           #5                  // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #7                  // Method org/smallmind/web/reverse/http1_1/HttpProtocolInputStream.readLine:()Ljava/lang/String;
      12: dup
      13: astore_3
      14: invokevirtual #8                  // Method java/lang/String.isEmpty:()Z
      17: ifne          116
      20: aload_3
      21: bipush        58
      23: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I
      26: dup
      27: istore        6
      29: ifge          43
      32: new           #10                 // class org/smallmind/web/reverse/http1_1/ProtocolException
      35: dup
      36: getstatic     #11                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.BAD_REQUEST:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
      39: invokespecial #12                 // Method org/smallmind/web/reverse/http1_1/ProtocolException."<init>":(Lorg/smallmind/web/reverse/http1_1/CannedResponse;)V
      42: athrow
      43: aload_2
      44: aload_0
      45: aload_3
      46: iconst_0
      47: iload         6
      49: invokevirtual #13                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      52: invokevirtual #14                 // Method java/lang/String.trim:()Ljava/lang/String;
      55: invokevirtual #15                 // Method normalizeHeaderName:(Ljava/lang/String;)Ljava/lang/String;
      58: dup
      59: astore        5
      61: invokevirtual #16                 // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #17                 // class org/smallmind/web/reverse/http1_1/HttpHeader
      67: dup
      68: astore        4
      70: ifnonnull     96
      73: aload_2
      74: aload         5
      76: new           #17                 // class org/smallmind/web/reverse/http1_1/HttpHeader
      79: dup
      80: aload         5
      82: iconst_0
      83: anewarray     #18                 // class java/lang/String
      86: invokespecial #19                 // Method org/smallmind/web/reverse/http1_1/HttpHeader."<init>":(Ljava/lang/String;[Ljava/lang/String;)V
      89: dup
      90: astore        4
      92: invokevirtual #20                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aload         4
      98: aload_3
      99: iload         6
     101: iconst_1
     102: iadd
     103: invokevirtual #21                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     106: invokevirtual #14                 // Method java/lang/String.trim:()Ljava/lang/String;
     109: invokevirtual #22                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.addValue:(Ljava/lang/String;)Lorg/smallmind/web/reverse/http1_1/HttpHeader;
     112: pop
     113: goto          8
     116: new           #23                 // class java/util/LinkedList
     119: dup
     120: aload_2
     121: invokevirtual #24                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
     124: invokespecial #25                 // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
     127: areturn

  private java.lang.String normalizeHeaderName(java.lang.String);
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iconst_1
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: aload_1
      16: invokevirtual #28                 // Method java/lang/String.length:()I
      19: if_icmpge     81
      22: aload_1
      23: iload         4
      25: invokevirtual #29                 // Method java/lang/String.charAt:(I)C
      28: istore        5
      30: iload         5
      32: bipush        45
      34: if_icmpne     49
      37: aload_2
      38: bipush        45
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      43: pop
      44: iconst_1
      45: istore_3
      46: goto          75
      49: iload_3
      50: ifeq          68
      53: aload_2
      54: iload         5
      56: invokestatic  #31                 // Method java/lang/Character.toUpperCase:(C)C
      59: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: pop
      63: iconst_0
      64: istore_3
      65: goto          75
      68: aload_2
      69: iload         5
      71: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: pop
      75: iinc          4, 1
      78: goto          13
      81: aload_2
      82: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: areturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:Ljava/lang/String;
       4: areturn

  public org.smallmind.web.reverse.http1_1.HttpHeader getHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method java/lang/String.trim:()Ljava/lang/String;
       5: invokevirtual #15                 // Method normalizeHeaderName:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field headerList:Ljava/util/List;
      13: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          57
      28: aload_3
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #17                 // class org/smallmind/web/reverse/http1_1/HttpHeader
      37: astore        4
      39: aload         4
      41: invokevirtual #36                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getName:()Ljava/lang/String;
      44: aload_2
      45: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: aload         4
      53: areturn
      54: goto          19
      57: aconst_null
      58: areturn

  public void addHeader(org.smallmind.web.reverse.http1_1.HttpHeader);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #38                 // Method addHeader:(Lorg/smallmind/web/reverse/http1_1/HttpHeader;Z)V
       6: return

  public void addHeader(org.smallmind.web.reverse.http1_1.HttpHeader, boolean);
    Code:
       0: iload_2
       1: ifeq          18
       4: aload_0
       5: getfield      #4                  // Field headerList:Ljava/util/List;
       8: iconst_0
       9: aload_1
      10: invokeinterface #39,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      15: goto          29
      18: aload_0
      19: getfield      #4                  // Field headerList:Ljava/util/List;
      22: aload_1
      23: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public org.smallmind.web.reverse.http1_1.HttpHeader removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerList:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_0
      11: aload_1
      12: invokevirtual #14                 // Method java/lang/String.trim:()Ljava/lang/String;
      15: invokevirtual #15                 // Method normalizeHeaderName:(Ljava/lang/String;)Ljava/lang/String;
      18: astore_3
      19: aload_2
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          62
      28: aload_2
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #17                 // class org/smallmind/web/reverse/http1_1/HttpHeader
      37: dup
      38: astore        4
      40: invokevirtual #36                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getName:()Ljava/lang/String;
      43: aload_3
      44: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          59
      50: aload_2
      51: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.remove:()V
      56: aload         4
      58: areturn
      59: goto          19
      62: aconst_null
      63: areturn

  public java.util.List<org.smallmind.web.reverse.http1_1.HttpHeader> getHeaders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerList:Ljava/util/List;
       4: areturn
}
