Compiled from "HttpFrameReader.java"
public abstract class org.smallmind.web.reverse.http1_1.HttpFrameReader extends org.smallmind.web.reverse.http1_1.SourceAwareFrameReader {
  private final org.smallmind.web.reverse.http1_1.ReverseProxyService reverseProxyService;

  private final org.smallmind.nutsnbolts.io.ByteArrayIOStream byteArrayIOStream;

  private final java.util.concurrent.atomic.AtomicBoolean failed;

  private boolean lineEnd;

  private int lastChar;

  public org.smallmind.web.reverse.http1_1.HttpFrameReader(org.smallmind.web.reverse.http1_1.ReverseProxyService, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/smallmind/web/reverse/http1_1/SourceAwareFrameReader."<init>":(Ljava/nio/channels/SocketChannel;)V
       5: aload_0
       6: new           #2                  // class org/smallmind/nutsnbolts/io/ByteArrayIOStream
       9: dup
      10: invokespecial #3                  // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream."<init>":()V
      13: putfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      20: dup
      21: iconst_0
      22: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      25: putfield      #7                  // Field failed:Ljava/util/concurrent/atomic/AtomicBoolean;
      28: aload_0
      29: iconst_0
      30: putfield      #8                  // Field lineEnd:Z
      33: aload_0
      34: iconst_0
      35: putfield      #9                  // Field lastChar:I
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
      43: return

  public abstract java.nio.channels.SocketChannel getTargetChannel();

  public abstract java.nio.channels.SocketChannel getDestinationChannel() throws org.smallmind.web.reverse.http1_1.ProtocolException;

  public abstract org.smallmind.web.reverse.http1_1.HttpFrame getHttpFrame(org.smallmind.web.reverse.http1_1.ReverseProxyService, java.nio.channels.SocketChannel, org.smallmind.web.reverse.http1_1.HttpProtocolInputStream, org.smallmind.web.reverse.http1_1.HttpProtocolOutputStream) throws java.io.IOException, org.smallmind.web.reverse.http1_1.ProtocolException;

  public void processInput(java.nio.channels.SelectionKey, java.nio.ByteBuffer);
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
       4: ifle          442
       7: aload_0
       8: aload_2
       9: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      12: dup
      13: istore_3
      14: invokevirtual #13                 // Method writeToBuffer:(B)V
      17: iload_3
      18: bipush        10
      20: if_icmpne     423
      23: aload_0
      24: getfield      #9                  // Field lastChar:I
      27: bipush        13
      29: if_icmpne     423
      32: aload_0
      33: getfield      #8                  // Field lineEnd:Z
      36: ifeq          415
      39: aload_0
      40: aload_0
      41: getfield      #10                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
      44: aload_0
      45: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
      48: new           #15                 // class org/smallmind/web/reverse/http1_1/HttpProtocolInputStream
      51: dup
      52: aload_0
      53: getfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
      56: invokevirtual #16                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream.asInputStream:()Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayInputStream;
      59: invokespecial #17                 // Method org/smallmind/web/reverse/http1_1/HttpProtocolInputStream."<init>":(Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayInputStream;)V
      62: new           #18                 // class org/smallmind/web/reverse/http1_1/HttpProtocolOutputStream
      65: dup
      66: aload_0
      67: getfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
      70: invokevirtual #19                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream.asOutputStream:()Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayOutputStream;
      73: invokespecial #20                 // Method org/smallmind/web/reverse/http1_1/HttpProtocolOutputStream."<init>":(Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayOutputStream;)V
      76: invokevirtual #21                 // Method getHttpFrame:(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;Ljava/nio/channels/SocketChannel;Lorg/smallmind/web/reverse/http1_1/HttpProtocolInputStream;Lorg/smallmind/web/reverse/http1_1/HttpProtocolOutputStream;)Lorg/smallmind/web/reverse/http1_1/HttpFrame;
      79: astore        4
      81: aload         4
      83: ldc           #22                 // String Expect
      85: invokevirtual #23                 // Method org/smallmind/web/reverse/http1_1/HttpFrame.getHeader:(Ljava/lang/String;)Lorg/smallmind/web/reverse/http1_1/HttpHeader;
      88: dup
      89: astore        5
      91: ifnull        121
      94: aload         5
      96: invokevirtual #24                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getValues:()Ljava/util/List;
      99: iconst_0
     100: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     105: checkcast     #26                 // class java/lang/String
     108: ldc           #27                 // String 100-continue
     110: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifeq          121
     116: aload_0
     117: iconst_0
     118: invokevirtual #29                 // Method flushBufferToTarget:(Z)V
     121: aload         4
     123: ldc           #30                 // String Content-Length
     125: invokevirtual #23                 // Method org/smallmind/web/reverse/http1_1/HttpFrame.getHeader:(Ljava/lang/String;)Lorg/smallmind/web/reverse/http1_1/HttpHeader;
     128: dup
     129: astore        6
     131: ifnull        206
     134: aload         6
     136: invokevirtual #24                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getValues:()Ljava/util/List;
     139: iconst_0
     140: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     145: checkcast     #26                 // class java/lang/String
     148: invokestatic  #31                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     151: dup
     152: istore        7
     154: ifle          185
     157: aload_1
     158: new           #32                 // class org/smallmind/web/reverse/http1_1/HttpContentLengthFrameReader
     161: dup
     162: aload_0
     163: iload         7
     165: invokespecial #33                 // Method org/smallmind/web/reverse/http1_1/HttpContentLengthFrameReader."<init>":(Lorg/smallmind/web/reverse/http1_1/HttpFrameReader;I)V
     168: dup
     169: astore        8
     171: invokevirtual #34                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     174: pop
     175: aload         8
     177: aload_1
     178: aload_2
     179: invokevirtual #35                 // Method org/smallmind/web/reverse/http1_1/HttpContentLengthFrameReader.processInput:(Ljava/nio/channels/SelectionKey;Ljava/nio/ByteBuffer;)V
     182: goto          190
     185: aload_0
     186: iconst_1
     187: invokevirtual #29                 // Method flushBufferToTarget:(Z)V
     190: goto          412
     193: astore        8
     195: new           #37                 // class org/smallmind/web/reverse/http1_1/ProtocolException
     198: dup
     199: getstatic     #38                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.LENGTH_REQUIRED:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
     202: invokespecial #39                 // Method org/smallmind/web/reverse/http1_1/ProtocolException."<init>":(Lorg/smallmind/web/reverse/http1_1/CannedResponse;)V
     205: athrow
     206: aload         4
     208: ldc           #40                 // String Transfer-Encoding
     210: invokevirtual #23                 // Method org/smallmind/web/reverse/http1_1/HttpFrame.getHeader:(Ljava/lang/String;)Lorg/smallmind/web/reverse/http1_1/HttpHeader;
     213: dup
     214: astore        6
     216: ifnull        268
     219: aload         6
     221: invokevirtual #24                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getValues:()Ljava/util/List;
     224: iconst_0
     225: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     230: checkcast     #26                 // class java/lang/String
     233: ldc           #41                 // String chunked
     235: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     238: ifeq          268
     241: new           #42                 // class org/smallmind/web/reverse/http1_1/HttpChunkedFrameReader
     244: dup
     245: aload_0
     246: invokespecial #43                 // Method org/smallmind/web/reverse/http1_1/HttpChunkedFrameReader."<init>":(Lorg/smallmind/web/reverse/http1_1/HttpFrameReader;)V
     249: astore        7
     251: aload_1
     252: aload         7
     254: invokevirtual #34                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     257: pop
     258: aload         7
     260: aload_1
     261: aload_2
     262: invokevirtual #44                 // Method org/smallmind/web/reverse/http1_1/HttpChunkedFrameReader.processInput:(Ljava/nio/channels/SelectionKey;Ljava/nio/ByteBuffer;)V
     265: goto          412
     268: aload_0
     269: iconst_1
     270: invokevirtual #29                 // Method flushBufferToTarget:(Z)V
     273: aload         4
     275: invokevirtual #45                 // Method org/smallmind/web/reverse/http1_1/HttpFrame.getDirection:()Lorg/smallmind/web/reverse/http1_1/HttpDirection;
     278: getstatic     #46                 // Field org/smallmind/web/reverse/http1_1/HttpDirection.RESPONSE:Lorg/smallmind/web/reverse/http1_1/HttpDirection;
     281: invokevirtual #47                 // Method org/smallmind/web/reverse/http1_1/HttpDirection.equals:(Ljava/lang/Object;)Z
     284: ifeq          412
     287: aload         4
     289: checkcast     #48                 // class org/smallmind/web/reverse/http1_1/HttpResponseFrame
     292: invokevirtual #49                 // Method org/smallmind/web/reverse/http1_1/HttpResponseFrame.getStatus:()I
     295: bipush        101
     297: if_icmpne     412
     300: aload         4
     302: ldc           #50                 // String Upgrade
     304: invokevirtual #23                 // Method org/smallmind/web/reverse/http1_1/HttpFrame.getHeader:(Ljava/lang/String;)Lorg/smallmind/web/reverse/http1_1/HttpHeader;
     307: dup
     308: astore        7
     310: ifnull        412
     313: aload         7
     315: invokevirtual #24                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getValues:()Ljava/util/List;
     318: iconst_0
     319: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     324: checkcast     #26                 // class java/lang/String
     327: ldc           #51                 // String websocket
     329: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     332: ifeq          412
     335: new           #52                 // class org/smallmind/web/reverse/http1_1/WebSocketFrameReader
     338: dup
     339: aload_0
     340: getfield      #10                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
     343: aload_0
     344: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
     347: aload_0
     348: invokevirtual #53                 // Method getDestinationChannel:()Ljava/nio/channels/SocketChannel;
     351: aload_0
     352: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
     355: invokespecial #54                 // Method org/smallmind/web/reverse/http1_1/WebSocketFrameReader."<init>":(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;)V
     358: astore        8
     360: aload_0
     361: getfield      #10                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
     364: aload_0
     365: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
     368: invokevirtual #55                 // Method org/smallmind/web/reverse/http1_1/ReverseProxyService.keyFor:(Ljava/nio/channels/SelectableChannel;)Ljava/nio/channels/SelectionKey;
     371: new           #52                 // class org/smallmind/web/reverse/http1_1/WebSocketFrameReader
     374: dup
     375: aload_0
     376: getfield      #10                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
     379: aload_0
     380: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
     383: aload_0
     384: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
     387: aload_0
     388: invokevirtual #53                 // Method getDestinationChannel:()Ljava/nio/channels/SocketChannel;
     391: invokespecial #54                 // Method org/smallmind/web/reverse/http1_1/WebSocketFrameReader."<init>":(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;Ljava/nio/channels/SocketChannel;)V
     394: invokevirtual #34                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     397: pop
     398: aload_1
     399: aload         8
     401: invokevirtual #34                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
     404: pop
     405: aload         8
     407: aload_1
     408: aload_2
     409: invokevirtual #56                 // Method org/smallmind/web/reverse/http1_1/WebSocketFrameReader.processInput:(Ljava/nio/channels/SelectionKey;Ljava/nio/ByteBuffer;)V
     412: goto          434
     415: aload_0
     416: iconst_1
     417: putfield      #8                  // Field lineEnd:Z
     420: goto          434
     423: iload_3
     424: bipush        13
     426: if_icmpeq     434
     429: aload_0
     430: iconst_0
     431: putfield      #8                  // Field lineEnd:Z
     434: aload_0
     435: iload_3
     436: putfield      #9                  // Field lastChar:I
     439: goto          0
     442: goto          467
     445: astore_3
     446: aload_0
     447: getstatic     #58                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.BAD_REQUEST:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
     450: aconst_null
     451: invokevirtual #59                 // Method fail:(Lorg/smallmind/web/reverse/http1_1/CannedResponse;Ljava/nio/channels/SocketChannel;)V
     454: goto          467
     457: astore_3
     458: aload_0
     459: aload_3
     460: invokevirtual #60                 // Method org/smallmind/web/reverse/http1_1/ProtocolException.getCannedResponse:()Lorg/smallmind/web/reverse/http1_1/CannedResponse;
     463: aconst_null
     464: invokevirtual #59                 // Method fail:(Lorg/smallmind/web/reverse/http1_1/CannedResponse;Ljava/nio/channels/SocketChannel;)V
     467: return
    Exception table:
       from    to  target type
         134   190   193   Class java/lang/NumberFormatException
           0   442   445   Class java/io/IOException
           0   442   457   Class org/smallmind/web/reverse/http1_1/ProtocolException

  public void writeToBuffer(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
       4: invokevirtual #19                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream.asOutputStream:()Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayOutputStream;
       7: iload_1
       8: invokevirtual #61                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayOutputStream.write:(I)V
      11: return

  public synchronized void flushBufferToTarget(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field failed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          53
      10: aload_0
      11: getfield      #10                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
      14: aload_0
      15: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
      18: new           #63                 // class org/smallmind/web/reverse/http1_1/HttpFrameReader$FlushWorker
      21: dup
      22: aload_0
      23: aload_0
      24: getfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
      27: invokevirtual #16                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream.asInputStream:()Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayInputStream;
      30: invokevirtual #64                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayInputStream.readAvailable:()[B
      33: invokespecial #65                 // Method org/smallmind/web/reverse/http1_1/HttpFrameReader$FlushWorker."<init>":(Lorg/smallmind/web/reverse/http1_1/HttpFrameReader;[B)V
      36: invokevirtual #66                 // Method org/smallmind/web/reverse/http1_1/ReverseProxyService.execute:(Ljava/nio/channels/SocketChannel;Ljava/lang/Runnable;)V
      39: iload_1
      40: ifeq          53
      43: aload_0
      44: iconst_0
      45: putfield      #8                  // Field lineEnd:Z
      48: aload_0
      49: iconst_0
      50: putfield      #9                  // Field lastChar:I
      53: return

  public void fail(org.smallmind.web.reverse.http1_1.CannedResponse, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field failed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          52
      12: aload_0
      13: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
      16: aload_2
      17: invokevirtual #68                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      20: ifne          48
      23: aload_0
      24: invokevirtual #14                 // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
      27: aload_1
      28: invokevirtual #69                 // Method org/smallmind/web/reverse/http1_1/CannedResponse.getByteBuffer:()Ljava/nio/ByteBuffer;
      31: invokevirtual #70                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
      34: pop
      35: goto          48
      38: astore_3
      39: ldc           #71                 // class org/smallmind/web/reverse/http1_1/HttpFrameReader
      41: invokestatic  #72                 // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
      44: aload_3
      45: invokevirtual #73                 // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
      48: aload_0
      49: invokevirtual #74                 // Method closeChannels:()V
      52: return
    Exception table:
       from    to  target type
          23    35    38   Class java/io/IOException
}
