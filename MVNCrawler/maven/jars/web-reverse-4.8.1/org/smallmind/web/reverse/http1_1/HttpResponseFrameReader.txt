Compiled from "HttpResponseFrameReader.java"
public class org.smallmind.web.reverse.http1_1.HttpResponseFrameReader extends org.smallmind.web.reverse.http1_1.HttpFrameReader {
  private final java.nio.channels.SocketChannel destinationChannel;

  public org.smallmind.web.reverse.http1_1.HttpResponseFrameReader(org.smallmind.web.reverse.http1_1.ReverseProxyService, java.nio.channels.SocketChannel, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/smallmind/web/reverse/http1_1/HttpFrameReader."<init>":(Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;Ljava/nio/channels/SocketChannel;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field destinationChannel:Ljava/nio/channels/SocketChannel;
      11: return

  public void closeChannels();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destinationChannel:Ljava/nio/channels/SocketChannel;
       4: invokevirtual #3                  // Method java/nio/channels/SocketChannel.close:()V
       7: goto          20
      10: astore_1
      11: ldc           #5                  // class org/smallmind/web/reverse/http1_1/HttpRequestFrameReader
      13: invokestatic  #6                  // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
      16: aload_1
      17: invokevirtual #7                  // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
      20: aload_0
      21: invokevirtual #8                  // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
      24: invokevirtual #3                  // Method java/nio/channels/SocketChannel.close:()V
      27: goto          40
      30: astore_1
      31: ldc           #5                  // class org/smallmind/web/reverse/http1_1/HttpRequestFrameReader
      33: invokestatic  #6                  // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
      36: aload_1
      37: invokevirtual #7                  // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
      40: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException
          20    27    30   Class java/io/IOException

  public java.nio.channels.SocketChannel getTargetChannel();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getSourceChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn

  public java.nio.channels.SocketChannel getDestinationChannel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destinationChannel:Ljava/nio/channels/SocketChannel;
       4: areturn

  public org.smallmind.web.reverse.http1_1.HttpFrame getHttpFrame(org.smallmind.web.reverse.http1_1.ReverseProxyService, java.nio.channels.SocketChannel, org.smallmind.web.reverse.http1_1.HttpProtocolInputStream, org.smallmind.web.reverse.http1_1.HttpProtocolOutputStream) throws java.io.IOException, org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: aload_3
       1: ldc           #10                 // int 2147483647
       3: invokevirtual #11                 // Method org/smallmind/web/reverse/http1_1/HttpProtocolInputStream.mark:(I)V
       6: new           #12                 // class org/smallmind/web/reverse/http1_1/HttpResponseFrame
       9: dup
      10: aload_3
      11: invokespecial #13                 // Method org/smallmind/web/reverse/http1_1/HttpResponseFrame."<init>":(Lorg/smallmind/web/reverse/http1_1/HttpProtocolInputStream;)V
      14: astore        5
      16: aload_3
      17: invokevirtual #14                 // Method org/smallmind/web/reverse/http1_1/HttpProtocolInputStream.reset:()V
      20: aload         5
      22: areturn
}
