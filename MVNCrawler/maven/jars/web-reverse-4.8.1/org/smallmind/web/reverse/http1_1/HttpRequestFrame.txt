Compiled from "HttpRequestFrame.java"
public class org.smallmind.web.reverse.http1_1.HttpRequestFrame extends org.smallmind.web.reverse.http1_1.HttpFrame {
  private static final java.util.regex.Pattern REQUEST_LINE_PATTERN;

  private final org.smallmind.nutsnbolts.http.HttpMethod method;

  private final java.lang.String path;

  public org.smallmind.web.reverse.http1_1.HttpRequestFrame(org.smallmind.web.reverse.http1_1.HttpProtocolInputStream) throws java.io.IOException, org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method org/smallmind/web/reverse/http1_1/HttpProtocolInputStream.readLine:()Ljava/lang/String;
       6: invokestatic  #2                  // Method parseRequestLine:(Ljava/lang/String;)Ljava/util/regex/Matcher;
       9: invokespecial #3                  // Method "<init>":(Lorg/smallmind/web/reverse/http1_1/HttpProtocolInputStream;Ljava/util/regex/Matcher;)V
      12: return

  private org.smallmind.web.reverse.http1_1.HttpRequestFrame(org.smallmind.web.reverse.http1_1.HttpProtocolInputStream, java.util.regex.Matcher) throws java.io.IOException, org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_3
       4: invokevirtual #4                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       7: invokespecial #5                  // Method org/smallmind/web/reverse/http1_1/HttpFrame."<init>":(Lorg/smallmind/web/reverse/http1_1/HttpProtocolInputStream;Ljava/lang/String;)V
      10: aload_0
      11: aload_2
      12: iconst_1
      13: invokevirtual #4                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      16: invokestatic  #6                  // Method org/smallmind/nutsnbolts/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/smallmind/nutsnbolts/http/HttpMethod;
      19: putfield      #7                  // Field method:Lorg/smallmind/nutsnbolts/http/HttpMethod;
      22: goto          37
      25: astore_3
      26: new           #9                  // class org/smallmind/web/reverse/http1_1/ProtocolException
      29: dup
      30: getstatic     #10                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.BAD_REQUEST:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
      33: invokespecial #11                 // Method org/smallmind/web/reverse/http1_1/ProtocolException."<init>":(Lorg/smallmind/web/reverse/http1_1/CannedResponse;)V
      36: athrow
      37: aload_0
      38: aload_2
      39: iconst_2
      40: invokevirtual #4                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      43: putfield      #12                 // Field path:Ljava/lang/String;
      46: return
    Exception table:
       from    to  target type
          10    22    25   Class java/lang/Exception

  private static java.util.regex.Matcher parseRequestLine(java.lang.String) throws org.smallmind.web.reverse.http1_1.ProtocolException;
    Code:
       0: getstatic     #13                 // Field REQUEST_LINE_PATTERN:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #14                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: dup
       8: astore_1
       9: invokevirtual #15                 // Method java/util/regex/Matcher.matches:()Z
      12: ifne          26
      15: new           #9                  // class org/smallmind/web/reverse/http1_1/ProtocolException
      18: dup
      19: getstatic     #10                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.BAD_REQUEST:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
      22: invokespecial #11                 // Method org/smallmind/web/reverse/http1_1/ProtocolException."<init>":(Lorg/smallmind/web/reverse/http1_1/CannedResponse;)V
      25: athrow
      26: aload_1
      27: areturn

  public org.smallmind.web.reverse.http1_1.HttpDirection getDirection();
    Code:
       0: getstatic     #16                 // Field org/smallmind/web/reverse/http1_1/HttpDirection.REQUEST:Lorg/smallmind/web/reverse/http1_1/HttpDirection;
       3: areturn

  public org.smallmind.nutsnbolts.http.HttpMethod getMethod();
    Code:
       0: aload_0
       1: getfield      #7                  // Field method:Lorg/smallmind/nutsnbolts/http/HttpMethod;
       4: areturn

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #12                 // Field path:Ljava/lang/String;
       4: areturn

  public void toOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #17                 // Method getMethod:()Lorg/smallmind/nutsnbolts/http/HttpMethod;
       5: invokevirtual #18                 // Method org/smallmind/nutsnbolts/http/HttpMethod.name:()Ljava/lang/String;
       8: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
      11: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
      14: aload_1
      15: bipush        32
      17: invokevirtual #21                 // Method java/io/OutputStream.write:(I)V
      20: aload_1
      21: aload_0
      22: invokevirtual #22                 // Method getPath:()Ljava/lang/String;
      25: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
      28: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
      31: aload_1
      32: ldc           #23                 // String  HTTP/
      34: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
      37: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
      40: aload_1
      41: aload_0
      42: invokevirtual #24                 // Method getVersion:()Ljava/lang/String;
      45: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
      48: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
      51: aload_1
      52: ldc           #25                 // String \r\n
      54: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
      57: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
      60: aload_0
      61: invokevirtual #26                 // Method getHeaders:()Ljava/util/List;
      64: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      69: astore_2
      70: aload_2
      71: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          186
      79: aload_2
      80: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #30                 // class org/smallmind/web/reverse/http1_1/HttpHeader
      88: astore_3
      89: iconst_0
      90: istore        4
      92: aload_1
      93: aload_3
      94: invokevirtual #31                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getName:()Ljava/lang/String;
      97: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
     100: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
     103: aload_1
     104: ldc           #32                 // String :
     106: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
     109: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
     112: aload_3
     113: invokevirtual #33                 // Method org/smallmind/web/reverse/http1_1/HttpHeader.getValues:()Ljava/util/List;
     116: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     121: astore        5
     123: aload         5
     125: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          174
     133: aload         5
     135: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #34                 // class java/lang/String
     143: astore        6
     145: iload         4
     147: iinc          4, 1
     150: ifle          162
     153: aload_1
     154: ldc           #35                 // String ,
     156: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
     159: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
     162: aload_1
     163: aload         6
     165: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
     168: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
     171: goto          123
     174: aload_1
     175: ldc           #25                 // String \r\n
     177: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
     180: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
     183: goto          70
     186: aload_1
     187: ldc           #25                 // String \r\n
     189: invokevirtual #19                 // Method java/lang/String.getBytes:()[B
     192: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V
     195: return

  static {};
    Code:
       0: ldc           #36                 // String ([A-Z]+)\\s+(.+)\\s+HTTP/(\\d+\\.\\d+)
       2: invokestatic  #37                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #13                 // Field REQUEST_LINE_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
