Compiled from "WebSocketFrameReader.java"
public class org.smallmind.web.reverse.http1_1.WebSocketFrameReader implements org.smallmind.web.reverse.http1_1.FrameReader {
  private final org.smallmind.web.reverse.http1_1.ReverseProxyService reverseProxyService;

  private final java.nio.channels.SocketChannel sourceChannel;

  private final java.nio.channels.SocketChannel originChannel;

  private final java.nio.channels.SocketChannel targetChannel;

  private final org.smallmind.nutsnbolts.io.ByteArrayIOStream byteArrayIOStream;

  private final java.util.concurrent.atomic.AtomicBoolean failed;

  private final byte[] lengthArray;

  private org.smallmind.web.reverse.http1_1.WebSocketFrameReader$State state;

  private boolean opCodeRead;

  private long dataLength;

  private long dataBytesRead;

  private int lengthIndex;

  public org.smallmind.web.reverse.http1_1.WebSocketFrameReader(org.smallmind.web.reverse.http1_1.ReverseProxyService, java.nio.channels.SocketChannel, java.nio.channels.SocketChannel, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/smallmind/nutsnbolts/io/ByteArrayIOStream
       8: dup
       9: invokespecial #3                  // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream."<init>":()V
      12: putfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #7                  // Field failed:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: bipush        8
      30: newarray       byte
      32: putfield      #8                  // Field lengthArray:[B
      35: aload_0
      36: getstatic     #9                  // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.ONE_BYTE:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
      39: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
      42: aload_0
      43: iconst_0
      44: putfield      #11                 // Field opCodeRead:Z
      47: aload_0
      48: lconst_0
      49: putfield      #12                 // Field dataBytesRead:J
      52: aload_0
      53: iconst_0
      54: putfield      #13                 // Field lengthIndex:I
      57: aload_0
      58: aload_1
      59: putfield      #14                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
      62: aload_0
      63: aload_2
      64: putfield      #15                 // Field sourceChannel:Ljava/nio/channels/SocketChannel;
      67: aload_0
      68: aload_3
      69: putfield      #16                 // Field originChannel:Ljava/nio/channels/SocketChannel;
      72: aload_0
      73: aload         4
      75: putfield      #17                 // Field targetChannel:Ljava/nio/channels/SocketChannel;
      78: return

  public void closeChannels();
    Code:
       0: aload_0
       1: getfield      #17                 // Field targetChannel:Ljava/nio/channels/SocketChannel;
       4: invokevirtual #18                 // Method java/nio/channels/SocketChannel.close:()V
       7: goto          20
      10: astore_1
      11: ldc           #20                 // class org/smallmind/web/reverse/http1_1/HttpRequestFrameReader
      13: invokestatic  #21                 // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
      16: aload_1
      17: invokevirtual #22                 // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
      20: aload_0
      21: getfield      #16                 // Field originChannel:Ljava/nio/channels/SocketChannel;
      24: invokevirtual #18                 // Method java/nio/channels/SocketChannel.close:()V
      27: goto          40
      30: astore_1
      31: ldc           #20                 // class org/smallmind/web/reverse/http1_1/HttpRequestFrameReader
      33: invokestatic  #21                 // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
      36: aload_1
      37: invokevirtual #22                 // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
      40: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException
          20    27    30   Class java/io/IOException

  public void fail(org.smallmind.web.reverse.http1_1.CannedResponse, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field failed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          52
      12: aload_0
      13: getfield      #15                 // Field sourceChannel:Ljava/nio/channels/SocketChannel;
      16: aload_2
      17: invokevirtual #24                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      20: ifne          48
      23: aload_0
      24: getfield      #15                 // Field sourceChannel:Ljava/nio/channels/SocketChannel;
      27: aload_1
      28: invokevirtual #25                 // Method org/smallmind/web/reverse/http1_1/CannedResponse.getByteBuffer:()Ljava/nio/ByteBuffer;
      31: invokevirtual #26                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
      34: pop
      35: goto          48
      38: astore_3
      39: ldc           #27                 // class org/smallmind/web/reverse/http1_1/HttpFrameReader
      41: invokestatic  #21                 // Method org/smallmind/scribe/pen/LoggerManager.getLogger:(Ljava/lang/Class;)Lorg/smallmind/scribe/pen/Logger;
      44: aload_3
      45: invokevirtual #22                 // Method org/smallmind/scribe/pen/Logger.error:(Ljava/lang/Throwable;)V
      48: aload_0
      49: invokevirtual #28                 // Method closeChannels:()V
      52: return
    Exception table:
       from    to  target type
          23    35    38   Class java/io/IOException

  public void processInput(java.nio.channels.SelectionKey, java.nio.ByteBuffer);
    Code:
       0: aload_2
       1: invokevirtual #29                 // Method java/nio/ByteBuffer.remaining:()I
       4: ifle          365
       7: aload_0
       8: getfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
      11: invokevirtual #30                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream.asOutputStream:()Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayOutputStream;
      14: aload_2
      15: invokevirtual #31                 // Method java/nio/ByteBuffer.get:()B
      18: dup
      19: istore_3
      20: invokevirtual #32                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayOutputStream.write:(I)V
      23: aload_0
      24: getfield      #11                 // Field opCodeRead:Z
      27: ifne          38
      30: aload_0
      31: iconst_1
      32: putfield      #11                 // Field opCodeRead:Z
      35: goto          362
      38: getstatic     #33                 // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$1.$SwitchMap$org$smallmind$web$reverse$http1_1$WebSocketFrameReader$State:[I
      41: aload_0
      42: getfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
      45: invokevirtual #34                 // Method org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.ordinal:()I
      48: iaload
      49: tableswitch   { // 1 to 4
                     1: 80
                     2: 138
                     3: 202
                     4: 297
               default: 362
          }
      80: iload_3
      81: bipush        127
      83: iand
      84: i2b
      85: istore        4
      87: iload         4
      89: bipush        126
      91: if_icmpge     111
      94: aload_0
      95: iload         4
      97: i2l
      98: putfield      #35                 // Field dataLength:J
     101: aload_0
     102: getstatic     #36                 // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.DATA:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     105: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     108: goto          362
     111: iload         4
     113: bipush        126
     115: if_icmpne     128
     118: aload_0
     119: getstatic     #37                 // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.TWO_BYTES:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     122: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     125: goto          362
     128: aload_0
     129: getstatic     #38                 // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.EIGHT_BYTES:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     132: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     135: goto          362
     138: aload_0
     139: getfield      #8                  // Field lengthArray:[B
     142: aload_0
     143: dup
     144: getfield      #13                 // Field lengthIndex:I
     147: dup_x1
     148: iconst_1
     149: iadd
     150: putfield      #13                 // Field lengthIndex:I
     153: iload_3
     154: bastore
     155: aload_0
     156: getfield      #13                 // Field lengthIndex:I
     159: iconst_2
     160: if_icmpne     362
     163: aload_0
     164: aload_0
     165: getfield      #8                  // Field lengthArray:[B
     168: iconst_0
     169: baload
     170: sipush        255
     173: iand
     174: bipush        8
     176: ishl
     177: aload_0
     178: getfield      #8                  // Field lengthArray:[B
     181: iconst_1
     182: baload
     183: sipush        255
     186: iand
     187: iadd
     188: i2l
     189: putfield      #35                 // Field dataLength:J
     192: aload_0
     193: getstatic     #36                 // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.DATA:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     196: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     199: goto          362
     202: aload_0
     203: getfield      #8                  // Field lengthArray:[B
     206: aload_0
     207: dup
     208: getfield      #13                 // Field lengthIndex:I
     211: dup_x1
     212: iconst_1
     213: iadd
     214: putfield      #13                 // Field lengthIndex:I
     217: iload_3
     218: bastore
     219: aload_0
     220: getfield      #13                 // Field lengthIndex:I
     223: bipush        8
     225: if_icmpne     362
     228: aload_0
     229: aload_0
     230: getfield      #8                  // Field lengthArray:[B
     233: iconst_4
     234: baload
     235: sipush        255
     238: iand
     239: bipush        24
     241: ishl
     242: aload_0
     243: getfield      #8                  // Field lengthArray:[B
     246: iconst_5
     247: baload
     248: sipush        255
     251: iand
     252: bipush        16
     254: ishl
     255: iadd
     256: aload_0
     257: getfield      #8                  // Field lengthArray:[B
     260: bipush        6
     262: baload
     263: sipush        255
     266: iand
     267: bipush        8
     269: ishl
     270: iadd
     271: aload_0
     272: getfield      #8                  // Field lengthArray:[B
     275: bipush        7
     277: baload
     278: sipush        255
     281: iand
     282: iadd
     283: i2l
     284: putfield      #35                 // Field dataLength:J
     287: aload_0
     288: getstatic     #36                 // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.DATA:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     291: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     294: goto          362
     297: aload_0
     298: dup
     299: getfield      #12                 // Field dataBytesRead:J
     302: dup2_x1
     303: lconst_1
     304: ladd
     305: putfield      #12                 // Field dataBytesRead:J
     308: aload_0
     309: getfield      #35                 // Field dataLength:J
     312: lcmp
     313: ifne          362
     316: aload_0
     317: getstatic     #9                  // Field org/smallmind/web/reverse/http1_1/WebSocketFrameReader$State.ONE_BYTE:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     320: putfield      #10                 // Field state:Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader$State;
     323: aload_0
     324: iconst_0
     325: putfield      #13                 // Field lengthIndex:I
     328: aload_0
     329: lconst_0
     330: putfield      #12                 // Field dataBytesRead:J
     333: aload_0
     334: getfield      #14                 // Field reverseProxyService:Lorg/smallmind/web/reverse/http1_1/ReverseProxyService;
     337: aload_0
     338: getfield      #15                 // Field sourceChannel:Ljava/nio/channels/SocketChannel;
     341: new           #39                 // class org/smallmind/web/reverse/http1_1/WebSocketFrameReader$FlushWorker
     344: dup
     345: aload_0
     346: aload_0
     347: getfield      #4                  // Field byteArrayIOStream:Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream;
     350: invokevirtual #40                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream.asInputStream:()Lorg/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayInputStream;
     353: invokevirtual #41                 // Method org/smallmind/nutsnbolts/io/ByteArrayIOStream$ByteArrayInputStream.readAvailable:()[B
     356: invokespecial #42                 // Method org/smallmind/web/reverse/http1_1/WebSocketFrameReader$FlushWorker."<init>":(Lorg/smallmind/web/reverse/http1_1/WebSocketFrameReader;[B)V
     359: invokevirtual #43                 // Method org/smallmind/web/reverse/http1_1/ReverseProxyService.execute:(Ljava/nio/channels/SocketChannel;Ljava/lang/Runnable;)V
     362: goto          0
     365: goto          377
     368: astore_3
     369: aload_0
     370: getstatic     #44                 // Field org/smallmind/web/reverse/http1_1/CannedResponse.BAD_REQUEST:Lorg/smallmind/web/reverse/http1_1/CannedResponse;
     373: aconst_null
     374: invokevirtual #45                 // Method fail:(Lorg/smallmind/web/reverse/http1_1/CannedResponse;Ljava/nio/channels/SocketChannel;)V
     377: return
    Exception table:
       from    to  target type
           0   365   368   Class java/io/IOException
}
