Compiled from "SensuConfig.java"
public final class no.nav.common.metrics.SensuConfig {
  public static final long DEFAULT_SENSU_RETRY_INTERVAL;

  public static final int DEFAULT_SENSU_CONNECT_TIMEOUT;

  public static final int DEFAULT_SENSU_QUEUE_SIZE;

  public static final long DEFAULT_SENSU_MAX_BATCH_TIME;

  public static final int DEFAULT_SENSU_BATCH_SIZE;

  public static final boolean DEFAULT_SENSU_CLEANUP_ON_SHUTDOWN;

  public static final long SENSU_MIN_BATCH_TIME;

  public static final long SENSU_MIN_QUEUE_SIZE;

  private final java.lang.String sensuHost;

  private final int sensuPort;

  private final java.lang.String application;

  private final java.lang.String hostname;

  private final java.lang.String cluster;

  private final java.lang.String namespace;

  private final long retryInterval;

  private final int connectTimeout;

  private final int queueSize;

  private final long maxBatchTime;

  private final int batchSize;

  private final boolean cleanupOnShutdown;

  public static no.nav.common.metrics.SensuConfig defaultConfig();
    Code:
       0: invokestatic  #1                  // Method builder:()Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
       3: ldc           #2                  // String sensu.nais
       5: invokevirtual #3                  // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.sensuHost:(Ljava/lang/String;)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
       8: sipush        3030
      11: invokevirtual #4                  // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.sensuPort:(I)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      14: invokestatic  #5                  // Method no/nav/common/utils/EnvironmentUtils.requireApplicationName:()Ljava/lang/String;
      17: invokevirtual #6                  // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.application:(Ljava/lang/String;)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      20: invokestatic  #7                  // Method no/nav/common/utils/EnvironmentUtils.resolveHostName:()Ljava/lang/String;
      23: invokevirtual #8                  // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.hostname:(Ljava/lang/String;)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      26: invokestatic  #9                  // Method no/nav/common/utils/EnvironmentUtils.requireClusterName:()Ljava/lang/String;
      29: invokevirtual #10                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.cluster:(Ljava/lang/String;)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      32: invokestatic  #11                 // Method no/nav/common/utils/EnvironmentUtils.requireNamespace:()Ljava/lang/String;
      35: invokevirtual #12                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.namespace:(Ljava/lang/String;)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      38: ldc2_w        #14                 // long 5000l
      41: invokevirtual #16                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.retryInterval:(J)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      44: sipush        3000
      47: invokevirtual #17                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.connectTimeout:(I)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      50: sipush        20000
      53: invokevirtual #18                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.queueSize:(I)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      56: ldc2_w        #19                 // long 10000l
      59: invokevirtual #21                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.maxBatchTime:(J)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      62: sipush        500
      65: invokevirtual #22                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.batchSize:(I)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      68: iconst_1
      69: invokevirtual #23                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.cleanupOnShutdown:(Z)Lno/nav/common/metrics/SensuConfig$SensuConfigBuilder;
      72: invokevirtual #24                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder.build:()Lno/nav/common/metrics/SensuConfig;
      75: areturn

  no.nav.common.metrics.SensuConfig(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, int, int, long, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #26                 // Field sensuHost:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #27                 // Field sensuPort:I
      14: aload_0
      15: aload_3
      16: putfield      #28                 // Field application:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: putfield      #29                 // Field hostname:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #30                 // Field cluster:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: putfield      #31                 // Field namespace:Ljava/lang/String;
      37: aload_0
      38: lload         7
      40: putfield      #32                 // Field retryInterval:J
      43: aload_0
      44: iload         9
      46: putfield      #33                 // Field connectTimeout:I
      49: aload_0
      50: iload         10
      52: putfield      #34                 // Field queueSize:I
      55: aload_0
      56: lload         11
      58: putfield      #35                 // Field maxBatchTime:J
      61: aload_0
      62: iload         13
      64: putfield      #36                 // Field batchSize:I
      67: aload_0
      68: iload         14
      70: putfield      #37                 // Field cleanupOnShutdown:Z
      73: return

  public static no.nav.common.metrics.SensuConfig$SensuConfigBuilder builder();
    Code:
       0: new           #38                 // class no/nav/common/metrics/SensuConfig$SensuConfigBuilder
       3: dup
       4: invokespecial #39                 // Method no/nav/common/metrics/SensuConfig$SensuConfigBuilder."<init>":()V
       7: areturn

  public java.lang.String getSensuHost();
    Code:
       0: aload_0
       1: getfield      #26                 // Field sensuHost:Ljava/lang/String;
       4: areturn

  public int getSensuPort();
    Code:
       0: aload_0
       1: getfield      #27                 // Field sensuPort:I
       4: ireturn

  public java.lang.String getApplication();
    Code:
       0: aload_0
       1: getfield      #28                 // Field application:Ljava/lang/String;
       4: areturn

  public java.lang.String getHostname();
    Code:
       0: aload_0
       1: getfield      #29                 // Field hostname:Ljava/lang/String;
       4: areturn

  public java.lang.String getCluster();
    Code:
       0: aload_0
       1: getfield      #30                 // Field cluster:Ljava/lang/String;
       4: areturn

  public java.lang.String getNamespace();
    Code:
       0: aload_0
       1: getfield      #31                 // Field namespace:Ljava/lang/String;
       4: areturn

  public long getRetryInterval();
    Code:
       0: aload_0
       1: getfield      #32                 // Field retryInterval:J
       4: lreturn

  public int getConnectTimeout();
    Code:
       0: aload_0
       1: getfield      #33                 // Field connectTimeout:I
       4: ireturn

  public int getQueueSize();
    Code:
       0: aload_0
       1: getfield      #34                 // Field queueSize:I
       4: ireturn

  public long getMaxBatchTime();
    Code:
       0: aload_0
       1: getfield      #35                 // Field maxBatchTime:J
       4: lreturn

  public int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #36                 // Field batchSize:I
       4: ireturn

  public boolean isCleanupOnShutdown();
    Code:
       0: aload_0
       1: getfield      #37                 // Field cleanupOnShutdown:Z
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #13                 // class no/nav/common/metrics/SensuConfig
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #13                 // class no/nav/common/metrics/SensuConfig
      20: astore_2
      21: aload_0
      22: invokevirtual #40                 // Method getSensuPort:()I
      25: aload_2
      26: invokevirtual #40                 // Method getSensuPort:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokevirtual #41                 // Method getRetryInterval:()J
      38: aload_2
      39: invokevirtual #41                 // Method getRetryInterval:()J
      42: lcmp
      43: ifeq          48
      46: iconst_0
      47: ireturn
      48: aload_0
      49: invokevirtual #42                 // Method getConnectTimeout:()I
      52: aload_2
      53: invokevirtual #42                 // Method getConnectTimeout:()I
      56: if_icmpeq     61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: invokevirtual #43                 // Method getQueueSize:()I
      65: aload_2
      66: invokevirtual #43                 // Method getQueueSize:()I
      69: if_icmpeq     74
      72: iconst_0
      73: ireturn
      74: aload_0
      75: invokevirtual #44                 // Method getMaxBatchTime:()J
      78: aload_2
      79: invokevirtual #44                 // Method getMaxBatchTime:()J
      82: lcmp
      83: ifeq          88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: invokevirtual #45                 // Method getBatchSize:()I
      92: aload_2
      93: invokevirtual #45                 // Method getBatchSize:()I
      96: if_icmpeq     101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #46                 // Method isCleanupOnShutdown:()Z
     105: aload_2
     106: invokevirtual #46                 // Method isCleanupOnShutdown:()Z
     109: if_icmpeq     114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #47                 // Method getSensuHost:()Ljava/lang/String;
     118: astore_3
     119: aload_2
     120: invokevirtual #47                 // Method getSensuHost:()Ljava/lang/String;
     123: astore        4
     125: aload_3
     126: ifnonnull     137
     129: aload         4
     131: ifnull        148
     134: goto          146
     137: aload_3
     138: aload         4
     140: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     143: ifne          148
     146: iconst_0
     147: ireturn
     148: aload_0
     149: invokevirtual #49                 // Method getApplication:()Ljava/lang/String;
     152: astore        5
     154: aload_2
     155: invokevirtual #49                 // Method getApplication:()Ljava/lang/String;
     158: astore        6
     160: aload         5
     162: ifnonnull     173
     165: aload         6
     167: ifnull        185
     170: goto          183
     173: aload         5
     175: aload         6
     177: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     180: ifne          185
     183: iconst_0
     184: ireturn
     185: aload_0
     186: invokevirtual #50                 // Method getHostname:()Ljava/lang/String;
     189: astore        7
     191: aload_2
     192: invokevirtual #50                 // Method getHostname:()Ljava/lang/String;
     195: astore        8
     197: aload         7
     199: ifnonnull     210
     202: aload         8
     204: ifnull        222
     207: goto          220
     210: aload         7
     212: aload         8
     214: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     217: ifne          222
     220: iconst_0
     221: ireturn
     222: aload_0
     223: invokevirtual #51                 // Method getCluster:()Ljava/lang/String;
     226: astore        9
     228: aload_2
     229: invokevirtual #51                 // Method getCluster:()Ljava/lang/String;
     232: astore        10
     234: aload         9
     236: ifnonnull     247
     239: aload         10
     241: ifnull        259
     244: goto          257
     247: aload         9
     249: aload         10
     251: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     254: ifne          259
     257: iconst_0
     258: ireturn
     259: aload_0
     260: invokevirtual #52                 // Method getNamespace:()Ljava/lang/String;
     263: astore        11
     265: aload_2
     266: invokevirtual #52                 // Method getNamespace:()Ljava/lang/String;
     269: astore        12
     271: aload         11
     273: ifnonnull     284
     276: aload         12
     278: ifnull        296
     281: goto          294
     284: aload         11
     286: aload         12
     288: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     291: ifne          296
     294: iconst_0
     295: ireturn
     296: iconst_1
     297: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: invokevirtual #40                 // Method getSensuPort:()I
      13: iadd
      14: istore_2
      15: aload_0
      16: invokevirtual #41                 // Method getRetryInterval:()J
      19: lstore_3
      20: iload_2
      21: bipush        59
      23: imul
      24: lload_3
      25: bipush        32
      27: lushr
      28: lload_3
      29: lxor
      30: l2i
      31: iadd
      32: istore_2
      33: iload_2
      34: bipush        59
      36: imul
      37: aload_0
      38: invokevirtual #42                 // Method getConnectTimeout:()I
      41: iadd
      42: istore_2
      43: iload_2
      44: bipush        59
      46: imul
      47: aload_0
      48: invokevirtual #43                 // Method getQueueSize:()I
      51: iadd
      52: istore_2
      53: aload_0
      54: invokevirtual #44                 // Method getMaxBatchTime:()J
      57: lstore        5
      59: iload_2
      60: bipush        59
      62: imul
      63: lload         5
      65: bipush        32
      67: lushr
      68: lload         5
      70: lxor
      71: l2i
      72: iadd
      73: istore_2
      74: iload_2
      75: bipush        59
      77: imul
      78: aload_0
      79: invokevirtual #45                 // Method getBatchSize:()I
      82: iadd
      83: istore_2
      84: iload_2
      85: bipush        59
      87: imul
      88: aload_0
      89: invokevirtual #46                 // Method isCleanupOnShutdown:()Z
      92: ifeq          100
      95: bipush        79
      97: goto          102
     100: bipush        97
     102: iadd
     103: istore_2
     104: aload_0
     105: invokevirtual #47                 // Method getSensuHost:()Ljava/lang/String;
     108: astore        7
     110: iload_2
     111: bipush        59
     113: imul
     114: aload         7
     116: ifnonnull     124
     119: bipush        43
     121: goto          129
     124: aload         7
     126: invokevirtual #53                 // Method java/lang/Object.hashCode:()I
     129: iadd
     130: istore_2
     131: aload_0
     132: invokevirtual #49                 // Method getApplication:()Ljava/lang/String;
     135: astore        8
     137: iload_2
     138: bipush        59
     140: imul
     141: aload         8
     143: ifnonnull     151
     146: bipush        43
     148: goto          156
     151: aload         8
     153: invokevirtual #53                 // Method java/lang/Object.hashCode:()I
     156: iadd
     157: istore_2
     158: aload_0
     159: invokevirtual #50                 // Method getHostname:()Ljava/lang/String;
     162: astore        9
     164: iload_2
     165: bipush        59
     167: imul
     168: aload         9
     170: ifnonnull     178
     173: bipush        43
     175: goto          183
     178: aload         9
     180: invokevirtual #53                 // Method java/lang/Object.hashCode:()I
     183: iadd
     184: istore_2
     185: aload_0
     186: invokevirtual #51                 // Method getCluster:()Ljava/lang/String;
     189: astore        10
     191: iload_2
     192: bipush        59
     194: imul
     195: aload         10
     197: ifnonnull     205
     200: bipush        43
     202: goto          210
     205: aload         10
     207: invokevirtual #53                 // Method java/lang/Object.hashCode:()I
     210: iadd
     211: istore_2
     212: aload_0
     213: invokevirtual #52                 // Method getNamespace:()Ljava/lang/String;
     216: astore        11
     218: iload_2
     219: bipush        59
     221: imul
     222: aload         11
     224: ifnonnull     232
     227: bipush        43
     229: goto          237
     232: aload         11
     234: invokevirtual #53                 // Method java/lang/Object.hashCode:()I
     237: iadd
     238: istore_2
     239: iload_2
     240: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getSensuHost:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #40                 // Method getSensuPort:()I
       8: aload_0
       9: invokevirtual #49                 // Method getApplication:()Ljava/lang/String;
      12: aload_0
      13: invokevirtual #50                 // Method getHostname:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #51                 // Method getCluster:()Ljava/lang/String;
      20: aload_0
      21: invokevirtual #52                 // Method getNamespace:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #41                 // Method getRetryInterval:()J
      28: aload_0
      29: invokevirtual #42                 // Method getConnectTimeout:()I
      32: aload_0
      33: invokevirtual #43                 // Method getQueueSize:()I
      36: aload_0
      37: invokevirtual #44                 // Method getMaxBatchTime:()J
      40: aload_0
      41: invokevirtual #45                 // Method getBatchSize:()I
      44: aload_0
      45: invokevirtual #46                 // Method isCleanupOnShutdown:()Z
      48: invokedynamic #54,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)Ljava/lang/String;
      53: areturn

  public no.nav.common.metrics.SensuConfig withSensuHost(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #26                 // Field sensuHost:Ljava/lang/String;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_1
      17: aload_0
      18: getfield      #27                 // Field sensuPort:I
      21: aload_0
      22: getfield      #28                 // Field application:Ljava/lang/String;
      25: aload_0
      26: getfield      #29                 // Field hostname:Ljava/lang/String;
      29: aload_0
      30: getfield      #30                 // Field cluster:Ljava/lang/String;
      33: aload_0
      34: getfield      #31                 // Field namespace:Ljava/lang/String;
      37: aload_0
      38: getfield      #32                 // Field retryInterval:J
      41: aload_0
      42: getfield      #33                 // Field connectTimeout:I
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withSensuPort(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field sensuPort:I
       4: iload_1
       5: if_icmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: iload_1
      21: aload_0
      22: getfield      #28                 // Field application:Ljava/lang/String;
      25: aload_0
      26: getfield      #29                 // Field hostname:Ljava/lang/String;
      29: aload_0
      30: getfield      #30                 // Field cluster:Ljava/lang/String;
      33: aload_0
      34: getfield      #31                 // Field namespace:Ljava/lang/String;
      37: aload_0
      38: getfield      #32                 // Field retryInterval:J
      41: aload_0
      42: getfield      #33                 // Field connectTimeout:I
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withApplication(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field application:Ljava/lang/String;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_1
      25: aload_0
      26: getfield      #29                 // Field hostname:Ljava/lang/String;
      29: aload_0
      30: getfield      #30                 // Field cluster:Ljava/lang/String;
      33: aload_0
      34: getfield      #31                 // Field namespace:Ljava/lang/String;
      37: aload_0
      38: getfield      #32                 // Field retryInterval:J
      41: aload_0
      42: getfield      #33                 // Field connectTimeout:I
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withHostname(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #29                 // Field hostname:Ljava/lang/String;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_1
      29: aload_0
      30: getfield      #30                 // Field cluster:Ljava/lang/String;
      33: aload_0
      34: getfield      #31                 // Field namespace:Ljava/lang/String;
      37: aload_0
      38: getfield      #32                 // Field retryInterval:J
      41: aload_0
      42: getfield      #33                 // Field connectTimeout:I
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withCluster(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #30                 // Field cluster:Ljava/lang/String;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_0
      29: getfield      #29                 // Field hostname:Ljava/lang/String;
      32: aload_1
      33: aload_0
      34: getfield      #31                 // Field namespace:Ljava/lang/String;
      37: aload_0
      38: getfield      #32                 // Field retryInterval:J
      41: aload_0
      42: getfield      #33                 // Field connectTimeout:I
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withNamespace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field namespace:Ljava/lang/String;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_0
      29: getfield      #29                 // Field hostname:Ljava/lang/String;
      32: aload_0
      33: getfield      #30                 // Field cluster:Ljava/lang/String;
      36: aload_1
      37: aload_0
      38: getfield      #32                 // Field retryInterval:J
      41: aload_0
      42: getfield      #33                 // Field connectTimeout:I
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withRetryInterval(long);
    Code:
       0: aload_0
       1: getfield      #32                 // Field retryInterval:J
       4: lload_1
       5: lcmp
       6: ifne          13
       9: aload_0
      10: goto          65
      13: new           #13                 // class no/nav/common/metrics/SensuConfig
      16: dup
      17: aload_0
      18: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      21: aload_0
      22: getfield      #27                 // Field sensuPort:I
      25: aload_0
      26: getfield      #28                 // Field application:Ljava/lang/String;
      29: aload_0
      30: getfield      #29                 // Field hostname:Ljava/lang/String;
      33: aload_0
      34: getfield      #30                 // Field cluster:Ljava/lang/String;
      37: aload_0
      38: getfield      #31                 // Field namespace:Ljava/lang/String;
      41: lload_1
      42: aload_0
      43: getfield      #33                 // Field connectTimeout:I
      46: aload_0
      47: getfield      #34                 // Field queueSize:I
      50: aload_0
      51: getfield      #35                 // Field maxBatchTime:J
      54: aload_0
      55: getfield      #36                 // Field batchSize:I
      58: aload_0
      59: getfield      #37                 // Field cleanupOnShutdown:Z
      62: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      65: areturn

  public no.nav.common.metrics.SensuConfig withConnectTimeout(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field connectTimeout:I
       4: iload_1
       5: if_icmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_0
      29: getfield      #29                 // Field hostname:Ljava/lang/String;
      32: aload_0
      33: getfield      #30                 // Field cluster:Ljava/lang/String;
      36: aload_0
      37: getfield      #31                 // Field namespace:Ljava/lang/String;
      40: aload_0
      41: getfield      #32                 // Field retryInterval:J
      44: iload_1
      45: aload_0
      46: getfield      #34                 // Field queueSize:I
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withQueueSize(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field queueSize:I
       4: iload_1
       5: if_icmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_0
      29: getfield      #29                 // Field hostname:Ljava/lang/String;
      32: aload_0
      33: getfield      #30                 // Field cluster:Ljava/lang/String;
      36: aload_0
      37: getfield      #31                 // Field namespace:Ljava/lang/String;
      40: aload_0
      41: getfield      #32                 // Field retryInterval:J
      44: aload_0
      45: getfield      #33                 // Field connectTimeout:I
      48: iload_1
      49: aload_0
      50: getfield      #35                 // Field maxBatchTime:J
      53: aload_0
      54: getfield      #36                 // Field batchSize:I
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withMaxBatchTime(long);
    Code:
       0: aload_0
       1: getfield      #35                 // Field maxBatchTime:J
       4: lload_1
       5: lcmp
       6: ifne          13
       9: aload_0
      10: goto          65
      13: new           #13                 // class no/nav/common/metrics/SensuConfig
      16: dup
      17: aload_0
      18: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      21: aload_0
      22: getfield      #27                 // Field sensuPort:I
      25: aload_0
      26: getfield      #28                 // Field application:Ljava/lang/String;
      29: aload_0
      30: getfield      #29                 // Field hostname:Ljava/lang/String;
      33: aload_0
      34: getfield      #30                 // Field cluster:Ljava/lang/String;
      37: aload_0
      38: getfield      #31                 // Field namespace:Ljava/lang/String;
      41: aload_0
      42: getfield      #32                 // Field retryInterval:J
      45: aload_0
      46: getfield      #33                 // Field connectTimeout:I
      49: aload_0
      50: getfield      #34                 // Field queueSize:I
      53: lload_1
      54: aload_0
      55: getfield      #36                 // Field batchSize:I
      58: aload_0
      59: getfield      #37                 // Field cleanupOnShutdown:Z
      62: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      65: areturn

  public no.nav.common.metrics.SensuConfig withBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field batchSize:I
       4: iload_1
       5: if_icmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_0
      29: getfield      #29                 // Field hostname:Ljava/lang/String;
      32: aload_0
      33: getfield      #30                 // Field cluster:Ljava/lang/String;
      36: aload_0
      37: getfield      #31                 // Field namespace:Ljava/lang/String;
      40: aload_0
      41: getfield      #32                 // Field retryInterval:J
      44: aload_0
      45: getfield      #33                 // Field connectTimeout:I
      48: aload_0
      49: getfield      #34                 // Field queueSize:I
      52: aload_0
      53: getfield      #35                 // Field maxBatchTime:J
      56: iload_1
      57: aload_0
      58: getfield      #37                 // Field cleanupOnShutdown:Z
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn

  public no.nav.common.metrics.SensuConfig withCleanupOnShutdown(boolean);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cleanupOnShutdown:Z
       4: iload_1
       5: if_icmpne     12
       8: aload_0
       9: goto          64
      12: new           #13                 // class no/nav/common/metrics/SensuConfig
      15: dup
      16: aload_0
      17: getfield      #26                 // Field sensuHost:Ljava/lang/String;
      20: aload_0
      21: getfield      #27                 // Field sensuPort:I
      24: aload_0
      25: getfield      #28                 // Field application:Ljava/lang/String;
      28: aload_0
      29: getfield      #29                 // Field hostname:Ljava/lang/String;
      32: aload_0
      33: getfield      #30                 // Field cluster:Ljava/lang/String;
      36: aload_0
      37: getfield      #31                 // Field namespace:Ljava/lang/String;
      40: aload_0
      41: getfield      #32                 // Field retryInterval:J
      44: aload_0
      45: getfield      #33                 // Field connectTimeout:I
      48: aload_0
      49: getfield      #34                 // Field queueSize:I
      52: aload_0
      53: getfield      #35                 // Field maxBatchTime:J
      56: aload_0
      57: getfield      #36                 // Field batchSize:I
      60: iload_1
      61: invokespecial #55                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JIIJIZ)V
      64: areturn
}
