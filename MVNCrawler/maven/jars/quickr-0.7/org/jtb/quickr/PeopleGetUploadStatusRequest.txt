Compiled from "PeopleGetUploadStatusRequest.java"
class org.jtb.quickr.PeopleGetUploadStatusRequest extends org.jtb.quickr.SignedMethodRequest {
  private static org.apache.log4j.Logger logger;

  private java.lang.String nsId;

  protected org.jtb.quickr.PeopleGetUploadStatusRequest(java.lang.String, java.lang.String, java.lang.String, org.jtb.quickr.AuthResponse$Token, java.lang.String) throws org.jtb.quickr.QuickrException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: ldc           #1                  // String flickr.people.getUploadStatus
       8: invokespecial #2                  // Method org/jtb/quickr/SignedMethodRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jtb/quickr/AuthResponse$Token;Ljava/lang/String;)V
      11: aload_0
      12: aload         5
      14: putfield      #3                  // Field nsId:Ljava/lang/String;
      17: return

  protected java.util.Map<java.lang.String, java.lang.String> getArgs();
    Code:
       0: aload_0
       1: ldc           #4                  // String user_id
       3: aload_0
       4: getfield      #3                  // Field nsId:Ljava/lang/String;
       7: invokevirtual #5                  // Method putArg:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: invokespecial #6                  // Method org/jtb/quickr/SignedMethodRequest.getArgs:()Ljava/util/Map;
      14: areturn

  public org.jtb.quickr.UserResponse execute() throws org.jtb.quickr.QuickrException;
    Code:
       0: new           #7                  // class org/jtb/quickr/SignedMethodUrl
       3: dup
       4: aload_0
       5: invokevirtual #8                  // Method getBaseUrl:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #9                  // Method getArgs:()Ljava/util/Map;
      12: aload_0
      13: invokevirtual #10                 // Method getApiKey:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #11                 // Method getSecret:()Ljava/lang/String;
      20: aload_0
      21: invokevirtual #12                 // Method getAuthToken:()Lorg/jtb/quickr/AuthResponse$Token;
      24: aload_0
      25: invokevirtual #13                 // Method getMethod:()Ljava/lang/String;
      28: invokespecial #14                 // Method org/jtb/quickr/SignedMethodUrl."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lorg/jtb/quickr/AuthResponse$Token;Ljava/lang/String;)V
      31: astore_1
      32: new           #15                 // class org/jtb/quickr/Get
      35: dup
      36: aload_1
      37: invokevirtual #16                 // Method org/jtb/quickr/FlickrUrl.getUrl:()Ljava/net/URL;
      40: invokespecial #17                 // Method org/jtb/quickr/Get."<init>":(Ljava/net/URL;)V
      43: astore_2
      44: aload_2
      45: invokevirtual #18                 // Method org/jtb/quickr/Get.execute:()Ljava/io/InputStream;
      48: astore_3
      49: new           #19                 // class org/jtb/quickr/UserResponse
      52: dup
      53: aload_3
      54: invokespecial #20                 // Method org/jtb/quickr/UserResponse."<init>":(Ljava/io/InputStream;)V
      57: astore        4
      59: aload         4
      61: areturn

  public org.jtb.quickr.FlickrResponse execute() throws org.jtb.quickr.QuickrException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method execute:()Lorg/jtb/quickr/UserResponse;
       4: areturn

  static {};
    Code:
       0: ldc_w         #22                 // class org/jtb/quickr/PeopleGetUploadStatusRequest
       3: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #24                 // Method org/apache/log4j/Logger.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       9: putstatic     #25                 // Field logger:Lorg/apache/log4j/Logger;
      12: return
}
