Compiled from "PeopleGetInfoRequest.java"
class org.jtb.quickr.PeopleGetInfoRequest extends org.jtb.quickr.MethodRequest {
  private static org.apache.log4j.Logger logger;

  private java.lang.String nsId;

  private java.lang.String staticUrl;

  protected org.jtb.quickr.PeopleGetInfoRequest(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.jtb.quickr.QuickrException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #1                  // String flickr.people.getInfo
       5: invokespecial #2                  // Method org/jtb/quickr/MethodRequest."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       8: aload_0
       9: aload_3
      10: putfield      #3                  // Field nsId:Ljava/lang/String;
      13: aload_0
      14: aload         4
      16: putfield      #4                  // Field staticUrl:Ljava/lang/String;
      19: return

  protected java.util.Map<java.lang.String, java.lang.String> getArgs();
    Code:
       0: aload_0
       1: ldc           #5                  // String user_id
       3: aload_0
       4: invokevirtual #6                  // Method getNsid:()Ljava/lang/String;
       7: invokevirtual #7                  // Method putArg:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: invokespecial #8                  // Method org/jtb/quickr/MethodRequest.getArgs:()Ljava/util/Map;
      14: areturn

  public org.jtb.quickr.PersonResponse execute() throws org.jtb.quickr.QuickrException;
    Code:
       0: new           #9                  // class org/jtb/quickr/ServiceMethodUrl
       3: dup
       4: aload_0
       5: invokevirtual #10                 // Method getBaseUrl:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #11                 // Method getArgs:()Ljava/util/Map;
      12: aload_0
      13: invokevirtual #12                 // Method getApiKey:()Ljava/lang/String;
      16: aload_0
      17: invokevirtual #13                 // Method getMethod:()Ljava/lang/String;
      20: invokespecial #14                 // Method org/jtb/quickr/ServiceMethodUrl."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
      23: astore_1
      24: new           #15                 // class org/jtb/quickr/Get
      27: dup
      28: aload_1
      29: invokevirtual #16                 // Method org/jtb/quickr/FlickrUrl.getUrl:()Ljava/net/URL;
      32: invokespecial #17                 // Method org/jtb/quickr/Get."<init>":(Ljava/net/URL;)V
      35: astore_2
      36: aload_2
      37: invokevirtual #18                 // Method org/jtb/quickr/Get.execute:()Ljava/io/InputStream;
      40: astore_3
      41: new           #19                 // class org/jtb/quickr/PersonResponse
      44: dup
      45: aload_3
      46: aload_0
      47: getfield      #4                  // Field staticUrl:Ljava/lang/String;
      50: invokespecial #20                 // Method org/jtb/quickr/PersonResponse."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      53: astore        4
      55: aload         4
      57: areturn

  protected java.lang.String getNsid();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nsId:Ljava/lang/String;
       4: areturn

  public org.jtb.quickr.FlickrResponse execute() throws org.jtb.quickr.QuickrException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method execute:()Lorg/jtb/quickr/PersonResponse;
       4: areturn

  static {};
    Code:
       0: ldc_w         #22                 // class org/jtb/quickr/PeopleGetInfoRequest
       3: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #24                 // Method org/apache/log4j/Logger.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
       9: putstatic     #25                 // Field logger:Lorg/apache/log4j/Logger;
      12: return
}
