Compiled from "Permission.java"
public class org.eclipse.edc.policy.model.Permission extends org.eclipse.edc.policy.model.Rule {
  private final java.util.List<org.eclipse.edc.policy.model.Duty> duties;

  public org.eclipse.edc.policy.model.Permission();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/eclipse/edc/policy/model/Rule."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field duties:Ljava/util/List;
      15: return

  public java.util.List<org.eclipse.edc.policy.model.Duty> getDuties();
    Code:
       0: aload_0
       1: getfield      #4                  // Field duties:Ljava/util/List;
       4: areturn

  public <R> R accept(org.eclipse.edc.policy.model.Rule$Visitor<R>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #5,  2            // InterfaceMethod org/eclipse/edc/policy/model/Rule$Visitor.visitPermission:(Lorg/eclipse/edc/policy/model/Permission;)Ljava/lang/Object;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstraints:()Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #8,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      14: invokeinterface #9,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: ldc           #10                 // String ,
      21: invokestatic  #11                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      24: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      29: checkcast     #13                 // class java/lang/String
      32: invokedynamic #14,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      37: areturn

  public org.eclipse.edc.policy.model.Permission withTarget(java.lang.String);
    Code:
       0: invokestatic  #15                 // Method org/eclipse/edc/policy/model/Permission$Builder.newInstance:()Lorg/eclipse/edc/policy/model/Permission$Builder;
       3: aload_0
       4: getfield      #16                 // Field assigner:Ljava/lang/String;
       7: invokevirtual #17                 // Method org/eclipse/edc/policy/model/Permission$Builder.assigner:(Ljava/lang/String;)Lorg/eclipse/edc/policy/model/Rule$Builder;
      10: checkcast     #18                 // class org/eclipse/edc/policy/model/Permission$Builder
      13: aload_0
      14: getfield      #19                 // Field assignee:Ljava/lang/String;
      17: invokevirtual #20                 // Method org/eclipse/edc/policy/model/Permission$Builder.assignee:(Ljava/lang/String;)Lorg/eclipse/edc/policy/model/Rule$Builder;
      20: checkcast     #18                 // class org/eclipse/edc/policy/model/Permission$Builder
      23: aload_0
      24: getfield      #21                 // Field action:Lorg/eclipse/edc/policy/model/Action;
      27: invokevirtual #22                 // Method org/eclipse/edc/policy/model/Permission$Builder.action:(Lorg/eclipse/edc/policy/model/Action;)Lorg/eclipse/edc/policy/model/Rule$Builder;
      30: checkcast     #18                 // class org/eclipse/edc/policy/model/Permission$Builder
      33: aload_0
      34: getfield      #23                 // Field constraints:Ljava/util/List;
      37: invokevirtual #24                 // Method org/eclipse/edc/policy/model/Permission$Builder.constraints:(Ljava/util/List;)Lorg/eclipse/edc/policy/model/Rule$Builder;
      40: checkcast     #18                 // class org/eclipse/edc/policy/model/Permission$Builder
      43: aload_0
      44: getfield      #4                  // Field duties:Ljava/util/List;
      47: invokeinterface #7,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      52: aload_1
      53: invokedynamic #25,  0             // InvokeDynamic #2:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      58: invokeinterface #9,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      63: invokestatic  #26                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      66: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      71: checkcast     #27                 // class java/util/List
      74: invokevirtual #28                 // Method org/eclipse/edc/policy/model/Permission$Builder.duties:(Ljava/util/List;)Lorg/eclipse/edc/policy/model/Permission$Builder;
      77: aload_1
      78: invokevirtual #29                 // Method org/eclipse/edc/policy/model/Permission$Builder.target:(Ljava/lang/String;)Lorg/eclipse/edc/policy/model/Rule$Builder;
      81: checkcast     #18                 // class org/eclipse/edc/policy/model/Permission$Builder
      84: invokevirtual #30                 // Method org/eclipse/edc/policy/model/Permission$Builder.build:()Lorg/eclipse/edc/policy/model/Permission;
      87: areturn

  private static org.eclipse.edc.policy.model.Duty lambda$withTarget$0(java.lang.String, org.eclipse.edc.policy.model.Duty);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #31                 // Method org/eclipse/edc/policy/model/Duty.withTarget:(Ljava/lang/String;)Lorg/eclipse/edc/policy/model/Duty;
       5: areturn
}
