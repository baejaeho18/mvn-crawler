Compiled from "ResponseContentTypeHandlerImpl.java"
public class io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl implements io.vertx.ext.web.handler.ResponseContentTypeHandler {
  private final java.lang.String disableFlag;

  public io.vertx.ext.web.handler.impl.ResponseContentTypeHandlerImpl(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field disableFlag:Ljava/lang/String;
       9: return

  public void handle(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokedynamic #3,  0              // InvokeDynamic #0:handle:(Lio/vertx/ext/web/handler/impl/ResponseContentTypeHandlerImpl;Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
       8: invokeinterface #4,  2            // InterfaceMethod io/vertx/ext/web/RoutingContext.addHeadersEndHandler:(Lio/vertx/core/Handler;)I
      13: pop
      14: aload_1
      15: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
      20: return

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class io/vertx/ext/web/RoutingContext
       5: invokevirtual #7                  // Method handle:(Lio/vertx/ext/web/RoutingContext;)V
       8: return

  private void lambda$handle$0(io.vertx.ext.web.RoutingContext, java.lang.Void);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field disableFlag:Ljava/lang/String;
       5: invokeinterface #8,  2            // InterfaceMethod io/vertx/ext/web/RoutingContext.get:(Ljava/lang/String;)Ljava/lang/Object;
      10: ifnull        14
      13: return
      14: aload_1
      15: invokeinterface #9,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.getAcceptableContentType:()Ljava/lang/String;
      20: astore_3
      21: aload_3
      22: ifnonnull     26
      25: return
      26: aload_1
      27: invokeinterface #10,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      32: invokeinterface #11,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
      37: astore        4
      39: aload         4
      41: getstatic     #12                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      44: invokeinterface #13,  2           // InterfaceMethod io/vertx/core/MultiMap.contains:(Ljava/lang/CharSequence;)Z
      49: ifeq          53
      52: return
      53: ldc           #14                 // String 0
      55: aload         4
      57: getstatic     #15                 // Field io/vertx/core/http/HttpHeaders.CONTENT_LENGTH:Ljava/lang/CharSequence;
      60: invokeinterface #16,  2           // InterfaceMethod io/vertx/core/MultiMap.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
      65: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          83
      71: aload         4
      73: getstatic     #12                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      76: aload_3
      77: invokeinterface #18,  3           // InterfaceMethod io/vertx/core/MultiMap.add:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
      82: pop
      83: return
}
