Compiled from "ParsableHeaderValue.java"
public class io.vertx.ext.web.impl.ParsableHeaderValue implements io.vertx.ext.web.ParsedHeaderValue {
  private final java.lang.String headerContent;

  protected java.lang.String value;

  private float weight;

  private java.util.Map<java.lang.String, java.lang.String> parameter;

  private int paramsWeight;

  public io.vertx.ext.web.impl.ParsableHeaderValue(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String headerContent must not be null
       7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field headerContent:Ljava/lang/String;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field value:Ljava/lang/String;
      21: aload_0
      22: ldc           #6                  // float -1.0f
      24: putfield      #7                  // Field weight:F
      27: aload_0
      28: invokestatic  #8                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      31: putfield      #9                  // Field parameter:Ljava/util/Map;
      34: return

  public java.lang.String rawValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerContent:Ljava/lang/String;
       4: areturn

  public java.lang.String value();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: getfield      #5                  // Field value:Ljava/lang/String;
       8: areturn

  public float weight();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: getfield      #7                  // Field weight:F
       8: freturn

  public boolean isPermitted();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: getfield      #7                  // Field weight:F
       8: f2d
       9: ldc2_w        #11                 // double 0.001d
      12: dcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.lang.String parameter(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: getfield      #9                  // Field parameter:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #14                 // class java/lang/String
      17: areturn

  public java.util.Map<java.lang.String, java.lang.String> parameters();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: getfield      #9                  // Field parameter:Ljava/util/Map;
       8: invokestatic  #15                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      11: areturn

  public final boolean isMatchedBy(io.vertx.ext.web.ParsedHeaderValue);
    Code:
       0: aload_1
       1: checkcast     #16                 // class io/vertx/ext/web/impl/ParsableHeaderValue
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field headerContent:Ljava/lang/String;
       9: aload_2
      10: getfield      #4                  // Field headerContent:Ljava/lang/String;
      13: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          27
      19: aload_0
      20: aload_2
      21: invokevirtual #18                 // Method isMatchedBy2:(Lio/vertx/ext/web/impl/ParsableHeaderValue;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  protected boolean isMatchedBy2(io.vertx.ext.web.impl.ParsableHeaderValue);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_1
       5: getfield      #9                  // Field parameter:Ljava/util/Map;
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: getfield      #9                  // Field parameter:Ljava/util/Map;
      22: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_1
      33: getfield      #9                  // Field parameter:Ljava/util/Map;
      36: invokeinterface #20,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      41: invokeinterface #21,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore_2
      47: aload_2
      48: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          125
      56: aload_2
      57: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #24                 // class java/util/Map$Entry
      65: astore_3
      66: aload_0
      67: getfield      #9                  // Field parameter:Ljava/util/Map;
      70: aload_3
      71: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      76: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #14                 // class java/lang/String
      84: astore        4
      86: aload_3
      87: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      92: checkcast     #14                 // class java/lang/String
      95: astore        5
      97: aload         4
      99: ifnull        120
     102: aload         5
     104: invokevirtual #27                 // Method java/lang/String.isEmpty:()Z
     107: ifne          122
     110: aload         5
     112: aload         4
     114: invokevirtual #28                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     117: ifne          122
     120: iconst_0
     121: ireturn
     122: goto          47
     125: iconst_1
     126: ireturn

  public <T extends io.vertx.ext.web.ParsedHeaderValue> T findMatchedBy(java.util.Collection<T>);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          39
      16: aload_2
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #30                 // class io/vertx/ext/web/ParsedHeaderValue
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #31                 // Method isMatchedBy:(Lio/vertx/ext/web/ParsedHeaderValue;)Z
      31: ifeq          36
      34: aload_3
      35: areturn
      36: goto          7
      39: aconst_null
      40: areturn

  private void ensureParameterIsHashMap();
    Code:
       0: aload_0
       1: getfield      #9                  // Field parameter:Ljava/util/Map;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          23
      12: aload_0
      13: new           #32                 // class java/util/HashMap
      16: dup
      17: invokespecial #33                 // Method java/util/HashMap."<init>":()V
      20: putfield      #9                  // Field parameter:Ljava/util/Map;
      23: return

  protected void ensureHeaderProcessed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field weight:F
       4: fconst_0
       5: fcmpg
       6: ifge          60
       9: aload_0
      10: fconst_1
      11: putfield      #7                  // Field weight:F
      14: aload_0
      15: getfield      #4                  // Field headerContent:Ljava/lang/String;
      18: aload_0
      19: invokedynamic #34,  0             // InvokeDynamic #0:accept:(Lio/vertx/ext/web/impl/ParsableHeaderValue;)Ljava/util/function/Consumer;
      24: aload_0
      25: invokedynamic #35,  0             // InvokeDynamic #1:accept:(Lio/vertx/ext/web/impl/ParsableHeaderValue;)Ljava/util/function/Consumer;
      30: aload_0
      31: invokedynamic #36,  0             // InvokeDynamic #2:accept:(Lio/vertx/ext/web/impl/ParsableHeaderValue;)Ljava/util/function/BiConsumer;
      36: invokestatic  #37                 // Method io/vertx/ext/web/impl/HeaderParser.parseHeaderValue:(Ljava/lang/String;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;)V
      39: aload_0
      40: aload_0
      41: getfield      #9                  // Field parameter:Ljava/util/Map;
      44: invokeinterface #19,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      49: ifeq          56
      52: iconst_0
      53: goto          57
      56: iconst_1
      57: putfield      #38                 // Field paramsWeight:I
      60: return

  public io.vertx.ext.web.impl.ParsableHeaderValue forceParse();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: areturn

  private void setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field value:Ljava/lang/String;
       5: return

  private void addParameter(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method ensureParameterIsHashMap:()V
       4: aload_2
       5: ifnonnull     26
       8: ldc           #40                 // String
      10: astore_2
      11: aload_0
      12: iconst_1
      13: aload_0
      14: getfield      #38                 // Field paramsWeight:I
      17: invokestatic  #41                 // Method java/lang/Math.max:(II)I
      20: putfield      #38                 // Field paramsWeight:I
      23: goto          38
      26: aload_0
      27: iconst_2
      28: aload_0
      29: getfield      #38                 // Field paramsWeight:I
      32: invokestatic  #41                 // Method java/lang/Math.max:(II)I
      35: putfield      #38                 // Field paramsWeight:I
      38: aload_0
      39: getfield      #9                  // Field parameter:Ljava/util/Map;
      42: aload_1
      43: aload_2
      44: invokeinterface #42,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: return

  private void setWeight(float);
    Code:
       0: aload_0
       1: fconst_0
       2: fconst_1
       3: fload_1
       4: invokestatic  #43                 // Method java/lang/Math.min:(FF)F
       7: invokestatic  #44                 // Method java/lang/Math.max:(FF)F
      10: ldc           #45                 // float 100.0f
      12: fmul
      13: f2i
      14: i2f
      15: ldc           #45                 // float 100.0f
      17: fdiv
      18: putfield      #7                  // Field weight:F
      21: return

  public final int weightedOrder();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method ensureHeaderProcessed:()V
       4: aload_0
       5: invokevirtual #46                 // Method weight:()F
       8: ldc           #47                 // float 1000.0f
      10: fmul
      11: f2i
      12: aload_0
      13: invokevirtual #48                 // Method weightedOrderPart2:()I
      16: bipush        10
      18: imul
      19: iadd
      20: aload_0
      21: getfield      #38                 // Field paramsWeight:I
      24: iadd
      25: ireturn

  protected int weightedOrderPart2();
    Code:
       0: iconst_0
       1: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #49                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field headerContent:Ljava/lang/String;
      10: aastore
      11: invokestatic  #50                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #16                 // class io/vertx/ext/web/impl/ParsableHeaderValue
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #16                 // class io/vertx/ext/web/impl/ParsableHeaderValue
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field headerContent:Ljava/lang/String;
      25: ifnonnull     41
      28: aload_2
      29: getfield      #4                  // Field headerContent:Ljava/lang/String;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #4                  // Field headerContent:Ljava/lang/String;
      45: aload_2
      46: getfield      #4                  // Field headerContent:Ljava/lang/String;
      49: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ireturn
}
