Compiled from "JsonPTransport.java"
class io.vertx.ext.web.handler.sockjs.impl.JsonPTransport extends io.vertx.ext.web.handler.sockjs.impl.BaseTransport {
  private static final io.vertx.core.impl.logging.Logger LOG;

  private static final java.util.regex.Pattern CALLBACK_VALIDATION;

  private final io.vertx.core.Handler<io.vertx.ext.web.handler.sockjs.SockJSSocket> sockHandler;

  io.vertx.ext.web.handler.sockjs.impl.JsonPTransport(io.vertx.core.Vertx, io.vertx.ext.web.Router, io.vertx.core.shareddata.LocalMap<java.lang.String, io.vertx.ext.web.handler.sockjs.impl.SockJSSession>, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, io.vertx.core.Handler<io.vertx.ext.web.handler.sockjs.SockJSSocket>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: invokespecial #2                  // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport."<init>":(Lio/vertx/core/Vertx;Lio/vertx/core/shareddata/LocalMap;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;)V
       8: aload_0
       9: aload         5
      11: putfield      #3                  // Field sockHandler:Lio/vertx/core/Handler;
      14: ldc           #5                  // String \\/[^\\/\\.]+\\/([^\\/\\.]+)\\/jsonp
      16: astore        6
      18: aload_2
      19: aload         6
      21: invokeinterface #6,  2            // InterfaceMethod io/vertx/ext/web/Router.getWithRegex:(Ljava/lang/String;)Lio/vertx/ext/web/Route;
      26: aload_0
      27: invokedynamic #7,  0              // InvokeDynamic #0:handle:(Lio/vertx/ext/web/handler/sockjs/impl/JsonPTransport;)Lio/vertx/ext/web/handler/PlatformHandler;
      32: invokeinterface #8,  2            // InterfaceMethod io/vertx/ext/web/Route.handler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/Route;
      37: pop
      38: ldc           #9                  // String \\/[^\\/\\.]+\\/([^\\/\\.]+)\\/jsonp_send
      40: astore        7
      42: aload_2
      43: aload         7
      45: invokeinterface #10,  2           // InterfaceMethod io/vertx/ext/web/Router.postWithRegex:(Ljava/lang/String;)Lio/vertx/ext/web/Route;
      50: aload_0
      51: invokedynamic #11,  0             // InvokeDynamic #1:handle:(Lio/vertx/ext/web/handler/sockjs/impl/JsonPTransport;)Lio/vertx/ext/web/handler/PlatformHandler;
      56: invokeinterface #8,  2            // InterfaceMethod io/vertx/ext/web/Route.handler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/Route;
      61: pop
      62: return

  private void handleGet(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: ldc           #13                 // String callback
       8: invokeinterface #14,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getParam:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: ifnonnull     66
      18: aload_1
      19: invokeinterface #12,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      24: ldc           #15                 // String c
      26: invokeinterface #14,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getParam:(Ljava/lang/String;)Ljava/lang/String;
      31: astore_2
      32: aload_2
      33: ifnonnull     66
      36: aload_1
      37: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      42: sipush        500
      45: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      50: pop
      51: aload_1
      52: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      57: ldc           #18                 // String \"callback\" parameter required\n
      59: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
      64: pop
      65: return
      66: aload_2
      67: invokevirtual #20                 // Method java/lang/String.length:()I
      70: bipush        32
      72: if_icmpgt     88
      75: getstatic     #21                 // Field CALLBACK_VALIDATION:Ljava/util/regex/Pattern;
      78: aload_2
      79: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      82: invokevirtual #23                 // Method java/util/regex/Matcher.find:()Z
      85: ifeq          118
      88: aload_1
      89: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      94: sipush        500
      97: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
     102: pop
     103: aload_1
     104: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     109: ldc           #24                 // String invalid \"callback\" parameter\n
     111: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     116: pop
     117: return
     118: aload_1
     119: invokeinterface #12,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
     124: astore_3
     125: aload_3
     126: invokeinterface #25,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.params:()Lio/vertx/core/MultiMap;
     131: ldc           #26                 // String param0
     133: invokeinterface #27,  2           // InterfaceMethod io/vertx/core/MultiMap.get:(Ljava/lang/String;)Ljava/lang/String;
     138: astore        4
     140: aload_0
     141: aload_1
     142: aload_0
     143: getfield      #28                 // Field options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
     146: aload         4
     148: aload_0
     149: getfield      #3                  // Field sockHandler:Lio/vertx/core/Handler;
     152: invokevirtual #29                 // Method getSession:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;
     155: astore        5
     157: aload         5
     159: aload_3
     160: new           #30                 // class io/vertx/ext/web/handler/sockjs/impl/JsonPTransport$JsonPListener
     163: dup
     164: aload_0
     165: aload_1
     166: aload         5
     168: aload_2
     169: invokespecial #31                 // Method io/vertx/ext/web/handler/sockjs/impl/JsonPTransport$JsonPListener."<init>":(Lio/vertx/ext/web/handler/sockjs/impl/JsonPTransport;Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;Ljava/lang/String;)V
     172: invokevirtual #32                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession.register:(Lio/vertx/core/http/HttpServerRequest;Lio/vertx/ext/web/handler/sockjs/impl/TransportListener;)V
     175: return

  private void handlePost(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: ldc           #26                 // String param0
       8: invokeinterface #14,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getParam:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_2
      14: aload_0
      15: getfield      #33                 // Field sessions:Lio/vertx/core/shareddata/LocalMap;
      18: aload_2
      19: invokeinterface #34,  2           // InterfaceMethod io/vertx/core/shareddata/LocalMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #35                 // class io/vertx/ext/web/handler/sockjs/impl/SockJSSession
      27: astore_3
      28: aload_3
      29: ifnull        48
      32: aload_3
      33: invokevirtual #36                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession.isClosed:()Z
      36: ifne          48
      39: aload_0
      40: aload_1
      41: aload_3
      42: invokespecial #37                 // Method handleSend:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;)V
      45: goto          83
      48: aload_1
      49: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      54: sipush        404
      57: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      62: pop
      63: aload_0
      64: getfield      #28                 // Field options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
      67: aload_1
      68: invokestatic  #38                 // Method setJSESSIONID:(Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/ext/web/RoutingContext;)V
      71: aload_1
      72: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      77: invokeinterface #39,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      82: pop
      83: return

  private void handleSend(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.handler.sockjs.impl.SockJSSession);
    Code:
       0: aload_1
       1: invokeinterface #40,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.body:()Lio/vertx/ext/web/RequestBody;
       6: astore_3
       7: aload_3
       8: invokeinterface #41,  1           // InterfaceMethod io/vertx/ext/web/RequestBody.available:()Z
      13: ifne          35
      16: aload_1
      17: sipush        500
      20: new           #42                 // class io/vertx/core/impl/NoStackTraceThrowable
      23: dup
      24: ldc           #43                 // String BodyHandler is required to process POST requests
      26: invokespecial #44                 // Method io/vertx/core/impl/NoStackTraceThrowable."<init>":(Ljava/lang/String;)V
      29: invokeinterface #45,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(ILjava/lang/Throwable;)V
      34: return
      35: aload_1
      36: invokeinterface #12,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      41: getstatic     #46                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      44: invokeinterface #47,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      49: astore        5
      51: ldc           #48                 // String application/x-www-form-urlencoded
      53: aload         5
      55: invokevirtual #49                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      58: ifeq          67
      61: iconst_1
      62: istore        4
      64: goto          113
      67: ldc           #50                 // String text/plain
      69: aload         5
      71: invokevirtual #49                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      74: ifeq          83
      77: iconst_0
      78: istore        4
      80: goto          113
      83: aload_1
      84: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      89: sipush        500
      92: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      97: pop
      98: aload_1
      99: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     104: ldc           #51                 // String Invalid Content-Type
     106: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     111: pop
     112: return
     113: aload_3
     114: invokeinterface #52,  1           // InterfaceMethod io/vertx/ext/web/RequestBody.asString:()Ljava/lang/String;
     119: astore        6
     121: aload_3
     122: invokeinterface #53,  1           // InterfaceMethod io/vertx/ext/web/RequestBody.length:()I
     127: ifle          155
     130: iload         4
     132: ifeq          178
     135: aload_3
     136: invokeinterface #53,  1           // InterfaceMethod io/vertx/ext/web/RequestBody.length:()I
     141: iconst_2
     142: if_icmple     155
     145: aload         6
     147: ldc           #54                 // String d=
     149: invokevirtual #55                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     152: ifne          178
     155: aload_1
     156: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     161: sipush        500
     164: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
     169: ldc           #56                 // String Payload expected.
     171: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     176: pop
     177: return
     178: iload         4
     180: ifeq          195
     183: aload         6
     185: iconst_1
     186: invokestatic  #57                 // Method io/vertx/core/net/impl/URIDecoder.decodeURIComponent:(Ljava/lang/String;Z)Ljava/lang/String;
     189: iconst_2
     190: invokevirtual #58                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     193: astore        6
     195: aload_2
     196: aload         6
     198: invokevirtual #59                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession.handleMessages:(Ljava/lang/String;)Z
     201: ifne          217
     204: aload_0
     205: aload_1
     206: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     211: invokevirtual #60                 // Method sendInvalidJSON:(Lio/vertx/core/http/HttpServerResponse;)V
     214: goto          281
     217: aload_0
     218: getfield      #28                 // Field options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
     221: aload_1
     222: invokestatic  #38                 // Method setJSESSIONID:(Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/ext/web/RoutingContext;)V
     225: aload_1
     226: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     231: getstatic     #46                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
     234: ldc           #61                 // String text/plain; charset=UTF-8
     236: invokeinterface #62,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     241: pop
     242: aload_1
     243: invokestatic  #63                 // Method setNoCacheHeaders:(Lio/vertx/ext/web/RoutingContext;)V
     246: aload_1
     247: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     252: ldc           #64                 // String ok
     254: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     259: pop
     260: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
     263: invokeinterface #65,  1           // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
     268: ifeq          281
     271: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
     274: ldc           #66                 // String send handled ok
     276: invokeinterface #67,  2           // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
     281: return

  static io.vertx.core.impl.logging.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #68                 // class io/vertx/ext/web/handler/sockjs/impl/JsonPTransport
       2: invokestatic  #69                 // Method io/vertx/core/impl/logging/LoggerFactory.getLogger:(Ljava/lang/Class;)Lio/vertx/core/impl/logging/Logger;
       5: putstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       8: ldc           #70                 // String [^a-zA-Z0-9-_.]
      10: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #21                 // Field CALLBACK_VALIDATION:Ljava/util/regex/Pattern;
      16: return
}
