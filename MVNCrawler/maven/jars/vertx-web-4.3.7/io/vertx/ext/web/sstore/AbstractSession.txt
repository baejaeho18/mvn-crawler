Compiled from "AbstractSession.java"
public abstract class io.vertx.ext.web.sstore.AbstractSession implements io.vertx.ext.web.Session,io.vertx.ext.web.sstore.impl.SessionInternal {
  private static final char[] HEX;

  private io.vertx.ext.auth.VertxContextPRNG prng;

  private java.lang.String id;

  private long timeout;

  private volatile java.util.Map<java.lang.String, java.lang.Object> data;

  private long lastAccessed;

  private int version;

  private boolean destroyed;

  private boolean renewed;

  private java.lang.String oldId;

  private int crc;

  protected void setId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field id:Ljava/lang/String;
       5: return

  protected void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field timeout:J
       5: return

  protected void setData(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field data:Ljava/util/Map;
       9: aload_0
      10: aload_0
      11: invokevirtual #4                  // Method checksum:()I
      14: putfield      #5                  // Field crc:I
      17: return

  protected void setData(io.vertx.core.json.JsonObject);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method io/vertx/core/json/JsonObject.getMap:()Ljava/util/Map;
       9: invokevirtual #7                  // Method setData:(Ljava/util/Map;)V
      12: return

  protected void setLastAccessed(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field lastAccessed:J
       5: return

  protected void setVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field version:I
       5: return

  public io.vertx.ext.web.sstore.AbstractSession();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: return

  public io.vertx.ext.web.sstore.AbstractSession(io.vertx.ext.auth.VertxContextPRNG);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #11                 // Field prng:Lio/vertx/ext/auth/VertxContextPRNG;
       9: return

  public io.vertx.ext.web.sstore.AbstractSession(io.vertx.ext.auth.VertxContextPRNG, long, int);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #11                 // Field prng:Lio/vertx/ext/auth/VertxContextPRNG;
       9: aload_0
      10: aload_0
      11: getfield      #11                 // Field prng:Lio/vertx/ext/auth/VertxContextPRNG;
      14: iload         4
      16: invokestatic  #12                 // Method generateId:(Lio/vertx/ext/auth/VertxContextPRNG;I)Ljava/lang/String;
      19: putfield      #1                  // Field id:Ljava/lang/String;
      22: aload_0
      23: lload_2
      24: putfield      #2                  // Field timeout:J
      27: aload_0
      28: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
      31: putfield      #8                  // Field lastAccessed:J
      34: return

  public void setPRNG(io.vertx.ext.auth.VertxContextPRNG);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field prng:Lio/vertx/ext/auth/VertxContextPRNG;
       5: return

  public void flushed(boolean);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #14                 // Field renewed:Z
       5: aload_0
       6: getfield      #15                 // Field oldId:Ljava/lang/String;
       9: ifnull        29
      12: iload_1
      13: ifne          24
      16: aload_0
      17: aload_0
      18: invokevirtual #4                  // Method checksum:()I
      21: putfield      #5                  // Field crc:I
      24: aload_0
      25: aconst_null
      26: putfield      #15                 // Field oldId:Ljava/lang/String;
      29: return

  public java.lang.String id();
    Code:
       0: aload_0
       1: getfield      #1                  // Field id:Ljava/lang/String;
       4: areturn

  public io.vertx.ext.web.Session regenerateId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field oldId:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: getfield      #1                  // Field id:Ljava/lang/String;
      12: putfield      #15                 // Field oldId:Ljava/lang/String;
      15: aload_0
      16: aload_0
      17: getfield      #11                 // Field prng:Lio/vertx/ext/auth/VertxContextPRNG;
      20: aload_0
      21: getfield      #15                 // Field oldId:Ljava/lang/String;
      24: invokevirtual #16                 // Method java/lang/String.length:()I
      27: iconst_2
      28: idiv
      29: invokestatic  #12                 // Method generateId:(Lio/vertx/ext/auth/VertxContextPRNG;I)Ljava/lang/String;
      32: putfield      #1                  // Field id:Ljava/lang/String;
      35: aload_0
      36: iconst_1
      37: putfield      #14                 // Field renewed:Z
      40: aload_0
      41: areturn

  public long timeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field timeout:J
       4: lreturn

  public <T> T get(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isEmpty:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #18                 // Method data:()Ljava/util/Map;
      13: aload_1
      14: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: areturn

  public io.vertx.ext.web.Session put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method data:()Ljava/util/Map;
       4: astore_3
       5: aload_2
       6: ifnonnull     20
       9: aload_3
      10: aload_1
      11: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: goto          29
      20: aload_3
      21: aload_1
      22: aload_2
      23: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: areturn

  public io.vertx.ext.web.Session putIfAbsent(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method data:()Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.vertx.ext.web.Session computeIfAbsent(java.lang.String, java.util.function.Function<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method data:()Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public <T> T remove(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isEmpty:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokevirtual #18                 // Method data:()Ljava/util/Map;
      13: aload_1
      14: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: areturn

  public java.util.Map<java.lang.String, java.lang.Object> data();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:Ljava/util/Map;
       4: ifnonnull     56
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #3                  // Field data:Ljava/util/Map;
      15: ifnonnull     46
      18: aload_0
      19: getfield      #24                 // Field destroyed:Z
      22: ifeq          35
      25: aload_0
      26: invokevirtual #25                 // Method regenerateId:()Lio/vertx/ext/web/Session;
      29: pop
      30: aload_0
      31: iconst_0
      32: putfield      #24                 // Field destroyed:Z
      35: aload_0
      36: new           #26                 // class java/util/concurrent/ConcurrentHashMap
      39: dup
      40: invokespecial #27                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      43: putfield      #3                  // Field data:Ljava/util/Map;
      46: aload_1
      47: monitorexit
      48: goto          56
      51: astore_2
      52: aload_1
      53: monitorexit
      54: aload_2
      55: athrow
      56: aload_0
      57: getfield      #3                  // Field data:Ljava/util/Map;
      60: areturn
    Exception table:
       from    to  target type
          11    48    51   any
          51    54    51   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #3                  // Field data:Ljava/util/Map;
      11: invokeinterface #28,  1           // InterfaceMethod java/util/Map.size:()I
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public long lastAccessed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lastAccessed:J
       4: lreturn

  public void setAccessed();
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #8                  // Field lastAccessed:J
       7: return

  public void destroy();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: iconst_1
       6: putfield      #24                 // Field destroyed:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field data:Ljava/util/Map;
      14: aload_1
      15: monitorexit
      16: goto          24
      19: astore_2
      20: aload_1
      21: monitorexit
      22: aload_2
      23: athrow
      24: return
    Exception table:
       from    to  target type
           4    16    19   any
          19    22    19   any

  public boolean isDestroyed();
    Code:
       0: aload_0
       1: getfield      #24                 // Field destroyed:Z
       4: ireturn

  public boolean isRegenerated();
    Code:
       0: aload_0
       1: getfield      #14                 // Field renewed:Z
       4: ireturn

  public java.lang.String oldId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field oldId:Ljava/lang/String;
       4: areturn

  public int version();
    Code:
       0: aload_0
       1: getfield      #9                  // Field version:I
       4: ireturn

  public void incrementVersion();
    Code:
       0: aload_0
       1: getfield      #5                  // Field crc:I
       4: istore_1
       5: aload_0
       6: aload_0
       7: invokevirtual #4                  // Method checksum:()I
      10: putfield      #5                  // Field crc:I
      13: aload_0
      14: getfield      #5                  // Field crc:I
      17: iload_1
      18: if_icmpeq     31
      21: aload_0
      22: dup
      23: getfield      #9                  // Field version:I
      26: iconst_1
      27: iadd
      28: putfield      #9                  // Field version:I
      31: return

  private static java.lang.String generateId(io.vertx.ext.auth.VertxContextPRNG, int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokeinterface #29,  2           // InterfaceMethod io/vertx/ext/auth/VertxContextPRNG.nextBytes:([B)V
      11: iload_1
      12: iconst_2
      13: imul
      14: newarray       char
      16: astore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_1
      23: if_icmpge     73
      26: aload_2
      27: iload         4
      29: baload
      30: sipush        255
      33: iand
      34: istore        5
      36: aload_3
      37: iload         4
      39: iconst_2
      40: imul
      41: getstatic     #30                 // Field HEX:[C
      44: iload         5
      46: iconst_4
      47: iushr
      48: caload
      49: castore
      50: aload_3
      51: iload         4
      53: iconst_2
      54: imul
      55: iconst_1
      56: iadd
      57: getstatic     #30                 // Field HEX:[C
      60: iload         5
      62: bipush        15
      64: iand
      65: caload
      66: castore
      67: iinc          4, 1
      70: goto          20
      73: new           #31                 // class java/lang/String
      76: dup
      77: aload_3
      78: invokespecial #32                 // Method java/lang/String."<init>":([C)V
      81: areturn

  protected int crc();
    Code:
       0: aload_0
       1: getfield      #5                  // Field crc:I
       4: ireturn

  protected int checksum();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method isEmpty:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: iconst_1
      10: istore_1
      11: aload_0
      12: getfield      #3                  // Field data:Ljava/util/Map;
      15: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          94
      35: aload_2
      36: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #37                 // class java/util/Map$Entry
      44: astore_3
      45: aload_3
      46: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #31                 // class java/lang/String
      54: astore        4
      56: bipush        31
      58: iload_1
      59: imul
      60: aload         4
      62: invokevirtual #39                 // Method java/lang/String.hashCode:()I
      65: iadd
      66: istore_1
      67: aload_3
      68: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: astore        5
      75: aload         5
      77: ifnull        91
      80: bipush        31
      82: iload_1
      83: imul
      84: aload         5
      86: invokevirtual #41                 // Method java/lang/Object.hashCode:()I
      89: iadd
      90: istore_1
      91: goto          26
      94: iload_1
      95: ireturn

  static {};
    Code:
       0: ldc           #42                 // String 0123456789abcdef
       2: invokevirtual #43                 // Method java/lang/String.toCharArray:()[C
       5: putstatic     #30                 // Field HEX:[C
       8: return
}
