Compiled from "EventSourceTransport.java"
class io.vertx.ext.web.handler.sockjs.impl.EventSourceTransport$EventSourceListener extends io.vertx.ext.web.handler.sockjs.impl.BaseTransport$BaseListener {
  final int maxBytesStreaming;

  boolean headersWritten;

  int bytesSent;

  final io.vertx.ext.web.handler.sockjs.impl.EventSourceTransport this$0;

  io.vertx.ext.web.handler.sockjs.impl.EventSourceTransport$EventSourceListener(io.vertx.ext.web.handler.sockjs.impl.EventSourceTransport, int, io.vertx.ext.web.RoutingContext, io.vertx.ext.web.handler.sockjs.impl.SockJSSession);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/vertx/ext/web/handler/sockjs/impl/EventSourceTransport;
       5: aload_0
       6: aload_3
       7: aload         4
       9: invokespecial #2                  // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport$BaseListener."<init>":(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;)V
      12: aload_0
      13: iload_2
      14: putfield      #3                  // Field maxBytesStreaming:I
      17: aload_0
      18: aload_3
      19: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      24: aload         4
      26: invokevirtual #5                  // Method addCloseHandler:(Lio/vertx/core/http/HttpServerResponse;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;)V
      29: return

  public void sendFrame(java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: invokestatic  #6                  // Method io/vertx/ext/web/handler/sockjs/impl/EventSourceTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
       3: invokeinterface #7,  1            // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
       8: ifeq          21
      11: invokestatic  #6                  // Method io/vertx/ext/web/handler/sockjs/impl/EventSourceTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
      14: ldc           #8                  // String EventSource, sending frame
      16: invokeinterface #9,  2            // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #10                 // Field headersWritten:Z
      25: ifne          97
      28: aload_0
      29: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      32: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      37: getstatic     #12                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      40: ldc           #13                 // String text/event-stream
      42: invokeinterface #14,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      47: pop
      48: aload_0
      49: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      52: invokestatic  #15                 // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport.setNoCacheHeaders:(Lio/vertx/ext/web/RoutingContext;)V
      55: aload_0
      56: getfield      #1                  // Field this$0:Lio/vertx/ext/web/handler/sockjs/impl/EventSourceTransport;
      59: getfield      #16                 // Field io/vertx/ext/web/handler/sockjs/impl/EventSourceTransport.options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
      62: aload_0
      63: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      66: invokestatic  #17                 // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport.setJSESSIONID:(Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/ext/web/RoutingContext;)V
      69: aload_0
      70: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      73: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      78: iconst_1
      79: invokeinterface #18,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setChunked:(Z)Lio/vertx/core/http/HttpServerResponse;
      84: ldc           #19                 // String \r\n
      86: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.write:(Ljava/lang/String;)Lio/vertx/core/Future;
      91: pop
      92: aload_0
      93: iconst_1
      94: putfield      #10                 // Field headersWritten:Z
      97: new           #21                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #23                 // String data:
     106: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_1
     110: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #25                 // String \r\n\r\n
     115: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: astore_3
     122: aload_3
     123: invokestatic  #27                 // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:(Ljava/lang/String;)Lio/vertx/core/buffer/Buffer;
     126: astore        4
     128: aload_0
     129: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
     132: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     137: aload         4
     139: aload_2
     140: invokeinterface #28,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.write:(Ljava/lang/Object;Lio/vertx/core/Handler;)V
     145: aload_0
     146: dup
     147: getfield      #29                 // Field bytesSent:I
     150: aload         4
     152: invokeinterface #30,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.length:()I
     157: iadd
     158: putfield      #29                 // Field bytesSent:I
     161: aload_0
     162: getfield      #29                 // Field bytesSent:I
     165: aload_0
     166: getfield      #3                  // Field maxBytesStreaming:I
     169: if_icmplt     197
     172: invokestatic  #6                  // Method io/vertx/ext/web/handler/sockjs/impl/EventSourceTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
     175: invokeinterface #7,  1            // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
     180: ifeq          193
     183: invokestatic  #6                  // Method io/vertx/ext/web/handler/sockjs/impl/EventSourceTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
     186: ldc           #31                 // String More than maxBytes sent so closing connection
     188: invokeinterface #9,  2            // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
     193: aload_0
     194: invokevirtual #32                 // Method close:()V
     197: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #33                 // Field closed:Z
       4: ifne          52
       7: aload_0
       8: getfield      #34                 // Field session:Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;
      11: invokevirtual #35                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession.resetListener:()V
      14: aload_0
      15: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      18: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      23: invokeinterface #36,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      28: pop
      29: aload_0
      30: getfield      #11                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      33: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      38: invokeinterface #37,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.close:()V
      43: goto          47
      46: astore_1
      47: aload_0
      48: iconst_1
      49: putfield      #33                 // Field closed:Z
      52: return
    Exception table:
       from    to  target type
           7    43    46   Class java/lang/IllegalStateException
}
