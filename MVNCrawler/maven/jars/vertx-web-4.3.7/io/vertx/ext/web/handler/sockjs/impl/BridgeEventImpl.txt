Compiled from "BridgeEventImpl.java"
class io.vertx.ext.web.handler.sockjs.impl.BridgeEventImpl implements io.vertx.ext.web.handler.sockjs.BridgeEvent {
  private final io.vertx.ext.bridge.BridgeEventType type;

  private final io.vertx.core.json.JsonObject rawMessage;

  private final io.vertx.ext.web.handler.sockjs.SockJSSocket socket;

  private final io.vertx.core.Promise<java.lang.Boolean> promise;

  public io.vertx.ext.web.handler.sockjs.impl.BridgeEventImpl(io.vertx.ext.bridge.BridgeEventType, io.vertx.core.json.JsonObject, io.vertx.ext.web.handler.sockjs.SockJSSocket);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Lio/vertx/ext/bridge/BridgeEventType;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field rawMessage:Lio/vertx/core/json/JsonObject;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field socket:Lio/vertx/ext/web/handler/sockjs/SockJSSocket;
      19: aload_0
      20: invokestatic  #5                  // InterfaceMethod io/vertx/core/Promise.promise:()Lio/vertx/core/Promise;
      23: putfield      #6                  // Field promise:Lio/vertx/core/Promise;
      26: return

  public io.vertx.core.Future<java.lang.Boolean> future();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: invokeinterface #7,  1            // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
       9: areturn

  public io.vertx.ext.bridge.BridgeEventType type();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Lio/vertx/ext/bridge/BridgeEventType;
       4: areturn

  public io.vertx.core.json.JsonObject getRawMessage();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rawMessage:Lio/vertx/core/json/JsonObject;
       4: areturn

  public io.vertx.ext.web.handler.sockjs.BridgeEvent setRawMessage(io.vertx.core.json.JsonObject);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field rawMessage:Lio/vertx/core/json/JsonObject;
       5: if_acmpeq     20
       8: aload_0
       9: getfield      #3                  // Field rawMessage:Lio/vertx/core/json/JsonObject;
      12: invokevirtual #8                  // Method io/vertx/core/json/JsonObject.clear:()Lio/vertx/core/json/JsonObject;
      15: aload_1
      16: invokevirtual #9                  // Method io/vertx/core/json/JsonObject.mergeIn:(Lio/vertx/core/json/JsonObject;)Lio/vertx/core/json/JsonObject;
      19: pop
      20: aload_0
      21: areturn

  public void handle(io.vertx.core.AsyncResult<java.lang.Boolean>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod io/vertx/core/Promise.handle:(Lio/vertx/core/AsyncResult;)V
      10: return

  public io.vertx.ext.web.handler.sockjs.SockJSSocket socket();
    Code:
       0: aload_0
       1: getfield      #4                  // Field socket:Lio/vertx/ext/web/handler/sockjs/SockJSSocket;
       4: areturn

  public void complete(java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
      10: return

  public void complete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: invokeinterface #12,  1           // InterfaceMethod io/vertx/core/Promise.complete:()V
       9: return

  public void fail(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/Throwable;)V
      10: return

  public void fail(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/String;)V
      10: return

  public boolean tryComplete(java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod io/vertx/core/Promise.tryComplete:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean tryComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: invokeinterface #16,  1           // InterfaceMethod io/vertx/core/Promise.tryComplete:()Z
       9: ireturn

  public boolean tryFail(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/Promise.tryFail:(Ljava/lang/Throwable;)Z
      10: ireturn

  public boolean tryFail(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod io/vertx/core/Promise.tryFail:(Ljava/lang/String;)Z
      10: ireturn

  public io.vertx.ext.bridge.BaseBridgeEvent setRawMessage(io.vertx.core.json.JsonObject);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method setRawMessage:(Lio/vertx/core/json/JsonObject;)Lio/vertx/ext/web/handler/sockjs/BridgeEvent;
       5: areturn

  public boolean tryComplete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/Boolean
       5: invokevirtual #21                 // Method tryComplete:(Ljava/lang/Boolean;)Z
       8: ireturn

  public void complete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/Boolean
       5: invokevirtual #22                 // Method complete:(Ljava/lang/Boolean;)V
       8: return

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class io/vertx/core/AsyncResult
       5: invokevirtual #24                 // Method handle:(Lio/vertx/core/AsyncResult;)V
       8: return
}
