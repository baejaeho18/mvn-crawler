Compiled from "RoutingContext.java"
public interface io.vertx.ext.web.RoutingContext {
  public abstract io.vertx.core.http.HttpServerRequest request();

  public abstract io.vertx.core.http.HttpServerResponse response();

  public abstract void next();

  public abstract void fail(int);

  public abstract void fail(java.lang.Throwable);

  public abstract void fail(int, java.lang.Throwable);

  public abstract io.vertx.ext.web.RoutingContext put(java.lang.String, java.lang.Object);

  public abstract <T> T get(java.lang.String);

  public abstract <T> T get(java.lang.String, T);

  public abstract <T> T remove(java.lang.String);

  public abstract java.util.Map<java.lang.String, java.lang.Object> data();

  public abstract io.vertx.core.Vertx vertx();

  public abstract java.lang.String mountPoint();

  public abstract io.vertx.ext.web.Route currentRoute();

  public default java.lang.String normalisedPath();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod normalizedPath:()Ljava/lang/String;
       6: areturn

  public abstract java.lang.String normalizedPath();

  public abstract io.vertx.core.http.Cookie getCookie(java.lang.String);

  public abstract io.vertx.ext.web.RoutingContext addCookie(io.vertx.core.http.Cookie);

  public default io.vertx.core.http.Cookie removeCookie(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokeinterface #2,  3            // InterfaceMethod removeCookie:(Ljava/lang/String;Z)Lio/vertx/core/http/Cookie;
       8: areturn

  public abstract io.vertx.core.http.Cookie removeCookie(java.lang.String, boolean);

  public abstract int cookieCount();

  public abstract java.util.Map<java.lang.String, io.vertx.core.http.Cookie> cookieMap();

  public default java.lang.String getBodyAsString();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: invokeinterface #4,  1            // InterfaceMethod io/vertx/ext/web/RequestBody.asString:()Ljava/lang/String;
      11: areturn

  public default java.lang.String getBodyAsString(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: aload_1
       7: invokeinterface #5,  2            // InterfaceMethod io/vertx/ext/web/RequestBody.asString:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public default io.vertx.core.json.JsonObject getBodyAsJson(int);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: iload_1
       7: invokeinterface #6,  2            // InterfaceMethod io/vertx/ext/web/RequestBody.asJsonObject:(I)Lio/vertx/core/json/JsonObject;
      12: areturn

  public default io.vertx.core.json.JsonArray getBodyAsJsonArray(int);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: iload_1
       7: invokeinterface #7,  2            // InterfaceMethod io/vertx/ext/web/RequestBody.asJsonArray:(I)Lio/vertx/core/json/JsonArray;
      12: areturn

  public default io.vertx.core.json.JsonObject getBodyAsJson();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: invokeinterface #8,  1            // InterfaceMethod io/vertx/ext/web/RequestBody.asJsonObject:()Lio/vertx/core/json/JsonObject;
      11: areturn

  public default io.vertx.core.json.JsonArray getBodyAsJsonArray();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: invokeinterface #9,  1            // InterfaceMethod io/vertx/ext/web/RequestBody.asJsonArray:()Lio/vertx/core/json/JsonArray;
      11: areturn

  public default io.vertx.core.buffer.Buffer getBody();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod body:()Lio/vertx/ext/web/RequestBody;
       6: invokeinterface #10,  1           // InterfaceMethod io/vertx/ext/web/RequestBody.buffer:()Lio/vertx/core/buffer/Buffer;
      11: areturn

  public abstract io.vertx.ext.web.RequestBody body();

  public abstract java.util.List<io.vertx.ext.web.FileUpload> fileUploads();

  public abstract io.vertx.ext.web.Session session();

  public abstract boolean isSessionAccessed();

  public abstract io.vertx.ext.auth.User user();

  public abstract java.lang.Throwable failure();

  public abstract int statusCode();

  public abstract java.lang.String getAcceptableContentType();

  public abstract io.vertx.ext.web.ParsedHeaderValues parsedHeaders();

  public abstract int addHeadersEndHandler(io.vertx.core.Handler<java.lang.Void>);

  public abstract boolean removeHeadersEndHandler(int);

  public abstract int addBodyEndHandler(io.vertx.core.Handler<java.lang.Void>);

  public abstract boolean removeBodyEndHandler(int);

  public abstract int addEndHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);

  public default io.vertx.core.Future<java.lang.Void> addEndHandler();
    Code:
       0: invokestatic  #11                 // InterfaceMethod io/vertx/core/Promise.promise:()Lio/vertx/core/Promise;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokeinterface #12,  2           // InterfaceMethod addEndHandler:(Lio/vertx/core/Handler;)I
      11: pop
      12: aload_1
      13: invokeinterface #13,  1           // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
      18: areturn

  public abstract boolean removeEndHandler(int);

  public abstract boolean failed();

  public abstract void setBody(io.vertx.core.buffer.Buffer);

  public abstract void setSession(io.vertx.ext.web.Session);

  public abstract void setUser(io.vertx.ext.auth.User);

  public abstract void clearUser();

  public abstract void setAcceptableContentType(java.lang.String);

  public default void reroute(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #14,  1           // InterfaceMethod request:()Lio/vertx/core/http/HttpServerRequest;
       7: invokeinterface #15,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.method:()Lio/vertx/core/http/HttpMethod;
      12: aload_1
      13: invokeinterface #16,  3           // InterfaceMethod reroute:(Lio/vertx/core/http/HttpMethod;Ljava/lang/String;)V
      18: return

  public abstract void reroute(io.vertx.core.http.HttpMethod, java.lang.String);

  public default java.util.List<io.vertx.ext.web.LanguageHeader> acceptableLanguages();
    Code:
       0: aload_0
       1: invokeinterface #17,  1           // InterfaceMethod parsedHeaders:()Lio/vertx/ext/web/ParsedHeaderValues;
       6: invokeinterface #18,  1           // InterfaceMethod io/vertx/ext/web/ParsedHeaderValues.acceptLanguage:()Ljava/util/List;
      11: areturn

  public default io.vertx.ext.web.LanguageHeader preferredLanguage();
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod acceptableLanguages:()Ljava/util/List;
       6: astore_1
       7: aload_1
       8: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      13: ifle          29
      16: aload_1
      17: iconst_0
      18: invokeinterface #21,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #22                 // class io/vertx/ext/web/LanguageHeader
      26: goto          30
      29: aconst_null
      30: areturn

  public abstract java.util.Map<java.lang.String, java.lang.String> pathParams();

  public abstract java.lang.String pathParam(java.lang.String);

  public abstract io.vertx.core.MultiMap queryParams();

  public abstract io.vertx.core.MultiMap queryParams(java.nio.charset.Charset);

  public abstract java.util.List<java.lang.String> queryParam(java.lang.String);

  public default io.vertx.ext.web.RoutingContext attachment(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        29
       4: aload_1
       5: invokestatic  #23                 // Method io/vertx/core/http/impl/MimeMapping.getMimeTypeForFilename:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnull        29
      13: aload_0
      14: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      19: getstatic     #25                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      22: aload_2
      23: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      28: pop
      29: aload_0
      30: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      35: getstatic     #27                 // Field io/vertx/core/http/HttpHeaders.CONTENT_DISPOSITION:Ljava/lang/CharSequence;
      38: new           #28                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #30                 // String attachment; filename=
      47: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      62: pop
      63: aload_0
      64: areturn

  public default io.vertx.core.Future<java.lang.Void> redirect(java.lang.String);
    Code:
       0: ldc           #33                 // String back
       2: aload_1
       3: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          31
       9: aload_0
      10: invokeinterface #14,  1           // InterfaceMethod request:()Lio/vertx/core/http/HttpServerRequest;
      15: getstatic     #35                 // Field io/vertx/core/http/HttpHeaders.REFERER:Ljava/lang/CharSequence;
      18: invokeinterface #36,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      23: astore_1
      24: aload_1
      25: ifnonnull     31
      28: ldc           #37                 // String /
      30: astore_1
      31: aload_0
      32: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      37: getstatic     #38                 // Field io/vertx/core/http/HttpHeaders.LOCATION:Ljava/lang/CharSequence;
      40: aload_1
      41: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      46: pop
      47: aload_0
      48: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      53: invokeinterface #39,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.getStatusCode:()I
      58: istore_2
      59: iload_2
      60: sipush        300
      63: if_icmplt     73
      66: iload_2
      67: sipush        400
      70: if_icmplt     88
      73: aload_0
      74: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      79: sipush        302
      82: invokeinterface #40,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      87: pop
      88: aload_0
      89: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      94: getstatic     #25                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      97: ldc           #41                 // String text/plain; charset=utf-8
      99: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     104: new           #28                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #42                 // String Redirecting to
     113: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_1
     117: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #43                 // String .
     122: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     133: areturn

  public default io.vertx.ext.web.RoutingContext redirect(java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #45,  2           // InterfaceMethod redirect:(Ljava/lang/String;)Lio/vertx/core/Future;
       7: aload_2
       8: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      13: pop
      14: aload_0
      15: areturn

  public default io.vertx.core.Future<java.lang.Void> json(java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
       6: astore_2
       7: aload_2
       8: invokeinterface #47,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
      13: getstatic     #25                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      16: invokeinterface #48,  2           // InterfaceMethod io/vertx/core/MultiMap.contains:(Ljava/lang/CharSequence;)Z
      21: istore_3
      22: aload_1
      23: ifnonnull     51
      26: iload_3
      27: ifne          42
      30: aload_2
      31: getstatic     #25                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      34: ldc           #49                 // String application/json
      36: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      41: pop
      42: aload_2
      43: ldc           #50                 // String null
      45: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
      50: areturn
      51: aload_1
      52: invokestatic  #51                 // Method io/vertx/core/json/Json.encodeToBuffer:(Ljava/lang/Object;)Lio/vertx/core/buffer/Buffer;
      55: astore        4
      57: iload_3
      58: ifne          73
      61: aload_2
      62: getstatic     #25                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      65: ldc           #49                 // String application/json
      67: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      72: pop
      73: aload_2
      74: aload         4
      76: invokeinterface #52,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
      81: areturn
      82: astore        4
      84: aload_0
      85: aload         4
      87: invokeinterface #55,  2           // InterfaceMethod fail:(Ljava/lang/Throwable;)V
      92: aload_0
      93: invokeinterface #56,  1           // InterfaceMethod vertx:()Lio/vertx/core/Vertx;
      98: invokeinterface #57,  1           // InterfaceMethod io/vertx/core/Vertx.getOrCreateContext:()Lio/vertx/core/Context;
     103: checkcast     #58                 // class io/vertx/core/impl/ContextInternal
     106: aload         4
     108: invokeinterface #59,  2           // InterfaceMethod io/vertx/core/impl/ContextInternal.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
     113: areturn
    Exception table:
       from    to  target type
          51    81    82   Class io/vertx/core/json/EncodeException
          51    81    82   Class java/lang/UnsupportedOperationException

  public default io.vertx.ext.web.RoutingContext json(java.lang.Object, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #60,  2           // InterfaceMethod json:(Ljava/lang/Object;)Lio/vertx/core/Future;
       7: aload_2
       8: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      13: pop
      14: aload_0
      15: areturn

  public default boolean is(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #17,  1           // InterfaceMethod parsedHeaders:()Lio/vertx/ext/web/ParsedHeaderValues;
       6: invokeinterface #61,  1           // InterfaceMethod io/vertx/ext/web/ParsedHeaderValues.contentType:()Lio/vertx/ext/web/MIMEHeader;
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: bipush        47
      21: invokevirtual #62                 // Method java/lang/String.indexOf:(I)I
      24: iconst_m1
      25: if_icmpne     61
      28: new           #63                 // class io/vertx/ext/web/impl/ParsableMIMEValue
      31: dup
      32: new           #28                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #64                 // String */
      41: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #65                 // Method io/vertx/ext/web/impl/ParsableMIMEValue."<init>":(Ljava/lang/String;)V
      54: invokevirtual #66                 // Method io/vertx/ext/web/impl/ParsableMIMEValue.forceParse:()Lio/vertx/ext/web/impl/ParsableMIMEValue;
      57: astore_3
      58: goto          73
      61: new           #63                 // class io/vertx/ext/web/impl/ParsableMIMEValue
      64: dup
      65: aload_1
      66: invokespecial #65                 // Method io/vertx/ext/web/impl/ParsableMIMEValue."<init>":(Ljava/lang/String;)V
      69: invokevirtual #66                 // Method io/vertx/ext/web/impl/ParsableMIMEValue.forceParse:()Lio/vertx/ext/web/impl/ParsableMIMEValue;
      72: astore_3
      73: aload_2
      74: aload_3
      75: invokeinterface #67,  2           // InterfaceMethod io/vertx/ext/web/MIMEHeader.isMatchedBy:(Lio/vertx/ext/web/ParsedHeaderValue;)Z
      80: ireturn

  public default boolean isFresh();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod request:()Lio/vertx/core/http/HttpServerRequest;
       6: invokeinterface #15,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.method:()Lio/vertx/core/http/HttpMethod;
      11: astore_1
      12: aload_1
      13: getstatic     #68                 // Field io/vertx/core/http/HttpMethod.GET:Lio/vertx/core/http/HttpMethod;
      16: if_acmpeq     28
      19: aload_1
      20: getstatic     #69                 // Field io/vertx/core/http/HttpMethod.HEAD:Lio/vertx/core/http/HttpMethod;
      23: if_acmpeq     28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      34: invokeinterface #39,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.getStatusCode:()I
      39: istore_2
      40: iload_2
      41: sipush        200
      44: if_icmplt     54
      47: iload_2
      48: sipush        300
      51: if_icmplt     61
      54: sipush        304
      57: iload_2
      58: if_icmpne     66
      61: aload_0
      62: invokestatic  #70                 // Method io/vertx/ext/web/impl/Utils.fresh:(Lio/vertx/ext/web/RoutingContext;)Z
      65: ireturn
      66: iconst_0
      67: ireturn

  public default io.vertx.ext.web.RoutingContext etag(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #71                 // Method java/lang/String.length:()I
       4: iconst_2
       5: if_icmple     46
       8: aload_1
       9: iconst_0
      10: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      13: bipush        34
      15: if_icmpeq     27
      18: aload_1
      19: ldc           #73                 // String W/\"
      21: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      24: ifeq          46
      27: aload_1
      28: aload_1
      29: invokevirtual #71                 // Method java/lang/String.length:()I
      32: iconst_1
      33: isub
      34: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      37: bipush        34
      39: if_icmpne     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore_2
      48: iload_2
      49: ifne          94
      52: aload_0
      53: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
      58: getstatic     #75                 // Field io/vertx/core/http/HttpHeaders.ETAG:Ljava/lang/CharSequence;
      61: new           #28                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #76                 // String \"
      70: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #76                 // String \"
      79: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      90: pop
      91: goto          110
      94: aload_0
      95: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
     100: getstatic     #75                 // Field io/vertx/core/http/HttpHeaders.ETAG:Ljava/lang/CharSequence;
     103: aload_1
     104: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     109: pop
     110: aload_0
     111: areturn

  public default io.vertx.ext.web.RoutingContext lastModified(java.time.Instant);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
       6: getstatic     #77                 // Field io/vertx/core/http/HttpHeaders.LAST_MODIFIED:Ljava/lang/CharSequence;
       9: aload_1
      10: invokevirtual #78                 // Method java/time/Instant.toEpochMilli:()J
      13: invokestatic  #79                 // Method io/vertx/ext/web/impl/Utils.formatRFC1123DateTime:(J)Ljava/lang/String;
      16: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      21: pop
      22: aload_0
      23: areturn

  public default io.vertx.ext.web.RoutingContext lastModified(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
       6: getstatic     #77                 // Field io/vertx/core/http/HttpHeaders.LAST_MODIFIED:Ljava/lang/CharSequence;
       9: aload_1
      10: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      15: pop
      16: aload_0
      17: areturn

  public default io.vertx.core.Future<java.lang.Void> end(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
       6: aload_1
       7: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
      12: areturn

  public default io.vertx.ext.web.RoutingContext end(java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #80,  2           // InterfaceMethod end:(Ljava/lang/String;)Lio/vertx/core/Future;
       7: aload_2
       8: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      13: pop
      14: aload_0
      15: areturn

  public default io.vertx.core.Future<java.lang.Void> end(io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
       6: aload_1
       7: invokeinterface #52,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
      12: areturn

  public default io.vertx.ext.web.RoutingContext end(io.vertx.core.buffer.Buffer, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #81,  2           // InterfaceMethod end:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
       7: aload_2
       8: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      13: pop
      14: aload_0
      15: areturn

  public default io.vertx.core.Future<java.lang.Void> end();
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod response:()Lio/vertx/core/http/HttpServerResponse;
       6: invokeinterface #82,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      11: areturn

  public default io.vertx.ext.web.RoutingContext end(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: invokeinterface #83,  1           // InterfaceMethod end:()Lio/vertx/core/Future;
       6: aload_1
       7: invokeinterface #46,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      12: pop
      13: aload_0
      14: areturn
}
