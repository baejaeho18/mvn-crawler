Compiled from "SockJSBridgeOptionsConverter.java"
public class io.vertx.ext.web.handler.sockjs.SockJSBridgeOptionsConverter {
  private static final java.util.Base64$Decoder BASE64_DECODER;

  private static final java.util.Base64$Encoder BASE64_ENCODER;

  public io.vertx.ext.web.handler.sockjs.SockJSBridgeOptionsConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void fromJson(java.lang.Iterable<java.util.Map$Entry<java.lang.String, java.lang.Object>>, io.vertx.ext.web.handler.sockjs.SockJSBridgeOptions);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          308
      16: aload_2
      17: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #5                  // class java/util/Map$Entry
      25: astore_3
      26: aload_3
      27: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      32: checkcast     #7                  // class java/lang/String
      35: astore        4
      37: iconst_m1
      38: istore        5
      40: aload         4
      42: invokevirtual #8                  // Method java/lang/String.hashCode:()I
      45: lookupswitch  { // 4
            -961767657: 136
            -676432509: 104
            -334086257: 120
            -303077130: 88
               default: 149
          }
      88: aload         4
      90: ldc           #9                  // String maxAddressLength
      92: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      95: ifeq          149
      98: iconst_0
      99: istore        5
     101: goto          149
     104: aload         4
     106: ldc           #11                 // String maxHandlersPerSocket
     108: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     111: ifeq          149
     114: iconst_1
     115: istore        5
     117: goto          149
     120: aload         4
     122: ldc           #12                 // String pingTimeout
     124: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     127: ifeq          149
     130: iconst_2
     131: istore        5
     133: goto          149
     136: aload         4
     138: ldc           #13                 // String replyTimeout
     140: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     143: ifeq          149
     146: iconst_3
     147: istore        5
     149: iload         5
     151: tableswitch   { // 0 to 3
                     0: 180
                     1: 212
                     2: 244
                     3: 276
               default: 305
          }
     180: aload_3
     181: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     186: instanceof    #15                 // class java/lang/Number
     189: ifeq          305
     192: aload_1
     193: aload_3
     194: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     199: checkcast     #15                 // class java/lang/Number
     202: invokevirtual #16                 // Method java/lang/Number.intValue:()I
     205: invokevirtual #17                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.setMaxAddressLength:(I)Lio/vertx/ext/web/handler/sockjs/SockJSBridgeOptions;
     208: pop
     209: goto          305
     212: aload_3
     213: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     218: instanceof    #15                 // class java/lang/Number
     221: ifeq          305
     224: aload_1
     225: aload_3
     226: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     231: checkcast     #15                 // class java/lang/Number
     234: invokevirtual #16                 // Method java/lang/Number.intValue:()I
     237: invokevirtual #18                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.setMaxHandlersPerSocket:(I)Lio/vertx/ext/web/handler/sockjs/SockJSBridgeOptions;
     240: pop
     241: goto          305
     244: aload_3
     245: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     250: instanceof    #15                 // class java/lang/Number
     253: ifeq          305
     256: aload_1
     257: aload_3
     258: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     263: checkcast     #15                 // class java/lang/Number
     266: invokevirtual #19                 // Method java/lang/Number.longValue:()J
     269: invokevirtual #20                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.setPingTimeout:(J)Lio/vertx/ext/web/handler/sockjs/SockJSBridgeOptions;
     272: pop
     273: goto          305
     276: aload_3
     277: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     282: instanceof    #15                 // class java/lang/Number
     285: ifeq          305
     288: aload_1
     289: aload_3
     290: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     295: checkcast     #15                 // class java/lang/Number
     298: invokevirtual #19                 // Method java/lang/Number.longValue:()J
     301: invokevirtual #21                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.setReplyTimeout:(J)Lio/vertx/ext/web/handler/sockjs/SockJSBridgeOptions;
     304: pop
     305: goto          7
     308: return

  public static void toJson(io.vertx.ext.web.handler.sockjs.SockJSBridgeOptions, io.vertx.core.json.JsonObject);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method io/vertx/core/json/JsonObject.getMap:()Ljava/util/Map;
       5: invokestatic  #23                 // Method toJson:(Lio/vertx/ext/web/handler/sockjs/SockJSBridgeOptions;Ljava/util/Map;)V
       8: return

  public static void toJson(io.vertx.ext.web.handler.sockjs.SockJSBridgeOptions, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #9                  // String maxAddressLength
       3: aload_0
       4: invokevirtual #24                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.getMaxAddressLength:()I
       7: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_1
      17: ldc           #11                 // String maxHandlersPerSocket
      19: aload_0
      20: invokevirtual #27                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.getMaxHandlersPerSocket:()I
      23: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: aload_1
      33: ldc           #12                 // String pingTimeout
      35: aload_0
      36: invokevirtual #28                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.getPingTimeout:()J
      39: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      42: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_1
      49: ldc           #13                 // String replyTimeout
      51: aload_0
      52: invokevirtual #30                 // Method io/vertx/ext/web/handler/sockjs/SockJSBridgeOptions.getReplyTimeout:()J
      55: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      58: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: return

  static {};
    Code:
       0: getstatic     #31                 // Field io/vertx/core/json/impl/JsonUtil.BASE64_DECODER:Ljava/util/Base64$Decoder;
       3: putstatic     #32                 // Field BASE64_DECODER:Ljava/util/Base64$Decoder;
       6: getstatic     #33                 // Field io/vertx/core/json/impl/JsonUtil.BASE64_ENCODER:Ljava/util/Base64$Encoder;
       9: putstatic     #34                 // Field BASE64_ENCODER:Ljava/util/Base64$Encoder;
      12: return
}
