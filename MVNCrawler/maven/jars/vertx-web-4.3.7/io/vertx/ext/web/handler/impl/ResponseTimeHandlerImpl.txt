Compiled from "ResponseTimeHandlerImpl.java"
public class io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl implements io.vertx.ext.web.handler.ResponseTimeHandler {
  private static final java.lang.CharSequence HEADER_NAME;

  public io.vertx.ext.web.handler.impl.ResponseTimeHandlerImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handle(io.vertx.ext.web.RoutingContext);
    Code:
       0: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: aload_1
       5: lload_2
       6: aload_1
       7: invokedynamic #3,  0              // InvokeDynamic #0:handle:(JLio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
      12: invokeinterface #4,  2            // InterfaceMethod io/vertx/ext/web/RoutingContext.addHeadersEndHandler:(Lio/vertx/core/Handler;)I
      17: pop
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
      24: return

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class io/vertx/ext/web/RoutingContext
       5: invokevirtual #7                  // Method handle:(Lio/vertx/ext/web/RoutingContext;)V
       8: return

  private static void lambda$handle$0(long, io.vertx.ext.web.RoutingContext, java.lang.Void);
    Code:
       0: getstatic     #8                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
       6: lload_0
       7: lsub
       8: getstatic     #9                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #10                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      14: lstore        4
      16: aload_2
      17: invokeinterface #11,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      22: getstatic     #12                 // Field HEADER_NAME:Ljava/lang/CharSequence;
      25: new           #13                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      32: lload         4
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      37: ldc           #16                 // String ms
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #19,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      50: pop
      51: return

  static {};
    Code:
       0: ldc           #20                 // String x-response-time
       2: invokestatic  #21                 // InterfaceMethod io/vertx/core/http/HttpHeaders.createOptimized:(Ljava/lang/String;)Ljava/lang/CharSequence;
       5: putstatic     #12                 // Field HEADER_NAME:Ljava/lang/CharSequence;
       8: return
}
