Compiled from "Router.java"
public interface io.vertx.ext.web.Router extends io.vertx.core.Handler<io.vertx.core.http.HttpServerRequest> {
  public abstract io.vertx.ext.web.Router putMetadata(java.lang.String, java.lang.Object);

  public abstract java.util.Map<java.lang.String, java.lang.Object> metadata();

  public default <T> T getMetadata(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod metadata:()Ljava/util/Map;
       6: aload_1
       7: invokeinterface #2,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public static io.vertx.ext.web.Router router(io.vertx.core.Vertx);
    Code:
       0: new           #3                  // class io/vertx/ext/web/impl/RouterImpl
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method io/vertx/ext/web/impl/RouterImpl."<init>":(Lio/vertx/core/Vertx;)V
       8: areturn

  public abstract io.vertx.ext.web.Route route();

  public abstract io.vertx.ext.web.Route route(io.vertx.core.http.HttpMethod, java.lang.String);

  public abstract io.vertx.ext.web.Route route(java.lang.String);

  public abstract io.vertx.ext.web.Route routeWithRegex(io.vertx.core.http.HttpMethod, java.lang.String);

  public abstract io.vertx.ext.web.Route routeWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route get();

  public abstract io.vertx.ext.web.Route get(java.lang.String);

  public abstract io.vertx.ext.web.Route getWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route head();

  public abstract io.vertx.ext.web.Route head(java.lang.String);

  public abstract io.vertx.ext.web.Route headWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route options();

  public abstract io.vertx.ext.web.Route options(java.lang.String);

  public abstract io.vertx.ext.web.Route optionsWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route put();

  public abstract io.vertx.ext.web.Route put(java.lang.String);

  public abstract io.vertx.ext.web.Route putWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route post();

  public abstract io.vertx.ext.web.Route post(java.lang.String);

  public abstract io.vertx.ext.web.Route postWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route delete();

  public abstract io.vertx.ext.web.Route delete(java.lang.String);

  public abstract io.vertx.ext.web.Route deleteWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route trace();

  public abstract io.vertx.ext.web.Route trace(java.lang.String);

  public abstract io.vertx.ext.web.Route traceWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route connect();

  public abstract io.vertx.ext.web.Route connect(java.lang.String);

  public abstract io.vertx.ext.web.Route connectWithRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route patch();

  public abstract io.vertx.ext.web.Route patch(java.lang.String);

  public abstract io.vertx.ext.web.Route patchWithRegex(java.lang.String);

  public abstract java.util.List<io.vertx.ext.web.Route> getRoutes();

  public abstract io.vertx.ext.web.Router clear();

  public abstract io.vertx.ext.web.Route mountSubRouter(java.lang.String, io.vertx.ext.web.Router);

  public abstract io.vertx.ext.web.Router errorHandler(int, io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);

  public abstract void handleContext(io.vertx.ext.web.RoutingContext);

  public abstract void handleFailure(io.vertx.ext.web.RoutingContext);

  public abstract io.vertx.ext.web.Router modifiedHandler(io.vertx.core.Handler<io.vertx.ext.web.Router>);

  public abstract io.vertx.ext.web.Router allowForward(io.vertx.ext.web.AllowForwardHeaders);
}
