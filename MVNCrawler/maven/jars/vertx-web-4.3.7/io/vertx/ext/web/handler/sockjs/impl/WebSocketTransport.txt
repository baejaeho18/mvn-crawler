Compiled from "WebSocketTransport.java"
class io.vertx.ext.web.handler.sockjs.impl.WebSocketTransport extends io.vertx.ext.web.handler.sockjs.impl.BaseTransport {
  private static final io.vertx.core.impl.logging.Logger LOG;

  private final io.vertx.ext.web.impl.Origin origin;

  private final io.vertx.core.Handler<io.vertx.ext.web.handler.sockjs.SockJSSocket> sockHandler;

  io.vertx.ext.web.handler.sockjs.impl.WebSocketTransport(io.vertx.core.Vertx, io.vertx.ext.web.Router, io.vertx.core.shareddata.LocalMap<java.lang.String, io.vertx.ext.web.handler.sockjs.impl.SockJSSession>, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, io.vertx.core.Handler<io.vertx.ext.web.handler.sockjs.SockJSSocket>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload         4
       5: invokespecial #2                  // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport."<init>":(Lio/vertx/core/Vertx;Lio/vertx/core/shareddata/LocalMap;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;)V
       8: aload_0
       9: aload         4
      11: invokevirtual #3                  // Method io/vertx/ext/web/handler/sockjs/SockJSHandlerOptions.getOrigin:()Ljava/lang/String;
      14: ifnull        28
      17: aload         4
      19: invokevirtual #3                  // Method io/vertx/ext/web/handler/sockjs/SockJSHandlerOptions.getOrigin:()Ljava/lang/String;
      22: invokestatic  #4                  // Method io/vertx/ext/web/impl/Origin.parse:(Ljava/lang/String;)Lio/vertx/ext/web/impl/Origin;
      25: goto          29
      28: aconst_null
      29: putfield      #5                  // Field origin:Lio/vertx/ext/web/impl/Origin;
      32: aload_0
      33: aload         5
      35: putfield      #6                  // Field sockHandler:Lio/vertx/core/Handler;
      38: ldc           #8                  // String \\/[^\\/\\.]+\\/([^\\/\\.]+)\\/websocket
      40: astore        6
      42: aload_2
      43: aload         6
      45: invokeinterface #9,  2            // InterfaceMethod io/vertx/ext/web/Router.getWithRegex:(Ljava/lang/String;)Lio/vertx/ext/web/Route;
      50: aload_0
      51: invokedynamic #10,  0             // InvokeDynamic #0:handle:(Lio/vertx/ext/web/handler/sockjs/impl/WebSocketTransport;)Lio/vertx/ext/web/handler/ProtocolUpgradeHandler;
      56: invokeinterface #11,  2           // InterfaceMethod io/vertx/ext/web/Route.handler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/Route;
      61: pop
      62: aload_2
      63: aload         6
      65: invokeinterface #12,  2           // InterfaceMethod io/vertx/ext/web/Router.routeWithRegex:(Ljava/lang/String;)Lio/vertx/ext/web/Route;
      70: invokedynamic #13,  0             // InvokeDynamic #1:handle:()Lio/vertx/ext/web/handler/PlatformHandler;
      75: invokeinterface #11,  2           // InterfaceMethod io/vertx/ext/web/Route.handler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/Route;
      80: pop
      81: return

  private void handleGet(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: astore_2
       7: aload_2
       8: invokestatic  #15                 // Method io/vertx/ext/web/impl/Utils.canUpgradeToWebsocket:(Lio/vertx/core/http/HttpServerRequest;)Z
      11: ifne          44
      14: aload_1
      15: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      20: sipush        400
      23: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      28: pop
      29: aload_1
      30: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      35: ldc           #18                 // String Can \"Upgrade\" only to \"WebSocket\".
      37: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
      42: pop
      43: return
      44: aload_0
      45: getfield      #5                  // Field origin:Lio/vertx/ext/web/impl/Origin;
      48: aload_1
      49: invokestatic  #20                 // Method io/vertx/ext/web/impl/Origin.check:(Lio/vertx/ext/web/impl/Origin;Lio/vertx/ext/web/RoutingContext;)Z
      52: ifne          74
      55: aload_1
      56: sipush        403
      59: new           #21                 // class java/lang/IllegalStateException
      62: dup
      63: ldc           #22                 // String Invalid Origin
      65: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      68: invokeinterface #24,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(ILjava/lang/Throwable;)V
      73: return
      74: aload_2
      75: invokeinterface #25,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.toWebSocket:()Lio/vertx/core/Future;
      80: aload_1
      81: dup
      82: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      85: pop
      86: invokedynamic #27,  0             // InvokeDynamic #2:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
      91: invokeinterface #28,  2           // InterfaceMethod io/vertx/core/Future.onFailure:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      96: aload_0
      97: aload_1
      98: aload_2
      99: invokedynamic #29,  0             // InvokeDynamic #3:handle:(Lio/vertx/ext/web/handler/sockjs/impl/WebSocketTransport;Lio/vertx/ext/web/RoutingContext;Lio/vertx/core/http/HttpServerRequest;)Lio/vertx/core/Handler;
     104: invokeinterface #30,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     109: pop
     110: return

  private void lambda$handleGet$1(io.vertx.ext.web.RoutingContext, io.vertx.core.http.HttpServerRequest, io.vertx.core.http.ServerWebSocket);
    Code:
       0: new           #31                 // class io/vertx/ext/web/handler/sockjs/impl/SockJSSession
       3: dup
       4: aload_0
       5: getfield      #32                 // Field vertx:Lio/vertx/core/Vertx;
       8: aload_0
       9: getfield      #33                 // Field sessions:Lio/vertx/core/shareddata/LocalMap;
      12: aload_1
      13: aload_0
      14: getfield      #34                 // Field options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
      17: aload_0
      18: getfield      #6                  // Field sockHandler:Lio/vertx/core/Handler;
      21: invokespecial #35                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession."<init>":(Lio/vertx/core/Vertx;Lio/vertx/core/shareddata/LocalMap;Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/core/Handler;)V
      24: astore        4
      26: aload         4
      28: aload_2
      29: new           #36                 // class io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport$WebSocketListener
      32: dup
      33: aload_3
      34: aload         4
      36: invokespecial #37                 // Method io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport$WebSocketListener."<init>":(Lio/vertx/core/http/ServerWebSocket;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;)V
      39: invokevirtual #38                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession.register:(Lio/vertx/core/http/HttpServerRequest;Lio/vertx/ext/web/handler/sockjs/impl/TransportListener;)V
      42: return

  private static void lambda$new$0(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
       6: getstatic     #39                 // Field io/vertx/core/http/HttpHeaders.ALLOW:Ljava/lang/CharSequence;
       9: ldc           #40                 // String GET
      11: invokeinterface #41,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      16: sipush        405
      19: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      24: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      29: pop
      30: return

  static io.vertx.core.impl.logging.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #43                 // class io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport
       2: invokestatic  #44                 // Method io/vertx/core/impl/logging/LoggerFactory.getLogger:(Ljava/lang/Class;)Lio/vertx/core/impl/logging/Logger;
       5: putstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       8: return
}
