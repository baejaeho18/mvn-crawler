Compiled from "Route.java"
public interface io.vertx.ext.web.Route {
  public abstract io.vertx.ext.web.Route putMetadata(java.lang.String, java.lang.Object);

  public abstract io.vertx.ext.web.Route method(io.vertx.core.http.HttpMethod);

  public abstract io.vertx.ext.web.Route path(java.lang.String);

  public abstract io.vertx.ext.web.Route pathRegex(java.lang.String);

  public abstract io.vertx.ext.web.Route produces(java.lang.String);

  public abstract io.vertx.ext.web.Route consumes(java.lang.String);

  public abstract io.vertx.ext.web.Route virtualHost(java.lang.String);

  public abstract io.vertx.ext.web.Route order(int);

  public abstract io.vertx.ext.web.Route last();

  public abstract io.vertx.ext.web.Route handler(io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);

  public abstract io.vertx.ext.web.Route blockingHandler(io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);

  public abstract io.vertx.ext.web.Route subRouter(io.vertx.ext.web.Router);

  public abstract io.vertx.ext.web.Route blockingHandler(io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>, boolean);

  public abstract io.vertx.ext.web.Route failureHandler(io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);

  public abstract io.vertx.ext.web.Route remove();

  public abstract io.vertx.ext.web.Route disable();

  public abstract io.vertx.ext.web.Route enable();

  public default io.vertx.ext.web.Route useNormalisedPath(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #1,  2            // InterfaceMethod useNormalizedPath:(Z)Lio/vertx/ext/web/Route;
       7: areturn

  public abstract io.vertx.ext.web.Route useNormalizedPath(boolean);

  public abstract java.util.Map<java.lang.String, java.lang.Object> metadata();

  public default <T> T getMetadata(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod metadata:()Ljava/util/Map;
       6: aload_1
       7: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public abstract java.lang.String getPath();

  public abstract boolean isRegexPath();

  public abstract boolean isExactPath();

  public abstract java.util.Set<io.vertx.core.http.HttpMethod> methods();

  public abstract io.vertx.ext.web.Route setRegexGroupsNames(java.util.List<java.lang.String>);

  public abstract io.vertx.ext.web.Route setName(java.lang.String);

  public abstract java.lang.String getName();

  public default <T> io.vertx.ext.web.Route respond(java.util.function.Function<io.vertx.ext.web.RoutingContext, io.vertx.core.Future<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #4,  0              // InvokeDynamic #0:handle:(Ljava/util/function/Function;)Lio/vertx/core/Handler;
       7: invokeinterface #5,  2            // InterfaceMethod handler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/Route;
      12: areturn

  private static void lambda$respond$1(java.util.function.Function, io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #6,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #7                  // class io/vertx/core/Future
      10: aload_1
      11: dup
      12: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: pop
      16: invokedynamic #9,  0              // InvokeDynamic #1:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
      21: invokeinterface #10,  2           // InterfaceMethod io/vertx/core/Future.onFailure:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      26: aload_1
      27: invokedynamic #11,  0             // InvokeDynamic #2:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
      32: invokeinterface #12,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      37: pop
      38: goto          49
      41: astore_2
      42: aload_1
      43: aload_2
      44: invokeinterface #14,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(Ljava/lang/Throwable;)V
      49: return
    Exception table:
       from    to  target type
           0    38    41   Class java/lang/RuntimeException

  private static void lambda$null$0(io.vertx.ext.web.RoutingContext, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
       6: invokeinterface #16,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headWritten:()Z
      11: ifne          156
      14: aload_1
      15: ifnonnull     41
      18: aload_0
      19: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      24: sipush        204
      27: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      32: invokeinterface #18,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      37: pop
      38: goto          202
      41: aload_0
      42: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      47: invokeinterface #19,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
      52: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      55: invokeinterface #21,  2           // InterfaceMethod io/vertx/core/MultiMap.contains:(Ljava/lang/CharSequence;)Z
      60: istore_2
      61: aload_1
      62: instanceof    #22                 // class io/vertx/core/buffer/Buffer
      65: ifeq          103
      68: iload_2
      69: ifne          89
      72: aload_0
      73: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      78: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      81: ldc           #23                 // String application/octet-stream
      83: invokeinterface #24,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      88: pop
      89: aload_0
      90: aload_1
      91: checkcast     #22                 // class io/vertx/core/buffer/Buffer
      94: invokeinterface #25,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.end:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
      99: pop
     100: goto          153
     103: aload_1
     104: instanceof    #26                 // class java/lang/String
     107: ifeq          145
     110: iload_2
     111: ifne          131
     114: aload_0
     115: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     120: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
     123: ldc           #27                 // String text/html
     125: invokeinterface #24,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     130: pop
     131: aload_0
     132: aload_1
     133: checkcast     #26                 // class java/lang/String
     136: invokeinterface #28,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     141: pop
     142: goto          153
     145: aload_0
     146: aload_1
     147: invokeinterface #29,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.json:(Ljava/lang/Object;)Lio/vertx/core/Future;
     152: pop
     153: goto          202
     156: aload_1
     157: ifnonnull     184
     160: aload_0
     161: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     166: invokeinterface #30,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.ended:()Z
     171: ifne          202
     174: aload_0
     175: invokeinterface #31,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.end:()Lio/vertx/core/Future;
     180: pop
     181: goto          202
     184: aload_0
     185: new           #32                 // class io/vertx/ext/web/handler/HttpException
     188: dup
     189: sipush        500
     192: ldc           #33                 // String Response already written
     194: invokespecial #34                 // Method io/vertx/ext/web/handler/HttpException."<init>":(ILjava/lang/String;)V
     197: invokeinterface #14,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(Ljava/lang/Throwable;)V
     202: return
}
