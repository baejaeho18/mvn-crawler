Compiled from "SessionHandlerImpl.java"
public class io.vertx.ext.web.handler.impl.SessionHandlerImpl implements io.vertx.ext.web.handler.SessionHandler {
  public static final java.lang.String SESSION_USER_HOLDER_KEY;

  public static final java.lang.String SESSION_FLUSHED_KEY;

  public static final java.lang.String SESSION_STOREUSER_KEY;

  private static final io.vertx.core.impl.logging.Logger LOG;

  private final io.vertx.ext.web.sstore.SessionStore sessionStore;

  private java.lang.String sessionCookieName;

  private java.lang.String sessionCookiePath;

  private long sessionTimeout;

  private boolean nagHttps;

  private boolean sessionCookieSecure;

  private boolean sessionCookieHttpOnly;

  private int minLength;

  private boolean lazySession;

  private long cookieMaxAge;

  private boolean cookieless;

  private io.vertx.core.http.CookieSameSite cookieSameSite;

  public io.vertx.ext.web.handler.impl.SessionHandlerImpl(io.vertx.ext.web.sstore.SessionStore);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String vertx-web.session
       7: putfield      #4                  // Field sessionCookieName:Ljava/lang/String;
      10: aload_0
      11: ldc           #5                  // String /
      13: putfield      #6                  // Field sessionCookiePath:Ljava/lang/String;
      16: aload_0
      17: ldc2_w        #7                  // long 1800000l
      20: putfield      #9                  // Field sessionTimeout:J
      23: aload_0
      24: iconst_1
      25: putfield      #10                 // Field nagHttps:Z
      28: aload_0
      29: iconst_0
      30: putfield      #11                 // Field sessionCookieSecure:Z
      33: aload_0
      34: iconst_0
      35: putfield      #12                 // Field sessionCookieHttpOnly:Z
      38: aload_0
      39: bipush        16
      41: putfield      #13                 // Field minLength:I
      44: aload_0
      45: iconst_0
      46: putfield      #14                 // Field lazySession:Z
      49: aload_0
      50: ldc2_w        #15                 // long -1l
      53: putfield      #17                 // Field cookieMaxAge:J
      56: aload_0
      57: aload_1
      58: putfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
      61: return

  public io.vertx.ext.web.handler.SessionHandler setSessionTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field sessionTimeout:J
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setNagHttps(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field nagHttps:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setCookieSecureFlag(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field sessionCookieSecure:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setCookieHttpOnlyFlag(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field sessionCookieHttpOnly:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setSessionCookieName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field sessionCookieName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setSessionCookiePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sessionCookiePath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setMinLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field minLength:I
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setCookieSameSite(io.vertx.core.http.CookieSameSite);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field cookieSameSite:Lio/vertx/core/http/CookieSameSite;
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setLazySession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field lazySession:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setCookieMaxAge(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field cookieMaxAge:J
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.SessionHandler setCookieless(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field cookieless:Z
       5: aload_0
       6: areturn

  public io.vertx.core.Future<java.lang.Void> flush(io.vertx.ext.web.RoutingContext, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iload_2
       4: invokespecial #21                 // Method flush:(Lio/vertx/ext/web/RoutingContext;ZZ)Lio/vertx/core/Future;
       7: areturn

  private void setCookieProperties(io.vertx.core.http.Cookie, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field sessionCookiePath:Ljava/lang/String;
       5: invokeinterface #22,  2           // InterfaceMethod io/vertx/core/http/Cookie.setPath:(Ljava/lang/String;)Lio/vertx/core/http/Cookie;
      10: pop
      11: aload_1
      12: aload_0
      13: getfield      #11                 // Field sessionCookieSecure:Z
      16: invokeinterface #23,  2           // InterfaceMethod io/vertx/core/http/Cookie.setSecure:(Z)Lio/vertx/core/http/Cookie;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #12                 // Field sessionCookieHttpOnly:Z
      27: invokeinterface #24,  2           // InterfaceMethod io/vertx/core/http/Cookie.setHttpOnly:(Z)Lio/vertx/core/http/Cookie;
      32: pop
      33: aload_1
      34: aload_0
      35: getfield      #19                 // Field cookieSameSite:Lio/vertx/core/http/CookieSameSite;
      38: invokeinterface #25,  2           // InterfaceMethod io/vertx/core/http/Cookie.setSameSite:(Lio/vertx/core/http/CookieSameSite;)Lio/vertx/core/http/Cookie;
      43: pop
      44: iload_2
      45: ifne          68
      48: aload_0
      49: getfield      #17                 // Field cookieMaxAge:J
      52: lconst_0
      53: lcmp
      54: iflt          68
      57: aload_1
      58: aload_0
      59: getfield      #17                 // Field cookieMaxAge:J
      62: invokeinterface #26,  3           // InterfaceMethod io/vertx/core/http/Cookie.setMaxAge:(J)Lio/vertx/core/http/Cookie;
      67: pop
      68: return

  private io.vertx.core.Future<java.lang.Void> flush(io.vertx.ext.web.RoutingContext, boolean, boolean);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.isSessionAccessed:()Z
       6: istore        4
       8: aload_1
       9: invokeinterface #28,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.session:()Lio/vertx/ext/web/Session;
      14: astore        5
      16: aload_1
      17: invokeinterface #29,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.vertx:()Lio/vertx/core/Vertx;
      22: invokeinterface #30,  1           // InterfaceMethod io/vertx/core/Vertx.getOrCreateContext:()Lio/vertx/core/Context;
      27: checkcast     #31                 // class io/vertx/core/impl/ContextInternal
      30: astore        6
      32: aload         5
      34: ifnonnull     45
      37: aload         6
      39: invokeinterface #32,  1           // InterfaceMethod io/vertx/core/impl/ContextInternal.succeededFuture:()Lio/vertx/core/Future;
      44: areturn
      45: aload         5
      47: invokeinterface #33,  1           // InterfaceMethod io/vertx/ext/web/Session.isDestroyed:()Z
      52: ifne          314
      55: aload_1
      56: invokeinterface #34,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      61: invokeinterface #35,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.getStatusCode:()I
      66: istore        7
      68: iload_3
      69: ifne          88
      72: iload         7
      74: sipush        200
      77: if_icmplt     306
      80: iload         7
      82: sipush        400
      85: if_icmpge     306
      88: aload_1
      89: ldc           #37                 // String __vertx.session-storeuser
      91: invokeinterface #38,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.get:(Ljava/lang/String;)Ljava/lang/Object;
      96: checkcast     #39                 // class java/lang/Boolean
      99: astore        8
     101: aload         8
     103: ifnull        141
     106: aload         8
     108: invokevirtual #40                 // Method java/lang/Boolean.booleanValue:()Z
     111: ifeq          141
     114: aload_1
     115: invokeinterface #41,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.user:()Lio/vertx/ext/auth/User;
     120: ifnull        141
     123: aload         5
     125: ldc           #42                 // String __vertx.userHolder
     127: new           #43                 // class io/vertx/ext/web/handler/impl/UserHolder
     130: dup
     131: aload_1
     132: invokespecial #44                 // Method io/vertx/ext/web/handler/impl/UserHolder."<init>":(Lio/vertx/ext/web/RoutingContext;)V
     135: invokeinterface #45,  3           // InterfaceMethod io/vertx/ext/web/Session.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/Session;
     140: pop
     141: aload         5
     143: invokeinterface #46,  1           // InterfaceMethod io/vertx/ext/web/Session.isRegenerated:()Z
     148: ifeq          238
     151: aload_0
     152: getfield      #20                 // Field cookieless:Z
     155: ifeq          168
     158: aload         5
     160: invokeinterface #47,  1           // InterfaceMethod io/vertx/ext/web/Session.setAccessed:()V
     165: goto          206
     168: aload_0
     169: aload_1
     170: aload         5
     172: invokespecial #48                 // Method sessionCookie:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/Session;)Lio/vertx/core/http/Cookie;
     175: astore        9
     177: aload         5
     179: invokeinterface #47,  1           // InterfaceMethod io/vertx/ext/web/Session.setAccessed:()V
     184: aload         9
     186: aload         5
     188: invokeinterface #49,  1           // InterfaceMethod io/vertx/ext/web/Session.value:()Ljava/lang/String;
     193: invokeinterface #50,  2           // InterfaceMethod io/vertx/core/http/Cookie.setValue:(Ljava/lang/String;)Lio/vertx/core/http/Cookie;
     198: pop
     199: aload_0
     200: aload         9
     202: iconst_0
     203: invokespecial #51                 // Method setCookieProperties:(Lio/vertx/core/http/Cookie;Z)V
     206: aload_0
     207: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
     210: aload         5
     212: invokeinterface #52,  1           // InterfaceMethod io/vertx/ext/web/Session.oldId:()Ljava/lang/String;
     217: invokeinterface #53,  2           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.delete:(Ljava/lang/String;)Lio/vertx/core/Future;
     222: aload_0
     223: aload         5
     225: aload_1
     226: iload_2
     227: invokedynamic #54,  0             // InvokeDynamic #0:apply:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;Lio/vertx/ext/web/Session;Lio/vertx/ext/web/RoutingContext;Z)Ljava/util/function/Function;
     232: invokeinterface #55,  2           // InterfaceMethod io/vertx/core/Future.compose:(Ljava/util/function/Function;)Lio/vertx/core/Future;
     237: areturn
     238: aload_0
     239: getfield      #14                 // Field lazySession:Z
     242: ifeq          250
     245: iload         4
     247: ifeq          298
     250: aload_0
     251: getfield      #20                 // Field cookieless:Z
     254: ifne          265
     257: aload_0
     258: aload_1
     259: aload         5
     261: invokespecial #48                 // Method sessionCookie:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/Session;)Lio/vertx/core/http/Cookie;
     264: pop
     265: aload         5
     267: invokeinterface #47,  1           // InterfaceMethod io/vertx/ext/web/Session.setAccessed:()V
     272: aload_0
     273: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
     276: aload         5
     278: invokeinterface #56,  2           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.put:(Lio/vertx/ext/web/Session;)Lio/vertx/core/Future;
     283: aload_1
     284: aload         5
     286: iload_2
     287: invokedynamic #57,  0             // InvokeDynamic #1:handle:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/Session;Z)Lio/vertx/core/Handler;
     292: invokeinterface #58,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     297: areturn
     298: aload         6
     300: invokeinterface #32,  1           // InterfaceMethod io/vertx/core/impl/ContextInternal.succeededFuture:()Lio/vertx/core/Future;
     305: areturn
     306: aload         6
     308: invokeinterface #32,  1           // InterfaceMethod io/vertx/core/impl/ContextInternal.succeededFuture:()Lio/vertx/core/Future;
     313: areturn
     314: aload_0
     315: getfield      #20                 // Field cookieless:Z
     318: ifne          350
     321: aload_1
     322: invokeinterface #34,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     327: aload_0
     328: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
     331: invokeinterface #59,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.removeCookie:(Ljava/lang/String;)Lio/vertx/core/http/Cookie;
     336: astore        7
     338: aload         7
     340: ifnull        350
     343: aload_0
     344: aload         7
     346: iconst_1
     347: invokespecial #51                 // Method setCookieProperties:(Lio/vertx/core/http/Cookie;Z)V
     350: aload         5
     352: invokeinterface #46,  1           // InterfaceMethod io/vertx/ext/web/Session.isRegenerated:()Z
     357: ifeq          391
     360: aload_0
     361: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
     364: aload         5
     366: invokeinterface #52,  1           // InterfaceMethod io/vertx/ext/web/Session.oldId:()Ljava/lang/String;
     371: invokeinterface #53,  2           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.delete:(Ljava/lang/String;)Lio/vertx/core/Future;
     376: aload_0
     377: aload         5
     379: aload_1
     380: invokedynamic #60,  0             // InvokeDynamic #2:apply:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;Lio/vertx/ext/web/Session;Lio/vertx/ext/web/RoutingContext;)Ljava/util/function/Function;
     385: invokeinterface #55,  2           // InterfaceMethod io/vertx/core/Future.compose:(Ljava/util/function/Function;)Lio/vertx/core/Future;
     390: areturn
     391: aload_0
     392: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
     395: aload         5
     397: invokeinterface #61,  1           // InterfaceMethod io/vertx/ext/web/Session.id:()Ljava/lang/String;
     402: invokeinterface #53,  2           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.delete:(Ljava/lang/String;)Lio/vertx/core/Future;
     407: aload_1
     408: invokedynamic #62,  0             // InvokeDynamic #3:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
     413: invokeinterface #58,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     418: areturn

  public void handle(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: astore_2
       7: aload_0
       8: getfield      #10                 // Field nagHttps:Z
      11: ifeq          68
      14: getstatic     #64                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
      17: invokeinterface #65,  1           // InterfaceMethod io/vertx/core/impl/logging/Logger.isDebugEnabled:()Z
      22: ifeq          68
      25: aload_2
      26: invokeinterface #66,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.absoluteURI:()Ljava/lang/String;
      31: astore_3
      32: aload_3
      33: ldc           #67                 // String https:
      35: invokevirtual #68                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      38: ifne          68
      41: getstatic     #64                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
      44: new           #69                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #71                 // String Using session cookies without https could make you susceptible to session hijacking:
      53: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_3
      57: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokeinterface #74,  2           // InterfaceMethod io/vertx/core/impl/logging/Logger.debug:(Ljava/lang/Object;)V
      68: aload_0
      69: aload_1
      70: invokespecial #75                 // Method getSessionId:(Lio/vertx/ext/web/RoutingContext;)Ljava/lang/String;
      73: astore_3
      74: aload_3
      75: ifnull        165
      78: aload_3
      79: invokevirtual #76                 // Method java/lang/String.length:()I
      82: aload_0
      83: getfield      #13                 // Field minLength:I
      86: if_icmple     165
      89: aload_1
      90: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      95: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.isEnded:()Z
     100: ifne          115
     103: aload_1
     104: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
     109: invokeinterface #78,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.pause:()Lio/vertx/core/http/HttpServerRequest;
     114: pop
     115: aload_1
     116: invokeinterface #29,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.vertx:()Lio/vertx/core/Vertx;
     121: invokeinterface #30,  1           // InterfaceMethod io/vertx/core/Vertx.getOrCreateContext:()Lio/vertx/core/Context;
     126: checkcast     #31                 // class io/vertx/core/impl/ContextInternal
     129: astore        4
     131: aload_0
     132: aload         4
     134: aload_3
     135: invokespecial #79                 // Method getSession:(Lio/vertx/core/impl/ContextInternal;Ljava/lang/String;)Lio/vertx/core/Future;
     138: aload_1
     139: invokedynamic #80,  0             // InvokeDynamic #4:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
     144: invokeinterface #81,  2           // InterfaceMethod io/vertx/core/Future.onFailure:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     149: aload_0
     150: aload_1
     151: invokedynamic #82,  0             // InvokeDynamic #5:handle:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
     156: invokeinterface #58,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
     161: pop
     162: goto          176
     165: aload_0
     166: aload_1
     167: invokespecial #83                 // Method createNewSession:(Lio/vertx/ext/web/RoutingContext;)V
     170: aload_1
     171: invokeinterface #84,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
     176: return

  public io.vertx.ext.web.Session newSession(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
       4: aload_0
       5: getfield      #9                  // Field sessionTimeout:J
       8: aload_0
       9: getfield      #13                 // Field minLength:I
      12: invokeinterface #85,  4           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.createSession:(JI)Lio/vertx/ext/web/Session;
      17: astore_2
      18: aload_1
      19: checkcast     #86                 // class io/vertx/ext/web/impl/RoutingContextInternal
      22: aload_2
      23: invokeinterface #87,  2           // InterfaceMethod io/vertx/ext/web/impl/RoutingContextInternal.setSession:(Lio/vertx/ext/web/Session;)V
      28: aload_0
      29: getfield      #20                 // Field cookieless:Z
      32: ifne          52
      35: aload_1
      36: invokeinterface #34,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      41: aload_0
      42: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
      45: iconst_0
      46: invokeinterface #88,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.removeCookie:(Ljava/lang/String;Z)Lio/vertx/core/http/Cookie;
      51: pop
      52: aload_1
      53: ldc           #37                 // String __vertx.session-storeuser
      55: iconst_1
      56: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      64: pop
      65: aload_0
      66: aload_1
      67: iconst_1
      68: iconst_1
      69: invokespecial #21                 // Method flush:(Lio/vertx/ext/web/RoutingContext;ZZ)Lio/vertx/core/Future;
      72: invokedynamic #91,  0             // InvokeDynamic #6:handle:()Lio/vertx/core/Handler;
      77: invokeinterface #81,  2           // InterfaceMethod io/vertx/core/Future.onFailure:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      82: pop
      83: aload_2
      84: areturn

  public io.vertx.core.Future<java.lang.Void> setUser(io.vertx.ext.web.RoutingContext, io.vertx.ext.auth.User);
    Code:
       0: aload_0
       1: getfield      #20                 // Field cookieless:Z
       4: ifne          24
       7: aload_1
       8: invokeinterface #34,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      13: aload_0
      14: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
      17: iconst_0
      18: invokeinterface #88,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.removeCookie:(Ljava/lang/String;Z)Lio/vertx/core/http/Cookie;
      23: pop
      24: aload_1
      25: aload_2
      26: invokeinterface #92,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.setUser:(Lio/vertx/ext/auth/User;)V
      31: aload_1
      32: ldc           #37                 // String __vertx.session-storeuser
      34: iconst_1
      35: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      43: pop
      44: aload_0
      45: aload_1
      46: iconst_1
      47: iconst_1
      48: invokespecial #21                 // Method flush:(Lio/vertx/ext/web/RoutingContext;ZZ)Lio/vertx/core/Future;
      51: areturn

  private java.lang.String getSessionId(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: getfield      #20                 // Field cookieless:Z
       4: ifeq          107
       7: aload_1
       8: invokeinterface #93,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.normalizedPath:()Ljava/lang/String;
      13: astore_2
      14: iconst_m1
      15: istore_3
      16: iconst_m1
      17: istore        4
      19: iconst_0
      20: istore        5
      22: iload         5
      24: aload_2
      25: invokevirtual #76                 // Method java/lang/String.length:()I
      28: if_icmpge     79
      31: aload_2
      32: iload         5
      34: invokevirtual #94                 // Method java/lang/String.charAt:(I)C
      37: bipush        40
      39: if_icmpne     50
      42: iload         5
      44: iconst_1
      45: iadd
      46: istore_3
      47: goto          73
      50: aload_2
      51: iload         5
      53: invokevirtual #94                 // Method java/lang/String.charAt:(I)C
      56: bipush        41
      58: if_icmpne     73
      61: iload_3
      62: iconst_m1
      63: if_icmpeq     73
      66: iload         5
      68: istore        4
      70: goto          79
      73: iinc          5, 1
      76: goto          22
      79: iload_3
      80: iconst_m1
      81: if_icmpeq     104
      84: iload         4
      86: iconst_m1
      87: if_icmpeq     104
      90: iload_3
      91: iload         4
      93: if_icmpge     104
      96: aload_2
      97: iload_3
      98: iload         4
     100: invokevirtual #95                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     103: areturn
     104: goto          134
     107: aload_1
     108: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
     113: aload_0
     114: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
     117: invokeinterface #96,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getCookie:(Ljava/lang/String;)Lio/vertx/core/http/Cookie;
     122: astore_2
     123: aload_2
     124: ifnull        134
     127: aload_2
     128: invokeinterface #97,  1           // InterfaceMethod io/vertx/core/http/Cookie.getValue:()Ljava/lang/String;
     133: areturn
     134: aconst_null
     135: areturn

  private io.vertx.core.Future<io.vertx.ext.web.Session> getSession(io.vertx.core.impl.ContextInternal, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method java/lang/System.currentTimeMillis:()J
       5: aload_2
       6: invokespecial #99                 // Method doGetSession:(Lio/vertx/core/impl/ContextInternal;JLjava/lang/String;)Lio/vertx/core/Future;
       9: areturn

  private io.vertx.core.Future<io.vertx.ext.web.Session> doGetSession(io.vertx.core.impl.ContextInternal, long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
       4: aload         4
       6: invokeinterface #100,  2          // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.get:(Ljava/lang/String;)Lio/vertx/core/Future;
      11: aload_0
      12: aload_1
      13: lload_2
      14: aload         4
      16: invokedynamic #101,  0            // InvokeDynamic #7:apply:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;Lio/vertx/core/impl/ContextInternal;JLjava/lang/String;)Ljava/util/function/Function;
      21: invokeinterface #55,  2           // InterfaceMethod io/vertx/core/Future.compose:(Ljava/util/function/Function;)Lio/vertx/core/Future;
      26: areturn

  private void doGetSession(io.vertx.core.Vertx, long, java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.ext.web.Session>>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
       4: aload         4
       6: invokeinterface #100,  2          // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.get:(Ljava/lang/String;)Lio/vertx/core/Future;
      11: aload_0
      12: lload_2
      13: aload_1
      14: aload         4
      16: aload         5
      18: invokedynamic #102,  0            // InvokeDynamic #8:handle:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;JLio/vertx/core/Vertx;Ljava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/Handler;
      23: invokeinterface #103,  2          // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      28: pop
      29: return

  private void addStoreSessionHandler(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokedynamic #104,  0            // InvokeDynamic #9:handle:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
       8: invokeinterface #105,  2          // InterfaceMethod io/vertx/ext/web/RoutingContext.addHeadersEndHandler:(Lio/vertx/core/Handler;)I
      13: pop
      14: return

  private void createNewSession(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
       4: aload_0
       5: getfield      #9                  // Field sessionTimeout:J
       8: aload_0
       9: getfield      #13                 // Field minLength:I
      12: invokeinterface #85,  4           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.createSession:(JI)Lio/vertx/ext/web/Session;
      17: astore_2
      18: aload_1
      19: checkcast     #86                 // class io/vertx/ext/web/impl/RoutingContextInternal
      22: aload_2
      23: invokeinterface #87,  2           // InterfaceMethod io/vertx/ext/web/impl/RoutingContextInternal.setSession:(Lio/vertx/ext/web/Session;)V
      28: aload_0
      29: getfield      #20                 // Field cookieless:Z
      32: ifne          52
      35: aload_1
      36: invokeinterface #34,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      41: aload_0
      42: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
      45: iconst_0
      46: invokeinterface #88,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.removeCookie:(Ljava/lang/String;Z)Lio/vertx/core/http/Cookie;
      51: pop
      52: aload_1
      53: ldc           #37                 // String __vertx.session-storeuser
      55: iconst_1
      56: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      64: pop
      65: aload_0
      66: aload_1
      67: invokespecial #106                // Method addStoreSessionHandler:(Lio/vertx/ext/web/RoutingContext;)V
      70: return

  private io.vertx.core.http.Cookie sessionCookie(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.Session);
    Code:
       0: aload_1
       1: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: aload_0
       7: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
      10: invokeinterface #96,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getCookie:(Ljava/lang/String;)Lio/vertx/core/http/Cookie;
      15: astore_3
      16: aload_3
      17: ifnull        22
      20: aload_3
      21: areturn
      22: aload_0
      23: getfield      #4                  // Field sessionCookieName:Ljava/lang/String;
      26: aload_2
      27: invokeinterface #49,  1           // InterfaceMethod io/vertx/ext/web/Session.value:()Ljava/lang/String;
      32: invokestatic  #107                // InterfaceMethod io/vertx/core/http/Cookie.cookie:(Ljava/lang/String;Ljava/lang/String;)Lio/vertx/core/http/Cookie;
      35: astore_3
      36: aload_0
      37: aload_3
      38: iconst_0
      39: invokespecial #51                 // Method setCookieProperties:(Lio/vertx/core/http/Cookie;Z)V
      42: aload_1
      43: invokeinterface #34,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      48: aload_3
      49: invokeinterface #108,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.addCookie:(Lio/vertx/core/http/Cookie;)Lio/vertx/core/http/HttpServerResponse;
      54: pop
      55: aload_3
      56: areturn

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #109                // class io/vertx/ext/web/RoutingContext
       5: invokevirtual #110                // Method handle:(Lio/vertx/ext/web/RoutingContext;)V
       8: return

  private void lambda$addStoreSessionHandler$13(io.vertx.ext.web.RoutingContext, java.lang.Void);
    Code:
       0: aload_1
       1: ldc           #111                // String __vertx.session-flushed
       3: invokeinterface #38,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.get:(Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #39                 // class java/lang/Boolean
      11: astore_3
      12: aload_3
      13: ifnull        23
      16: aload_3
      17: invokevirtual #40                 // Method java/lang/Boolean.booleanValue:()Z
      20: ifne          41
      23: aload_0
      24: aload_1
      25: iconst_1
      26: iconst_0
      27: invokespecial #21                 // Method flush:(Lio/vertx/ext/web/RoutingContext;ZZ)Lio/vertx/core/Future;
      30: invokedynamic #112,  0            // InvokeDynamic #10:handle:()Lio/vertx/core/Handler;
      35: invokeinterface #81,  2           // InterfaceMethod io/vertx/core/Future.onFailure:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      40: pop
      41: return

  private static void lambda$null$12(java.lang.Throwable);
    Code:
       0: getstatic     #64                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: ldc           #113                // String Failed to flush the session to the underlying store
       5: aload_0
       6: invokeinterface #114,  3          // InterfaceMethod io/vertx/core/impl/logging/Logger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  private void lambda$doGetSession$11(long, io.vertx.core.Vertx, java.lang.String, io.vertx.core.Handler, io.vertx.core.AsyncResult);
    Code:
       0: aload         6
       2: invokeinterface #115,  1          // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       7: ifeq          61
      10: aload         6
      12: invokeinterface #116,  1          // InterfaceMethod io/vertx/core/AsyncResult.result:()Ljava/lang/Object;
      17: ifnonnull     61
      20: invokestatic  #98                 // Method java/lang/System.currentTimeMillis:()J
      23: lload_1
      24: lsub
      25: aload_0
      26: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
      29: invokeinterface #117,  1          // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.retryTimeout:()J
      34: lcmp
      35: ifge          61
      38: aload_3
      39: ldc2_w        #118                // long 5l
      42: aload_0
      43: aload_3
      44: lload_1
      45: aload         4
      47: aload         5
      49: invokedynamic #120,  0            // InvokeDynamic #11:handle:(Lio/vertx/ext/web/handler/impl/SessionHandlerImpl;Lio/vertx/core/Vertx;JLjava/lang/String;Lio/vertx/core/Handler;)Lio/vertx/core/Handler;
      54: invokeinterface #121,  4          // InterfaceMethod io/vertx/core/Vertx.setTimer:(JLio/vertx/core/Handler;)J
      59: pop2
      60: return
      61: aload         5
      63: aload         6
      65: invokeinterface #122,  2          // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      70: return

  private void lambda$null$10(io.vertx.core.Vertx, long, java.lang.String, io.vertx.core.Handler, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: aload         5
       7: invokespecial #123                // Method doGetSession:(Lio/vertx/core/Vertx;JLjava/lang/String;Lio/vertx/core/Handler;)V
      10: return

  private io.vertx.core.Future lambda$doGetSession$9(io.vertx.core.impl.ContextInternal, long, java.lang.String, io.vertx.ext.web.Session);
    Code:
       0: aload         5
       2: ifnonnull     36
       5: aload_1
       6: invokeinterface #124,  1          // InterfaceMethod io/vertx/core/impl/ContextInternal.promise:()Lio/vertx/core/impl/future/PromiseInternal;
      11: astore        6
      13: aload_0
      14: aload_1
      15: invokeinterface #125,  1          // InterfaceMethod io/vertx/core/impl/ContextInternal.owner:()Lio/vertx/core/impl/VertxInternal;
      20: lload_2
      21: aload         4
      23: aload         6
      25: invokespecial #123                // Method doGetSession:(Lio/vertx/core/Vertx;JLjava/lang/String;Lio/vertx/core/Handler;)V
      28: aload         6
      30: invokeinterface #126,  1          // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
      35: areturn
      36: aload_1
      37: aload         5
      39: invokeinterface #127,  2          // InterfaceMethod io/vertx/core/impl/ContextInternal.succeededFuture:(Ljava/lang/Object;)Lio/vertx/core/Future;
      44: areturn

  private static void lambda$newSession$8(java.lang.Throwable);
    Code:
       0: getstatic     #64                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: ldc           #113                // String Failed to flush the session to the underlying store
       5: aload_0
       6: invokeinterface #114,  3          // InterfaceMethod io/vertx/core/impl/logging/Logger.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  private void lambda$handle$7(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.Session);
    Code:
       0: aload_2
       1: ifnull        59
       4: aload_1
       5: checkcast     #86                 // class io/vertx/ext/web/impl/RoutingContextInternal
       8: aload_2
       9: invokeinterface #87,  2           // InterfaceMethod io/vertx/ext/web/impl/RoutingContextInternal.setSession:(Lio/vertx/ext/web/Session;)V
      14: aload_2
      15: ldc           #42                 // String __vertx.userHolder
      17: invokeinterface #128,  2          // InterfaceMethod io/vertx/ext/web/Session.get:(Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #43                 // class io/vertx/ext/web/handler/impl/UserHolder
      25: astore_3
      26: aload_3
      27: ifnull        38
      30: aload_3
      31: aload_1
      32: invokevirtual #129                // Method io/vertx/ext/web/handler/impl/UserHolder.refresh:(Lio/vertx/ext/web/RoutingContext;)V
      35: goto          51
      38: aload_1
      39: ldc           #37                 // String __vertx.session-storeuser
      41: iconst_1
      42: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      45: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      50: pop
      51: aload_0
      52: aload_1
      53: invokespecial #106                // Method addStoreSessionHandler:(Lio/vertx/ext/web/RoutingContext;)V
      56: goto          64
      59: aload_0
      60: aload_1
      61: invokespecial #83                 // Method createNewSession:(Lio/vertx/ext/web/RoutingContext;)V
      64: aload_1
      65: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      70: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.isEnded:()Z
      75: ifne          90
      78: aload_1
      79: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      84: invokeinterface #130,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.resume:()Lio/vertx/core/http/HttpServerRequest;
      89: pop
      90: aload_1
      91: invokeinterface #84,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
      96: return

  private static void lambda$handle$6(io.vertx.ext.web.RoutingContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: invokeinterface #77,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.isEnded:()Z
      11: ifne          26
      14: aload_0
      15: invokeinterface #63,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      20: invokeinterface #130,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.resume:()Lio/vertx/core/http/HttpServerRequest;
      25: pop
      26: aload_0
      27: aload_1
      28: invokeinterface #131,  2          // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(Ljava/lang/Throwable;)V
      33: return

  private static void lambda$flush$5(io.vertx.ext.web.RoutingContext, java.lang.Void);
    Code:
       0: aload_0
       1: ldc           #111                // String __vertx.session-flushed
       3: iconst_1
       4: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      12: pop
      13: return

  private io.vertx.core.Future lambda$flush$4(io.vertx.ext.web.Session, io.vertx.ext.web.RoutingContext, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
       4: aload_1
       5: invokeinterface #61,  1           // InterfaceMethod io/vertx/ext/web/Session.id:()Ljava/lang/String;
      10: invokeinterface #53,  2           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.delete:(Ljava/lang/String;)Lio/vertx/core/Future;
      15: aload_2
      16: invokedynamic #132,  0            // InvokeDynamic #12:handle:(Lio/vertx/ext/web/RoutingContext;)Lio/vertx/core/Handler;
      21: invokeinterface #58,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      26: areturn

  private static void lambda$null$3(io.vertx.ext.web.RoutingContext, java.lang.Void);
    Code:
       0: aload_0
       1: ldc           #111                // String __vertx.session-flushed
       3: iconst_1
       4: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      12: pop
      13: return

  private static void lambda$flush$2(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.Session, boolean, java.lang.Void);
    Code:
       0: aload_0
       1: ldc           #111                // String __vertx.session-flushed
       3: iconst_1
       4: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      12: pop
      13: aload_1
      14: instanceof    #133                // class io/vertx/ext/web/sstore/impl/SessionInternal
      17: ifeq          30
      20: aload_1
      21: checkcast     #133                // class io/vertx/ext/web/sstore/impl/SessionInternal
      24: iload_2
      25: invokeinterface #134,  2          // InterfaceMethod io/vertx/ext/web/sstore/impl/SessionInternal.flushed:(Z)V
      30: return

  private io.vertx.core.Future lambda$flush$1(io.vertx.ext.web.Session, io.vertx.ext.web.RoutingContext, boolean, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sessionStore:Lio/vertx/ext/web/sstore/SessionStore;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod io/vertx/ext/web/sstore/SessionStore.put:(Lio/vertx/ext/web/Session;)Lio/vertx/core/Future;
      10: aload_2
      11: aload_1
      12: iload_3
      13: invokedynamic #135,  0            // InvokeDynamic #13:handle:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/Session;Z)Lio/vertx/core/Handler;
      18: invokeinterface #58,  2           // InterfaceMethod io/vertx/core/Future.onSuccess:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      23: areturn

  private static void lambda$null$0(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.Session, boolean, java.lang.Void);
    Code:
       0: aload_0
       1: ldc           #111                // String __vertx.session-flushed
       3: iconst_1
       4: invokestatic  #89                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: invokeinterface #90,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      12: pop
      13: aload_1
      14: instanceof    #133                // class io/vertx/ext/web/sstore/impl/SessionInternal
      17: ifeq          30
      20: aload_1
      21: checkcast     #133                // class io/vertx/ext/web/sstore/impl/SessionInternal
      24: iload_2
      25: invokeinterface #134,  2          // InterfaceMethod io/vertx/ext/web/sstore/impl/SessionInternal.flushed:(Z)V
      30: return

  static {};
    Code:
       0: ldc           #36                 // class io/vertx/ext/web/handler/impl/SessionHandlerImpl
       2: invokestatic  #136                // Method io/vertx/core/impl/logging/LoggerFactory.getLogger:(Ljava/lang/Class;)Lio/vertx/core/impl/logging/Logger;
       5: putstatic     #64                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
       8: return
}
