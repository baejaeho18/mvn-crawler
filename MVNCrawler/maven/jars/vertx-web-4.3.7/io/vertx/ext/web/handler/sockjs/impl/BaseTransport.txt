Compiled from "BaseTransport.java"
class io.vertx.ext.web.handler.sockjs.impl.BaseTransport {
  private static final io.vertx.core.impl.logging.Logger LOG;

  protected final io.vertx.core.Vertx vertx;

  protected final io.vertx.core.shareddata.LocalMap<java.lang.String, io.vertx.ext.web.handler.sockjs.impl.SockJSSession> sessions;

  protected final io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions options;

  static final java.lang.String COMMON_PATH_ELEMENT_RE;

  public io.vertx.ext.web.handler.sockjs.impl.BaseTransport(io.vertx.core.Vertx, io.vertx.core.shareddata.LocalMap<java.lang.String, io.vertx.ext.web.handler.sockjs.impl.SockJSSession>, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field sessions:Lio/vertx/core/shareddata/LocalMap;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
      19: return

  protected io.vertx.ext.web.handler.sockjs.impl.SockJSSession getSession(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, java.lang.String, io.vertx.core.Handler<io.vertx.ext.web.handler.sockjs.SockJSSocket>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessions:Lio/vertx/core/shareddata/LocalMap;
       4: aload_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload         4
      10: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lio/vertx/ext/web/handler/sockjs/impl/BaseTransport;Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/core/Handler;)Ljava/util/function/Function;
      15: invokeinterface #7,  3            // InterfaceMethod io/vertx/core/shareddata/LocalMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      20: checkcast     #8                  // class io/vertx/ext/web/handler/sockjs/impl/SockJSSession
      23: areturn

  protected void sendInvalidJSON(io.vertx.core.http.HttpServerResponse);
    Code:
       0: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: invokeinterface #9,  1            // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
       8: ifeq          21
      11: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
      14: ldc           #10                 // String Broken JSON
      16: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
      21: aload_1
      22: sipush        500
      25: invokeinterface #12,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      30: pop
      31: aload_1
      32: ldc           #13                 // String Broken JSON encoding.
      34: invokeinterface #14,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
      39: pop
      40: return

  protected java.lang.String escapeForJavaScript(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method io/vertx/ext/web/handler/sockjs/impl/StringEscapeUtils.escapeJavaScript:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: goto          22
       8: astore_2
       9: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
      12: ldc           #17                 // String Failed to escape
      14: aload_2
      15: invokeinterface #18,  3           // InterfaceMethod io/vertx/core/impl/logging/Logger.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      20: aconst_null
      21: astore_1
      22: aload_1
      23: areturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  static void setJSESSIONID(io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.COOKIE:Ljava/lang/CharSequence;
       9: invokeinterface #21,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      14: astore_2
      15: aload_0
      16: invokevirtual #22                 // Method io/vertx/ext/web/handler/sockjs/SockJSHandlerOptions.isInsertJSESSIONID:()Z
      19: ifeq          142
      22: aload_2
      23: ifnull        119
      26: aload_2
      27: ldc           #23                 // String ;
      29: invokevirtual #24                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      32: ifeq          45
      35: aload_2
      36: ldc           #23                 // String ;
      38: invokevirtual #25                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      41: astore_3
      42: goto          54
      45: iconst_1
      46: anewarray     #26                 // class java/lang/String
      49: dup
      50: iconst_0
      51: aload_2
      52: aastore
      53: astore_3
      54: aload_3
      55: astore        4
      57: aload         4
      59: arraylength
      60: istore        5
      62: iconst_0
      63: istore        6
      65: iload         6
      67: iload         5
      69: if_icmpge     119
      72: aload         4
      74: iload         6
      76: aaload
      77: astore        7
      79: aload         7
      81: ldc           #27                 // String JSESSIONID
      83: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      86: ifeq          113
      89: new           #29                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      96: aload         7
      98: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #32                 // String ; path=/
     103: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: astore_2
     110: goto          119
     113: iinc          6, 1
     116: goto          65
     119: aload_2
     120: ifnonnull     126
     123: ldc           #34                 // String JSESSIONID=dummy; path=/
     125: astore_2
     126: aload_1
     127: invokeinterface #35,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     132: getstatic     #36                 // Field io/vertx/core/http/HttpHeaders.SET_COOKIE:Ljava/lang/CharSequence;
     135: aload_2
     136: invokeinterface #37,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     141: pop
     142: return

  static void setCORSIfNeeded(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: checkcast     #38                 // class io/vertx/ext/web/impl/RoutingContextInternal
       4: iconst_4
       5: invokeinterface #39,  2           // InterfaceMethod io/vertx/ext/web/impl/RoutingContextInternal.seenHandler:(I)Z
      10: ifne          154
      13: aload_0
      14: invokeinterface #19,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
      19: astore_1
      20: aload_1
      21: getstatic     #40                 // Field io/vertx/core/http/HttpHeaders.ORIGIN:Ljava/lang/CharSequence;
      24: invokeinterface #21,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      29: astore_2
      30: aload_2
      31: ifnonnull     37
      34: ldc           #41                 // String *
      36: astore_2
      37: aload_1
      38: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
      43: invokeinterface #43,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
      48: getstatic     #44                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN:Ljava/lang/CharSequence;
      51: aload_2
      52: invokeinterface #45,  3           // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
      57: pop
      58: ldc           #41                 // String *
      60: aload_2
      61: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifeq          92
      67: aload_1
      68: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
      73: invokeinterface #43,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
      78: getstatic     #47                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS:Ljava/lang/CharSequence;
      81: ldc           #48                 // String false
      83: invokeinterface #45,  3           // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
      88: pop
      89: goto          114
      92: aload_1
      93: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
      98: invokeinterface #43,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
     103: getstatic     #47                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS:Ljava/lang/CharSequence;
     106: ldc           #49                 // String true
     108: invokeinterface #45,  3           // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
     113: pop
     114: aload_1
     115: invokeinterface #50,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.headers:()Lio/vertx/core/MultiMap;
     120: getstatic     #51                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS:Ljava/lang/CharSequence;
     123: invokeinterface #52,  2           // InterfaceMethod io/vertx/core/MultiMap.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
     128: astore_3
     129: aload_3
     130: ifnull        154
     133: aload_1
     134: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
     139: invokeinterface #43,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
     144: getstatic     #53                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS:Ljava/lang/CharSequence;
     147: aload_3
     148: invokeinterface #45,  3           // InterfaceMethod io/vertx/core/MultiMap.set:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
     153: pop
     154: return

  static io.vertx.ext.web.handler.PlatformHandler createInfoHandler(io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, io.vertx.ext.auth.VertxContextPRNG);
    Code:
       0: ldc2_w        #54                 // long 2147483648l
       3: lstore_2
       4: new           #56                 // class io/vertx/ext/web/handler/sockjs/impl/BaseTransport$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #57                 // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport$1."<init>":(Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/ext/auth/VertxContextPRNG;)V
      13: areturn

  static void setNoCacheHeaders(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: invokeinterface #35,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
       6: getstatic     #58                 // Field io/vertx/core/http/HttpHeaders.CACHE_CONTROL:Ljava/lang/CharSequence;
       9: ldc           #59                 // String no-store, no-cache, no-transform, must-revalidate, max-age=0
      11: invokeinterface #37,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      16: pop
      17: return

  static io.vertx.ext.web.handler.SecurityPolicyHandler createCORSOptionsHandler(io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #60,  0             // InvokeDynamic #1:handle:(Ljava/lang/String;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;)Lio/vertx/ext/web/handler/SecurityPolicyHandler;
       7: areturn

  static io.vertx.core.MultiMap removeCookieHeaders(io.vertx.core.MultiMap);
    Code:
       0: aload_0
       1: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.COOKIE:Ljava/lang/CharSequence;
       4: invokeinterface #52,  2           // InterfaceMethod io/vertx/core/MultiMap.get:(Ljava/lang/CharSequence;)Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: ifnull        98
      14: aload_0
      15: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.COOKIE:Ljava/lang/CharSequence;
      18: invokeinterface #61,  2           // InterfaceMethod io/vertx/core/MultiMap.remove:(Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
      23: pop
      24: getstatic     #62                 // Field io/netty/handler/codec/http/cookie/ServerCookieDecoder.STRICT:Lio/netty/handler/codec/http/cookie/ServerCookieDecoder;
      27: aload_1
      28: invokevirtual #63                 // Method io/netty/handler/codec/http/cookie/ServerCookieDecoder.decode:(Ljava/lang/String;)Ljava/util/Set;
      31: astore_2
      32: aload_2
      33: invokeinterface #64,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore_3
      39: aload_3
      40: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          98
      48: aload_3
      49: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #67                 // class io/netty/handler/codec/http/cookie/Cookie
      57: astore        4
      59: aload         4
      61: invokeinterface #68,  1           // InterfaceMethod io/netty/handler/codec/http/cookie/Cookie.name:()Ljava/lang/String;
      66: ldc           #27                 // String JSESSIONID
      68: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          95
      74: aload_0
      75: getstatic     #20                 // Field io/vertx/core/http/HttpHeaders.COOKIE:Ljava/lang/CharSequence;
      78: getstatic     #69                 // Field io/netty/handler/codec/http/cookie/ServerCookieEncoder.STRICT:Lio/netty/handler/codec/http/cookie/ServerCookieEncoder;
      81: aload         4
      83: invokevirtual #70                 // Method io/netty/handler/codec/http/cookie/ServerCookieEncoder.encode:(Lio/netty/handler/codec/http/cookie/Cookie;)Ljava/lang/String;
      86: invokeinterface #71,  3           // InterfaceMethod io/vertx/core/MultiMap.add:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/MultiMap;
      91: pop
      92: goto          98
      95: goto          39
      98: aload_0
      99: areturn

  private static void lambda$createCORSOptionsHandler$1(java.lang.String, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, io.vertx.ext.web.RoutingContext);
    Code:
       0: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: invokeinterface #9,  1            // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
       8: ifeq          21
      11: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
      14: ldc           #72                 // String In CORS options handler
      16: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
      21: aload_2
      22: invokeinterface #35,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      27: getstatic     #58                 // Field io/vertx/core/http/HttpHeaders.CACHE_CONTROL:Ljava/lang/CharSequence;
      30: ldc           #73                 // String public,max-age=31536000
      32: invokeinterface #37,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      37: pop
      38: ldc2_w        #74                 // long 31536000l
      41: lstore_3
      42: lload_3
      43: ldc2_w        #76                 // long 1000l
      46: lmul
      47: lstore        5
      49: new           #78                 // class java/text/SimpleDateFormat
      52: dup
      53: ldc           #79                 // String EEE, dd MMM yyyy HH:mm:ss zzz
      55: invokespecial #80                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      58: new           #81                 // class java/util/Date
      61: dup
      62: invokestatic  #82                 // Method java/lang/System.currentTimeMillis:()J
      65: lload         5
      67: ladd
      68: invokespecial #83                 // Method java/util/Date."<init>":(J)V
      71: invokevirtual #84                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      74: astore        7
      76: aload_2
      77: invokeinterface #35,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      82: getstatic     #85                 // Field io/vertx/core/http/HttpHeaders.EXPIRES:Ljava/lang/CharSequence;
      85: aload         7
      87: invokeinterface #37,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      92: getstatic     #86                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS:Ljava/lang/CharSequence;
      95: aload_0
      96: invokeinterface #37,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     101: getstatic     #87                 // Field io/vertx/core/http/HttpHeaders.ACCESS_CONTROL_MAX_AGE:Ljava/lang/CharSequence;
     104: lload_3
     105: invokestatic  #88                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
     108: invokeinterface #37,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     113: pop
     114: aload_2
     115: invokestatic  #89                 // Method setCORSIfNeeded:(Lio/vertx/ext/web/RoutingContext;)V
     118: aload_1
     119: aload_2
     120: invokestatic  #90                 // Method setJSESSIONID:(Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/ext/web/RoutingContext;)V
     123: aload_2
     124: invokeinterface #35,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     129: sipush        204
     132: invokeinterface #12,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
     137: pop
     138: aload_2
     139: invokeinterface #35,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     144: invokeinterface #91,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
     149: pop
     150: return

  private io.vertx.ext.web.handler.sockjs.impl.SockJSSession lambda$getSession$0(io.vertx.ext.web.RoutingContext, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions, io.vertx.core.Handler, java.lang.String);
    Code:
       0: new           #8                  // class io/vertx/ext/web/handler/sockjs/impl/SockJSSession
       3: dup
       4: aload_0
       5: getfield      #3                  // Field vertx:Lio/vertx/core/Vertx;
       8: aload_0
       9: getfield      #4                  // Field sessions:Lio/vertx/core/shareddata/LocalMap;
      12: aload_1
      13: aload         4
      15: aload_2
      16: aload_3
      17: invokespecial #92                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession."<init>":(Lio/vertx/core/Vertx;Lio/vertx/core/shareddata/LocalMap;Lio/vertx/ext/web/RoutingContext;Ljava/lang/String;Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/core/Handler;)V
      20: areturn

  static io.vertx.core.impl.logging.Logger access$000();
    Code:
       0: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #93                 // class io/vertx/ext/web/handler/sockjs/impl/BaseTransport
       2: invokestatic  #94                 // Method io/vertx/core/impl/logging/LoggerFactory.getLogger:(Ljava/lang/Class;)Lio/vertx/core/impl/logging/Logger;
       5: putstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       8: return
}
