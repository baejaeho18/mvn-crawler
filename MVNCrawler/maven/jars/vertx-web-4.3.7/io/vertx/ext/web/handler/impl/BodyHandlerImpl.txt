Compiled from "BodyHandlerImpl.java"
public class io.vertx.ext.web.handler.impl.BodyHandlerImpl implements io.vertx.ext.web.handler.BodyHandler {
  private static final io.vertx.core.impl.logging.Logger LOG;

  private long bodyLimit;

  private boolean handleFileUploads;

  private java.lang.String uploadsDir;

  private boolean mergeFormAttributes;

  private boolean deleteUploadedFilesOnEnd;

  private boolean isPreallocateBodyBuffer;

  private static final int DEFAULT_INITIAL_BODY_BUFFER_SIZE;

  public io.vertx.ext.web.handler.impl.BodyHandlerImpl();
    Code:
       0: aload_0
       1: iconst_1
       2: ldc           #8                  // String file-uploads
       4: invokespecial #9                  // Method "<init>":(ZLjava/lang/String;)V
       7: return

  public io.vertx.ext.web.handler.impl.BodyHandlerImpl(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #8                  // String file-uploads
       4: invokespecial #9                  // Method "<init>":(ZLjava/lang/String;)V
       7: return

  public io.vertx.ext.web.handler.impl.BodyHandlerImpl(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokespecial #9                  // Method "<init>":(ZLjava/lang/String;)V
       6: return

  private io.vertx.ext.web.handler.impl.BodyHandlerImpl(boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #11                 // long -1l
       8: putfield      #5                  // Field bodyLimit:J
      11: aload_0
      12: iconst_1
      13: putfield      #2                  // Field mergeFormAttributes:Z
      16: aload_0
      17: iconst_0
      18: putfield      #3                  // Field deleteUploadedFilesOnEnd:Z
      21: aload_0
      22: iconst_0
      23: putfield      #13                 // Field isPreallocateBodyBuffer:Z
      26: aload_0
      27: iload_1
      28: putfield      #6                  // Field handleFileUploads:Z
      31: aload_0
      32: aload_2
      33: invokevirtual #14                 // Method setUploadsDirectory:(Ljava/lang/String;)Lio/vertx/ext/web/handler/BodyHandler;
      36: pop
      37: return

  public void handle(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: astore_2
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      13: astore_3
      14: aload_1
      15: checkcast     #17                 // class io/vertx/ext/web/impl/RoutingContextInternal
      18: iconst_2
      19: invokeinterface #18,  2           // InterfaceMethod io/vertx/ext/web/impl/RoutingContextInternal.seenHandler:(I)Z
      24: ifne          260
      27: aload_1
      28: checkcast     #17                 // class io/vertx/ext/web/impl/RoutingContextInternal
      31: iconst_2
      32: invokeinterface #19,  2           // InterfaceMethod io/vertx/ext/web/impl/RoutingContextInternal.visitHandler:(I)Lio/vertx/ext/web/impl/RoutingContextInternal;
      37: pop
      38: aload_0
      39: aload_2
      40: invokespecial #20                 // Method parseContentLengthHeader:(Lio/vertx/core/http/HttpServerRequest;)J
      43: lstore        4
      45: aload_2
      46: invokeinterface #21,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.version:()Lio/vertx/core/http/HttpVersion;
      51: getstatic     #22                 // Field io/vertx/core/http/HttpVersion.HTTP_2:Lio/vertx/core/http/HttpVersion;
      54: if_acmpeq     74
      57: aload_2
      58: invokeinterface #23,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.headers:()Lio/vertx/core/MultiMap;
      63: getstatic     #24                 // Field io/vertx/core/http/HttpHeaders.TRANSFER_ENCODING:Ljava/lang/CharSequence;
      66: invokeinterface #25,  2           // InterfaceMethod io/vertx/core/MultiMap.contains:(Ljava/lang/CharSequence;)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: istore        6
      81: iload         6
      83: ifne          102
      86: lload         4
      88: ldc2_w        #11                 // long -1l
      91: lcmp
      92: ifne          102
      95: aload_1
      96: invokeinterface #26,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
     101: return
     102: aload_0
     103: getfield      #5                  // Field bodyLimit:J
     106: ldc2_w        #11                 // long -1l
     109: lcmp
     110: ifeq          142
     113: lload         4
     115: ldc2_w        #11                 // long -1l
     118: lcmp
     119: ifeq          142
     122: lload         4
     124: aload_0
     125: getfield      #5                  // Field bodyLimit:J
     128: lcmp
     129: ifle          142
     132: aload_1
     133: sipush        413
     136: invokeinterface #27,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(I)V
     141: return
     142: aload_2
     143: getstatic     #28                 // Field io/vertx/core/http/HttpHeaders.EXPECT:Ljava/lang/CharSequence;
     146: invokeinterface #29,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
     151: astore        7
     153: aload         7
     155: ifnull        200
     158: aload         7
     160: ldc           #30                 // String 100-continue
     162: invokevirtual #31                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     165: ifeq          190
     168: aload_2
     169: invokeinterface #21,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.version:()Lio/vertx/core/http/HttpVersion;
     174: getstatic     #32                 // Field io/vertx/core/http/HttpVersion.HTTP_1_0:Lio/vertx/core/http/HttpVersion;
     177: if_acmpeq     200
     180: aload_3
     181: invokeinterface #33,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.writeContinue:()Lio/vertx/core/http/HttpServerResponse;
     186: pop
     187: goto          200
     190: aload_1
     191: sipush        417
     194: invokeinterface #27,  2           // InterfaceMethod io/vertx/ext/web/RoutingContext.fail:(I)V
     199: return
     200: new           #34                 // class io/vertx/ext/web/handler/impl/BodyHandlerImpl$BHandler
     203: dup
     204: aload_0
     205: aload_1
     206: aload_0
     207: getfield      #13                 // Field isPreallocateBodyBuffer:Z
     210: ifeq          218
     213: lload         4
     215: goto          221
     218: ldc2_w        #11                 // long -1l
     221: invokespecial #35                 // Method io/vertx/ext/web/handler/impl/BodyHandlerImpl$BHandler."<init>":(Lio/vertx/ext/web/handler/impl/BodyHandlerImpl;Lio/vertx/ext/web/RoutingContext;J)V
     224: astore        8
     226: aload_2
     227: invokeinterface #36,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.resume:()Lio/vertx/core/http/HttpServerRequest;
     232: aload         8
     234: invokeinterface #37,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerRequest;
     239: aload         8
     241: dup
     242: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     245: pop
     246: invokedynamic #39,  0             // InvokeDynamic #0:handle:(Lio/vertx/ext/web/handler/impl/BodyHandlerImpl$BHandler;)Lio/vertx/core/Handler;
     251: invokeinterface #40,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.endHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerRequest;
     256: pop
     257: goto          300
     260: aload_0
     261: getfield      #2                  // Field mergeFormAttributes:Z
     264: ifeq          294
     267: aload_2
     268: invokeinterface #41,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.isExpectMultipart:()Z
     273: ifeq          294
     276: aload_2
     277: invokeinterface #42,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.params:()Lio/vertx/core/MultiMap;
     282: aload_2
     283: invokeinterface #43,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.formAttributes:()Lio/vertx/core/MultiMap;
     288: invokeinterface #44,  2           // InterfaceMethod io/vertx/core/MultiMap.addAll:(Lio/vertx/core/MultiMap;)Lio/vertx/core/MultiMap;
     293: pop
     294: aload_1
     295: invokeinterface #26,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
     300: return

  public io.vertx.ext.web.handler.BodyHandler setHandleFileUploads(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field handleFileUploads:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.BodyHandler setBodyLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field bodyLimit:J
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.BodyHandler setUploadsDirectory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field uploadsDir:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.BodyHandler setMergeFormAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field mergeFormAttributes:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.BodyHandler setDeleteUploadedFilesOnEnd(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field deleteUploadedFilesOnEnd:Z
       5: aload_0
       6: areturn

  public io.vertx.ext.web.handler.BodyHandler setPreallocateBodyBuffer(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field isPreallocateBodyBuffer:Z
       5: aload_0
       6: areturn

  private long parseContentLengthHeader(io.vertx.core.http.HttpServerRequest);
    Code:
       0: aload_1
       1: getstatic     #45                 // Field io/vertx/core/http/HttpHeaders.CONTENT_LENGTH:Ljava/lang/CharSequence;
       4: invokeinterface #29,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ifnull        21
      14: aload_2
      15: invokevirtual #46                 // Method java/lang/String.isEmpty:()Z
      18: ifeq          25
      21: ldc2_w        #11                 // long -1l
      24: lreturn
      25: aload_2
      26: invokestatic  #47                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lstore_3
      30: lload_3
      31: lconst_0
      32: lcmp
      33: ifge          42
      36: ldc2_w        #11                 // long -1l
      39: goto          43
      42: lload_3
      43: lreturn
      44: astore_3
      45: ldc2_w        #11                 // long -1l
      48: lreturn
    Exception table:
       from    to  target type
          25    43    44   Class java/lang/NumberFormatException

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #49                 // class io/vertx/ext/web/RoutingContext
       5: invokevirtual #50                 // Method handle:(Lio/vertx/ext/web/RoutingContext;)V
       8: return

  static boolean access$000(io.vertx.ext.web.handler.impl.BodyHandlerImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field handleFileUploads:Z
       4: ireturn

  static long access$100(io.vertx.ext.web.handler.impl.BodyHandlerImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bodyLimit:J
       4: lreturn

  static java.lang.String access$200(io.vertx.ext.web.handler.impl.BodyHandlerImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field uploadsDir:Ljava/lang/String;
       4: areturn

  static boolean access$300(io.vertx.ext.web.handler.impl.BodyHandlerImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field deleteUploadedFilesOnEnd:Z
       4: ireturn

  static boolean access$400(io.vertx.ext.web.handler.impl.BodyHandlerImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field mergeFormAttributes:Z
       4: ireturn

  static io.vertx.core.impl.logging.Logger access$500();
    Code:
       0: getstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #51                 // class io/vertx/ext/web/handler/impl/BodyHandlerImpl
       2: invokestatic  #52                 // Method io/vertx/core/impl/logging/LoggerFactory.getLogger:(Ljava/lang/Class;)Lio/vertx/core/impl/logging/Logger;
       5: putstatic     #1                  // Field LOG:Lio/vertx/core/impl/logging/Logger;
       8: return
}
