Compiled from "HtmlFileTransport.java"
class io.vertx.ext.web.handler.sockjs.impl.HtmlFileTransport$HtmlFileListener extends io.vertx.ext.web.handler.sockjs.impl.BaseTransport$BaseListener {
  final int maxBytesStreaming;

  final java.lang.String callback;

  boolean headersWritten;

  int bytesSent;

  final io.vertx.ext.web.handler.sockjs.impl.HtmlFileTransport this$0;

  io.vertx.ext.web.handler.sockjs.impl.HtmlFileTransport$HtmlFileListener(io.vertx.ext.web.handler.sockjs.impl.HtmlFileTransport, int, io.vertx.ext.web.RoutingContext, java.lang.String, io.vertx.ext.web.handler.sockjs.impl.SockJSSession);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport;
       5: aload_0
       6: aload_3
       7: aload         5
       9: invokespecial #2                  // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport$BaseListener."<init>":(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;)V
      12: aload_0
      13: iload_2
      14: putfield      #3                  // Field maxBytesStreaming:I
      17: aload_0
      18: aload         4
      20: putfield      #4                  // Field callback:Ljava/lang/String;
      23: aload_0
      24: aload_3
      25: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      30: aload         5
      32: invokevirtual #6                  // Method addCloseHandler:(Lio/vertx/core/http/HttpServerResponse;Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;)V
      35: return

  public void sendFrame(java.lang.String, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: invokestatic  #7                  // Method io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
       3: invokeinterface #8,  1            // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
       8: ifeq          21
      11: invokestatic  #7                  // Method io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
      14: ldc           #9                  // String HtmlFile, sending frame
      16: invokeinterface #10,  2           // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
      21: aload_0
      22: getfield      #11                 // Field headersWritten:Z
      25: ifne          119
      28: invokestatic  #12                 // Method io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.access$100:()Ljava/lang/String;
      31: ldc           #13                 // String {{ callback }}
      33: aload_0
      34: getfield      #4                  // Field callback:Ljava/lang/String;
      37: invokevirtual #14                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      40: astore_3
      41: aload_0
      42: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      45: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      50: getstatic     #16                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      53: ldc           #17                 // String text/html; charset=UTF-8
      55: invokeinterface #18,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
      60: pop
      61: aload_0
      62: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      65: invokestatic  #19                 // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport.setNoCacheHeaders:(Lio/vertx/ext/web/RoutingContext;)V
      68: aload_0
      69: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      72: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      77: iconst_1
      78: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setChunked:(Z)Lio/vertx/core/http/HttpServerResponse;
      83: pop
      84: aload_0
      85: getfield      #1                  // Field this$0:Lio/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport;
      88: getfield      #21                 // Field io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.options:Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;
      91: aload_0
      92: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      95: invokestatic  #22                 // Method io/vertx/ext/web/handler/sockjs/impl/BaseTransport.setJSESSIONID:(Lio/vertx/ext/web/handler/sockjs/SockJSHandlerOptions;Lio/vertx/ext/web/RoutingContext;)V
      98: aload_0
      99: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
     102: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     107: aload_3
     108: invokeinterface #23,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.write:(Ljava/lang/String;)Lio/vertx/core/Future;
     113: pop
     114: aload_0
     115: iconst_1
     116: putfield      #11                 // Field headersWritten:Z
     119: aload_0
     120: getfield      #1                  // Field this$0:Lio/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport;
     123: aload_1
     124: invokevirtual #24                 // Method io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.escapeForJavaScript:(Ljava/lang/String;)Ljava/lang/String;
     127: astore_1
     128: new           #25                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #27                 // String <script>\np(\"
     137: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #29                 // String \");\n</script>\r\n
     146: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: astore_3
     153: aload_3
     154: invokestatic  #31                 // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:(Ljava/lang/String;)Lio/vertx/core/buffer/Buffer;
     157: astore        4
     159: aload_0
     160: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
     163: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
     168: aload         4
     170: aload_2
     171: invokeinterface #32,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.write:(Ljava/lang/Object;Lio/vertx/core/Handler;)V
     176: aload_0
     177: dup
     178: getfield      #33                 // Field bytesSent:I
     181: aload         4
     183: invokeinterface #34,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.length:()I
     188: iadd
     189: putfield      #33                 // Field bytesSent:I
     192: aload_0
     193: getfield      #33                 // Field bytesSent:I
     196: aload_0
     197: getfield      #3                  // Field maxBytesStreaming:I
     200: if_icmplt     228
     203: invokestatic  #7                  // Method io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
     206: invokeinterface #8,  1            // InterfaceMethod io/vertx/core/impl/logging/Logger.isTraceEnabled:()Z
     211: ifeq          224
     214: invokestatic  #7                  // Method io/vertx/ext/web/handler/sockjs/impl/HtmlFileTransport.access$000:()Lio/vertx/core/impl/logging/Logger;
     217: ldc           #35                 // String More than maxBytes sent so closing connection
     219: invokeinterface #10,  2           // InterfaceMethod io/vertx/core/impl/logging/Logger.trace:(Ljava/lang/Object;)V
     224: aload_0
     225: invokevirtual #36                 // Method close:()V
     228: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #37                 // Field closed:Z
       4: ifne          52
       7: aload_0
       8: getfield      #38                 // Field session:Lio/vertx/ext/web/handler/sockjs/impl/SockJSSession;
      11: invokevirtual #39                 // Method io/vertx/ext/web/handler/sockjs/impl/SockJSSession.resetListener:()V
      14: aload_0
      15: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      18: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      23: invokeinterface #40,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
      28: pop
      29: aload_0
      30: getfield      #15                 // Field rc:Lio/vertx/ext/web/RoutingContext;
      33: invokeinterface #5,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.response:()Lio/vertx/core/http/HttpServerResponse;
      38: invokeinterface #41,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.close:()V
      43: aload_0
      44: iconst_1
      45: putfield      #37                 // Field closed:Z
      48: goto          52
      51: astore_1
      52: return
    Exception table:
       from    to  target type
           7    48    51   Class java/lang/IllegalStateException
}
