Compiled from "MultiTenantHandler.java"
public interface io.vertx.ext.web.handler.MultiTenantHandler extends io.vertx.core.Handler<io.vertx.ext.web.RoutingContext> {
  public static final java.lang.String TENANT;

  public static io.vertx.ext.web.handler.MultiTenantHandler create(java.lang.String);
    Code:
       0: aload_0
       1: invokedynamic #1,  0              // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
       6: invokestatic  #2                  // InterfaceMethod create:(Ljava/util/function/Function;)Lio/vertx/ext/web/handler/MultiTenantHandler;
       9: areturn

  public static io.vertx.ext.web.handler.MultiTenantHandler create(java.util.function.Function<io.vertx.ext.web.RoutingContext, java.lang.String>);
    Code:
       0: aload_0
       1: ldc           #4                  // String tenant
       3: invokestatic  #5                  // InterfaceMethod create:(Ljava/util/function/Function;Ljava/lang/String;)Lio/vertx/ext/web/handler/MultiTenantHandler;
       6: areturn

  public static io.vertx.ext.web.handler.MultiTenantHandler create(java.util.function.Function<io.vertx.ext.web.RoutingContext, java.lang.String>, java.lang.String);
    Code:
       0: new           #6                  // class io/vertx/ext/web/handler/impl/MultiTenantHandlerImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method io/vertx/ext/web/handler/impl/MultiTenantHandlerImpl."<init>":(Ljava/util/function/Function;Ljava/lang/String;)V
       9: areturn

  public abstract io.vertx.ext.web.handler.MultiTenantHandler addTenantHandler(java.lang.String, io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);

  public abstract io.vertx.ext.web.handler.MultiTenantHandler removeTenant(java.lang.String);

  public abstract io.vertx.ext.web.handler.MultiTenantHandler addDefaultHandler(io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);

  private static java.lang.String lambda$create$0(java.lang.String, io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod io/vertx/ext/web/RoutingContext.request:()Lio/vertx/core/http/HttpServerRequest;
       6: aload_0
       7: invokeinterface #9,  2            // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn
}
