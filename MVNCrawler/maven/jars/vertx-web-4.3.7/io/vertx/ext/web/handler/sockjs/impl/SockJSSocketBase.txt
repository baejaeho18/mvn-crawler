Compiled from "SockJSSocketBase.java"
public abstract class io.vertx.ext.web.handler.sockjs.impl.SockJSSocketBase implements io.vertx.ext.web.handler.sockjs.SockJSSocket {
  private final io.vertx.core.eventbus.MessageConsumer<java.lang.Object> registration;

  protected final io.vertx.core.Vertx vertx;

  protected final io.vertx.ext.web.RoutingContext routingContext;

  private final java.lang.String writeHandlerID;

  public abstract io.vertx.ext.web.handler.sockjs.SockJSSocket exceptionHandler(io.vertx.core.Handler<java.lang.Throwable>);

  protected io.vertx.ext.web.handler.sockjs.impl.SockJSSocketBase(io.vertx.core.Vertx, io.vertx.ext.web.RoutingContext, io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field vertx:Lio/vertx/core/Vertx;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field routingContext:Lio/vertx/ext/web/RoutingContext;
      14: aload_3
      15: invokevirtual #4                  // Method io/vertx/ext/web/handler/sockjs/SockJSHandlerOptions.isRegisterWriteHandler:()Z
      18: ifeq          99
      21: aload_0
      22: invokedynamic #5,  0              // InvokeDynamic #0:handle:(Lio/vertx/ext/web/handler/sockjs/impl/SockJSSocketBase;)Lio/vertx/core/Handler;
      27: astore        4
      29: aload_0
      30: invokestatic  #6                  // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      33: invokevirtual #7                  // Method java/util/UUID.toString:()Ljava/lang/String;
      36: putfield      #8                  // Field writeHandlerID:Ljava/lang/String;
      39: aload_3
      40: invokevirtual #9                  // Method io/vertx/ext/web/handler/sockjs/SockJSHandlerOptions.isLocalWriteHandler:()Z
      43: ifeq          66
      46: aload_1
      47: invokeinterface #10,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
      52: aload_0
      53: getfield      #8                  // Field writeHandlerID:Ljava/lang/String;
      56: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/eventbus/EventBus.localConsumer:(Ljava/lang/String;)Lio/vertx/core/eventbus/MessageConsumer;
      61: astore        5
      63: goto          83
      66: aload_1
      67: invokeinterface #10,  1           // InterfaceMethod io/vertx/core/Vertx.eventBus:()Lio/vertx/core/eventbus/EventBus;
      72: aload_0
      73: getfield      #8                  // Field writeHandlerID:Ljava/lang/String;
      76: invokeinterface #12,  2           // InterfaceMethod io/vertx/core/eventbus/EventBus.consumer:(Ljava/lang/String;)Lio/vertx/core/eventbus/MessageConsumer;
      81: astore        5
      83: aload_0
      84: aload         5
      86: aload         4
      88: invokeinterface #13,  2           // InterfaceMethod io/vertx/core/eventbus/MessageConsumer.handler:(Lio/vertx/core/Handler;)Lio/vertx/core/eventbus/MessageConsumer;
      93: putfield      #14                 // Field registration:Lio/vertx/core/eventbus/MessageConsumer;
      96: goto          109
      99: aload_0
     100: aconst_null
     101: putfield      #8                  // Field writeHandlerID:Ljava/lang/String;
     104: aload_0
     105: aconst_null
     106: putfield      #14                 // Field registration:Lio/vertx/core/eventbus/MessageConsumer;
     109: return

  public java.lang.String writeHandlerID();
    Code:
       0: aload_0
       1: getfield      #8                  // Field writeHandlerID:Ljava/lang/String;
       4: areturn

  public io.vertx.core.Future<java.lang.Void> end();
    Code:
       0: aload_0
       1: getfield      #2                  // Field vertx:Lio/vertx/core/Vertx;
       4: checkcast     #15                 // class io/vertx/core/impl/VertxInternal
       7: invokeinterface #16,  1           // InterfaceMethod io/vertx/core/impl/VertxInternal.promise:()Lio/vertx/core/impl/future/PromiseInternal;
      12: astore_1
      13: aload_0
      14: getfield      #14                 // Field registration:Lio/vertx/core/eventbus/MessageConsumer;
      17: ifnull        33
      20: aload_0
      21: getfield      #14                 // Field registration:Lio/vertx/core/eventbus/MessageConsumer;
      24: aload_1
      25: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/eventbus/MessageConsumer.unregister:(Lio/vertx/core/Handler;)V
      30: goto          39
      33: aload_1
      34: invokeinterface #18,  1           // InterfaceMethod io/vertx/core/Promise.complete:()V
      39: aload_1
      40: invokeinterface #19,  1           // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
      45: areturn

  public void end(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method end:()Lio/vertx/core/Future;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      10: pop
      11: return

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method end:()Lio/vertx/core/Future;
       4: pop
       5: return

  public void closeAfterSessionExpired();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method close:()V
       4: return

  public io.vertx.ext.web.RoutingContext routingContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field routingContext:Lio/vertx/ext/web/RoutingContext;
       4: areturn

  public io.vertx.ext.web.Session webSession();
    Code:
       0: aload_0
       1: getfield      #3                  // Field routingContext:Lio/vertx/ext/web/RoutingContext;
       4: invokeinterface #23,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.session:()Lio/vertx/ext/web/Session;
       9: areturn

  public io.vertx.ext.auth.User webUser();
    Code:
       0: aload_0
       1: getfield      #3                  // Field routingContext:Lio/vertx/ext/web/RoutingContext;
       4: invokeinterface #24,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.user:()Lio/vertx/ext/auth/User;
       9: areturn

  public io.vertx.core.streams.ReadStream exceptionHandler(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/handler/sockjs/SockJSSocket;
       5: areturn

  public io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/handler/sockjs/SockJSSocket;
       5: areturn

  public io.vertx.core.streams.WriteStream exceptionHandler(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/ext/web/handler/sockjs/SockJSSocket;
       5: areturn

  private void lambda$new$0(io.vertx.core.eventbus.Message);
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/eventbus/Message.body:()Ljava/lang/Object;
       6: astore_2
       7: aload_2
       8: instanceof    #27                 // class java/lang/String
      11: ifeq          31
      14: aload_0
      15: aload_1
      16: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/eventbus/Message.body:()Ljava/lang/Object;
      21: checkcast     #27                 // class java/lang/String
      24: invokevirtual #28                 // Method write:(Ljava/lang/String;)Lio/vertx/core/Future;
      27: pop
      28: goto          45
      31: aload_0
      32: aload_1
      33: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/eventbus/Message.body:()Ljava/lang/Object;
      38: checkcast     #29                 // class io/vertx/core/buffer/Buffer
      41: invokevirtual #30                 // Method write:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
      44: pop
      45: return
}
