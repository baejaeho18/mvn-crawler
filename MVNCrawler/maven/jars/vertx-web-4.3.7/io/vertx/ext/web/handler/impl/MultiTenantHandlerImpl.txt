Compiled from "MultiTenantHandlerImpl.java"
public class io.vertx.ext.web.handler.impl.MultiTenantHandlerImpl implements io.vertx.ext.web.handler.MultiTenantHandler {
  private final java.util.Map<java.lang.String, io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>> handlerMap;

  private final java.util.function.Function<io.vertx.ext.web.RoutingContext, java.lang.String> tenantExtractor;

  private final java.lang.String contextKey;

  private io.vertx.core.Handler<io.vertx.ext.web.RoutingContext> defaultHandler;

  public io.vertx.ext.web.handler.impl.MultiTenantHandlerImpl(java.util.function.Function<io.vertx.ext.web.RoutingContext, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field handlerMap:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class java/util/function/Function
      23: putfield      #7                  // Field tenantExtractor:Ljava/util/function/Function;
      26: aload_0
      27: aload_2
      28: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #8                  // class java/lang/String
      34: putfield      #9                  // Field contextKey:Ljava/lang/String;
      37: return

  public io.vertx.ext.web.handler.MultiTenantHandler addTenantHandler(java.lang.String, io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #4                  // Field handlerMap:Ljava/util/Map;
      14: aload_1
      15: aload_2
      16: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnull        56
      24: new           #11                 // class java/lang/IllegalStateException
      27: dup
      28: new           #12                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #14                 // String tenant \'
      37: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #16                 // String \' already present
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: areturn

  public io.vertx.ext.web.handler.MultiTenantHandler removeTenant(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #4                  // Field handlerMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #19,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn

  public io.vertx.ext.web.handler.MultiTenantHandler addDefaultHandler(io.vertx.core.Handler<io.vertx.ext.web.RoutingContext>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #20                 // Field defaultHandler:Lio/vertx/core/Handler;
      10: aload_0
      11: areturn

  public void handle(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field tenantExtractor:Ljava/util/function/Function;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #8                  // class java/lang/String
      13: astore_2
      14: aload_2
      15: ifnonnull     25
      18: aload_0
      19: getfield      #20                 // Field defaultHandler:Lio/vertx/core/Handler;
      22: goto          42
      25: aload_0
      26: getfield      #4                  // Field handlerMap:Ljava/util/Map;
      29: aload_2
      30: aload_0
      31: getfield      #20                 // Field defaultHandler:Lio/vertx/core/Handler;
      34: invokeinterface #22,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #23                 // class io/vertx/core/Handler
      42: astore_3
      43: aload_3
      44: ifnull        82
      47: aload_1
      48: aload_0
      49: getfield      #9                  // Field contextKey:Ljava/lang/String;
      52: aload_3
      53: aload_0
      54: getfield      #20                 // Field defaultHandler:Lio/vertx/core/Handler;
      57: if_acmpne     65
      60: ldc           #24                 // String default
      62: goto          66
      65: aload_2
      66: invokeinterface #25,  3           // InterfaceMethod io/vertx/ext/web/RoutingContext.put:(Ljava/lang/String;Ljava/lang/Object;)Lio/vertx/ext/web/RoutingContext;
      71: pop
      72: aload_3
      73: aload_1
      74: invokeinterface #26,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      79: goto          88
      82: aload_1
      83: invokeinterface #27,  1           // InterfaceMethod io/vertx/ext/web/RoutingContext.next:()V
      88: return

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class io/vertx/ext/web/RoutingContext
       5: invokevirtual #29                 // Method handle:(Lio/vertx/ext/web/RoutingContext;)V
       8: return
}
