Compiled from "RoutingContextImpl.java"
public class io.vertx.ext.web.impl.RoutingContextImpl extends io.vertx.ext.web.impl.RoutingContextImplBase {
  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.vertx.ext.web.impl.RoutingContextImpl> HANDLER_SEQ;

  private final io.vertx.ext.web.impl.RouterImpl router;

  private final io.vertx.core.http.HttpServerRequest request;

  private final io.vertx.ext.web.impl.RequestBodyImpl body;

  private volatile int handlerSeq;

  private java.util.Map<java.lang.String, java.lang.Object> data;

  private java.util.Map<java.lang.String, java.lang.String> pathParams;

  private io.vertx.core.MultiMap queryParams;

  private io.vertx.ext.web.impl.SparseArray<io.vertx.core.Handler<java.lang.Void>> headersEndHandlers;

  private io.vertx.ext.web.impl.SparseArray<io.vertx.core.Handler<java.lang.Void>> bodyEndHandlers;

  private io.vertx.ext.web.impl.SparseArray<io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>> endHandlers;

  private java.lang.Throwable failure;

  private int statusCode;

  private java.lang.String normalizedPath;

  private java.lang.String acceptableContentType;

  private io.vertx.ext.web.impl.ParsableHeaderValuesContainer parsedHeaders;

  private java.util.List<io.vertx.ext.web.FileUpload> fileUploads;

  private io.vertx.ext.web.Session session;

  private io.vertx.ext.auth.User user;

  private volatile boolean isSessionAccessed;

  private volatile boolean endHandlerCalled;

  private static final java.lang.String DEFAULT_404;

  public io.vertx.ext.web.impl.RoutingContextImpl(java.lang.String, io.vertx.ext.web.impl.RouterImpl, io.vertx.core.http.HttpServerRequest, java.util.Set<io.vertx.ext.web.impl.RouteImpl>);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: invokespecial #2                  // Method io/vertx/ext/web/impl/RoutingContextImplBase."<init>":(Ljava/lang/String;Ljava/util/Set;Lio/vertx/ext/web/Router;)V
       8: aload_0
       9: iconst_m1
      10: putfield      #3                  // Field statusCode:I
      13: aload_0
      14: iconst_0
      15: putfield      #4                  // Field isSessionAccessed:Z
      18: aload_0
      19: iconst_0
      20: putfield      #5                  // Field endHandlerCalled:Z
      23: aload_0
      24: aload_2
      25: putfield      #6                  // Field router:Lio/vertx/ext/web/impl/RouterImpl;
      28: aload_0
      29: new           #7                  // class io/vertx/ext/web/impl/HttpServerRequestWrapper
      32: dup
      33: aload_3
      34: aload_2
      35: invokevirtual #8                  // Method io/vertx/ext/web/impl/RouterImpl.getAllowForward:()Lio/vertx/ext/web/AllowForwardHeaders;
      38: invokespecial #9                  // Method io/vertx/ext/web/impl/HttpServerRequestWrapper."<init>":(Lio/vertx/core/http/HttpServerRequest;Lio/vertx/ext/web/AllowForwardHeaders;)V
      41: putfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
      44: aload_0
      45: new           #11                 // class io/vertx/ext/web/impl/RequestBodyImpl
      48: dup
      49: aload_0
      50: invokespecial #12                 // Method io/vertx/ext/web/impl/RequestBodyImpl."<init>":(Lio/vertx/ext/web/RoutingContext;)V
      53: putfield      #13                 // Field body:Lio/vertx/ext/web/impl/RequestBodyImpl;
      56: aload_3
      57: invokeinterface #14,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.path:()Ljava/lang/String;
      62: astore        5
      64: aload         5
      66: ifnull        77
      69: aload         5
      71: invokevirtual #15                 // Method java/lang/String.length:()I
      74: ifne          87
      77: aload_0
      78: sipush        400
      81: invokevirtual #16                 // Method fail:(I)V
      84: goto          105
      87: aload         5
      89: iconst_0
      90: invokevirtual #17                 // Method java/lang/String.charAt:(I)C
      93: bipush        47
      95: if_icmpeq     105
      98: aload_0
      99: sipush        404
     102: invokevirtual #16                 // Method fail:(I)V
     105: return

  private java.lang.String ensureNotNull(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: ldc           #18                 // String
       6: goto          10
       9: aload_1
      10: areturn

  private void fillParsedHeaders(io.vertx.core.http.HttpServerRequest);
    Code:
       0: aload_1
       1: getstatic     #19                 // Field io/vertx/core/http/HttpHeaders.ACCEPT:Ljava/lang/CharSequence;
       4: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
       9: astore_2
      10: aload_1
      11: getstatic     #21                 // Field io/vertx/core/http/HttpHeaders.ACCEPT_CHARSET:Ljava/lang/CharSequence;
      14: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      19: astore_3
      20: aload_1
      21: getstatic     #22                 // Field io/vertx/core/http/HttpHeaders.ACCEPT_ENCODING:Ljava/lang/CharSequence;
      24: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      29: astore        4
      31: aload_1
      32: getstatic     #23                 // Field io/vertx/core/http/HttpHeaders.ACCEPT_LANGUAGE:Ljava/lang/CharSequence;
      35: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      40: astore        5
      42: aload_0
      43: aload_1
      44: getstatic     #24                 // Field io/vertx/core/http/HttpHeaders.CONTENT_TYPE:Ljava/lang/CharSequence;
      47: invokeinterface #20,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getHeader:(Ljava/lang/CharSequence;)Ljava/lang/String;
      52: invokespecial #25                 // Method ensureNotNull:(Ljava/lang/String;)Ljava/lang/String;
      55: astore        6
      57: aload_0
      58: new           #26                 // class io/vertx/ext/web/impl/ParsableHeaderValuesContainer
      61: dup
      62: aload_2
      63: invokedynamic #27,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      68: invokestatic  #28                 // Method io/vertx/ext/web/impl/HeaderParser.convertToParsedHeaderValues:(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/List;
      71: invokestatic  #29                 // Method io/vertx/ext/web/impl/HeaderParser.sort:(Ljava/util/List;)Ljava/util/List;
      74: aload_3
      75: invokedynamic #30,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      80: invokestatic  #28                 // Method io/vertx/ext/web/impl/HeaderParser.convertToParsedHeaderValues:(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/List;
      83: invokestatic  #29                 // Method io/vertx/ext/web/impl/HeaderParser.sort:(Ljava/util/List;)Ljava/util/List;
      86: aload         4
      88: invokedynamic #30,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      93: invokestatic  #28                 // Method io/vertx/ext/web/impl/HeaderParser.convertToParsedHeaderValues:(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/List;
      96: invokestatic  #29                 // Method io/vertx/ext/web/impl/HeaderParser.sort:(Ljava/util/List;)Ljava/util/List;
      99: aload         5
     101: invokedynamic #31,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     106: invokestatic  #28                 // Method io/vertx/ext/web/impl/HeaderParser.convertToParsedHeaderValues:(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/List;
     109: invokestatic  #29                 // Method io/vertx/ext/web/impl/HeaderParser.sort:(Ljava/util/List;)Ljava/util/List;
     112: new           #32                 // class io/vertx/ext/web/impl/ParsableMIMEValue
     115: dup
     116: aload         6
     118: invokespecial #33                 // Method io/vertx/ext/web/impl/ParsableMIMEValue."<init>":(Ljava/lang/String;)V
     121: invokespecial #34                 // Method io/vertx/ext/web/impl/ParsableHeaderValuesContainer."<init>":(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lio/vertx/ext/web/impl/ParsableMIMEValue;)V
     124: putfield      #35                 // Field parsedHeaders:Lio/vertx/ext/web/impl/ParsableHeaderValuesContainer;
     127: return

  public io.vertx.core.http.HttpServerRequest request();
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: areturn

  public io.vertx.core.http.HttpServerResponse response();
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: invokeinterface #36,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
       9: areturn

  public java.lang.Throwable failure();
    Code:
       0: aload_0
       1: getfield      #37                 // Field failure:Ljava/lang/Throwable;
       4: areturn

  public int statusCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field statusCode:I
       4: ireturn

  public boolean failed();
    Code:
       0: aload_0
       1: getfield      #37                 // Field failure:Ljava/lang/Throwable;
       4: ifnonnull     15
       7: aload_0
       8: getfield      #3                  // Field statusCode:I
      11: iconst_m1
      12: if_icmpeq     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public void next();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method iterateNext:()Z
       4: ifne          11
       7: aload_0
       8: invokespecial #39                 // Method checkHandleNoMatch:()V
      11: return

  private void checkHandleNoMatch();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method failed:()Z
       4: ifeq          26
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field statusCode:I
      12: aload_0
      13: getfield      #37                 // Field failure:Ljava/lang/Throwable;
      16: aload_0
      17: getfield      #6                  // Field router:Lio/vertx/ext/web/impl/RouterImpl;
      20: invokevirtual #41                 // Method unhandledFailure:(ILjava/lang/Throwable;Lio/vertx/ext/web/impl/RouterImpl;)V
      23: goto          212
      26: aload_0
      27: getfield      #6                  // Field router:Lio/vertx/ext/web/impl/RouterImpl;
      30: aload_0
      31: getfield      #42                 // Field matchFailure:I
      34: invokevirtual #43                 // Method io/vertx/ext/web/impl/RouterImpl.getErrorHandlerByStatusCode:(I)Lio/vertx/core/Handler;
      37: astore_1
      38: aload_0
      39: aload_0
      40: getfield      #42                 // Field matchFailure:I
      43: putfield      #3                  // Field statusCode:I
      46: aload_1
      47: ifnonnull     205
      50: aload_0
      51: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
      54: aload_0
      55: getfield      #42                 // Field matchFailure:I
      58: invokeinterface #45,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.setStatusCode:(I)Lio/vertx/core/http/HttpServerResponse;
      63: pop
      64: aload_0
      65: invokevirtual #46                 // Method request:()Lio/vertx/core/http/HttpServerRequest;
      68: invokeinterface #47,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.method:()Lio/vertx/core/http/HttpMethod;
      73: getstatic     #48                 // Field io/vertx/core/http/HttpMethod.HEAD:Lio/vertx/core/http/HttpMethod;
      76: if_acmpeq     114
      79: aload_0
      80: getfield      #42                 // Field matchFailure:I
      83: sipush        404
      86: if_icmpne     114
      89: aload_0
      90: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
      93: getstatic     #49                 // Field io/netty/handler/codec/http/HttpHeaderNames.CONTENT_TYPE:Lio/netty/util/AsciiString;
      96: ldc           #50                 // String text/html; charset=utf-8
      98: invokeinterface #51,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     103: ldc           #53                 // String <html><body><h1>Resource not found</h1></body></html>
     105: invokeinterface #54,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:(Ljava/lang/String;)Lio/vertx/core/Future;
     110: pop
     111: goto          212
     114: aload_0
     115: invokevirtual #46                 // Method request:()Lio/vertx/core/http/HttpServerRequest;
     118: invokeinterface #47,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.method:()Lio/vertx/core/http/HttpMethod;
     123: getstatic     #48                 // Field io/vertx/core/http/HttpMethod.HEAD:Lio/vertx/core/http/HttpMethod;
     126: if_acmpeq     192
     129: aload_0
     130: getfield      #42                 // Field matchFailure:I
     133: sipush        405
     136: if_icmpne     192
     139: aload_0
     140: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
     143: getstatic     #55                 // Field io/netty/handler/codec/http/HttpHeaderNames.ALLOW:Lio/netty/util/AsciiString;
     146: aload_0
     147: getfield      #56                 // Field allowedMethods:Ljava/util/Set;
     150: invokeinterface #57,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     155: invokedynamic #58,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     160: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     165: ldc           #60                 // String ,
     167: invokestatic  #61                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
     170: invokeinterface #62,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     175: checkcast     #63                 // class java/lang/CharSequence
     178: invokeinterface #51,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.putHeader:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lio/vertx/core/http/HttpServerResponse;
     183: invokeinterface #64,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
     188: pop
     189: goto          212
     192: aload_0
     193: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
     196: invokeinterface #64,  1           // InterfaceMethod io/vertx/core/http/HttpServerResponse.end:()Lio/vertx/core/Future;
     201: pop
     202: goto          212
     205: aload_1
     206: aload_0
     207: invokeinterface #65,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
     212: return

  public void fail(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field statusCode:I
       5: aload_0
       6: invokespecial #66                 // Method doFail:()V
       9: return

  public void fail(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #67                 // class io/vertx/ext/web/handler/HttpException
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #67                 // class io/vertx/ext/web/handler/HttpException
      12: invokevirtual #68                 // Method io/vertx/ext/web/handler/HttpException.getStatusCode:()I
      15: aload_1
      16: invokevirtual #69                 // Method fail:(ILjava/lang/Throwable;)V
      19: goto          30
      22: aload_0
      23: sipush        500
      26: aload_1
      27: invokevirtual #69                 // Method fail:(ILjava/lang/Throwable;)V
      30: return

  public void fail(int, java.lang.Throwable);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field statusCode:I
       5: aload_0
       6: aload_2
       7: ifnonnull     20
      10: new           #70                 // class java/lang/NullPointerException
      13: dup
      14: invokespecial #71                 // Method java/lang/NullPointerException."<init>":()V
      17: goto          21
      20: aload_2
      21: putfield      #37                 // Field failure:Ljava/lang/Throwable;
      24: getstatic     #72                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
      27: invokeinterface #73,  1           // InterfaceMethod io/vertx/core/impl/logging/Logger.isDebugEnabled:()Z
      32: ifeq          71
      35: getstatic     #72                 // Field LOG:Lio/vertx/core/impl/logging/Logger;
      38: new           #74                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #76                 // String RoutingContext failure (
      47: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: iload_1
      51: invokevirtual #78                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: ldc           #79                 // String )
      56: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: aload_0
      63: getfield      #37                 // Field failure:Ljava/lang/Throwable;
      66: invokeinterface #81,  3           // InterfaceMethod io/vertx/core/impl/logging/Logger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      71: aload_0
      72: invokespecial #66                 // Method doFail:()V
      75: return

  public io.vertx.ext.web.RoutingContext put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #82                 // Method getData:()Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public io.vertx.core.Vertx vertx();
    Code:
       0: aload_0
       1: getfield      #6                  // Field router:Lio/vertx/ext/web/impl/RouterImpl;
       4: invokevirtual #84                 // Method io/vertx/ext/web/impl/RouterImpl.vertx:()Lio/vertx/core/Vertx;
       7: areturn

  public io.vertx.ext.web.impl.RoutingContextInternal parent();
    Code:
       0: aconst_null
       1: areturn

  public <T> T get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokespecial #82                 // Method getData:()Ljava/util/Map;
      13: aload_1
      14: invokeinterface #86,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public <T> T get(java.lang.String, T);
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Ljava/util/Map;
       4: ifnonnull     9
       7: aload_2
       8: areturn
       9: aload_0
      10: invokespecial #82                 // Method getData:()Ljava/util/Map;
      13: astore_3
      14: aload_3
      15: aload_1
      16: invokeinterface #87,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ifeq          32
      24: aload_3
      25: aload_1
      26: invokeinterface #86,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: areturn
      32: aload_2
      33: areturn

  public <T> T remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokespecial #82                 // Method getData:()Ljava/util/Map;
      13: aload_1
      14: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: areturn

  public java.util.Map<java.lang.String, java.lang.Object> data();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method getData:()Ljava/util/Map;
       4: areturn

  public java.lang.String normalizedPath();
    Code:
       0: aload_0
       1: getfield      #89                 // Field normalizedPath:Ljava/lang/String;
       4: ifnonnull     38
       7: aload_0
       8: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
      11: invokeinterface #14,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.path:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: ifnonnull     30
      21: aload_0
      22: ldc           #90                 // String /
      24: putfield      #89                 // Field normalizedPath:Ljava/lang/String;
      27: goto          38
      30: aload_0
      31: aload_1
      32: invokestatic  #91                 // Method io/vertx/core/http/impl/HttpUtils.normalizePath:(Ljava/lang/String;)Ljava/lang/String;
      35: putfield      #89                 // Field normalizedPath:Ljava/lang/String;
      38: aload_0
      39: getfield      #89                 // Field normalizedPath:Ljava/lang/String;
      42: areturn

  public io.vertx.core.http.Cookie getCookie(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: aload_1
       5: invokeinterface #92,  2           // InterfaceMethod io/vertx/core/http/HttpServerRequest.getCookie:(Ljava/lang/String;)Lio/vertx/core/http/Cookie;
      10: areturn

  public io.vertx.ext.web.RoutingContext addCookie(io.vertx.core.http.Cookie);
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: invokeinterface #36,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
       9: aload_1
      10: invokeinterface #93,  2           // InterfaceMethod io/vertx/core/http/HttpServerResponse.addCookie:(Lio/vertx/core/http/Cookie;)Lio/vertx/core/http/HttpServerResponse;
      15: pop
      16: aload_0
      17: areturn

  public io.vertx.core.http.Cookie removeCookie(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: invokeinterface #36,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.response:()Lio/vertx/core/http/HttpServerResponse;
       9: aload_1
      10: iload_2
      11: invokeinterface #94,  3           // InterfaceMethod io/vertx/core/http/HttpServerResponse.removeCookie:(Ljava/lang/String;Z)Lio/vertx/core/http/Cookie;
      16: areturn

  public int cookieCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: invokeinterface #95,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.cookieCount:()I
       9: ireturn

  public java.util.Map<java.lang.String, io.vertx.core.http.Cookie> cookieMap();
    Code:
       0: aload_0
       1: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
       4: invokeinterface #96,  1           // InterfaceMethod io/vertx/core/http/HttpServerRequest.cookieMap:()Ljava/util/Map;
       9: areturn

  public io.vertx.ext.web.RequestBody body();
    Code:
       0: aload_0
       1: getfield      #13                 // Field body:Lio/vertx/ext/web/impl/RequestBodyImpl;
       4: areturn

  public void setBody(io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: getfield      #13                 // Field body:Lio/vertx/ext/web/impl/RequestBodyImpl;
       4: aload_1
       5: invokevirtual #97                 // Method io/vertx/ext/web/impl/RequestBodyImpl.setBuffer:(Lio/vertx/core/buffer/Buffer;)V
       8: return

  public java.util.List<io.vertx.ext.web.FileUpload> fileUploads();
    Code:
       0: aload_0
       1: getfield      #98                 // Field fileUploads:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #99                 // class java/util/ArrayList
      11: dup
      12: invokespecial #100                // Method java/util/ArrayList."<init>":()V
      15: putfield      #98                 // Field fileUploads:Ljava/util/List;
      18: aload_0
      19: getfield      #98                 // Field fileUploads:Ljava/util/List;
      22: areturn

  public void setSession(io.vertx.ext.web.Session);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #101                // Field session:Lio/vertx/ext/web/Session;
       5: aload_1
       6: ldc           #102                // String __vertx.userHolder
       8: invokeinterface #103,  2          // InterfaceMethod io/vertx/ext/web/Session.get:(Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #104                // class io/vertx/ext/web/handler/impl/UserHolder
      16: astore_2
      17: aload_2
      18: ifnull        26
      21: aload_2
      22: aload_0
      23: invokevirtual #105                // Method io/vertx/ext/web/handler/impl/UserHolder.refresh:(Lio/vertx/ext/web/RoutingContext;)V
      26: return

  public io.vertx.ext.web.Session session();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field isSessionAccessed:Z
       5: aload_0
       6: getfield      #101                // Field session:Lio/vertx/ext/web/Session;
       9: areturn

  public boolean isSessionAccessed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isSessionAccessed:Z
       4: ireturn

  public io.vertx.ext.auth.User user();
    Code:
       0: aload_0
       1: getfield      #106                // Field user:Lio/vertx/ext/auth/User;
       4: areturn

  public void setUser(io.vertx.ext.auth.User);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field user:Lio/vertx/ext/auth/User;
       5: return

  public void clearUser();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #106                // Field user:Lio/vertx/ext/auth/User;
       5: return

  public java.lang.String getAcceptableContentType();
    Code:
       0: aload_0
       1: getfield      #107                // Field acceptableContentType:Ljava/lang/String;
       4: areturn

  public void setAcceptableContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #107                // Field acceptableContentType:Ljava/lang/String;
       5: return

  public io.vertx.ext.web.impl.ParsableHeaderValuesContainer parsedHeaders();
    Code:
       0: aload_0
       1: getfield      #35                 // Field parsedHeaders:Lio/vertx/ext/web/impl/ParsableHeaderValuesContainer;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
      12: invokespecial #108                // Method fillParsedHeaders:(Lio/vertx/core/http/HttpServerRequest;)V
      15: aload_0
      16: getfield      #35                 // Field parsedHeaders:Lio/vertx/ext/web/impl/ParsableHeaderValuesContainer;
      19: areturn

  public int addHeadersEndHandler(io.vertx.core.Handler<java.lang.Void>);
    Code:
       0: aload_0
       1: invokespecial #109                // Method nextHandlerSeq:()I
       4: istore_2
       5: aload_0
       6: invokespecial #110                // Method getHeadersEndHandlers:()Lio/vertx/ext/web/impl/SparseArray;
       9: iload_2
      10: aload_1
      11: invokevirtual #111                // Method io/vertx/ext/web/impl/SparseArray.put:(ILjava/lang/Object;)V
      14: iload_2
      15: ireturn

  public boolean removeHeadersEndHandler(int);
    Code:
       0: aload_0
       1: invokespecial #110                // Method getHeadersEndHandlers:()Lio/vertx/ext/web/impl/SparseArray;
       4: iload_1
       5: invokevirtual #112                // Method io/vertx/ext/web/impl/SparseArray.remove:(I)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int addBodyEndHandler(io.vertx.core.Handler<java.lang.Void>);
    Code:
       0: aload_0
       1: invokespecial #109                // Method nextHandlerSeq:()I
       4: istore_2
       5: aload_0
       6: invokespecial #113                // Method getBodyEndHandlers:()Lio/vertx/ext/web/impl/SparseArray;
       9: iload_2
      10: aload_1
      11: invokevirtual #111                // Method io/vertx/ext/web/impl/SparseArray.put:(ILjava/lang/Object;)V
      14: iload_2
      15: ireturn

  public boolean removeBodyEndHandler(int);
    Code:
       0: aload_0
       1: invokespecial #113                // Method getBodyEndHandlers:()Lio/vertx/ext/web/impl/SparseArray;
       4: iload_1
       5: invokevirtual #112                // Method io/vertx/ext/web/impl/SparseArray.remove:(I)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public int addEndHandler(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: invokespecial #109                // Method nextHandlerSeq:()I
       4: istore_2
       5: aload_0
       6: invokespecial #114                // Method getEndHandlers:()Lio/vertx/ext/web/impl/SparseArray;
       9: iload_2
      10: aload_1
      11: invokevirtual #111                // Method io/vertx/ext/web/impl/SparseArray.put:(ILjava/lang/Object;)V
      14: iload_2
      15: ireturn

  public boolean removeEndHandler(int);
    Code:
       0: aload_0
       1: invokespecial #114                // Method getEndHandlers:()Lio/vertx/ext/web/impl/SparseArray;
       4: iload_1
       5: invokevirtual #112                // Method io/vertx/ext/web/impl/SparseArray.remove:(I)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void reroute(io.vertx.core.http.HttpMethod, java.lang.String);
    Code:
       0: aload_2
       1: iconst_0
       2: invokevirtual #17                 // Method java/lang/String.charAt:(I)C
       5: bipush        47
       7: if_icmpeq     20
      10: new           #115                // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #116                // String path must start with \'/\'
      16: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
      24: checkcast     #7                  // class io/vertx/ext/web/impl/HttpServerRequestWrapper
      27: aload_1
      28: aload_2
      29: invokevirtual #118                // Method io/vertx/ext/web/impl/HttpServerRequestWrapper.changeTo:(Lio/vertx/core/http/HttpMethod;Ljava/lang/String;)V
      32: aload_0
      33: aconst_null
      34: putfield      #89                 // Field normalizedPath:Ljava/lang/String;
      37: aload_0
      38: iconst_m1
      39: putfield      #3                  // Field statusCode:I
      42: aload_0
      43: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
      46: invokeinterface #119,  1          // InterfaceMethod io/vertx/core/http/HttpServerResponse.headers:()Lio/vertx/core/MultiMap;
      51: invokeinterface #120,  1          // InterfaceMethod io/vertx/core/MultiMap.clear:()Lio/vertx/core/MultiMap;
      56: pop
      57: aload_0
      58: getfield      #121                // Field headersEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      61: ifnull        71
      64: aload_0
      65: getfield      #121                // Field headersEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      68: invokevirtual #122                // Method io/vertx/ext/web/impl/SparseArray.clear:()V
      71: aload_0
      72: getfield      #123                // Field bodyEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      75: ifnull        85
      78: aload_0
      79: getfield      #123                // Field bodyEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      82: invokevirtual #122                // Method io/vertx/ext/web/impl/SparseArray.clear:()V
      85: aload_0
      86: aconst_null
      87: putfield      #37                 // Field failure:Ljava/lang/Throwable;
      90: aload_0
      91: invokevirtual #124                // Method restart:()V
      94: return

  public java.util.Map<java.lang.String, java.lang.String> pathParams();
    Code:
       0: aload_0
       1: invokespecial #125                // Method getPathParams:()Ljava/util/Map;
       4: areturn

  public java.lang.String pathParam(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #125                // Method getPathParams:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #126                // class java/lang/String
      13: areturn

  public io.vertx.core.MultiMap queryParams();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #127                // Method getQueryParams:(Ljava/nio/charset/Charset;)Lio/vertx/core/MultiMap;
       5: areturn

  public io.vertx.core.MultiMap queryParams(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #127                // Method getQueryParams:(Ljava/nio/charset/Charset;)Lio/vertx/core/MultiMap;
       5: areturn

  public java.util.List<java.lang.String> queryParam(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #128                // Method queryParams:()Lio/vertx/core/MultiMap;
       4: aload_1
       5: invokeinterface #129,  2          // InterfaceMethod io/vertx/core/MultiMap.getAll:(Ljava/lang/String;)Ljava/util/List;
      10: areturn

  private io.vertx.core.MultiMap getQueryParams(java.nio.charset.Charset);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: getfield      #130                // Field queryParams:Lio/vertx/core/MultiMap;
       8: ifnonnull     220
      11: aload_1
      12: ifnonnull     110
      15: aload_0
      16: invokestatic  #131                // InterfaceMethod io/vertx/core/MultiMap.caseInsensitiveMultiMap:()Lio/vertx/core/MultiMap;
      19: putfield      #130                // Field queryParams:Lio/vertx/core/MultiMap;
      22: new           #132                // class io/netty/handler/codec/http/QueryStringDecoder
      25: dup
      26: aload_0
      27: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
      30: invokeinterface #133,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.uri:()Ljava/lang/String;
      35: invokespecial #134                // Method io/netty/handler/codec/http/QueryStringDecoder."<init>":(Ljava/lang/String;)V
      38: invokevirtual #135                // Method io/netty/handler/codec/http/QueryStringDecoder.parameters:()Ljava/util/Map;
      41: astore_2
      42: aload_2
      43: invokeinterface #136,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      48: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      53: astore_3
      54: aload_3
      55: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          107
      63: aload_3
      64: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #140                // class java/util/Map$Entry
      72: astore        4
      74: aload_0
      75: getfield      #130                // Field queryParams:Lio/vertx/core/MultiMap;
      78: aload         4
      80: invokeinterface #141,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: checkcast     #142                // class java/lang/String
      88: aload         4
      90: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      95: checkcast     #144                // class java/lang/Iterable
      98: invokeinterface #145,  3          // InterfaceMethod io/vertx/core/MultiMap.add:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/vertx/core/MultiMap;
     103: pop
     104: goto          54
     107: goto          202
     110: invokestatic  #131                // InterfaceMethod io/vertx/core/MultiMap.caseInsensitiveMultiMap:()Lio/vertx/core/MultiMap;
     113: astore_2
     114: new           #132                // class io/netty/handler/codec/http/QueryStringDecoder
     117: dup
     118: aload_0
     119: getfield      #10                 // Field request:Lio/vertx/core/http/HttpServerRequest;
     122: invokeinterface #133,  1          // InterfaceMethod io/vertx/core/http/HttpServerRequest.uri:()Ljava/lang/String;
     127: aload_1
     128: invokespecial #146                // Method io/netty/handler/codec/http/QueryStringDecoder."<init>":(Ljava/lang/String;Ljava/nio/charset/Charset;)V
     131: invokevirtual #135                // Method io/netty/handler/codec/http/QueryStringDecoder.parameters:()Ljava/util/Map;
     134: astore_3
     135: aload_3
     136: invokeinterface #136,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     141: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     146: astore        4
     148: aload         4
     150: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     155: ifeq          200
     158: aload         4
     160: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     165: checkcast     #140                // class java/util/Map$Entry
     168: astore        5
     170: aload_2
     171: aload         5
     173: invokeinterface #141,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     178: checkcast     #142                // class java/lang/String
     181: aload         5
     183: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     188: checkcast     #144                // class java/lang/Iterable
     191: invokeinterface #145,  3          // InterfaceMethod io/vertx/core/MultiMap.add:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/vertx/core/MultiMap;
     196: pop
     197: goto          148
     200: aload_2
     201: areturn
     202: goto          220
     205: astore_2
     206: new           #67                 // class io/vertx/ext/web/handler/HttpException
     209: dup
     210: sipush        400
     213: ldc           #147                // String Error while decoding query params
     215: aload_2
     216: invokespecial #148                // Method io/vertx/ext/web/handler/HttpException."<init>":(ILjava/lang/String;Ljava/lang/Throwable;)V
     219: athrow
     220: aload_0
     221: getfield      #130                // Field queryParams:Lio/vertx/core/MultiMap;
     224: areturn
    Exception table:
       from    to  target type
          11   201   205   Class java/lang/IllegalArgumentException

  private java.util.Map<java.lang.String, java.lang.String> getPathParams();
    Code:
       0: aload_0
       1: getfield      #149                // Field pathParams:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #150                // class java/util/HashMap
      11: dup
      12: invokespecial #151                // Method java/util/HashMap."<init>":()V
      15: putfield      #149                // Field pathParams:Ljava/util/Map;
      18: aload_0
      19: getfield      #149                // Field pathParams:Ljava/util/Map;
      22: areturn

  private io.vertx.ext.web.impl.SparseArray<io.vertx.core.Handler<java.lang.Void>> getHeadersEndHandlers();
    Code:
       0: aload_0
       1: getfield      #121                // Field headersEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
       4: ifnonnull     34
       7: aload_0
       8: new           #152                // class io/vertx/ext/web/impl/SparseArray
      11: dup
      12: invokespecial #153                // Method io/vertx/ext/web/impl/SparseArray."<init>":()V
      15: putfield      #121                // Field headersEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      18: aload_0
      19: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
      22: aload_0
      23: invokedynamic #154,  0            // InvokeDynamic #4:handle:(Lio/vertx/ext/web/impl/RoutingContextImpl;)Lio/vertx/core/Handler;
      28: invokeinterface #155,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.headersEndHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
      33: pop
      34: aload_0
      35: getfield      #121                // Field headersEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      38: areturn

  private io.vertx.ext.web.impl.SparseArray<io.vertx.core.Handler<java.lang.Void>> getBodyEndHandlers();
    Code:
       0: aload_0
       1: getfield      #123                // Field bodyEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
       4: ifnonnull     34
       7: aload_0
       8: new           #152                // class io/vertx/ext/web/impl/SparseArray
      11: dup
      12: invokespecial #153                // Method io/vertx/ext/web/impl/SparseArray."<init>":()V
      15: putfield      #123                // Field bodyEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      18: aload_0
      19: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
      22: aload_0
      23: invokedynamic #156,  0            // InvokeDynamic #5:handle:(Lio/vertx/ext/web/impl/RoutingContextImpl;)Lio/vertx/core/Handler;
      28: invokeinterface #157,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.bodyEndHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
      33: pop
      34: aload_0
      35: getfield      #123                // Field bodyEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
      38: areturn

  private io.vertx.ext.web.impl.SparseArray<io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>> getEndHandlers();
    Code:
       0: aload_0
       1: getfield      #158                // Field endHandlers:Lio/vertx/ext/web/impl/SparseArray;
       4: ifnonnull     80
       7: aload_0
       8: new           #152                // class io/vertx/ext/web/impl/SparseArray
      11: dup
      12: invokespecial #153                // Method io/vertx/ext/web/impl/SparseArray."<init>":()V
      15: putfield      #158                // Field endHandlers:Lio/vertx/ext/web/impl/SparseArray;
      18: aload_0
      19: invokevirtual #159                // Method vertx:()Lio/vertx/core/Vertx;
      22: invokeinterface #160,  1          // InterfaceMethod io/vertx/core/Vertx.getOrCreateContext:()Lio/vertx/core/Context;
      27: checkcast     #161                // class io/vertx/core/impl/ContextInternal
      30: astore_1
      31: aload_0
      32: aload_1
      33: invokedynamic #162,  0            // InvokeDynamic #6:handle:(Lio/vertx/ext/web/impl/RoutingContextImpl;Lio/vertx/core/impl/ContextInternal;)Lio/vertx/core/Handler;
      38: astore_2
      39: aload_0
      40: aload_1
      41: invokedynamic #163,  0            // InvokeDynamic #7:handle:(Lio/vertx/ext/web/impl/RoutingContextImpl;Lio/vertx/core/impl/ContextInternal;)Lio/vertx/core/Handler;
      46: astore_3
      47: aload_0
      48: aload_1
      49: invokedynamic #164,  0            // InvokeDynamic #8:handle:(Lio/vertx/ext/web/impl/RoutingContextImpl;Lio/vertx/core/impl/ContextInternal;)Lio/vertx/core/Handler;
      54: astore        4
      56: aload_0
      57: invokevirtual #44                 // Method response:()Lio/vertx/core/http/HttpServerResponse;
      60: aload_2
      61: invokeinterface #165,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.endHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
      66: aload_3
      67: invokeinterface #166,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
      72: aload         4
      74: invokeinterface #167,  2          // InterfaceMethod io/vertx/core/http/HttpServerResponse.closeHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/http/HttpServerResponse;
      79: pop
      80: aload_0
      81: getfield      #158                // Field endHandlers:Lio/vertx/ext/web/impl/SparseArray;
      84: areturn

  private void doFail();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field router:Lio/vertx/ext/web/impl/RouterImpl;
       5: invokevirtual #168                // Method io/vertx/ext/web/impl/RouterImpl.iterator:()Ljava/util/Iterator;
       8: putfield      #169                // Field iter:Ljava/util/Iterator;
      11: aload_0
      12: aconst_null
      13: putfield      #170                // Field currentRoute:Lio/vertx/ext/web/impl/RouteState;
      16: aload_0
      17: invokevirtual #171                // Method next:()V
      20: return

  private java.util.Map<java.lang.String, java.lang.Object> getData();
    Code:
       0: aload_0
       1: getfield      #85                 // Field data:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #150                // class java/util/HashMap
      11: dup
      12: invokespecial #151                // Method java/util/HashMap."<init>":()V
      15: putfield      #85                 // Field data:Ljava/util/Map;
      18: aload_0
      19: getfield      #85                 // Field data:Ljava/util/Map;
      22: areturn

  private int nextHandlerSeq();
    Code:
       0: getstatic     #172                // Field HANDLER_SEQ:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #173                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
       7: istore_1
       8: iload_1
       9: ldc           #175                // int 2147483647
      11: if_icmpne     24
      14: new           #176                // class java/lang/IllegalStateException
      17: dup
      18: ldc           #177                // String Too many header/body end handlers!
      20: invokespecial #178                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: iload_1
      25: ireturn

  public io.vertx.ext.web.ParsedHeaderValues parsedHeaders();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method parsedHeaders:()Lio/vertx/ext/web/impl/ParsableHeaderValuesContainer;
       4: areturn

  private void lambda$getEndHandlers$9(io.vertx.core.impl.ContextInternal, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #5                  // Field endHandlerCalled:Z
       4: ifne          25
       7: aload_0
       8: iconst_1
       9: putfield      #5                  // Field endHandlerCalled:Z
      12: aload_0
      13: getfield      #158                // Field endHandlers:Lio/vertx/ext/web/impl/SparseArray;
      16: aload_1
      17: invokedynamic #180,  0            // InvokeDynamic #9:accept:(Lio/vertx/core/impl/ContextInternal;)Ljava/util/function/Consumer;
      22: invokevirtual #181                // Method io/vertx/ext/web/impl/SparseArray.forEachInReverseOrder:(Ljava/util/function/Consumer;)V
      25: return

  private static void lambda$null$8(io.vertx.core.impl.ContextInternal, io.vertx.core.Handler);
    Code:
       0: aload_1
       1: aload_0
       2: ldc           #182                // String Connection closed
       4: invokeinterface #183,  2          // InterfaceMethod io/vertx/core/impl/ContextInternal.failedFuture:(Ljava/lang/String;)Lio/vertx/core/Future;
       9: invokeinterface #65,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      14: return

  private void lambda$getEndHandlers$7(io.vertx.core.impl.ContextInternal, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field endHandlerCalled:Z
       4: ifne          26
       7: aload_0
       8: iconst_1
       9: putfield      #5                  // Field endHandlerCalled:Z
      12: aload_0
      13: getfield      #158                // Field endHandlers:Lio/vertx/ext/web/impl/SparseArray;
      16: aload_1
      17: aload_2
      18: invokedynamic #184,  0            // InvokeDynamic #10:accept:(Lio/vertx/core/impl/ContextInternal;Ljava/lang/Throwable;)Ljava/util/function/Consumer;
      23: invokevirtual #181                // Method io/vertx/ext/web/impl/SparseArray.forEachInReverseOrder:(Ljava/util/function/Consumer;)V
      26: return

  private static void lambda$null$6(io.vertx.core.impl.ContextInternal, java.lang.Throwable, io.vertx.core.Handler);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokeinterface #185,  2          // InterfaceMethod io/vertx/core/impl/ContextInternal.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
       8: invokeinterface #65,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      13: return

  private void lambda$getEndHandlers$5(io.vertx.core.impl.ContextInternal, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #5                  // Field endHandlerCalled:Z
       4: ifne          25
       7: aload_0
       8: iconst_1
       9: putfield      #5                  // Field endHandlerCalled:Z
      12: aload_0
      13: getfield      #158                // Field endHandlers:Lio/vertx/ext/web/impl/SparseArray;
      16: aload_1
      17: invokedynamic #186,  0            // InvokeDynamic #11:accept:(Lio/vertx/core/impl/ContextInternal;)Ljava/util/function/Consumer;
      22: invokevirtual #181                // Method io/vertx/ext/web/impl/SparseArray.forEachInReverseOrder:(Ljava/util/function/Consumer;)V
      25: return

  private static void lambda$null$4(io.vertx.core.impl.ContextInternal, io.vertx.core.Handler);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #187,  1          // InterfaceMethod io/vertx/core/impl/ContextInternal.succeededFuture:()Lio/vertx/core/Future;
       7: invokeinterface #65,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      12: return

  private void lambda$getBodyEndHandlers$3(java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #123                // Field bodyEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
       4: invokedynamic #188,  0            // InvokeDynamic #12:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #181                // Method io/vertx/ext/web/impl/SparseArray.forEachInReverseOrder:(Ljava/util/function/Consumer;)V
      12: return

  private static void lambda$null$2(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aconst_null
       2: invokeinterface #65,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
       7: return

  private void lambda$getHeadersEndHandlers$1(java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #121                // Field headersEndHandlers:Lio/vertx/ext/web/impl/SparseArray;
       4: invokedynamic #189,  0            // InvokeDynamic #13:accept:()Ljava/util/function/Consumer;
       9: invokevirtual #181                // Method io/vertx/ext/web/impl/SparseArray.forEachInReverseOrder:(Ljava/util/function/Consumer;)V
      12: return

  private static void lambda$null$0(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aconst_null
       2: invokeinterface #65,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
       7: return

  static {};
    Code:
       0: ldc           #52                 // class io/vertx/ext/web/impl/RoutingContextImpl
       2: ldc           #190                // String handlerSeq
       4: invokestatic  #191                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #172                // Field HANDLER_SEQ:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
