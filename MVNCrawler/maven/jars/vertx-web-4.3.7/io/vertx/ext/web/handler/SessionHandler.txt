Compiled from "SessionHandler.java"
public interface io.vertx.ext.web.handler.SessionHandler extends io.vertx.ext.web.handler.PlatformHandler {
  public static final java.lang.String DEFAULT_SESSION_COOKIE_NAME;

  public static final java.lang.String DEFAULT_SESSION_COOKIE_PATH;

  public static final long DEFAULT_SESSION_TIMEOUT;

  public static final boolean DEFAULT_NAG_HTTPS;

  public static final boolean DEFAULT_COOKIE_HTTP_ONLY_FLAG;

  public static final boolean DEFAULT_COOKIE_SECURE_FLAG;

  public static final int DEFAULT_SESSIONID_MIN_LENGTH;

  public static final boolean DEFAULT_LAZY_SESSION;

  public static io.vertx.ext.web.handler.SessionHandler create(io.vertx.ext.web.sstore.SessionStore);
    Code:
       0: new           #1                  // class io/vertx/ext/web/handler/impl/SessionHandlerImpl
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method io/vertx/ext/web/handler/impl/SessionHandlerImpl."<init>":(Lio/vertx/ext/web/sstore/SessionStore;)V
       8: areturn

  public abstract io.vertx.ext.web.handler.SessionHandler setSessionTimeout(long);

  public abstract io.vertx.ext.web.handler.SessionHandler setNagHttps(boolean);

  public abstract io.vertx.ext.web.handler.SessionHandler setCookieSecureFlag(boolean);

  public abstract io.vertx.ext.web.handler.SessionHandler setCookieHttpOnlyFlag(boolean);

  public abstract io.vertx.ext.web.handler.SessionHandler setSessionCookieName(java.lang.String);

  public abstract io.vertx.ext.web.handler.SessionHandler setSessionCookiePath(java.lang.String);

  public abstract io.vertx.ext.web.handler.SessionHandler setMinLength(int);

  public abstract io.vertx.ext.web.handler.SessionHandler setCookieSameSite(io.vertx.core.http.CookieSameSite);

  public abstract io.vertx.ext.web.handler.SessionHandler setLazySession(boolean);

  public abstract io.vertx.ext.web.handler.SessionHandler setCookieMaxAge(long);

  public default io.vertx.ext.web.handler.SessionHandler flush(io.vertx.ext.web.RoutingContext, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokeinterface #3,  3            // InterfaceMethod flush:(Lio/vertx/ext/web/RoutingContext;Z)Lio/vertx/core/Future;
       8: aload_2
       9: invokeinterface #4,  2            // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      14: pop
      15: aload_0
      16: areturn

  public default io.vertx.ext.web.handler.SessionHandler flush(io.vertx.ext.web.RoutingContext, boolean, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokeinterface #3,  3            // InterfaceMethod flush:(Lio/vertx/ext/web/RoutingContext;Z)Lio/vertx/core/Future;
       8: aload_3
       9: invokeinterface #4,  2            // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      14: pop
      15: aload_0
      16: areturn

  public default io.vertx.core.Future<java.lang.Void> flush(io.vertx.ext.web.RoutingContext);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokeinterface #3,  3            // InterfaceMethod flush:(Lio/vertx/ext/web/RoutingContext;Z)Lio/vertx/core/Future;
       8: areturn

  public abstract io.vertx.core.Future<java.lang.Void> flush(io.vertx.ext.web.RoutingContext, boolean);

  public abstract io.vertx.ext.web.handler.SessionHandler setCookieless(boolean);

  public abstract io.vertx.ext.web.Session newSession(io.vertx.ext.web.RoutingContext);

  public abstract io.vertx.core.Future<java.lang.Void> setUser(io.vertx.ext.web.RoutingContext, io.vertx.ext.auth.User);

  public default io.vertx.ext.web.handler.SessionHandler setUser(io.vertx.ext.web.RoutingContext, io.vertx.ext.auth.User, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #5,  3            // InterfaceMethod setUser:(Lio/vertx/ext/web/RoutingContext;Lio/vertx/ext/auth/User;)Lio/vertx/core/Future;
       8: aload_3
       9: invokeinterface #4,  2            // InterfaceMethod io/vertx/core/Future.onComplete:(Lio/vertx/core/Handler;)Lio/vertx/core/Future;
      14: pop
      15: aload_0
      16: areturn
}
