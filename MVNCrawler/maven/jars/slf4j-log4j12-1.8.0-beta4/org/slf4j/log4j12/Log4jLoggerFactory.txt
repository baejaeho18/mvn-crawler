Compiled from "Log4jLoggerFactory.java"
public class org.slf4j.log4j12.Log4jLoggerFactory implements org.slf4j.ILoggerFactory {
  private static final java.lang.String LOG4J_DELEGATION_LOOP_URL;

  java.util.concurrent.ConcurrentMap<java.lang.String, org.slf4j.Logger> loggerMap;

  public org.slf4j.log4j12.Log4jLoggerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field loggerMap:Ljava/util/concurrent/ConcurrentMap;
      15: invokestatic  #5                  // Method org/apache/log4j/LogManager.getRootLogger:()Lorg/apache/log4j/Logger;
      18: pop
      19: return

  public org.slf4j.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loggerMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/slf4j/Logger
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_1
      21: ldc           #8                  // String ROOT
      23: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      26: ifeq          36
      29: invokestatic  #5                  // Method org/apache/log4j/LogManager.getRootLogger:()Lorg/apache/log4j/Logger;
      32: astore_3
      33: goto          41
      36: aload_1
      37: invokestatic  #10                 // Method org/apache/log4j/LogManager.getLogger:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
      40: astore_3
      41: new           #11                 // class org/slf4j/log4j12/Log4jLoggerAdapter
      44: dup
      45: aload_3
      46: invokespecial #12                 // Method org/slf4j/log4j12/Log4jLoggerAdapter."<init>":(Lorg/apache/log4j/Logger;)V
      49: astore        4
      51: aload_0
      52: getfield      #4                  // Field loggerMap:Ljava/util/concurrent/ConcurrentMap;
      55: aload_1
      56: aload         4
      58: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #7                  // class org/slf4j/Logger
      66: astore        5
      68: aload         5
      70: ifnonnull     78
      73: aload         4
      75: goto          80
      78: aload         5
      80: areturn

  static {};
    Code:
       0: ldc           #14                 // String org.apache.log4j.Log4jLoggerFactory
       2: invokestatic  #15                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: pop
       6: ldc           #16                 // String Detected both log4j-over-slf4j.jar AND bound slf4j-log4j12.jar on the class path, preempting StackOverflowError.
       8: astore_0
       9: ldc           #17                 // String See also http://www.slf4j.org/codes.html#log4jDelegationLoop for more details.
      11: astore_1
      12: aload_0
      13: invokestatic  #18                 // Method org/slf4j/helpers/Util.report:(Ljava/lang/String;)V
      16: aload_1
      17: invokestatic  #18                 // Method org/slf4j/helpers/Util.report:(Ljava/lang/String;)V
      20: new           #19                 // class java/lang/IllegalStateException
      23: dup
      24: new           #20                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      31: aload_0
      32: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: astore_0
      47: return
    Exception table:
       from    to  target type
           0    46    46   Class java/lang/ClassNotFoundException
}
