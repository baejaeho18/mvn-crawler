Compiled from "SpscAtomicArrayQueue.java"
public class co.elastic.apm.agent.shaded.jctools.queues.atomic.SpscAtomicArrayQueue<E> extends co.elastic.apm.agent.shaded.jctools.queues.atomic.SpscAtomicArrayQueueL3Pad<E> {
  public co.elastic.apm.agent.shaded.jctools.queues.atomic.SpscAtomicArrayQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokestatic  #28                 // Method java/lang/Math.max:(II)I
       6: invokespecial #30                 // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpscAtomicArrayQueueL3Pad."<init>":(I)V
       9: return

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #39                 // class java/lang/NullPointerException
       8: dup
       9: invokespecial #42                 // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      17: astore_2
      18: aload_0
      19: getfield      #49                 // Field mask:I
      22: istore_3
      23: aload_0
      24: getfield      #53                 // Field producerIndex:J
      27: lstore        4
      29: lload         4
      31: aload_0
      32: getfield      #56                 // Field producerLimit:J
      35: lcmp
      36: iflt          52
      39: aload_0
      40: aload_2
      41: iload_3
      42: lload         4
      44: invokespecial #60                 // Method offerSlowPath:(Ljava/util/concurrent/atomic/AtomicReferenceArray;IJ)Z
      47: ifne          52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: lload         4
      55: iload_3
      56: invokevirtual #66                 // Method calcElementOffset:(JI)I
      59: istore        6
      61: aload_2
      62: iload         6
      64: aload_1
      65: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      68: aload_0
      69: lload         4
      71: lconst_1
      72: ladd
      73: invokevirtual #74                 // Method soProducerIndex:(J)V
      76: iconst_1
      77: ireturn

  private boolean offerSlowPath(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, long);
    Code:
       0: aload_0
       1: getfield      #82                 // Field lookAheadStep:I
       4: istore        5
       6: aconst_null
       7: aload_1
       8: aload_0
       9: lload_3
      10: iload         5
      12: i2l
      13: ladd
      14: iload_2
      15: invokevirtual #66                 // Method calcElementOffset:(JI)I
      18: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      21: if_acmpne     36
      24: aload_0
      25: lload_3
      26: iload         5
      28: i2l
      29: ladd
      30: putfield      #56                 // Field producerLimit:J
      33: goto          56
      36: aload_0
      37: lload_3
      38: iload_2
      39: invokevirtual #66                 // Method calcElementOffset:(JI)I
      42: istore        6
      44: aconst_null
      45: aload_1
      46: iload         6
      48: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      51: if_acmpeq     56
      54: iconst_0
      55: ireturn
      56: iconst_1
      57: ireturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #91                 // Field consumerIndex:J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: invokevirtual #94                 // Method calcElementOffset:(J)I
      10: istore_3
      11: aload_0
      12: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      15: astore        4
      17: aload         4
      19: iload_3
      20: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      23: astore        5
      25: aconst_null
      26: aload         5
      28: if_acmpne     33
      31: aconst_null
      32: areturn
      33: aload         4
      35: iload_3
      36: aconst_null
      37: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      40: aload_0
      41: lload_1
      42: lconst_1
      43: ladd
      44: invokevirtual #99                 // Method soConsumerIndex:(J)V
      47: aload         5
      49: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: aload_0
       5: aload_0
       6: getfield      #91                 // Field consumerIndex:J
       9: invokevirtual #94                 // Method calcElementOffset:(J)I
      12: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      15: areturn

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #103                // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: invokevirtual #107                // Method poll:()Ljava/lang/Object;
       4: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method peek:()Ljava/lang/Object;
       4: areturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #115                // Method capacity:()I
       6: invokevirtual #118                // Method drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;I)I
       9: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #115                // Method capacity:()I
       6: invokevirtual #126                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
       9: ireturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_3
       5: aload_0
       6: getfield      #49                 // Field mask:I
       9: istore        4
      11: aload_0
      12: getfield      #91                 // Field consumerIndex:J
      15: lstore        5
      17: iconst_0
      18: istore        7
      20: iload         7
      22: iload_2
      23: if_icmpge     90
      26: lload         5
      28: iload         7
      30: i2l
      31: ladd
      32: lstore        8
      34: aload_0
      35: lload         8
      37: iload         4
      39: invokevirtual #66                 // Method calcElementOffset:(JI)I
      42: istore        10
      44: aload_3
      45: iload         10
      47: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      50: astore        11
      52: aconst_null
      53: aload         11
      55: if_acmpne     61
      58: iload         7
      60: ireturn
      61: aload_3
      62: iload         10
      64: aconst_null
      65: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      68: aload_0
      69: lload         8
      71: lconst_1
      72: ladd
      73: invokevirtual #99                 // Method soConsumerIndex:(J)V
      76: aload_1
      77: aload         11
      79: invokeinterface #133,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
      84: iinc          7, 1
      87: goto          20
      90: iload_2
      91: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aload_0
       1: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_3
       5: aload_0
       6: getfield      #49                 // Field mask:I
       9: istore        4
      11: aload_0
      12: getfield      #82                 // Field lookAheadStep:I
      15: istore        5
      17: aload_0
      18: getfield      #53                 // Field producerIndex:J
      21: lstore        6
      23: iconst_0
      24: istore        8
      26: iload         8
      28: iload_2
      29: if_icmpge     190
      32: lload         6
      34: iload         8
      36: i2l
      37: ladd
      38: lstore        9
      40: aload_0
      41: lload         9
      43: iload         5
      45: i2l
      46: ladd
      47: iload         4
      49: invokevirtual #66                 // Method calcElementOffset:(JI)I
      52: istore        11
      54: aconst_null
      55: aload_3
      56: iload         11
      58: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      61: if_acmpne     141
      64: iload         5
      66: iload_2
      67: iload         8
      69: isub
      70: invokestatic  #139                // Method java/lang/Math.min:(II)I
      73: istore        12
      75: iconst_0
      76: istore        13
      78: iload         13
      80: iload         12
      82: if_icmpge     129
      85: aload_0
      86: lload         9
      88: iload         13
      90: i2l
      91: ladd
      92: iload         4
      94: invokevirtual #66                 // Method calcElementOffset:(JI)I
      97: istore        14
      99: aload_3
     100: iload         14
     102: aload_1
     103: invokeinterface #142,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     108: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     111: aload_0
     112: lload         9
     114: iload         13
     116: i2l
     117: ladd
     118: lconst_1
     119: ladd
     120: invokevirtual #74                 // Method soProducerIndex:(J)V
     123: iinc          13, 1
     126: goto          78
     129: iload         8
     131: iload         12
     133: iconst_1
     134: isub
     135: iadd
     136: istore        8
     138: goto          184
     141: aload_0
     142: lload         9
     144: iload         4
     146: invokevirtual #66                 // Method calcElementOffset:(JI)I
     149: istore        12
     151: aconst_null
     152: aload_3
     153: iload         12
     155: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
     158: if_acmpeq     164
     161: iload         8
     163: ireturn
     164: aload_3
     165: iload         12
     167: aload_1
     168: invokeinterface #142,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     173: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     176: aload_0
     177: lload         9
     179: lconst_1
     180: ladd
     181: invokevirtual #74                 // Method soProducerIndex:(J)V
     184: iinc          8, 1
     187: goto          26
     190: iload_2
     191: ireturn

  public void drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore        4
       6: aload_0
       7: getfield      #49                 // Field mask:I
      10: istore        5
      12: aload_0
      13: getfield      #91                 // Field consumerIndex:J
      16: lstore        6
      18: iconst_0
      19: istore        8
      21: aload_3
      22: invokeinterface #150,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      27: ifeq          119
      30: iconst_0
      31: istore        9
      33: iload         9
      35: sipush        4096
      38: if_icmpge     116
      41: aload_0
      42: lload         6
      44: iload         5
      46: invokevirtual #66                 // Method calcElementOffset:(JI)I
      49: istore        10
      51: aload         4
      53: iload         10
      55: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      58: astore        11
      60: aconst_null
      61: aload         11
      63: if_acmpne     79
      66: aload_2
      67: iload         8
      69: invokeinterface #154,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      74: istore        8
      76: goto          110
      79: lload         6
      81: lconst_1
      82: ladd
      83: lstore        6
      85: iconst_0
      86: istore        8
      88: aload         4
      90: iload         10
      92: aconst_null
      93: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      96: aload_0
      97: lload         6
      99: invokevirtual #99                 // Method soConsumerIndex:(J)V
     102: aload_1
     103: aload         11
     105: invokeinterface #133,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
     110: iinc          9, 1
     113: goto          33
     116: goto          21
     119: return

  public void fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: getfield      #46                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore        4
       6: aload_0
       7: getfield      #49                 // Field mask:I
      10: istore        5
      12: aload_0
      13: getfield      #82                 // Field lookAheadStep:I
      16: istore        6
      18: aload_0
      19: getfield      #53                 // Field producerIndex:J
      22: lstore        7
      24: iconst_0
      25: istore        9
      27: aload_3
      28: invokeinterface #150,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      33: ifeq          180
      36: aload_0
      37: lload         7
      39: iload         6
      41: i2l
      42: ladd
      43: iload         5
      45: invokevirtual #66                 // Method calcElementOffset:(JI)I
      48: istore        10
      50: aconst_null
      51: aload         4
      53: iload         10
      55: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      58: if_acmpne     115
      61: iconst_0
      62: istore        11
      64: iload         11
      66: iload         6
      68: if_icmpge     112
      71: aload_0
      72: lload         7
      74: iload         5
      76: invokevirtual #66                 // Method calcElementOffset:(JI)I
      79: istore        12
      81: lload         7
      83: lconst_1
      84: ladd
      85: lstore        7
      87: aload         4
      89: iload         12
      91: aload_1
      92: invokeinterface #142,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
      97: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     100: aload_0
     101: lload         7
     103: invokevirtual #74                 // Method soProducerIndex:(J)V
     106: iinc          11, 1
     109: goto          64
     112: goto          177
     115: aload_0
     116: lload         7
     118: iload         5
     120: invokevirtual #66                 // Method calcElementOffset:(JI)I
     123: istore        11
     125: aconst_null
     126: aload         4
     128: iload         11
     130: invokestatic  #86                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
     133: if_acmpeq     149
     136: aload_2
     137: iload         9
     139: invokeinterface #154,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
     144: istore        9
     146: goto          27
     149: lload         7
     151: lconst_1
     152: ladd
     153: lstore        7
     155: iconst_0
     156: istore        9
     158: aload         4
     160: iload         11
     162: aload_1
     163: invokeinterface #142,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     168: invokestatic  #70                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     171: aload_0
     172: lload         7
     174: invokevirtual #74                 // Method soProducerIndex:(J)V
     177: goto          27
     180: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #163                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpscAtomicArrayQueueL3Pad.clear:()V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #167                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpscAtomicArrayQueueL3Pad.toString:()Ljava/lang/String;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokespecial #171                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpscAtomicArrayQueueL3Pad.iterator:()Ljava/util/Iterator;
       4: areturn
}
