Compiled from "PotentiallyMultiValuedMap.java"
public class co.elastic.apm.agent.util.PotentiallyMultiValuedMap implements co.elastic.apm.agent.objectpool.Recyclable {
  private final java.util.List<java.lang.String> keys;

  private final java.util.List<java.lang.Object> values;

  public co.elastic.apm.agent.util.PotentiallyMultiValuedMap();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #18                 // class java/util/ArrayList
       8: dup
       9: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #21                 // Field keys:Ljava/util/List;
      15: aload_0
      16: new           #18                 // class java/util/ArrayList
      19: dup
      20: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #23                 // Field values:Ljava/util/List;
      26: return

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method indexOfIgnoreCase:(Ljava/lang/String;)I
       5: istore_3
       6: iload_3
       7: iflt          57
      10: aload_0
      11: getfield      #23                 // Field values:Ljava/util/List;
      14: iload_3
      15: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: astore        4
      22: aload         4
      24: instanceof    #33                 // class java/util/List
      27: ifeq          43
      30: aload_0
      31: aload_2
      32: aload         4
      34: checkcast     #33                 // class java/util/List
      37: invokespecial #41                 // Method addValueToValueList:(Ljava/lang/String;Ljava/util/List;)V
      40: goto          54
      43: aload_0
      44: iload_3
      45: aload         4
      47: checkcast     #43                 // class java/lang/String
      50: aload_2
      51: invokespecial #47                 // Method convertValueToMultiValue:(ILjava/lang/String;Ljava/lang/String;)V
      54: goto          79
      57: aload_0
      58: getfield      #21                 // Field keys:Ljava/util/List;
      61: aload_1
      62: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload_0
      69: getfield      #23                 // Field values:Ljava/util/List;
      72: aload_2
      73: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: return

  public void set(java.lang.String, java.lang.String[]);
    Code:
       0: aload_2
       1: arraylength
       2: ifle          63
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpne     38
      11: aload_0
      12: getfield      #21                 // Field keys:Ljava/util/List;
      15: aload_1
      16: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: getfield      #23                 // Field values:Ljava/util/List;
      26: aload_2
      27: iconst_0
      28: aaload
      29: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      34: pop
      35: goto          63
      38: aload_0
      39: getfield      #21                 // Field keys:Ljava/util/List;
      42: aload_1
      43: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: getfield      #23                 // Field values:Ljava/util/List;
      53: aload_2
      54: invokestatic  #65                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      57: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: return

  private int indexOfIgnoreCase(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #21                 // Field keys:Ljava/util/List;
       7: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I
      12: if_icmpge     43
      15: aload_0
      16: getfield      #21                 // Field keys:Ljava/util/List;
      19: iload_2
      20: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #43                 // class java/lang/String
      28: aload_1
      29: invokevirtual #74                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      32: ifeq          37
      35: iload_2
      36: ireturn
      37: iinc          2, 1
      40: goto          2
      43: iconst_m1
      44: ireturn

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #81                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: instanceof    #33                 // class java/util/List
      10: ifeq          27
      13: aload_2
      14: checkcast     #33                 // class java/util/List
      17: iconst_0
      18: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #43                 // class java/lang/String
      26: areturn
      27: aload_2
      28: checkcast     #43                 // class java/lang/String
      31: areturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method indexOfIgnoreCase:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #23                 // Field values:Ljava/util/List;
      17: iload_2
      18: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: areturn

  public java.util.List<java.lang.String> getAll(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method indexOfIgnoreCase:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     15
      11: invokestatic  #90                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: areturn
      15: aload_0
      16: getfield      #23                 // Field values:Ljava/util/List;
      19: iload_2
      20: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: astore_3
      26: aload_3
      27: instanceof    #33                 // class java/util/List
      30: ifeq          38
      33: aload_3
      34: checkcast     #33                 // class java/util/List
      37: areturn
      38: aload_3
      39: checkcast     #43                 // class java/lang/String
      42: invokestatic  #94                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      45: areturn

  private void addValueToValueList(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       7: pop
       8: return

  private void convertValueToMultiValue(int, java.lang.String, java.lang.String);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: iconst_4
       5: invokespecial #98                 // Method java/util/ArrayList."<init>":(I)V
       8: astore        4
      10: aload         4
      12: aload_2
      13: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload         4
      21: aload_3
      22: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: getfield      #23                 // Field values:Ljava/util/List;
      32: iload_1
      33: aload         4
      35: invokeinterface #101,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #21                 // Field keys:Ljava/util/List;
       4: invokeinterface #105,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public void resetState();
    Code:
       0: aload_0
       1: getfield      #21                 // Field keys:Ljava/util/List;
       4: invokeinterface #109,  1          // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #23                 // Field values:Ljava/util/List;
      13: invokeinterface #109,  1          // InterfaceMethod java/util/List.clear:()V
      18: return

  public java.lang.String getKey(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field keys:Ljava/util/List;
       4: iload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #43                 // class java/lang/String
      13: areturn

  public java.lang.Object getValue(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field values:Ljava/util/List;
       4: iload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #21                 // Field keys:Ljava/util/List;
       4: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public void copyFrom(co.elastic.apm.agent.util.PotentiallyMultiValuedMap);
    Code:
       0: aload_0
       1: getfield      #21                 // Field keys:Ljava/util/List;
       4: aload_1
       5: getfield      #21                 // Field keys:Ljava/util/List;
       8: invokeinterface #118,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: getfield      #23                 // Field values:Ljava/util/List;
      18: aload_1
      19: getfield      #23                 // Field values:Ljava/util/List;
      22: invokeinterface #118,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: return

  public void removeIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method indexOfIgnoreCase:(Ljava/lang/String;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpeq     33
      11: aload_0
      12: getfield      #21                 // Field keys:Ljava/util/List;
      15: iload_2
      16: invokeinterface #124,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getfield      #23                 // Field values:Ljava/util/List;
      26: iload_2
      27: invokeinterface #124,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      32: pop
      33: return

  public void set(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field values:Ljava/util/List;
       4: iload_1
       5: aload_2
       6: invokeinterface #101,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public boolean containsIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method indexOfIgnoreCase:(Ljava/lang/String;)I
       5: iconst_m1
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn
}
