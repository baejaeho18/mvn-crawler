Compiled from "IntMath.java"
public final class co.elastic.apm.agent.shaded.guava.common.math.IntMath {
  static final int MAX_SIGNED_POWER_OF_TWO;

  static final int MAX_POWER_OF_SQRT2_UNSIGNED;

  static final byte[] maxLog10ForLeadingZeros;

  static final int[] powersOf10;

  static final int[] halfPowersOf10;

  static final int FLOOR_SQRT_MAX_INT;

  private static final int[] factorials;

  static int[] biggestBinomials;

  public static int ceilingPowerOfTwo(int);
    Code:
       0: ldc           #30                 // String x
       2: iload_0
       3: invokestatic  #36                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: ldc           #13                 // int 1073741824
      10: if_icmple     45
      13: new           #38                 // class java/lang/ArithmeticException
      16: dup
      17: new           #40                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #46                 // String ceilingPowerOfTwo(
      26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: iload_0
      30: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #55                 // String ) not representable as an int
      35: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #62                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: iconst_1
      46: iload_0
      47: iconst_1
      48: isub
      49: invokestatic  #67                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      52: ineg
      53: ishl
      54: ireturn

  public static int floorPowerOfTwo(int);
    Code:
       0: ldc           #30                 // String x
       2: iload_0
       3: invokestatic  #36                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: invokestatic  #71                 // Method java/lang/Integer.highestOneBit:(I)I
      11: ireturn

  public static boolean isPowerOfTwo(int);
    Code:
       0: iload_0
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: iload_0
      10: iload_0
      11: iconst_1
      12: isub
      13: iand
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: iand
      23: ireturn

  static int lessThanBranchFree(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: isub
       3: iconst_m1
       4: ixor
       5: iconst_m1
       6: ixor
       7: bipush        31
       9: iushr
      10: ireturn

  public static int log2(int, java.math.RoundingMode);
    Code:
       0: ldc           #30                 // String x
       2: iload_0
       3: invokestatic  #36                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;I)I
       6: pop
       7: getstatic     #81                 // Field co/elastic/apm/agent/shaded/guava/common/math/IntMath$1.$SwitchMap$java$math$RoundingMode:[I
      10: aload_1
      11: invokevirtual #87                 // Method java/math/RoundingMode.ordinal:()I
      14: iaload
      15: tableswitch   { // 1 to 8
                     1: 60
                     2: 67
                     3: 67
                     4: 75
                     5: 75
                     6: 85
                     7: 85
                     8: 85
               default: 110
          }
      60: iload_0
      61: invokestatic  #89                 // Method isPowerOfTwo:(I)Z
      64: invokestatic  #93                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      67: bipush        31
      69: iload_0
      70: invokestatic  #67                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      73: isub
      74: ireturn
      75: bipush        32
      77: iload_0
      78: iconst_1
      79: isub
      80: invokestatic  #67                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      83: isub
      84: ireturn
      85: iload_0
      86: invokestatic  #67                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
      89: istore_2
      90: ldc           #16                 // int -1257966797
      92: iload_2
      93: iushr
      94: istore_3
      95: bipush        31
      97: iload_2
      98: isub
      99: istore        4
     101: iload         4
     103: iload_3
     104: iload_0
     105: invokestatic  #95                 // Method lessThanBranchFree:(II)I
     108: iadd
     109: ireturn
     110: new           #97                 // class java/lang/AssertionError
     113: dup
     114: invokespecial #98                 // Method java/lang/AssertionError."<init>":()V
     117: athrow

  public static int log10(int, java.math.RoundingMode);
    Code:
       0: ldc           #30                 // String x
       2: iload_0
       3: invokestatic  #36                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: invokestatic  #108                // Method log10Floor:(I)I
      11: istore_2
      12: getstatic     #110                // Field powersOf10:[I
      15: iload_2
      16: iaload
      17: istore_3
      18: getstatic     #81                 // Field co/elastic/apm/agent/shaded/guava/common/math/IntMath$1.$SwitchMap$java$math$RoundingMode:[I
      21: aload_1
      22: invokevirtual #87                 // Method java/math/RoundingMode.ordinal:()I
      25: iaload
      26: tableswitch   { // 1 to 8
                     1: 72
                     2: 85
                     3: 85
                     4: 87
                     5: 87
                     6: 95
                     7: 95
                     8: 95
               default: 107
          }
      72: iload_0
      73: iload_3
      74: if_icmpne     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: invokestatic  #93                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      85: iload_2
      86: ireturn
      87: iload_2
      88: iload_3
      89: iload_0
      90: invokestatic  #95                 // Method lessThanBranchFree:(II)I
      93: iadd
      94: ireturn
      95: iload_2
      96: getstatic     #112                // Field halfPowersOf10:[I
      99: iload_2
     100: iaload
     101: iload_0
     102: invokestatic  #95                 // Method lessThanBranchFree:(II)I
     105: iadd
     106: ireturn
     107: new           #97                 // class java/lang/AssertionError
     110: dup
     111: invokespecial #98                 // Method java/lang/AssertionError."<init>":()V
     114: athrow

  private static int log10Floor(int);
    Code:
       0: getstatic     #115                // Field maxLog10ForLeadingZeros:[B
       3: iload_0
       4: invokestatic  #67                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       7: baload
       8: istore_1
       9: iload_1
      10: iload_0
      11: getstatic     #110                // Field powersOf10:[I
      14: iload_1
      15: iaload
      16: invokestatic  #95                 // Method lessThanBranchFree:(II)I
      19: isub
      20: ireturn

  public static int pow(int, int);
    Code:
       0: ldc           #118                // String exponent
       2: iload_1
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: tableswitch   { // -2 to 2
                    -2: 82
                    -1: 56
                     0: 44
                     1: 54
                     2: 68
               default: 107
          }
      44: iload_1
      45: ifne          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn
      54: iconst_1
      55: ireturn
      56: iload_1
      57: iconst_1
      58: iand
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_m1
      67: ireturn
      68: iload_1
      69: bipush        32
      71: if_icmpge     80
      74: iconst_1
      75: iload_1
      76: ishl
      77: goto          81
      80: iconst_0
      81: ireturn
      82: iload_1
      83: bipush        32
      85: if_icmpge     105
      88: iload_1
      89: iconst_1
      90: iand
      91: ifne          100
      94: iconst_1
      95: iload_1
      96: ishl
      97: goto          104
     100: iconst_1
     101: iload_1
     102: ishl
     103: ineg
     104: ireturn
     105: iconst_0
     106: ireturn
     107: iconst_1
     108: istore_2
     109: iload_1
     110: lookupswitch  { // 2
                     0: 136
                     1: 138
               default: 142
          }
     136: iload_2
     137: ireturn
     138: iload_0
     139: iload_2
     140: imul
     141: ireturn
     142: iload_2
     143: iload_1
     144: iconst_1
     145: iand
     146: ifne          153
     149: iconst_1
     150: goto          154
     153: iload_0
     154: imul
     155: istore_2
     156: iload_0
     157: iload_0
     158: imul
     159: istore_0
     160: iload_1
     161: iconst_1
     162: ishr
     163: istore_1
     164: goto          109

  public static int sqrt(int, java.math.RoundingMode);
    Code:
       0: ldc           #30                 // String x
       2: iload_0
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: invokestatic  #128                // Method sqrtFloor:(I)I
      11: istore_2
      12: getstatic     #81                 // Field co/elastic/apm/agent/shaded/guava/common/math/IntMath$1.$SwitchMap$java$math$RoundingMode:[I
      15: aload_1
      16: invokevirtual #87                 // Method java/math/RoundingMode.ordinal:()I
      19: iaload
      20: tableswitch   { // 1 to 8
                     1: 68
                     2: 83
                     3: 83
                     4: 85
                     5: 85
                     6: 95
                     7: 95
                     8: 95
               default: 109
          }
      68: iload_2
      69: iload_2
      70: imul
      71: iload_0
      72: if_icmpne     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: invokestatic  #93                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      83: iload_2
      84: ireturn
      85: iload_2
      86: iload_2
      87: iload_2
      88: imul
      89: iload_0
      90: invokestatic  #95                 // Method lessThanBranchFree:(II)I
      93: iadd
      94: ireturn
      95: iload_2
      96: iload_2
      97: imul
      98: iload_2
      99: iadd
     100: istore_3
     101: iload_2
     102: iload_3
     103: iload_0
     104: invokestatic  #95                 // Method lessThanBranchFree:(II)I
     107: iadd
     108: ireturn
     109: new           #97                 // class java/lang/AssertionError
     112: dup
     113: invokespecial #98                 // Method java/lang/AssertionError."<init>":()V
     116: athrow

  private static int sqrtFloor(int);
    Code:
       0: iload_0
       1: i2d
       2: invokestatic  #134                // Method java/lang/Math.sqrt:(D)D
       5: d2i
       6: ireturn

  public static int divide(int, int, java.math.RoundingMode);
    Code:
       0: aload_2
       1: invokestatic  #142                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: ifne          19
       9: new           #38                 // class java/lang/ArithmeticException
      12: dup
      13: ldc           #144                // String / by zero
      15: invokespecial #62                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_0
      20: iload_1
      21: idiv
      22: istore_3
      23: iload_0
      24: iload_1
      25: iload_3
      26: imul
      27: isub
      28: istore        4
      30: iload         4
      32: ifne          37
      35: iload_3
      36: ireturn
      37: iconst_1
      38: iload_0
      39: iload_1
      40: ixor
      41: bipush        31
      43: ishr
      44: ior
      45: istore        5
      47: getstatic     #81                 // Field co/elastic/apm/agent/shaded/guava/common/math/IntMath$1.$SwitchMap$java$math$RoundingMode:[I
      50: aload_2
      51: invokevirtual #87                 // Method java/math/RoundingMode.ordinal:()I
      54: iaload
      55: tableswitch   { // 1 to 8
                     1: 100
                     2: 113
                     3: 140
                     4: 119
                     5: 125
                     6: 155
                     7: 155
                     8: 155
               default: 238
          }
     100: iload         4
     102: ifne          109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: invokestatic  #93                 // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
     113: iconst_0
     114: istore        6
     116: goto          246
     119: iconst_1
     120: istore        6
     122: goto          246
     125: iload         5
     127: ifle          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: istore        6
     137: goto          246
     140: iload         5
     142: ifge          149
     145: iconst_1
     146: goto          150
     149: iconst_0
     150: istore        6
     152: goto          246
     155: iload         4
     157: invokestatic  #147                // Method java/lang/Math.abs:(I)I
     160: istore        7
     162: iload         7
     164: iload_1
     165: invokestatic  #147                // Method java/lang/Math.abs:(I)I
     168: iload         7
     170: isub
     171: isub
     172: istore        8
     174: iload         8
     176: ifne          223
     179: aload_2
     180: getstatic     #150                // Field java/math/RoundingMode.HALF_UP:Ljava/math/RoundingMode;
     183: if_acmpeq     213
     186: aload_2
     187: getstatic     #153                // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
     190: if_acmpne     197
     193: iconst_1
     194: goto          198
     197: iconst_0
     198: iload_3
     199: iconst_1
     200: iand
     201: ifeq          208
     204: iconst_1
     205: goto          209
     208: iconst_0
     209: iand
     210: ifeq          217
     213: iconst_1
     214: goto          218
     217: iconst_0
     218: istore        6
     220: goto          246
     223: iload         8
     225: ifle          232
     228: iconst_1
     229: goto          233
     232: iconst_0
     233: istore        6
     235: goto          246
     238: new           #97                 // class java/lang/AssertionError
     241: dup
     242: invokespecial #98                 // Method java/lang/AssertionError."<init>":()V
     245: athrow
     246: iload         6
     248: ifeq          258
     251: iload_3
     252: iload         5
     254: iadd
     255: goto          259
     258: iload_3
     259: ireturn

  public static int mod(int, int);
    Code:
       0: iload_1
       1: ifgt          36
       4: new           #38                 // class java/lang/ArithmeticException
       7: dup
       8: new           #40                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #165                // String Modulus
      17: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #167                // String  must be > 0
      26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #62                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_0
      37: iload_1
      38: irem
      39: istore_2
      40: iload_2
      41: iflt          48
      44: iload_2
      45: goto          51
      48: iload_2
      49: iload_1
      50: iadd
      51: ireturn

  public static int gcd(int, int);
    Code:
       0: ldc           #172                // String a
       2: iload_0
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc           #173                // String b
       9: iload_1
      10: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
      13: pop
      14: iload_0
      15: ifne          20
      18: iload_1
      19: ireturn
      20: iload_1
      21: ifne          26
      24: iload_0
      25: ireturn
      26: iload_0
      27: invokestatic  #176                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
      30: istore_2
      31: iload_0
      32: iload_2
      33: ishr
      34: istore_0
      35: iload_1
      36: invokestatic  #176                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
      39: istore_3
      40: iload_1
      41: iload_3
      42: ishr
      43: istore_1
      44: iload_0
      45: iload_1
      46: if_icmpeq     88
      49: iload_0
      50: iload_1
      51: isub
      52: istore        4
      54: iload         4
      56: iload         4
      58: bipush        31
      60: ishr
      61: iand
      62: istore        5
      64: iload         4
      66: iload         5
      68: isub
      69: iload         5
      71: isub
      72: istore_0
      73: iload_1
      74: iload         5
      76: iadd
      77: istore_1
      78: iload_0
      79: iload_0
      80: invokestatic  #176                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
      83: ishr
      84: istore_0
      85: goto          44
      88: iload_0
      89: iload_2
      90: iload_3
      91: invokestatic  #179                // Method java/lang/Math.min:(II)I
      94: ishl
      95: ireturn

  public static int checkedAdd(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: ladd
       5: lstore_2
       6: lload_2
       7: lload_2
       8: l2i
       9: i2l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #185                // String checkedAdd
      21: iload_0
      22: iload_1
      23: invokestatic  #189                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;II)V
      26: lload_2
      27: l2i
      28: ireturn

  public static int checkedSubtract(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lsub
       5: lstore_2
       6: lload_2
       7: lload_2
       8: l2i
       9: i2l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #192                // String checkedSubtract
      21: iload_0
      22: iload_1
      23: invokestatic  #189                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;II)V
      26: lload_2
      27: l2i
      28: ireturn

  public static int checkedMultiply(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: lstore_2
       6: lload_2
       7: lload_2
       8: l2i
       9: i2l
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #194                // String checkedMultiply
      21: iload_0
      22: iload_1
      23: invokestatic  #189                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;II)V
      26: lload_2
      27: l2i
      28: ireturn

  public static int checkedPow(int, int);
    Code:
       0: ldc           #118                // String exponent
       2: iload_1
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: tableswitch   { // -2 to 2
                    -2: 90
                    -1: 56
                     0: 44
                     1: 54
                     2: 68
               default: 124
          }
      44: iload_1
      45: ifne          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn
      54: iconst_1
      55: ireturn
      56: iload_1
      57: iconst_1
      58: iand
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_m1
      67: ireturn
      68: iload_1
      69: bipush        31
      71: if_icmpge     78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ldc           #196                // String checkedPow
      81: iload_0
      82: iload_1
      83: invokestatic  #189                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;II)V
      86: iconst_1
      87: iload_1
      88: ishl
      89: ireturn
      90: iload_1
      91: bipush        32
      93: if_icmpge     100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ldc           #196                // String checkedPow
     103: iload_0
     104: iload_1
     105: invokestatic  #189                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;II)V
     108: iload_1
     109: iconst_1
     110: iand
     111: ifne          120
     114: iconst_1
     115: iload_1
     116: ishl
     117: goto          123
     120: iconst_m1
     121: iload_1
     122: ishl
     123: ireturn
     124: iconst_1
     125: istore_2
     126: iload_1
     127: lookupswitch  { // 2
                     0: 152
                     1: 154
               default: 160
          }
     152: iload_2
     153: ireturn
     154: iload_2
     155: iload_0
     156: invokestatic  #198                // Method checkedMultiply:(II)I
     159: ireturn
     160: iload_1
     161: iconst_1
     162: iand
     163: ifeq          172
     166: iload_2
     167: iload_0
     168: invokestatic  #198                // Method checkedMultiply:(II)I
     171: istore_2
     172: iload_1
     173: iconst_1
     174: ishr
     175: istore_1
     176: iload_1
     177: ifle          126
     180: ldc           #199                // int -46340
     182: iload_0
     183: if_icmpgt     190
     186: iconst_1
     187: goto          191
     190: iconst_0
     191: iload_0
     192: ldc           #23                 // int 46340
     194: if_icmpgt     201
     197: iconst_1
     198: goto          202
     201: iconst_0
     202: iand
     203: ldc           #196                // String checkedPow
     205: iload_0
     206: iload_1
     207: invokestatic  #189                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNoOverflow:(ZLjava/lang/String;II)V
     210: iload_0
     211: iload_0
     212: imul
     213: istore_0
     214: goto          126

  public static int saturatedAdd(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: ladd
       5: invokestatic  #206                // Method co/elastic/apm/agent/shaded/guava/common/primitives/Ints.saturatedCast:(J)I
       8: ireturn

  public static int saturatedSubtract(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lsub
       5: invokestatic  #206                // Method co/elastic/apm/agent/shaded/guava/common/primitives/Ints.saturatedCast:(J)I
       8: ireturn

  public static int saturatedMultiply(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: invokestatic  #206                // Method co/elastic/apm/agent/shaded/guava/common/primitives/Ints.saturatedCast:(J)I
       8: ireturn

  public static int saturatedPow(int, int);
    Code:
       0: ldc           #118                // String exponent
       2: iload_1
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: tableswitch   { // -2 to 2
                    -2: 81
                    -1: 56
                     0: 44
                     1: 54
                     2: 68
               default: 110
          }
      44: iload_1
      45: ifne          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn
      54: iconst_1
      55: ireturn
      56: iload_1
      57: iconst_1
      58: iand
      59: ifne          66
      62: iconst_1
      63: goto          67
      66: iconst_m1
      67: ireturn
      68: iload_1
      69: bipush        31
      71: if_icmplt     77
      74: ldc           #210                // int 2147483647
      76: ireturn
      77: iconst_1
      78: iload_1
      79: ishl
      80: ireturn
      81: iload_1
      82: bipush        32
      84: if_icmplt     94
      87: ldc           #210                // int 2147483647
      89: iload_1
      90: iconst_1
      91: iand
      92: iadd
      93: ireturn
      94: iload_1
      95: iconst_1
      96: iand
      97: ifne          106
     100: iconst_1
     101: iload_1
     102: ishl
     103: goto          109
     106: iconst_m1
     107: iload_1
     108: ishl
     109: ireturn
     110: iconst_1
     111: istore_2
     112: ldc           #210                // int 2147483647
     114: iload_0
     115: bipush        31
     117: iushr
     118: iload_1
     119: iconst_1
     120: iand
     121: iand
     122: iadd
     123: istore_3
     124: iload_1
     125: lookupswitch  { // 2
                     0: 152
                     1: 154
               default: 160
          }
     152: iload_2
     153: ireturn
     154: iload_2
     155: iload_0
     156: invokestatic  #212                // Method saturatedMultiply:(II)I
     159: ireturn
     160: iload_1
     161: iconst_1
     162: iand
     163: ifeq          172
     166: iload_2
     167: iload_0
     168: invokestatic  #212                // Method saturatedMultiply:(II)I
     171: istore_2
     172: iload_1
     173: iconst_1
     174: ishr
     175: istore_1
     176: iload_1
     177: ifle          124
     180: ldc           #199                // int -46340
     182: iload_0
     183: if_icmple     190
     186: iconst_1
     187: goto          191
     190: iconst_0
     191: iload_0
     192: ldc           #23                 // int 46340
     194: if_icmple     201
     197: iconst_1
     198: goto          202
     201: iconst_0
     202: ior
     203: ifeq          208
     206: iload_3
     207: ireturn
     208: iload_0
     209: iload_0
     210: imul
     211: istore_0
     212: goto          124

  public static int factorial(int);
    Code:
       0: ldc           #216                // String n
       2: iload_0
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: getstatic     #218                // Field factorials:[I
      11: arraylength
      12: if_icmpge     23
      15: getstatic     #218                // Field factorials:[I
      18: iload_0
      19: iaload
      20: goto          25
      23: ldc           #210                // int 2147483647
      25: ireturn

  public static int binomial(int, int);
    Code:
       0: ldc           #216                // String n
       2: iload_0
       3: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc           #220                // String k
       9: iload_1
      10: invokestatic  #121                // Method co/elastic/apm/agent/shaded/guava/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
      13: pop
      14: iload_1
      15: iload_0
      16: if_icmpgt     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #222                // String k (%s) > n (%s)
      26: iload_1
      27: iload_0
      28: invokestatic  #225                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(ZLjava/lang/String;II)V
      31: iload_1
      32: iload_0
      33: iconst_1
      34: ishr
      35: if_icmple     42
      38: iload_0
      39: iload_1
      40: isub
      41: istore_1
      42: iload_1
      43: getstatic     #227                // Field biggestBinomials:[I
      46: arraylength
      47: if_icmpge     59
      50: iload_0
      51: getstatic     #227                // Field biggestBinomials:[I
      54: iload_1
      55: iaload
      56: if_icmple     62
      59: ldc           #210                // int 2147483647
      61: ireturn
      62: iload_1
      63: lookupswitch  { // 2
                     0: 88
                     1: 90
               default: 92
          }
      88: iconst_1
      89: ireturn
      90: iload_0
      91: ireturn
      92: lconst_1
      93: lstore_2
      94: iconst_0
      95: istore        4
      97: iload         4
      99: iload_1
     100: if_icmpge     125
     103: lload_2
     104: iload_0
     105: iload         4
     107: isub
     108: i2l
     109: lmul
     110: lstore_2
     111: lload_2
     112: iload         4
     114: iconst_1
     115: iadd
     116: i2l
     117: ldiv
     118: lstore_2
     119: iinc          4, 1
     122: goto          97
     125: lload_2
     126: l2i
     127: ireturn

  public static int mean(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iand
       3: iload_0
       4: iload_1
       5: ixor
       6: iconst_1
       7: ishr
       8: iadd
       9: ireturn

  public static boolean isPrime(int);
    Code:
       0: iload_0
       1: i2l
       2: invokestatic  #235                // Method co/elastic/apm/agent/shaded/guava/common/math/LongMath.isPrime:(J)Z
       5: ireturn

  private co.elastic.apm.agent.shaded.guava.common.math.IntMath();
    Code:
       0: aload_0
       1: invokespecial #236                // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: bipush        33
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        9
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        9
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        9
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        8
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        8
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        8
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        7
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        7
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        7
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        6
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        6
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        6
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        6
      75: bastore
      76: dup
      77: bipush        13
      79: iconst_5
      80: bastore
      81: dup
      82: bipush        14
      84: iconst_5
      85: bastore
      86: dup
      87: bipush        15
      89: iconst_5
      90: bastore
      91: dup
      92: bipush        16
      94: iconst_4
      95: bastore
      96: dup
      97: bipush        17
      99: iconst_4
     100: bastore
     101: dup
     102: bipush        18
     104: iconst_4
     105: bastore
     106: dup
     107: bipush        19
     109: iconst_3
     110: bastore
     111: dup
     112: bipush        20
     114: iconst_3
     115: bastore
     116: dup
     117: bipush        21
     119: iconst_3
     120: bastore
     121: dup
     122: bipush        22
     124: iconst_3
     125: bastore
     126: dup
     127: bipush        23
     129: iconst_2
     130: bastore
     131: dup
     132: bipush        24
     134: iconst_2
     135: bastore
     136: dup
     137: bipush        25
     139: iconst_2
     140: bastore
     141: dup
     142: bipush        26
     144: iconst_1
     145: bastore
     146: dup
     147: bipush        27
     149: iconst_1
     150: bastore
     151: dup
     152: bipush        28
     154: iconst_1
     155: bastore
     156: dup
     157: bipush        29
     159: iconst_0
     160: bastore
     161: dup
     162: bipush        30
     164: iconst_0
     165: bastore
     166: dup
     167: bipush        31
     169: iconst_0
     170: bastore
     171: dup
     172: bipush        32
     174: iconst_0
     175: bastore
     176: putstatic     #115                // Field maxLog10ForLeadingZeros:[B
     179: bipush        10
     181: newarray       int
     183: dup
     184: iconst_0
     185: iconst_1
     186: iastore
     187: dup
     188: iconst_1
     189: bipush        10
     191: iastore
     192: dup
     193: iconst_2
     194: bipush        100
     196: iastore
     197: dup
     198: iconst_3
     199: sipush        1000
     202: iastore
     203: dup
     204: iconst_4
     205: sipush        10000
     208: iastore
     209: dup
     210: iconst_5
     211: ldc           #240                // int 100000
     213: iastore
     214: dup
     215: bipush        6
     217: ldc           #241                // int 1000000
     219: iastore
     220: dup
     221: bipush        7
     223: ldc           #242                // int 10000000
     225: iastore
     226: dup
     227: bipush        8
     229: ldc           #243                // int 100000000
     231: iastore
     232: dup
     233: bipush        9
     235: ldc           #244                // int 1000000000
     237: iastore
     238: putstatic     #110                // Field powersOf10:[I
     241: bipush        10
     243: newarray       int
     245: dup
     246: iconst_0
     247: iconst_3
     248: iastore
     249: dup
     250: iconst_1
     251: bipush        31
     253: iastore
     254: dup
     255: iconst_2
     256: sipush        316
     259: iastore
     260: dup
     261: iconst_3
     262: sipush        3162
     265: iastore
     266: dup
     267: iconst_4
     268: sipush        31622
     271: iastore
     272: dup
     273: iconst_5
     274: ldc           #245                // int 316227
     276: iastore
     277: dup
     278: bipush        6
     280: ldc           #246                // int 3162277
     282: iastore
     283: dup
     284: bipush        7
     286: ldc           #247                // int 31622776
     288: iastore
     289: dup
     290: bipush        8
     292: ldc           #248                // int 316227766
     294: iastore
     295: dup
     296: bipush        9
     298: ldc           #210                // int 2147483647
     300: iastore
     301: putstatic     #112                // Field halfPowersOf10:[I
     304: bipush        13
     306: newarray       int
     308: dup
     309: iconst_0
     310: iconst_1
     311: iastore
     312: dup
     313: iconst_1
     314: iconst_1
     315: iastore
     316: dup
     317: iconst_2
     318: iconst_2
     319: iastore
     320: dup
     321: iconst_3
     322: bipush        6
     324: iastore
     325: dup
     326: iconst_4
     327: bipush        24
     329: iastore
     330: dup
     331: iconst_5
     332: bipush        120
     334: iastore
     335: dup
     336: bipush        6
     338: sipush        720
     341: iastore
     342: dup
     343: bipush        7
     345: sipush        5040
     348: iastore
     349: dup
     350: bipush        8
     352: ldc           #249                // int 40320
     354: iastore
     355: dup
     356: bipush        9
     358: ldc           #250                // int 362880
     360: iastore
     361: dup
     362: bipush        10
     364: ldc           #251                // int 3628800
     366: iastore
     367: dup
     368: bipush        11
     370: ldc           #252                // int 39916800
     372: iastore
     373: dup
     374: bipush        12
     376: ldc           #253                // int 479001600
     378: iastore
     379: putstatic     #218                // Field factorials:[I
     382: bipush        17
     384: newarray       int
     386: dup
     387: iconst_0
     388: ldc           #210                // int 2147483647
     390: iastore
     391: dup
     392: iconst_1
     393: ldc           #210                // int 2147483647
     395: iastore
     396: dup
     397: iconst_2
     398: ldc           #254                // int 65536
     400: iastore
     401: dup
     402: iconst_3
     403: sipush        2345
     406: iastore
     407: dup
     408: iconst_4
     409: sipush        477
     412: iastore
     413: dup
     414: iconst_5
     415: sipush        193
     418: iastore
     419: dup
     420: bipush        6
     422: bipush        110
     424: iastore
     425: dup
     426: bipush        7
     428: bipush        75
     430: iastore
     431: dup
     432: bipush        8
     434: bipush        58
     436: iastore
     437: dup
     438: bipush        9
     440: bipush        49
     442: iastore
     443: dup
     444: bipush        10
     446: bipush        43
     448: iastore
     449: dup
     450: bipush        11
     452: bipush        39
     454: iastore
     455: dup
     456: bipush        12
     458: bipush        37
     460: iastore
     461: dup
     462: bipush        13
     464: bipush        35
     466: iastore
     467: dup
     468: bipush        14
     470: bipush        34
     472: iastore
     473: dup
     474: bipush        15
     476: bipush        34
     478: iastore
     479: dup
     480: bipush        16
     482: bipush        33
     484: iastore
     485: putstatic     #227                // Field biggestBinomials:[I
     488: return
}
