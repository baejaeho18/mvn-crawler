Compiled from "EventSink.java"
public interface co.elastic.apm.agent.shaded.lmax.disruptor.EventSink<E> {
  public abstract void publishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslator<E>);

  public abstract boolean tryPublishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslator<E>);

  public abstract <A> void publishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorOneArg<E, A>, A);

  public abstract <A> boolean tryPublishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorOneArg<E, A>, A);

  public abstract <A, B> void publishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A, B);

  public abstract <A, B> boolean tryPublishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A, B);

  public abstract <A, B, C> void publishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A, B, C);

  public abstract <A, B, C> boolean tryPublishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A, B, C);

  public abstract void publishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object...);

  public abstract boolean tryPublishEvent(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object...);

  public abstract void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslator<E>[]);

  public abstract void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslator<E>[], int, int);

  public abstract boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslator<E>[]);

  public abstract boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslator<E>[], int, int);

  public abstract <A> void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorOneArg<E, A>, A[]);

  public abstract <A> void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorOneArg<E, A>, int, int, A[]);

  public abstract <A> boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorOneArg<E, A>, A[]);

  public abstract <A> boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorOneArg<E, A>, int, int, A[]);

  public abstract <A, B> void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A[], B[]);

  public abstract <A, B> void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, int, int, A[], B[]);

  public abstract <A, B> boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, A[], B[]);

  public abstract <A, B> boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorTwoArg<E, A, B>, int, int, A[], B[]);

  public abstract <A, B, C> void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A[], B[], C[]);

  public abstract <A, B, C> void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, int, int, A[], B[], C[]);

  public abstract <A, B, C> boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, A[], B[], C[]);

  public abstract <A, B, C> boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorThreeArg<E, A, B, C>, int, int, A[], B[], C[]);

  public abstract void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object[]...);

  public abstract void publishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorVararg<E>, int, int, java.lang.Object[]...);

  public abstract boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorVararg<E>, java.lang.Object[]...);

  public abstract boolean tryPublishEvents(co.elastic.apm.agent.shaded.lmax.disruptor.EventTranslatorVararg<E>, int, int, java.lang.Object[]...);
}
