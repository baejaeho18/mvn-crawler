Compiled from "WorkerPool.java"
public final class co.elastic.apm.agent.shaded.lmax.disruptor.WorkerPool<T> {
  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final co.elastic.apm.agent.shaded.lmax.disruptor.Sequence workSequence;

  private final co.elastic.apm.agent.shaded.lmax.disruptor.RingBuffer<T> ringBuffer;

  private final co.elastic.apm.agent.shaded.lmax.disruptor.WorkProcessor<?>[] workProcessors;

  public co.elastic.apm.agent.shaded.lmax.disruptor.WorkerPool(co.elastic.apm.agent.shaded.lmax.disruptor.RingBuffer<T>, co.elastic.apm.agent.shaded.lmax.disruptor.SequenceBarrier, co.elastic.apm.agent.shaded.lmax.disruptor.ExceptionHandler<? super T>, co.elastic.apm.agent.shaded.lmax.disruptor.WorkHandler<? super T>...);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #29                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #31                 // class co/elastic/apm/agent/shaded/lmax/disruptor/Sequence
      20: dup
      21: ldc2_w        #32                 // long -1l
      24: invokespecial #36                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence."<init>":(J)V
      27: putfield      #38                 // Field workSequence:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      30: aload_0
      31: aload_1
      32: putfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      35: aload         4
      37: arraylength
      38: istore        5
      40: aload_0
      41: iload         5
      43: anewarray     #42                 // class co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor
      46: putfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      49: iconst_0
      50: istore        6
      52: iload         6
      54: iload         5
      56: if_icmpge     91
      59: aload_0
      60: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      63: iload         6
      65: new           #42                 // class co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor
      68: dup
      69: aload_1
      70: aload_2
      71: aload         4
      73: iload         6
      75: aaload
      76: aload_3
      77: aload_0
      78: getfield      #38                 // Field workSequence:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      81: invokespecial #55                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor."<init>":(Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;Lco/elastic/apm/agent/shaded/lmax/disruptor/SequenceBarrier;Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkHandler;Lco/elastic/apm/agent/shaded/lmax/disruptor/ExceptionHandler;Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;)V
      84: aastore
      85: iinc          6, 1
      88: goto          52
      91: return

  public co.elastic.apm.agent.shaded.lmax.disruptor.WorkerPool(co.elastic.apm.agent.shaded.lmax.disruptor.EventFactory<T>, co.elastic.apm.agent.shaded.lmax.disruptor.ExceptionHandler<? super T>, co.elastic.apm.agent.shaded.lmax.disruptor.WorkHandler<? super T>...);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #29                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #31                 // class co/elastic/apm/agent/shaded/lmax/disruptor/Sequence
      20: dup
      21: ldc2_w        #32                 // long -1l
      24: invokespecial #36                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence."<init>":(J)V
      27: putfield      #38                 // Field workSequence:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      30: aload_0
      31: aload_1
      32: sipush        1024
      35: new           #71                 // class co/elastic/apm/agent/shaded/lmax/disruptor/BlockingWaitStrategy
      38: dup
      39: invokespecial #72                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/BlockingWaitStrategy."<init>":()V
      42: invokestatic  #76                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer.createMultiProducer:(Lco/elastic/apm/agent/shaded/lmax/disruptor/EventFactory;ILco/elastic/apm/agent/shaded/lmax/disruptor/WaitStrategy;)Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      45: putfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      48: aload_0
      49: getfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      52: iconst_0
      53: anewarray     #31                 // class co/elastic/apm/agent/shaded/lmax/disruptor/Sequence
      56: invokevirtual #80                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer.newBarrier:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;)Lco/elastic/apm/agent/shaded/lmax/disruptor/SequenceBarrier;
      59: astore        4
      61: aload_3
      62: arraylength
      63: istore        5
      65: aload_0
      66: iload         5
      68: anewarray     #42                 // class co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor
      71: putfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      74: iconst_0
      75: istore        6
      77: iload         6
      79: iload         5
      81: if_icmpge     119
      84: aload_0
      85: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      88: iload         6
      90: new           #42                 // class co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor
      93: dup
      94: aload_0
      95: getfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      98: aload         4
     100: aload_3
     101: iload         6
     103: aaload
     104: aload_2
     105: aload_0
     106: getfield      #38                 // Field workSequence:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
     109: invokespecial #55                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor."<init>":(Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;Lco/elastic/apm/agent/shaded/lmax/disruptor/SequenceBarrier;Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkHandler;Lco/elastic/apm/agent/shaded/lmax/disruptor/ExceptionHandler;Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;)V
     112: aastore
     113: iinc          6, 1
     116: goto          77
     119: aload_0
     120: getfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
     123: aload_0
     124: invokevirtual #86                 // Method getWorkerSequences:()[Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
     127: invokevirtual #90                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer.addGatingSequences:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;)V
     130: return

  public co.elastic.apm.agent.shaded.lmax.disruptor.Sequence[] getWorkerSequences();
    Code:
       0: aload_0
       1: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
       4: arraylength
       5: iconst_1
       6: iadd
       7: anewarray     #31                 // class co/elastic/apm/agent/shaded/lmax/disruptor/Sequence
      10: astore_1
      11: iconst_0
      12: istore_2
      13: aload_0
      14: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      17: arraylength
      18: istore_3
      19: iload_2
      20: iload_3
      21: if_icmpge     42
      24: aload_1
      25: iload_2
      26: aload_0
      27: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      30: iload_2
      31: aaload
      32: invokevirtual #100                // Method co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor.getSequence:()Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      35: aastore
      36: iinc          2, 1
      39: goto          19
      42: aload_1
      43: aload_1
      44: arraylength
      45: iconst_1
      46: isub
      47: aload_0
      48: getfield      #38                 // Field workSequence:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      51: aastore
      52: aload_1
      53: areturn

  public co.elastic.apm.agent.shaded.lmax.disruptor.RingBuffer<T> start(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: getfield      #29                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #108                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifne          22
      12: new           #110                // class java/lang/IllegalStateException
      15: dup
      16: ldc           #112                // String WorkerPool has already been started and cannot be restarted until halted.
      18: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      26: invokevirtual #119                // Method co/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer.getCursor:()J
      29: lstore_2
      30: aload_0
      31: getfield      #38                 // Field workSequence:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      34: lload_2
      35: invokevirtual #122                // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.set:(J)V
      38: aload_0
      39: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      42: astore        4
      44: aload         4
      46: arraylength
      47: istore        5
      49: iconst_0
      50: istore        6
      52: iload         6
      54: iload         5
      56: if_icmpge     89
      59: aload         4
      61: iload         6
      63: aaload
      64: astore        7
      66: aload         7
      68: invokevirtual #100                // Method co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor.getSequence:()Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      71: lload_2
      72: invokevirtual #122                // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.set:(J)V
      75: aload_1
      76: aload         7
      78: invokeinterface #129,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      83: iinc          6, 1
      86: goto          52
      89: aload_0
      90: getfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
      93: areturn

  public void drainAndHalt();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method getWorkerSequences:()[Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
       4: astore_1
       5: aload_0
       6: getfield      #40                 // Field ringBuffer:Lco/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer;
       9: invokevirtual #119                // Method co/elastic/apm/agent/shaded/lmax/disruptor/RingBuffer.getCursor:()J
      12: aload_1
      13: invokestatic  #143                // Method co/elastic/apm/agent/shaded/lmax/disruptor/util/Util.getMinimumSequence:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;)J
      16: lcmp
      17: ifle          26
      20: invokestatic  #148                // Method java/lang/Thread.yield:()V
      23: goto          5
      26: aload_0
      27: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
      30: astore_2
      31: aload_2
      32: arraylength
      33: istore_3
      34: iconst_0
      35: istore        4
      37: iload         4
      39: iload_3
      40: if_icmpge     60
      43: aload_2
      44: iload         4
      46: aaload
      47: astore        5
      49: aload         5
      51: invokevirtual #151                // Method co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor.halt:()V
      54: iinc          4, 1
      57: goto          37
      60: aload_0
      61: getfield      #29                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      64: iconst_0
      65: invokevirtual #153                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      68: return

  public void halt();
    Code:
       0: aload_0
       1: getfield      #44                 // Field workProcessors:[Lco/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #151                // Method co/elastic/apm/agent/shaded/lmax/disruptor/WorkProcessor.halt:()V
      25: iinc          3, 1
      28: goto          10
      31: aload_0
      32: getfield      #29                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      35: iconst_0
      36: invokevirtual #153                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      39: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #29                 // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #159                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn
}
