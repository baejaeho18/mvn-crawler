Compiled from "IOUtils.java"
public class co.elastic.apm.agent.util.IOUtils {
  private static java.lang.ThreadLocal<java.nio.ByteBuffer> threadLocalByteBuffer;

  private static java.lang.ThreadLocal<java.nio.charset.CharsetDecoder> threadLocalCharsetDecoder;

  public co.elastic.apm.agent.util.IOUtils();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: return

  public static boolean readUtf8Stream(java.io.InputStream, java.nio.CharBuffer) throws java.io.IOException;
    Code:
       0: getstatic     #26                 // Field threadLocalByteBuffer:Ljava/lang/ThreadLocal;
       3: invokevirtual #32                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #34                 // class java/nio/ByteBuffer
       9: astore_2
      10: getstatic     #36                 // Field threadLocalCharsetDecoder:Ljava/lang/ThreadLocal;
      13: invokevirtual #32                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      16: checkcast     #38                 // class java/nio/charset/CharsetDecoder
      19: astore_3
      20: aload_2
      21: invokevirtual #42                 // Method java/nio/ByteBuffer.array:()[B
      24: astore        4
      26: aload_0
      27: aload         4
      29: invokevirtual #48                 // Method java/io/InputStream.read:([B)I
      32: istore        5
      34: iload         5
      36: iconst_m1
      37: if_icmpeq     121
      40: aload_2
      41: iload         5
      43: invokevirtual #58                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      46: pop
      47: aload_3
      48: aload_2
      49: aload_1
      50: iconst_1
      51: invokevirtual #62                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
      54: astore        6
      56: aload_2
      57: invokevirtual #66                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
      60: pop
      61: aload         6
      63: invokevirtual #72                 // Method java/nio/charset/CoderResult.isError:()Z
      66: ifeq          99
      69: aload_1
      70: invokevirtual #66                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
      73: pop
      74: iconst_0
      75: istore        7
      77: aload_1
      78: invokevirtual #75                 // Method java/nio/Buffer.flip:()Ljava/nio/Buffer;
      81: pop
      82: aload_2
      83: invokevirtual #66                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
      86: pop
      87: aload_3
      88: invokevirtual #79                 // Method java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
      91: pop
      92: aload_0
      93: invokevirtual #82                 // Method java/io/InputStream.close:()V
      96: iload         7
      98: ireturn
      99: aload         6
     101: invokevirtual #85                 // Method java/nio/charset/CoderResult.isOverflow:()Z
     104: ifeq          110
     107: goto          121
     110: aload_0
     111: aload         4
     113: invokevirtual #48                 // Method java/io/InputStream.read:([B)I
     116: istore        5
     118: goto          34
     121: aload_3
     122: aload_1
     123: invokevirtual #89                 // Method java/nio/charset/CharsetDecoder.flush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;
     126: pop
     127: iconst_1
     128: istore        5
     130: aload_1
     131: invokevirtual #75                 // Method java/nio/Buffer.flip:()Ljava/nio/Buffer;
     134: pop
     135: aload_2
     136: invokevirtual #66                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
     139: pop
     140: aload_3
     141: invokevirtual #79                 // Method java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
     144: pop
     145: aload_0
     146: invokevirtual #82                 // Method java/io/InputStream.close:()V
     149: iload         5
     151: ireturn
     152: astore        8
     154: aload_1
     155: invokevirtual #75                 // Method java/nio/Buffer.flip:()Ljava/nio/Buffer;
     158: pop
     159: aload_2
     160: invokevirtual #66                 // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
     163: pop
     164: aload_3
     165: invokevirtual #79                 // Method java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
     168: pop
     169: aload_0
     170: invokevirtual #82                 // Method java/io/InputStream.close:()V
     173: aload         8
     175: athrow
    Exception table:
       from    to  target type
          20    77   152   any
          99   130   152   any
         152   154   152   any

  static {};
    Code:
       0: new           #9                  // class co/elastic/apm/agent/util/IOUtils$1
       3: dup
       4: invokespecial #105                // Method co/elastic/apm/agent/util/IOUtils$1."<init>":()V
       7: putstatic     #26                 // Field threadLocalByteBuffer:Ljava/lang/ThreadLocal;
      10: new           #7                  // class co/elastic/apm/agent/util/IOUtils$2
      13: dup
      14: invokespecial #106                // Method co/elastic/apm/agent/util/IOUtils$2."<init>":()V
      17: putstatic     #36                 // Field threadLocalCharsetDecoder:Ljava/lang/ThreadLocal;
      20: return
}
