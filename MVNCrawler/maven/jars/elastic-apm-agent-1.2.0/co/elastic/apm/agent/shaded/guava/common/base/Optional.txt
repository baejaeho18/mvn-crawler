Compiled from "Optional.java"
public abstract class co.elastic.apm.agent.shaded.guava.common.base.Optional<T> implements java.io.Serializable {
  private static final long serialVersionUID;

  public static <T> co.elastic.apm.agent.shaded.guava.common.base.Optional<T> absent();
    Code:
       0: invokestatic  #24                 // Method co/elastic/apm/agent/shaded/guava/common/base/Absent.withType:()Lco/elastic/apm/agent/shaded/guava/common/base/Optional;
       3: areturn

  public static <T> co.elastic.apm.agent.shaded.guava.common.base.Optional<T> of(T);
    Code:
       0: new           #28                 // class co/elastic/apm/agent/shaded/guava/common/base/Present
       3: dup
       4: aload_0
       5: invokestatic  #34                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokespecial #38                 // Method co/elastic/apm/agent/shaded/guava/common/base/Present."<init>":(Ljava/lang/Object;)V
      11: areturn

  public static <T> co.elastic.apm.agent.shaded.guava.common.base.Optional<T> fromNullable(T);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: invokestatic  #45                 // Method absent:()Lco/elastic/apm/agent/shaded/guava/common/base/Optional;
       7: goto          18
      10: new           #28                 // class co/elastic/apm/agent/shaded/guava/common/base/Present
      13: dup
      14: aload_0
      15: invokespecial #38                 // Method co/elastic/apm/agent/shaded/guava/common/base/Present."<init>":(Ljava/lang/Object;)V
      18: areturn

  co.elastic.apm.agent.shaded.guava.common.base.Optional();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method java/lang/Object."<init>":()V
       4: return

  public abstract boolean isPresent();

  public abstract T get();

  public abstract T or(T);

  public abstract co.elastic.apm.agent.shaded.guava.common.base.Optional<T> or(co.elastic.apm.agent.shaded.guava.common.base.Optional<? extends T>);

  public abstract T or(co.elastic.apm.agent.shaded.guava.common.base.Supplier<? extends T>);

  public abstract T orNull();

  public abstract java.util.Set<T> asSet();

  public abstract <V> co.elastic.apm.agent.shaded.guava.common.base.Optional<V> transform(co.elastic.apm.agent.shaded.guava.common.base.Function<? super T, V>);

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public abstract java.lang.String toString();

  public static <T> java.lang.Iterable<T> presentInstances(java.lang.Iterable<? extends co.elastic.apm.agent.shaded.guava.common.base.Optional<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #13                 // class co/elastic/apm/agent/shaded/guava/common/base/Optional$1
       8: dup
       9: aload_0
      10: invokespecial #76                 // Method co/elastic/apm/agent/shaded/guava/common/base/Optional$1."<init>":(Ljava/lang/Iterable;)V
      13: areturn
}
