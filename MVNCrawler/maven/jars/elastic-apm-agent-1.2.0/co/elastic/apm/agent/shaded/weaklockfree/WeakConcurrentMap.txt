Compiled from "WeakConcurrentMap.java"
public class co.elastic.apm.agent.shaded.weaklockfree.WeakConcurrentMap<K, V> extends java.lang.ref.ReferenceQueue<K> implements java.lang.Runnable, java.lang.Iterable<java.util.Map$Entry<K, V>> {
  private static final java.util.concurrent.atomic.AtomicLong ID;

  final java.util.concurrent.ConcurrentMap<co.elastic.apm.agent.shaded.weaklockfree.WeakConcurrentMap$WeakKey<K>, V> target;

  private final java.lang.Thread thread;

  public co.elastic.apm.agent.shaded.weaklockfree.WeakConcurrentMap(boolean);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       4: aload_0
       5: new           #46                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #47                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      15: iload_1
      16: ifeq          88
      19: aload_0
      20: new           #51                 // class java/lang/Thread
      23: dup
      24: aload_0
      25: invokespecial #54                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      28: putfield      #56                 // Field thread:Ljava/lang/Thread;
      31: aload_0
      32: getfield      #56                 // Field thread:Ljava/lang/Thread;
      35: new           #58                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #61                 // String weak-ref-cleaner-
      44: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: getstatic     #67                 // Field ID:Ljava/util/concurrent/atomic/AtomicLong;
      50: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      53: invokevirtual #76                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      56: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokevirtual #84                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      62: aload_0
      63: getfield      #56                 // Field thread:Ljava/lang/Thread;
      66: iconst_1
      67: invokevirtual #88                 // Method java/lang/Thread.setPriority:(I)V
      70: aload_0
      71: getfield      #56                 // Field thread:Ljava/lang/Thread;
      74: iconst_1
      75: invokevirtual #91                 // Method java/lang/Thread.setDaemon:(Z)V
      78: aload_0
      79: getfield      #56                 // Field thread:Ljava/lang/Thread;
      82: invokevirtual #94                 // Method java/lang/Thread.start:()V
      85: goto          93
      88: aload_0
      89: aconst_null
      90: putfield      #56                 // Field thread:Ljava/lang/Thread;
      93: return

  public V get(K);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #103                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #104                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      16: new           #23                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$LatentKey
      19: dup
      20: aload_1
      21: invokespecial #107                // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$LatentKey."<init>":(Ljava/lang/Object;)V
      24: invokeinterface #111,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore_2
      30: aload_2
      31: ifnonnull     70
      34: aload_0
      35: aload_1
      36: invokevirtual #114                // Method defaultValue:(Ljava/lang/Object;)Ljava/lang/Object;
      39: astore_2
      40: aload_2
      41: ifnull        70
      44: aload_0
      45: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      48: new           #26                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$WeakKey
      51: dup
      52: aload_1
      53: aload_0
      54: invokespecial #117                // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$WeakKey."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      57: aload_2
      58: invokeinterface #121,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: astore_3
      64: aload_3
      65: ifnull        70
      68: aload_3
      69: astore_2
      70: aload_2
      71: areturn

  public boolean containsKey(K);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #103                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #104                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      16: new           #23                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$LatentKey
      19: dup
      20: aload_1
      21: invokespecial #107                // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$LatentKey."<init>":(Ljava/lang/Object;)V
      24: invokeinterface #133,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      29: ireturn

  public V put(K, V);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     16
       8: new           #103                // class java/lang/NullPointerException
      11: dup
      12: invokespecial #104                // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      20: new           #26                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$WeakKey
      23: dup
      24: aload_1
      25: aload_0
      26: invokespecial #117                // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$WeakKey."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      29: aload_2
      30: invokeinterface #136,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn

  public V remove(K);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #103                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #104                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      16: new           #23                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$LatentKey
      19: dup
      20: aload_1
      21: invokespecial #107                // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$LatentKey."<init>":(Ljava/lang/Object;)V
      24: invokeinterface #139,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #142,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  protected V defaultValue(K);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Thread getCleanerThread();
    Code:
       0: aload_0
       1: getfield      #56                 // Field thread:Ljava/lang/Thread;
       4: areturn

  public void expungeStaleEntries();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method poll:()Ljava/lang/ref/Reference;
       4: dup
       5: astore_1
       6: ifnull        23
       9: aload_0
      10: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: invokeinterface #139,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: goto          0
      23: return

  public int approximateSize();
    Code:
       0: aload_0
       1: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #159,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
       4: aload_0
       5: invokevirtual #164                // Method remove:()Ljava/lang/ref/Reference;
       8: invokeinterface #139,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: goto          0
      17: astore_1
      18: aload_0
      19: invokevirtual #165                // Method clear:()V
      22: return
    Exception table:
       from    to  target type
           0    17    17   Class java/lang/InterruptedException

  public java.util.Iterator<java.util.Map$Entry<K, V>> iterator();
    Code:
       0: new           #17                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$EntryIterator
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #49                 // Field target:Ljava/util/concurrent/ConcurrentMap;
       9: invokeinterface #173,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #177,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: aconst_null
      20: invokespecial #180                // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$EntryIterator."<init>":(Lco/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap;Ljava/util/Iterator;Lco/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$1;)V
      23: areturn

  static {};
    Code:
       0: new           #69                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: invokespecial #182                // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
       7: putstatic     #67                 // Field ID:Ljava/util/concurrent/atomic/AtomicLong;
      10: return
}
