Compiled from "SmoothRateLimiter.java"
abstract class co.elastic.apm.agent.shaded.guava.common.util.concurrent.SmoothRateLimiter extends co.elastic.apm.agent.shaded.guava.common.util.concurrent.RateLimiter {
  double storedPermits;

  double maxPermits;

  double stableIntervalMicros;

  private long nextFreeTicketMicros;

  private co.elastic.apm.agent.shaded.guava.common.util.concurrent.SmoothRateLimiter(co.elastic.apm.agent.shaded.guava.common.util.concurrent.RateLimiter$SleepingStopwatch);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method co/elastic/apm/agent/shaded/guava/common/util/concurrent/RateLimiter."<init>":(Lco/elastic/apm/agent/shaded/guava/common/util/concurrent/RateLimiter$SleepingStopwatch;)V
       5: aload_0
       6: lconst_0
       7: putfield      #29                 // Field nextFreeTicketMicros:J
      10: return

  final void doSetRate(double, long);
    Code:
       0: aload_0
       1: lload_3
       2: invokevirtual #39                 // Method resync:(J)V
       5: getstatic     #45                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       8: lconst_1
       9: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toMicros:(J)J
      12: l2d
      13: dload_1
      14: ddiv
      15: dstore        5
      17: aload_0
      18: dload         5
      20: putfield      #51                 // Field stableIntervalMicros:D
      23: aload_0
      24: dload_1
      25: dload         5
      27: invokevirtual #54                 // Method doSetRate:(DD)V
      30: return

  abstract void doSetRate(double, double);

  final double doGetRate();
    Code:
       0: getstatic     #45                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       3: lconst_1
       4: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toMicros:(J)J
       7: l2d
       8: aload_0
       9: getfield      #51                 // Field stableIntervalMicros:D
      12: ddiv
      13: dreturn

  final long queryEarliestAvailable(long);
    Code:
       0: aload_0
       1: getfield      #29                 // Field nextFreeTicketMicros:J
       4: lreturn

  final long reserveEarliestAvailable(int, long);
    Code:
       0: aload_0
       1: lload_2
       2: invokevirtual #39                 // Method resync:(J)V
       5: aload_0
       6: getfield      #29                 // Field nextFreeTicketMicros:J
       9: lstore        4
      11: iload_1
      12: i2d
      13: aload_0
      14: getfield      #63                 // Field storedPermits:D
      17: invokestatic  #69                 // Method java/lang/Math.min:(DD)D
      20: dstore        6
      22: iload_1
      23: i2d
      24: dload         6
      26: dsub
      27: dstore        8
      29: aload_0
      30: aload_0
      31: getfield      #63                 // Field storedPermits:D
      34: dload         6
      36: invokevirtual #73                 // Method storedPermitsToWaitTime:(DD)J
      39: dload         8
      41: aload_0
      42: getfield      #51                 // Field stableIntervalMicros:D
      45: dmul
      46: d2l
      47: ladd
      48: lstore        10
      50: aload_0
      51: aload_0
      52: getfield      #29                 // Field nextFreeTicketMicros:J
      55: lload         10
      57: invokestatic  #79                 // Method co/elastic/apm/agent/shaded/guava/common/math/LongMath.saturatedAdd:(JJ)J
      60: putfield      #29                 // Field nextFreeTicketMicros:J
      63: aload_0
      64: dup
      65: getfield      #63                 // Field storedPermits:D
      68: dload         6
      70: dsub
      71: putfield      #63                 // Field storedPermits:D
      74: lload         4
      76: lreturn

  abstract long storedPermitsToWaitTime(double, double);

  abstract double coolDownIntervalMicros();

  void resync(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #29                 // Field nextFreeTicketMicros:J
       5: lcmp
       6: ifle          44
       9: lload_1
      10: aload_0
      11: getfield      #29                 // Field nextFreeTicketMicros:J
      14: lsub
      15: l2d
      16: aload_0
      17: invokevirtual #88                 // Method coolDownIntervalMicros:()D
      20: ddiv
      21: dstore_3
      22: aload_0
      23: aload_0
      24: getfield      #90                 // Field maxPermits:D
      27: aload_0
      28: getfield      #63                 // Field storedPermits:D
      31: dload_3
      32: dadd
      33: invokestatic  #69                 // Method java/lang/Math.min:(DD)D
      36: putfield      #63                 // Field storedPermits:D
      39: aload_0
      40: lload_1
      41: putfield      #29                 // Field nextFreeTicketMicros:J
      44: return

  co.elastic.apm.agent.shaded.guava.common.util.concurrent.SmoothRateLimiter(co.elastic.apm.agent.shaded.guava.common.util.concurrent.RateLimiter$SleepingStopwatch, co.elastic.apm.agent.shaded.guava.common.util.concurrent.SmoothRateLimiter$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #93                 // Method "<init>":(Lco/elastic/apm/agent/shaded/guava/common/util/concurrent/RateLimiter$SleepingStopwatch;)V
       5: return
}
