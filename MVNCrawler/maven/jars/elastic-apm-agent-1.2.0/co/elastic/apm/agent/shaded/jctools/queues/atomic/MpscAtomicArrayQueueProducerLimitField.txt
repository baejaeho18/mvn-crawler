Compiled from "MpscAtomicArrayQueue.java"
abstract class co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField<E> extends co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueueMidPad<E> {
  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField> P_LIMIT_UPDATER;

  private volatile long producerLimit;

  co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/MpscAtomicArrayQueueMidPad."<init>":(I)V
       5: aload_0
       6: iload_1
       7: i2l
       8: putfield      #17                 // Field producerLimit:J
      11: return

  protected final long lvProducerLimit();
    Code:
       0: aload_0
       1: getfield      #17                 // Field producerLimit:J
       4: lreturn

  protected final void soProducerLimit(long);
    Code:
       0: getstatic     #28                 // Field P_LIMIT_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
       8: return

  static {};
    Code:
       0: ldc           #2                  // class co/elastic/apm/agent/shaded/jctools/queues/atomic/MpscAtomicArrayQueueProducerLimitField
       2: ldc           #38                 // String producerLimit
       4: invokestatic  #42                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #28                 // Field P_LIMIT_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
