Compiled from "Striped.java"
final class co.elastic.apm.agent.shaded.guava.common.util.concurrent.Striped$WeakSafeCondition extends co.elastic.apm.agent.shaded.guava.common.util.concurrent.ForwardingCondition {
  private final java.util.concurrent.locks.Condition delegate;

  private final co.elastic.apm.agent.shaded.guava.common.util.concurrent.Striped$WeakSafeReadWriteLock strongReference;

  co.elastic.apm.agent.shaded.guava.common.util.concurrent.Striped$WeakSafeCondition(java.util.concurrent.locks.Condition, co.elastic.apm.agent.shaded.guava.common.util.concurrent.Striped$WeakSafeReadWriteLock);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method co/elastic/apm/agent/shaded/guava/common/util/concurrent/ForwardingCondition."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #22                 // Field delegate:Ljava/util/concurrent/locks/Condition;
       9: aload_0
      10: aload_2
      11: putfield      #24                 // Field strongReference:Lco/elastic/apm/agent/shaded/guava/common/util/concurrent/Striped$WeakSafeReadWriteLock;
      14: return

  java.util.concurrent.locks.Condition delegate();
    Code:
       0: aload_0
       1: getfield      #22                 // Field delegate:Ljava/util/concurrent/locks/Condition;
       4: areturn
}
