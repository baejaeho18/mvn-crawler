Compiled from "MpscAtomicArrayQueue.java"
public class co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueue<E> extends co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueueL3Pad<E> {
  public co.elastic.apm.agent.shaded.jctools.queues.atomic.MpscAtomicArrayQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #24                 // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/MpscAtomicArrayQueueL3Pad."<init>":(I)V
       5: return

  public boolean offerIfBelowThreshold(E, int);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #33                 // class java/lang/NullPointerException
       8: dup
       9: invokespecial #36                 // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #39                 // Field mask:I
      17: istore_3
      18: iload_3
      19: iconst_1
      20: iadd
      21: i2l
      22: lstore        4
      24: aload_0
      25: invokevirtual #43                 // Method lvProducerLimit:()J
      28: lstore        6
      30: aload_0
      31: invokevirtual #46                 // Method lvProducerIndex:()J
      34: lstore        8
      36: lload         6
      38: lload         8
      40: lsub
      41: lstore        10
      43: lload         4
      45: lload         10
      47: lsub
      48: lstore        12
      50: lload         12
      52: iload_2
      53: i2l
      54: lcmp
      55: iflt          94
      58: aload_0
      59: invokevirtual #49                 // Method lvConsumerIndex:()J
      62: lstore        14
      64: lload         8
      66: lload         14
      68: lsub
      69: lstore        12
      71: lload         12
      73: iload_2
      74: i2l
      75: lcmp
      76: iflt          81
      79: iconst_0
      80: ireturn
      81: lload         14
      83: lload         4
      85: ladd
      86: lstore        6
      88: aload_0
      89: lload         6
      91: invokevirtual #55                 // Method soProducerLimit:(J)V
      94: aload_0
      95: lload         8
      97: lload         8
      99: lconst_1
     100: ladd
     101: invokevirtual #59                 // Method casProducerIndex:(JJ)Z
     104: ifeq          30
     107: aload_0
     108: lload         8
     110: iload_3
     111: invokevirtual #63                 // Method calcElementOffset:(JI)I
     114: istore        10
     116: aload_0
     117: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     120: iload         10
     122: aload_1
     123: invokestatic  #71                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     126: iconst_1
     127: ireturn

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #33                 // class java/lang/NullPointerException
       8: dup
       9: invokespecial #36                 // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #39                 // Field mask:I
      17: istore_2
      18: aload_0
      19: invokevirtual #43                 // Method lvProducerLimit:()J
      22: lstore_3
      23: aload_0
      24: invokevirtual #46                 // Method lvProducerIndex:()J
      27: lstore        5
      29: lload         5
      31: lload_3
      32: lcmp
      33: iflt          64
      36: aload_0
      37: invokevirtual #49                 // Method lvConsumerIndex:()J
      40: lstore        7
      42: lload         7
      44: iload_2
      45: i2l
      46: ladd
      47: lconst_1
      48: ladd
      49: lstore_3
      50: lload         5
      52: lload_3
      53: lcmp
      54: iflt          59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: lload_3
      61: invokevirtual #55                 // Method soProducerLimit:(J)V
      64: aload_0
      65: lload         5
      67: lload         5
      69: lconst_1
      70: ladd
      71: invokevirtual #59                 // Method casProducerIndex:(JJ)Z
      74: ifeq          23
      77: aload_0
      78: lload         5
      80: iload_2
      81: invokevirtual #63                 // Method calcElementOffset:(JI)I
      84: istore        7
      86: aload_0
      87: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      90: iload         7
      92: aload_1
      93: invokestatic  #71                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      96: iconst_1
      97: ireturn

  public final int failFastOffer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #33                 // class java/lang/NullPointerException
       8: dup
       9: invokespecial #36                 // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #39                 // Field mask:I
      17: istore_2
      18: iload_2
      19: iconst_1
      20: iadd
      21: i2l
      22: lstore_3
      23: aload_0
      24: invokevirtual #46                 // Method lvProducerIndex:()J
      27: lstore        5
      29: aload_0
      30: invokevirtual #43                 // Method lvProducerLimit:()J
      33: lstore        7
      35: lload         5
      37: lload         7
      39: lcmp
      40: iflt          71
      43: aload_0
      44: invokevirtual #49                 // Method lvConsumerIndex:()J
      47: lstore        9
      49: lload         9
      51: lload_3
      52: ladd
      53: lstore        7
      55: lload         5
      57: lload         7
      59: lcmp
      60: iflt          65
      63: iconst_1
      64: ireturn
      65: aload_0
      66: lload         7
      68: invokevirtual #55                 // Method soProducerLimit:(J)V
      71: aload_0
      72: lload         5
      74: lload         5
      76: lconst_1
      77: ladd
      78: invokevirtual #59                 // Method casProducerIndex:(JJ)Z
      81: ifne          86
      84: iconst_m1
      85: ireturn
      86: aload_0
      87: lload         5
      89: iload_2
      90: invokevirtual #63                 // Method calcElementOffset:(JI)I
      93: istore        9
      95: aload_0
      96: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      99: iload         9
     101: aload_1
     102: invokestatic  #71                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     105: iconst_0
     106: ireturn

  public E poll();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method lpConsumerIndex:()J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: invokevirtual #94                 // Method calcElementOffset:(J)I
      10: istore_3
      11: aload_0
      12: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      15: astore        4
      17: aload         4
      19: iload_3
      20: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      23: astore        5
      25: aconst_null
      26: aload         5
      28: if_acmpne     58
      31: lload_1
      32: aload_0
      33: invokevirtual #46                 // Method lvProducerIndex:()J
      36: lcmp
      37: ifeq          56
      40: aload         4
      42: iload_3
      43: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      46: astore        5
      48: aload         5
      50: ifnull        40
      53: goto          58
      56: aconst_null
      57: areturn
      58: aload         4
      60: iload_3
      61: aconst_null
      62: invokestatic  #103                // Method spElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      65: aload_0
      66: lload_1
      67: lconst_1
      68: ladd
      69: invokevirtual #106                // Method soConsumerIndex:(J)V
      72: aload         5
      74: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokevirtual #91                 // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokevirtual #94                 // Method calcElementOffset:(J)I
      15: istore        4
      17: aload_1
      18: iload         4
      20: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      23: astore        5
      25: aconst_null
      26: aload         5
      28: if_acmpne     58
      31: lload_2
      32: aload_0
      33: invokevirtual #46                 // Method lvProducerIndex:()J
      36: lcmp
      37: ifeq          56
      40: aload_1
      41: iload         4
      43: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      46: astore        5
      48: aload         5
      50: ifnull        40
      53: goto          58
      56: aconst_null
      57: areturn
      58: aload         5
      60: areturn

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #111                // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: invokevirtual #91                 // Method lpConsumerIndex:()J
       9: lstore_2
      10: aload_0
      11: lload_2
      12: invokevirtual #94                 // Method calcElementOffset:(J)I
      15: istore        4
      17: aload_1
      18: iload         4
      20: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      23: astore        5
      25: aconst_null
      26: aload         5
      28: if_acmpne     33
      31: aconst_null
      32: areturn
      33: aload_1
      34: iload         4
      36: aconst_null
      37: invokestatic  #103                // Method spElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      40: aload_0
      41: lload_2
      42: lconst_1
      43: ladd
      44: invokevirtual #106                // Method soConsumerIndex:(J)V
      47: aload         5
      49: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: getfield      #39                 // Field mask:I
       9: istore_2
      10: aload_0
      11: invokevirtual #91                 // Method lpConsumerIndex:()J
      14: lstore_3
      15: aload_1
      16: aload_0
      17: lload_3
      18: iload_2
      19: invokevirtual #63                 // Method calcElementOffset:(JI)I
      22: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      25: areturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #118                // Method capacity:()I
       6: invokevirtual #121                // Method drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;I)I
       9: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: invokevirtual #118                // Method capacity:()I
       6: istore        4
       8: aload_0
       9: aload_1
      10: getstatic     #131                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      13: invokevirtual #134                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      16: istore        5
      18: iload         5
      20: ifne          26
      23: lload_2
      24: l2i
      25: ireturn
      26: lload_2
      27: iload         5
      29: i2l
      30: ladd
      31: lstore_2
      32: lload_2
      33: iload         4
      35: i2l
      36: lcmp
      37: ifle          8
      40: lload_2
      41: l2i
      42: ireturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_3
       5: aload_0
       6: getfield      #39                 // Field mask:I
       9: istore        4
      11: aload_0
      12: invokevirtual #91                 // Method lpConsumerIndex:()J
      15: lstore        5
      17: iconst_0
      18: istore        7
      20: iload         7
      22: iload_2
      23: if_icmpge     90
      26: lload         5
      28: iload         7
      30: i2l
      31: ladd
      32: lstore        8
      34: aload_0
      35: lload         8
      37: iload         4
      39: invokevirtual #63                 // Method calcElementOffset:(JI)I
      42: istore        10
      44: aload_3
      45: iload         10
      47: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      50: astore        11
      52: aconst_null
      53: aload         11
      55: if_acmpne     61
      58: iload         7
      60: ireturn
      61: aload_3
      62: iload         10
      64: aconst_null
      65: invokestatic  #103                // Method spElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      68: aload_0
      69: lload         8
      71: lconst_1
      72: ladd
      73: invokevirtual #106                // Method soConsumerIndex:(J)V
      76: aload_1
      77: aload         11
      79: invokeinterface #143,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
      84: iinc          7, 1
      87: goto          20
      90: iload_2
      91: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field mask:I
       4: istore_3
       5: iload_3
       6: iconst_1
       7: iadd
       8: i2l
       9: lstore        4
      11: aload_0
      12: invokevirtual #43                 // Method lvProducerLimit:()J
      15: lstore        6
      17: iconst_0
      18: istore        10
      20: aload_0
      21: invokevirtual #46                 // Method lvProducerIndex:()J
      24: lstore        8
      26: lload         6
      28: lload         8
      30: lsub
      31: lstore        11
      33: lload         11
      35: lconst_0
      36: lcmp
      37: ifgt          75
      40: aload_0
      41: invokevirtual #49                 // Method lvConsumerIndex:()J
      44: lstore        13
      46: lload         13
      48: lload         4
      50: ladd
      51: lstore        6
      53: lload         6
      55: lload         8
      57: lsub
      58: lstore        11
      60: lload         11
      62: lconst_0
      63: lcmp
      64: ifgt          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: lload         6
      72: invokevirtual #55                 // Method soProducerLimit:(J)V
      75: lload         11
      77: l2i
      78: iload_2
      79: invokestatic  #152                // Method java/lang/Math.min:(II)I
      82: istore        10
      84: aload_0
      85: lload         8
      87: lload         8
      89: iload         10
      91: i2l
      92: ladd
      93: invokevirtual #59                 // Method casProducerIndex:(JJ)Z
      96: ifeq          20
      99: aload_0
     100: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     103: astore        11
     105: iconst_0
     106: istore        12
     108: iload         12
     110: iload         10
     112: if_icmpge     147
     115: aload_0
     116: lload         8
     118: iload         12
     120: i2l
     121: ladd
     122: iload_3
     123: invokevirtual #63                 // Method calcElementOffset:(JI)I
     126: istore        13
     128: aload         11
     130: iload         13
     132: aload_1
     133: invokeinterface #155,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     138: invokestatic  #71                 // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
     141: iinc          12, 1
     144: goto          108
     147: iload         10
     149: ireturn

  public void drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: getfield      #67                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore        4
       6: aload_0
       7: getfield      #39                 // Field mask:I
      10: istore        5
      12: aload_0
      13: invokevirtual #91                 // Method lpConsumerIndex:()J
      16: lstore        6
      18: iconst_0
      19: istore        8
      21: aload_3
      22: invokeinterface #161,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      27: ifeq          119
      30: iconst_0
      31: istore        9
      33: iload         9
      35: sipush        4096
      38: if_icmpge     116
      41: aload_0
      42: lload         6
      44: iload         5
      46: invokevirtual #63                 // Method calcElementOffset:(JI)I
      49: istore        10
      51: aload         4
      53: iload         10
      55: invokestatic  #98                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      58: astore        11
      60: aconst_null
      61: aload         11
      63: if_acmpne     79
      66: aload_2
      67: iload         8
      69: invokeinterface #165,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      74: istore        8
      76: goto          110
      79: lload         6
      81: lconst_1
      82: ladd
      83: lstore        6
      85: iconst_0
      86: istore        8
      88: aload         4
      90: iload         10
      92: aconst_null
      93: invokestatic  #103                // Method spElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      96: aload_0
      97: lload         6
      99: invokevirtual #106                // Method soConsumerIndex:(J)V
     102: aload_1
     103: aload         11
     105: invokeinterface #143,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
     110: iinc          9, 1
     113: goto          33
     116: goto          21
     119: return

  public void fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: invokeinterface #161,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       9: ifeq          42
      12: aload_0
      13: aload_1
      14: getstatic     #131                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      17: invokevirtual #134                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      20: ifne          36
      23: aload_2
      24: iload         4
      26: invokeinterface #165,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      31: istore        4
      33: goto          3
      36: iconst_0
      37: istore        4
      39: goto          3
      42: return

  public int weakOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #176                // Method failFastOffer:(Ljava/lang/Object;)I
       5: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #179                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/MpscAtomicArrayQueueL3Pad.clear:()V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #183                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/MpscAtomicArrayQueueL3Pad.toString:()Ljava/lang/String;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokespecial #187                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/MpscAtomicArrayQueueL3Pad.iterator:()Ljava/util/Iterator;
       4: areturn
}
