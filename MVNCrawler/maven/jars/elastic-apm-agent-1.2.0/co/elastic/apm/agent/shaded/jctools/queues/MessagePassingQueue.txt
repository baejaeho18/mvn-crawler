Compiled from "MessagePassingQueue.java"
public interface co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue<T> {
  public static final int UNBOUNDED_CAPACITY;

  public abstract boolean offer(T);

  public abstract T poll();

  public abstract T peek();

  public abstract int size();

  public abstract void clear();

  public abstract boolean isEmpty();

  public abstract int capacity();

  public abstract boolean relaxedOffer(T);

  public abstract T relaxedPoll();

  public abstract T relaxedPeek();

  public abstract int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<T>);

  public abstract int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<T>);

  public abstract int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<T>, int);

  public abstract int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<T>, int);

  public abstract void drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<T>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);

  public abstract void fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<T>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
}
