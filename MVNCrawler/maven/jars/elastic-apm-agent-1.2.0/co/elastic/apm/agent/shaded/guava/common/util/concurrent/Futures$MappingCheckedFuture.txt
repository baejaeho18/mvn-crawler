Compiled from "Futures.java"
class co.elastic.apm.agent.shaded.guava.common.util.concurrent.Futures$MappingCheckedFuture<V, X extends java.lang.Exception> extends co.elastic.apm.agent.shaded.guava.common.util.concurrent.AbstractCheckedFuture<V, X> {
  final co.elastic.apm.agent.shaded.guava.common.base.Function<? super java.lang.Exception, X> mapper;

  co.elastic.apm.agent.shaded.guava.common.util.concurrent.Futures$MappingCheckedFuture(co.elastic.apm.agent.shaded.guava.common.util.concurrent.ListenableFuture<V>, co.elastic.apm.agent.shaded.guava.common.base.Function<? super java.lang.Exception, X>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method co/elastic/apm/agent/shaded/guava/common/util/concurrent/AbstractCheckedFuture."<init>":(Lco/elastic/apm/agent/shaded/guava/common/util/concurrent/ListenableFuture;)V
       5: aload_0
       6: aload_2
       7: invokestatic  #24                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #26                 // class co/elastic/apm/agent/shaded/guava/common/base/Function
      13: putfield      #28                 // Field mapper:Lco/elastic/apm/agent/shaded/guava/common/base/Function;
      16: return

  protected X mapException(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #28                 // Field mapper:Lco/elastic/apm/agent/shaded/guava/common/base/Function;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod co/elastic/apm/agent/shaded/guava/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #41                 // class java/lang/Exception
      13: areturn
}
