Compiled from "LinearTransformation.java"
public abstract class co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation {
  public co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  public static co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation$LinearTransformationBuilder mapping(double, double);
    Code:
       0: dload_0
       1: invokestatic  #35                 // Method co/elastic/apm/agent/shaded/guava/common/math/DoubleUtils.isFinite:(D)Z
       4: ifeq          18
       7: dload_2
       8: invokestatic  #35                 // Method co/elastic/apm/agent/shaded/guava/common/math/DoubleUtils.isFinite:(D)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #41                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(Z)V
      22: new           #20                 // class co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$LinearTransformationBuilder
      25: dup
      26: dload_0
      27: dload_2
      28: aconst_null
      29: invokespecial #44                 // Method co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$LinearTransformationBuilder."<init>":(DDLco/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$1;)V
      32: areturn

  public static co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation vertical(double);
    Code:
       0: dload_0
       1: invokestatic  #35                 // Method co/elastic/apm/agent/shaded/guava/common/math/DoubleUtils.isFinite:(D)Z
       4: invokestatic  #41                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(Z)V
       7: new           #14                 // class co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$VerticalLinearTransformation
      10: dup
      11: dload_0
      12: invokespecial #52                 // Method co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$VerticalLinearTransformation."<init>":(D)V
      15: areturn

  public static co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation horizontal(double);
    Code:
       0: dload_0
       1: invokestatic  #35                 // Method co/elastic/apm/agent/shaded/guava/common/math/DoubleUtils.isFinite:(D)Z
       4: invokestatic  #41                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(Z)V
       7: dconst_0
       8: dstore_2
       9: new           #17                 // class co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$RegularLinearTransformation
      12: dup
      13: dload_2
      14: dload_0
      15: invokespecial #57                 // Method co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$RegularLinearTransformation."<init>":(DD)V
      18: areturn

  public static co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation forNaN();
    Code:
       0: getstatic     #65                 // Field co/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$NaNLinearTransformation.INSTANCE:Lco/elastic/apm/agent/shaded/guava/common/math/LinearTransformation$NaNLinearTransformation;
       3: areturn

  public abstract boolean isVertical();

  public abstract boolean isHorizontal();

  public abstract double slope();

  public abstract double transform(double);

  public abstract co.elastic.apm.agent.shaded.guava.common.math.LinearTransformation inverse();
}
