Compiled from "BaseMpscLinkedAtomicArrayQueue.java"
abstract class co.elastic.apm.agent.shaded.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields<E> extends co.elastic.apm.agent.shaded.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad3<E> {
  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<co.elastic.apm.agent.shaded.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields> P_LIMIT_UPDATER;

  private volatile long producerLimit;

  protected long producerMask;

  protected java.util.concurrent.atomic.AtomicReferenceArray<E> producerBuffer;

  co.elastic.apm.agent.shaded.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueuePad3."<init>":()V
       4: return

  final long lvProducerLimit();
    Code:
       0: aload_0
       1: getfield      #26                 // Field producerLimit:J
       4: lreturn

  final boolean casProducerLimit(long, long);
    Code:
       0: getstatic     #30                 // Field P_LIMIT_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: lload_3
       6: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
       9: ireturn

  final void soProducerLimit(long);
    Code:
       0: getstatic     #30                 // Field P_LIMIT_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet:(Ljava/lang/Object;J)V
       8: return

  static {};
    Code:
       0: ldc           #2                  // class co/elastic/apm/agent/shaded/jctools/queues/atomic/BaseMpscLinkedAtomicArrayQueueColdProducerFields
       2: ldc           #46                 // String producerLimit
       4: invokestatic  #50                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #30                 // Field P_LIMIT_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
