Compiled from "MultiInputStream.java"
final class co.elastic.apm.agent.shaded.guava.common.io.MultiInputStream extends java.io.InputStream {
  private java.util.Iterator<? extends co.elastic.apm.agent.shaded.guava.common.io.ByteSource> it;

  private java.io.InputStream in;

  public co.elastic.apm.agent.shaded.guava.common.io.MultiInputStream(java.util.Iterator<? extends co.elastic.apm.agent.shaded.guava.common.io.ByteSource>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #25                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #27                 // class java/util/Iterator
      12: putfield      #29                 // Field it:Ljava/util/Iterator;
      15: aload_0
      16: invokespecial #32                 // Method advance:()V
      19: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field in:Ljava/io/InputStream;
       4: ifnull        30
       7: aload_0
       8: getfield      #37                 // Field in:Ljava/io/InputStream;
      11: invokevirtual #39                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #37                 // Field in:Ljava/io/InputStream;
      19: goto          30
      22: astore_1
      23: aload_0
      24: aconst_null
      25: putfield      #37                 // Field in:Ljava/io/InputStream;
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    14    22   any

  private void advance() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method close:()V
       4: aload_0
       5: getfield      #29                 // Field it:Ljava/util/Iterator;
       8: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_0
      17: aload_0
      18: getfield      #29                 // Field it:Ljava/util/Iterator;
      21: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #52                 // class co/elastic/apm/agent/shaded/guava/common/io/ByteSource
      29: invokevirtual #56                 // Method co/elastic/apm/agent/shaded/guava/common/io/ByteSource.openStream:()Ljava/io/InputStream;
      32: putfield      #37                 // Field in:Ljava/io/InputStream;
      35: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field in:Ljava/io/InputStream;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #37                 // Field in:Ljava/io/InputStream;
      13: invokevirtual #60                 // Method java/io/InputStream.available:()I
      16: ireturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field in:Ljava/io/InputStream;
       4: ifnull        29
       7: aload_0
       8: getfield      #37                 // Field in:Ljava/io/InputStream;
      11: invokevirtual #64                 // Method java/io/InputStream.read:()I
      14: istore_1
      15: iload_1
      16: iconst_m1
      17: if_icmpeq     22
      20: iload_1
      21: ireturn
      22: aload_0
      23: invokespecial #32                 // Method advance:()V
      26: goto          0
      29: iconst_m1
      30: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field in:Ljava/io/InputStream;
       4: ifnull        35
       7: aload_0
       8: getfield      #37                 // Field in:Ljava/io/InputStream;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #69                 // Method java/io/InputStream.read:([BII)I
      17: istore        4
      19: iload         4
      21: iconst_m1
      22: if_icmpeq     28
      25: iload         4
      27: ireturn
      28: aload_0
      29: invokespecial #32                 // Method advance:()V
      32: goto          0
      35: iconst_m1
      36: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field in:Ljava/io/InputStream;
       4: ifnull        13
       7: lload_1
       8: lconst_0
       9: lcmp
      10: ifgt          15
      13: lconst_0
      14: lreturn
      15: aload_0
      16: getfield      #37                 // Field in:Ljava/io/InputStream;
      19: lload_1
      20: invokevirtual #77                 // Method java/io/InputStream.skip:(J)J
      23: lstore_3
      24: lload_3
      25: lconst_0
      26: lcmp
      27: ifeq          32
      30: lload_3
      31: lreturn
      32: aload_0
      33: invokevirtual #78                 // Method read:()I
      36: iconst_m1
      37: if_icmpne     42
      40: lconst_0
      41: lreturn
      42: lconst_1
      43: aload_0
      44: getfield      #37                 // Field in:Ljava/io/InputStream;
      47: lload_1
      48: lconst_1
      49: lsub
      50: invokevirtual #77                 // Method java/io/InputStream.skip:(J)J
      53: ladd
      54: lreturn
}
