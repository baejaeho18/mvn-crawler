Compiled from "MethodRegistry.java"
public interface co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodRegistry {
  public abstract co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodRegistry prepend(co.elastic.apm.agent.shaded.bytebuddy.matcher.LatentMatcher<? super co.elastic.apm.agent.shaded.bytebuddy.description.method.MethodDescription>, co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodRegistry$Handler, co.elastic.apm.agent.shaded.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory, co.elastic.apm.agent.shaded.bytebuddy.dynamic.Transformer<co.elastic.apm.agent.shaded.bytebuddy.description.method.MethodDescription>);

  public abstract co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodRegistry append(co.elastic.apm.agent.shaded.bytebuddy.matcher.LatentMatcher<? super co.elastic.apm.agent.shaded.bytebuddy.description.method.MethodDescription>, co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodRegistry$Handler, co.elastic.apm.agent.shaded.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory, co.elastic.apm.agent.shaded.bytebuddy.dynamic.Transformer<co.elastic.apm.agent.shaded.bytebuddy.description.method.MethodDescription>);

  public abstract co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodRegistry$Prepared prepare(co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.InstrumentedType, co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.MethodGraph$Compiler, co.elastic.apm.agent.shaded.bytebuddy.dynamic.scaffold.TypeValidation, co.elastic.apm.agent.shaded.bytebuddy.matcher.LatentMatcher<? super co.elastic.apm.agent.shaded.bytebuddy.description.method.MethodDescription>);
}
