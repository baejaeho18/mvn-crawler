Compiled from "WeakKeySoftValueLoadingCache.java"
public class co.elastic.apm.agent.cache.WeakKeySoftValueLoadingCache<K, V> {
  private static final co.elastic.apm.agent.shaded.slf4j.Logger logger;

  private final co.elastic.apm.agent.shaded.weaklockfree.WeakConcurrentMap<K, co.elastic.apm.agent.cache.WeakKeySoftValueLoadingCache$CacheValue<K, V>> cache;

  private final co.elastic.apm.agent.cache.WeakKeySoftValueLoadingCache$ValueSupplier<K, V> valueSupplier;

  public co.elastic.apm.agent.cache.WeakKeySoftValueLoadingCache(co.elastic.apm.agent.cache.WeakKeySoftValueLoadingCache$ValueSupplier<K, V>);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #16                 // class co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$WithInlinedExpunction
       8: dup
       9: invokespecial #33                 // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap$WithInlinedExpunction."<init>":()V
      12: putfield      #35                 // Field cache:Lco/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #37                 // Field valueSupplier:Lco/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$ValueSupplier;
      20: return

  public V get(K);
    Code:
       0: aload_0
       1: getfield      #35                 // Field cache:Lco/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap;
       4: aload_1
       5: invokevirtual #45                 // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #10                 // class co/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$CacheValue
      11: astore_2
      12: aload_2
      13: ifnull        22
      16: aload_2
      17: aload_1
      18: invokevirtual #46                 // Method co/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$CacheValue.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn
      22: new           #10                 // class co/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$CacheValue
      25: dup
      26: aload_1
      27: aload_0
      28: getfield      #37                 // Field valueSupplier:Lco/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$ValueSupplier;
      31: aconst_null
      32: invokespecial #49                 // Method co/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$CacheValue."<init>":(Ljava/lang/Object;Lco/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$ValueSupplier;Lco/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$1;)V
      35: astore_3
      36: aload_0
      37: getfield      #35                 // Field cache:Lco/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap;
      40: aload_1
      41: aload_3
      42: invokevirtual #53                 // Method co/elastic/apm/agent/shaded/weaklockfree/WeakConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: aload_1
      48: invokevirtual #46                 // Method co/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache$CacheValue.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: areturn

  static co.elastic.apm.agent.shaded.slf4j.Logger access$100();
    Code:
       0: getstatic     #64                 // Field logger:Lco/elastic/apm/agent/shaded/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #2                  // class co/elastic/apm/agent/cache/WeakKeySoftValueLoadingCache
       2: invokestatic  #71                 // Method co/elastic/apm/agent/shaded/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lco/elastic/apm/agent/shaded/slf4j/Logger;
       5: putstatic     #64                 // Field logger:Lco/elastic/apm/agent/shaded/slf4j/Logger;
       8: return
}
