Compiled from "BaseSpscLinkedArrayQueue.java"
abstract class co.elastic.apm.agent.shaded.jctools.queues.BaseSpscLinkedArrayQueue<E> extends co.elastic.apm.agent.shaded.jctools.queues.BaseSpscLinkedArrayQueueProducerColdFields<E> implements co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue<E>, co.elastic.apm.agent.shaded.jctools.queues.QueueProgressIndicators {
  private static final java.lang.Object JUMP;

  co.elastic.apm.agent.shaded.jctools.queues.BaseSpscLinkedArrayQueue();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method co/elastic/apm/agent/shaded/jctools/queues/BaseSpscLinkedArrayQueueProducerColdFields."<init>":()V
       4: return

  public final java.util.Iterator<E> iterator();
    Code:
       0: new           #40                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #41                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final int size();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method co/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil.size:(Lco/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil$IndexedQueue;)I
       4: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #51                 // Method co/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil.isEmpty:(Lco/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil$IndexedQueue;)Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #64                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public long currentProducerIndex();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method lvProducerIndex:()J
       4: lreturn

  public long currentConsumerIndex();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method lvConsumerIndex:()J
       4: lreturn

  protected final void soNext(E[], E[]);
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.nextArrayOffset:([Ljava/lang/Object;)J
       4: lstore_3
       5: aload_1
       6: lload_3
       7: aload_2
       8: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      11: return

  protected final E[] lvNextArrayAndUnlink(E[]);
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.nextArrayOffset:([Ljava/lang/Object;)J
       4: lstore_2
       5: aload_1
       6: lload_2
       7: invokestatic  #99                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      10: checkcast     #100                // class "[Ljava/lang/Object;"
      13: checkcast     #100                // class "[Ljava/lang/Object;"
      16: astore        4
      18: aload_1
      19: lload_2
      20: aconst_null
      21: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      24: aload         4
      26: areturn

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method poll:()Ljava/lang/Object;
       4: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method peek:()Ljava/lang/Object;
       4: areturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #124                // Method co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueueUtil.drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;)I
       5: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: invokevirtual #132                // Method capacity:()I
       6: istore        4
       8: aload_0
       9: aload_1
      10: getstatic     #138                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      13: invokevirtual #141                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      16: istore        5
      18: iload         5
      20: ifne          26
      23: lload_2
      24: l2i
      25: ireturn
      26: lload_2
      27: iload         5
      29: i2l
      30: ladd
      31: lstore_2
      32: lload_2
      33: iload         4
      35: i2l
      36: lcmp
      37: ifle          8
      40: lload_2
      41: l2i
      42: ireturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #150                // Method co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueueUtil.drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;I)I
       6: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     88
       7: aload_0
       8: getfield      #154                // Field producerBuffer:[Ljava/lang/Object;
      11: astore        4
      13: aload_0
      14: getfield      #157                // Field producerIndex:J
      17: lstore        5
      19: aload_0
      20: getfield      #160                // Field producerMask:J
      23: lstore        7
      25: lload         5
      27: lload         7
      29: invokestatic  #166                // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.calcElementOffset:(JJ)J
      32: lstore        9
      34: lload         5
      36: aload_0
      37: getfield      #169                // Field producerBufferLimit:J
      40: lcmp
      41: ifge          63
      44: aload_0
      45: aload         4
      47: aload_1
      48: invokeinterface #172,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
      53: lload         5
      55: lload         9
      57: invokevirtual #176                // Method writeToQueue:([Ljava/lang/Object;Ljava/lang/Object;JJ)V
      60: goto          82
      63: aload_0
      64: aload         4
      66: lload         7
      68: lload         5
      70: lload         9
      72: aconst_null
      73: aload_1
      74: invokevirtual #180                // Method offerColdPath:([Ljava/lang/Object;JJJLjava/lang/Object;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;)Z
      77: ifne          82
      80: iload_3
      81: ireturn
      82: iinc          3, 1
      85: goto          2
      88: iload_2
      89: ireturn

  public void drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #188                // Method co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueueUtil.drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition;)V
       7: return

  public void fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_3
       1: invokeinterface #196,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       6: ifeq          71
       9: aload_0
      10: aload_1
      11: getstatic     #138                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      14: invokevirtual #141                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      17: ifeq          32
      20: aload_3
      21: invokeinterface #196,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      26: ifeq          32
      29: goto          9
      32: iconst_0
      33: istore        4
      35: aload_3
      36: invokeinterface #196,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      41: ifeq          68
      44: aload_0
      45: aload_1
      46: getstatic     #138                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      49: invokevirtual #141                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      52: ifne          68
      55: aload_2
      56: iload         4
      58: invokeinterface #200,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      63: istore        4
      65: goto          35
      68: goto          0
      71: return

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #203                // class java/lang/NullPointerException
       8: dup
       9: invokespecial #204                // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #154                // Field producerBuffer:[Ljava/lang/Object;
      17: astore_2
      18: aload_0
      19: getfield      #157                // Field producerIndex:J
      22: lstore_3
      23: aload_0
      24: getfield      #160                // Field producerMask:J
      27: lstore        5
      29: lload_3
      30: lload         5
      32: invokestatic  #166                // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.calcElementOffset:(JJ)J
      35: lstore        7
      37: lload_3
      38: aload_0
      39: getfield      #169                // Field producerBufferLimit:J
      42: lcmp
      43: ifge          57
      46: aload_0
      47: aload_2
      48: aload_1
      49: lload_3
      50: lload         7
      52: invokevirtual #176                // Method writeToQueue:([Ljava/lang/Object;Ljava/lang/Object;JJ)V
      55: iconst_1
      56: ireturn
      57: aload_0
      58: aload_2
      59: lload         5
      61: lload_3
      62: lload         7
      64: aload_1
      65: aconst_null
      66: invokevirtual #180                // Method offerColdPath:([Ljava/lang/Object;JJJLjava/lang/Object;Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;)Z
      69: ireturn

  abstract boolean offerColdPath(E[], long, long, long, E, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<? extends E>);

  public E poll();
    Code:
       0: aload_0
       1: getfield      #207                // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #210                // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #213                // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #166                // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.calcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #99                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: getstatic     #215                // Field JUMP:Ljava/lang/Object;
      37: if_acmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore        9
      47: aconst_null
      48: aload         8
      50: if_acmpeq     75
      53: iload         9
      55: ifne          75
      58: aload_0
      59: lload_2
      60: lconst_1
      61: ladd
      62: invokevirtual #219                // Method soConsumerIndex:(J)V
      65: aload_1
      66: lload         6
      68: aconst_null
      69: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      72: aload         8
      74: areturn
      75: iload         9
      77: ifeq          87
      80: aload_0
      81: aload_1
      82: lload_2
      83: invokespecial #222                // Method newBufferPoll:([Ljava/lang/Object;J)Ljava/lang/Object;
      86: areturn
      87: aconst_null
      88: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #207                // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #210                // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #213                // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #166                // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.calcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #99                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: getstatic     #215                // Field JUMP:Ljava/lang/Object;
      37: if_acmpne     47
      40: aload_0
      41: aload_1
      42: lload_2
      43: invokespecial #227                // Method newBufferPeek:([Ljava/lang/Object;J)Ljava/lang/Object;
      46: areturn
      47: aload         8
      49: areturn

  final void linkOldToNew(long, E[], long, E[], long, E);
    Code:
       0: aload         6
       2: lload         7
       4: aload         9
       6: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
       9: aload_0
      10: aload_3
      11: aload         6
      13: invokevirtual #231                // Method soNext:([Ljava/lang/Object;[Ljava/lang/Object;)V
      16: aload_3
      17: lload         4
      19: getstatic     #215                // Field JUMP:Ljava/lang/Object;
      22: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      25: aload_0
      26: lload_1
      27: lconst_1
      28: ladd
      29: invokevirtual #234                // Method soProducerIndex:(J)V
      32: return

  final void writeToQueue(E[], E, long, long);
    Code:
       0: aload_1
       1: lload         5
       3: aload_2
       4: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
       7: aload_0
       8: lload_3
       9: lconst_1
      10: ladd
      11: invokevirtual #234                // Method soProducerIndex:(J)V
      14: return

  private E newBufferPeek(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #240                // Method lvNextArrayAndUnlink:([Ljava/lang/Object;)[Ljava/lang/Object;
       5: astore        4
       7: aload_0
       8: aload         4
      10: putfield      #207                // Field consumerBuffer:[Ljava/lang/Object;
      13: aload         4
      15: invokestatic  #244                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.length:([Ljava/lang/Object;)I
      18: iconst_2
      19: isub
      20: i2l
      21: lstore        5
      23: aload_0
      24: lload         5
      26: putfield      #213                // Field consumerMask:J
      29: lload_2
      30: lload         5
      32: invokestatic  #166                // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.calcElementOffset:(JJ)J
      35: lstore        7
      37: aload         4
      39: lload         7
      41: invokestatic  #99                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      44: areturn

  private E newBufferPoll(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #240                // Method lvNextArrayAndUnlink:([Ljava/lang/Object;)[Ljava/lang/Object;
       5: astore        4
       7: aload_0
       8: aload         4
      10: putfield      #207                // Field consumerBuffer:[Ljava/lang/Object;
      13: aload         4
      15: invokestatic  #244                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.length:([Ljava/lang/Object;)I
      18: iconst_2
      19: isub
      20: i2l
      21: lstore        5
      23: aload_0
      24: lload         5
      26: putfield      #213                // Field consumerMask:J
      29: lload_2
      30: lload         5
      32: invokestatic  #166                // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.calcElementOffset:(JJ)J
      35: lstore        7
      37: aload         4
      39: lload         7
      41: invokestatic  #99                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      44: astore        9
      46: aconst_null
      47: aload         9
      49: if_acmpne     62
      52: new           #246                // class java/lang/IllegalStateException
      55: dup
      56: ldc           #248                // String new buffer must have at least one element
      58: invokespecial #251                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: lload_2
      64: lconst_1
      65: ladd
      66: invokevirtual #219                // Method soConsumerIndex:(J)V
      69: aload         4
      71: lload         7
      73: aconst_null
      74: invokestatic  #87                 // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      77: aload         9
      79: areturn

  static {};
    Code:
       0: new           #55                 // class java/lang/Object
       3: dup
       4: invokespecial #254                // Method java/lang/Object."<init>":()V
       7: putstatic     #215                // Field JUMP:Ljava/lang/Object;
      10: return
}
