Compiled from "CompactHashSet.java"
class co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet<E> extends java.util.AbstractSet<E> implements java.io.Serializable {
  private static final int MAXIMUM_CAPACITY;

  private static final float DEFAULT_LOAD_FACTOR;

  private static final long NEXT_MASK;

  private static final long HASH_MASK;

  private static final int DEFAULT_SIZE;

  static final int UNSET;

  private transient int[] table;

  private transient long[] entries;

  transient java.lang.Object[] elements;

  transient float loadFactor;

  transient int modCount;

  private transient int threshold;

  private transient int size;

  public static <E> co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet<E> create();
    Code:
       0: new           #2                  // class co/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet
       3: dup
       4: invokespecial #45                 // Method "<init>":()V
       7: areturn

  public static <E> co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet<E> create(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokeinterface #51,  1           // InterfaceMethod java/util/Collection.size:()I
       6: invokestatic  #55                 // Method createWithExpectedSize:(I)Lco/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet;
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #59                 // Method addAll:(Ljava/util/Collection;)Z
      15: pop
      16: aload_1
      17: areturn

  public static <E> co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet<E> create(E...);
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #55                 // Method createWithExpectedSize:(I)Lco/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet;
       5: astore_1
       6: aload_1
       7: aload_0
       8: invokestatic  #71                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      11: pop
      12: aload_1
      13: areturn

  public static <E> co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet<E> createWithExpectedSize(int);
    Code:
       0: new           #2                  // class co/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet
       3: dup
       4: iload_0
       5: invokespecial #75                 // Method "<init>":(I)V
       8: areturn

  co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: iconst_3
       6: fconst_1
       7: invokevirtual #81                 // Method init:(IF)V
      10: return

  co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet(int);
    Code:
       0: aload_0
       1: invokespecial #77                 // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: iload_1
       6: fconst_1
       7: invokevirtual #81                 // Method init:(IF)V
      10: return

  void init(int, float);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #84                 // String Initial capacity must be non-negative
      11: invokestatic  #90                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: fload_2
      15: fconst_0
      16: fcmpl
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #92                 // String Illegal load factor
      27: invokestatic  #90                 // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      30: iload_1
      31: fload_2
      32: f2d
      33: invokestatic  #98                 // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.closedTableSize:(ID)I
      36: istore_3
      37: aload_0
      38: iload_3
      39: invokestatic  #102                // Method newTable:(I)[I
      42: putfield      #104                // Field table:[I
      45: aload_0
      46: fload_2
      47: putfield      #106                // Field loadFactor:F
      50: aload_0
      51: iload_1
      52: anewarray     #108                // class java/lang/Object
      55: putfield      #110                // Field elements:[Ljava/lang/Object;
      58: aload_0
      59: iload_1
      60: invokestatic  #114                // Method newEntries:(I)[J
      63: putfield      #116                // Field entries:[J
      66: aload_0
      67: iconst_1
      68: iload_3
      69: i2f
      70: fload_2
      71: fmul
      72: f2i
      73: invokestatic  #122                // Method java/lang/Math.max:(II)I
      76: putfield      #124                // Field threshold:I
      79: return

  private static int[] newTable(int);
    Code:
       0: iload_0
       1: newarray       int
       3: astore_1
       4: aload_1
       5: iconst_m1
       6: invokestatic  #131                // Method java/util/Arrays.fill:([II)V
       9: aload_1
      10: areturn

  private static long[] newEntries(int);
    Code:
       0: iload_0
       1: newarray       long
       3: astore_1
       4: aload_1
       5: ldc2_w        #133                // long -1l
       8: invokestatic  #137                // Method java/util/Arrays.fill:([JJ)V
      11: aload_1
      12: areturn

  private static int getHash(long);
    Code:
       0: lload_0
       1: bipush        32
       3: lushr
       4: l2i
       5: ireturn

  private static int getNext(long);
    Code:
       0: lload_0
       1: l2i
       2: ireturn

  private static long swapNext(long, int);
    Code:
       0: ldc2_w        #23                 // long -4294967296l
       3: lload_0
       4: land
       5: ldc2_w        #20                 // long 4294967295l
       8: iload_2
       9: i2l
      10: land
      11: lor
      12: lreturn

  private int hashTableMask();
    Code:
       0: aload_0
       1: getfield      #104                // Field table:[I
       4: arraylength
       5: iconst_1
       6: isub
       7: ireturn

  public boolean add(E);
    Code:
       0: aload_0
       1: getfield      #116                // Field entries:[J
       4: astore_2
       5: aload_0
       6: getfield      #110                // Field elements:[Ljava/lang/Object;
       9: astore_3
      10: aload_1
      11: invokestatic  #153                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      14: istore        4
      16: iload         4
      18: aload_0
      19: invokespecial #155                // Method hashTableMask:()I
      22: iand
      23: istore        5
      25: aload_0
      26: getfield      #157                // Field size:I
      29: istore        6
      31: aload_0
      32: getfield      #104                // Field table:[I
      35: iload         5
      37: iaload
      38: istore        7
      40: iload         7
      42: iconst_m1
      43: if_icmpne     58
      46: aload_0
      47: getfield      #104                // Field table:[I
      50: iload         5
      52: iload         6
      54: iastore
      55: goto          115
      58: iload         7
      60: istore        8
      62: aload_2
      63: iload         7
      65: laload
      66: lstore        9
      68: lload         9
      70: invokestatic  #161                // Method getHash:(J)I
      73: iload         4
      75: if_icmpne     91
      78: aload_1
      79: aload_3
      80: iload         7
      82: aaload
      83: invokestatic  #167                // Method co/elastic/apm/agent/shaded/guava/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      86: ifeq          91
      89: iconst_0
      90: ireturn
      91: lload         9
      93: invokestatic  #169                // Method getNext:(J)I
      96: istore        7
      98: iload         7
     100: iconst_m1
     101: if_icmpne     58
     104: aload_2
     105: iload         8
     107: lload         9
     109: iload         6
     111: invokestatic  #171                // Method swapNext:(JI)J
     114: lastore
     115: iload         6
     117: ldc           #172                // int 2147483647
     119: if_icmpne     132
     122: new           #174                // class java/lang/IllegalStateException
     125: dup
     126: ldc           #176                // String Cannot contain more than Integer.MAX_VALUE elements!
     128: invokespecial #179                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: iload         6
     134: iconst_1
     135: iadd
     136: istore        8
     138: aload_0
     139: iload         8
     141: invokespecial #182                // Method resizeMeMaybe:(I)V
     144: aload_0
     145: iload         6
     147: aload_1
     148: iload         4
     150: invokevirtual #186                // Method insertEntry:(ILjava/lang/Object;I)V
     153: aload_0
     154: iload         8
     156: putfield      #157                // Field size:I
     159: iload         6
     161: aload_0
     162: getfield      #124                // Field threshold:I
     165: if_icmplt     179
     168: aload_0
     169: iconst_2
     170: aload_0
     171: getfield      #104                // Field table:[I
     174: arraylength
     175: imul
     176: invokespecial #189                // Method resizeTable:(I)V
     179: aload_0
     180: dup
     181: getfield      #191                // Field modCount:I
     184: iconst_1
     185: iadd
     186: putfield      #191                // Field modCount:I
     189: iconst_1
     190: ireturn

  void insertEntry(int, E, int);
    Code:
       0: aload_0
       1: getfield      #116                // Field entries:[J
       4: iload_1
       5: iload_3
       6: i2l
       7: bipush        32
       9: lshl
      10: ldc2_w        #20                 // long 4294967295l
      13: lor
      14: lastore
      15: aload_0
      16: getfield      #110                // Field elements:[Ljava/lang/Object;
      19: iload_1
      20: aload_2
      21: aastore
      22: return

  private void resizeMeMaybe(int);
    Code:
       0: aload_0
       1: getfield      #116                // Field entries:[J
       4: arraylength
       5: istore_2
       6: iload_1
       7: iload_2
       8: if_icmple     38
      11: iload_2
      12: iconst_1
      13: iload_2
      14: iconst_1
      15: iushr
      16: invokestatic  #122                // Method java/lang/Math.max:(II)I
      19: iadd
      20: istore_3
      21: iload_3
      22: ifge          28
      25: ldc           #172                // int 2147483647
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmpeq     38
      33: aload_0
      34: iload_3
      35: invokevirtual #204                // Method resizeEntries:(I)V
      38: return

  void resizeEntries(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #110                // Field elements:[Ljava/lang/Object;
       5: iload_1
       6: invokestatic  #210                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
       9: putfield      #110                // Field elements:[Ljava/lang/Object;
      12: aload_0
      13: getfield      #116                // Field entries:[J
      16: astore_2
      17: aload_2
      18: arraylength
      19: istore_3
      20: aload_2
      21: iload_1
      22: invokestatic  #213                // Method java/util/Arrays.copyOf:([JI)[J
      25: astore_2
      26: iload_1
      27: iload_3
      28: if_icmple     40
      31: aload_2
      32: iload_3
      33: iload_1
      34: ldc2_w        #133                // long -1l
      37: invokestatic  #216                // Method java/util/Arrays.fill:([JIIJ)V
      40: aload_0
      41: aload_2
      42: putfield      #116                // Field entries:[J
      45: return

  private void resizeTable(int);
    Code:
       0: aload_0
       1: getfield      #104                // Field table:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iload_3
       9: ldc           #14                 // int 1073741824
      11: if_icmplt     21
      14: aload_0
      15: ldc           #172                // int 2147483647
      17: putfield      #124                // Field threshold:I
      20: return
      21: iconst_1
      22: iload_1
      23: i2f
      24: aload_0
      25: getfield      #106                // Field loadFactor:F
      28: fmul
      29: f2i
      30: iadd
      31: istore        4
      33: iload_1
      34: invokestatic  #102                // Method newTable:(I)[I
      37: astore        5
      39: aload_0
      40: getfield      #116                // Field entries:[J
      43: astore        6
      45: aload         5
      47: arraylength
      48: iconst_1
      49: isub
      50: istore        7
      52: iconst_0
      53: istore        8
      55: iload         8
      57: aload_0
      58: getfield      #157                // Field size:I
      61: if_icmpge     124
      64: aload         6
      66: iload         8
      68: laload
      69: lstore        9
      71: lload         9
      73: invokestatic  #161                // Method getHash:(J)I
      76: istore        11
      78: iload         11
      80: iload         7
      82: iand
      83: istore        12
      85: aload         5
      87: iload         12
      89: iaload
      90: istore        13
      92: aload         5
      94: iload         12
      96: iload         8
      98: iastore
      99: aload         6
     101: iload         8
     103: iload         11
     105: i2l
     106: bipush        32
     108: lshl
     109: ldc2_w        #20                 // long 4294967295l
     112: iload         13
     114: i2l
     115: land
     116: lor
     117: lastore
     118: iinc          8, 1
     121: goto          55
     124: aload_0
     125: iload         4
     127: putfield      #124                // Field threshold:I
     130: aload_0
     131: aload         5
     133: putfield      #104                // Field table:[I
     136: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #153                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
       4: istore_2
       5: aload_0
       6: getfield      #104                // Field table:[I
       9: iload_2
      10: aload_0
      11: invokespecial #155                // Method hashTableMask:()I
      14: iand
      15: iaload
      16: istore_3
      17: iload_3
      18: iconst_m1
      19: if_icmpeq     63
      22: aload_0
      23: getfield      #116                // Field entries:[J
      26: iload_3
      27: laload
      28: lstore        4
      30: lload         4
      32: invokestatic  #161                // Method getHash:(J)I
      35: iload_2
      36: if_icmpne     54
      39: aload_1
      40: aload_0
      41: getfield      #110                // Field elements:[Ljava/lang/Object;
      44: iload_3
      45: aaload
      46: invokestatic  #167                // Method co/elastic/apm/agent/shaded/guava/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: lload         4
      56: invokestatic  #169                // Method getNext:(J)I
      59: istore_3
      60: goto          17
      63: iconst_0
      64: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #153                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
       6: invokespecial #229                // Method remove:(Ljava/lang/Object;I)Z
       9: ireturn

  private boolean remove(java.lang.Object, int);
    Code:
       0: iload_2
       1: aload_0
       2: invokespecial #155                // Method hashTableMask:()I
       5: iand
       6: istore_3
       7: aload_0
       8: getfield      #104                // Field table:[I
      11: iload_3
      12: iaload
      13: istore        4
      15: iload         4
      17: iconst_m1
      18: if_icmpne     23
      21: iconst_0
      22: ireturn
      23: iconst_m1
      24: istore        5
      26: aload_0
      27: getfield      #116                // Field entries:[J
      30: iload         4
      32: laload
      33: invokestatic  #161                // Method getHash:(J)I
      36: iload_2
      37: if_icmpne     134
      40: aload_1
      41: aload_0
      42: getfield      #110                // Field elements:[Ljava/lang/Object;
      45: iload         4
      47: aaload
      48: invokestatic  #167                // Method co/elastic/apm/agent/shaded/guava/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          134
      54: iload         5
      56: iconst_m1
      57: if_icmpne     79
      60: aload_0
      61: getfield      #104                // Field table:[I
      64: iload_3
      65: aload_0
      66: getfield      #116                // Field entries:[J
      69: iload         4
      71: laload
      72: invokestatic  #169                // Method getNext:(J)I
      75: iastore
      76: goto          106
      79: aload_0
      80: getfield      #116                // Field entries:[J
      83: iload         5
      85: aload_0
      86: getfield      #116                // Field entries:[J
      89: iload         5
      91: laload
      92: aload_0
      93: getfield      #116                // Field entries:[J
      96: iload         4
      98: laload
      99: invokestatic  #169                // Method getNext:(J)I
     102: invokestatic  #171                // Method swapNext:(JI)J
     105: lastore
     106: aload_0
     107: iload         4
     109: invokevirtual #232                // Method moveEntry:(I)V
     112: aload_0
     113: dup
     114: getfield      #157                // Field size:I
     117: iconst_1
     118: isub
     119: putfield      #157                // Field size:I
     122: aload_0
     123: dup
     124: getfield      #191                // Field modCount:I
     127: iconst_1
     128: iadd
     129: putfield      #191                // Field modCount:I
     132: iconst_1
     133: ireturn
     134: iload         4
     136: istore        5
     138: aload_0
     139: getfield      #116                // Field entries:[J
     142: iload         4
     144: laload
     145: invokestatic  #169                // Method getNext:(J)I
     148: istore        4
     150: iload         4
     152: iconst_m1
     153: if_icmpne     26
     156: iconst_0
     157: ireturn

  void moveEntry(int);
    Code:
       0: aload_0
       1: invokevirtual #233                // Method size:()I
       4: iconst_1
       5: isub
       6: istore_2
       7: iload_1
       8: iload_2
       9: if_icmpge     132
      12: aload_0
      13: getfield      #110                // Field elements:[Ljava/lang/Object;
      16: iload_1
      17: aload_0
      18: getfield      #110                // Field elements:[Ljava/lang/Object;
      21: iload_2
      22: aaload
      23: aastore
      24: aload_0
      25: getfield      #110                // Field elements:[Ljava/lang/Object;
      28: iload_2
      29: aconst_null
      30: aastore
      31: aload_0
      32: getfield      #116                // Field entries:[J
      35: iload_2
      36: laload
      37: lstore_3
      38: aload_0
      39: getfield      #116                // Field entries:[J
      42: iload_1
      43: lload_3
      44: lastore
      45: aload_0
      46: getfield      #116                // Field entries:[J
      49: iload_2
      50: ldc2_w        #133                // long -1l
      53: lastore
      54: lload_3
      55: invokestatic  #161                // Method getHash:(J)I
      58: aload_0
      59: invokespecial #155                // Method hashTableMask:()I
      62: iand
      63: istore        5
      65: aload_0
      66: getfield      #104                // Field table:[I
      69: iload         5
      71: iaload
      72: istore        6
      74: iload         6
      76: iload_2
      77: if_icmpne     91
      80: aload_0
      81: getfield      #104                // Field table:[I
      84: iload         5
      86: iload_1
      87: iastore
      88: goto          129
      91: iload         6
      93: istore        7
      95: aload_0
      96: getfield      #116                // Field entries:[J
      99: iload         6
     101: laload
     102: dup2
     103: lstore        8
     105: invokestatic  #169                // Method getNext:(J)I
     108: istore        6
     110: iload         6
     112: iload_2
     113: if_icmpne     91
     116: aload_0
     117: getfield      #116                // Field entries:[J
     120: iload         7
     122: lload         8
     124: iload_1
     125: invokestatic  #171                // Method swapNext:(JI)J
     128: lastore
     129: goto          148
     132: aload_0
     133: getfield      #110                // Field elements:[Ljava/lang/Object;
     136: iload_1
     137: aconst_null
     138: aastore
     139: aload_0
     140: getfield      #116                // Field entries:[J
     143: iload_1
     144: ldc2_w        #133                // long -1l
     147: lastore
     148: return

  int firstEntryIndex();
    Code:
       0: aload_0
       1: invokevirtual #243                // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_m1
       8: goto          12
      11: iconst_0
      12: ireturn

  int getSuccessor(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #157                // Field size:I
       7: if_icmpge     16
      10: iload_1
      11: iconst_1
      12: iadd
      13: goto          17
      16: iconst_m1
      17: ireturn

  int adjustAfterRemove(int, int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #11                 // class co/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet$1
       3: dup
       4: aload_0
       5: invokespecial #253                // Method co/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet$1."<init>":(Lco/elastic/apm/agent/shaded/guava/common/collect/CompactHashSet;)V
       8: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #157                // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #157                // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #110                // Field elements:[Ljava/lang/Object;
       4: aload_0
       5: getfield      #157                // Field size:I
       8: invokestatic  #210                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      11: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #110                // Field elements:[Ljava/lang/Object;
       4: iconst_0
       5: aload_0
       6: getfield      #157                // Field size:I
       9: aload_1
      10: invokestatic  #262                // Method co/elastic/apm/agent/shaded/guava/common/collect/ObjectArrays.toArrayImpl:([Ljava/lang/Object;II[Ljava/lang/Object;)[Ljava/lang/Object;
      13: areturn

  public void trimToSize();
    Code:
       0: aload_0
       1: getfield      #157                // Field size:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #116                // Field entries:[J
      10: arraylength
      11: if_icmpge     19
      14: aload_0
      15: iload_1
      16: invokevirtual #204                // Method resizeEntries:(I)V
      19: iconst_1
      20: iload_1
      21: i2f
      22: aload_0
      23: getfield      #106                // Field loadFactor:F
      26: fdiv
      27: f2i
      28: invokestatic  #270                // Method java/lang/Integer.highestOneBit:(I)I
      31: invokestatic  #122                // Method java/lang/Math.max:(II)I
      34: istore_2
      35: iload_2
      36: ldc           #14                 // int 1073741824
      38: if_icmpge     61
      41: iload_1
      42: i2d
      43: iload_2
      44: i2d
      45: ddiv
      46: dstore_3
      47: dload_3
      48: aload_0
      49: getfield      #106                // Field loadFactor:F
      52: f2d
      53: dcmpl
      54: ifle          61
      57: iload_2
      58: iconst_1
      59: ishl
      60: istore_2
      61: iload_2
      62: aload_0
      63: getfield      #104                // Field table:[I
      66: arraylength
      67: if_icmpge     75
      70: aload_0
      71: iload_2
      72: invokespecial #189                // Method resizeTable:(I)V
      75: return

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #191                // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #191                // Field modCount:I
      10: aload_0
      11: getfield      #110                // Field elements:[Ljava/lang/Object;
      14: iconst_0
      15: aload_0
      16: getfield      #157                // Field size:I
      19: aconst_null
      20: invokestatic  #277                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      23: aload_0
      24: getfield      #104                // Field table:[I
      27: iconst_m1
      28: invokestatic  #131                // Method java/util/Arrays.fill:([II)V
      31: aload_0
      32: getfield      #116                // Field entries:[J
      35: ldc2_w        #133                // long -1l
      38: invokestatic  #137                // Method java/util/Arrays.fill:([JJ)V
      41: aload_0
      42: iconst_0
      43: putfield      #157                // Field size:I
      46: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #286                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #157                // Field size:I
       9: invokevirtual #289                // Method java/io/ObjectOutputStream.writeInt:(I)V
      12: aload_0
      13: invokevirtual #291                // Method iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #296,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          41
      26: aload_2
      27: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore_3
      33: aload_1
      34: aload_3
      35: invokevirtual #302                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      38: goto          17
      41: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #314                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: iconst_3
       6: fconst_1
       7: invokevirtual #81                 // Method init:(IF)V
      10: aload_1
      11: invokevirtual #317                // Method java/io/ObjectInputStream.readInt:()I
      14: istore_2
      15: iload_2
      16: istore_3
      17: iinc          3, -1
      20: iload_3
      21: iflt          40
      24: aload_1
      25: invokevirtual #319                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      28: astore        4
      30: aload_0
      31: aload         4
      33: invokevirtual #321                // Method add:(Ljava/lang/Object;)Z
      36: pop
      37: goto          17
      40: return

  static long[] access$000(co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet);
    Code:
       0: aload_0
       1: getfield      #116                // Field entries:[J
       4: areturn

  static int access$100(long);
    Code:
       0: lload_0
       1: invokestatic  #161                // Method getHash:(J)I
       4: ireturn

  static boolean access$200(co.elastic.apm.agent.shaded.guava.common.collect.CompactHashSet, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #229                // Method remove:(Ljava/lang/Object;I)Z
       6: ireturn
}
