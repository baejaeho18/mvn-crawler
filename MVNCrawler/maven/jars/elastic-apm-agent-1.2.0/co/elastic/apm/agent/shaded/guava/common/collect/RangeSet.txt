Compiled from "RangeSet.java"
public interface co.elastic.apm.agent.shaded.guava.common.collect.RangeSet<C extends java.lang.Comparable> {
  public abstract boolean contains(C);

  public abstract co.elastic.apm.agent.shaded.guava.common.collect.Range<C> rangeContaining(C);

  public abstract boolean intersects(co.elastic.apm.agent.shaded.guava.common.collect.Range<C>);

  public abstract boolean encloses(co.elastic.apm.agent.shaded.guava.common.collect.Range<C>);

  public abstract boolean enclosesAll(co.elastic.apm.agent.shaded.guava.common.collect.RangeSet<C>);

  public abstract boolean enclosesAll(java.lang.Iterable<co.elastic.apm.agent.shaded.guava.common.collect.Range<C>>);

  public abstract boolean isEmpty();

  public abstract co.elastic.apm.agent.shaded.guava.common.collect.Range<C> span();

  public abstract java.util.Set<co.elastic.apm.agent.shaded.guava.common.collect.Range<C>> asRanges();

  public abstract java.util.Set<co.elastic.apm.agent.shaded.guava.common.collect.Range<C>> asDescendingSetOfRanges();

  public abstract co.elastic.apm.agent.shaded.guava.common.collect.RangeSet<C> complement();

  public abstract co.elastic.apm.agent.shaded.guava.common.collect.RangeSet<C> subRangeSet(co.elastic.apm.agent.shaded.guava.common.collect.Range<C>);

  public abstract void add(co.elastic.apm.agent.shaded.guava.common.collect.Range<C>);

  public abstract void remove(co.elastic.apm.agent.shaded.guava.common.collect.Range<C>);

  public abstract void clear();

  public abstract void addAll(co.elastic.apm.agent.shaded.guava.common.collect.RangeSet<C>);

  public abstract void addAll(java.lang.Iterable<co.elastic.apm.agent.shaded.guava.common.collect.Range<C>>);

  public abstract void removeAll(co.elastic.apm.agent.shaded.guava.common.collect.RangeSet<C>);

  public abstract void removeAll(java.lang.Iterable<co.elastic.apm.agent.shaded.guava.common.collect.Range<C>>);

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public abstract java.lang.String toString();
}
