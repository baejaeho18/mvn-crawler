Compiled from "AtomicReferenceArrayQueue.java"
abstract class co.elastic.apm.agent.shaded.jctools.queues.atomic.AtomicReferenceArrayQueue<E> extends java.util.AbstractQueue<E> implements co.elastic.apm.agent.shaded.jctools.queues.IndexedQueueSizeUtil$IndexedQueue, co.elastic.apm.agent.shaded.jctools.queues.QueueProgressIndicators, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue<E> {
  protected final java.util.concurrent.atomic.AtomicReferenceArray<E> buffer;

  protected final int mask;

  public co.elastic.apm.agent.shaded.jctools.queues.atomic.AtomicReferenceArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/util/AbstractQueue."<init>":()V
       4: iload_1
       5: invokestatic  #31                 // Method co/elastic/apm/agent/shaded/jctools/util/Pow2.roundToPowerOfTwo:(I)I
       8: istore_2
       9: aload_0
      10: iload_2
      11: iconst_1
      12: isub
      13: putfield      #33                 // Field mask:I
      16: aload_0
      17: new           #35                 // class java/util/concurrent/atomic/AtomicReferenceArray
      20: dup
      21: iload_2
      22: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      25: putfield      #39                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      28: return

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #48                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #49                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #62                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method poll:()Ljava/lang/Object;
       4: ifnull        10
       7: goto          0
      10: return

  protected final int calcElementOffset(long, int);
    Code:
       0: lload_1
       1: l2i
       2: iload_3
       3: iand
       4: ireturn

  protected final int calcElementOffset(long);
    Code:
       0: lload_1
       1: l2i
       2: aload_0
       3: getfield      #33                 // Field mask:I
       6: iand
       7: ireturn

  public static <E> E lvElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       5: areturn

  public static <E> E lpElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       5: areturn

  protected final E lpElement(int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
       8: areturn

  public static <E> void spElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, E);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #86                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       6: return

  protected final void spElement(int, E);
    Code:
       0: aload_0
       1: getfield      #39                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #86                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       9: return

  public static <E> void soElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, E);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #86                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       6: return

  protected final void soElement(int, E);
    Code:
       0: aload_0
       1: getfield      #39                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: aload_2
       6: invokevirtual #86                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
       9: return

  public static <E> void svElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, int, E);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #94                 // Method java/util/concurrent/atomic/AtomicReferenceArray.set:(ILjava/lang/Object;)V
       6: return

  protected final E lvElement(int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: iload_1
       5: invokestatic  #96                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
       8: areturn

  public final int capacity();
    Code:
       0: aload_0
       1: getfield      #33                 // Field mask:I
       4: iconst_1
       5: iadd
       6: ireturn

  public final int size();
    Code:
       0: aload_0
       1: invokestatic  #101                // Method co/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil.size:(Lco/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil$IndexedQueue;)I
       4: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokestatic  #106                // Method co/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil.isEmpty:(Lco/elastic/apm/agent/shaded/jctools/queues/IndexedQueueSizeUtil$IndexedQueue;)Z
       4: ireturn

  public final long currentProducerIndex();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method lvProducerIndex:()J
       4: lreturn

  public final long currentConsumerIndex();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method lvConsumerIndex:()J
       4: lreturn
}
