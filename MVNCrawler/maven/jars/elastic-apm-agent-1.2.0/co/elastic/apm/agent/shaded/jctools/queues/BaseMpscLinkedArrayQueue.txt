Compiled from "BaseMpscLinkedArrayQueue.java"
public abstract class co.elastic.apm.agent.shaded.jctools.queues.BaseMpscLinkedArrayQueue<E> extends co.elastic.apm.agent.shaded.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields<E> implements co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue<E>, co.elastic.apm.agent.shaded.jctools.queues.QueueProgressIndicators {
  private static final java.lang.Object JUMP;

  private static final int CONTINUE_TO_P_INDEX_CAS;

  private static final int RETRY;

  private static final int QUEUE_FULL;

  private static final int QUEUE_RESIZE;

  public co.elastic.apm.agent.shaded.jctools.queues.BaseMpscLinkedArrayQueue(int);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method co/elastic/apm/agent/shaded/jctools/queues/BaseMpscLinkedArrayQueueColdProducerFields."<init>":()V
       4: iload_1
       5: iconst_2
       6: ldc           #40                 // String initialCapacity
       8: invokestatic  #46                 // Method co/elastic/apm/agent/shaded/jctools/util/RangeUtil.checkGreaterThanOrEqual:(IILjava/lang/String;)I
      11: pop
      12: iload_1
      13: invokestatic  #52                 // Method co/elastic/apm/agent/shaded/jctools/util/Pow2.roundToPowerOfTwo:(I)I
      16: istore_2
      17: iload_2
      18: iconst_1
      19: isub
      20: iconst_1
      21: ishl
      22: i2l
      23: lstore_3
      24: iload_2
      25: iconst_1
      26: iadd
      27: invokestatic  #58                 // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.allocate:(I)[Ljava/lang/Object;
      30: astore        5
      32: aload_0
      33: aload         5
      35: putfield      #62                 // Field producerBuffer:[Ljava/lang/Object;
      38: aload_0
      39: lload_3
      40: putfield      #66                 // Field producerMask:J
      43: aload_0
      44: aload         5
      46: putfield      #69                 // Field consumerBuffer:[Ljava/lang/Object;
      49: aload_0
      50: lload_3
      51: putfield      #72                 // Field consumerMask:J
      54: aload_0
      55: lload_3
      56: invokevirtual #76                 // Method soProducerLimit:(J)V
      59: return

  public final java.util.Iterator<E> iterator();
    Code:
       0: new           #87                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #88                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final int size();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method lvConsumerIndex:()J
       4: lstore_1
       5: lload_1
       6: lstore        5
       8: aload_0
       9: invokevirtual #97                 // Method lvProducerIndex:()J
      12: lstore        7
      14: aload_0
      15: invokevirtual #94                 // Method lvConsumerIndex:()J
      18: lstore_1
      19: lload         5
      21: lload_1
      22: lcmp
      23: ifne          36
      26: lload         7
      28: lload_1
      29: lsub
      30: iconst_1
      31: lshr
      32: lstore_3
      33: goto          39
      36: goto          5
      39: lload_3
      40: ldc2_w        #98                 // long 2147483647l
      43: lcmp
      44: ifle          50
      47: ldc           #100                // int 2147483647
      49: ireturn
      50: lload_3
      51: l2i
      52: ireturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method lvConsumerIndex:()J
       4: aload_0
       5: invokevirtual #97                 // Method lvProducerIndex:()J
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #118                // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #122                // class java/lang/NullPointerException
       8: dup
       9: invokespecial #123                // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: invokevirtual #126                // Method lvProducerLimit:()J
      17: lstore        7
      19: aload_0
      20: invokevirtual #97                 // Method lvProducerIndex:()J
      23: lstore        5
      25: lload         5
      27: lconst_1
      28: land
      29: lconst_1
      30: lcmp
      31: ifne          37
      34: goto          13
      37: aload_0
      38: getfield      #66                 // Field producerMask:J
      41: lstore_2
      42: aload_0
      43: getfield      #62                 // Field producerBuffer:[Ljava/lang/Object;
      46: astore        4
      48: lload         7
      50: lload         5
      52: lcmp
      53: ifgt          120
      56: aload_0
      57: lload_2
      58: lload         5
      60: lload         7
      62: invokespecial #130                // Method offerSlowPath:(JJJ)I
      65: istore        9
      67: iload         9
      69: tableswitch   { // 0 to 3
                     0: 100
                     1: 103
                     2: 106
                     3: 108
               default: 120
          }
     100: goto          120
     103: goto          13
     106: iconst_0
     107: ireturn
     108: aload_0
     109: lload_2
     110: aload         4
     112: lload         5
     114: aload_1
     115: invokespecial #135                // Method resize:(J[Ljava/lang/Object;JLjava/lang/Object;)V
     118: iconst_1
     119: ireturn
     120: aload_0
     121: lload         5
     123: lload         5
     125: ldc2_w        #136                // long 2l
     128: ladd
     129: invokevirtual #141                // Method casProducerIndex:(JJ)Z
     132: ifeq          138
     135: goto          141
     138: goto          13
     141: lload         5
     143: lload_2
     144: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
     147: lstore        7
     149: aload         4
     151: lload         7
     153: aload_1
     154: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     157: iconst_1
     158: ireturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #69                 // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #164                // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #72                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     64
      37: lload_2
      38: aload_0
      39: invokevirtual #97                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          62
      46: aload_1
      47: lload         6
      49: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: astore        8
      54: aload         8
      56: ifnull        46
      59: goto          64
      62: aconst_null
      63: areturn
      64: aload         8
      66: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      69: if_acmpne     89
      72: aload_0
      73: aload_1
      74: lload         4
      76: invokespecial #174                // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      79: astore        9
      81: aload_0
      82: aload         9
      84: lload_2
      85: invokespecial #177                // Method newBufferPoll:([Ljava/lang/Object;J)Ljava/lang/Object;
      88: areturn
      89: aload_1
      90: lload         6
      92: aconst_null
      93: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      96: aload_0
      97: lload_2
      98: ldc2_w        #136                // long 2l
     101: ladd
     102: invokevirtual #180                // Method soConsumerIndex:(J)V
     105: aload         8
     107: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #69                 // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #164                // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #72                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     59
      37: lload_2
      38: aload_0
      39: invokevirtual #97                 // Method lvProducerIndex:()J
      42: lcmp
      43: ifeq          59
      46: aload_1
      47: lload         6
      49: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: astore        8
      54: aload         8
      56: ifnull        46
      59: aload         8
      61: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      64: if_acmpne     80
      67: aload_0
      68: aload_0
      69: aload_1
      70: lload         4
      72: invokespecial #174                // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      75: lload_2
      76: invokespecial #186                // Method newBufferPeek:([Ljava/lang/Object;J)Ljava/lang/Object;
      79: areturn
      80: aload         8
      82: areturn

  private int offerSlowPath(long, long, long);
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method lvConsumerIndex:()J
       4: lstore        7
       6: aload_0
       7: lload_1
       8: invokevirtual #190                // Method getCurrentBufferCapacity:(J)J
      11: lstore        9
      13: lload         7
      15: lload         9
      17: ladd
      18: lload_3
      19: lcmp
      20: ifle          41
      23: aload_0
      24: lload         5
      26: lload         7
      28: lload         9
      30: ladd
      31: invokevirtual #193                // Method casProducerLimit:(JJ)Z
      34: ifne          39
      37: iconst_1
      38: ireturn
      39: iconst_0
      40: ireturn
      41: aload_0
      42: lload_3
      43: lload         7
      45: invokevirtual #196                // Method availableInQueue:(JJ)J
      48: lconst_0
      49: lcmp
      50: ifgt          55
      53: iconst_2
      54: ireturn
      55: aload_0
      56: lload_3
      57: lload_3
      58: lconst_1
      59: ladd
      60: invokevirtual #141                // Method casProducerIndex:(JJ)Z
      63: ifeq          68
      66: iconst_3
      67: ireturn
      68: iconst_1
      69: ireturn

  protected abstract long availableInQueue(long, long);

  private E[] getNextBuffer(E[], long);
    Code:
       0: aload_0
       1: lload_2
       2: invokespecial #201                // Method nextArrayOffset:(J)J
       5: lstore        4
       7: aload_1
       8: lload         4
      10: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      13: checkcast     #131                // class "[Ljava/lang/Object;"
      16: checkcast     #131                // class "[Ljava/lang/Object;"
      19: astore        6
      21: aload_1
      22: lload         4
      24: aconst_null
      25: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      28: aload         6
      30: areturn

  private long nextArrayOffset(long);
    Code:
       0: lload_1
       1: ldc2_w        #136                // long 2l
       4: ladd
       5: ldc2_w        #202                // long 9223372036854775807l
       8: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      11: lreturn

  private E newBufferPoll(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #207                // Method newBufferAndOffset:([Ljava/lang/Object;J)J
       6: lstore        4
       8: aload_1
       9: lload         4
      11: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      14: astore        6
      16: aload         6
      18: ifnonnull     31
      21: new           #209                // class java/lang/IllegalStateException
      24: dup
      25: ldc           #211                // String new buffer must have at least one element
      27: invokespecial #214                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: lload         4
      34: aconst_null
      35: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      38: aload_0
      39: lload_2
      40: ldc2_w        #136                // long 2l
      43: ladd
      44: invokevirtual #180                // Method soConsumerIndex:(J)V
      47: aload         6
      49: areturn

  private E newBufferPeek(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #207                // Method newBufferAndOffset:([Ljava/lang/Object;J)J
       6: lstore        4
       8: aload_1
       9: lload         4
      11: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      14: astore        6
      16: aconst_null
      17: aload         6
      19: if_acmpne     32
      22: new           #209                // class java/lang/IllegalStateException
      25: dup
      26: ldc           #211                // String new buffer must have at least one element
      28: invokespecial #214                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload         6
      34: areturn

  private long newBufferAndOffset(E[], long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field consumerBuffer:[Ljava/lang/Object;
       5: aload_0
       6: aload_1
       7: invokestatic  #219                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.length:([Ljava/lang/Object;)I
      10: iconst_2
      11: isub
      12: iconst_1
      13: ishl
      14: i2l
      15: putfield      #72                 // Field consumerMask:J
      18: lload_2
      19: aload_0
      20: getfield      #72                 // Field consumerMask:J
      23: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      26: lreturn

  public long currentProducerIndex();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method lvProducerIndex:()J
       4: ldc2_w        #136                // long 2l
       7: ldiv
       8: lreturn

  public long currentConsumerIndex();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method lvConsumerIndex:()J
       4: ldc2_w        #136                // long 2l
       7: ldiv
       8: lreturn

  public abstract int capacity();

  public boolean relaxedOffer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #224                // Method offer:(Ljava/lang/Object;)Z
       5: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: getfield      #69                 // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #164                // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #72                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: ifnonnull     39
      37: aconst_null
      38: areturn
      39: aload         8
      41: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      44: if_acmpne     64
      47: aload_0
      48: aload_1
      49: lload         4
      51: invokespecial #174                // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      54: astore        9
      56: aload_0
      57: aload         9
      59: lload_2
      60: invokespecial #177                // Method newBufferPoll:([Ljava/lang/Object;J)Ljava/lang/Object;
      63: areturn
      64: aload_1
      65: lload         6
      67: aconst_null
      68: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      71: aload_0
      72: lload_2
      73: ldc2_w        #136                // long 2l
      76: ladd
      77: invokevirtual #180                // Method soConsumerIndex:(J)V
      80: aload         8
      82: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: getfield      #69                 // Field consumerBuffer:[Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #164                // Field consumerIndex:J
       9: lstore_2
      10: aload_0
      11: getfield      #72                 // Field consumerMask:J
      14: lstore        4
      16: lload_2
      17: lload         4
      19: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      22: lstore        6
      24: aload_1
      25: lload         6
      27: invokestatic  #168                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.lvElement:([Ljava/lang/Object;J)Ljava/lang/Object;
      30: astore        8
      32: aload         8
      34: getstatic     #170                // Field JUMP:Ljava/lang/Object;
      37: if_acmpne     53
      40: aload_0
      41: aload_0
      42: aload_1
      43: lload         4
      45: invokespecial #174                // Method getNextBuffer:([Ljava/lang/Object;J)[Ljava/lang/Object;
      48: lload_2
      49: invokespecial #186                // Method newBufferPeek:([Ljava/lang/Object;J)Ljava/lang/Object;
      52: areturn
      53: aload         8
      55: areturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_0
       3: invokevirtual #230                // Method capacity:()I
       6: istore        4
       8: aload_0
       9: aload_1
      10: getstatic     #235                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      13: invokevirtual #238                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      16: istore        5
      18: iload         5
      20: ifne          26
      23: lload_2
      24: l2i
      25: ireturn
      26: lload_2
      27: iload         5
      29: i2l
      30: ladd
      31: lstore_2
      32: lload_2
      33: iload         4
      35: i2l
      36: lcmp
      37: ifle          8
      40: lload_2
      41: l2i
      42: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aload_0
       1: invokevirtual #126                // Method lvProducerLimit:()J
       4: lstore        9
       6: aload_0
       7: invokevirtual #97                 // Method lvProducerIndex:()J
      10: lstore        6
      12: lload         6
      14: lconst_1
      15: land
      16: lconst_1
      17: lcmp
      18: ifne          24
      21: goto          0
      24: aload_0
      25: getfield      #66                 // Field producerMask:J
      28: lstore_3
      29: aload_0
      30: getfield      #62                 // Field producerBuffer:[Ljava/lang/Object;
      33: astore        5
      35: lload         9
      37: lload         6
      39: iconst_2
      40: iload_2
      41: imul
      42: i2l
      43: ladd
      44: invokestatic  #247                // Method java/lang/Math.min:(JJ)J
      47: lstore        11
      49: lload         6
      51: lload         9
      53: lcmp
      54: ifge          65
      57: lload         9
      59: lload         11
      61: lcmp
      62: ifge          130
      65: aload_0
      66: lload_3
      67: lload         6
      69: lload         9
      71: invokespecial #130                // Method offerSlowPath:(JJJ)I
      74: istore        13
      76: iload         13
      78: tableswitch   { // 0 to 3
                     0: 108
                     1: 108
                     2: 111
                     3: 113
               default: 130
          }
     108: goto          0
     111: iconst_0
     112: ireturn
     113: aload_0
     114: lload_3
     115: aload         5
     117: lload         6
     119: aload_1
     120: invokeinterface #250,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     125: invokespecial #135                // Method resize:(J[Ljava/lang/Object;JLjava/lang/Object;)V
     128: iconst_1
     129: ireturn
     130: aload_0
     131: lload         6
     133: lload         11
     135: invokevirtual #141                // Method casProducerIndex:(JJ)Z
     138: ifeq          156
     141: lload         11
     143: lload         6
     145: lsub
     146: ldc2_w        #136                // long 2l
     149: ldiv
     150: l2i
     151: istore        8
     153: goto          159
     156: goto          0
     159: iconst_0
     160: istore        9
     162: iload         9
     164: iload         8
     166: if_icmpge     202
     169: lload         6
     171: iconst_2
     172: iload         9
     174: imul
     175: i2l
     176: ladd
     177: lload_3
     178: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
     181: lstore        10
     183: aload         5
     185: lload         10
     187: aload_1
     188: invokeinterface #250,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
     193: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     196: iinc          9, 1
     199: goto          162
     202: iload         8
     204: ireturn

  public void fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_3
       1: invokeinterface #258,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       6: ifeq          59
       9: aload_0
      10: aload_1
      11: getstatic     #235                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      14: invokevirtual #238                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      17: ifne          0
      20: iconst_0
      21: istore        4
      23: aload_3
      24: invokeinterface #258,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      29: ifeq          56
      32: aload_0
      33: aload_1
      34: getstatic     #235                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_OFFER_BATCH:I
      37: invokevirtual #238                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
      40: ifne          56
      43: aload_2
      44: iload         4
      46: invokeinterface #261,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      51: istore        4
      53: goto          23
      56: goto          0
      59: return

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #230                // Method capacity:()I
       6: invokevirtual #271                // Method drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;I)I
       9: ireturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     31
       7: aload_0
       8: invokevirtual #276                // Method relaxedPoll:()Ljava/lang/Object;
      11: dup
      12: astore        4
      14: ifnull        31
      17: aload_1
      18: aload         4
      20: invokeinterface #280,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
      25: iinc          3, 1
      28: goto          2
      31: iload_3
      32: ireturn

  public void drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: invokeinterface #258,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       9: ifeq          50
      12: aload_0
      13: invokevirtual #276                // Method relaxedPoll:()Ljava/lang/Object;
      16: astore        5
      18: aload         5
      20: ifnonnull     36
      23: aload_2
      24: iload         4
      26: invokeinterface #261,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      31: istore        4
      33: goto          3
      36: iconst_0
      37: istore        4
      39: aload_1
      40: aload         5
      42: invokeinterface #280,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
      47: goto          3
      50: return

  private void resize(long, E[], long, E);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #286                // Method getNextBufferSize:([Ljava/lang/Object;)I
       5: istore        7
       7: iload         7
       9: invokestatic  #58                 // Method co/elastic/apm/agent/shaded/jctools/queues/CircularArrayOffsetCalculator.allocate:(I)[Ljava/lang/Object;
      12: astore        8
      14: aload_0
      15: aload         8
      17: putfield      #62                 // Field producerBuffer:[Ljava/lang/Object;
      20: iload         7
      22: iconst_2
      23: isub
      24: iconst_1
      25: ishl
      26: istore        9
      28: aload_0
      29: iload         9
      31: i2l
      32: putfield      #66                 // Field producerMask:J
      35: lload         4
      37: lload_1
      38: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      41: lstore        10
      43: lload         4
      45: iload         9
      47: i2l
      48: invokestatic  #147                // Method co/elastic/apm/agent/shaded/jctools/queues/LinkedArrayQueueUtil.modifiedCalcElementOffset:(JJ)J
      51: lstore        12
      53: aload         8
      55: lload         12
      57: aload         6
      59: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      62: aload_3
      63: aload_0
      64: lload_1
      65: invokespecial #201                // Method nextArrayOffset:(J)J
      68: aload         8
      70: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
      73: aload_0
      74: invokevirtual #94                 // Method lvConsumerIndex:()J
      77: lstore        14
      79: aload_0
      80: lload         4
      82: lload         14
      84: invokevirtual #196                // Method availableInQueue:(JJ)J
      87: lstore        16
      89: lload         16
      91: ldc_w         #287                // String availableInQueue
      94: invokestatic  #291                // Method co/elastic/apm/agent/shaded/jctools/util/RangeUtil.checkPositive:(JLjava/lang/String;)J
      97: pop2
      98: aload_0
      99: lload         4
     101: iload         9
     103: i2l
     104: lload         16
     106: invokestatic  #247                // Method java/lang/Math.min:(JJ)J
     109: ladd
     110: invokevirtual #76                 // Method soProducerLimit:(J)V
     113: aload_0
     114: lload         4
     116: ldc2_w        #136                // long 2l
     119: ladd
     120: invokevirtual #294                // Method soProducerIndex:(J)V
     123: aload_3
     124: lload         10
     126: getstatic     #170                // Field JUMP:Ljava/lang/Object;
     129: invokestatic  #153                // Method co/elastic/apm/agent/shaded/jctools/util/UnsafeRefArrayAccess.soElement:([Ljava/lang/Object;JLjava/lang/Object;)V
     132: return

  protected abstract int getNextBufferSize(E[]);

  protected abstract long getCurrentBufferCapacity(long);

  static {};
    Code:
       0: new           #109                // class java/lang/Object
       3: dup
       4: invokespecial #303                // Method java/lang/Object."<init>":()V
       7: putstatic     #170                // Field JUMP:Ljava/lang/Object;
      10: return
}
