Compiled from "MultiProducerSequencer.java"
public final class co.elastic.apm.agent.shaded.lmax.disruptor.MultiProducerSequencer extends co.elastic.apm.agent.shaded.lmax.disruptor.AbstractSequencer {
  private static final sun.misc.Unsafe UNSAFE;

  private static final long BASE;

  private static final long SCALE;

  private final co.elastic.apm.agent.shaded.lmax.disruptor.Sequence gatingSequenceCache;

  private final int[] availableBuffer;

  private final int indexMask;

  private final int indexShift;

  public co.elastic.apm.agent.shaded.lmax.disruptor.MultiProducerSequencer(int, co.elastic.apm.agent.shaded.lmax.disruptor.WaitStrategy);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #21                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/AbstractSequencer."<init>":(ILco/elastic/apm/agent/shaded/lmax/disruptor/WaitStrategy;)V
       6: aload_0
       7: new           #23                 // class co/elastic/apm/agent/shaded/lmax/disruptor/Sequence
      10: dup
      11: ldc2_w        #24                 // long -1l
      14: invokespecial #28                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence."<init>":(J)V
      17: putfield      #30                 // Field gatingSequenceCache:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      20: aload_0
      21: iload_1
      22: newarray       int
      24: putfield      #32                 // Field availableBuffer:[I
      27: aload_0
      28: iload_1
      29: iconst_1
      30: isub
      31: putfield      #34                 // Field indexMask:I
      34: aload_0
      35: iload_1
      36: invokestatic  #40                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/util/Util.log2:(I)I
      39: putfield      #42                 // Field indexShift:I
      42: aload_0
      43: invokespecial #46                 // Method initialiseAvailableBuffer:()V
      46: return

  public boolean hasAvailableCapacity(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #57                 // Field gatingSequences:[Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      10: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      13: invokespecial #67                 // Method hasAvailableCapacity:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;IJ)Z
      16: ireturn

  private boolean hasAvailableCapacity(co.elastic.apm.agent.shaded.lmax.disruptor.Sequence[], int, long);
    Code:
       0: lload_3
       1: iload_2
       2: i2l
       3: ladd
       4: aload_0
       5: getfield      #70                 // Field bufferSize:I
       8: i2l
       9: lsub
      10: lstore        5
      12: aload_0
      13: getfield      #30                 // Field gatingSequenceCache:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      16: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      19: lstore        7
      21: lload         5
      23: lload         7
      25: lcmp
      26: ifgt          36
      29: lload         7
      31: lload_3
      32: lcmp
      33: ifle          62
      36: aload_1
      37: lload_3
      38: invokestatic  #74                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/util/Util.getMinimumSequence:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;J)J
      41: lstore        9
      43: aload_0
      44: getfield      #30                 // Field gatingSequenceCache:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      47: lload         9
      49: invokevirtual #77                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.set:(J)V
      52: lload         5
      54: lload         9
      56: lcmp
      57: ifle          62
      60: iconst_0
      61: ireturn
      62: iconst_1
      63: ireturn

  public void claim(long);
    Code:
       0: aload_0
       1: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
       4: lload_1
       5: invokevirtual #77                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.set:(J)V
       8: return

  public long next();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #87                 // Method next:(I)J
       5: lreturn

  public long next(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #89                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #91                 // String n must be > 0
      11: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      19: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      22: lstore_2
      23: lload_2
      24: iload_1
      25: i2l
      26: ladd
      27: lstore        4
      29: lload         4
      31: aload_0
      32: getfield      #70                 // Field bufferSize:I
      35: i2l
      36: lsub
      37: lstore        6
      39: aload_0
      40: getfield      #30                 // Field gatingSequenceCache:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      43: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      46: lstore        8
      48: lload         6
      50: lload         8
      52: lcmp
      53: ifgt          63
      56: lload         8
      58: lload_2
      59: lcmp
      60: ifle          100
      63: aload_0
      64: getfield      #57                 // Field gatingSequences:[Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      67: lload_2
      68: invokestatic  #74                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/util/Util.getMinimumSequence:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;J)J
      71: lstore        10
      73: lload         6
      75: lload         10
      77: lcmp
      78: ifle          88
      81: lconst_1
      82: invokestatic  #99                 // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
      85: goto          15
      88: aload_0
      89: getfield      #30                 // Field gatingSequenceCache:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      92: lload         10
      94: invokevirtual #77                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.set:(J)V
      97: goto          116
     100: aload_0
     101: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
     104: lload_2
     105: lload         4
     107: invokevirtual #103                // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.compareAndSet:(JJ)Z
     110: ifeq          116
     113: goto          119
     116: goto          15
     119: lload         4
     121: lreturn

  public long tryNext() throws co.elastic.apm.agent.shaded.lmax.disruptor.InsufficientCapacityException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #111                // Method tryNext:(I)J
       5: lreturn

  public long tryNext(int) throws co.elastic.apm.agent.shaded.lmax.disruptor.InsufficientCapacityException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #89                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #91                 // String n must be > 0
      11: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      19: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      22: lstore_2
      23: lload_2
      24: iload_1
      25: i2l
      26: ladd
      27: lstore        4
      29: aload_0
      30: aload_0
      31: getfield      #57                 // Field gatingSequences:[Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      34: iload_1
      35: lload_2
      36: invokespecial #67                 // Method hasAvailableCapacity:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;IJ)Z
      39: ifne          46
      42: getstatic     #115                // Field co/elastic/apm/agent/shaded/lmax/disruptor/InsufficientCapacityException.INSTANCE:Lco/elastic/apm/agent/shaded/lmax/disruptor/InsufficientCapacityException;
      45: athrow
      46: aload_0
      47: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      50: lload_2
      51: lload         4
      53: invokevirtual #103                // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.compareAndSet:(JJ)Z
      56: ifeq          15
      59: lload         4
      61: lreturn

  public long remainingCapacity();
    Code:
       0: aload_0
       1: getfield      #57                 // Field gatingSequences:[Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
       4: aload_0
       5: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
       8: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      11: invokestatic  #74                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/util/Util.getMinimumSequence:([Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;J)J
      14: lstore_1
      15: aload_0
      16: getfield      #60                 // Field cursor:Lco/elastic/apm/agent/shaded/lmax/disruptor/Sequence;
      19: invokevirtual #64                 // Method co/elastic/apm/agent/shaded/lmax/disruptor/Sequence.get:()J
      22: lstore_3
      23: aload_0
      24: invokevirtual #120                // Method getBufferSize:()I
      27: i2l
      28: lload_3
      29: lload_1
      30: lsub
      31: lsub
      32: lreturn

  private void initialiseAvailableBuffer();
    Code:
       0: aload_0
       1: getfield      #32                 // Field availableBuffer:[I
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_1
       8: iload_1
       9: ifeq          24
      12: aload_0
      13: iload_1
      14: iconst_m1
      15: invokespecial #126                // Method setAvailableBufferValue:(II)V
      18: iinc          1, -1
      21: goto          8
      24: aload_0
      25: iconst_0
      26: iconst_m1
      27: invokespecial #126                // Method setAvailableBufferValue:(II)V
      30: return

  public void publish(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #131                // Method setAvailable:(J)V
       5: aload_0
       6: getfield      #133                // Field waitStrategy:Lco/elastic/apm/agent/shaded/lmax/disruptor/WaitStrategy;
       9: invokeinterface #138,  1          // InterfaceMethod co/elastic/apm/agent/shaded/lmax/disruptor/WaitStrategy.signalAllWhenBlocking:()V
      14: return

  public void publish(long, long);
    Code:
       0: lload_1
       1: lstore        5
       3: lload         5
       5: lload_3
       6: lcmp
       7: ifgt          25
      10: aload_0
      11: lload         5
      13: invokespecial #131                // Method setAvailable:(J)V
      16: lload         5
      18: lconst_1
      19: ladd
      20: lstore        5
      22: goto          3
      25: aload_0
      26: getfield      #133                // Field waitStrategy:Lco/elastic/apm/agent/shaded/lmax/disruptor/WaitStrategy;
      29: invokeinterface #138,  1          // InterfaceMethod co/elastic/apm/agent/shaded/lmax/disruptor/WaitStrategy.signalAllWhenBlocking:()V
      34: return

  private void setAvailable(long);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokespecial #146                // Method calculateIndex:(J)I
       6: aload_0
       7: lload_1
       8: invokespecial #149                // Method calculateAvailabilityFlag:(J)I
      11: invokespecial #126                // Method setAvailableBufferValue:(II)V
      14: return

  private void setAvailableBufferValue(int, int);
    Code:
       0: iload_1
       1: i2l
       2: getstatic     #151                // Field SCALE:J
       5: lmul
       6: getstatic     #153                // Field BASE:J
       9: ladd
      10: lstore_3
      11: getstatic     #155                // Field UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getfield      #32                 // Field availableBuffer:[I
      18: lload_3
      19: iload_2
      20: invokevirtual #161                // Method sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
      23: return

  public boolean isAvailable(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #146                // Method calculateIndex:(J)I
       5: istore_3
       6: aload_0
       7: lload_1
       8: invokespecial #149                // Method calculateAvailabilityFlag:(J)I
      11: istore        4
      13: iload_3
      14: i2l
      15: getstatic     #151                // Field SCALE:J
      18: lmul
      19: getstatic     #153                // Field BASE:J
      22: ladd
      23: lstore        5
      25: getstatic     #155                // Field UNSAFE:Lsun/misc/Unsafe;
      28: aload_0
      29: getfield      #32                 // Field availableBuffer:[I
      32: lload         5
      34: invokevirtual #170                // Method sun/misc/Unsafe.getIntVolatile:(Ljava/lang/Object;J)I
      37: iload         4
      39: if_icmpne     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public long getHighestPublishedSequence(long, long);
    Code:
       0: lload_1
       1: lstore        5
       3: lload         5
       5: lload_3
       6: lcmp
       7: ifgt          33
      10: aload_0
      11: lload         5
      13: invokevirtual #174                // Method isAvailable:(J)Z
      16: ifne          24
      19: lload         5
      21: lconst_1
      22: lsub
      23: lreturn
      24: lload         5
      26: lconst_1
      27: ladd
      28: lstore        5
      30: goto          3
      33: lload_3
      34: lreturn

  private int calculateAvailabilityFlag(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #42                 // Field indexShift:I
       5: lushr
       6: l2i
       7: ireturn

  private int calculateIndex(long);
    Code:
       0: lload_1
       1: l2i
       2: aload_0
       3: getfield      #34                 // Field indexMask:I
       6: iand
       7: ireturn

  static {};
    Code:
       0: invokestatic  #181                // Method co/elastic/apm/agent/shaded/lmax/disruptor/util/Util.getUnsafe:()Lsun/misc/Unsafe;
       3: putstatic     #155                // Field UNSAFE:Lsun/misc/Unsafe;
       6: getstatic     #155                // Field UNSAFE:Lsun/misc/Unsafe;
       9: ldc           #182                // class "[I"
      11: invokevirtual #186                // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      14: i2l
      15: putstatic     #153                // Field BASE:J
      18: getstatic     #155                // Field UNSAFE:Lsun/misc/Unsafe;
      21: ldc           #182                // class "[I"
      23: invokevirtual #189                // Method sun/misc/Unsafe.arrayIndexScale:(Ljava/lang/Class;)I
      26: i2l
      27: putstatic     #151                // Field SCALE:J
      30: return
}
