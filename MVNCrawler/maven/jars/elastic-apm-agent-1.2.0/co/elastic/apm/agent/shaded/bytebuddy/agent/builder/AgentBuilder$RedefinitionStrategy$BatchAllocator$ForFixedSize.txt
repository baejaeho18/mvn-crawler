Compiled from "AgentBuilder.java"
public class co.elastic.apm.agent.shaded.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize implements co.elastic.apm.agent.shaded.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator {
  private final int size;

  protected co.elastic.apm.agent.shaded.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize(int);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #32                 // Field size:I
       9: return

  public static co.elastic.apm.agent.shaded.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator ofSize(int);
    Code:
       0: iload_0
       1: ifle          13
       4: new           #2                  // class co/elastic/apm/agent/shaded/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize
       7: dup
       8: iload_0
       9: invokespecial #38                 // Method "<init>":(I)V
      12: areturn
      13: iload_0
      14: ifne          21
      17: getstatic     #42                 // Field co/elastic/apm/agent/shaded/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal.INSTANCE:Lco/elastic/apm/agent/shaded/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForTotal;
      20: areturn
      21: new           #44                 // class java/lang/IllegalArgumentException
      24: dup
      25: new           #46                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #49                 // String Cannot define a batch with a negative size:
      34: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_0
      38: invokevirtual #56                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow

  public java.lang.Iterable<? extends java.util.List<java.lang.Class<?>>> batch(java.util.List<java.lang.Class<?>>);
    Code:
       0: new           #67                 // class java/util/ArrayList
       3: dup
       4: invokespecial #68                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
      17: if_icmpge     66
      20: aload_2
      21: new           #67                 // class java/util/ArrayList
      24: dup
      25: aload_1
      26: iload_3
      27: aload_1
      28: invokeinterface #73,  1           // InterfaceMethod java/util/List.size:()I
      33: iload_3
      34: aload_0
      35: getfield      #32                 // Field size:I
      38: iadd
      39: invokestatic  #79                 // Method java/lang/Math.min:(II)I
      42: invokeinterface #83,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      47: invokespecial #86                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      50: invokeinterface #90,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: iload_3
      57: aload_0
      58: getfield      #32                 // Field size:I
      61: iadd
      62: istore_3
      63: goto          10
      66: aload_2
      67: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #101                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #101                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #32                 // Field size:I
      30: aload_1
      31: checkcast     #2                  // class co/elastic/apm/agent/shaded/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$ForFixedSize
      34: getfield      #32                 // Field size:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: iconst_1
      43: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #32                 // Field size:I
       9: iadd
      10: ireturn
}
