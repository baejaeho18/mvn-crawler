Compiled from "SpmcAtomicArrayQueue.java"
public class co.elastic.apm.agent.shaded.jctools.queues.atomic.SpmcAtomicArrayQueue<E> extends co.elastic.apm.agent.shaded.jctools.queues.atomic.SpmcAtomicArrayQueueL3Pad<E> {
  public co.elastic.apm.agent.shaded.jctools.queues.atomic.SpmcAtomicArrayQueue(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #24                 // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpmcAtomicArrayQueueL3Pad."<init>":(I)V
       5: return

  public boolean offer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     13
       5: new           #33                 // class java/lang/NullPointerException
       8: dup
       9: invokespecial #36                 // Method java/lang/NullPointerException."<init>":()V
      12: athrow
      13: aload_0
      14: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      17: astore_2
      18: aload_0
      19: getfield      #43                 // Field mask:I
      22: istore_3
      23: aload_0
      24: invokevirtual #47                 // Method lvProducerIndex:()J
      27: lstore        4
      29: aload_0
      30: lload         4
      32: iload_3
      33: invokevirtual #51                 // Method calcElementOffset:(JI)I
      36: istore        6
      38: aconst_null
      39: aload_2
      40: iload         6
      42: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      45: if_acmpeq     80
      48: lload         4
      50: aload_0
      51: invokevirtual #58                 // Method lvConsumerIndex:()J
      54: lsub
      55: lstore        7
      57: lload         7
      59: iload_3
      60: i2l
      61: lcmp
      62: ifle          67
      65: iconst_0
      66: ireturn
      67: aconst_null
      68: aload_2
      69: iload         6
      71: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      74: if_acmpeq     80
      77: goto          67
      80: aload_2
      81: iload         6
      83: aload_1
      84: invokestatic  #66                 // Method spElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      87: aload_0
      88: lload         4
      90: lconst_1
      91: ladd
      92: invokevirtual #70                 // Method soProducerIndex:(J)V
      95: iconst_1
      96: ireturn

  public E poll();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method lvProducerIndexCache:()J
       4: lstore_3
       5: aload_0
       6: invokevirtual #58                 // Method lvConsumerIndex:()J
       9: lstore_1
      10: lload_1
      11: lload_3
      12: lcmp
      13: iflt          40
      16: aload_0
      17: invokevirtual #47                 // Method lvProducerIndex:()J
      20: lstore        5
      22: lload_1
      23: lload         5
      25: lcmp
      26: iflt          31
      29: aconst_null
      30: areturn
      31: lload         5
      33: lstore_3
      34: aload_0
      35: lload         5
      37: invokevirtual #86                 // Method svProducerIndexCache:(J)V
      40: aload_0
      41: lload_1
      42: lload_1
      43: lconst_1
      44: ladd
      45: invokevirtual #90                 // Method casConsumerIndex:(JJ)Z
      48: ifeq          5
      51: aload_0
      52: aload_0
      53: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      56: lload_1
      57: aload_0
      58: getfield      #43                 // Field mask:I
      61: invokespecial #94                 // Method removeElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;
      64: areturn

  private E removeElement(java.util.concurrent.atomic.AtomicReferenceArray<E>, long, int);
    Code:
       0: aload_0
       1: lload_2
       2: iload         4
       4: invokevirtual #51                 // Method calcElementOffset:(JI)I
       7: istore        5
       9: aload_1
      10: iload         5
      12: invokestatic  #99                 // Method lpElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      15: astore        6
      17: aload_1
      18: iload         5
      20: aconst_null
      21: invokestatic  #102                // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      24: aload         6
      26: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #43                 // Field mask:I
       4: istore_1
       5: aload_0
       6: invokevirtual #83                 // Method lvProducerIndexCache:()J
       9: lstore_2
      10: aload_0
      11: invokevirtual #58                 // Method lvConsumerIndex:()J
      14: lstore        4
      16: lload         4
      18: lload_2
      19: lcmp
      20: iflt          45
      23: aload_0
      24: invokevirtual #47                 // Method lvProducerIndex:()J
      27: lstore        7
      29: lload         4
      31: lload         7
      33: lcmp
      34: iflt          39
      37: aconst_null
      38: areturn
      39: aload_0
      40: lload         7
      42: invokevirtual #86                 // Method svProducerIndexCache:(J)V
      45: aconst_null
      46: aload_0
      47: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      50: aload_0
      51: lload         4
      53: iload_1
      54: invokevirtual #51                 // Method calcElementOffset:(JI)I
      57: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      60: dup
      61: astore        6
      63: if_acmpeq     10
      66: aload         6
      68: areturn

  public boolean relaxedOffer(E);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #33                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #107                // String Null is not a valid element
      11: invokespecial #110                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      19: astore_2
      20: aload_0
      21: getfield      #43                 // Field mask:I
      24: istore_3
      25: aload_0
      26: invokevirtual #47                 // Method lvProducerIndex:()J
      29: lstore        4
      31: aload_0
      32: lload         4
      34: iload_3
      35: invokevirtual #51                 // Method calcElementOffset:(JI)I
      38: istore        6
      40: aconst_null
      41: aload_2
      42: iload         6
      44: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      47: if_acmpeq     52
      50: iconst_0
      51: ireturn
      52: aload_2
      53: iload         6
      55: aload_1
      56: invokestatic  #66                 // Method spElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      59: aload_0
      60: lload         4
      62: lconst_1
      63: ladd
      64: invokevirtual #70                 // Method soProducerIndex:(J)V
      67: iconst_1
      68: ireturn

  public E relaxedPoll();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method poll:()Ljava/lang/Object;
       4: areturn

  public E relaxedPeek();
    Code:
       0: aload_0
       1: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_1
       5: aload_0
       6: getfield      #43                 // Field mask:I
       9: istore_2
      10: aload_0
      11: invokevirtual #58                 // Method lvConsumerIndex:()J
      14: lstore_3
      15: aload_1
      16: aload_0
      17: lload_3
      18: iload_2
      19: invokevirtual #51                 // Method calcElementOffset:(JI)I
      22: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      25: areturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>);
    Code:
       0: aload_0
       1: invokevirtual #121                // Method capacity:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     40
      12: iconst_0
      13: istore        4
      15: aload_0
      16: aload_1
      17: getstatic     #126                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_POLL_BATCH:I
      20: invokevirtual #129                // Method drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;I)I
      23: dup
      24: istore        4
      26: ifne          32
      29: goto          40
      32: iload_3
      33: iload         4
      35: iadd
      36: istore_3
      37: goto          7
      40: iload_3
      41: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #121                // Method capacity:()I
       6: invokevirtual #139                // Method fill:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier;I)I
       9: ireturn

  public int drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, int);
    Code:
       0: aload_0
       1: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_3
       5: aload_0
       6: getfield      #43                 // Field mask:I
       9: istore        4
      11: aload_0
      12: invokevirtual #83                 // Method lvProducerIndexCache:()J
      15: lstore        5
      17: iconst_0
      18: istore        7
      20: aload_0
      21: invokevirtual #58                 // Method lvConsumerIndex:()J
      24: lstore        8
      26: lload         8
      28: lload         5
      30: lcmp
      31: iflt          60
      34: aload_0
      35: invokevirtual #47                 // Method lvProducerIndex:()J
      38: lstore        10
      40: lload         8
      42: lload         10
      44: lcmp
      45: iflt          50
      48: iconst_0
      49: ireturn
      50: lload         10
      52: lstore        5
      54: aload_0
      55: lload         10
      57: invokevirtual #86                 // Method svProducerIndexCache:(J)V
      60: lload         5
      62: lload         8
      64: lsub
      65: l2i
      66: istore        10
      68: iload         10
      70: iload_2
      71: invokestatic  #148                // Method java/lang/Math.min:(II)I
      74: istore        7
      76: aload_0
      77: lload         8
      79: lload         8
      81: iload         7
      83: i2l
      84: ladd
      85: invokevirtual #90                 // Method casConsumerIndex:(JJ)Z
      88: ifeq          20
      91: iconst_0
      92: istore        10
      94: iload         10
      96: iload         7
      98: if_icmpge     126
     101: aload_1
     102: aload_0
     103: aload_3
     104: lload         8
     106: iload         10
     108: i2l
     109: ladd
     110: iload         4
     112: invokespecial #94                 // Method removeElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;JI)Ljava/lang/Object;
     115: invokeinterface #152,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer.accept:(Ljava/lang/Object;)V
     120: iinc          10, 1
     123: goto          94
     126: iload         7
     128: ireturn

  public int fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, int);
    Code:
       0: aload_0
       1: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore_3
       5: aload_0
       6: getfield      #43                 // Field mask:I
       9: istore        4
      11: aload_0
      12: getfield      #158                // Field producerIndex:J
      15: lstore        5
      17: iconst_0
      18: istore        7
      20: iload         7
      22: iload_2
      23: if_icmpge     79
      26: aload_0
      27: lload         5
      29: iload         4
      31: invokevirtual #51                 // Method calcElementOffset:(JI)I
      34: istore        8
      36: aconst_null
      37: aload_3
      38: iload         8
      40: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      43: if_acmpeq     49
      46: iload         7
      48: ireturn
      49: lload         5
      51: lconst_1
      52: ladd
      53: lstore        5
      55: aload_3
      56: iload         8
      58: aload_1
      59: invokeinterface #161,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
      64: invokestatic  #102                // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      67: aload_0
      68: lload         5
      70: invokevirtual #70                 // Method soProducerIndex:(J)V
      73: iinc          7, 1
      76: goto          20
      79: iload_2
      80: ireturn

  public void drain(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Consumer<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_3
       4: invokeinterface #166,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
       9: ifeq          42
      12: aload_0
      13: aload_1
      14: getstatic     #126                // Field co/elastic/apm/agent/shaded/jctools/util/PortableJvmInfo.RECOMENDED_POLL_BATCH:I
      17: invokevirtual #129                // Method drain:(Lco/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Consumer;I)I
      20: ifne          36
      23: aload_2
      24: iload         4
      26: invokeinterface #170,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      31: istore        4
      33: goto          3
      36: iconst_0
      37: istore        4
      39: goto          3
      42: return

  public void fill(co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$Supplier<E>, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$WaitStrategy, co.elastic.apm.agent.shaded.jctools.queues.MessagePassingQueue$ExitCondition);
    Code:
       0: aload_0
       1: getfield      #40                 // Field buffer:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: astore        4
       6: aload_0
       7: getfield      #43                 // Field mask:I
      10: istore        5
      12: aload_0
      13: getfield      #158                // Field producerIndex:J
      16: lstore        6
      18: iconst_0
      19: istore        8
      21: aload_3
      22: invokeinterface #166,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$ExitCondition.keepRunning:()Z
      27: ifeq          112
      30: iconst_0
      31: istore        9
      33: iload         9
      35: sipush        4096
      38: if_icmpge     109
      41: aload_0
      42: lload         6
      44: iload         5
      46: invokevirtual #51                 // Method calcElementOffset:(JI)I
      49: istore        10
      51: aconst_null
      52: aload         4
      54: iload         10
      56: invokestatic  #55                 // Method lvElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;I)Ljava/lang/Object;
      59: if_acmpeq     75
      62: aload_2
      63: iload         8
      65: invokeinterface #170,  2          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$WaitStrategy.idle:(I)I
      70: istore        8
      72: goto          103
      75: lload         6
      77: lconst_1
      78: ladd
      79: lstore        6
      81: iconst_0
      82: istore        8
      84: aload         4
      86: iload         10
      88: aload_1
      89: invokeinterface #161,  1          // InterfaceMethod co/elastic/apm/agent/shaded/jctools/queues/MessagePassingQueue$Supplier.get:()Ljava/lang/Object;
      94: invokestatic  #102                // Method soElement:(Ljava/util/concurrent/atomic/AtomicReferenceArray;ILjava/lang/Object;)V
      97: aload_0
      98: lload         6
     100: invokevirtual #70                 // Method soProducerIndex:(J)V
     103: iinc          9, 1
     106: goto          33
     109: goto          21
     112: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #180                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpmcAtomicArrayQueueL3Pad.clear:()V
       4: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #184                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpmcAtomicArrayQueueL3Pad.toString:()Ljava/lang/String;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokespecial #188                // Method co/elastic/apm/agent/shaded/jctools/queues/atomic/SpmcAtomicArrayQueueL3Pad.iterator:()Ljava/util/Iterator;
       4: areturn
}
