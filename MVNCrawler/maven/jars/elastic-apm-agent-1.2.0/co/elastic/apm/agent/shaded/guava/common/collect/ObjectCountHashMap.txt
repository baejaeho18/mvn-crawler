Compiled from "ObjectCountHashMap.java"
class co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap<K> {
  private static final int MAXIMUM_CAPACITY;

  static final float DEFAULT_LOAD_FACTOR;

  private static final long NEXT_MASK;

  private static final long HASH_MASK;

  static final int DEFAULT_SIZE;

  static final int UNSET;

  transient java.lang.Object[] keys;

  transient int[] values;

  transient int size;

  transient int modCount;

  private transient int[] table;

  transient long[] entries;

  private transient float loadFactor;

  private transient int threshold;

  public static <K> co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap<K> create();
    Code:
       0: new           #2                  // class co/elastic/apm/agent/shaded/guava/common/collect/ObjectCountHashMap
       3: dup
       4: invokespecial #53                 // Method "<init>":()V
       7: areturn

  public static <K> co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap<K> createWithExpectedSize(int);
    Code:
       0: new           #2                  // class co/elastic/apm/agent/shaded/guava/common/collect/ObjectCountHashMap
       3: dup
       4: iload_0
       5: invokespecial #58                 // Method "<init>":(I)V
       8: areturn

  co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_3
       6: fconst_1
       7: invokevirtual #64                 // Method init:(IF)V
      10: return

  co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap(co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap<? extends K>);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #71                 // Method size:()I
       9: fconst_1
      10: invokevirtual #64                 // Method init:(IF)V
      13: aload_1
      14: invokevirtual #74                 // Method firstIndex:()I
      17: istore_2
      18: iload_2
      19: iconst_m1
      20: if_icmpeq     47
      23: aload_0
      24: aload_1
      25: iload_2
      26: invokevirtual #78                 // Method getKey:(I)Ljava/lang/Object;
      29: aload_1
      30: iload_2
      31: invokevirtual #82                 // Method getValue:(I)I
      34: invokevirtual #86                 // Method put:(Ljava/lang/Object;I)I
      37: pop
      38: aload_1
      39: iload_2
      40: invokevirtual #89                 // Method nextIndex:(I)I
      43: istore_2
      44: goto          18
      47: return

  co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: fconst_1
       3: invokespecial #94                 // Method "<init>":(IF)V
       6: return

  co.elastic.apm.agent.shaded.guava.common.collect.ObjectCountHashMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: fload_2
       7: invokevirtual #64                 // Method init:(IF)V
      10: return

  void init(int, float);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #97                 // String Initial capacity must be non-negative
      11: invokestatic  #103                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: fload_2
      15: fconst_0
      16: fcmpl
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #105                // String Illegal load factor
      27: invokestatic  #103                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      30: iload_1
      31: fload_2
      32: f2d
      33: invokestatic  #111                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.closedTableSize:(ID)I
      36: istore_3
      37: aload_0
      38: iload_3
      39: invokestatic  #115                // Method newTable:(I)[I
      42: putfield      #117                // Field table:[I
      45: aload_0
      46: fload_2
      47: putfield      #119                // Field loadFactor:F
      50: aload_0
      51: iload_1
      52: anewarray     #5                  // class java/lang/Object
      55: putfield      #121                // Field keys:[Ljava/lang/Object;
      58: aload_0
      59: iload_1
      60: newarray       int
      62: putfield      #123                // Field values:[I
      65: aload_0
      66: iload_1
      67: invokestatic  #127                // Method newEntries:(I)[J
      70: putfield      #129                // Field entries:[J
      73: aload_0
      74: iconst_1
      75: iload_3
      76: i2f
      77: fload_2
      78: fmul
      79: f2i
      80: invokestatic  #135                // Method java/lang/Math.max:(II)I
      83: putfield      #137                // Field threshold:I
      86: return

  private static int[] newTable(int);
    Code:
       0: iload_0
       1: newarray       int
       3: astore_1
       4: aload_1
       5: iconst_m1
       6: invokestatic  #144                // Method java/util/Arrays.fill:([II)V
       9: aload_1
      10: areturn

  private static long[] newEntries(int);
    Code:
       0: iload_0
       1: newarray       long
       3: astore_1
       4: aload_1
       5: ldc2_w        #146                // long -1l
       8: invokestatic  #150                // Method java/util/Arrays.fill:([JJ)V
      11: aload_1
      12: areturn

  private int hashTableMask();
    Code:
       0: aload_0
       1: getfield      #117                // Field table:[I
       4: arraylength
       5: iconst_1
       6: isub
       7: ireturn

  int firstIndex();
    Code:
       0: aload_0
       1: getfield      #153                // Field size:I
       4: ifne          11
       7: iconst_m1
       8: goto          12
      11: iconst_0
      12: ireturn

  int nextIndex(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: aload_0
       4: getfield      #153                // Field size:I
       7: if_icmpge     16
      10: iload_1
      11: iconst_1
      12: iadd
      13: goto          17
      16: iconst_m1
      17: ireturn

  int nextIndexAfterRemove(int, int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: ireturn

  int size();
    Code:
       0: aload_0
       1: getfield      #153                // Field size:I
       4: ireturn

  K getKey(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #153                // Field size:I
       5: invokestatic  #160                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkElementIndex:(II)I
       8: pop
       9: aload_0
      10: getfield      #121                // Field keys:[Ljava/lang/Object;
      13: iload_1
      14: aaload
      15: areturn

  int getValue(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #153                // Field size:I
       5: invokestatic  #160                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkElementIndex:(II)I
       8: pop
       9: aload_0
      10: getfield      #123                // Field values:[I
      13: iload_1
      14: iaload
      15: ireturn

  void setValue(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #153                // Field size:I
       5: invokestatic  #160                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkElementIndex:(II)I
       8: pop
       9: aload_0
      10: getfield      #123                // Field values:[I
      13: iload_1
      14: iload_2
      15: iastore
      16: return

  co.elastic.apm.agent.shaded.guava.common.collect.Multiset$Entry<K> getEntry(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #153                // Field size:I
       5: invokestatic  #160                // Method co/elastic/apm/agent/shaded/guava/common/base/Preconditions.checkElementIndex:(II)I
       8: pop
       9: new           #12                 // class co/elastic/apm/agent/shaded/guava/common/collect/ObjectCountHashMap$MapEntry
      12: dup
      13: aload_0
      14: iload_1
      15: invokespecial #168                // Method co/elastic/apm/agent/shaded/guava/common/collect/ObjectCountHashMap$MapEntry."<init>":(Lco/elastic/apm/agent/shaded/guava/common/collect/ObjectCountHashMap;I)V
      18: areturn

  private static int getHash(long);
    Code:
       0: lload_0
       1: bipush        32
       3: lushr
       4: l2i
       5: ireturn

  private static int getNext(long);
    Code:
       0: lload_0
       1: l2i
       2: ireturn

  private static long swapNext(long, int);
    Code:
       0: ldc2_w        #30                 // long -4294967296l
       3: lload_0
       4: land
       5: ldc2_w        #27                 // long 4294967295l
       8: iload_2
       9: i2l
      10: land
      11: lor
      12: lreturn

  void ensureCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #129                // Field entries:[J
       5: arraylength
       6: if_icmple     14
       9: aload_0
      10: iload_1
      11: invokevirtual #179                // Method resizeEntries:(I)V
      14: iload_1
      15: aload_0
      16: getfield      #137                // Field threshold:I
      19: if_icmplt     40
      22: iconst_2
      23: iload_1
      24: iconst_1
      25: isub
      26: invokestatic  #184                // Method java/lang/Integer.highestOneBit:(I)I
      29: iconst_1
      30: ishl
      31: invokestatic  #135                // Method java/lang/Math.max:(II)I
      34: istore_2
      35: aload_0
      36: iload_2
      37: invokespecial #187                // Method resizeTable:(I)V
      40: return

  public int put(K, int);
    Code:
       0: iload_2
       1: ldc           #193                // String count
       3: invokestatic  #199                // Method co/elastic/apm/agent/shaded/guava/common/collect/CollectPreconditions.checkPositive:(ILjava/lang/String;)V
       6: aload_0
       7: getfield      #129                // Field entries:[J
      10: astore_3
      11: aload_0
      12: getfield      #121                // Field keys:[Ljava/lang/Object;
      15: astore        4
      17: aload_0
      18: getfield      #123                // Field values:[I
      21: astore        5
      23: aload_1
      24: invokestatic  #203                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
      27: istore        6
      29: iload         6
      31: aload_0
      32: invokespecial #205                // Method hashTableMask:()I
      35: iand
      36: istore        7
      38: aload_0
      39: getfield      #153                // Field size:I
      42: istore        8
      44: aload_0
      45: getfield      #117                // Field table:[I
      48: iload         7
      50: iaload
      51: istore        9
      53: iload         9
      55: iconst_m1
      56: if_icmpne     71
      59: aload_0
      60: getfield      #117                // Field table:[I
      63: iload         7
      65: iload         8
      67: iastore
      68: goto          143
      71: iload         9
      73: istore        10
      75: aload_3
      76: iload         9
      78: laload
      79: lstore        11
      81: lload         11
      83: invokestatic  #210                // Method getHash:(J)I
      86: iload         6
      88: if_icmpne     119
      91: aload_1
      92: aload         4
      94: iload         9
      96: aaload
      97: invokestatic  #216                // Method co/elastic/apm/agent/shaded/guava/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
     100: ifeq          119
     103: aload         5
     105: iload         9
     107: iaload
     108: istore        13
     110: aload         5
     112: iload         9
     114: iload_2
     115: iastore
     116: iload         13
     118: ireturn
     119: lload         11
     121: invokestatic  #218                // Method getNext:(J)I
     124: istore        9
     126: iload         9
     128: iconst_m1
     129: if_icmpne     71
     132: aload_3
     133: iload         10
     135: lload         11
     137: iload         8
     139: invokestatic  #220                // Method swapNext:(JI)J
     142: lastore
     143: iload         8
     145: ldc           #221                // int 2147483647
     147: if_icmpne     160
     150: new           #223                // class java/lang/IllegalStateException
     153: dup
     154: ldc           #225                // String Cannot contain more than Integer.MAX_VALUE elements!
     156: invokespecial #228                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: iload         8
     162: iconst_1
     163: iadd
     164: istore        10
     166: aload_0
     167: iload         10
     169: invokespecial #231                // Method resizeMeMaybe:(I)V
     172: aload_0
     173: iload         8
     175: aload_1
     176: iload_2
     177: iload         6
     179: invokevirtual #235                // Method insertEntry:(ILjava/lang/Object;II)V
     182: aload_0
     183: iload         10
     185: putfield      #153                // Field size:I
     188: iload         8
     190: aload_0
     191: getfield      #137                // Field threshold:I
     194: if_icmplt     208
     197: aload_0
     198: iconst_2
     199: aload_0
     200: getfield      #117                // Field table:[I
     203: arraylength
     204: imul
     205: invokespecial #187                // Method resizeTable:(I)V
     208: aload_0
     209: dup
     210: getfield      #237                // Field modCount:I
     213: iconst_1
     214: iadd
     215: putfield      #237                // Field modCount:I
     218: iconst_0
     219: ireturn

  void insertEntry(int, K, int, int);
    Code:
       0: aload_0
       1: getfield      #129                // Field entries:[J
       4: iload_1
       5: iload         4
       7: i2l
       8: bipush        32
      10: lshl
      11: ldc2_w        #27                 // long 4294967295l
      14: lor
      15: lastore
      16: aload_0
      17: getfield      #121                // Field keys:[Ljava/lang/Object;
      20: iload_1
      21: aload_2
      22: aastore
      23: aload_0
      24: getfield      #123                // Field values:[I
      27: iload_1
      28: iload_3
      29: iastore
      30: return

  private void resizeMeMaybe(int);
    Code:
       0: aload_0
       1: getfield      #129                // Field entries:[J
       4: arraylength
       5: istore_2
       6: iload_1
       7: iload_2
       8: if_icmple     38
      11: iload_2
      12: iconst_1
      13: iload_2
      14: iconst_1
      15: iushr
      16: invokestatic  #135                // Method java/lang/Math.max:(II)I
      19: iadd
      20: istore_3
      21: iload_3
      22: ifge          28
      25: ldc           #221                // int 2147483647
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmpeq     38
      33: aload_0
      34: iload_3
      35: invokevirtual #179                // Method resizeEntries:(I)V
      38: return

  void resizeEntries(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #121                // Field keys:[Ljava/lang/Object;
       5: iload_1
       6: invokestatic  #255                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
       9: putfield      #121                // Field keys:[Ljava/lang/Object;
      12: aload_0
      13: aload_0
      14: getfield      #123                // Field values:[I
      17: iload_1
      18: invokestatic  #258                // Method java/util/Arrays.copyOf:([II)[I
      21: putfield      #123                // Field values:[I
      24: aload_0
      25: getfield      #129                // Field entries:[J
      28: astore_2
      29: aload_2
      30: arraylength
      31: istore_3
      32: aload_2
      33: iload_1
      34: invokestatic  #261                // Method java/util/Arrays.copyOf:([JI)[J
      37: astore_2
      38: iload_1
      39: iload_3
      40: if_icmple     52
      43: aload_2
      44: iload_3
      45: iload_1
      46: ldc2_w        #146                // long -1l
      49: invokestatic  #264                // Method java/util/Arrays.fill:([JIIJ)V
      52: aload_0
      53: aload_2
      54: putfield      #129                // Field entries:[J
      57: return

  private void resizeTable(int);
    Code:
       0: aload_0
       1: getfield      #117                // Field table:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iload_3
       9: ldc           #21                 // int 1073741824
      11: if_icmplt     21
      14: aload_0
      15: ldc           #221                // int 2147483647
      17: putfield      #137                // Field threshold:I
      20: return
      21: iconst_1
      22: iload_1
      23: i2f
      24: aload_0
      25: getfield      #119                // Field loadFactor:F
      28: fmul
      29: f2i
      30: iadd
      31: istore        4
      33: iload_1
      34: invokestatic  #115                // Method newTable:(I)[I
      37: astore        5
      39: aload_0
      40: getfield      #129                // Field entries:[J
      43: astore        6
      45: aload         5
      47: arraylength
      48: iconst_1
      49: isub
      50: istore        7
      52: iconst_0
      53: istore        8
      55: iload         8
      57: aload_0
      58: getfield      #153                // Field size:I
      61: if_icmpge     124
      64: aload         6
      66: iload         8
      68: laload
      69: lstore        9
      71: lload         9
      73: invokestatic  #210                // Method getHash:(J)I
      76: istore        11
      78: iload         11
      80: iload         7
      82: iand
      83: istore        12
      85: aload         5
      87: iload         12
      89: iaload
      90: istore        13
      92: aload         5
      94: iload         12
      96: iload         8
      98: iastore
      99: aload         6
     101: iload         8
     103: iload         11
     105: i2l
     106: bipush        32
     108: lshl
     109: ldc2_w        #27                 // long 4294967295l
     112: iload         13
     114: i2l
     115: land
     116: lor
     117: lastore
     118: iinc          8, 1
     121: goto          55
     124: aload_0
     125: iload         4
     127: putfield      #137                // Field threshold:I
     130: aload_0
     131: aload         5
     133: putfield      #117                // Field table:[I
     136: return

  int indexOf(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #203                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
       4: istore_2
       5: aload_0
       6: getfield      #117                // Field table:[I
       9: iload_2
      10: aload_0
      11: invokespecial #205                // Method hashTableMask:()I
      14: iand
      15: iaload
      16: istore_3
      17: iload_3
      18: iconst_m1
      19: if_icmpeq     63
      22: aload_0
      23: getfield      #129                // Field entries:[J
      26: iload_3
      27: laload
      28: lstore        4
      30: lload         4
      32: invokestatic  #210                // Method getHash:(J)I
      35: iload_2
      36: if_icmpne     54
      39: aload_1
      40: aload_0
      41: getfield      #121                // Field keys:[Ljava/lang/Object;
      44: iload_3
      45: aaload
      46: invokestatic  #216                // Method co/elastic/apm/agent/shaded/guava/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: iload_3
      53: ireturn
      54: lload         4
      56: invokestatic  #218                // Method getNext:(J)I
      59: istore_3
      60: goto          17
      63: iconst_m1
      64: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #274                // Method indexOf:(Ljava/lang/Object;)I
       5: iconst_m1
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #274                // Method indexOf:(Ljava/lang/Object;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     15
      11: iconst_0
      12: goto          21
      15: aload_0
      16: getfield      #123                // Field values:[I
      19: iload_2
      20: iaload
      21: ireturn

  public int remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #203                // Method co/elastic/apm/agent/shaded/guava/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
       6: invokespecial #278                // Method remove:(Ljava/lang/Object;I)I
       9: ireturn

  private int remove(java.lang.Object, int);
    Code:
       0: iload_2
       1: aload_0
       2: invokespecial #205                // Method hashTableMask:()I
       5: iand
       6: istore_3
       7: aload_0
       8: getfield      #117                // Field table:[I
      11: iload_3
      12: iaload
      13: istore        4
      15: iload         4
      17: iconst_m1
      18: if_icmpne     23
      21: iconst_0
      22: ireturn
      23: iconst_m1
      24: istore        5
      26: aload_0
      27: getfield      #129                // Field entries:[J
      30: iload         4
      32: laload
      33: invokestatic  #210                // Method getHash:(J)I
      36: iload_2
      37: if_icmpne     144
      40: aload_1
      41: aload_0
      42: getfield      #121                // Field keys:[Ljava/lang/Object;
      45: iload         4
      47: aaload
      48: invokestatic  #216                // Method co/elastic/apm/agent/shaded/guava/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          144
      54: aload_0
      55: getfield      #123                // Field values:[I
      58: iload         4
      60: iaload
      61: istore        6
      63: iload         5
      65: iconst_m1
      66: if_icmpne     88
      69: aload_0
      70: getfield      #117                // Field table:[I
      73: iload_3
      74: aload_0
      75: getfield      #129                // Field entries:[J
      78: iload         4
      80: laload
      81: invokestatic  #218                // Method getNext:(J)I
      84: iastore
      85: goto          115
      88: aload_0
      89: getfield      #129                // Field entries:[J
      92: iload         5
      94: aload_0
      95: getfield      #129                // Field entries:[J
      98: iload         5
     100: laload
     101: aload_0
     102: getfield      #129                // Field entries:[J
     105: iload         4
     107: laload
     108: invokestatic  #218                // Method getNext:(J)I
     111: invokestatic  #220                // Method swapNext:(JI)J
     114: lastore
     115: aload_0
     116: iload         4
     118: invokevirtual #281                // Method moveLastEntry:(I)V
     121: aload_0
     122: dup
     123: getfield      #153                // Field size:I
     126: iconst_1
     127: isub
     128: putfield      #153                // Field size:I
     131: aload_0
     132: dup
     133: getfield      #237                // Field modCount:I
     136: iconst_1
     137: iadd
     138: putfield      #237                // Field modCount:I
     141: iload         6
     143: ireturn
     144: iload         4
     146: istore        5
     148: aload_0
     149: getfield      #129                // Field entries:[J
     152: iload         4
     154: laload
     155: invokestatic  #218                // Method getNext:(J)I
     158: istore        4
     160: iload         4
     162: iconst_m1
     163: if_icmpne     26
     166: iconst_0
     167: ireturn

  int removeEntry(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #121                // Field keys:[Ljava/lang/Object;
       5: iload_1
       6: aaload
       7: aload_0
       8: getfield      #129                // Field entries:[J
      11: iload_1
      12: laload
      13: invokestatic  #210                // Method getHash:(J)I
      16: invokespecial #278                // Method remove:(Ljava/lang/Object;I)I
      19: ireturn

  void moveLastEntry(int);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method size:()I
       4: iconst_1
       5: isub
       6: istore_2
       7: iload_1
       8: iload_2
       9: if_icmpge     151
      12: aload_0
      13: getfield      #121                // Field keys:[Ljava/lang/Object;
      16: iload_1
      17: aload_0
      18: getfield      #121                // Field keys:[Ljava/lang/Object;
      21: iload_2
      22: aaload
      23: aastore
      24: aload_0
      25: getfield      #123                // Field values:[I
      28: iload_1
      29: aload_0
      30: getfield      #123                // Field values:[I
      33: iload_2
      34: iaload
      35: iastore
      36: aload_0
      37: getfield      #121                // Field keys:[Ljava/lang/Object;
      40: iload_2
      41: aconst_null
      42: aastore
      43: aload_0
      44: getfield      #123                // Field values:[I
      47: iload_2
      48: iconst_0
      49: iastore
      50: aload_0
      51: getfield      #129                // Field entries:[J
      54: iload_2
      55: laload
      56: lstore_3
      57: aload_0
      58: getfield      #129                // Field entries:[J
      61: iload_1
      62: lload_3
      63: lastore
      64: aload_0
      65: getfield      #129                // Field entries:[J
      68: iload_2
      69: ldc2_w        #146                // long -1l
      72: lastore
      73: lload_3
      74: invokestatic  #210                // Method getHash:(J)I
      77: aload_0
      78: invokespecial #205                // Method hashTableMask:()I
      81: iand
      82: istore        5
      84: aload_0
      85: getfield      #117                // Field table:[I
      88: iload         5
      90: iaload
      91: istore        6
      93: iload         6
      95: iload_2
      96: if_icmpne     110
      99: aload_0
     100: getfield      #117                // Field table:[I
     103: iload         5
     105: iload_1
     106: iastore
     107: goto          148
     110: iload         6
     112: istore        7
     114: aload_0
     115: getfield      #129                // Field entries:[J
     118: iload         6
     120: laload
     121: dup2
     122: lstore        8
     124: invokestatic  #218                // Method getNext:(J)I
     127: istore        6
     129: iload         6
     131: iload_2
     132: if_icmpne     110
     135: aload_0
     136: getfield      #129                // Field entries:[J
     139: iload         7
     141: lload         8
     143: iload_1
     144: invokestatic  #220                // Method swapNext:(JI)J
     147: lastore
     148: goto          174
     151: aload_0
     152: getfield      #121                // Field keys:[Ljava/lang/Object;
     155: iload_1
     156: aconst_null
     157: aastore
     158: aload_0
     159: getfield      #123                // Field values:[I
     162: iload_1
     163: iconst_0
     164: iastore
     165: aload_0
     166: getfield      #129                // Field entries:[J
     169: iload_1
     170: ldc2_w        #146                // long -1l
     173: lastore
     174: return

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #237                // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #237                // Field modCount:I
      10: aload_0
      11: getfield      #121                // Field keys:[Ljava/lang/Object;
      14: iconst_0
      15: aload_0
      16: getfield      #153                // Field size:I
      19: aconst_null
      20: invokestatic  #291                // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      23: aload_0
      24: getfield      #123                // Field values:[I
      27: iconst_0
      28: aload_0
      29: getfield      #153                // Field size:I
      32: iconst_0
      33: invokestatic  #294                // Method java/util/Arrays.fill:([IIII)V
      36: aload_0
      37: getfield      #117                // Field table:[I
      40: iconst_m1
      41: invokestatic  #144                // Method java/util/Arrays.fill:([II)V
      44: aload_0
      45: getfield      #129                // Field entries:[J
      48: ldc2_w        #146                // long -1l
      51: invokestatic  #150                // Method java/util/Arrays.fill:([JJ)V
      54: aload_0
      55: iconst_0
      56: putfield      #153                // Field size:I
      59: return
}
