Compiled from "ClassLoadingStrategy.java"
public class co.elastic.apm.agent.shaded.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection implements co.elastic.apm.agent.shaded.bytebuddy.dynamic.loading.ClassLoadingStrategy<java.lang.ClassLoader> {
  private final java.security.ProtectionDomain protectionDomain;

  public co.elastic.apm.agent.shaded.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection();
    Code:
       0: aload_0
       1: getstatic     #37                 // Field NO_PROTECTION_DOMAIN:Ljava/security/ProtectionDomain;
       4: invokespecial #40                 // Method "<init>":(Ljava/security/ProtectionDomain;)V
       7: return

  public co.elastic.apm.agent.shaded.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection(java.security.ProtectionDomain);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #46                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: return

  public java.util.Map<co.elastic.apm.agent.shaded.bytebuddy.description.type.TypeDescription, java.lang.Class<?>> load(java.lang.ClassLoader, java.util.Map<co.elastic.apm.agent.shaded.bytebuddy.description.type.TypeDescription, byte[]>);
    Code:
       0: new           #22                 // class co/elastic/apm/agent/shaded/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #46                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: invokespecial #51                 // Method co/elastic/apm/agent/shaded/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe."<init>":(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
      12: aload_2
      13: invokevirtual #55                 // Method co/elastic/apm/agent/shaded/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe.inject:(Ljava/util/Map;)Ljava/util/Map;
      16: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #66                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #46                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      30: aload_1
      31: checkcast     #2                  // class co/elastic/apm/agent/shaded/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForUnsafeInjection
      34: getfield      #46                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      37: astore_2
      38: astore_3
      39: aload_3
      40: aload_2
      41: ifnull        60
      44: ifnull        63
      47: aload_3
      48: aload_2
      49: invokevirtual #70                 // Method java/security/ProtectionDomain.equals:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: goto          65
      60: ifnull        65
      63: iconst_0
      64: ireturn
      65: iconst_1
      66: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: bipush        31
       4: imul
       5: aload_0
       6: getfield      #46                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: astore_1
      10: aload_1
      11: ifnull        19
      14: aload_1
      15: invokevirtual #74                 // Method java/security/ProtectionDomain.hashCode:()I
      18: iadd
      19: ireturn
}
