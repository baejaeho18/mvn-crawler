Compiled from "IntakeV2ReportingEventHandler.java"
class co.elastic.apm.agent.report.IntakeV2ReportingEventHandler$FlushOnTimeoutTimerTask extends java.util.TimerTask {
  private final co.elastic.apm.agent.report.ApmServerReporter reporter;

  private volatile java.util.concurrent.Future<java.lang.Void> flush;

  private co.elastic.apm.agent.report.IntakeV2ReportingEventHandler$FlushOnTimeoutTimerTask(co.elastic.apm.agent.report.ApmServerReporter);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/util/TimerTask."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #23                 // Field reporter:Lco/elastic/apm/agent/report/ApmServerReporter;
       9: return

  public void run();
    Code:
       0: invokestatic  #30                 // Method co/elastic/apm/agent/report/IntakeV2ReportingEventHandler.access$100:()Lco/elastic/apm/agent/shaded/slf4j/Logger;
       3: ldc           #32                 // String Request flush because the request timeout occurred
       5: invokeinterface #38,  2           // InterfaceMethod co/elastic/apm/agent/shaded/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: aload_0
      12: getfield      #23                 // Field reporter:Lco/elastic/apm/agent/report/ApmServerReporter;
      15: invokevirtual #43                 // Method co/elastic/apm/agent/report/ApmServerReporter.flush:()Ljava/util/concurrent/Future;
      18: putfield      #45                 // Field flush:Ljava/util/concurrent/Future;
      21: return

  public boolean cancel();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method java/util/TimerTask.cancel:()Z
       4: istore_1
       5: aload_0
       6: getfield      #45                 // Field flush:Ljava/util/concurrent/Future;
       9: astore_2
      10: aload_2
      11: ifnull        22
      14: aload_2
      15: iconst_0
      16: invokeinterface #54,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      21: pop
      22: iload_1
      23: ireturn

  co.elastic.apm.agent.report.IntakeV2ReportingEventHandler$FlushOnTimeoutTimerTask(co.elastic.apm.agent.report.ApmServerReporter, co.elastic.apm.agent.report.IntakeV2ReportingEventHandler$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method "<init>":(Lco/elastic/apm/agent/report/ApmServerReporter;)V
       5: return
}
