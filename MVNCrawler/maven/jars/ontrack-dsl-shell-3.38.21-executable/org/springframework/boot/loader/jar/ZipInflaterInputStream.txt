Compiled from "ZipInflaterInputStream.java"
class org.springframework.boot.loader.jar.ZipInflaterInputStream extends java.util.zip.InflaterInputStream {
  private int available;

  private boolean extraBytesWritten;

  org.springframework.boot.loader.jar.ZipInflaterInputStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/zip/Inflater
       5: dup
       6: iconst_1
       7: invokespecial #2                  // Method java/util/zip/Inflater."<init>":(Z)V
      10: iload_2
      11: invokespecial #3                  // Method "<init>":(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V
      14: return

  private org.springframework.boot.loader.jar.ZipInflaterInputStream(java.io.InputStream, java.util.zip.Inflater, int);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class java/util/zip/Inflater
       5: dup
       6: iconst_1
       7: invokespecial #2                  // Method java/util/zip/Inflater."<init>":(Z)V
      10: iload_3
      11: i2l
      12: invokestatic  #4                  // Method getInflaterBufferSize:(J)I
      15: invokespecial #5                  // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V
      18: aload_0
      19: iload_3
      20: putfield      #6                  // Field available:I
      23: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field available:I
       4: ifge          12
       7: aload_0
       8: invokespecial #7                  // Method java/util/zip/InflaterInputStream.available:()I
      11: ireturn
      12: aload_0
      13: getfield      #6                  // Field available:I
      16: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #8                  // Method java/util/zip/InflaterInputStream.read:([BII)I
       7: istore        4
       9: iload         4
      11: iconst_m1
      12: if_icmpeq     26
      15: aload_0
      16: dup
      17: getfield      #6                  // Field available:I
      20: iload         4
      22: isub
      23: putfield      #6                  // Field available:I
      26: iload         4
      28: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/util/zip/InflaterInputStream.close:()V
       4: aload_0
       5: getfield      #10                 // Field inf:Ljava/util/zip/Inflater;
       8: invokevirtual #11                 // Method java/util/zip/Inflater.end:()V
      11: return

  protected void fill() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/util/zip/InflaterInputStream.fill:()V
       4: goto          50
       7: astore_1
       8: aload_0
       9: getfield      #14                 // Field extraBytesWritten:Z
      12: ifeq          17
      15: aload_1
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #15                 // Field len:I
      22: aload_0
      23: getfield      #16                 // Field buf:[B
      26: iconst_0
      27: iconst_0
      28: bastore
      29: aload_0
      30: iconst_1
      31: putfield      #14                 // Field extraBytesWritten:Z
      34: aload_0
      35: getfield      #10                 // Field inf:Ljava/util/zip/Inflater;
      38: aload_0
      39: getfield      #16                 // Field buf:[B
      42: iconst_0
      43: aload_0
      44: getfield      #15                 // Field len:I
      47: invokevirtual #17                 // Method java/util/zip/Inflater.setInput:([BII)V
      50: return
    Exception table:
       from    to  target type
           0     4     7   Class java/io/EOFException

  private static int getInflaterBufferSize(long);
    Code:
       0: lload_0
       1: ldc2_w        #18                 // long 2l
       4: ladd
       5: lstore_0
       6: lload_0
       7: ldc2_w        #20                 // long 65536l
      10: lcmp
      11: ifle          20
      14: ldc2_w        #22                 // long 8192l
      17: goto          21
      20: lload_0
      21: lstore_0
      22: lload_0
      23: lconst_0
      24: lcmp
      25: ifgt          34
      28: ldc2_w        #24                 // long 4096l
      31: goto          35
      34: lload_0
      35: lstore_0
      36: lload_0
      37: l2i
      38: ireturn
}
