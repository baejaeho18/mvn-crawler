Compiled from "ExplodedArchive.java"
public class org.springframework.boot.loader.archive.ExplodedArchive implements org.springframework.boot.loader.archive.Archive {
  private static final java.util.Set<java.lang.String> SKIPPED_NAMES;

  private final java.io.File root;

  private final boolean recursive;

  private java.io.File manifestFile;

  private java.util.jar.Manifest manifest;

  public org.springframework.boot.loader.archive.ExplodedArchive(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #2                  // Method "<init>":(Ljava/io/File;Z)V
       6: return

  public org.springframework.boot.loader.archive.ExplodedArchive(java.io.File, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #4                  // Method java/io/File.exists:()Z
       8: ifeq          18
      11: aload_1
      12: invokevirtual #5                  // Method java/io/File.isDirectory:()Z
      15: ifne          45
      18: new           #6                  // class java/lang/IllegalArgumentException
      21: dup
      22: new           #7                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #9                  // String Invalid source folder
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: putfield      #14                 // Field root:Ljava/io/File;
      50: aload_0
      51: iload_2
      52: putfield      #15                 // Field recursive:Z
      55: aload_0
      56: aload_0
      57: aload_1
      58: invokespecial #16                 // Method getManifestFile:(Ljava/io/File;)Ljava/io/File;
      61: putfield      #17                 // Field manifestFile:Ljava/io/File;
      64: return

  private java.io.File getManifestFile(java.io.File);
    Code:
       0: new           #18                 // class java/io/File
       3: dup
       4: aload_1
       5: ldc           #19                 // String META-INF
       7: invokespecial #20                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      10: astore_2
      11: new           #18                 // class java/io/File
      14: dup
      15: aload_2
      16: ldc           #21                 // String MANIFEST.MF
      18: invokespecial #20                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      21: areturn

  public java.net.URL getUrl() throws java.net.MalformedURLException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field root:Ljava/io/File;
       4: invokevirtual #22                 // Method java/io/File.toURI:()Ljava/net/URI;
       7: invokevirtual #23                 // Method java/net/URI.toURL:()Ljava/net/URL;
      10: areturn

  public java.util.jar.Manifest getManifest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field manifest:Ljava/util/jar/Manifest;
       4: ifnonnull     55
       7: aload_0
       8: getfield      #17                 // Field manifestFile:Ljava/io/File;
      11: invokevirtual #4                  // Method java/io/File.exists:()Z
      14: ifeq          55
      17: new           #25                 // class java/io/FileInputStream
      20: dup
      21: aload_0
      22: getfield      #17                 // Field manifestFile:Ljava/io/File;
      25: invokespecial #26                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      28: astore_1
      29: aload_0
      30: new           #27                 // class java/util/jar/Manifest
      33: dup
      34: aload_1
      35: invokespecial #28                 // Method java/util/jar/Manifest."<init>":(Ljava/io/InputStream;)V
      38: putfield      #24                 // Field manifest:Ljava/util/jar/Manifest;
      41: aload_1
      42: invokevirtual #29                 // Method java/io/FileInputStream.close:()V
      45: goto          55
      48: astore_2
      49: aload_1
      50: invokevirtual #29                 // Method java/io/FileInputStream.close:()V
      53: aload_2
      54: athrow
      55: aload_0
      56: getfield      #24                 // Field manifest:Ljava/util/jar/Manifest;
      59: areturn
    Exception table:
       from    to  target type
          29    41    48   any

  public java.util.List<org.springframework.boot.loader.archive.Archive> getNestedArchives(org.springframework.boot.loader.archive.Archive$EntryFilter) throws java.io.IOException;
    Code:
       0: new           #30                 // class java/util/ArrayList
       3: dup
       4: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #32                 // Method iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          60
      22: aload_3
      23: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #35                 // class org/springframework/boot/loader/archive/Archive$Entry
      31: astore        4
      33: aload_1
      34: aload         4
      36: invokeinterface #36,  2           // InterfaceMethod org/springframework/boot/loader/archive/Archive$EntryFilter.matches:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Z
      41: ifeq          57
      44: aload_2
      45: aload_0
      46: aload         4
      48: invokevirtual #37                 // Method getNestedArchive:(Lorg/springframework/boot/loader/archive/Archive$Entry;)Lorg/springframework/boot/loader/archive/Archive;
      51: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          13
      60: aload_2
      61: invokestatic  #39                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      64: areturn

  public java.util.Iterator<org.springframework.boot.loader.archive.Archive$Entry> iterator();
    Code:
       0: new           #40                 // class org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator
       3: dup
       4: aload_0
       5: getfield      #14                 // Field root:Ljava/io/File;
       8: aload_0
       9: getfield      #15                 // Field recursive:Z
      12: invokespecial #41                 // Method org/springframework/boot/loader/archive/ExplodedArchive$FileEntryIterator."<init>":(Ljava/io/File;Z)V
      15: areturn

  protected org.springframework.boot.loader.archive.Archive getNestedArchive(org.springframework.boot.loader.archive.Archive$Entry) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #42                 // class org/springframework/boot/loader/archive/ExplodedArchive$FileEntry
       4: invokevirtual #43                 // Method org/springframework/boot/loader/archive/ExplodedArchive$FileEntry.getFile:()Ljava/io/File;
       7: astore_2
       8: aload_2
       9: invokevirtual #5                  // Method java/io/File.isDirectory:()Z
      12: ifeq          26
      15: new           #44                 // class org/springframework/boot/loader/archive/ExplodedArchive
      18: dup
      19: aload_2
      20: invokespecial #45                 // Method "<init>":(Ljava/io/File;)V
      23: goto          34
      26: new           #46                 // class org/springframework/boot/loader/archive/JarFileArchive
      29: dup
      30: aload_2
      31: invokespecial #47                 // Method org/springframework/boot/loader/archive/JarFileArchive."<init>":(Ljava/io/File;)V
      34: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getUrl:()Ljava/net/URL;
       4: invokevirtual #49                 // Method java/net/URL.toString:()Ljava/lang/String;
       7: areturn
       8: astore_1
       9: ldc           #51                 // String exploded archive
      11: areturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  static java.util.Set access$100();
    Code:
       0: getstatic     #1                  // Field SKIPPED_NAMES:Ljava/util/Set;
       3: areturn

  static {};
    Code:
       0: new           #52                 // class java/util/HashSet
       3: dup
       4: iconst_2
       5: anewarray     #53                 // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #54                 // String .
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #55                 // String ..
      17: aastore
      18: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #57                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: putstatic     #1                  // Field SKIPPED_NAMES:Ljava/util/Set;
      27: return
}
