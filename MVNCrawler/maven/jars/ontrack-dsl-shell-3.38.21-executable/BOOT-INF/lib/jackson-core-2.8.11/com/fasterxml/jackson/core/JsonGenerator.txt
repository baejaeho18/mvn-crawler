Compiled from "JsonGenerator.java"
public abstract class com.fasterxml.jackson.core.JsonGenerator implements java.io.Closeable,java.io.Flushable,com.fasterxml.jackson.core.Versioned {
  protected com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter;

  protected com.fasterxml.jackson.core.JsonGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec);

  public abstract com.fasterxml.jackson.core.ObjectCodec getCodec();

  public abstract com.fasterxml.jackson.core.Version version();

  public abstract com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature);

  public abstract com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature);

  public final com.fasterxml.jackson.core.JsonGenerator configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean);
    Code:
       0: iload_2
       1: ifeq          13
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;
       9: pop
      10: goto          19
      13: aload_0
      14: aload_1
      15: invokevirtual #3                  // Method disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;
      18: pop
      19: aload_0
      20: areturn

  public abstract boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature);

  public abstract int getFeatureMask();

  public abstract com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int);

  public com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getFeatureMask:()I
       4: istore_3
       5: iload_3
       6: iload_2
       7: iconst_m1
       8: ixor
       9: iand
      10: iload_1
      11: iload_2
      12: iand
      13: ior
      14: istore        4
      16: aload_0
      17: iload         4
      19: invokevirtual #5                  // Method setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;
      22: areturn

  public int getFormatFeatures();
    Code:
       0: iconst_0
       1: ireturn

  public com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int, int);
    Code:
       0: new           #6                  // class java/lang/IllegalArgumentException
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #9                  // String No FormatFeatures defined for generator of type
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow

  public void setSchema(com.fasterxml.jackson.core.FormatSchema);
    Code:
       0: new           #15                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #16                 // String Generator of type
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #17                 // String  does not support schema of type \'
      28: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokeinterface #18,  1           // InterfaceMethod com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #19                 // String \'
      42: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      51: athrow

  public com.fasterxml.jackson.core.FormatSchema getSchema();
    Code:
       0: aconst_null
       1: areturn

  public com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;
       5: aload_0
       6: areturn

  public com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter();
    Code:
       0: aload_0
       1: getfield      #21                 // Field _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;
       4: areturn

  public abstract com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter();

  public com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int);
    Code:
       0: aload_0
       1: areturn

  public int getHighestEscapedChar();
    Code:
       0: iconst_0
       1: ireturn

  public com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes();
    Code:
       0: aconst_null
       1: areturn

  public com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes);
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString);
    Code:
       0: new           #15                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #22                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object getOutputTarget();
    Code:
       0: aconst_null
       1: areturn

  public int getOutputBuffered();
    Code:
       0: iconst_m1
       1: ireturn

  public java.lang.Object getCurrentValue();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #24                 // Method com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;
      17: areturn

  public void setCurrentValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;
       4: astore_2
       5: aload_2
       6: ifnull        14
       9: aload_2
      10: aload_1
      11: invokevirtual #25                 // Method com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V
      14: return

  public boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema);
    Code:
       0: iconst_0
       1: ireturn

  public boolean canWriteObjectId();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canWriteTypeId();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canWriteBinaryNatively();
    Code:
       0: iconst_0
       1: ireturn

  public boolean canOmitFields();
    Code:
       0: iconst_1
       1: ireturn

  public boolean canWriteFormattedNumbers();
    Code:
       0: iconst_0
       1: ireturn

  public abstract void writeStartArray() throws java.io.IOException;

  public void writeStartArray(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method writeStartArray:()V
       4: return

  public abstract void writeEndArray() throws java.io.IOException;

  public abstract void writeStartObject() throws java.io.IOException;

  public void writeStartObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method writeStartObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #28                 // Method setCurrentValue:(Ljava/lang/Object;)V
       9: return

  public abstract void writeEndObject() throws java.io.IOException;

  public abstract void writeFieldName(java.lang.String) throws java.io.IOException;

  public abstract void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;

  public void writeFieldId(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #29                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       5: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       8: return

  public void writeArray(int[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #31                 // String null array
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: iload_3
      19: invokevirtual #32                 // Method _verifyOffsets:(III)V
      22: aload_0
      23: invokevirtual #26                 // Method writeStartArray:()V
      26: iload_2
      27: istore        4
      29: iload_2
      30: iload_3
      31: iadd
      32: istore        5
      34: iload         4
      36: iload         5
      38: if_icmpge     55
      41: aload_0
      42: aload_1
      43: iload         4
      45: iaload
      46: invokevirtual #33                 // Method writeNumber:(I)V
      49: iinc          4, 1
      52: goto          34
      55: aload_0
      56: invokevirtual #34                 // Method writeEndArray:()V
      59: return

  public void writeArray(long[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #31                 // String null array
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: iload_3
      19: invokevirtual #32                 // Method _verifyOffsets:(III)V
      22: aload_0
      23: invokevirtual #26                 // Method writeStartArray:()V
      26: iload_2
      27: istore        4
      29: iload_2
      30: iload_3
      31: iadd
      32: istore        5
      34: iload         4
      36: iload         5
      38: if_icmpge     55
      41: aload_0
      42: aload_1
      43: iload         4
      45: laload
      46: invokevirtual #35                 // Method writeNumber:(J)V
      49: iinc          4, 1
      52: goto          34
      55: aload_0
      56: invokevirtual #34                 // Method writeEndArray:()V
      59: return

  public void writeArray(double[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #31                 // String null array
      10: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: iload_3
      19: invokevirtual #32                 // Method _verifyOffsets:(III)V
      22: aload_0
      23: invokevirtual #26                 // Method writeStartArray:()V
      26: iload_2
      27: istore        4
      29: iload_2
      30: iload_3
      31: iadd
      32: istore        5
      34: iload         4
      36: iload         5
      38: if_icmpge     55
      41: aload_0
      42: aload_1
      43: iload         4
      45: daload
      46: invokevirtual #36                 // Method writeNumber:(D)V
      49: iinc          4, 1
      52: goto          34
      55: aload_0
      56: invokevirtual #34                 // Method writeEndArray:()V
      59: return

  public abstract void writeString(java.lang.String) throws java.io.IOException;

  public abstract void writeString(char[], int, int) throws java.io.IOException;

  public abstract void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;

  public abstract void writeRawUTF8String(byte[], int, int) throws java.io.IOException;

  public abstract void writeUTF8String(byte[], int, int) throws java.io.IOException;

  public abstract void writeRaw(java.lang.String) throws java.io.IOException;

  public abstract void writeRaw(java.lang.String, int, int) throws java.io.IOException;

  public abstract void writeRaw(char[], int, int) throws java.io.IOException;

  public abstract void writeRaw(char) throws java.io.IOException;

  public void writeRaw(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #37,  1           // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;
       7: invokevirtual #38                 // Method writeRaw:(Ljava/lang/String;)V
      10: return

  public abstract void writeRawValue(java.lang.String) throws java.io.IOException;

  public abstract void writeRawValue(java.lang.String, int, int) throws java.io.IOException;

  public abstract void writeRawValue(char[], int, int) throws java.io.IOException;

  public void writeRawValue(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #37,  1           // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;
       7: invokevirtual #39                 // Method writeRawValue:(Ljava/lang/String;)V
      10: return

  public abstract void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException;

  public void writeBinary(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #41                 // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V
      10: return

  public void writeBinary(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;
       4: aload_1
       5: iconst_0
       6: aload_1
       7: arraylength
       8: invokevirtual #41                 // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V
      11: return

  public int writeBinary(java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;
       4: aload_1
       5: iload_2
       6: invokevirtual #42                 // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I
       9: ireturn

  public abstract int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException;

  public void writeNumber(short) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #33                 // Method writeNumber:(I)V
       5: return

  public abstract void writeNumber(int) throws java.io.IOException;

  public abstract void writeNumber(long) throws java.io.IOException;

  public abstract void writeNumber(java.math.BigInteger) throws java.io.IOException;

  public abstract void writeNumber(double) throws java.io.IOException;

  public abstract void writeNumber(float) throws java.io.IOException;

  public abstract void writeNumber(java.math.BigDecimal) throws java.io.IOException;

  public abstract void writeNumber(java.lang.String) throws java.io.IOException;

  public abstract void writeBoolean(boolean) throws java.io.IOException;

  public abstract void writeNull() throws java.io.IOException;

  public void writeEmbeddedObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #43                 // Method writeNull:()V
       8: return
       9: aload_1
      10: instanceof    #44                 // class "[B"
      13: ifeq          28
      16: aload_0
      17: aload_1
      18: checkcast     #44                 // class "[B"
      21: checkcast     #44                 // class "[B"
      24: invokevirtual #45                 // Method writeBinary:([B)V
      27: return
      28: new           #46                 // class com/fasterxml/jackson/core/JsonGenerationException
      31: dup
      32: new           #7                  // class java/lang/StringBuilder
      35: dup
      36: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #47                 // String No native support for writing embedded objects of type
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload_0
      58: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonGenerationException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      61: athrow

  public void writeObjectId(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #46                 // class com/fasterxml/jackson/core/JsonGenerationException
       3: dup
       4: ldc           #49                 // String No native support for writing Object Ids
       6: aload_0
       7: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonGenerationException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      10: athrow

  public void writeObjectRef(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #46                 // class com/fasterxml/jackson/core/JsonGenerationException
       3: dup
       4: ldc           #49                 // String No native support for writing Object Ids
       6: aload_0
       7: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonGenerationException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      10: athrow

  public void writeTypeId(java.lang.Object) throws java.io.IOException;
    Code:
       0: new           #46                 // class com/fasterxml/jackson/core/JsonGenerationException
       3: dup
       4: ldc           #50                 // String No native support for writing Type Ids
       6: aload_0
       7: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonGenerationException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      10: athrow

  public abstract void writeObject(java.lang.Object) throws java.io.IOException;

  public abstract void writeTree(com.fasterxml.jackson.core.TreeNode) throws java.io.IOException;

  public void writeStringField(java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #51                 // Method writeString:(Ljava/lang/String;)V
      10: return

  public final void writeBooleanField(java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: invokevirtual #52                 // Method writeBoolean:(Z)V
      10: return

  public final void writeNullField(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #43                 // Method writeNull:()V
       9: return

  public final void writeNumberField(java.lang.String, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: invokevirtual #33                 // Method writeNumber:(I)V
      10: return

  public final void writeNumberField(java.lang.String, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: lload_2
       7: invokevirtual #35                 // Method writeNumber:(J)V
      10: return

  public final void writeNumberField(java.lang.String, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: dload_2
       7: invokevirtual #36                 // Method writeNumber:(D)V
      10: return

  public final void writeNumberField(java.lang.String, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: fload_2
       7: invokevirtual #53                 // Method writeNumber:(F)V
      10: return

  public final void writeNumberField(java.lang.String, java.math.BigDecimal) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #54                 // Method writeNumber:(Ljava/math/BigDecimal;)V
      10: return

  public final void writeBinaryField(java.lang.String, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #45                 // Method writeBinary:([B)V
      10: return

  public final void writeArrayFieldStart(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #26                 // Method writeStartArray:()V
       9: return

  public final void writeObjectFieldStart(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #27                 // Method writeStartObject:()V
       9: return

  public final void writeObjectField(java.lang.String, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #55                 // Method writeObject:(Ljava/lang/Object;)V
      10: return

  public void writeOmittedField(java.lang.String) throws java.io.IOException;
    Code:
       0: return

  public void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: astore_2
       5: aload_2
       6: ifnonnull     15
       9: aload_0
      10: ldc           #57                 // String No current event to copy
      12: invokevirtual #58                 // Method _reportError:(Ljava/lang/String;)V
      15: aload_2
      16: invokevirtual #59                 // Method com/fasterxml/jackson/core/JsonToken.id:()I
      19: tableswitch   { // -1 to 12
                    -1: 88
                     0: 311
                     1: 97
                     2: 104
                     3: 111
                     4: 118
                     5: 125
                     6: 136
                     7: 173
                     8: 225
                     9: 277
                    10: 285
                    11: 293
                    12: 300
               default: 311
          }
      88: aload_0
      89: ldc           #57                 // String No current event to copy
      91: invokevirtual #58                 // Method _reportError:(Ljava/lang/String;)V
      94: goto          315
      97: aload_0
      98: invokevirtual #27                 // Method writeStartObject:()V
     101: goto          315
     104: aload_0
     105: invokevirtual #60                 // Method writeEndObject:()V
     108: goto          315
     111: aload_0
     112: invokevirtual #26                 // Method writeStartArray:()V
     115: goto          315
     118: aload_0
     119: invokevirtual #34                 // Method writeEndArray:()V
     122: goto          315
     125: aload_0
     126: aload_1
     127: invokevirtual #61                 // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;
     130: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
     133: goto          315
     136: aload_1
     137: invokevirtual #62                 // Method com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z
     140: ifeq          162
     143: aload_0
     144: aload_1
     145: invokevirtual #63                 // Method com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C
     148: aload_1
     149: invokevirtual #64                 // Method com/fasterxml/jackson/core/JsonParser.getTextOffset:()I
     152: aload_1
     153: invokevirtual #65                 // Method com/fasterxml/jackson/core/JsonParser.getTextLength:()I
     156: invokevirtual #66                 // Method writeString:([CII)V
     159: goto          315
     162: aload_0
     163: aload_1
     164: invokevirtual #67                 // Method com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;
     167: invokevirtual #51                 // Method writeString:(Ljava/lang/String;)V
     170: goto          315
     173: aload_1
     174: invokevirtual #68                 // Method com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;
     177: astore_3
     178: aload_3
     179: getstatic     #69                 // Field com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
     182: if_acmpne     196
     185: aload_0
     186: aload_1
     187: invokevirtual #70                 // Method com/fasterxml/jackson/core/JsonParser.getIntValue:()I
     190: invokevirtual #33                 // Method writeNumber:(I)V
     193: goto          315
     196: aload_3
     197: getstatic     #71                 // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
     200: if_acmpne     214
     203: aload_0
     204: aload_1
     205: invokevirtual #72                 // Method com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;
     208: invokevirtual #73                 // Method writeNumber:(Ljava/math/BigInteger;)V
     211: goto          315
     214: aload_0
     215: aload_1
     216: invokevirtual #74                 // Method com/fasterxml/jackson/core/JsonParser.getLongValue:()J
     219: invokevirtual #35                 // Method writeNumber:(J)V
     222: goto          315
     225: aload_1
     226: invokevirtual #68                 // Method com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;
     229: astore_3
     230: aload_3
     231: getstatic     #75                 // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
     234: if_acmpne     248
     237: aload_0
     238: aload_1
     239: invokevirtual #76                 // Method com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;
     242: invokevirtual #54                 // Method writeNumber:(Ljava/math/BigDecimal;)V
     245: goto          315
     248: aload_3
     249: getstatic     #77                 // Field com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
     252: if_acmpne     266
     255: aload_0
     256: aload_1
     257: invokevirtual #78                 // Method com/fasterxml/jackson/core/JsonParser.getFloatValue:()F
     260: invokevirtual #53                 // Method writeNumber:(F)V
     263: goto          315
     266: aload_0
     267: aload_1
     268: invokevirtual #79                 // Method com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D
     271: invokevirtual #36                 // Method writeNumber:(D)V
     274: goto          315
     277: aload_0
     278: iconst_1
     279: invokevirtual #52                 // Method writeBoolean:(Z)V
     282: goto          315
     285: aload_0
     286: iconst_0
     287: invokevirtual #52                 // Method writeBoolean:(Z)V
     290: goto          315
     293: aload_0
     294: invokevirtual #43                 // Method writeNull:()V
     297: goto          315
     300: aload_0
     301: aload_1
     302: invokevirtual #80                 // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;
     305: invokevirtual #55                 // Method writeObject:(Ljava/lang/Object;)V
     308: goto          315
     311: aload_0
     312: invokevirtual #81                 // Method _throwInternal:()V
     315: return

  public void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;
       4: astore_2
       5: aload_2
       6: ifnonnull     15
       9: aload_0
      10: ldc           #57                 // String No current event to copy
      12: invokevirtual #58                 // Method _reportError:(Ljava/lang/String;)V
      15: aload_2
      16: invokevirtual #59                 // Method com/fasterxml/jackson/core/JsonToken.id:()I
      19: istore_3
      20: iload_3
      21: iconst_5
      22: if_icmpne     43
      25: aload_0
      26: aload_1
      27: invokevirtual #61                 // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;
      30: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V
      33: aload_1
      34: invokevirtual #82                 // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
      37: astore_2
      38: aload_2
      39: invokevirtual #59                 // Method com/fasterxml/jackson/core/JsonToken.id:()I
      42: istore_3
      43: iload_3
      44: lookupswitch  { // 2
                     1: 72
                     3: 101
               default: 130
          }
      72: aload_0
      73: invokevirtual #27                 // Method writeStartObject:()V
      76: aload_1
      77: invokevirtual #82                 // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
      80: getstatic     #83                 // Field com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;
      83: if_acmpeq     94
      86: aload_0
      87: aload_1
      88: invokevirtual #84                 // Method copyCurrentStructure:(Lcom/fasterxml/jackson/core/JsonParser;)V
      91: goto          76
      94: aload_0
      95: invokevirtual #60                 // Method writeEndObject:()V
      98: goto          135
     101: aload_0
     102: invokevirtual #26                 // Method writeStartArray:()V
     105: aload_1
     106: invokevirtual #82                 // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
     109: getstatic     #85                 // Field com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
     112: if_acmpeq     123
     115: aload_0
     116: aload_1
     117: invokevirtual #84                 // Method copyCurrentStructure:(Lcom/fasterxml/jackson/core/JsonParser;)V
     120: goto          105
     123: aload_0
     124: invokevirtual #34                 // Method writeEndArray:()V
     127: goto          135
     130: aload_0
     131: aload_1
     132: invokevirtual #86                 // Method copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V
     135: return

  public abstract com.fasterxml.jackson.core.JsonStreamContext getOutputContext();

  public abstract void flush() throws java.io.IOException;

  public abstract boolean isClosed();

  public abstract void close() throws java.io.IOException;

  protected void _reportError(java.lang.String) throws com.fasterxml.jackson.core.JsonGenerationException;
    Code:
       0: new           #46                 // class com/fasterxml/jackson/core/JsonGenerationException
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #48                 // Method com/fasterxml/jackson/core/JsonGenerationException."<init>":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V
       9: athrow

  protected final void _throwInternal();
    Code:
       0: invokestatic  #87                 // Method com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V
       3: return

  protected void _reportUnsupportedOperation();
    Code:
       0: new           #15                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #88                 // String Operation not supported by generator of type
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #20                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  protected final void _verifyOffsets(int, int, int);
    Code:
       0: iload_2
       1: iflt          11
       4: iload_2
       5: iload_3
       6: iadd
       7: iload_1
       8: if_icmple     49
      11: new           #6                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #89                 // String invalid argument(s) (offset=%d, length=%d) for input array of %d element
      17: iconst_3
      18: anewarray     #90                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: iload_2
      24: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: dup
      29: iconst_1
      30: iload_3
      31: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: dup
      36: iconst_2
      37: iload_1
      38: invokestatic  #91                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: invokestatic  #92                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  protected void _writeSimpleObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #43                 // Method writeNull:()V
       8: return
       9: aload_1
      10: instanceof    #93                 // class java/lang/String
      13: ifeq          25
      16: aload_0
      17: aload_1
      18: checkcast     #93                 // class java/lang/String
      21: invokevirtual #51                 // Method writeString:(Ljava/lang/String;)V
      24: return
      25: aload_1
      26: instanceof    #94                 // class java/lang/Number
      29: ifeq          207
      32: aload_1
      33: checkcast     #94                 // class java/lang/Number
      36: astore_2
      37: aload_2
      38: instanceof    #95                 // class java/lang/Integer
      41: ifeq          53
      44: aload_0
      45: aload_2
      46: invokevirtual #96                 // Method java/lang/Number.intValue:()I
      49: invokevirtual #33                 // Method writeNumber:(I)V
      52: return
      53: aload_2
      54: instanceof    #97                 // class java/lang/Long
      57: ifeq          69
      60: aload_0
      61: aload_2
      62: invokevirtual #98                 // Method java/lang/Number.longValue:()J
      65: invokevirtual #35                 // Method writeNumber:(J)V
      68: return
      69: aload_2
      70: instanceof    #99                 // class java/lang/Double
      73: ifeq          85
      76: aload_0
      77: aload_2
      78: invokevirtual #100                // Method java/lang/Number.doubleValue:()D
      81: invokevirtual #36                 // Method writeNumber:(D)V
      84: return
      85: aload_2
      86: instanceof    #101                // class java/lang/Float
      89: ifeq          101
      92: aload_0
      93: aload_2
      94: invokevirtual #102                // Method java/lang/Number.floatValue:()F
      97: invokevirtual #53                 // Method writeNumber:(F)V
     100: return
     101: aload_2
     102: instanceof    #103                // class java/lang/Short
     105: ifeq          117
     108: aload_0
     109: aload_2
     110: invokevirtual #104                // Method java/lang/Number.shortValue:()S
     113: invokevirtual #105                // Method writeNumber:(S)V
     116: return
     117: aload_2
     118: instanceof    #106                // class java/lang/Byte
     121: ifeq          134
     124: aload_0
     125: aload_2
     126: invokevirtual #107                // Method java/lang/Number.byteValue:()B
     129: i2s
     130: invokevirtual #105                // Method writeNumber:(S)V
     133: return
     134: aload_2
     135: instanceof    #108                // class java/math/BigInteger
     138: ifeq          150
     141: aload_0
     142: aload_2
     143: checkcast     #108                // class java/math/BigInteger
     146: invokevirtual #73                 // Method writeNumber:(Ljava/math/BigInteger;)V
     149: return
     150: aload_2
     151: instanceof    #109                // class java/math/BigDecimal
     154: ifeq          166
     157: aload_0
     158: aload_2
     159: checkcast     #109                // class java/math/BigDecimal
     162: invokevirtual #54                 // Method writeNumber:(Ljava/math/BigDecimal;)V
     165: return
     166: aload_2
     167: instanceof    #110                // class java/util/concurrent/atomic/AtomicInteger
     170: ifeq          185
     173: aload_0
     174: aload_2
     175: checkcast     #110                // class java/util/concurrent/atomic/AtomicInteger
     178: invokevirtual #111                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     181: invokevirtual #33                 // Method writeNumber:(I)V
     184: return
     185: aload_2
     186: instanceof    #112                // class java/util/concurrent/atomic/AtomicLong
     189: ifeq          204
     192: aload_0
     193: aload_2
     194: checkcast     #112                // class java/util/concurrent/atomic/AtomicLong
     197: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicLong.get:()J
     200: invokevirtual #35                 // Method writeNumber:(J)V
     203: return
     204: goto          264
     207: aload_1
     208: instanceof    #44                 // class "[B"
     211: ifeq          226
     214: aload_0
     215: aload_1
     216: checkcast     #44                 // class "[B"
     219: checkcast     #44                 // class "[B"
     222: invokevirtual #45                 // Method writeBinary:([B)V
     225: return
     226: aload_1
     227: instanceof    #114                // class java/lang/Boolean
     230: ifeq          245
     233: aload_0
     234: aload_1
     235: checkcast     #114                // class java/lang/Boolean
     238: invokevirtual #115                // Method java/lang/Boolean.booleanValue:()Z
     241: invokevirtual #52                 // Method writeBoolean:(Z)V
     244: return
     245: aload_1
     246: instanceof    #116                // class java/util/concurrent/atomic/AtomicBoolean
     249: ifeq          264
     252: aload_0
     253: aload_1
     254: checkcast     #116                // class java/util/concurrent/atomic/AtomicBoolean
     257: invokevirtual #117                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     260: invokevirtual #52                 // Method writeBoolean:(Z)V
     263: return
     264: new           #118                // class java/lang/IllegalStateException
     267: dup
     268: new           #7                  // class java/lang/StringBuilder
     271: dup
     272: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     275: ldc           #119                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed
     277: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     280: aload_1
     281: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     284: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
     287: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: ldc           #120                // String )
     292: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokespecial #121                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     301: athrow
}
