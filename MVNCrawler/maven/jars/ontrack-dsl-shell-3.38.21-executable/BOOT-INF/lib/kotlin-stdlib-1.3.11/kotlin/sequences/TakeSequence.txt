Compiled from "Sequences.kt"
public final class kotlin.sequences.TakeSequence<T> implements kotlin.sequences.Sequence<T>, kotlin.sequences.DropTakeSequence<T> {
  private final kotlin.sequences.Sequence<T> sequence;

  private final int count;

  public kotlin.sequences.Sequence<T> drop(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #16                 // Field count:I
       5: if_icmplt     14
       8: invokestatic  #22                 // Method kotlin/sequences/SequencesKt.emptySequence:()Lkotlin/sequences/Sequence;
      11: goto          33
      14: new           #24                 // class kotlin/sequences/SubSequence
      17: dup
      18: aload_0
      19: getfield      #28                 // Field sequence:Lkotlin/sequences/Sequence;
      22: iload_1
      23: aload_0
      24: getfield      #16                 // Field count:I
      27: invokespecial #32                 // Method kotlin/sequences/SubSequence."<init>":(Lkotlin/sequences/Sequence;II)V
      30: checkcast     #7                  // class kotlin/sequences/Sequence
      33: areturn

  public kotlin.sequences.Sequence<T> take(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #16                 // Field count:I
       5: if_icmplt     15
       8: aload_0
       9: checkcast     #7                  // class kotlin/sequences/Sequence
      12: goto          30
      15: new           #2                  // class kotlin/sequences/TakeSequence
      18: dup
      19: aload_0
      20: getfield      #28                 // Field sequence:Lkotlin/sequences/Sequence;
      23: iload_1
      24: invokespecial #39                 // Method "<init>":(Lkotlin/sequences/Sequence;I)V
      27: checkcast     #7                  // class kotlin/sequences/Sequence
      30: areturn

  public java.util.Iterator<T> iterator();
    Code:
       0: new           #43                 // class kotlin/sequences/TakeSequence$iterator$1
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method kotlin/sequences/TakeSequence$iterator$1."<init>":(Lkotlin/sequences/TakeSequence;)V
       8: checkcast     #48                 // class java/util/Iterator
      11: areturn

  public kotlin.sequences.TakeSequence(kotlin.sequences.Sequence<? extends T>, int);
    Code:
       0: aload_1
       1: ldc           #50                 // String sequence
       3: invokestatic  #56                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #59                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #28                 // Field sequence:Lkotlin/sequences/Sequence;
      15: aload_0
      16: iload_2
      17: putfield      #16                 // Field count:I
      20: aload_0
      21: getfield      #16                 // Field count:I
      24: iflt          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore_3
      33: iload_3
      34: ifne          82
      37: new           #61                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #64                 // String count must be non-negative, but was
      46: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #16                 // Field count:I
      53: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: bipush        46
      58: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: astore        5
      66: new           #80                 // class java/lang/IllegalArgumentException
      69: dup
      70: aload         5
      72: invokevirtual #81                 // Method java/lang/Object.toString:()Ljava/lang/String;
      75: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: checkcast     #86                 // class java/lang/Throwable
      81: athrow
      82: return

  public static final int access$getCount$p(kotlin.sequences.TakeSequence);
    Code:
       0: aload_0
       1: getfield      #16                 // Field count:I
       4: ireturn

  public static final kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TakeSequence);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sequence:Lkotlin/sequences/Sequence;
       4: areturn
}
