Compiled from "Sequences.kt"
public final class kotlin.sequences.DropWhileSequence$iterator$1 implements java.util.Iterator<T>, kotlin.jvm.internal.markers.KMappedMarker {
  private final java.util.Iterator<T> iterator;

  private int dropState;

  private T nextItem;

  final kotlin.sequences.DropWhileSequence this$0;

  public final java.util.Iterator<T> getIterator();
    Code:
       0: aload_0
       1: getfield      #20                 // Field iterator:Ljava/util/Iterator;
       4: areturn

  public final int getDropState();
    Code:
       0: aload_0
       1: getfield      #28                 // Field dropState:I
       4: ireturn

  public final void setDropState(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field dropState:I
       5: return

  public final T getNextItem();
    Code:
       0: aload_0
       1: getfield      #39                 // Field nextItem:Ljava/lang/Object;
       4: areturn

  public final void setNextItem(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field nextItem:Ljava/lang/Object;
       5: return

  private final void drop();
    Code:
       0: aload_0
       1: getfield      #20                 // Field iterator:Ljava/util/Iterator;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifeq          58
      12: aload_0
      13: getfield      #20                 // Field iterator:Ljava/util/Iterator;
      16: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: astore_1
      22: aload_0
      23: getfield      #54                 // Field this$0:Lkotlin/sequences/DropWhileSequence;
      26: invokestatic  #58                 // Method kotlin/sequences/DropWhileSequence.access$getPredicate$p:(Lkotlin/sequences/DropWhileSequence;)Lkotlin/jvm/functions/Function1;
      29: aload_1
      30: invokeinterface #64,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #66                 // class java/lang/Boolean
      38: invokevirtual #69                 // Method java/lang/Boolean.booleanValue:()Z
      41: ifne          55
      44: aload_0
      45: aload_1
      46: putfield      #39                 // Field nextItem:Ljava/lang/Object;
      49: aload_0
      50: iconst_1
      51: putfield      #28                 // Field dropState:I
      54: return
      55: goto          0
      58: aload_0
      59: iconst_0
      60: putfield      #28                 // Field dropState:I
      63: return

  public T next();
    Code:
       0: aload_0
       1: getfield      #28                 // Field dropState:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #72                 // Method drop:()V
      12: aload_0
      13: getfield      #28                 // Field dropState:I
      16: iconst_1
      17: if_icmpne     37
      20: aload_0
      21: getfield      #39                 // Field nextItem:Ljava/lang/Object;
      24: astore_1
      25: aload_0
      26: aconst_null
      27: putfield      #39                 // Field nextItem:Ljava/lang/Object;
      30: aload_0
      31: iconst_0
      32: putfield      #28                 // Field dropState:I
      35: aload_1
      36: areturn
      37: aload_0
      38: getfield      #20                 // Field iterator:Ljava/util/Iterator;
      41: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #28                 // Field dropState:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #72                 // Method drop:()V
      12: aload_0
      13: getfield      #28                 // Field dropState:I
      16: iconst_1
      17: if_icmpeq     32
      20: aload_0
      21: getfield      #20                 // Field iterator:Ljava/util/Iterator;
      24: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  kotlin.sequences.DropWhileSequence$iterator$1();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field this$0:Lkotlin/sequences/DropWhileSequence;
       5: aload_0
       6: invokespecial #77                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_1
      11: invokestatic  #81                 // Method kotlin/sequences/DropWhileSequence.access$getSequence$p:(Lkotlin/sequences/DropWhileSequence;)Lkotlin/sequences/Sequence;
      14: invokeinterface #84,  1           // InterfaceMethod kotlin/sequences/Sequence.iterator:()Ljava/util/Iterator;
      19: putfield      #20                 // Field iterator:Ljava/util/Iterator;
      22: aload_0
      23: iconst_m1
      24: putfield      #28                 // Field dropState:I
      27: return

  public void remove();
    Code:
       0: new           #88                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #90                 // String Operation is not supported for read-only collection
       6: invokespecial #93                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
