Compiled from "RangesJVM.kt"
final class kotlin.ranges.ClosedFloatRange implements kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> {
  private final float _start;

  private final float _endInclusive;

  public java.lang.Float getStart();
    Code:
       0: aload_0
       1: getfield      #20                 // Field _start:F
       4: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public java.lang.Comparable getStart();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getStart:()Ljava/lang/Float;
       4: checkcast     #17                 // class java/lang/Comparable
       7: areturn

  public java.lang.Float getEndInclusive();
    Code:
       0: aload_0
       1: getfield      #33                 // Field _endInclusive:F
       4: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public java.lang.Comparable getEndInclusive();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getEndInclusive:()Ljava/lang/Float;
       4: checkcast     #17                 // class java/lang/Comparable
       7: areturn

  public boolean lessThanOrEquals(float, float);
    Code:
       0: fload_1
       1: fload_2
       2: fcmpg
       3: ifgt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public boolean lessThanOrEquals(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #38                 // class java/lang/Number
       5: invokevirtual #42                 // Method java/lang/Number.floatValue:()F
       8: aload_2
       9: checkcast     #38                 // class java/lang/Number
      12: invokevirtual #42                 // Method java/lang/Number.floatValue:()F
      15: invokevirtual #44                 // Method lessThanOrEquals:(FF)Z
      18: ireturn

  public boolean contains(float);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #20                 // Field _start:F
       5: fcmpl
       6: iflt          22
       9: fload_1
      10: aload_0
      11: getfield      #33                 // Field _endInclusive:F
      14: fcmpg
      15: ifgt          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean contains(java.lang.Comparable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #38                 // class java/lang/Number
       5: invokevirtual #42                 // Method java/lang/Number.floatValue:()F
       8: invokevirtual #51                 // Method contains:(F)Z
      11: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field _start:F
       4: aload_0
       5: getfield      #33                 // Field _endInclusive:F
       8: fcmpg
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class kotlin/ranges/ClosedFloatRange
       4: ifeq          58
       7: aload_0
       8: invokevirtual #59                 // Method isEmpty:()Z
      11: ifeq          24
      14: aload_1
      15: checkcast     #2                  // class kotlin/ranges/ClosedFloatRange
      18: invokevirtual #59                 // Method isEmpty:()Z
      21: ifne          54
      24: aload_0
      25: getfield      #20                 // Field _start:F
      28: aload_1
      29: checkcast     #2                  // class kotlin/ranges/ClosedFloatRange
      32: getfield      #20                 // Field _start:F
      35: fcmpg
      36: ifne          58
      39: aload_0
      40: getfield      #33                 // Field _endInclusive:F
      43: aload_1
      44: checkcast     #2                  // class kotlin/ranges/ClosedFloatRange
      47: getfield      #33                 // Field _endInclusive:F
      50: fcmpg
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isEmpty:()Z
       4: ifeq          11
       7: iconst_m1
       8: goto          35
      11: bipush        31
      13: aload_0
      14: getfield      #20                 // Field _start:F
      17: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      20: invokevirtual #65                 // Method java/lang/Object.hashCode:()I
      23: imul
      24: aload_0
      25: getfield      #33                 // Field _endInclusive:F
      28: invokestatic  #26                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      31: invokevirtual #65                 // Method java/lang/Object.hashCode:()I
      34: iadd
      35: ireturn

  public java.lang.String toString();
    Code:
       0: new           #69                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #20                 // Field _start:F
      11: invokevirtual #77                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      14: ldc           #79                 // String ..
      16: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #33                 // Field _endInclusive:F
      23: invokevirtual #77                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      26: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public kotlin.ranges.ClosedFloatRange(float, float);
    Code:
       0: aload_0
       1: invokespecial #86                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #20                 // Field _start:F
       9: aload_0
      10: fload_2
      11: putfield      #33                 // Field _endInclusive:F
      14: return
}
