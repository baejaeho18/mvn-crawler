Compiled from "SlidingWindow.kt"
final class kotlin.collections.RingBuffer<T> extends kotlin.collections.AbstractList<T> implements java.util.RandomAccess {
  private final java.lang.Object[] buffer;

  private int startIndex;

  private int size;

  private final int capacity;

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field size:I
       4: ireturn

  private void setSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field size:I
       5: return

  public T get(int);
    Code:
       0: getstatic     #27                 // Field kotlin/collections/AbstractList.Companion:Lkotlin/collections/AbstractList$Companion;
       3: iload_1
       4: aload_0
       5: invokevirtual #29                 // Method size:()I
       8: invokevirtual #35                 // Method kotlin/collections/AbstractList$Companion.checkElementIndex$kotlin_stdlib:(II)V
      11: aload_0
      12: getfield      #37                 // Field buffer:[Ljava/lang/Object;
      15: aload_0
      16: aload_0
      17: getfield      #39                 // Field startIndex:I
      20: istore_3
      21: astore_2
      22: astore        5
      24: iload_3
      25: iload_1
      26: iadd
      27: aload_2
      28: invokevirtual #42                 // Method getCapacity:()I
      31: irem
      32: istore        6
      34: aload         5
      36: iload         6
      38: aaload
      39: areturn

  public final boolean isFull();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method size:()I
       4: aload_0
       5: getfield      #51                 // Field capacity:I
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.util.Iterator<T> iterator();
    Code:
       0: new           #56                 // class kotlin/collections/RingBuffer$iterator$1
       3: dup
       4: aload_0
       5: invokespecial #60                 // Method kotlin/collections/RingBuffer$iterator$1."<init>":(Lkotlin/collections/RingBuffer;)V
       8: checkcast     #62                 // class java/util/Iterator
      11: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_1
       1: ldc           #66                 // String array
       3: invokestatic  #72                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: arraylength
       8: aload_0
       9: invokevirtual #29                 // Method size:()I
      12: if_icmpge     38
      15: aload_1
      16: astore_3
      17: aload_0
      18: invokevirtual #29                 // Method size:()I
      21: istore        4
      23: aload_3
      24: iload         4
      26: invokestatic  #78                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      29: dup
      30: ldc           #80                 // String java.util.Arrays.copyOf(this, newSize)
      32: invokestatic  #83                 // Method kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      35: goto          39
      38: aload_1
      39: astore_2
      40: aload_0
      41: invokevirtual #29                 // Method size:()I
      44: istore_3
      45: iconst_0
      46: istore        4
      48: aload_0
      49: getfield      #39                 // Field startIndex:I
      52: istore        5
      54: iload         4
      56: iload_3
      57: if_icmpge     89
      60: iload         5
      62: aload_0
      63: getfield      #51                 // Field capacity:I
      66: if_icmpge     89
      69: aload_2
      70: iload         4
      72: aload_0
      73: getfield      #37                 // Field buffer:[Ljava/lang/Object;
      76: iload         5
      78: aaload
      79: aastore
      80: iinc          4, 1
      83: iinc          5, 1
      86: goto          54
      89: iconst_0
      90: istore        5
      92: iload         4
      94: iload_3
      95: if_icmpge     118
      98: aload_2
      99: iload         4
     101: aload_0
     102: getfield      #37                 // Field buffer:[Ljava/lang/Object;
     105: iload         5
     107: aaload
     108: aastore
     109: iinc          4, 1
     112: iinc          5, 1
     115: goto          92
     118: aload_2
     119: arraylength
     120: aload_0
     121: invokevirtual #29                 // Method size:()I
     124: if_icmple     134
     127: aload_2
     128: aload_0
     129: invokevirtual #29                 // Method size:()I
     132: aconst_null
     133: aastore
     134: aload_2
     135: dup
     136: ifnonnull     149
     139: new           #85                 // class kotlin/TypeCastException
     142: dup
     143: ldc           #87                 // String null cannot be cast to non-null type kotlin.Array<T>
     145: invokespecial #90                 // Method kotlin/TypeCastException."<init>":(Ljava/lang/String;)V
     148: athrow
     149: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #29                 // Method size:()I
       5: anewarray     #97                 // class java/lang/Object
       8: invokevirtual #99                 // Method toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      11: areturn

  public final void add(T);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method isFull:()Z
       4: ifeq          20
       7: new           #105                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #107                // String ring buffer is full
      13: invokespecial #108                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: checkcast     #110                // class java/lang/Throwable
      19: athrow
      20: aload_0
      21: getfield      #37                 // Field buffer:[Ljava/lang/Object;
      24: aload_0
      25: aload_0
      26: getfield      #39                 // Field startIndex:I
      29: istore_3
      30: astore_2
      31: aload_0
      32: invokevirtual #29                 // Method size:()I
      35: istore        4
      37: astore        6
      39: iload_3
      40: iload         4
      42: iadd
      43: aload_2
      44: invokevirtual #42                 // Method getCapacity:()I
      47: irem
      48: istore        7
      50: aload         6
      52: iload         7
      54: aload_1
      55: aastore
      56: aload_0
      57: dup
      58: invokevirtual #29                 // Method size:()I
      61: dup
      62: istore_2
      63: iconst_1
      64: iadd
      65: invokespecial #112                // Method setSize:(I)V
      68: return

  public final void removeFirst(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore_2
      10: iload_2
      11: ifne          51
      14: new           #118                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #123                // String n shouldn\'t be negative but it is
      23: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #130                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: astore        4
      35: new           #136                // class java/lang/IllegalArgumentException
      38: dup
      39: aload         4
      41: invokevirtual #137                // Method java/lang/Object.toString:()Ljava/lang/String;
      44: invokespecial #138                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: checkcast     #110                // class java/lang/Throwable
      50: athrow
      51: iload_1
      52: aload_0
      53: invokevirtual #29                 // Method size:()I
      56: if_icmpgt     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: istore_2
      65: iload_2
      66: ifne          118
      69: new           #118                // class java/lang/StringBuilder
      72: dup
      73: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #140                // String n shouldn\'t be greater than the buffer size: n =
      78: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload_1
      82: invokevirtual #130                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #142                // String , size =
      87: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: invokevirtual #29                 // Method size:()I
      94: invokevirtual #130                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: astore        4
     102: new           #136                // class java/lang/IllegalArgumentException
     105: dup
     106: aload         4
     108: invokevirtual #137                // Method java/lang/Object.toString:()Ljava/lang/String;
     111: invokespecial #138                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     114: checkcast     #110                // class java/lang/Throwable
     117: athrow
     118: iload_1
     119: ifle          203
     122: aload_0
     123: getfield      #39                 // Field startIndex:I
     126: istore_2
     127: aload_0
     128: iload_2
     129: istore        5
     131: astore        4
     133: iload         5
     135: iload_1
     136: iadd
     137: aload         4
     139: invokevirtual #42                 // Method getCapacity:()I
     142: irem
     143: istore_3
     144: iload_2
     145: iload_3
     146: if_icmple     177
     149: aload_0
     150: aload_0
     151: getfield      #37                 // Field buffer:[Ljava/lang/Object;
     154: aconst_null
     155: iload_2
     156: aload_0
     157: getfield      #51                 // Field capacity:I
     160: invokespecial #146                // Method fill:([Ljava/lang/Object;Ljava/lang/Object;II)V
     163: aload_0
     164: aload_0
     165: getfield      #37                 // Field buffer:[Ljava/lang/Object;
     168: aconst_null
     169: iconst_0
     170: iload_3
     171: invokespecial #146                // Method fill:([Ljava/lang/Object;Ljava/lang/Object;II)V
     174: goto          188
     177: aload_0
     178: aload_0
     179: getfield      #37                 // Field buffer:[Ljava/lang/Object;
     182: aconst_null
     183: iload_2
     184: iload_3
     185: invokespecial #146                // Method fill:([Ljava/lang/Object;Ljava/lang/Object;II)V
     188: aload_0
     189: iload_3
     190: putfield      #39                 // Field startIndex:I
     193: aload_0
     194: dup
     195: invokevirtual #29                 // Method size:()I
     198: iload_1
     199: isub
     200: invokespecial #112                // Method setSize:(I)V
     203: return

  private final int forward(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: aload_0
       4: invokevirtual #42                 // Method getCapacity:()I
       7: irem
       8: ireturn

  private final <T> void fill(T[], T, int, int);
    Code:
       0: iload_3
       1: istore        5
       3: iload         4
       5: istore        6
       7: iload         5
       9: iload         6
      11: if_icmpge     25
      14: aload_1
      15: iload         5
      17: aload_2
      18: aastore
      19: iinc          5, 1
      22: goto          7
      25: return

  static void fill$default(kotlin.collections.RingBuffer, java.lang.Object[], java.lang.Object, int, int, int, java.lang.Object);
    Code:
       0: iload         5
       2: iconst_2
       3: iand
       4: ifeq          9
       7: iconst_0
       8: istore_3
       9: iload         5
      11: iconst_4
      12: iand
      13: ifeq          20
      16: aload_1
      17: arraylength
      18: istore        4
      20: aload_0
      21: aload_1
      22: aload_2
      23: iload_3
      24: iload         4
      26: invokespecial #146                // Method fill:([Ljava/lang/Object;Ljava/lang/Object;II)V
      29: return

  public final int getCapacity();
    Code:
       0: aload_0
       1: getfield      #51                 // Field capacity:I
       4: ireturn

  public kotlin.collections.RingBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #159                // Method kotlin/collections/AbstractList."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #51                 // Field capacity:I
       9: aload_0
      10: getfield      #51                 // Field capacity:I
      13: iflt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: iload_2
      23: ifne          66
      26: new           #118                // class java/lang/StringBuilder
      29: dup
      30: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #161                // String ring buffer capacity should not be negative but it is
      35: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #51                 // Field capacity:I
      42: invokevirtual #130                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: invokevirtual #134                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore        4
      50: new           #136                // class java/lang/IllegalArgumentException
      53: dup
      54: aload         4
      56: invokevirtual #137                // Method java/lang/Object.toString:()Ljava/lang/String;
      59: invokespecial #138                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: checkcast     #110                // class java/lang/Throwable
      65: athrow
      66: aload_0
      67: aload_0
      68: getfield      #51                 // Field capacity:I
      71: anewarray     #97                 // class java/lang/Object
      74: putfield      #37                 // Field buffer:[Ljava/lang/Object;
      77: return

  public static final java.lang.Object[] access$getBuffer$p(kotlin.collections.RingBuffer);
    Code:
       0: aload_0
       1: getfield      #37                 // Field buffer:[Ljava/lang/Object;
       4: areturn

  public static final int access$forward(kotlin.collections.RingBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #168                // Method forward:(II)I
       6: ireturn

  public static final int access$getSize$p(kotlin.collections.RingBuffer);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method size:()I
       4: ireturn

  public static final void access$setSize$p(kotlin.collections.RingBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #112                // Method setSize:(I)V
       5: return

  public static final int access$getStartIndex$p(kotlin.collections.RingBuffer);
    Code:
       0: aload_0
       1: getfield      #39                 // Field startIndex:I
       4: ireturn

  public static final void access$setStartIndex$p(kotlin.collections.RingBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field startIndex:I
       5: return
}
