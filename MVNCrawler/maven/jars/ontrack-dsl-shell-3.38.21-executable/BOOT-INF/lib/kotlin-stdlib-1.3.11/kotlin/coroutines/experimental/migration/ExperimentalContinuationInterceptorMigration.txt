Compiled from "CoroutinesMigration.kt"
final class kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration implements kotlin.coroutines.experimental.ContinuationInterceptor {
  private final kotlin.coroutines.ContinuationInterceptor interceptor;

  public kotlin.coroutines.experimental.CoroutineContext$Key<?> getKey();
    Code:
       0: getstatic     #13                 // Field kotlin/coroutines/experimental/ContinuationInterceptor.Key:Lkotlin/coroutines/experimental/ContinuationInterceptor$Key;
       3: checkcast     #15                 // class kotlin/coroutines/experimental/CoroutineContext$Key
       6: areturn

  public <T> kotlin.coroutines.experimental.Continuation<T> interceptContinuation(kotlin.coroutines.experimental.Continuation<? super T>);
    Code:
       0: aload_1
       1: ldc           #21                 // String continuation
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #31                 // Field interceptor:Lkotlin/coroutines/ContinuationInterceptor;
      10: aload_1
      11: invokestatic  #37                 // Method kotlin/coroutines/experimental/migration/CoroutinesMigrationKt.toContinuation:(Lkotlin/coroutines/experimental/Continuation;)Lkotlin/coroutines/Continuation;
      14: invokeinterface #42,  2           // InterfaceMethod kotlin/coroutines/ContinuationInterceptor.interceptContinuation:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;
      19: invokestatic  #46                 // Method kotlin/coroutines/experimental/migration/CoroutinesMigrationKt.toExperimentalContinuation:(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/experimental/Continuation;
      22: areturn

  public final kotlin.coroutines.ContinuationInterceptor getInterceptor();
    Code:
       0: aload_0
       1: getfield      #31                 // Field interceptor:Lkotlin/coroutines/ContinuationInterceptor;
       4: areturn

  public kotlin.coroutines.experimental.migration.ExperimentalContinuationInterceptorMigration(kotlin.coroutines.ContinuationInterceptor);
    Code:
       0: aload_1
       1: ldc           #52                 // String interceptor
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #55                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #31                 // Field interceptor:Lkotlin/coroutines/ContinuationInterceptor;
      15: return

  public <E extends kotlin.coroutines.experimental.CoroutineContext$Element> E get(kotlin.coroutines.experimental.CoroutineContext$Key<E>);
    Code:
       0: aload_1
       1: ldc           #60                 // String key
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #65                 // Method kotlin/coroutines/experimental/ContinuationInterceptor$DefaultImpls.get:(Lkotlin/coroutines/experimental/ContinuationInterceptor;Lkotlin/coroutines/experimental/CoroutineContext$Key;)Lkotlin/coroutines/experimental/CoroutineContext$Element;
      11: areturn

  public <R> R fold(R, kotlin.jvm.functions.Function2<? super R, ? super kotlin.coroutines.experimental.CoroutineContext$Element, ? extends R>);
    Code:
       0: aload_2
       1: ldc           #71                 // String operation
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokestatic  #74                 // Method kotlin/coroutines/experimental/ContinuationInterceptor$DefaultImpls.fold:(Lkotlin/coroutines/experimental/ContinuationInterceptor;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
      12: areturn

  public kotlin.coroutines.experimental.CoroutineContext minusKey(kotlin.coroutines.experimental.CoroutineContext$Key<?>);
    Code:
       0: aload_1
       1: ldc           #60                 // String key
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #82                 // Method kotlin/coroutines/experimental/ContinuationInterceptor$DefaultImpls.minusKey:(Lkotlin/coroutines/experimental/ContinuationInterceptor;Lkotlin/coroutines/experimental/CoroutineContext$Key;)Lkotlin/coroutines/experimental/CoroutineContext;
      11: areturn

  public kotlin.coroutines.experimental.CoroutineContext plus(kotlin.coroutines.experimental.CoroutineContext);
    Code:
       0: aload_1
       1: ldc           #86                 // String context
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #89                 // Method kotlin/coroutines/experimental/ContinuationInterceptor$DefaultImpls.plus:(Lkotlin/coroutines/experimental/ContinuationInterceptor;Lkotlin/coroutines/experimental/CoroutineContext;)Lkotlin/coroutines/experimental/CoroutineContext;
      11: areturn
}
