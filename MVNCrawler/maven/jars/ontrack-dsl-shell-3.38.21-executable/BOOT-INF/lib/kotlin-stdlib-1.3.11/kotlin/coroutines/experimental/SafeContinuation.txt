Compiled from "SafeContinuationJvm.kt"
public final class kotlin.coroutines.experimental.SafeContinuation<T> implements kotlin.coroutines.experimental.Continuation<T> {
  private volatile java.lang.Object result;

  private final kotlin.coroutines.experimental.Continuation<T> delegate;

  private static final java.lang.Object UNDECIDED;

  private static final java.lang.Object RESUMED;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<kotlin.coroutines.experimental.SafeContinuation<?>, java.lang.Object> RESULT;

  public static final kotlin.coroutines.experimental.SafeContinuation$Companion Companion;

  public kotlin.coroutines.experimental.CoroutineContext getContext();
    Code:
       0: aload_0
       1: getfield      #15                 // Field delegate:Lkotlin/coroutines/experimental/Continuation;
       4: invokeinterface #17,  1           // InterfaceMethod kotlin/coroutines/experimental/Continuation.getContext:()Lkotlin/coroutines/experimental/CoroutineContext;
       9: areturn

  public void resume(T);
    Code:
       0: aload_0
       1: getfield      #25                 // Field result:Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
       9: if_acmpne     30
      12: getstatic     #32                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
      19: aload_1
      20: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          80
      26: return
      27: nop
      28: nop
      29: athrow
      30: aload_2
      31: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      34: if_acmpne     67
      37: getstatic     #32                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      40: aload_0
      41: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      44: getstatic     #47                 // Field RESUMED:Ljava/lang/Object;
      47: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          80
      53: aload_0
      54: getfield      #15                 // Field delegate:Lkotlin/coroutines/experimental/Continuation;
      57: aload_1
      58: invokeinterface #49,  2           // InterfaceMethod kotlin/coroutines/experimental/Continuation.resume:(Ljava/lang/Object;)V
      63: return
      64: nop
      65: nop
      66: athrow
      67: new           #51                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #53                 // String Already resumed
      73: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      76: checkcast     #59                 // class java/lang/Throwable
      79: athrow
      80: goto          0

  public void resumeWithException(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #64                 // String exception
       3: invokestatic  #70                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #25                 // Field result:Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
      15: if_acmpne     43
      18: getstatic     #32                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: aload_0
      22: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
      25: new           #72                 // class kotlin/coroutines/experimental/SafeContinuation$Fail
      28: dup
      29: aload_1
      30: invokespecial #74                 // Method kotlin/coroutines/experimental/SafeContinuation$Fail."<init>":(Ljava/lang/Throwable;)V
      33: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          93
      39: return
      40: nop
      41: nop
      42: athrow
      43: aload_2
      44: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      47: if_acmpne     80
      50: getstatic     #32                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      53: aload_0
      54: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      57: getstatic     #47                 // Field RESUMED:Ljava/lang/Object;
      60: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      63: ifeq          93
      66: aload_0
      67: getfield      #15                 // Field delegate:Lkotlin/coroutines/experimental/Continuation;
      70: aload_1
      71: invokeinterface #76,  2           // InterfaceMethod kotlin/coroutines/experimental/Continuation.resumeWithException:(Ljava/lang/Throwable;)V
      76: return
      77: nop
      78: nop
      79: athrow
      80: new           #51                 // class java/lang/IllegalStateException
      83: dup
      84: ldc           #53                 // String Already resumed
      86: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      89: checkcast     #59                 // class java/lang/Throwable
      92: athrow
      93: goto          6

  public final java.lang.Object getResult();
    Code:
       0: aload_0
       1: getfield      #25                 // Field result:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
       9: if_acmpne     37
      12: getstatic     #32                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
      19: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      22: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          32
      28: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      31: areturn
      32: aload_0
      33: getfield      #25                 // Field result:Ljava/lang/Object;
      36: astore_1
      37: aload_1
      38: getstatic     #47                 // Field RESUMED:Ljava/lang/Object;
      41: if_acmpne     48
      44: invokestatic  #44                 // Method kotlin/coroutines/experimental/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      47: areturn
      48: aload_1
      49: instanceof    #72                 // class kotlin/coroutines/experimental/SafeContinuation$Fail
      52: ifeq          63
      55: aload_1
      56: checkcast     #72                 // class kotlin/coroutines/experimental/SafeContinuation$Fail
      59: invokevirtual #83                 // Method kotlin/coroutines/experimental/SafeContinuation$Fail.getException:()Ljava/lang/Throwable;
      62: athrow
      63: aload_1
      64: areturn

  public kotlin.coroutines.experimental.SafeContinuation(kotlin.coroutines.experimental.Continuation<? super T>, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #86                 // String delegate
       3: invokestatic  #70                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #89                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #15                 // Field delegate:Lkotlin/coroutines/experimental/Continuation;
      15: aload_0
      16: aload_2
      17: putfield      #25                 // Field result:Ljava/lang/Object;
      20: return

  public kotlin.coroutines.experimental.SafeContinuation(kotlin.coroutines.experimental.Continuation<? super T>);
    Code:
       0: aload_1
       1: ldc           #86                 // String delegate
       3: invokestatic  #70                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: getstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
      11: invokespecial #93                 // Method "<init>":(Lkotlin/coroutines/experimental/Continuation;Ljava/lang/Object;)V
      14: return

  static {};
    Code:
       0: new           #116                // class kotlin/coroutines/experimental/SafeContinuation$Companion
       3: dup
       4: aconst_null
       5: invokespecial #119                // Method kotlin/coroutines/experimental/SafeContinuation$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #121                // Field Companion:Lkotlin/coroutines/experimental/SafeContinuation$Companion;
      11: new           #5                  // class java/lang/Object
      14: dup
      15: invokespecial #89                 // Method java/lang/Object."<init>":()V
      18: putstatic     #28                 // Field UNDECIDED:Ljava/lang/Object;
      21: new           #5                  // class java/lang/Object
      24: dup
      25: invokespecial #89                 // Method java/lang/Object."<init>":()V
      28: putstatic     #47                 // Field RESUMED:Ljava/lang/Object;
      31: ldc           #2                  // class kotlin/coroutines/experimental/SafeContinuation
      33: ldc           #5                  // class java/lang/Object
      35: ldc           #122                // String result
      37: invokestatic  #126                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      40: putstatic     #32                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      43: return
}
