Compiled from "FileTreeWalk.kt"
final class kotlin.io.FileTreeWalk$FileTreeWalkIterator extends kotlin.collections.AbstractIterator<java.io.File> {
  private final java.util.Stack<kotlin.io.FileTreeWalk$WalkState> state;

  final kotlin.io.FileTreeWalk this$0;

  protected void computeNext();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method gotoNext:()Ljava/io/File;
       4: astore_1
       5: aload_1
       6: ifnull        17
       9: aload_0
      10: aload_1
      11: invokevirtual #18                 // Method setNext:(Ljava/lang/Object;)V
      14: goto          21
      17: aload_0
      18: invokevirtual #21                 // Method done:()V
      21: return

  private final kotlin.io.FileTreeWalk$DirectoryState directoryState(java.io.File);
    Code:
       0: aload_0
       1: getfield      #33                 // Field this$0:Lkotlin/io/FileTreeWalk;
       4: invokestatic  #39                 // Method kotlin/io/FileTreeWalk.access$getDirection$p:(Lkotlin/io/FileTreeWalk;)Lkotlin/io/FileWalkDirection;
       7: getstatic     #45                 // Field kotlin/io/FileTreeWalk$FileTreeWalkIterator$WhenMappings.$EnumSwitchMapping$0:[I
      10: swap
      11: invokevirtual #51                 // Method kotlin/io/FileWalkDirection.ordinal:()I
      14: iaload
      15: tableswitch   { // 1 to 2
                     1: 36
                     2: 51
               default: 66
          }
      36: new           #53                 // class kotlin/io/FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState
      39: dup
      40: aload_0
      41: aload_1
      42: invokespecial #57                 // Method kotlin/io/FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState."<init>":(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V
      45: checkcast     #59                 // class kotlin/io/FileTreeWalk$DirectoryState
      48: goto          74
      51: new           #61                 // class kotlin/io/FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState
      54: dup
      55: aload_0
      56: aload_1
      57: invokespecial #62                 // Method kotlin/io/FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState."<init>":(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V
      60: checkcast     #59                 // class kotlin/io/FileTreeWalk$DirectoryState
      63: goto          74
      66: new           #64                 // class kotlin/NoWhenBranchMatchedException
      69: dup
      70: invokespecial #66                 // Method kotlin/NoWhenBranchMatchedException."<init>":()V
      73: athrow
      74: areturn

  private final java.io.File gotoNext();
    Code:
       0: aload_0
       1: getfield      #69                 // Field state:Ljava/util/Stack;
       4: invokevirtual #75                 // Method java/util/Stack.empty:()Z
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #69                 // Field state:Ljava/util/Stack;
      16: invokevirtual #79                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      19: dup
      20: ifnonnull     26
      23: invokestatic  #84                 // Method kotlin/jvm/internal/Intrinsics.throwNpe:()V
      26: checkcast     #86                 // class kotlin/io/FileTreeWalk$WalkState
      29: astore_1
      30: aload_1
      31: invokevirtual #89                 // Method kotlin/io/FileTreeWalk$WalkState.step:()Ljava/io/File;
      34: astore_2
      35: aload_2
      36: ifnonnull     50
      39: aload_0
      40: getfield      #69                 // Field state:Ljava/util/Stack;
      43: invokevirtual #92                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      46: pop
      47: goto          0
      50: aload_2
      51: aload_1
      52: invokevirtual #95                 // Method kotlin/io/FileTreeWalk$WalkState.getRoot:()Ljava/io/File;
      55: invokestatic  #99                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifne          85
      61: aload_2
      62: invokevirtual #102                // Method java/io/File.isDirectory:()Z
      65: ifeq          85
      68: aload_0
      69: getfield      #69                 // Field state:Ljava/util/Stack;
      72: invokevirtual #105                // Method java/util/Stack.size:()I
      75: aload_0
      76: getfield      #33                 // Field this$0:Lkotlin/io/FileTreeWalk;
      79: invokestatic  #109                // Method kotlin/io/FileTreeWalk.access$getMaxDepth$p:(Lkotlin/io/FileTreeWalk;)I
      82: if_icmplt     87
      85: aload_2
      86: areturn
      87: aload_0
      88: getfield      #69                 // Field state:Ljava/util/Stack;
      91: aload_0
      92: aload_2
      93: invokespecial #111                // Method directoryState:(Ljava/io/File;)Lkotlin/io/FileTreeWalk$DirectoryState;
      96: invokevirtual #115                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: goto          0

  public kotlin.io.FileTreeWalk$FileTreeWalkIterator();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field this$0:Lkotlin/io/FileTreeWalk;
       5: aload_0
       6: invokespecial #122                // Method kotlin/collections/AbstractIterator."<init>":()V
       9: aload_0
      10: new           #71                 // class java/util/Stack
      13: dup
      14: invokespecial #123                // Method java/util/Stack."<init>":()V
      17: putfield      #69                 // Field state:Ljava/util/Stack;
      20: aload_1
      21: invokestatic  #127                // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      24: invokevirtual #102                // Method java/io/File.isDirectory:()Z
      27: ifeq          49
      30: aload_0
      31: getfield      #69                 // Field state:Ljava/util/Stack;
      34: aload_0
      35: aload_1
      36: invokestatic  #127                // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      39: invokespecial #111                // Method directoryState:(Ljava/io/File;)Lkotlin/io/FileTreeWalk$DirectoryState;
      42: invokevirtual #115                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: goto          86
      49: aload_1
      50: invokestatic  #127                // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      53: invokevirtual #130                // Method java/io/File.isFile:()Z
      56: ifeq          82
      59: aload_0
      60: getfield      #69                 // Field state:Ljava/util/Stack;
      63: new           #132                // class kotlin/io/FileTreeWalk$FileTreeWalkIterator$SingleFileState
      66: dup
      67: aload_0
      68: aload_1
      69: invokestatic  #127                // Method kotlin/io/FileTreeWalk.access$getStart$p:(Lkotlin/io/FileTreeWalk;)Ljava/io/File;
      72: invokespecial #133                // Method kotlin/io/FileTreeWalk$FileTreeWalkIterator$SingleFileState."<init>":(Lkotlin/io/FileTreeWalk$FileTreeWalkIterator;Ljava/io/File;)V
      75: invokevirtual #115                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: goto          86
      82: aload_0
      83: invokevirtual #21                 // Method done:()V
      86: return
}
