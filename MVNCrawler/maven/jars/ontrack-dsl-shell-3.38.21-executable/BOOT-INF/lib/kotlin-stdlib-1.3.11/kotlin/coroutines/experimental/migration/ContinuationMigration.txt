Compiled from "CoroutinesMigration.kt"
final class kotlin.coroutines.experimental.migration.ContinuationMigration<T> implements kotlin.coroutines.Continuation<T> {
  private final kotlin.coroutines.CoroutineContext context;

  private final kotlin.coroutines.experimental.Continuation<T> continuation;

  public kotlin.coroutines.CoroutineContext getContext();
    Code:
       0: aload_0
       1: getfield      #14                 // Field context:Lkotlin/coroutines/CoroutineContext;
       4: areturn

  public void resumeWith(java.lang.Object);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: invokestatic  #24                 // Method kotlin/Result."isSuccess-impl":(Ljava/lang/Object;)Z
       6: ifeq          21
       9: aload_2
      10: astore_3
      11: aload_0
      12: getfield      #28                 // Field continuation:Lkotlin/coroutines/experimental/Continuation;
      15: aload_3
      16: invokeinterface #33,  2           // InterfaceMethod kotlin/coroutines/experimental/Continuation.resume:(Ljava/lang/Object;)V
      21: aload_2
      22: astore_2
      23: aload_2
      24: invokestatic  #37                 // Method kotlin/Result."exceptionOrNull-impl":(Ljava/lang/Object;)Ljava/lang/Throwable;
      27: dup
      28: ifnull        53
      31: astore_3
      32: aload_3
      33: astore        4
      35: aload         4
      37: astore        5
      39: aload_0
      40: getfield      #28                 // Field continuation:Lkotlin/coroutines/experimental/Continuation;
      43: aload         5
      45: invokeinterface #41,  2           // InterfaceMethod kotlin/coroutines/experimental/Continuation.resumeWithException:(Ljava/lang/Throwable;)V
      50: goto          54
      53: pop
      54: return

  public final kotlin.coroutines.experimental.Continuation<T> getContinuation();
    Code:
       0: aload_0
       1: getfield      #28                 // Field continuation:Lkotlin/coroutines/experimental/Continuation;
       4: areturn

  public kotlin.coroutines.experimental.migration.ContinuationMigration(kotlin.coroutines.experimental.Continuation<? super T>);
    Code:
       0: aload_1
       1: ldc           #56                 // String continuation
       3: invokestatic  #62                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #65                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #28                 // Field continuation:Lkotlin/coroutines/experimental/Continuation;
      15: aload_0
      16: aload_0
      17: getfield      #28                 // Field continuation:Lkotlin/coroutines/experimental/Continuation;
      20: invokeinterface #68,  1           // InterfaceMethod kotlin/coroutines/experimental/Continuation.getContext:()Lkotlin/coroutines/experimental/CoroutineContext;
      25: invokestatic  #74                 // Method kotlin/coroutines/experimental/migration/CoroutinesMigrationKt.toCoroutineContext:(Lkotlin/coroutines/experimental/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
      28: putfield      #14                 // Field context:Lkotlin/coroutines/CoroutineContext;
      31: return
}
