Compiled from "Sequences.kt"
public final class kotlin.sequences.FilteringSequence$iterator$1 implements java.util.Iterator<T>, kotlin.jvm.internal.markers.KMappedMarker {
  private final java.util.Iterator<T> iterator;

  private int nextState;

  private T nextItem;

  final kotlin.sequences.FilteringSequence this$0;

  public final java.util.Iterator<T> getIterator();
    Code:
       0: aload_0
       1: getfield      #20                 // Field iterator:Ljava/util/Iterator;
       4: areturn

  public final int getNextState();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nextState:I
       4: ireturn

  public final void setNextState(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field nextState:I
       5: return

  public final T getNextItem();
    Code:
       0: aload_0
       1: getfield      #39                 // Field nextItem:Ljava/lang/Object;
       4: areturn

  public final void setNextItem(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field nextItem:Ljava/lang/Object;
       5: return

  private final void calcNext();
    Code:
       0: aload_0
       1: getfield      #20                 // Field iterator:Ljava/util/Iterator;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifeq          65
      12: aload_0
      13: getfield      #20                 // Field iterator:Ljava/util/Iterator;
      16: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: astore_1
      22: aload_0
      23: getfield      #54                 // Field this$0:Lkotlin/sequences/FilteringSequence;
      26: invokestatic  #58                 // Method kotlin/sequences/FilteringSequence.access$getPredicate$p:(Lkotlin/sequences/FilteringSequence;)Lkotlin/jvm/functions/Function1;
      29: aload_1
      30: invokeinterface #64,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #66                 // class java/lang/Boolean
      38: invokevirtual #69                 // Method java/lang/Boolean.booleanValue:()Z
      41: aload_0
      42: getfield      #54                 // Field this$0:Lkotlin/sequences/FilteringSequence;
      45: invokestatic  #73                 // Method kotlin/sequences/FilteringSequence.access$getSendWhen$p:(Lkotlin/sequences/FilteringSequence;)Z
      48: if_icmpne     62
      51: aload_0
      52: aload_1
      53: putfield      #39                 // Field nextItem:Ljava/lang/Object;
      56: aload_0
      57: iconst_1
      58: putfield      #28                 // Field nextState:I
      61: return
      62: goto          0
      65: aload_0
      66: iconst_0
      67: putfield      #28                 // Field nextState:I
      70: return

  public T next();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nextState:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #76                 // Method calcNext:()V
      12: aload_0
      13: getfield      #28                 // Field nextState:I
      16: ifne          30
      19: new           #78                 // class java/util/NoSuchElementException
      22: dup
      23: invokespecial #81                 // Method java/util/NoSuchElementException."<init>":()V
      26: checkcast     #83                 // class java/lang/Throwable
      29: athrow
      30: aload_0
      31: getfield      #39                 // Field nextItem:Ljava/lang/Object;
      34: astore_1
      35: aload_0
      36: aconst_null
      37: putfield      #39                 // Field nextItem:Ljava/lang/Object;
      40: aload_0
      41: iconst_m1
      42: putfield      #28                 // Field nextState:I
      45: aload_1
      46: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #28                 // Field nextState:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #76                 // Method calcNext:()V
      12: aload_0
      13: getfield      #28                 // Field nextState:I
      16: iconst_1
      17: if_icmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  kotlin.sequences.FilteringSequence$iterator$1();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field this$0:Lkotlin/sequences/FilteringSequence;
       5: aload_0
       6: invokespecial #86                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_1
      11: invokestatic  #90                 // Method kotlin/sequences/FilteringSequence.access$getSequence$p:(Lkotlin/sequences/FilteringSequence;)Lkotlin/sequences/Sequence;
      14: invokeinterface #93,  1           // InterfaceMethod kotlin/sequences/Sequence.iterator:()Ljava/util/Iterator;
      19: putfield      #20                 // Field iterator:Ljava/util/Iterator;
      22: aload_0
      23: iconst_m1
      24: putfield      #28                 // Field nextState:I
      27: return

  public void remove();
    Code:
       0: new           #97                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #99                 // String Operation is not supported for read-only collection
       6: invokespecial #102                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
