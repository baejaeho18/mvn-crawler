Compiled from "SafeContinuationJvm.kt"
public final class kotlin.coroutines.SafeContinuation<T> implements kotlin.coroutines.Continuation<T>, kotlin.coroutines.jvm.internal.CoroutineStackFrame {
  private volatile java.lang.Object result;

  private final kotlin.coroutines.Continuation<T> delegate;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<kotlin.coroutines.SafeContinuation<?>, java.lang.Object> RESULT;

  private static final kotlin.coroutines.SafeContinuation$Companion Companion;

  public kotlin.coroutines.CoroutineContext getContext();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
       4: invokeinterface #22,  1           // InterfaceMethod kotlin/coroutines/Continuation.getContext:()Lkotlin/coroutines/CoroutineContext;
       9: areturn

  public void resumeWith(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #30                 // Field result:Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
       9: if_acmpne     30
      12: getstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      19: aload_1
      20: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          80
      26: return
      27: nop
      28: nop
      29: athrow
      30: aload_2
      31: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      34: if_acmpne     67
      37: getstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      40: aload_0
      41: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      44: getstatic     #55                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.RESUMED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      47: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          80
      53: aload_0
      54: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
      57: aload_1
      58: invokeinterface #57,  2           // InterfaceMethod kotlin/coroutines/Continuation.resumeWith:(Ljava/lang/Object;)V
      63: return
      64: nop
      65: nop
      66: athrow
      67: new           #59                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #61                 // String Already resumed
      73: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      76: checkcast     #67                 // class java/lang/Throwable
      79: athrow
      80: goto          0

  public final java.lang.Object getOrThrow();
    Code:
       0: aload_0
       1: getfield      #30                 // Field result:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
       9: if_acmpne     37
      12: getstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      19: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      22: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          32
      28: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      31: areturn
      32: aload_0
      33: getfield      #30                 // Field result:Ljava/lang/Object;
      36: astore_1
      37: aload_1
      38: getstatic     #55                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.RESUMED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      41: if_acmpne     50
      44: invokestatic  #52                 // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      47: goto          66
      50: aload_1
      51: instanceof    #72                 // class kotlin/Result$Failure
      54: ifeq          65
      57: aload_1
      58: checkcast     #72                 // class kotlin/Result$Failure
      61: getfield      #76                 // Field kotlin/Result$Failure.exception:Ljava/lang/Throwable;
      64: athrow
      65: aload_1
      66: areturn

  public kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame();
    Code:
       0: aload_0
       1: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
       4: dup
       5: instanceof    #9                  // class kotlin/coroutines/jvm/internal/CoroutineStackFrame
       8: ifne          13
      11: pop
      12: aconst_null
      13: checkcast     #9                  // class kotlin/coroutines/jvm/internal/CoroutineStackFrame
      16: areturn

  public java.lang.StackTraceElement getStackTraceElement();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String toString();
    Code:
       0: new           #84                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #89                 // String SafeContinuation for
       9: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
      16: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public kotlin.coroutines.SafeContinuation(kotlin.coroutines.Continuation<? super T>, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #101                // String delegate
       3: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #108                // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #20                 // Field delegate:Lkotlin/coroutines/Continuation;
      15: aload_0
      16: aload_2
      17: putfield      #30                 // Field result:Ljava/lang/Object;
      20: return

  public kotlin.coroutines.SafeContinuation(kotlin.coroutines.Continuation<? super T>);
    Code:
       0: aload_1
       1: ldc           #101                // String delegate
       3: invokestatic  #107                // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: getstatic     #36                 // Field kotlin/coroutines/intrinsics/CoroutineSingletons.UNDECIDED:Lkotlin/coroutines/intrinsics/CoroutineSingletons;
      11: invokespecial #112                // Method "<init>":(Lkotlin/coroutines/Continuation;Ljava/lang/Object;)V
      14: return

  static {};
    Code:
       0: new           #138                // class kotlin/coroutines/SafeContinuation$Companion
       3: dup
       4: aconst_null
       5: invokespecial #141                // Method kotlin/coroutines/SafeContinuation$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #143                // Field Companion:Lkotlin/coroutines/SafeContinuation$Companion;
      11: ldc           #2                  // class kotlin/coroutines/SafeContinuation
      13: ldc           #5                  // class java/lang/Object
      15: ldc           #144                // String result
      17: invokestatic  #148                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      20: putstatic     #40                 // Field RESULT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      23: return
}
