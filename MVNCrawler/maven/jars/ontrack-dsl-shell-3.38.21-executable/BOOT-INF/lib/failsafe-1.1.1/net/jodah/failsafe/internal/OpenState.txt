Compiled from "OpenState.java"
public class net.jodah.failsafe.internal.OpenState extends net.jodah.failsafe.internal.CircuitState {
  private final net.jodah.failsafe.CircuitBreaker circuit;

  private final long startTime;

  public net.jodah.failsafe.internal.OpenState(net.jodah.failsafe.CircuitBreaker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/jodah/failsafe/internal/CircuitState."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
       8: putfield      #3                  // Field startTime:J
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field circuit:Lnet/jodah/failsafe/CircuitBreaker;
      16: return

  public boolean allowsExecution(net.jodah.failsafe.internal.CircuitBreakerStats);
    Code:
       0: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
       3: aload_0
       4: getfield      #3                  // Field startTime:J
       7: lsub
       8: aload_0
       9: getfield      #4                  // Field circuit:Lnet/jodah/failsafe/CircuitBreaker;
      12: invokevirtual #5                  // Method net/jodah/failsafe/CircuitBreaker.getDelay:()Lnet/jodah/failsafe/util/Duration;
      15: invokevirtual #6                  // Method net/jodah/failsafe/util/Duration.toNanos:()J
      18: lcmp
      19: iflt          31
      22: aload_0
      23: getfield      #4                  // Field circuit:Lnet/jodah/failsafe/CircuitBreaker;
      26: invokevirtual #7                  // Method net/jodah/failsafe/CircuitBreaker.halfOpen:()V
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  public net.jodah.failsafe.CircuitBreaker$State getState();
    Code:
       0: getstatic     #8                  // Field net/jodah/failsafe/CircuitBreaker$State.OPEN:Lnet/jodah/failsafe/CircuitBreaker$State;
       3: areturn
}
