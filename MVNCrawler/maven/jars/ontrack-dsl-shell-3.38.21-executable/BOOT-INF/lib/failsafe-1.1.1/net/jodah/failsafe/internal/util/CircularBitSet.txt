Compiled from "CircularBitSet.java"
public class net.jodah.failsafe.internal.util.CircularBitSet {
  final java.util.BitSet bitSet;

  private final int size;

  volatile int nextIndex;

  private volatile int occupiedBits;

  private volatile int positives;

  private volatile int negatives;

  public net.jodah.failsafe.internal.util.CircularBitSet(int, net.jodah.failsafe.internal.util.CircularBitSet);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/BitSet
       8: dup
       9: iload_1
      10: invokespecial #3                  // Method java/util/BitSet."<init>":(I)V
      13: putfield      #4                  // Field bitSet:Ljava/util/BitSet;
      16: aload_0
      17: iload_1
      18: putfield      #5                  // Field size:I
      21: aload_2
      22: ifnull        46
      25: aload_2
      26: dup
      27: astore_3
      28: monitorenter
      29: aload_2
      30: aload_0
      31: invokestatic  #6                  // Method copyBits:(Lnet/jodah/failsafe/internal/util/CircularBitSet;Lnet/jodah/failsafe/internal/util/CircularBitSet;)V
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        4
      41: aload_3
      42: monitorexit
      43: aload         4
      45: athrow
      46: return
    Exception table:
       from    to  target type
          29    36    39   any
          39    43    39   any

  static void copyBits(net.jodah.failsafe.internal.util.CircularBitSet, net.jodah.failsafe.internal.util.CircularBitSet);
    Code:
       0: aload_0
       1: getfield      #7                  // Field occupiedBits:I
       4: aload_1
       5: getfield      #5                  // Field size:I
       8: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      11: istore_2
      12: aload_0
      13: getfield      #9                  // Field nextIndex:I
      16: iload_2
      17: isub
      18: istore_3
      19: iload_3
      20: ifge          30
      23: iload_3
      24: aload_0
      25: getfield      #7                  // Field occupiedBits:I
      28: iadd
      29: istore_3
      30: iconst_0
      31: istore        4
      33: iload         4
      35: iload_2
      36: if_icmpge     64
      39: aload_1
      40: aload_0
      41: getfield      #4                  // Field bitSet:Ljava/util/BitSet;
      44: iload_3
      45: invokevirtual #10                 // Method java/util/BitSet.get:(I)Z
      48: invokevirtual #11                 // Method setNext:(Z)I
      51: pop
      52: iinc          4, 1
      55: aload_0
      56: iload_3
      57: invokespecial #12                 // Method indexAfter:(I)I
      60: istore_3
      61: goto          33
      64: return

  public double negativeRatio();
    Code:
       0: aload_0
       1: getfield      #13                 // Field negatives:I
       4: i2d
       5: aload_0
       6: getfield      #7                  // Field occupiedBits:I
       9: i2d
      10: ddiv
      11: dreturn

  public int occupiedBits();
    Code:
       0: aload_0
       1: getfield      #7                  // Field occupiedBits:I
       4: ireturn

  public double positiveRatio();
    Code:
       0: aload_0
       1: getfield      #14                 // Field positives:I
       4: i2d
       5: aload_0
       6: getfield      #7                  // Field occupiedBits:I
       9: i2d
      10: ddiv
      11: dreturn

  public synchronized int setNext(boolean);
    Code:
       0: iconst_m1
       1: istore_2
       2: aload_0
       3: getfield      #7                  // Field occupiedBits:I
       6: aload_0
       7: getfield      #5                  // Field size:I
      10: if_icmpge     26
      13: aload_0
      14: dup
      15: getfield      #7                  // Field occupiedBits:I
      18: iconst_1
      19: iadd
      20: putfield      #7                  // Field occupiedBits:I
      23: goto          46
      26: aload_0
      27: getfield      #4                  // Field bitSet:Ljava/util/BitSet;
      30: aload_0
      31: getfield      #9                  // Field nextIndex:I
      34: invokevirtual #10                 // Method java/util/BitSet.get:(I)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore_2
      46: aload_0
      47: getfield      #4                  // Field bitSet:Ljava/util/BitSet;
      50: aload_0
      51: getfield      #9                  // Field nextIndex:I
      54: iload_1
      55: invokevirtual #15                 // Method java/util/BitSet.set:(IZ)V
      58: aload_0
      59: aload_0
      60: aload_0
      61: getfield      #9                  // Field nextIndex:I
      64: invokespecial #12                 // Method indexAfter:(I)I
      67: putfield      #9                  // Field nextIndex:I
      70: iload_1
      71: ifeq          106
      74: iload_2
      75: iconst_1
      76: if_icmpeq     89
      79: aload_0
      80: dup
      81: getfield      #14                 // Field positives:I
      84: iconst_1
      85: iadd
      86: putfield      #14                 // Field positives:I
      89: iload_2
      90: ifne          135
      93: aload_0
      94: dup
      95: getfield      #13                 // Field negatives:I
      98: iconst_1
      99: isub
     100: putfield      #13                 // Field negatives:I
     103: goto          135
     106: iload_2
     107: ifeq          120
     110: aload_0
     111: dup
     112: getfield      #13                 // Field negatives:I
     115: iconst_1
     116: iadd
     117: putfield      #13                 // Field negatives:I
     120: iload_2
     121: iconst_1
     122: if_icmpne     135
     125: aload_0
     126: dup
     127: getfield      #14                 // Field positives:I
     130: iconst_1
     131: isub
     132: putfield      #14                 // Field positives:I
     135: iload_2
     136: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        91
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: astore_1
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #7                  // Field occupiedBits:I
      20: if_icmpge     53
      23: iload_2
      24: ifle          34
      27: aload_1
      28: ldc           #19                 // String ,
      30: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: aload_0
      36: getfield      #4                  // Field bitSet:Ljava/util/BitSet;
      39: iload_2
      40: invokevirtual #10                 // Method java/util/BitSet.get:(I)Z
      43: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      46: pop
      47: iinc          2, 1
      50: goto          15
      53: aload_1
      54: bipush        93
      56: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      59: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  private int indexAfter(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field size:I
       5: iconst_1
       6: isub
       7: if_icmpne     14
      10: iconst_0
      11: goto          17
      14: iload_1
      15: iconst_1
      16: iadd
      17: ireturn
}
