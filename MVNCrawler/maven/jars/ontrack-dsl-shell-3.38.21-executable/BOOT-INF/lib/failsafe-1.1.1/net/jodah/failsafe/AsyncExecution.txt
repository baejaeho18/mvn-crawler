Compiled from "AsyncExecution.java"
public final class net.jodah.failsafe.AsyncExecution extends net.jodah.failsafe.AbstractExecution {
  private final java.util.concurrent.Callable<java.lang.Object> callable;

  private final net.jodah.failsafe.FailsafeFuture<java.lang.Object> future;

  private final net.jodah.failsafe.util.concurrent.Scheduler scheduler;

  volatile boolean completeCalled;

  volatile boolean retryCalled;

  <T> net.jodah.failsafe.AsyncExecution(java.util.concurrent.Callable<T>, net.jodah.failsafe.util.concurrent.Scheduler, net.jodah.failsafe.FailsafeFuture<T>, net.jodah.failsafe.FailsafeConfig<java.lang.Object, ?>);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #1                  // Method net/jodah/failsafe/AbstractExecution."<init>":(Lnet/jodah/failsafe/FailsafeConfig;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field callable:Ljava/util/concurrent/Callable;
      11: aload_0
      12: aload_2
      13: putfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      16: aload_0
      17: aload_3
      18: putfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      21: return

  public void complete();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: iconst_0
       4: invokevirtual #5                  // Method complete:(Ljava/lang/Object;Ljava/lang/Throwable;Z)Z
       7: pop
       8: return

  public boolean complete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_1
       4: invokevirtual #5                  // Method complete:(Ljava/lang/Object;Ljava/lang/Throwable;Z)Z
       7: ireturn

  public boolean complete(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #5                  // Method complete:(Ljava/lang/Object;Ljava/lang/Throwable;Z)Z
       7: ireturn

  public boolean retry();
    Code:
       0: aload_0
       1: getfield      #6                  // Field retryCalled:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #7                  // String Retry has already been called
      14: iconst_0
      15: anewarray     #8                  // class java/lang/Object
      18: invokestatic  #9                  // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field retryCalled:Z
      26: aload_0
      27: aload_0
      28: getfield      #10                 // Field lastResult:Ljava/lang/Object;
      31: aload_0
      32: getfield      #11                 // Field lastFailure:Ljava/lang/Throwable;
      35: invokevirtual #12                 // Method completeOrRetry:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      38: ireturn

  public boolean retryFor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #13                 // Method retryFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
       6: ireturn

  public boolean retryFor(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field retryCalled:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #7                  // String Retry has already been called
      14: iconst_0
      15: anewarray     #8                  // class java/lang/Object
      18: invokestatic  #9                  // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field retryCalled:Z
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #12                 // Method completeOrRetry:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      32: ireturn

  public boolean retryOn(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #14                 // String failure
       3: invokestatic  #15                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aconst_null
       9: aload_1
      10: invokevirtual #13                 // Method retryFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      13: ireturn

  void before();
    Code:
       0: aload_0
       1: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
       4: getfield      #17                 // Field net/jodah/failsafe/FailsafeConfig.circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
       7: ifnull        72
      10: aload_0
      11: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      14: getfield      #17                 // Field net/jodah/failsafe/FailsafeConfig.circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      17: invokevirtual #18                 // Method net/jodah/failsafe/CircuitBreaker.allowsExecution:()Z
      20: ifne          72
      23: aload_0
      24: iconst_1
      25: putfield      #19                 // Field completed:Z
      28: new           #20                 // class net/jodah/failsafe/CircuitBreakerOpenException
      31: dup
      32: invokespecial #21                 // Method net/jodah/failsafe/CircuitBreakerOpenException."<init>":()V
      35: astore_1
      36: aload_0
      37: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      40: ifnull        54
      43: aload_0
      44: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      47: aconst_null
      48: aload_1
      49: aload_0
      50: iconst_0
      51: invokevirtual #22                 // Method net/jodah/failsafe/FailsafeConfig.handleComplete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;Z)V
      54: aload_0
      55: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      58: aconst_null
      59: aload_1
      60: aload_0
      61: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      64: getfield      #23                 // Field net/jodah/failsafe/FailsafeConfig.fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
      67: iconst_0
      68: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeFuture.complete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/function/CheckedBiFunction;Z)V
      71: return
      72: aload_0
      73: getfield      #25                 // Field completeCalled:Z
      76: ifeq          102
      79: aload_0
      80: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      83: ifnull        102
      86: aload_0
      87: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      90: aload_0
      91: getfield      #10                 // Field lastResult:Ljava/lang/Object;
      94: aload_0
      95: getfield      #11                 // Field lastFailure:Ljava/lang/Throwable;
      98: aload_0
      99: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig.handleRetry:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
     102: aload_0
     103: invokespecial #27                 // Method net/jodah/failsafe/AbstractExecution.before:()V
     106: aload_0
     107: iconst_0
     108: putfield      #25                 // Field completeCalled:Z
     111: aload_0
     112: iconst_0
     113: putfield      #6                  // Field retryCalled:Z
     116: return

  boolean complete(java.lang.Object, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #25                 // Field completeCalled:Z
      12: ifne          50
      15: aload_0
      16: aload_1
      17: aload_2
      18: iload_3
      19: invokespecial #28                 // Method net/jodah/failsafe/AbstractExecution.complete:(Ljava/lang/Object;Ljava/lang/Throwable;Z)Z
      22: ifeq          45
      25: aload_0
      26: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      29: aload_1
      30: aload_2
      31: aload_0
      32: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      35: getfield      #23                 // Field net/jodah/failsafe/FailsafeConfig.fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
      38: aload_0
      39: getfield      #29                 // Field success:Z
      42: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeFuture.complete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/function/CheckedBiFunction;Z)V
      45: aload_0
      46: iconst_1
      47: putfield      #25                 // Field completeCalled:Z
      50: aload_0
      51: getfield      #19                 // Field completed:Z
      54: aload         4
      56: monitorexit
      57: ireturn
      58: astore        5
      60: aload         4
      62: monitorexit
      63: aload         5
      65: athrow
    Exception table:
       from    to  target type
           8    57    58   any
          58    63    58   any

  boolean completeOrRetry(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: aload_1
       9: aload_2
      10: iconst_1
      11: invokevirtual #5                  // Method complete:(Ljava/lang/Object;Ljava/lang/Throwable;Z)Z
      14: ifne          109
      17: aload_0
      18: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      21: invokevirtual #30                 // Method net/jodah/failsafe/FailsafeFuture.isDone:()Z
      24: ifne          109
      27: aload_0
      28: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      31: invokevirtual #31                 // Method net/jodah/failsafe/FailsafeFuture.isCancelled:()Z
      34: ifne          109
      37: aload_0
      38: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      41: aload_0
      42: getfield      #3                  // Field scheduler:Lnet/jodah/failsafe/util/concurrent/Scheduler;
      45: aload_0
      46: getfield      #2                  // Field callable:Ljava/util/concurrent/Callable;
      49: aload_0
      50: getfield      #32                 // Field waitNanos:J
      53: getstatic     #33                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      56: invokeinterface #34,  5           // InterfaceMethod net/jodah/failsafe/util/concurrent/Scheduler.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      61: invokevirtual #35                 // Method net/jodah/failsafe/FailsafeFuture.inject:(Ljava/util/concurrent/Future;)V
      64: iconst_1
      65: aload_3
      66: monitorexit
      67: ireturn
      68: astore        4
      70: aload         4
      72: astore_2
      73: aload_0
      74: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      77: ifnull        92
      80: aload_0
      81: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      84: aconst_null
      85: aload         4
      87: aload_0
      88: iconst_0
      89: invokevirtual #22                 // Method net/jodah/failsafe/FailsafeConfig.handleComplete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;Z)V
      92: aload_0
      93: getfield      #4                  // Field future:Lnet/jodah/failsafe/FailsafeFuture;
      96: aconst_null
      97: aload_2
      98: aload_0
      99: getfield      #16                 // Field config:Lnet/jodah/failsafe/FailsafeConfig;
     102: getfield      #23                 // Field net/jodah/failsafe/FailsafeConfig.fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
     105: iconst_0
     106: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeFuture.complete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/function/CheckedBiFunction;Z)V
     109: iconst_0
     110: aload_3
     111: monitorexit
     112: ireturn
     113: astore        5
     115: aload_3
     116: monitorexit
     117: aload         5
     119: athrow
    Exception table:
       from    to  target type
          37    65    68   Class java/lang/Throwable
           7    67   113   any
          68   112   113   any
         113   117   113   any

  public boolean isComplete();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method net/jodah/failsafe/AbstractExecution.isComplete:()Z
       4: ireturn

  public net.jodah.failsafe.util.Duration getWaitTime();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method net/jodah/failsafe/AbstractExecution.getWaitTime:()Lnet/jodah/failsafe/util/Duration;
       4: areturn

  public java.lang.Object getLastResult();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method net/jodah/failsafe/AbstractExecution.getLastResult:()Ljava/lang/Object;
       4: areturn

  public java.lang.Throwable getLastFailure();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method net/jodah/failsafe/AbstractExecution.getLastFailure:()Ljava/lang/Throwable;
       4: areturn
}
