Compiled from "FailsafeConfig.java"
public class net.jodah.failsafe.FailsafeConfig<R, F> {
  net.jodah.failsafe.RetryPolicy retryPolicy;

  net.jodah.failsafe.CircuitBreaker circuitBreaker;

  net.jodah.failsafe.function.CheckedBiFunction<R, java.lang.Throwable, R> fallback;

  net.jodah.failsafe.Listeners<R> listeners;

  net.jodah.failsafe.FailsafeConfig$ListenerRegistry<R> listenerRegistry;

  net.jodah.failsafe.FailsafeConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field net/jodah/failsafe/RetryPolicy.NEVER:Lnet/jodah/failsafe/RetryPolicy;
       8: putfield      #3                  // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      11: return

  net.jodah.failsafe.FailsafeConfig(net.jodah.failsafe.FailsafeConfig<R, ?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field net/jodah/failsafe/RetryPolicy.NEVER:Lnet/jodah/failsafe/RetryPolicy;
       8: putfield      #3                  // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      11: aload_0
      12: aload_1
      13: getfield      #3                  // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      16: putfield      #3                  // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      19: aload_0
      20: aload_1
      21: getfield      #4                  // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      24: putfield      #4                  // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      27: aload_0
      28: aload_1
      29: getfield      #5                  // Field fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
      32: putfield      #5                  // Field fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
      35: aload_0
      36: aload_1
      37: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      40: putfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      43: aload_0
      44: aload_1
      45: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      48: putfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      51: return

  static <T> void call(java.util.List<net.jodah.failsafe.event.ContextualResultListener<T, java.lang.Throwable>>, T, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore        4
       8: aload         4
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          48
      18: aload         4
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #11                 // class net/jodah/failsafe/event/ContextualResultListener
      28: astore        5
      30: aload         5
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokeinterface #12,  4           // InterfaceMethod net/jodah/failsafe/event/ContextualResultListener.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      40: goto          45
      43: astore        6
      45: goto          8
      48: return
    Exception table:
       from    to  target type
          30    40    43   Class java/lang/Exception

  public F onAbort(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #15                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.abort:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onAbort(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #15                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.abort:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onAbort(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #15                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.abort:()Ljava/util/List;
       7: aload_1
       8: ldc           #19                 // String listener
      10: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #11                 // class net/jodah/failsafe/event/ContextualResultListener
      16: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: areturn

  public F onAbortAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #15                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.abort:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onAbortAsync(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #15                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.abort:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onAbortAsync(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #15                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.abort:()Ljava/util/List;
       7: aload_1
       8: aload_2
       9: ldc           #21                 // String executor
      11: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #22                 // class java/util/concurrent/ExecutorService
      17: aconst_null
      18: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      21: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: areturn

  public F onComplete(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.complete:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onComplete(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.complete:()Ljava/util/List;
       7: aload_1
       8: ldc           #19                 // String listener
      10: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #11                 // class net/jodah/failsafe/event/ContextualResultListener
      16: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: areturn

  public F onCompleteAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.complete:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onCompleteAsync(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #24                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.complete:()Ljava/util/List;
       7: aload_1
       8: aload_2
       9: ldc           #21                 // String executor
      11: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #22                 // class java/util/concurrent/ExecutorService
      17: aconst_null
      18: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      21: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: areturn

  public F onFailedAttempt(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #25                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failedAttempt:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onFailedAttempt(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #25                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failedAttempt:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onFailedAttempt(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #25                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failedAttempt:()Ljava/util/List;
       7: aload_1
       8: ldc           #19                 // String listener
      10: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #11                 // class net/jodah/failsafe/event/ContextualResultListener
      16: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: areturn

  public F onFailedAttemptAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #25                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failedAttempt:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onFailedAttemptAsync(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #25                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failedAttempt:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onFailedAttemptAsync(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #25                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failedAttempt:()Ljava/util/List;
       7: aload_1
       8: aload_2
       9: ldc           #21                 // String executor
      11: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #22                 // class java/util/concurrent/ExecutorService
      17: aconst_null
      18: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      21: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: areturn

  public F onFailure(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failure:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onFailure(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failure:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onFailure(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failure:()Ljava/util/List;
       7: aload_1
       8: ldc           #19                 // String listener
      10: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #11                 // class net/jodah/failsafe/event/ContextualResultListener
      16: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: areturn

  public F onFailureAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failure:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onFailureAsync(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failure:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onFailureAsync(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #26                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.failure:()Ljava/util/List;
       7: aload_1
       8: aload_2
       9: ldc           #21                 // String executor
      11: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #22                 // class java/util/concurrent/ExecutorService
      17: aconst_null
      18: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      21: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: areturn

  public F onRetriesExceeded(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #27                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retriesExceeded:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onRetriesExceeded(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #27                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retriesExceeded:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onRetriesExceededAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #27                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retriesExceeded:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onRetriesExceededAsync(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #27                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retriesExceeded:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onRetry(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retry:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onRetry(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retry:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onRetry(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retry:()Ljava/util/List;
       7: aload_1
       8: ldc           #19                 // String listener
      10: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: checkcast     #11                 // class net/jodah/failsafe/event/ContextualResultListener
      16: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: aload_0
      23: areturn

  public F onRetryAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retry:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #16                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onRetryAsync(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retry:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #18                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onRetryAsync(net.jodah.failsafe.event.ContextualResultListener<? extends R, ? extends java.lang.Throwable>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #28                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.retry:()Ljava/util/List;
       7: aload_1
       8: aload_2
       9: ldc           #21                 // String executor
      11: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #22                 // class java/util/concurrent/ExecutorService
      17: aconst_null
      18: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      21: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: areturn

  public F onSuccess(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, net.jodah.failsafe.ExecutionContext>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #29                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.success:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #30                 // Method net/jodah/failsafe/Listeners.ofResult:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onSuccess(net.jodah.failsafe.function.CheckedConsumer<? extends R>);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #29                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.success:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #31                 // Method net/jodah/failsafe/Listeners.ofResult:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: areturn

  public F onSuccessAsync(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, net.jodah.failsafe.ExecutionContext>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #29                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.success:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #30                 // Method net/jodah/failsafe/Listeners.ofResult:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F onSuccessAsync(net.jodah.failsafe.function.CheckedConsumer<? extends R>, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method registry:()Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: invokevirtual #29                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.success:()Ljava/util/List;
       7: aload_1
       8: invokestatic  #31                 // Method net/jodah/failsafe/Listeners.ofResult:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/event/ContextualResultListener;
      11: aload_2
      12: ldc           #21                 // String executor
      14: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/util/concurrent/ExecutorService
      20: aconst_null
      21: invokestatic  #23                 // Method net/jodah/failsafe/Listeners.of:(Lnet/jodah/failsafe/event/ContextualResultListener;Ljava/util/concurrent/ExecutorService;Lnet/jodah/failsafe/util/concurrent/Scheduler;)Lnet/jodah/failsafe/event/ContextualResultListener;
      24: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: areturn

  public F with(net.jodah.failsafe.CircuitBreaker);
    Code:
       0: aload_0
       1: getfield      #4                  // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #32                 // String A circuit breaker has already been configured
      14: iconst_0
      15: anewarray     #33                 // class java/lang/Object
      18: invokestatic  #34                 // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: ldc           #35                 // String circuitBreaker
      25: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #36                 // class net/jodah/failsafe/CircuitBreaker
      31: putfield      #4                  // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      34: aload_0
      35: areturn

  public <T> F with(net.jodah.failsafe.Listeners<T>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #37                 // String listeners
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #38                 // class net/jodah/failsafe/Listeners
      10: putfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      13: aload_0
      14: areturn

  public F with(net.jodah.failsafe.RetryPolicy);
    Code:
       0: aload_0
       1: getfield      #3                  // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
       4: getstatic     #2                  // Field net/jodah/failsafe/RetryPolicy.NEVER:Lnet/jodah/failsafe/RetryPolicy;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #39                 // String A retry policy has already been configurd
      17: iconst_0
      18: anewarray     #33                 // class java/lang/Object
      21: invokestatic  #34                 // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: ldc           #40                 // String retryPolicy
      28: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #41                 // class net/jodah/failsafe/RetryPolicy
      34: putfield      #3                  // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      37: aload_0
      38: areturn

  public F withFallback(java.util.concurrent.Callable<? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #42                 // String fallback
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #43                 // class java/util/concurrent/Callable
      10: invokestatic  #44                 // Method net/jodah/failsafe/Functions.fnOf:(Ljava/util/concurrent/Callable;)Lnet/jodah/failsafe/function/CheckedBiFunction;
      13: invokevirtual #45                 // Method withFallback:(Lnet/jodah/failsafe/function/CheckedBiFunction;)Ljava/lang/Object;
      16: areturn

  public F withFallback(net.jodah.failsafe.function.CheckedBiConsumer<? extends R, ? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #42                 // String fallback
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #46                 // class net/jodah/failsafe/function/CheckedBiConsumer
      10: invokestatic  #47                 // Method net/jodah/failsafe/Functions.fnOf:(Lnet/jodah/failsafe/function/CheckedBiConsumer;)Lnet/jodah/failsafe/function/CheckedBiFunction;
      13: invokevirtual #45                 // Method withFallback:(Lnet/jodah/failsafe/function/CheckedBiFunction;)Ljava/lang/Object;
      16: areturn

  public F withFallback(net.jodah.failsafe.function.CheckedBiFunction<? extends R, ? extends java.lang.Throwable, ? extends R>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #48                 // String withFallback has already been called
      14: iconst_0
      15: anewarray     #33                 // class java/lang/Object
      18: invokestatic  #34                 // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: ldc           #42                 // String fallback
      25: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #49                 // class net/jodah/failsafe/function/CheckedBiFunction
      31: putfield      #5                  // Field fallback:Lnet/jodah/failsafe/function/CheckedBiFunction;
      34: aload_0
      35: areturn

  public F withFallback(net.jodah.failsafe.function.CheckedConsumer<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #42                 // String fallback
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #50                 // class net/jodah/failsafe/function/CheckedConsumer
      10: invokestatic  #51                 // Method net/jodah/failsafe/Functions.fnOf:(Lnet/jodah/failsafe/function/CheckedConsumer;)Lnet/jodah/failsafe/function/CheckedBiFunction;
      13: invokevirtual #45                 // Method withFallback:(Lnet/jodah/failsafe/function/CheckedBiFunction;)Ljava/lang/Object;
      16: areturn

  public F withFallback(net.jodah.failsafe.function.CheckedFunction<? extends java.lang.Throwable, ? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #42                 // String fallback
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #52                 // class net/jodah/failsafe/function/CheckedFunction
      10: invokestatic  #53                 // Method net/jodah/failsafe/Functions.fnOf:(Lnet/jodah/failsafe/function/CheckedFunction;)Lnet/jodah/failsafe/function/CheckedBiFunction;
      13: invokevirtual #45                 // Method withFallback:(Lnet/jodah/failsafe/function/CheckedBiFunction;)Ljava/lang/Object;
      16: areturn

  public F withFallback(net.jodah.failsafe.function.CheckedRunnable);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #42                 // String fallback
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #54                 // class net/jodah/failsafe/function/CheckedRunnable
      10: invokestatic  #55                 // Method net/jodah/failsafe/Functions.fnOf:(Lnet/jodah/failsafe/function/CheckedRunnable;)Lnet/jodah/failsafe/function/CheckedBiFunction;
      13: invokevirtual #45                 // Method withFallback:(Lnet/jodah/failsafe/function/CheckedBiFunction;)Ljava/lang/Object;
      16: areturn

  public F withFallback(R);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #42                 // String fallback
       4: invokestatic  #20                 // Method net/jodah/failsafe/internal/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: invokestatic  #56                 // Method net/jodah/failsafe/Functions.fnOf:(Ljava/lang/Object;)Lnet/jodah/failsafe/function/CheckedBiFunction;
      10: invokevirtual #45                 // Method withFallback:(Lnet/jodah/failsafe/function/CheckedBiFunction;)Ljava/lang/Object;
      13: areturn

  void handleAbort(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #57                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$000:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_3
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_3
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #57                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$000:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        71
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: aload_2
      48: invokevirtual #60                 // Method net/jodah/failsafe/Listeners.onAbort:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: goto          56
      54: astore        4
      56: aload_0
      57: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #61                 // Method net/jodah/failsafe/Listeners.onAbort:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      66: goto          71
      69: astore        4
      71: return
    Exception table:
       from    to  target type
          42    51    54   Class java/lang/Exception
          56    66    69   Class java/lang/Exception

  void handleComplete(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext, boolean);
    Code:
       0: iload         4
       2: ifeq          14
       5: aload_0
       6: aload_1
       7: aload_3
       8: invokespecial #62                 // Method handleSuccess:(Ljava/lang/Object;Lnet/jodah/failsafe/ExecutionContext;)V
      11: goto          21
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokespecial #63                 // Method handleFailure:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: invokespecial #64                 // Method handleComplete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      28: return

  void handleFailedAttempt(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #65                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$100:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_3
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_3
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #65                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$100:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        71
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: aload_2
      48: invokevirtual #66                 // Method net/jodah/failsafe/Listeners.onFailedAttempt:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: goto          56
      54: astore        4
      56: aload_0
      57: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #67                 // Method net/jodah/failsafe/Listeners.onFailedAttempt:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      66: goto          71
      69: astore        4
      71: return
    Exception table:
       from    to  target type
          42    51    54   Class java/lang/Exception
          56    66    69   Class java/lang/Exception

  void handleRetriesExceeded(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #68                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$200:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_3
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_3
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #68                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$200:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        56
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: aload_2
      48: invokevirtual #69                 // Method net/jodah/failsafe/Listeners.onRetriesExceeded:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: goto          56
      54: astore        4
      56: return
    Exception table:
       from    to  target type
          42    51    54   Class java/lang/Exception

  void handleRetry(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #70                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$300:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_3
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_3
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #70                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$300:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        71
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: aload_2
      48: invokevirtual #71                 // Method net/jodah/failsafe/Listeners.onRetry:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: goto          56
      54: astore        4
      56: aload_0
      57: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #72                 // Method net/jodah/failsafe/Listeners.onRetry:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      66: goto          71
      69: astore        4
      71: return
    Exception table:
       from    to  target type
          42    51    54   Class java/lang/Exception
          56    66    69   Class java/lang/Exception

  net.jodah.failsafe.FailsafeConfig$ListenerRegistry<R> registry();
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        14
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: goto          26
      14: aload_0
      15: new           #73                 // class net/jodah/failsafe/FailsafeConfig$ListenerRegistry
      18: dup
      19: invokespecial #74                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry."<init>":()V
      22: dup_x1
      23: putfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: areturn

  private void handleComplete(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #75                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$400:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_3
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_3
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #75                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$400:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        71
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: aload_2
      48: invokevirtual #76                 // Method net/jodah/failsafe/Listeners.onComplete:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: goto          56
      54: astore        4
      56: aload_0
      57: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #77                 // Method net/jodah/failsafe/Listeners.onComplete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      66: goto          71
      69: astore        4
      71: return
    Exception table:
       from    to  target type
          42    51    54   Class java/lang/Exception
          56    66    69   Class java/lang/Exception

  private void handleFailure(R, java.lang.Throwable, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #78                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$500:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_3
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_3
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #78                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$500:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        71
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: aload_2
      48: invokevirtual #79                 // Method net/jodah/failsafe/Listeners.onFailure:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: goto          56
      54: astore        4
      56: aload_0
      57: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #80                 // Method net/jodah/failsafe/Listeners.onFailure:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      66: goto          71
      69: astore        4
      71: return
    Exception table:
       from    to  target type
          42    51    54   Class java/lang/Exception
          56    66    69   Class java/lang/Exception

  private void handleSuccess(R, net.jodah.failsafe.ExecutionContext);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
       4: ifnull        35
       7: aload_0
       8: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      11: invokestatic  #81                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$600:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      14: ifnull        35
      17: aload_2
      18: invokevirtual #58                 // Method net/jodah/failsafe/ExecutionContext.copy:()Lnet/jodah/failsafe/ExecutionContext;
      21: astore_2
      22: aload_0
      23: getfield      #7                  // Field listenerRegistry:Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;
      26: invokestatic  #81                 // Method net/jodah/failsafe/FailsafeConfig$ListenerRegistry.access$600:(Lnet/jodah/failsafe/FailsafeConfig$ListenerRegistry;)Ljava/util/List;
      29: aload_1
      30: aconst_null
      31: aload_2
      32: invokestatic  #59                 // Method call:(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
      35: aload_0
      36: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      39: ifnull        67
      42: aload_0
      43: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      46: aload_1
      47: invokevirtual #82                 // Method net/jodah/failsafe/Listeners.onSuccess:(Ljava/lang/Object;)V
      50: goto          54
      53: astore_3
      54: aload_0
      55: getfield      #6                  // Field listeners:Lnet/jodah/failsafe/Listeners;
      58: aload_1
      59: aload_2
      60: invokevirtual #83                 // Method net/jodah/failsafe/Listeners.onSuccess:(Ljava/lang/Object;Lnet/jodah/failsafe/ExecutionContext;)V
      63: goto          67
      66: astore_3
      67: return
    Exception table:
       from    to  target type
          42    50    53   Class java/lang/Exception
          54    63    66   Class java/lang/Exception
}
