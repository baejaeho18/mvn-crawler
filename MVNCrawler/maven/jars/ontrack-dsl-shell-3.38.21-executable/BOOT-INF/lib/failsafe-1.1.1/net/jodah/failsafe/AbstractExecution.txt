Compiled from "AbstractExecution.java"
abstract class net.jodah.failsafe.AbstractExecution extends net.jodah.failsafe.ExecutionContext {
  final net.jodah.failsafe.FailsafeConfig<java.lang.Object, ?> config;

  final net.jodah.failsafe.RetryPolicy retryPolicy;

  final net.jodah.failsafe.CircuitBreaker circuitBreaker;

  long attemptStartTime;

  volatile java.lang.Object lastResult;

  volatile java.lang.Throwable lastFailure;

  volatile boolean completed;

  volatile boolean retriesExceeded;

  volatile boolean success;

  private volatile long delayNanos;

  volatile long waitNanos;

  net.jodah.failsafe.AbstractExecution(net.jodah.failsafe.FailsafeConfig<java.lang.Object, ?>);
    Code:
       0: aload_0
       1: new           #1                  // class net/jodah/failsafe/util/Duration
       4: dup
       5: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
       8: getstatic     #3                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokespecial #4                  // Method net/jodah/failsafe/util/Duration."<init>":(JLjava/util/concurrent/TimeUnit;)V
      14: invokespecial #5                  // Method net/jodah/failsafe/ExecutionContext."<init>":(Lnet/jodah/failsafe/util/Duration;)V
      17: aload_0
      18: ldc2_w        #6                  // long -1l
      21: putfield      #8                  // Field delayNanos:J
      24: aload_0
      25: aload_1
      26: putfield      #9                  // Field config:Lnet/jodah/failsafe/FailsafeConfig;
      29: aload_0
      30: aload_1
      31: getfield      #10                 // Field net/jodah/failsafe/FailsafeConfig.retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      34: putfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
      37: aload_0
      38: aload_1
      39: getfield      #12                 // Field net/jodah/failsafe/FailsafeConfig.circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      42: putfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      45: return

  public <T extends java.lang.Throwable> T getLastFailure();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lastFailure:Ljava/lang/Throwable;
       4: areturn

  public <T> T getLastResult();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lastResult:Ljava/lang/Object;
       4: areturn

  public net.jodah.failsafe.util.Duration getWaitTime();
    Code:
       0: new           #1                  // class net/jodah/failsafe/util/Duration
       3: dup
       4: aload_0
       5: getfield      #16                 // Field waitNanos:J
       8: getstatic     #3                  // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokespecial #4                  // Method net/jodah/failsafe/util/Duration."<init>":(JLjava/util/concurrent/TimeUnit;)V
      14: areturn

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #17                 // Field completed:Z
       4: ireturn

  void before();
    Code:
       0: aload_0
       1: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
       4: ifnull        14
       7: aload_0
       8: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      11: invokevirtual #18                 // Method net/jodah/failsafe/CircuitBreaker.before:()V
      14: aload_0
      15: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
      18: putfield      #19                 // Field attemptStartTime:J
      21: return

  boolean complete(java.lang.Object, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field completed:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #20                 // String Execution has already been completed
      14: iconst_0
      15: anewarray     #21                 // class java/lang/Object
      18: invokestatic  #22                 // Method net/jodah/failsafe/internal/util/Assert.state:(ZLjava/lang/String;[Ljava/lang/Object;)V
      21: aload_0
      22: dup
      23: getfield      #23                 // Field executions:I
      26: iconst_1
      27: iadd
      28: putfield      #23                 // Field executions:I
      31: aload_0
      32: aload_1
      33: putfield      #15                 // Field lastResult:Ljava/lang/Object;
      36: aload_0
      37: aload_2
      38: putfield      #14                 // Field lastFailure:Ljava/lang/Throwable;
      41: aload_0
      42: invokevirtual #24                 // Method getElapsedTime:()Lnet/jodah/failsafe/util/Duration;
      45: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
      48: lstore        4
      50: aload_0
      51: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      54: ifnull        123
      57: aload_0
      58: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      61: invokevirtual #26                 // Method net/jodah/failsafe/CircuitBreaker.getTimeout:()Lnet/jodah/failsafe/util/Duration;
      64: astore        6
      66: aload         6
      68: ifnull        86
      71: lload         4
      73: aload         6
      75: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
      78: lcmp
      79: iflt          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: istore        7
      89: aload_0
      90: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
      93: aload_1
      94: aload_2
      95: invokevirtual #27                 // Method net/jodah/failsafe/CircuitBreaker.isFailure:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
      98: ifne          106
     101: iload         7
     103: ifeq          116
     106: aload_0
     107: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
     110: invokevirtual #28                 // Method net/jodah/failsafe/CircuitBreaker.recordFailure:()V
     113: goto          123
     116: aload_0
     117: getfield      #13                 // Field circuitBreaker:Lnet/jodah/failsafe/CircuitBreaker;
     120: invokevirtual #29                 // Method net/jodah/failsafe/CircuitBreaker.recordSuccess:()V
     123: ldc2_w        #6                  // long -1l
     126: lstore        6
     128: aload_0
     129: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     132: invokevirtual #30                 // Method net/jodah/failsafe/RetryPolicy.getDelayFn:()Lnet/jodah/failsafe/RetryPolicy$DelayFunction;
     135: astore        8
     137: aload         8
     139: ifnull        188
     142: aload_0
     143: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     146: aload_1
     147: aload_2
     148: invokevirtual #31                 // Method net/jodah/failsafe/RetryPolicy.canApplyDelayFn:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
     151: ifeq          188
     154: aload         8
     156: aload_1
     157: aload_2
     158: aload_0
     159: invokeinterface #32,  4           // InterfaceMethod net/jodah/failsafe/RetryPolicy$DelayFunction.computeDelay:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)Lnet/jodah/failsafe/util/Duration;
     164: astore        9
     166: aload         9
     168: ifnull        188
     171: aload         9
     173: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     176: lconst_0
     177: lcmp
     178: iflt          188
     181: aload         9
     183: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     186: lstore        6
     188: lload         6
     190: ldc2_w        #6                  // long -1l
     193: lcmp
     194: ifne          343
     197: aload_0
     198: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     201: invokevirtual #33                 // Method net/jodah/failsafe/RetryPolicy.getDelay:()Lnet/jodah/failsafe/util/Duration;
     204: astore        9
     206: aload_0
     207: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     210: invokevirtual #34                 // Method net/jodah/failsafe/RetryPolicy.getDelayMin:()Lnet/jodah/failsafe/util/Duration;
     213: astore        10
     215: aload_0
     216: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     219: invokevirtual #35                 // Method net/jodah/failsafe/RetryPolicy.getDelayMax:()Lnet/jodah/failsafe/util/Duration;
     222: astore        11
     224: aload_0
     225: getfield      #8                  // Field delayNanos:J
     228: ldc2_w        #6                  // long -1l
     231: lcmp
     232: ifne          263
     235: aload         9
     237: ifnull        263
     240: aload         9
     242: getstatic     #36                 // Field net/jodah/failsafe/util/Duration.NONE:Lnet/jodah/failsafe/util/Duration;
     245: invokevirtual #37                 // Method net/jodah/failsafe/util/Duration.equals:(Ljava/lang/Object;)Z
     248: ifne          263
     251: aload_0
     252: aload         9
     254: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     257: putfield      #8                  // Field delayNanos:J
     260: goto          293
     263: aload         10
     265: ifnull        293
     268: aload         11
     270: ifnull        293
     273: aload_0
     274: aload         10
     276: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     279: aload         10
     281: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     284: invokestatic  #38                 // Method java/lang/Math.random:()D
     287: invokestatic  #39                 // Method randomDelayInRange:(JJD)J
     290: putfield      #8                  // Field delayNanos:J
     293: aload_0
     294: getfield      #23                 // Field executions:I
     297: iconst_1
     298: if_icmpeq     343
     301: aload_0
     302: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     305: invokevirtual #40                 // Method net/jodah/failsafe/RetryPolicy.getMaxDelay:()Lnet/jodah/failsafe/util/Duration;
     308: ifnull        343
     311: aload_0
     312: aload_0
     313: getfield      #8                  // Field delayNanos:J
     316: l2d
     317: aload_0
     318: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     321: invokevirtual #41                 // Method net/jodah/failsafe/RetryPolicy.getDelayFactor:()D
     324: dmul
     325: aload_0
     326: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     329: invokevirtual #40                 // Method net/jodah/failsafe/RetryPolicy.getMaxDelay:()Lnet/jodah/failsafe/util/Duration;
     332: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     335: l2d
     336: invokestatic  #42                 // Method java/lang/Math.min:(DD)D
     339: d2l
     340: putfield      #8                  // Field delayNanos:J
     343: aload_0
     344: lload         6
     346: ldc2_w        #6                  // long -1l
     349: lcmp
     350: ifeq          358
     353: lload         6
     355: goto          362
     358: aload_0
     359: getfield      #8                  // Field delayNanos:J
     362: putfield      #16                 // Field waitNanos:J
     365: aload_0
     366: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     369: invokevirtual #43                 // Method net/jodah/failsafe/RetryPolicy.getJitter:()Lnet/jodah/failsafe/util/Duration;
     372: ifnull        402
     375: aload_0
     376: aload_0
     377: getfield      #16                 // Field waitNanos:J
     380: aload_0
     381: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     384: invokevirtual #43                 // Method net/jodah/failsafe/RetryPolicy.getJitter:()Lnet/jodah/failsafe/util/Duration;
     387: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     390: invokestatic  #38                 // Method java/lang/Math.random:()D
     393: invokestatic  #44                 // Method randomDelay:(JJD)J
     396: putfield      #16                 // Field waitNanos:J
     399: goto          435
     402: aload_0
     403: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     406: invokevirtual #45                 // Method net/jodah/failsafe/RetryPolicy.getJitterFactor:()D
     409: dconst_0
     410: dcmpl
     411: ifle          435
     414: aload_0
     415: aload_0
     416: getfield      #16                 // Field waitNanos:J
     419: aload_0
     420: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     423: invokevirtual #45                 // Method net/jodah/failsafe/RetryPolicy.getJitterFactor:()D
     426: invokestatic  #38                 // Method java/lang/Math.random:()D
     429: invokestatic  #46                 // Method randomDelay:(JDD)J
     432: putfield      #16                 // Field waitNanos:J
     435: aload_0
     436: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     439: invokevirtual #47                 // Method net/jodah/failsafe/RetryPolicy.getMaxDuration:()Lnet/jodah/failsafe/util/Duration;
     442: ifnull        498
     445: aload_0
     446: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     449: invokevirtual #47                 // Method net/jodah/failsafe/RetryPolicy.getMaxDuration:()Lnet/jodah/failsafe/util/Duration;
     452: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     455: lload         4
     457: lsub
     458: lstore        9
     460: aload_0
     461: aload_0
     462: getfield      #16                 // Field waitNanos:J
     465: lload         9
     467: lconst_0
     468: lcmp
     469: ifge          476
     472: lconst_0
     473: goto          478
     476: lload         9
     478: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
     481: putfield      #16                 // Field waitNanos:J
     484: aload_0
     485: getfield      #16                 // Field waitNanos:J
     488: lconst_0
     489: lcmp
     490: ifge          498
     493: aload_0
     494: lconst_0
     495: putfield      #16                 // Field waitNanos:J
     498: aload_0
     499: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     502: invokevirtual #49                 // Method net/jodah/failsafe/RetryPolicy.getMaxRetries:()I
     505: iconst_m1
     506: if_icmpeq     527
     509: aload_0
     510: getfield      #23                 // Field executions:I
     513: aload_0
     514: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     517: invokevirtual #49                 // Method net/jodah/failsafe/RetryPolicy.getMaxRetries:()I
     520: if_icmple     527
     523: iconst_1
     524: goto          528
     527: iconst_0
     528: istore        9
     530: aload_0
     531: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     534: invokevirtual #47                 // Method net/jodah/failsafe/RetryPolicy.getMaxDuration:()Lnet/jodah/failsafe/util/Duration;
     537: ifnull        560
     540: lload         4
     542: aload_0
     543: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     546: invokevirtual #47                 // Method net/jodah/failsafe/RetryPolicy.getMaxDuration:()Lnet/jodah/failsafe/util/Duration;
     549: invokevirtual #25                 // Method net/jodah/failsafe/util/Duration.toNanos:()J
     552: lcmp
     553: ifle          560
     556: iconst_1
     557: goto          561
     560: iconst_0
     561: istore        10
     563: aload_0
     564: iload         9
     566: ifne          574
     569: iload         10
     571: ifeq          578
     574: iconst_1
     575: goto          579
     578: iconst_0
     579: putfield      #50                 // Field retriesExceeded:Z
     582: aload_0
     583: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     586: aload_1
     587: aload_2
     588: invokevirtual #51                 // Method net/jodah/failsafe/RetryPolicy.canAbortFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
     591: istore        11
     593: aload_0
     594: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     597: aload_1
     598: aload_2
     599: invokevirtual #52                 // Method net/jodah/failsafe/RetryPolicy.canRetryFor:(Ljava/lang/Object;Ljava/lang/Throwable;)Z
     602: istore        12
     604: aload_0
     605: getfield      #50                 // Field retriesExceeded:Z
     608: ifne          639
     611: iload_3
     612: ifeq          639
     615: iload         11
     617: ifne          639
     620: aload_0
     621: getfield      #11                 // Field retryPolicy:Lnet/jodah/failsafe/RetryPolicy;
     624: invokevirtual #53                 // Method net/jodah/failsafe/RetryPolicy.allowsRetries:()Z
     627: ifeq          639
     630: iload         12
     632: ifeq          639
     635: iconst_1
     636: goto          640
     639: iconst_0
     640: istore        13
     642: aload_0
     643: iload         11
     645: ifne          653
     648: iload         13
     650: ifne          657
     653: iconst_1
     654: goto          658
     657: iconst_0
     658: putfield      #17                 // Field completed:Z
     661: aload_0
     662: aload_0
     663: getfield      #17                 // Field completed:Z
     666: ifeq          687
     669: iload         11
     671: ifne          687
     674: iload         12
     676: ifne          687
     679: aload_2
     680: ifnonnull     687
     683: iconst_1
     684: goto          688
     687: iconst_0
     688: putfield      #54                 // Field success:Z
     691: aload_0
     692: getfield      #54                 // Field success:Z
     695: ifne          708
     698: aload_0
     699: getfield      #9                  // Field config:Lnet/jodah/failsafe/FailsafeConfig;
     702: aload_1
     703: aload_2
     704: aload_0
     705: invokevirtual #55                 // Method net/jodah/failsafe/FailsafeConfig.handleFailedAttempt:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
     708: iload         11
     710: ifeq          726
     713: aload_0
     714: getfield      #9                  // Field config:Lnet/jodah/failsafe/FailsafeConfig;
     717: aload_1
     718: aload_2
     719: aload_0
     720: invokevirtual #56                 // Method net/jodah/failsafe/FailsafeConfig.handleAbort:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
     723: goto          771
     726: aload_0
     727: getfield      #54                 // Field success:Z
     730: ifne          750
     733: aload_0
     734: getfield      #50                 // Field retriesExceeded:Z
     737: ifeq          750
     740: aload_0
     741: getfield      #9                  // Field config:Lnet/jodah/failsafe/FailsafeConfig;
     744: aload_1
     745: aload_2
     746: aload_0
     747: invokevirtual #57                 // Method net/jodah/failsafe/FailsafeConfig.handleRetriesExceeded:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;)V
     750: aload_0
     751: getfield      #17                 // Field completed:Z
     754: ifeq          771
     757: aload_0
     758: getfield      #9                  // Field config:Lnet/jodah/failsafe/FailsafeConfig;
     761: aload_1
     762: aload_2
     763: aload_0
     764: aload_0
     765: getfield      #54                 // Field success:Z
     768: invokevirtual #58                 // Method net/jodah/failsafe/FailsafeConfig.handleComplete:(Ljava/lang/Object;Ljava/lang/Throwable;Lnet/jodah/failsafe/ExecutionContext;Z)V
     771: aload_0
     772: getfield      #17                 // Field completed:Z
     775: ireturn

  static long randomDelayInRange(long, long, double);
    Code:
       0: dload         4
       2: lload_2
       3: lload_0
       4: lsub
       5: l2d
       6: dmul
       7: d2l
       8: lload_0
       9: ladd
      10: lreturn

  static long randomDelay(long, long, double);
    Code:
       0: dconst_1
       1: dload         4
       3: ldc2_w        #59                 // double 2.0d
       6: dmul
       7: dsub
       8: lload_2
       9: l2d
      10: dmul
      11: dstore        6
      13: lload_0
      14: l2d
      15: dload         6
      17: dadd
      18: d2l
      19: lreturn

  static long randomDelay(long, double, double);
    Code:
       0: dconst_1
       1: dconst_1
       2: dload         4
       4: ldc2_w        #59                 // double 2.0d
       7: dmul
       8: dsub
       9: dload_2
      10: dmul
      11: dadd
      12: dstore        6
      14: lload_0
      15: l2d
      16: dload         6
      18: dmul
      19: d2l
      20: lreturn
}
