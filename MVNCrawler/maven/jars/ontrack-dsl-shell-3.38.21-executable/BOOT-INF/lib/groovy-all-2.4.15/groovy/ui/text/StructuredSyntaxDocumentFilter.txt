Compiled from "StructuredSyntaxDocumentFilter.java"
public class groovy.ui.text.StructuredSyntaxDocumentFilter extends javax.swing.text.DocumentFilter {
  public static final java.lang.String TAB_REPLACEMENT;

  private static final groovy.ui.text.StructuredSyntaxDocumentFilter$MLComparator ML_COMPARATOR;

  protected groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode lexer;

  protected javax.swing.text.DefaultStyledDocument styledDocument;

  private javax.swing.text.Segment segment;

  private java.nio.CharBuffer buffer;

  protected java.util.SortedSet mlTextRunSet;

  private static void checkRegexp(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #39                 // String \\\\\\(
       3: ldc           #41                 // String X
       5: invokevirtual #47                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: ldc           #49                 // String \\(\\?
      10: ldc           #41                 // String X
      12: invokevirtual #47                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: bipush        40
      19: invokevirtual #53                 // Method java/lang/String.indexOf:(I)I
      22: istore_2
      23: iload_2
      24: iconst_m1
      25: if_icmple     101
      28: new           #55                 // class java/lang/StringBuilder
      31: dup
      32: new           #55                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #61                 // String Only non-capturing groups allowed:\r\n
      41: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #67                 // String \r\n
      50: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      59: astore_3
      60: iconst_0
      61: istore        4
      63: iload         4
      65: iload_2
      66: if_icmpge     82
      69: aload_3
      70: ldc           #75                 // String
      72: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: iinc          4, 1
      79: goto          63
      82: aload_3
      83: ldc           #77                 // String ^
      85: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: new           #79                 // class java/lang/IllegalArgumentException
      92: dup
      93: aload_3
      94: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: return

  public groovy.ui.text.StructuredSyntaxDocumentFilter(javax.swing.text.DefaultStyledDocument);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method javax/swing/text/DocumentFilter."<init>":()V
       4: aload_0
       5: new           #15                 // class groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode
       8: dup
       9: aload_0
      10: iconst_1
      11: invokespecial #92                 // Method groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode."<init>":(Lgroovy/ui/text/StructuredSyntaxDocumentFilter;Z)V
      14: putfield      #94                 // Field lexer:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;
      17: aload_0
      18: new           #96                 // class javax/swing/text/Segment
      21: dup
      22: invokespecial #97                 // Method javax/swing/text/Segment."<init>":()V
      25: putfield      #99                 // Field segment:Ljavax/swing/text/Segment;
      28: aload_0
      29: new           #101                // class java/util/TreeSet
      32: dup
      33: getstatic     #103                // Field ML_COMPARATOR:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$MLComparator;
      36: invokespecial #106                // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      39: putfield      #108                // Field mlTextRunSet:Ljava/util/SortedSet;
      42: aload_0
      43: aload_1
      44: putfield      #110                // Field styledDocument:Ljavax/swing/text/DefaultStyledDocument;
      47: return

  private int calcBeginParse(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #118                // Method getMultiLineRun:(I)Lgroovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_2
      11: invokevirtual #122                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun.start:()I
      14: istore_1
      15: goto          53
      18: aload_0
      19: getfield      #110                // Field styledDocument:Ljavax/swing/text/DefaultStyledDocument;
      22: iload_1
      23: invokevirtual #128                // Method javax/swing/text/DefaultStyledDocument.getParagraphElement:(I)Ljavax/swing/text/Element;
      26: invokeinterface #133,  1          // InterfaceMethod javax/swing/text/Element.getStartOffset:()I
      31: istore_1
      32: aload_0
      33: iload_1
      34: invokespecial #118                // Method getMultiLineRun:(I)Lgroovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun;
      37: astore_2
      38: aload_2
      39: ifnonnull     46
      42: iload_1
      43: goto          52
      46: aload_2
      47: invokevirtual #136                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun.end:()I
      50: iconst_1
      51: iadd
      52: istore_1
      53: iload_1
      54: ireturn

  private int calcEndParse(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #118                // Method getMultiLineRun:(I)Lgroovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_2
      11: invokevirtual #136                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun.end:()I
      14: istore_1
      15: goto          51
      18: aload_0
      19: getfield      #110                // Field styledDocument:Ljavax/swing/text/DefaultStyledDocument;
      22: iload_1
      23: invokevirtual #128                // Method javax/swing/text/DefaultStyledDocument.getParagraphElement:(I)Ljavax/swing/text/Element;
      26: invokeinterface #143,  1          // InterfaceMethod javax/swing/text/Element.getEndOffset:()I
      31: istore_1
      32: aload_0
      33: iload_1
      34: invokespecial #118                // Method getMultiLineRun:(I)Lgroovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun;
      37: astore_2
      38: aload_2
      39: ifnonnull     46
      42: iload_1
      43: goto          50
      46: aload_2
      47: invokevirtual #136                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun.end:()I
      50: istore_1
      51: iload_1
      52: ireturn

  public groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode createLexerNode();
    Code:
       0: new           #15                 // class groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #92                 // Method groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode."<init>":(Lgroovy/ui/text/StructuredSyntaxDocumentFilter;Z)V
       9: areturn

  private groovy.ui.text.StructuredSyntaxDocumentFilter$MultiLineRun getMultiLineRun(int);
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: ifle          58
       6: iload_1
       7: invokestatic  #151                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: astore_3
      11: aload_0
      12: getfield      #108                // Field mlTextRunSet:Ljava/util/SortedSet;
      15: aload_3
      16: invokeinterface #157,  2          // InterfaceMethod java/util/SortedSet.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;
      21: astore        4
      23: aload         4
      25: invokeinterface #161,  1          // InterfaceMethod java/util/SortedSet.isEmpty:()Z
      30: ifne          58
      33: aload         4
      35: invokeinterface #165,  1          // InterfaceMethod java/util/SortedSet.last:()Ljava/lang/Object;
      40: checkcast     #12                 // class groovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun
      43: astore_2
      44: aload_2
      45: invokevirtual #136                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$MultiLineRun.end:()I
      48: iload_1
      49: if_icmplt     56
      52: aload_2
      53: goto          57
      56: aconst_null
      57: astore_2
      58: aload_2
      59: areturn

  public groovy.ui.text.StructuredSyntaxDocumentFilter$LexerNode getRootNode();
    Code:
       0: aload_0
       1: getfield      #94                 // Field lexer:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;
       4: areturn

  public void insertString(javax.swing.text.DocumentFilter$FilterBypass, int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException;
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #178                // Method replaceMetaCharacters:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_1
       7: iload_2
       8: aload_3
       9: aload         4
      11: invokevirtual #181                // Method javax/swing/text/DocumentFilter$FilterBypass.insertString:(ILjava/lang/String;Ljavax/swing/text/AttributeSet;)V
      14: aload_0
      15: iload_2
      16: aload_3
      17: invokevirtual #184                // Method java/lang/String.length:()I
      20: invokevirtual #188                // Method parseDocument:(II)V
      23: return

  protected void parseDocument(int, int) throws javax.swing.text.BadLocationException;
    Code:
       0: aload_0
       1: getfield      #110                // Field styledDocument:Ljavax/swing/text/DefaultStyledDocument;
       4: iconst_0
       5: aload_0
       6: getfield      #110                // Field styledDocument:Ljavax/swing/text/DefaultStyledDocument;
       9: invokevirtual #196                // Method javax/swing/text/DefaultStyledDocument.getLength:()I
      12: aload_0
      13: getfield      #99                 // Field segment:Ljavax/swing/text/Segment;
      16: invokevirtual #200                // Method javax/swing/text/DefaultStyledDocument.getText:(IILjavax/swing/text/Segment;)V
      19: aload_0
      20: aload_0
      21: getfield      #99                 // Field segment:Ljavax/swing/text/Segment;
      24: getfield      #204                // Field javax/swing/text/Segment.array:[C
      27: invokestatic  #210                // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;
      30: invokevirtual #214                // Method java/nio/CharBuffer.asReadOnlyBuffer:()Ljava/nio/CharBuffer;
      33: putfield      #216                // Field buffer:Ljava/nio/CharBuffer;
      36: aload_0
      37: getfield      #94                 // Field lexer:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;
      40: invokevirtual #219                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode.isInitialized:()Z
      43: ifne          66
      46: aload_0
      47: getfield      #94                 // Field lexer:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;
      50: invokestatic  #223                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode.access$100:(Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;)V
      53: iconst_0
      54: istore_1
      55: aload_0
      56: getfield      #110                // Field styledDocument:Ljavax/swing/text/DefaultStyledDocument;
      59: invokevirtual #196                // Method javax/swing/text/DefaultStyledDocument.getLength:()I
      62: istore_2
      63: goto          117
      66: iload_1
      67: iload_2
      68: iadd
      69: istore_3
      70: aload_0
      71: iload_1
      72: invokespecial #225                // Method calcBeginParse:(I)I
      75: istore_1
      76: aload_0
      77: iload_3
      78: invokespecial #227                // Method calcEndParse:(I)I
      81: iload_1
      82: isub
      83: istore_2
      84: aload_0
      85: getfield      #108                // Field mlTextRunSet:Ljava/util/SortedSet;
      88: iload_1
      89: invokestatic  #151                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: iload_1
      93: iload_2
      94: iadd
      95: invokestatic  #151                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      98: invokeinterface #231,  3          // InterfaceMethod java/util/SortedSet.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;
     103: astore        4
     105: aload         4
     107: ifnull        117
     110: aload         4
     112: invokeinterface #234,  1          // InterfaceMethod java/util/SortedSet.clear:()V
     117: aload_0
     118: getfield      #94                 // Field lexer:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;
     121: aload_0
     122: getfield      #216                // Field buffer:Ljava/nio/CharBuffer;
     125: iload_1
     126: iload_2
     127: invokevirtual #238                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode.parse:(Ljava/nio/CharBuffer;II)V
     130: return

  public void remove(javax.swing.text.DocumentFilter$FilterBypass, int, int) throws javax.swing.text.BadLocationException;
    Code:
       0: iload_2
       1: ifne          47
       4: iload_3
       5: aload_1
       6: invokevirtual #244                // Method javax/swing/text/DocumentFilter$FilterBypass.getDocument:()Ljavax/swing/text/Document;
       9: invokeinterface #247,  1          // InterfaceMethod javax/swing/text/Document.getLength:()I
      14: if_icmpeq     47
      17: aload_1
      18: iconst_0
      19: iload_3
      20: ldc           #249                // String \n
      22: aload_0
      23: getfield      #94                 // Field lexer:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;
      26: invokestatic  #253                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode.access$200:(Lgroovy/ui/text/StructuredSyntaxDocumentFilter$LexerNode;)Ljavax/swing/text/Style;
      29: invokevirtual #257                // Method javax/swing/text/DocumentFilter$FilterBypass.replace:(IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V
      32: aload_0
      33: iload_2
      34: iconst_2
      35: invokevirtual #188                // Method parseDocument:(II)V
      38: aload_1
      39: iload_2
      40: iconst_1
      41: invokevirtual #259                // Method javax/swing/text/DocumentFilter$FilterBypass.remove:(II)V
      44: goto          103
      47: aload_1
      48: iload_2
      49: iload_3
      50: invokevirtual #259                // Method javax/swing/text/DocumentFilter$FilterBypass.remove:(II)V
      53: iload_2
      54: iconst_1
      55: iadd
      56: aload_1
      57: invokevirtual #244                // Method javax/swing/text/DocumentFilter$FilterBypass.getDocument:()Ljavax/swing/text/Document;
      60: invokeinterface #247,  1          // InterfaceMethod javax/swing/text/Document.getLength:()I
      65: if_icmpge     77
      68: aload_0
      69: iload_2
      70: iconst_1
      71: invokevirtual #188                // Method parseDocument:(II)V
      74: goto          103
      77: iload_2
      78: iconst_1
      79: isub
      80: ifle          94
      83: aload_0
      84: iload_2
      85: iconst_1
      86: isub
      87: iconst_1
      88: invokevirtual #188                // Method parseDocument:(II)V
      91: goto          103
      94: aload_0
      95: getfield      #108                // Field mlTextRunSet:Ljava/util/SortedSet;
      98: invokeinterface #234,  1          // InterfaceMethod java/util/SortedSet.clear:()V
     103: return

  public void replace(javax.swing.text.DocumentFilter$FilterBypass, int, int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException;
    Code:
       0: aload         4
       2: ifnonnull     10
       5: ldc_w         #262                // String
       8: astore        4
      10: aload_0
      11: aload         4
      13: invokespecial #178                // Method replaceMetaCharacters:(Ljava/lang/String;)Ljava/lang/String;
      16: astore        4
      18: aload_1
      19: iload_2
      20: iload_3
      21: aload         4
      23: aload         5
      25: invokevirtual #257                // Method javax/swing/text/DocumentFilter$FilterBypass.replace:(IILjava/lang/String;Ljavax/swing/text/AttributeSet;)V
      28: aload_0
      29: iload_2
      30: aload         4
      32: invokevirtual #184                // Method java/lang/String.length:()I
      35: invokevirtual #188                // Method parseDocument:(II)V
      38: return

  private java.lang.String replaceMetaCharacters(java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #264                // String \\t
       4: ldc           #23                 // String
       6: invokevirtual #47                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: areturn

  static void access$300(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #268                // Method checkRegexp:(Ljava/lang/String;)V
       4: return

  static {};
    Code:
       0: new           #9                  // class groovy/ui/text/StructuredSyntaxDocumentFilter$MLComparator
       3: dup
       4: aconst_null
       5: invokespecial #273                // Method groovy/ui/text/StructuredSyntaxDocumentFilter$MLComparator."<init>":(Lgroovy/ui/text/StructuredSyntaxDocumentFilter$1;)V
       8: putstatic     #103                // Field ML_COMPARATOR:Lgroovy/ui/text/StructuredSyntaxDocumentFilter$MLComparator;
      11: return
}
