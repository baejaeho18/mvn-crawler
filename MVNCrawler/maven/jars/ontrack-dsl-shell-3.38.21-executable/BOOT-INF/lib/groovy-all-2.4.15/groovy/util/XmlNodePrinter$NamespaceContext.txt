Compiled from "XmlNodePrinter.java"
public class groovy.util.XmlNodePrinter$NamespaceContext {
  private final java.util.Map<java.lang.String, java.lang.String> namespaceMap;

  public groovy.util.XmlNodePrinter$NamespaceContext();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #17                 // class java/util/HashMap
       8: dup
       9: invokespecial #18                 // Method java/util/HashMap."<init>":()V
      12: putfield      #20                 // Field namespaceMap:Ljava/util/Map;
      15: return

  public groovy.util.XmlNodePrinter$NamespaceContext(groovy.util.XmlNodePrinter$NamespaceContext);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method "<init>":()V
       4: aload_0
       5: getfield      #20                 // Field namespaceMap:Ljava/util/Map;
       8: aload_1
       9: getfield      #20                 // Field namespaceMap:Ljava/util/Map;
      12: invokeinterface #30,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      17: return

  public boolean isPrefixRegistered(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field namespaceMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          37
      13: aload_0
      14: getfield      #20                 // Field namespaceMap:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #43                 // class java/lang/String
      26: aload_2
      27: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void registerNamespacePrefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #53                 // Method isPrefixRegistered:(Ljava/lang/String;Ljava/lang/String;)Z
       6: ifne          21
       9: aload_0
      10: getfield      #20                 // Field namespaceMap:Ljava/util/Map;
      13: aload_1
      14: aload_2
      15: invokeinterface #57,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public java.lang.String getNamespace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field namespaceMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnonnull     19
      15: aconst_null
      16: goto          23
      19: aload_2
      20: invokevirtual #63                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: areturn
}
