Compiled from "ScriptToTreeNodeAdapter.groovy"
public class groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitCatchStatement_closure50 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure {
  private static org.codehaus.groovy.reflection.ClassInfo $staticClassInfo;

  public static transient boolean __$stMC;

  private static java.lang.ref.SoftReference $callSiteArray;

  public groovy.inspect.swingui.TreeNodeBuildingVisitor$_visitCatchStatement_closure50(java.lang.Object, java.lang.Object);
    Code:
       0: invokestatic  #25                 // Method $getCallSiteArray:()[Lorg/codehaus/groovy/runtime/callsite/CallSite;
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #27                 // Method groovy/lang/Closure."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      10: return

  public java.lang.Object doCall(java.lang.Object);
    Code:
       0: invokestatic  #25                 // Method $getCallSiteArray:()[Lorg/codehaus/groovy/runtime/callsite/CallSite;
       3: astore_2
       4: aload_2
       5: ldc           #35                 // int 0
       7: aaload
       8: aload_1
       9: invokeinterface #40,  2           // InterfaceMethod org/codehaus/groovy/runtime/callsite/CallSite.callGetProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      14: invokestatic  #46                 // Method org/codehaus/groovy/runtime/typehandling/DefaultTypeTransformation.booleanUnbox:(Ljava/lang/Object;)Z
      17: ifeq          41
      20: aload_2
      21: ldc           #47                 // int 1
      23: aaload
      24: aload_0
      25: aload_2
      26: ldc           #48                 // int 2
      28: aaload
      29: aload_1
      30: invokeinterface #40,  2           // InterfaceMethod org/codehaus/groovy/runtime/callsite/CallSite.callGetProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      35: invokeinterface #52,  3           // InterfaceMethod org/codehaus/groovy/runtime/callsite/CallSite.callCurrent:(Lgroovy/lang/GroovyObject;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: ldc           #54                 // class org/codehaus/groovy/ast/CodeVisitorSupport
      43: aload_0
      44: invokevirtual #58                 // Method groovy/lang/Closure.getThisObject:()Ljava/lang/Object;
      47: ldc           #59                 // String visitCatchStatement
      49: checkcast     #61                 // class java/lang/String
      52: iconst_1
      53: anewarray     #63                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_1
      59: aastore
      60: invokestatic  #69                 // Method org/codehaus/groovy/runtime/ScriptBytecodeAdapter.invokeMethodOnSuperN:(Ljava/lang/Class;Lgroovy/lang/GroovyObject;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
      63: areturn
      64: aconst_null
      65: areturn

  public java.lang.Object doCall();
    Code:
       0: invokestatic  #25                 // Method $getCallSiteArray:()[Lorg/codehaus/groovy/runtime/callsite/CallSite;
       3: astore_1
       4: aload_0
       5: aconst_null
       6: invokevirtual #72                 // Method doCall:(Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
      10: aconst_null
      11: areturn

  protected groovy.lang.MetaClass $getStaticMetaClass();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #2                  // class groovy/inspect/swingui/TreeNodeBuildingVisitor$_visitCatchStatement_closure50
       6: if_acmpeq     14
       9: aload_0
      10: invokestatic  #82                 // Method org/codehaus/groovy/runtime/ScriptBytecodeAdapter.initMetaClass:(Ljava/lang/Object;)Lgroovy/lang/MetaClass;
      13: areturn
      14: getstatic     #84                 // Field $staticClassInfo:Lorg/codehaus/groovy/reflection/ClassInfo;
      17: astore_1
      18: aload_1
      19: ifnonnull     34
      22: aload_0
      23: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokestatic  #90                 // Method org/codehaus/groovy/reflection/ClassInfo.getClassInfo:(Ljava/lang/Class;)Lorg/codehaus/groovy/reflection/ClassInfo;
      29: dup
      30: astore_1
      31: putstatic     #84                 // Field $staticClassInfo:Lorg/codehaus/groovy/reflection/ClassInfo;
      34: aload_1
      35: invokevirtual #93                 // Method org/codehaus/groovy/reflection/ClassInfo.getMetaClass:()Lgroovy/lang/MetaClass;
      38: areturn

  private static void $createCallSiteArray_1(java.lang.String[]);
    Code:
       0: aload_0
       1: ldc           #35                 // int 0
       3: ldc           #97                 // String variable
       5: aastore
       6: aload_0
       7: ldc           #47                 // int 1
       9: ldc           #99                 // String visitParameter
      11: aastore
      12: aload_0
      13: ldc           #48                 // int 2
      15: ldc           #97                 // String variable
      17: aastore
      18: return

  private static org.codehaus.groovy.runtime.callsite.CallSiteArray $createCallSiteArray();
    Code:
       0: ldc           #102                // int 3
       2: anewarray     #61                 // class java/lang/String
       5: astore_0
       6: aload_0
       7: invokestatic  #104                // Method $createCallSiteArray_1:([Ljava/lang/String;)V
      10: new           #106                // class org/codehaus/groovy/runtime/callsite/CallSiteArray
      13: dup
      14: ldc           #2                  // class groovy/inspect/swingui/TreeNodeBuildingVisitor$_visitCatchStatement_closure50
      16: aload_0
      17: invokespecial #109                // Method org/codehaus/groovy/runtime/callsite/CallSiteArray."<init>":(Ljava/lang/Class;[Ljava/lang/String;)V
      20: areturn

  private static org.codehaus.groovy.runtime.callsite.CallSite[] $getCallSiteArray();
    Code:
       0: getstatic     #111                // Field $callSiteArray:Ljava/lang/ref/SoftReference;
       3: ifnull        20
       6: getstatic     #111                // Field $callSiteArray:Ljava/lang/ref/SoftReference;
       9: invokevirtual #116                // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      12: checkcast     #106                // class org/codehaus/groovy/runtime/callsite/CallSiteArray
      15: dup
      16: astore_0
      17: ifnonnull     35
      20: invokestatic  #118                // Method $createCallSiteArray:()Lorg/codehaus/groovy/runtime/callsite/CallSiteArray;
      23: astore_0
      24: new           #113                // class java/lang/ref/SoftReference
      27: dup
      28: aload_0
      29: invokespecial #121                // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      32: putstatic     #111                // Field $callSiteArray:Ljava/lang/ref/SoftReference;
      35: aload_0
      36: getfield      #125                // Field org/codehaus/groovy/runtime/callsite/CallSiteArray.array:[Lorg/codehaus/groovy/runtime/callsite/CallSite;
      39: areturn
}
