Compiled from "ObjectGraphBuilder.java"
class groovy.util.ObjectGraphBuilder$ObjectRefFactory extends groovy.util.ObjectGraphBuilder$ObjectFactory {
  private groovy.util.ObjectGraphBuilder$ObjectRefFactory();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #25                 // Method groovy/util/ObjectGraphBuilder$ObjectFactory."<init>":(Lgroovy/util/ObjectGraphBuilder$1;)V
       5: return

  public boolean isLeaf();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map) throws java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: checkcast     #7                  // class groovy/util/ObjectGraphBuilder
       4: astore        5
       6: aload         5
       8: invokestatic  #41                 // Method groovy/util/ObjectGraphBuilder.access$1600:(Lgroovy/util/ObjectGraphBuilder;)Lgroovy/util/ObjectGraphBuilder$ReferenceResolver;
      11: aload_2
      12: checkcast     #43                 // class java/lang/String
      15: invokeinterface #47,  2           // InterfaceMethod groovy/util/ObjectGraphBuilder$ReferenceResolver.getReferenceFor:(Ljava/lang/String;)Ljava/lang/String;
      20: astore        6
      22: aload         4
      24: aload         6
      26: invokeinterface #53,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore        7
      33: aconst_null
      34: astore        8
      36: getstatic     #59                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      39: astore        9
      41: aload         7
      43: instanceof    #43                 // class java/lang/String
      46: ifeq          137
      49: aload         5
      51: aload         7
      53: checkcast     #43                 // class java/lang/String
      56: invokevirtual #63                 // Method groovy/util/ObjectGraphBuilder.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      59: astore        8
      61: goto          66
      64: astore        10
      66: aload         8
      68: ifnonnull     141
      71: aload         5
      73: invokevirtual #70                 // Method groovy/util/ObjectGraphBuilder.isLazyReferencesAllowed:()Z
      76: ifeq          87
      79: getstatic     #73                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      82: astore        9
      84: goto          141
      87: new           #75                 // class java/lang/IllegalArgumentException
      90: dup
      91: new           #77                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #81                 // String There is no previous node with
     100: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload         5
     105: invokestatic  #89                 // Method groovy/util/ObjectGraphBuilder.access$1700:(Lgroovy/util/ObjectGraphBuilder;)Lgroovy/util/ObjectGraphBuilder$IdentifierResolver;
     108: aload_2
     109: checkcast     #43                 // class java/lang/String
     112: invokeinterface #92,  2           // InterfaceMethod groovy/util/ObjectGraphBuilder$IdentifierResolver.getIdentifierFor:(Ljava/lang/String;)Ljava/lang/String;
     117: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #94                 // String =
     122: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload         7
     127: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: aload         7
     139: astore        8
     141: aload         4
     143: invokeinterface #107,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     148: ifne          161
     151: new           #75                 // class java/lang/IllegalArgumentException
     154: dup
     155: ldc           #109                // String You can not modify the properties of a referenced object.
     157: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: aload         5
     163: invokevirtual #113                // Method groovy/util/ObjectGraphBuilder.getContext:()Ljava/util/Map;
     166: astore        10
     168: aload         10
     170: ldc           #115                // String _NODE_NAME_
     172: aload_2
     173: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     178: pop
     179: aload         10
     181: ldc           #121                // String _LAZY_REF_
     183: aload         9
     185: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     190: pop
     191: aload         9
     193: invokevirtual #124                // Method java/lang/Boolean.booleanValue:()Z
     196: ifeq          281
     199: aload         5
     201: invokevirtual #127                // Method groovy/util/ObjectGraphBuilder.getParentContext:()Ljava/util/Map;
     204: astore        11
     206: aconst_null
     207: astore        12
     209: aconst_null
     210: astore        13
     212: aload_2
     213: checkcast     #43                 // class java/lang/String
     216: astore        14
     218: aload         11
     220: ifnull        248
     223: aload         10
     225: ldc           #129                // String _CURRENT_NODE_
     227: invokeinterface #132,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     232: astore        12
     234: aload         11
     236: ldc           #115                // String _NODE_NAME_
     238: invokeinterface #132,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     243: checkcast     #43                 // class java/lang/String
     246: astore        13
     248: aload         5
     250: invokestatic  #136                // Method groovy/util/ObjectGraphBuilder.access$1900:(Lgroovy/util/ObjectGraphBuilder;)Ljava/util/List;
     253: new           #12                 // class groovy/util/ObjectGraphBuilder$NodeReference
     256: dup
     257: aload         12
     259: aload         13
     261: aload         14
     263: aload         7
     265: checkcast     #43                 // class java/lang/String
     268: aconst_null
     269: invokespecial #139                // Method groovy/util/ObjectGraphBuilder$NodeReference."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lgroovy/util/ObjectGraphBuilder$1;)V
     272: invokeinterface #145,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     277: pop
     278: goto          296
     281: aload         10
     283: ldc           #147                // String _NODE_CLASS_
     285: aload         8
     287: invokevirtual #151                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     290: invokeinterface #119,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     295: pop
     296: aload         8
     298: areturn
    Exception table:
       from    to  target type
          49    61    64   Class groovy/lang/MissingPropertyException

  public void setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #173                // Method groovy/util/FactoryBuilderSupport.getContext:()Ljava/util/Map;
       4: ldc           #121                // String _LAZY_REF_
       6: invokeinterface #132,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #55                 // class java/lang/Boolean
      14: astore        4
      16: aload         4
      18: invokevirtual #124                // Method java/lang/Boolean.booleanValue:()Z
      21: ifne          31
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokespecial #175                // Method groovy/util/ObjectGraphBuilder$ObjectFactory.setChild:(Lgroovy/util/FactoryBuilderSupport;Ljava/lang/Object;Ljava/lang/Object;)V
      31: return

  public void setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #173                // Method groovy/util/FactoryBuilderSupport.getContext:()Ljava/util/Map;
       4: ldc           #121                // String _LAZY_REF_
       6: invokeinterface #132,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #55                 // class java/lang/Boolean
      14: astore        4
      16: aload         4
      18: invokevirtual #124                // Method java/lang/Boolean.booleanValue:()Z
      21: ifne          31
      24: aload_0
      25: aload_1
      26: aload_2
      27: aload_3
      28: invokespecial #179                // Method groovy/util/ObjectGraphBuilder$ObjectFactory.setParent:(Lgroovy/util/FactoryBuilderSupport;Ljava/lang/Object;Ljava/lang/Object;)V
      31: return

  groovy.util.ObjectGraphBuilder$ObjectRefFactory(groovy.util.ObjectGraphBuilder$1);
    Code:
       0: aload_0
       1: invokespecial #180                // Method "<init>":()V
       4: return
}
