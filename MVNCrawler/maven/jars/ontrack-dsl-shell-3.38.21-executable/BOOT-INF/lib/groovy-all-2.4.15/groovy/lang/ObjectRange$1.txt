Compiled from "ObjectRange.java"
class groovy.lang.ObjectRange$1 implements java.util.Iterator {
  private int index;

  private java.lang.Object value;

  final groovy.lang.ObjectRange this$0;

  groovy.lang.ObjectRange$1(groovy.lang.ObjectRange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
       5: aload_0
       6: invokespecial #25                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_0
      11: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      14: invokestatic  #29                 // Method groovy/lang/ObjectRange.access$000:(Lgroovy/lang/ObjectRange;)Z
      17: ifeq          30
      20: aload_0
      21: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      24: invokestatic  #33                 // Method groovy/lang/ObjectRange.access$100:(Lgroovy/lang/ObjectRange;)Ljava/lang/Comparable;
      27: goto          37
      30: aload_0
      31: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      34: invokestatic  #36                 // Method groovy/lang/ObjectRange.access$200:(Lgroovy/lang/ObjectRange;)Ljava/lang/Comparable;
      37: putfield      #40                 // Field value:Ljava/lang/Object;
      40: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #46                 // Field index:I
       4: aload_0
       5: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
       8: invokevirtual #50                 // Method groovy/lang/ObjectRange.size:()I
      11: if_icmpge     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: dup
       2: getfield      #46                 // Field index:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #46                 // Field index:I
      11: ifle          79
      14: aload_0
      15: getfield      #46                 // Field index:I
      18: aload_0
      19: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      22: invokevirtual #50                 // Method groovy/lang/ObjectRange.size:()I
      25: if_icmple     36
      28: aload_0
      29: aconst_null
      30: putfield      #40                 // Field value:Ljava/lang/Object;
      33: goto          79
      36: aload_0
      37: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      40: invokestatic  #29                 // Method groovy/lang/ObjectRange.access$000:(Lgroovy/lang/ObjectRange;)Z
      43: ifeq          64
      46: aload_0
      47: aload_0
      48: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      51: aload_0
      52: getfield      #40                 // Field value:Ljava/lang/Object;
      55: invokevirtual #56                 // Method groovy/lang/ObjectRange.decrement:(Ljava/lang/Object;)Ljava/lang/Object;
      58: putfield      #40                 // Field value:Ljava/lang/Object;
      61: goto          79
      64: aload_0
      65: aload_0
      66: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
      69: aload_0
      70: getfield      #40                 // Field value:Ljava/lang/Object;
      73: invokevirtual #59                 // Method groovy/lang/ObjectRange.increment:(Ljava/lang/Object;)Ljava/lang/Object;
      76: putfield      #40                 // Field value:Ljava/lang/Object;
      79: aload_0
      80: getfield      #40                 // Field value:Ljava/lang/Object;
      83: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #22                 // Field this$0:Lgroovy/lang/ObjectRange;
       4: aload_0
       5: getfield      #46                 // Field index:I
       8: invokevirtual #63                 // Method groovy/lang/ObjectRange.remove:(I)Ljava/lang/Object;
      11: pop
      12: return
}
