Compiled from "ANTLRGrammarParseBehavior.java"
public interface groovyjarjarantlr.ANTLRGrammarParseBehavior {
  public abstract void abortGrammar();

  public abstract void beginAlt(boolean);

  public abstract void beginChildList();

  public abstract void beginExceptionGroup();

  public abstract void beginExceptionSpec(groovyjarjarantlr.Token);

  public abstract void beginSubRule(groovyjarjarantlr.Token, groovyjarjarantlr.Token, boolean);

  public abstract void beginTree(groovyjarjarantlr.Token) throws groovyjarjarantlr.SemanticException;

  public abstract void defineRuleName(groovyjarjarantlr.Token, java.lang.String, boolean, java.lang.String) throws groovyjarjarantlr.SemanticException;

  public abstract void defineToken(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void endAlt();

  public abstract void endChildList();

  public abstract void endExceptionGroup();

  public abstract void endExceptionSpec();

  public abstract void endGrammar();

  public abstract void endOptions();

  public abstract void endRule(java.lang.String);

  public abstract void endSubRule();

  public abstract void endTree();

  public abstract void hasError();

  public abstract void noASTSubRule();

  public abstract void oneOrMoreSubRule();

  public abstract void optionalSubRule();

  public abstract void refAction(groovyjarjarantlr.Token);

  public abstract void refArgAction(groovyjarjarantlr.Token);

  public abstract void setUserExceptions(java.lang.String);

  public abstract void refCharLiteral(groovyjarjarantlr.Token, groovyjarjarantlr.Token, boolean, int, boolean);

  public abstract void refCharRange(groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token, int, boolean);

  public abstract void refElementOption(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void refTokensSpecElementOption(groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void refExceptionHandler(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void refHeaderAction(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void refInitAction(groovyjarjarantlr.Token);

  public abstract void refMemberAction(groovyjarjarantlr.Token);

  public abstract void refPreambleAction(groovyjarjarantlr.Token);

  public abstract void refReturnAction(groovyjarjarantlr.Token);

  public abstract void refRule(groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token, int);

  public abstract void refSemPred(groovyjarjarantlr.Token);

  public abstract void refStringLiteral(groovyjarjarantlr.Token, groovyjarjarantlr.Token, int, boolean);

  public abstract void refToken(groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token, boolean, int, boolean);

  public abstract void refTokenRange(groovyjarjarantlr.Token, groovyjarjarantlr.Token, groovyjarjarantlr.Token, int, boolean);

  public abstract void refTreeSpecifier(groovyjarjarantlr.Token);

  public abstract void refWildcard(groovyjarjarantlr.Token, groovyjarjarantlr.Token, int);

  public abstract void setArgOfRuleRef(groovyjarjarantlr.Token);

  public abstract void setCharVocabulary(groovyjarjarantlr.collections.impl.BitSet);

  public abstract void setFileOption(groovyjarjarantlr.Token, groovyjarjarantlr.Token, java.lang.String);

  public abstract void setGrammarOption(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void setRuleOption(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void setSubruleOption(groovyjarjarantlr.Token, groovyjarjarantlr.Token);

  public abstract void startLexer(java.lang.String, groovyjarjarantlr.Token, java.lang.String, java.lang.String);

  public abstract void startParser(java.lang.String, groovyjarjarantlr.Token, java.lang.String, java.lang.String);

  public abstract void startTreeWalker(java.lang.String, groovyjarjarantlr.Token, java.lang.String, java.lang.String);

  public abstract void synPred();

  public abstract void zeroOrMoreSubRule();
}
