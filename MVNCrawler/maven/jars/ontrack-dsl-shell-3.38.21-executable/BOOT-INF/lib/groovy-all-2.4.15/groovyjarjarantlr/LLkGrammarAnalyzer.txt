Compiled from "LLkGrammarAnalyzer.java"
public interface groovyjarjarantlr.LLkGrammarAnalyzer extends groovyjarjarantlr.GrammarAnalyzer {
  public abstract boolean deterministic(groovyjarjarantlr.AlternativeBlock);

  public abstract boolean deterministic(groovyjarjarantlr.OneOrMoreBlock);

  public abstract boolean deterministic(groovyjarjarantlr.ZeroOrMoreBlock);

  public abstract groovyjarjarantlr.Lookahead FOLLOW(int, groovyjarjarantlr.RuleEndElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.ActionElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.AlternativeBlock);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.BlockEndElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.CharLiteralElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.CharRangeElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.GrammarAtom);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.OneOrMoreBlock);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.RuleBlock);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.RuleEndElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.RuleRefElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.StringLiteralElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.SynPredBlock);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.TokenRangeElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.TreeElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.WildcardElement);

  public abstract groovyjarjarantlr.Lookahead look(int, groovyjarjarantlr.ZeroOrMoreBlock);

  public abstract groovyjarjarantlr.Lookahead look(int, java.lang.String);

  public abstract void setGrammar(groovyjarjarantlr.Grammar);

  public abstract boolean subruleCanBeInverted(groovyjarjarantlr.AlternativeBlock, boolean);
}
