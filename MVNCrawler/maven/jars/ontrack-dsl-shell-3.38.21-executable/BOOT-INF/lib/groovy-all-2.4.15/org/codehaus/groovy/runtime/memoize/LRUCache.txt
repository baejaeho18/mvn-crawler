Compiled from "LRUCache.java"
public final class org.codehaus.groovy.runtime.memoize.LRUCache implements org.codehaus.groovy.runtime.memoize.MemoizeCache<java.lang.Object, java.lang.Object> {
  private final java.util.Map<java.lang.Object, java.lang.Object> cache;

  public org.codehaus.groovy.runtime.memoize.LRUCache(int);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #23                 // class org/codehaus/groovy/runtime/memoize/LRUProtectionStorage
       8: dup
       9: iload_1
      10: invokespecial #25                 // Method org/codehaus/groovy/runtime/memoize/LRUProtectionStorage."<init>":(I)V
      13: invokestatic  #31                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      16: putfield      #33                 // Field cache:Ljava/util/Map;
      19: return

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #33                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #33                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void cleanUpNullReferences();
    Code:
       0: aload_0
       1: getfield      #33                 // Field cache:Ljava/util/Map;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #33                 // Field cache:Ljava/util/Map;
      11: invokeinterface #53,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          65
      31: aload_2
      32: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #10                 // class java/util/Map$Entry
      40: astore_3
      41: aload_3
      42: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #74                 // class java/lang/ref/SoftReference
      50: invokevirtual #76                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      53: ifnonnull     62
      56: aload_2
      57: invokeinterface #79,  1           // InterfaceMethod java/util/Iterator.remove:()V
      62: goto          22
      65: aload_1
      66: monitorexit
      67: goto          77
      70: astore        4
      72: aload_1
      73: monitorexit
      74: aload         4
      76: athrow
      77: return
    Exception table:
       from    to  target type
           7    67    70   any
          70    74    70   any
}
