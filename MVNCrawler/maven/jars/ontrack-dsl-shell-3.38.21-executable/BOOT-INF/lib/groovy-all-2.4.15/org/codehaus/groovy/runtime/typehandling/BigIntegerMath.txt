Compiled from "BigIntegerMath.java"
public final class org.codehaus.groovy.runtime.typehandling.BigIntegerMath extends org.codehaus.groovy.runtime.typehandling.NumberMath {
  public static final org.codehaus.groovy.runtime.typehandling.BigIntegerMath INSTANCE;

  private org.codehaus.groovy.runtime.typehandling.BigIntegerMath();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/codehaus/groovy/runtime/typehandling/NumberMath."<init>":()V
       4: return

  protected java.lang.Number absImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: invokevirtual #24                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       7: areturn

  public java.lang.Number addImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #32                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  public java.lang.Number subtractImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #38                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  public java.lang.Number multiplyImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #42                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  public java.lang.Number divideImpl(java.lang.Number, java.lang.Number);
    Code:
       0: getstatic     #48                 // Field org/codehaus/groovy/runtime/typehandling/BigDecimalMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigDecimalMath;
       3: aload_1
       4: aload_2
       5: invokevirtual #50                 // Method org/codehaus/groovy/runtime/typehandling/BigDecimalMath.divideImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
       8: areturn

  public int compareToImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #56                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      11: ireturn

  protected java.lang.Number intdivImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #60                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  protected java.lang.Number modImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #64                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  protected java.lang.Number unaryMinusImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: invokevirtual #68                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
       7: areturn

  protected java.lang.Number unaryPlusImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: areturn

  protected java.lang.Number bitwiseNegateImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: invokevirtual #73                 // Method java/math/BigInteger.not:()Ljava/math/BigInteger;
       7: areturn

  protected java.lang.Number orImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #77                 // Method java/math/BigInteger.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  protected java.lang.Number andImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #81                 // Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  protected java.lang.Number xorImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       4: aload_2
       5: invokestatic  #18                 // Method toBigInteger:(Ljava/lang/Number;)Ljava/math/BigInteger;
       8: invokevirtual #85                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: areturn

  static {};
    Code:
       0: new           #2                  // class org/codehaus/groovy/runtime/typehandling/BigIntegerMath
       3: dup
       4: invokespecial #87                 // Method "<init>":()V
       7: putstatic     #89                 // Field INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigIntegerMath;
      10: return
}
