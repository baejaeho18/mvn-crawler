Compiled from "NumberMath.java"
public abstract class org.codehaus.groovy.runtime.typehandling.NumberMath {
  public org.codehaus.groovy.runtime.typehandling.NumberMath();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.Number abs(java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       4: aload_0
       5: invokevirtual #20                 // Method absImpl:(Ljava/lang/Number;)Ljava/lang/Number;
       8: areturn

  public static java.lang.Number add(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #30                 // Method addImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number subtract(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #36                 // Method subtractImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number multiply(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #40                 // Method multiplyImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number divide(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #44                 // Method divideImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static int compareTo(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #49                 // Method compareToImpl:(Ljava/lang/Number;Ljava/lang/Number;)I
      10: ireturn

  public static java.lang.Number or(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #53                 // Method orImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number and(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #57                 // Method andImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number xor(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #61                 // Method xorImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number intdiv(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #65                 // Method intdivImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number mod(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method getMath:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       5: aload_0
       6: aload_1
       7: invokevirtual #69                 // Method modImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      10: areturn

  public static java.lang.Number leftShift(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #74                 // Method isFloatingPoint:(Ljava/lang/Number;)Z
       4: ifne          14
       7: aload_1
       8: invokestatic  #77                 // Method isBigDecimal:(Ljava/lang/Number;)Z
      11: ifeq          61
      14: new           #79                 // class java/lang/UnsupportedOperationException
      17: dup
      18: new           #81                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #84                 // String Shift distance must be an integral type, but
      27: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #93                 // String  (
      36: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: invokevirtual #103                // Method java/lang/Class.getName:()Ljava/lang/String;
      46: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #105                // String ) was supplied
      51: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #111                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
      65: aload_0
      66: aload_1
      67: invokevirtual #114                // Method leftShiftImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      70: areturn

  public static java.lang.Number rightShift(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #74                 // Method isFloatingPoint:(Ljava/lang/Number;)Z
       4: ifne          14
       7: aload_1
       8: invokestatic  #77                 // Method isBigDecimal:(Ljava/lang/Number;)Z
      11: ifeq          61
      14: new           #79                 // class java/lang/UnsupportedOperationException
      17: dup
      18: new           #81                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #84                 // String Shift distance must be an integral type, but
      27: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #93                 // String  (
      36: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: invokevirtual #103                // Method java/lang/Class.getName:()Ljava/lang/String;
      46: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #105                // String ) was supplied
      51: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #111                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
      65: aload_0
      66: aload_1
      67: invokevirtual #118                // Method rightShiftImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      70: areturn

  public static java.lang.Number rightShiftUnsigned(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokestatic  #74                 // Method isFloatingPoint:(Ljava/lang/Number;)Z
       4: ifne          14
       7: aload_1
       8: invokestatic  #77                 // Method isBigDecimal:(Ljava/lang/Number;)Z
      11: ifeq          61
      14: new           #79                 // class java/lang/UnsupportedOperationException
      17: dup
      18: new           #81                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #84                 // String Shift distance must be an integral type, but
      27: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #93                 // String  (
      36: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: invokevirtual #103                // Method java/lang/Class.getName:()Ljava/lang/String;
      46: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #105                // String ) was supplied
      51: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #111                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
      65: aload_0
      66: aload_1
      67: invokevirtual #122                // Method rightShiftUnsignedImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
      70: areturn

  public static java.lang.Number bitwiseNegate(java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       4: aload_0
       5: invokevirtual #126                // Method bitwiseNegateImpl:(Ljava/lang/Number;)Ljava/lang/Number;
       8: areturn

  public static java.lang.Number unaryMinus(java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       4: aload_0
       5: invokevirtual #130                // Method unaryMinusImpl:(Ljava/lang/Number;)Ljava/lang/Number;
       8: areturn

  public static java.lang.Number unaryPlus(java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method getMath:(Ljava/lang/Number;)Lorg/codehaus/groovy/runtime/typehandling/NumberMath;
       4: aload_0
       5: invokevirtual #134                // Method unaryPlusImpl:(Ljava/lang/Number;)Ljava/lang/Number;
       8: areturn

  public static boolean isFloatingPoint(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #136                // class java/lang/Double
       4: ifne          14
       7: aload_0
       8: instanceof    #138                // class java/lang/Float
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static boolean isInteger(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #141                // class java/lang/Integer
       4: ireturn

  public static boolean isLong(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #144                // class java/lang/Long
       4: ireturn

  public static boolean isBigDecimal(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #146                // class java/math/BigDecimal
       4: ireturn

  public static boolean isBigInteger(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #149                // class java/math/BigInteger
       4: ireturn

  public static java.math.BigDecimal toBigDecimal(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #146                // class java/math/BigDecimal
       4: ifeq          14
       7: aload_0
       8: checkcast     #146                // class java/math/BigDecimal
      11: goto          25
      14: new           #146                // class java/math/BigDecimal
      17: dup
      18: aload_0
      19: invokevirtual #152                // Method java/lang/Object.toString:()Ljava/lang/String;
      22: invokespecial #153                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      25: areturn

  public static java.math.BigInteger toBigInteger(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #149                // class java/math/BigInteger
       4: ifeq          14
       7: aload_0
       8: checkcast     #149                // class java/math/BigInteger
      11: goto          25
      14: new           #149                // class java/math/BigInteger
      17: dup
      18: aload_0
      19: invokevirtual #152                // Method java/lang/Object.toString:()Ljava/lang/String;
      22: invokespecial #157                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      25: areturn

  public static org.codehaus.groovy.runtime.typehandling.NumberMath getMath(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method isFloatingPoint:(Ljava/lang/Number;)Z
       4: ifne          14
       7: aload_1
       8: invokestatic  #74                 // Method isFloatingPoint:(Ljava/lang/Number;)Z
      11: ifeq          18
      14: getstatic     #163                // Field org/codehaus/groovy/runtime/typehandling/FloatingPointMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/FloatingPointMath;
      17: areturn
      18: aload_0
      19: invokestatic  #77                 // Method isBigDecimal:(Ljava/lang/Number;)Z
      22: ifne          32
      25: aload_1
      26: invokestatic  #77                 // Method isBigDecimal:(Ljava/lang/Number;)Z
      29: ifeq          36
      32: getstatic     #168                // Field org/codehaus/groovy/runtime/typehandling/BigDecimalMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigDecimalMath;
      35: areturn
      36: aload_0
      37: invokestatic  #170                // Method isBigInteger:(Ljava/lang/Number;)Z
      40: ifne          50
      43: aload_1
      44: invokestatic  #170                // Method isBigInteger:(Ljava/lang/Number;)Z
      47: ifeq          54
      50: getstatic     #175                // Field org/codehaus/groovy/runtime/typehandling/BigIntegerMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigIntegerMath;
      53: areturn
      54: aload_0
      55: invokestatic  #177                // Method isLong:(Ljava/lang/Number;)Z
      58: ifne          68
      61: aload_1
      62: invokestatic  #177                // Method isLong:(Ljava/lang/Number;)Z
      65: ifeq          72
      68: getstatic     #182                // Field org/codehaus/groovy/runtime/typehandling/LongMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/LongMath;
      71: areturn
      72: getstatic     #187                // Field org/codehaus/groovy/runtime/typehandling/IntegerMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/IntegerMath;
      75: areturn

  private static org.codehaus.groovy.runtime.typehandling.NumberMath getMath(java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #177                // Method isLong:(Ljava/lang/Number;)Z
       4: ifeq          11
       7: getstatic     #182                // Field org/codehaus/groovy/runtime/typehandling/LongMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/LongMath;
      10: areturn
      11: aload_0
      12: invokestatic  #74                 // Method isFloatingPoint:(Ljava/lang/Number;)Z
      15: ifeq          22
      18: getstatic     #163                // Field org/codehaus/groovy/runtime/typehandling/FloatingPointMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/FloatingPointMath;
      21: areturn
      22: aload_0
      23: invokestatic  #77                 // Method isBigDecimal:(Ljava/lang/Number;)Z
      26: ifeq          33
      29: getstatic     #168                // Field org/codehaus/groovy/runtime/typehandling/BigDecimalMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigDecimalMath;
      32: areturn
      33: aload_0
      34: invokestatic  #170                // Method isBigInteger:(Ljava/lang/Number;)Z
      37: ifeq          44
      40: getstatic     #175                // Field org/codehaus/groovy/runtime/typehandling/BigIntegerMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigIntegerMath;
      43: areturn
      44: getstatic     #187                // Field org/codehaus/groovy/runtime/typehandling/IntegerMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/IntegerMath;
      47: areturn

  protected abstract java.lang.Number absImpl(java.lang.Number);

  public abstract java.lang.Number addImpl(java.lang.Number, java.lang.Number);

  public abstract java.lang.Number subtractImpl(java.lang.Number, java.lang.Number);

  public abstract java.lang.Number multiplyImpl(java.lang.Number, java.lang.Number);

  public abstract java.lang.Number divideImpl(java.lang.Number, java.lang.Number);

  public abstract int compareToImpl(java.lang.Number, java.lang.Number);

  protected abstract java.lang.Number unaryMinusImpl(java.lang.Number);

  protected abstract java.lang.Number unaryPlusImpl(java.lang.Number);

  protected java.lang.Number bitwiseNegateImpl(java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #189                // String bitwiseNegate()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number orImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #195                // String or()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number andImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #197                // String and()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number xorImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #199                // String xor()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number modImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #201                // String mod()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number intdivImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #203                // String intdiv()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number leftShiftImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #205                // String leftShift()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number rightShiftImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #207                // String rightShift()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.Number rightShiftUnsignedImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: ldc           #209                // String rightShiftUnsigned()
       3: aload_1
       4: invokevirtual #193                // Method createUnsupportedException:(Ljava/lang/String;Ljava/lang/Number;)Ljava/lang/UnsupportedOperationException;
       7: athrow

  protected java.lang.UnsupportedOperationException createUnsupportedException(java.lang.String, java.lang.Number);
    Code:
       0: new           #79                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #81                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #211                // String Cannot use
      13: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #213                // String  on this number type:
      22: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #103                // Method java/lang/Class.getName:()Ljava/lang/String;
      32: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #215                // String  with value:
      37: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #111                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      50: areturn
}
