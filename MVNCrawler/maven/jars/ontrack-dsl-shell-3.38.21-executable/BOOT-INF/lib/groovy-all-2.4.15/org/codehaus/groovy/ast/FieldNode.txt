Compiled from "FieldNode.java"
public class org.codehaus.groovy.ast.FieldNode extends org.codehaus.groovy.ast.AnnotatedNode implements groovyjarjarasm.asm.Opcodes,org.codehaus.groovy.ast.Variable {
  private java.lang.String name;

  private int modifiers;

  private org.codehaus.groovy.ast.ClassNode type;

  private org.codehaus.groovy.ast.ClassNode owner;

  private org.codehaus.groovy.ast.expr.Expression initialValueExpression;

  private boolean dynamicTyped;

  private boolean holder;

  private org.codehaus.groovy.ast.ClassNode originType;

  public static org.codehaus.groovy.ast.FieldNode newStatic(java.lang.Class, java.lang.String) throws java.lang.SecurityException, java.lang.NoSuchFieldException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       5: astore_2
       6: aload_2
       7: invokevirtual #40                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: invokestatic  #46                 // Method org/codehaus/groovy/ast/ClassHelper.make:(Ljava/lang/Class;)Lorg/codehaus/groovy/ast/ClassNode;
      13: astore_3
      14: new           #2                  // class org/codehaus/groovy/ast/FieldNode
      17: dup
      18: aload_1
      19: bipush        9
      21: aload_3
      22: aload_0
      23: invokestatic  #46                 // Method org/codehaus/groovy/ast/ClassHelper.make:(Ljava/lang/Class;)Lorg/codehaus/groovy/ast/ClassNode;
      26: aconst_null
      27: invokespecial #50                 // Method "<init>":(Ljava/lang/String;ILorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/expr/Expression;)V
      30: areturn

  public org.codehaus.groovy.ast.FieldNode(java.lang.String, int, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.ClassNode, org.codehaus.groovy.ast.expr.Expression);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method org/codehaus/groovy/ast/AnnotatedNode."<init>":()V
       4: aload_0
       5: getstatic     #61                 // Field org/codehaus/groovy/ast/ClassHelper.DYNAMIC_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
       8: putfield      #63                 // Field originType:Lorg/codehaus/groovy/ast/ClassNode;
      11: aload_0
      12: aload_1
      13: putfield      #65                 // Field name:Ljava/lang/String;
      16: aload_0
      17: iload_2
      18: putfield      #67                 // Field modifiers:I
      21: aload_0
      22: aload_3
      23: putfield      #69                 // Field type:Lorg/codehaus/groovy/ast/ClassNode;
      26: aload_0
      27: getfield      #69                 // Field type:Lorg/codehaus/groovy/ast/ClassNode;
      30: getstatic     #61                 // Field org/codehaus/groovy/ast/ClassHelper.DYNAMIC_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
      33: if_acmpne     50
      36: aload         5
      38: ifnull        50
      41: aload_0
      42: aload         5
      44: invokevirtual #74                 // Method org/codehaus/groovy/ast/expr/Expression.getType:()Lorg/codehaus/groovy/ast/ClassNode;
      47: invokevirtual #78                 // Method setType:(Lorg/codehaus/groovy/ast/ClassNode;)V
      50: aload_0
      51: aload_3
      52: invokevirtual #78                 // Method setType:(Lorg/codehaus/groovy/ast/ClassNode;)V
      55: aload_0
      56: aload_3
      57: putfield      #63                 // Field originType:Lorg/codehaus/groovy/ast/ClassNode;
      60: aload_0
      61: aload         4
      63: putfield      #84                 // Field owner:Lorg/codehaus/groovy/ast/ClassNode;
      66: aload_0
      67: aload         5
      69: putfield      #86                 // Field initialValueExpression:Lorg/codehaus/groovy/ast/expr/Expression;
      72: return

  public org.codehaus.groovy.ast.expr.Expression getInitialExpression();
    Code:
       0: aload_0
       1: getfield      #86                 // Field initialValueExpression:Lorg/codehaus/groovy/ast/expr/Expression;
       4: areturn

  public int getModifiers();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #65                 // Field name:Ljava/lang/String;
       4: areturn

  public org.codehaus.groovy.ast.ClassNode getType();
    Code:
       0: aload_0
       1: getfield      #69                 // Field type:Lorg/codehaus/groovy/ast/ClassNode;
       4: areturn

  public void setType(org.codehaus.groovy.ast.ClassNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field type:Lorg/codehaus/groovy/ast/ClassNode;
       5: aload_0
       6: aload_1
       7: putfield      #63                 // Field originType:Lorg/codehaus/groovy/ast/ClassNode;
      10: aload_0
      11: dup
      12: getfield      #96                 // Field dynamicTyped:Z
      15: aload_1
      16: getstatic     #61                 // Field org/codehaus/groovy/ast/ClassHelper.DYNAMIC_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
      19: if_acmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ior
      28: putfield      #96                 // Field dynamicTyped:Z
      31: return

  public org.codehaus.groovy.ast.ClassNode getOwner();
    Code:
       0: aload_0
       1: getfield      #84                 // Field owner:Lorg/codehaus/groovy/ast/ClassNode;
       4: areturn

  public boolean isHolder();
    Code:
       0: aload_0
       1: getfield      #101                // Field holder:Z
       4: ireturn

  public void setHolder(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #101                // Field holder:Z
       5: return

  public boolean isDynamicTyped();
    Code:
       0: aload_0
       1: getfield      #96                 // Field dynamicTyped:Z
       4: ireturn

  public void setModifiers(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #67                 // Field modifiers:I
       5: return

  public boolean isStatic();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: bipush        8
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isEnum();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: sipush        16384
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isFinal();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: bipush        16
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isVolatile();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: bipush        64
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isPublic();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: iconst_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isProtected();
    Code:
       0: aload_0
       1: getfield      #67                 // Field modifiers:I
       4: iconst_4
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void setOwner(org.codehaus.groovy.ast.ClassNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field owner:Lorg/codehaus/groovy/ast/ClassNode;
       5: return

  public boolean hasInitialExpression();
    Code:
       0: aload_0
       1: getfield      #86                 // Field initialValueExpression:Lorg/codehaus/groovy/ast/expr/Expression;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isInStaticContext();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method isStatic:()Z
       4: ireturn

  public org.codehaus.groovy.ast.expr.Expression getInitialValueExpression();
    Code:
       0: aload_0
       1: getfield      #86                 // Field initialValueExpression:Lorg/codehaus/groovy/ast/expr/Expression;
       4: areturn

  public void setInitialValueExpression(org.codehaus.groovy.ast.expr.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field initialValueExpression:Lorg/codehaus/groovy/ast/expr/Expression;
       5: return

  public boolean isClosureSharedVariable();
    Code:
       0: iconst_0
       1: ireturn

  public void setClosureSharedVariable(boolean);
    Code:
       0: return

  public org.codehaus.groovy.ast.ClassNode getOriginType();
    Code:
       0: aload_0
       1: getfield      #63                 // Field originType:Lorg/codehaus/groovy/ast/ClassNode;
       4: areturn

  public void setOriginType(org.codehaus.groovy.ast.ClassNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field originType:Lorg/codehaus/groovy/ast/ClassNode;
       5: return

  public void rename(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #132                // Field declaringClass:Lorg/codehaus/groovy/ast/ClassNode;
       4: aload_0
       5: getfield      #65                 // Field name:Ljava/lang/String;
       8: aload_1
       9: invokevirtual #136                // Method org/codehaus/groovy/ast/ClassNode.renameField:(Ljava/lang/String;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: putfield      #65                 // Field name:Ljava/lang/String;
      17: return
}
