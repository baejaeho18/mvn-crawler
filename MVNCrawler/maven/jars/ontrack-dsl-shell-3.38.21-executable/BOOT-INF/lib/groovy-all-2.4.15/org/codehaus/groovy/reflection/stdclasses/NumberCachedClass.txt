Compiled from "NumberCachedClass.java"
public class org.codehaus.groovy.reflection.stdclasses.NumberCachedClass extends org.codehaus.groovy.reflection.CachedClass {
  public org.codehaus.groovy.reflection.stdclasses.NumberCachedClass(java.lang.Class, org.codehaus.groovy.reflection.ClassInfo);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method org/codehaus/groovy/reflection/CachedClass."<init>":(Ljava/lang/Class;Lorg/codehaus/groovy/reflection/ClassInfo;)V
       6: return

  public java.lang.Object coerceArgument(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/Number
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #22                 // Method coerceNumber:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: aload_1
      14: areturn

  public boolean isAssignableFrom(java.lang.Class);
    Code:
       0: aload_1
       1: ifnull        55
       4: ldc           #19                 // class java/lang/Number
       6: aload_1
       7: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      10: ifne          55
      13: aload_1
      14: getstatic     #35                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      17: if_acmpeq     55
      20: aload_1
      21: getstatic     #38                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      24: if_acmpeq     55
      27: aload_1
      28: getstatic     #41                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      31: if_acmpeq     55
      34: aload_1
      35: getstatic     #44                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      38: if_acmpeq     55
      41: aload_1
      42: getstatic     #47                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      45: if_acmpeq     55
      48: aload_1
      49: getstatic     #50                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      52: if_acmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  private java.lang.Object coerceNumber(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getTheClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: ldc           #32                 // class java/lang/Byte
       8: if_acmpne     25
      11: aload_1
      12: checkcast     #19                 // class java/lang/Number
      15: invokevirtual #59                 // Method java/lang/Number.byteValue:()B
      18: invokestatic  #63                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      21: astore_1
      22: goto          46
      25: aload_2
      26: ldc           #65                 // class java/math/BigInteger
      28: if_acmpne     46
      31: new           #65                 // class java/math/BigInteger
      34: dup
      35: aload_1
      36: checkcast     #19                 // class java/lang/Number
      39: invokestatic  #70                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #73                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      45: astore_1
      46: aload_1
      47: areturn
}
