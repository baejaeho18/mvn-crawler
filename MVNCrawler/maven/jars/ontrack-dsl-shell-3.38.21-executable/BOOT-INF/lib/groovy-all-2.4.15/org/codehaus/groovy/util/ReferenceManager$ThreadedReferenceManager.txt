Compiled from "ReferenceManager.java"
class org.codehaus.groovy.util.ReferenceManager$ThreadedReferenceManager extends org.codehaus.groovy.util.ReferenceManager {
  private final java.lang.Thread thread;

  private volatile boolean shouldRun;

  public org.codehaus.groovy.util.ReferenceManager$ThreadedReferenceManager(java.lang.ref.ReferenceQueue);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method org/codehaus/groovy/util/ReferenceManager."<init>":(Ljava/lang/ref/ReferenceQueue;)V
       5: aload_0
       6: iconst_1
       7: putfield      #18                 // Field shouldRun:Z
      10: aload_0
      11: new           #8                  // class org/codehaus/groovy/util/ReferenceManager$ThreadedReferenceManager$1
      14: dup
      15: aload_0
      16: invokespecial #21                 // Method org/codehaus/groovy/util/ReferenceManager$ThreadedReferenceManager$1."<init>":(Lorg/codehaus/groovy/util/ReferenceManager$ThreadedReferenceManager;)V
      19: putfield      #23                 // Field thread:Ljava/lang/Thread;
      22: aload_0
      23: getfield      #23                 // Field thread:Ljava/lang/Thread;
      26: aconst_null
      27: invokevirtual #29                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      30: aload_0
      31: getfield      #23                 // Field thread:Ljava/lang/Thread;
      34: iconst_1
      35: invokevirtual #33                 // Method java/lang/Thread.setDaemon:(Z)V
      38: aload_0
      39: getfield      #23                 // Field thread:Ljava/lang/Thread;
      42: ldc           #2                  // class org/codehaus/groovy/util/ReferenceManager$ThreadedReferenceManager
      44: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      47: invokevirtual #43                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      50: aload_0
      51: getfield      #23                 // Field thread:Ljava/lang/Thread;
      54: invokevirtual #47                 // Method java/lang/Thread.start:()V
      57: return

  public void stopThread();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #18                 // Field shouldRun:Z
       5: aload_0
       6: getfield      #23                 // Field thread:Ljava/lang/Thread;
       9: invokevirtual #55                 // Method java/lang/Thread.interrupt:()V
      12: return

  public java.lang.String toString();
    Code:
       0: new           #58                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #62                 // String ReferenceManager(threaded, thread=
       9: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #23                 // Field thread:Ljava/lang/Thread;
      16: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #71                 // String )
      21: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static boolean access$000(org.codehaus.groovy.util.ReferenceManager$ThreadedReferenceManager);
    Code:
       0: aload_0
       1: getfield      #18                 // Field shouldRun:Z
       4: ireturn
}
