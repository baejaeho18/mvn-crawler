Compiled from "OptimizingStatementWriter.java"
class org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry {
  private boolean canOptimize;

  private boolean shouldOptimize;

  private boolean[] involvedTypes;

  private org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #24                 // Field canOptimize:Z
       9: aload_0
      10: iconst_0
      11: putfield      #26                 // Field shouldOptimize:Z
      14: aload_0
      15: getstatic     #32                 // Field org/codehaus/groovy/classgen/asm/BinaryExpressionMultiTypeDispatcher.typeMapKeyNames:[Ljava/lang/String;
      18: arraylength
      19: newarray       boolean
      21: putfield      #34                 // Field involvedTypes:[Z
      24: return

  static boolean[] access$100(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry);
    Code:
       0: aload_0
       1: getfield      #34                 // Field involvedTypes:[Z
       4: areturn

  org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$1);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method "<init>":()V
       4: return

  static boolean access$700(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry);
    Code:
       0: aload_0
       1: getfield      #24                 // Field canOptimize:Z
       4: ireturn

  static boolean access$800(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry);
    Code:
       0: aload_0
       1: getfield      #26                 // Field shouldOptimize:Z
       4: ireturn

  static boolean access$802(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #26                 // Field shouldOptimize:Z
       6: ireturn

  static boolean access$702(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #24                 // Field canOptimize:Z
       6: ireturn

  static boolean[] access$102(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry, boolean[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #34                 // Field involvedTypes:[Z
       6: areturn
}
