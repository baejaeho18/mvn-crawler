Compiled from "DoubleCachedClass.java"
public class org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass extends org.codehaus.groovy.reflection.stdclasses.NumberCachedClass {
  private boolean allowNull;

  public org.codehaus.groovy.reflection.stdclasses.DoubleCachedClass(java.lang.Class, org.codehaus.groovy.reflection.ClassInfo, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method org/codehaus/groovy/reflection/stdclasses/NumberCachedClass."<init>":(Ljava/lang/Class;Lorg/codehaus/groovy/reflection/ClassInfo;)V
       6: aload_0
       7: iload_3
       8: putfield      #14                 // Field allowNull:Z
      11: return

  public boolean isDirectlyAssignable(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowNull:Z
       4: ifeq          11
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: instanceof    #24                 // class java/lang/Double
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public java.lang.Object coerceArgument(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #24                 // class java/lang/Double
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_1
      10: instanceof    #30                 // class java/lang/Number
      13: ifeq          71
      16: aload_1
      17: checkcast     #30                 // class java/lang/Number
      20: invokevirtual #34                 // Method java/lang/Number.doubleValue:()D
      23: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      26: astore_2
      27: aload_1
      28: instanceof    #40                 // class java/math/BigDecimal
      31: ifeq          69
      34: aload_2
      35: invokevirtual #44                 // Method java/lang/Double.isInfinite:()Z
      38: ifeq          69
      41: new           #46                 // class java/lang/IllegalArgumentException
      44: dup
      45: new           #48                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #24                 // class java/lang/Double
      54: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #57                 // String  out of range while converting from BigDecimal
      59: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_2
      70: areturn
      71: aload_1
      72: areturn

  public boolean isAssignableFrom(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowNull:Z
       4: ifeq          11
       7: aload_1
       8: ifnull        127
      11: aload_1
      12: ldc           #24                 // class java/lang/Double
      14: if_acmpeq     127
      17: aload_1
      18: ldc           #73                 // class java/lang/Integer
      20: if_acmpeq     127
      23: aload_1
      24: ldc           #75                 // class java/lang/Long
      26: if_acmpeq     127
      29: aload_1
      30: ldc           #77                 // class java/lang/Short
      32: if_acmpeq     127
      35: aload_1
      36: ldc           #79                 // class java/lang/Byte
      38: if_acmpeq     127
      41: aload_1
      42: ldc           #81                 // class java/lang/Float
      44: if_acmpeq     127
      47: aload_1
      48: getstatic     #84                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      51: if_acmpeq     127
      54: aload_1
      55: getstatic     #85                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      58: if_acmpeq     127
      61: aload_1
      62: getstatic     #86                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      65: if_acmpeq     127
      68: aload_1
      69: getstatic     #87                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      72: if_acmpeq     127
      75: aload_1
      76: getstatic     #88                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      79: if_acmpeq     127
      82: aload_1
      83: getstatic     #89                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      86: if_acmpeq     127
      89: aload_1
      90: ldc           #40                 // class java/math/BigDecimal
      92: if_acmpeq     127
      95: aload_1
      96: ldc           #91                 // class java/math/BigInteger
      98: if_acmpeq     127
     101: aload_1
     102: ifnull        114
     105: ldc           #40                 // class java/math/BigDecimal
     107: aload_1
     108: invokevirtual #95                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     111: ifne          127
     114: aload_1
     115: ifnull        131
     118: ldc           #91                 // class java/math/BigInteger
     120: aload_1
     121: invokevirtual #95                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     124: ifeq          131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: ireturn
}
