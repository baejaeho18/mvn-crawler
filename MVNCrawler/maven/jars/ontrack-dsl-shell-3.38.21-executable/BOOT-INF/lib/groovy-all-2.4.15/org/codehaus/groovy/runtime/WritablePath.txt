Compiled from "WritablePath.java"
public class org.codehaus.groovy.runtime.WritablePath implements java.nio.file.Path,groovy.lang.Writable {
  private final java.lang.String encoding;

  private final java.nio.file.Path delegate;

  public org.codehaus.groovy.runtime.WritablePath(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #26                 // Method "<init>":(Ljava/nio/file/Path;Ljava/lang/String;)V
       6: return

  public org.codehaus.groovy.runtime.WritablePath(java.nio.file.Path, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #33                 // Field encoding:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: putfield      #35                 // Field delegate:Ljava/nio/file/Path;
      14: return

  public java.io.Writer writeTo(java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field encoding:Ljava/lang/String;
       4: ifnonnull     25
       7: new           #41                 // class java/io/InputStreamReader
      10: dup
      11: aload_0
      12: iconst_0
      13: anewarray     #43                 // class java/nio/file/OpenOption
      16: invokestatic  #49                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      19: invokespecial #52                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      22: goto          47
      25: new           #41                 // class java/io/InputStreamReader
      28: dup
      29: aload_0
      30: iconst_0
      31: anewarray     #43                 // class java/nio/file/OpenOption
      34: invokestatic  #49                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      37: aload_0
      38: getfield      #33                 // Field encoding:Ljava/lang/String;
      41: invokestatic  #58                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      44: invokespecial #61                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      47: astore_2
      48: aload_2
      49: invokevirtual #67                 // Method java/io/Reader.read:()I
      52: istore_3
      53: iload_3
      54: iconst_m1
      55: if_icmpeq     71
      58: aload_1
      59: iload_3
      60: invokevirtual #73                 // Method java/io/Writer.write:(I)V
      63: aload_2
      64: invokevirtual #67                 // Method java/io/Reader.read:()I
      67: istore_3
      68: goto          53
      71: aload_2
      72: invokevirtual #76                 // Method java/io/Reader.close:()V
      75: goto          87
      78: astore        4
      80: aload_2
      81: invokevirtual #76                 // Method java/io/Reader.close:()V
      84: aload         4
      86: athrow
      87: aload_1
      88: areturn
    Exception table:
       from    to  target type
          48    71    78   any
          78    80    78   any

  public java.nio.file.FileSystem getFileSystem();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #88,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
       9: areturn

  public boolean isAbsolute();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #92,  1           // InterfaceMethod java/nio/file/Path.isAbsolute:()Z
       9: ireturn

  public java.nio.file.Path getRoot();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #96,  1           // InterfaceMethod java/nio/file/Path.getRoot:()Ljava/nio/file/Path;
       9: areturn

  public java.nio.file.Path getFileName();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #99,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       9: areturn

  public java.nio.file.Path getParent();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #102,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
       9: areturn

  public int getNameCount();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #105,  1          // InterfaceMethod java/nio/file/Path.getNameCount:()I
       9: ireturn

  public java.nio.file.Path getName(int);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: iload_1
       5: invokeinterface #109,  2          // InterfaceMethod java/nio/file/Path.getName:(I)Ljava/nio/file/Path;
      10: areturn

  public java.nio.file.Path subpath(int, int);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: iload_1
       5: iload_2
       6: invokeinterface #114,  3          // InterfaceMethod java/nio/file/Path.subpath:(II)Ljava/nio/file/Path;
      11: areturn

  public boolean startsWith(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #120,  2          // InterfaceMethod java/nio/file/Path.startsWith:(Ljava/nio/file/Path;)Z
      10: ireturn

  public boolean startsWith(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #124,  2          // InterfaceMethod java/nio/file/Path.startsWith:(Ljava/lang/String;)Z
      10: ireturn

  public boolean endsWith(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #127,  2          // InterfaceMethod java/nio/file/Path.endsWith:(Ljava/nio/file/Path;)Z
      10: ireturn

  public boolean endsWith(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #129,  2          // InterfaceMethod java/nio/file/Path.endsWith:(Ljava/lang/String;)Z
      10: ireturn

  public java.nio.file.Path normalize();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #132,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
       9: areturn

  public java.nio.file.Path resolve(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #136,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      10: areturn

  public java.nio.file.Path resolve(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #139,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      10: areturn

  public java.nio.file.Path resolveSibling(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #142,  2          // InterfaceMethod java/nio/file/Path.resolveSibling:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      10: areturn

  public java.nio.file.Path resolveSibling(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #144,  2          // InterfaceMethod java/nio/file/Path.resolveSibling:(Ljava/lang/String;)Ljava/nio/file/Path;
      10: areturn

  public java.nio.file.Path relativize(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #147,  2          // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      10: areturn

  public java.net.URI toUri();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #151,  1          // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
       9: areturn

  public java.nio.file.Path toAbsolutePath();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #154,  1          // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
       9: areturn

  public java.nio.file.Path toRealPath(java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #158,  2          // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      10: areturn

  public java.io.File toFile();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #164,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       9: areturn

  public java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>[], java.nio.file.WatchEvent$Modifier...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #168,  4          // InterfaceMethod java/nio/file/Path.register:(Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;[Ljava/nio/file/WatchEvent$Modifier;)Ljava/nio/file/WatchKey;
      12: areturn

  public java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind<?>...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: aload_2
       6: invokeinterface #178,  3          // InterfaceMethod java/nio/file/Path.register:(Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;)Ljava/nio/file/WatchKey;
      11: areturn

  public java.util.Iterator<java.nio.file.Path> iterator();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #182,  1          // InterfaceMethod java/nio/file/Path.iterator:()Ljava/util/Iterator;
       9: areturn

  public int compareTo(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #186,  2          // InterfaceMethod java/nio/file/Path.compareTo:(Ljava/nio/file/Path;)I
      10: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: aload_1
       5: invokeinterface #190,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      10: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #194,  1          // InterfaceMethod java/nio/file/Path.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #35                 // Field delegate:Ljava/nio/file/Path;
       4: invokeinterface #198,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
       9: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class java/nio/file/Path
       5: invokevirtual #200                // Method compareTo:(Ljava/nio/file/Path;)I
       8: ireturn
}
