Compiled from "ManagedConcurrentMap.java"
public class org.codehaus.groovy.util.ManagedConcurrentMap$EntryWithValue<K, V> extends org.codehaus.groovy.util.ManagedConcurrentMap$Entry<K, V> {
  private V value;

  public org.codehaus.groovy.util.ManagedConcurrentMap$EntryWithValue(org.codehaus.groovy.util.ReferenceBundle, org.codehaus.groovy.util.ManagedConcurrentMap$Segment, K, int, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #21                 // Method org/codehaus/groovy/util/ManagedConcurrentMap$Entry."<init>":(Lorg/codehaus/groovy/util/ReferenceBundle;Lorg/codehaus/groovy/util/ManagedConcurrentMap$Segment;Ljava/lang/Object;I)V
       9: aload_0
      10: aload         5
      12: invokevirtual #25                 // Method setValue:(Ljava/lang/Object;)V
      15: return

  public V getValue();
    Code:
       0: aload_0
       1: getfield      #40                 // Field value:Ljava/lang/Object;
       4: areturn

  public void setValue(V);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field value:Ljava/lang/Object;
       5: return

  public void finalizeReference();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #40                 // Field value:Ljava/lang/Object;
       5: aload_0
       6: invokespecial #44                 // Method org/codehaus/groovy/util/ManagedConcurrentMap$Entry.finalizeReference:()V
       9: return
}
