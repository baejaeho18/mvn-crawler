Compiled from "ReferenceManager.java"
final class org.codehaus.groovy.util.ReferenceManager$1 extends org.codehaus.groovy.util.ReferenceManager {
  private java.util.concurrent.atomic.AtomicInteger refCnt;

  private volatile org.codehaus.groovy.util.ReferenceManager manager;

  final java.lang.ref.ReferenceQueue val$queue;

  final org.codehaus.groovy.util.ReferenceManager val$callback;

  final int val$threshold;

  org.codehaus.groovy.util.ReferenceManager$1(java.lang.ref.ReferenceQueue, java.lang.ref.ReferenceQueue, org.codehaus.groovy.util.ReferenceManager, int);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #21                 // Field val$queue:Ljava/lang/ref/ReferenceQueue;
       5: aload_0
       6: aload_3
       7: putfield      #23                 // Field val$callback:Lorg/codehaus/groovy/util/ReferenceManager;
      10: aload_0
      11: iload         4
      13: putfield      #25                 // Field val$threshold:I
      16: aload_0
      17: aload_1
      18: invokespecial #28                 // Method org/codehaus/groovy/util/ReferenceManager."<init>":(Ljava/lang/ref/ReferenceQueue;)V
      21: aload_0
      22: new           #30                 // class java/util/concurrent/atomic/AtomicInteger
      25: dup
      26: invokespecial #33                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      29: putfield      #35                 // Field refCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      32: aload_0
      33: aload_0
      34: getfield      #21                 // Field val$queue:Ljava/lang/ref/ReferenceQueue;
      37: invokestatic  #39                 // Method createIdlingManager:(Ljava/lang/ref/ReferenceQueue;)Lorg/codehaus/groovy/util/ReferenceManager;
      40: putfield      #41                 // Field manager:Lorg/codehaus/groovy/util/ReferenceManager;
      43: return

  public void afterReferenceCreation(org.codehaus.groovy.util.Reference);
    Code:
       0: aload_0
       1: getfield      #41                 // Field manager:Lorg/codehaus/groovy/util/ReferenceManager;
       4: aload_0
       5: getfield      #23                 // Field val$callback:Lorg/codehaus/groovy/util/ReferenceManager;
       8: if_acmpne     20
      11: aload_0
      12: getfield      #23                 // Field val$callback:Lorg/codehaus/groovy/util/ReferenceManager;
      15: aload_1
      16: invokevirtual #48                 // Method org/codehaus/groovy/util/ReferenceManager.afterReferenceCreation:(Lorg/codehaus/groovy/util/Reference;)V
      19: return
      20: aload_0
      21: getfield      #35                 // Field refCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      24: invokevirtual #52                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      27: istore_2
      28: iload_2
      29: aload_0
      30: getfield      #25                 // Field val$threshold:I
      33: if_icmpgt     40
      36: iload_2
      37: ifge          56
      40: aload_0
      41: aload_0
      42: getfield      #23                 // Field val$callback:Lorg/codehaus/groovy/util/ReferenceManager;
      45: putfield      #41                 // Field manager:Lorg/codehaus/groovy/util/ReferenceManager;
      48: aload_0
      49: getfield      #23                 // Field val$callback:Lorg/codehaus/groovy/util/ReferenceManager;
      52: aload_1
      53: invokevirtual #48                 // Method org/codehaus/groovy/util/ReferenceManager.afterReferenceCreation:(Lorg/codehaus/groovy/util/Reference;)V
      56: return

  public void removeStallEntries();
    Code:
       0: aload_0
       1: getfield      #41                 // Field manager:Lorg/codehaus/groovy/util/ReferenceManager;
       4: invokevirtual #58                 // Method org/codehaus/groovy/util/ReferenceManager.removeStallEntries:()V
       7: return

  public void stopThread();
    Code:
       0: aload_0
       1: getfield      #41                 // Field manager:Lorg/codehaus/groovy/util/ReferenceManager;
       4: invokevirtual #61                 // Method org/codehaus/groovy/util/ReferenceManager.stopThread:()V
       7: return

  public java.lang.String toString();
    Code:
       0: new           #65                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #68                 // String ReferenceManager(thresholded, current manager=
       9: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #41                 // Field manager:Lorg/codehaus/groovy/util/ReferenceManager;
      16: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #77                 // String , threshold=
      21: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #35                 // Field refCnt:Ljava/util/concurrent/atomic/AtomicInteger;
      28: invokevirtual #80                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      31: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #85                 // String /
      36: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #25                 // Field val$threshold:I
      43: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #87                 // String )
      48: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: areturn
}
