Compiled from "FloatCachedClass.java"
public class org.codehaus.groovy.reflection.stdclasses.FloatCachedClass extends org.codehaus.groovy.reflection.stdclasses.NumberCachedClass {
  private boolean allowNull;

  public org.codehaus.groovy.reflection.stdclasses.FloatCachedClass(java.lang.Class, org.codehaus.groovy.reflection.ClassInfo, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method org/codehaus/groovy/reflection/stdclasses/NumberCachedClass."<init>":(Ljava/lang/Class;Lorg/codehaus/groovy/reflection/ClassInfo;)V
       6: aload_0
       7: iload_3
       8: putfield      #14                 // Field allowNull:Z
      11: return

  public java.lang.Object coerceArgument(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #24                 // class java/lang/Float
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_1
      10: instanceof    #26                 // class java/lang/Number
      13: ifeq          71
      16: aload_1
      17: checkcast     #26                 // class java/lang/Number
      20: invokevirtual #30                 // Method java/lang/Number.floatValue:()F
      23: invokestatic  #34                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      26: astore_2
      27: aload_1
      28: instanceof    #36                 // class java/math/BigDecimal
      31: ifeq          69
      34: aload_2
      35: invokevirtual #40                 // Method java/lang/Float.isInfinite:()Z
      38: ifeq          69
      41: new           #42                 // class java/lang/IllegalArgumentException
      44: dup
      45: new           #44                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #24                 // class java/lang/Float
      54: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #53                 // String  out of range while converting from BigDecimal
      59: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_2
      70: areturn
      71: aload_1
      72: areturn

  public boolean isDirectlyAssignable(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowNull:Z
       4: ifeq          11
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: instanceof    #24                 // class java/lang/Float
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean isAssignableFrom(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #14                 // Field allowNull:Z
       4: ifeq          11
       7: aload_1
       8: ifnull        88
      11: aload_1
      12: ldc           #24                 // class java/lang/Float
      14: if_acmpeq     88
      17: aload_1
      18: ldc           #73                 // class java/lang/Integer
      20: if_acmpeq     88
      23: aload_1
      24: ldc           #75                 // class java/lang/Long
      26: if_acmpeq     88
      29: aload_1
      30: ldc           #77                 // class java/lang/Short
      32: if_acmpeq     88
      35: aload_1
      36: ldc           #79                 // class java/lang/Byte
      38: if_acmpeq     88
      41: aload_1
      42: getstatic     #82                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      45: if_acmpeq     88
      48: aload_1
      49: getstatic     #83                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      52: if_acmpeq     88
      55: aload_1
      56: getstatic     #84                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      59: if_acmpeq     88
      62: aload_1
      63: getstatic     #85                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      66: if_acmpeq     88
      69: aload_1
      70: getstatic     #86                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      73: if_acmpeq     88
      76: aload_1
      77: ldc           #36                 // class java/math/BigDecimal
      79: if_acmpeq     88
      82: aload_1
      83: ldc           #88                 // class java/math/BigInteger
      85: if_acmpne     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ireturn
}
