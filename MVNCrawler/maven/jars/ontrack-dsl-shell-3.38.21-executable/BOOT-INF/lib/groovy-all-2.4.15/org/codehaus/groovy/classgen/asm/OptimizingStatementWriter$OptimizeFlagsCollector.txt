Compiled from "OptimizingStatementWriter.java"
class org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector {
  private org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry current;

  private java.util.LinkedList<org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry> olderEntries;

  private org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry
       8: dup
       9: aconst_null
      10: invokespecial #25                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry."<init>":(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$1;)V
      13: putfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      16: aload_0
      17: new           #29                 // class java/util/LinkedList
      20: dup
      21: invokespecial #30                 // Method java/util/LinkedList."<init>":()V
      24: putfield      #32                 // Field olderEntries:Ljava/util/LinkedList;
      27: return

  public void push();
    Code:
       0: aload_0
       1: getfield      #32                 // Field olderEntries:Ljava/util/LinkedList;
       4: aload_0
       5: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       8: invokevirtual #39                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
      11: aload_0
      12: new           #10                 // class org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry
      15: dup
      16: aconst_null
      17: invokespecial #25                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry."<init>":(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$1;)V
      20: putfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      23: return

  public void pop(boolean);
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: astore_2
       5: aload_0
       6: aload_0
       7: getfield      #32                 // Field olderEntries:Ljava/util/LinkedList;
      10: invokevirtual #45                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
      13: checkcast     #10                 // class org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry
      16: putfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      19: iload_1
      20: ifeq          73
      23: aload_0
      24: aload_2
      25: invokestatic  #49                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$700:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
      28: invokevirtual #52                 // Method chainCanOptimize:(Z)V
      31: aload_0
      32: aload_2
      33: invokestatic  #55                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$800:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
      36: invokevirtual #58                 // Method chainShouldOptimize:(Z)V
      39: iconst_0
      40: istore_3
      41: iload_3
      42: getstatic     #64                 // Field org/codehaus/groovy/classgen/asm/BinaryExpressionMultiTypeDispatcher.typeMapKeyNames:[Ljava/lang/String;
      45: arraylength
      46: if_icmpge     73
      49: aload_0
      50: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      53: invokestatic  #68                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$100:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)[Z
      56: iload_3
      57: dup2
      58: baload
      59: aload_2
      60: invokestatic  #68                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$100:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)[Z
      63: iload_3
      64: baload
      65: ior
      66: bastore
      67: iinc          3, 1
      70: goto          41
      73: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: invokestatic  #55                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$800:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
       7: ifeq          46
      10: new           #77                 // class java/lang/StringBuilder
      13: dup
      14: new           #77                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #78                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #80                 // String should optimize, can =
      23: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      30: invokestatic  #49                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$700:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
      33: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      36: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      42: astore_1
      43: goto          79
      46: aload_0
      47: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      50: invokestatic  #49                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$700:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
      53: ifeq          69
      56: new           #77                 // class java/lang/StringBuilder
      59: dup
      60: ldc           #94                 // String can optimize
      62: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      65: astore_1
      66: goto          79
      69: new           #77                 // class java/lang/StringBuilder
      72: dup
      73: ldc           #96                 // String don\'t optimize
      75: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      78: astore_1
      79: aload_1
      80: ldc           #98                 // String  involvedTypes =
      82: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: iconst_0
      87: istore_2
      88: iload_2
      89: getstatic     #64                 // Field org/codehaus/groovy/classgen/asm/BinaryExpressionMultiTypeDispatcher.typeMapKeyNames:[Ljava/lang/String;
      92: arraylength
      93: if_icmpge     129
      96: aload_0
      97: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
     100: invokestatic  #68                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$100:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)[Z
     103: iload_2
     104: baload
     105: ifeq          123
     108: aload_1
     109: ldc           #100                // String
     111: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: getstatic     #64                 // Field org/codehaus/groovy/classgen/asm/BinaryExpressionMultiTypeDispatcher.typeMapKeyNames:[Ljava/lang/String;
     117: iload_2
     118: aaload
     119: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: iinc          2, 1
     126: goto          88
     129: aload_1
     130: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: areturn

  private boolean shouldOptimize();
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: invokestatic  #55                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$800:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
       7: ireturn

  private boolean canOptimize();
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: invokestatic  #49                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$700:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
       7: ifne          20
      10: aload_0
      11: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      14: invokestatic  #55                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$800:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void chainShouldOptimize(boolean);
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: aload_0
       5: invokespecial #107                // Method shouldOptimize:()Z
       8: ifne          15
      11: iload_1
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokestatic  #111                // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$802:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;Z)Z
      23: pop
      24: return

  public void chainCanOptimize(boolean);
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: aload_0
       5: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       8: invokestatic  #49                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$700:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)Z
      11: ifne          18
      14: iload_1
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokestatic  #115                // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$702:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;Z)Z
      26: pop
      27: return

  public void chainInvolvedType(org.codehaus.groovy.ast.ClassNode);
    Code:
       0: getstatic     #121                // Field org/codehaus/groovy/classgen/asm/BinaryExpressionMultiTypeDispatcher.typeMap:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #127,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #129                // class java/lang/Integer
      12: astore_2
      13: aload_2
      14: ifnonnull     18
      17: return
      18: aload_0
      19: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      22: invokestatic  #68                 // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$100:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;)[Z
      25: aload_2
      26: invokevirtual #133                // Method java/lang/Integer.intValue:()I
      29: iconst_1
      30: bastore
      31: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: iconst_0
       5: invokestatic  #115                // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$702:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;Z)Z
       8: pop
       9: aload_0
      10: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      13: iconst_0
      14: invokestatic  #111                // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$802:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;Z)Z
      17: pop
      18: aload_0
      19: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
      22: getstatic     #64                 // Field org/codehaus/groovy/classgen/asm/BinaryExpressionMultiTypeDispatcher.typeMapKeyNames:[Ljava/lang/String;
      25: arraylength
      26: newarray       boolean
      28: invokestatic  #142                // Method org/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry.access$102:(Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;[Z)[Z
      31: pop
      32: return

  static org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry access$000(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector);
    Code:
       0: aload_0
       1: getfield      #27                 // Field current:Lorg/codehaus/groovy/classgen/asm/OptimizingStatementWriter$OptimizeFlagsCollector$OptimizeFlagsEntry;
       4: areturn

  org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$1);
    Code:
       0: aload_0
       1: invokespecial #146                // Method "<init>":()V
       4: return

  static boolean access$1000(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector);
    Code:
       0: aload_0
       1: invokespecial #107                // Method shouldOptimize:()Z
       4: ireturn

  static boolean access$1300(org.codehaus.groovy.classgen.asm.OptimizingStatementWriter$OptimizeFlagsCollector);
    Code:
       0: aload_0
       1: invokespecial #152                // Method canOptimize:()Z
       4: ireturn
}
