Compiled from "ForStatement.java"
public class org.codehaus.groovy.ast.stmt.ForStatement extends org.codehaus.groovy.ast.stmt.Statement implements org.codehaus.groovy.ast.stmt.LoopingStatement {
  public static final org.codehaus.groovy.ast.Parameter FOR_LOOP_DUMMY;

  private org.codehaus.groovy.ast.Parameter variable;

  private org.codehaus.groovy.ast.expr.Expression collectionExpression;

  private org.codehaus.groovy.ast.stmt.Statement loopBlock;

  private org.codehaus.groovy.ast.VariableScope scope;

  public org.codehaus.groovy.ast.stmt.ForStatement(org.codehaus.groovy.ast.Parameter, org.codehaus.groovy.ast.expr.Expression, org.codehaus.groovy.ast.stmt.Statement);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/codehaus/groovy/ast/stmt/Statement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #23                 // Field variable:Lorg/codehaus/groovy/ast/Parameter;
       9: aload_0
      10: aload_2
      11: putfield      #25                 // Field collectionExpression:Lorg/codehaus/groovy/ast/expr/Expression;
      14: aload_0
      15: aload_3
      16: putfield      #27                 // Field loopBlock:Lorg/codehaus/groovy/ast/stmt/Statement;
      19: return

  public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #37,  2           // InterfaceMethod org/codehaus/groovy/ast/GroovyCodeVisitor.visitForLoop:(Lorg/codehaus/groovy/ast/stmt/ForStatement;)V
       7: return

  public org.codehaus.groovy.ast.expr.Expression getCollectionExpression();
    Code:
       0: aload_0
       1: getfield      #25                 // Field collectionExpression:Lorg/codehaus/groovy/ast/expr/Expression;
       4: areturn

  public org.codehaus.groovy.ast.stmt.Statement getLoopBlock();
    Code:
       0: aload_0
       1: getfield      #27                 // Field loopBlock:Lorg/codehaus/groovy/ast/stmt/Statement;
       4: areturn

  public org.codehaus.groovy.ast.Parameter getVariable();
    Code:
       0: aload_0
       1: getfield      #23                 // Field variable:Lorg/codehaus/groovy/ast/Parameter;
       4: areturn

  public org.codehaus.groovy.ast.ClassNode getVariableType();
    Code:
       0: aload_0
       1: getfield      #23                 // Field variable:Lorg/codehaus/groovy/ast/Parameter;
       4: invokevirtual #52                 // Method org/codehaus/groovy/ast/Parameter.getType:()Lorg/codehaus/groovy/ast/ClassNode;
       7: areturn

  public void setCollectionExpression(org.codehaus.groovy.ast.expr.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field collectionExpression:Lorg/codehaus/groovy/ast/expr/Expression;
       5: return

  public void setVariableScope(org.codehaus.groovy.ast.VariableScope);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field scope:Lorg/codehaus/groovy/ast/VariableScope;
       5: return

  public org.codehaus.groovy.ast.VariableScope getVariableScope();
    Code:
       0: aload_0
       1: getfield      #58                 // Field scope:Lorg/codehaus/groovy/ast/VariableScope;
       4: areturn

  public void setLoopBlock(org.codehaus.groovy.ast.stmt.Statement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field loopBlock:Lorg/codehaus/groovy/ast/stmt/Statement;
       5: return

  static {};
    Code:
       0: new           #49                 // class org/codehaus/groovy/ast/Parameter
       3: dup
       4: getstatic     #70                 // Field org/codehaus/groovy/ast/ClassHelper.OBJECT_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
       7: ldc           #72                 // String forLoopDummyParameter
       9: invokespecial #75                 // Method org/codehaus/groovy/ast/Parameter."<init>":(Lorg/codehaus/groovy/ast/ClassNode;Ljava/lang/String;)V
      12: putstatic     #77                 // Field FOR_LOOP_DUMMY:Lorg/codehaus/groovy/ast/Parameter;
      15: return
}
