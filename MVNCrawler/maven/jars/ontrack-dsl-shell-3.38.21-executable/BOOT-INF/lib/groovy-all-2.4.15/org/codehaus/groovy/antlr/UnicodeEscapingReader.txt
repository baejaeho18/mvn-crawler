Compiled from "UnicodeEscapingReader.java"
public class org.codehaus.groovy.antlr.UnicodeEscapingReader extends java.io.Reader {
  private final java.io.Reader reader;

  private groovyjarjarantlr.CharScanner lexer;

  private boolean hasNextChar;

  private int nextChar;

  private final org.codehaus.groovy.antlr.SourceBuffer sourceBuffer;

  private int previousLine;

  private int numUnicodeEscapesFound;

  private int numUnicodeEscapesFoundOnCurrentLine;

  public org.codehaus.groovy.antlr.UnicodeEscapingReader(java.io.Reader, org.codehaus.groovy.antlr.SourceBuffer);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/io/Reader."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #30                 // Field hasNextChar:Z
       9: aload_0
      10: iconst_0
      11: putfield      #32                 // Field numUnicodeEscapesFound:I
      14: aload_0
      15: iconst_0
      16: putfield      #34                 // Field numUnicodeEscapesFoundOnCurrentLine:I
      19: aload_0
      20: aload_1
      21: putfield      #36                 // Field reader:Ljava/io/Reader;
      24: aload_0
      25: aload_2
      26: putfield      #38                 // Field sourceBuffer:Lorg/codehaus/groovy/antlr/SourceBuffer;
      29: aload_0
      30: new           #9                  // class org/codehaus/groovy/antlr/UnicodeEscapingReader$DummyLexer
      33: dup
      34: aconst_null
      35: invokespecial #41                 // Method org/codehaus/groovy/antlr/UnicodeEscapingReader$DummyLexer."<init>":(Lorg/codehaus/groovy/antlr/UnicodeEscapingReader$1;)V
      38: putfield      #43                 // Field lexer:Lgroovyjarjarantlr/CharScanner;
      41: return

  public void setLexer(groovyjarjarantlr.CharScanner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field lexer:Lgroovyjarjarantlr/CharScanner;
       5: return

  public int read(char[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iload         5
       8: iload_3
       9: if_icmpge     38
      12: aload_0
      13: invokevirtual #54                 // Method read:()I
      16: dup
      17: istore        4
      19: iconst_m1
      20: if_icmpeq     38
      23: aload_1
      24: iload_2
      25: iload         5
      27: iadd
      28: iload         4
      30: i2c
      31: castore
      32: iinc          5, 1
      35: goto          6
      38: iload         5
      40: ifne          53
      43: iload         4
      45: iconst_m1
      46: if_icmpne     53
      49: iconst_m1
      50: goto          55
      53: iload         5
      55: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field hasNextChar:Z
       4: ifeq          25
       7: aload_0
       8: iconst_0
       9: putfield      #30                 // Field hasNextChar:Z
      12: aload_0
      13: aload_0
      14: getfield      #62                 // Field nextChar:I
      17: invokespecial #66                 // Method write:(I)V
      20: aload_0
      21: getfield      #62                 // Field nextChar:I
      24: ireturn
      25: aload_0
      26: getfield      #68                 // Field previousLine:I
      29: aload_0
      30: getfield      #43                 // Field lexer:Lgroovyjarjarantlr/CharScanner;
      33: invokevirtual #73                 // Method groovyjarjarantlr/CharScanner.getLine:()I
      36: if_icmpeq     55
      39: aload_0
      40: iconst_0
      41: putfield      #34                 // Field numUnicodeEscapesFoundOnCurrentLine:I
      44: aload_0
      45: aload_0
      46: getfield      #43                 // Field lexer:Lgroovyjarjarantlr/CharScanner;
      49: invokevirtual #73                 // Method groovyjarjarantlr/CharScanner.getLine:()I
      52: putfield      #68                 // Field previousLine:I
      55: aload_0
      56: getfield      #36                 // Field reader:Ljava/io/Reader;
      59: invokevirtual #74                 // Method java/io/Reader.read:()I
      62: istore_1
      63: iload_1
      64: bipush        92
      66: if_icmpeq     76
      69: aload_0
      70: iload_1
      71: invokespecial #66                 // Method write:(I)V
      74: iload_1
      75: ireturn
      76: aload_0
      77: getfield      #36                 // Field reader:Ljava/io/Reader;
      80: invokevirtual #74                 // Method java/io/Reader.read:()I
      83: istore_1
      84: iload_1
      85: bipush        117
      87: if_icmpeq     109
      90: aload_0
      91: iconst_1
      92: putfield      #30                 // Field hasNextChar:Z
      95: aload_0
      96: iload_1
      97: putfield      #62                 // Field nextChar:I
     100: aload_0
     101: bipush        92
     103: invokespecial #66                 // Method write:(I)V
     106: bipush        92
     108: ireturn
     109: iconst_0
     110: istore_2
     111: iinc          2, 1
     114: aload_0
     115: getfield      #36                 // Field reader:Ljava/io/Reader;
     118: invokevirtual #74                 // Method java/io/Reader.read:()I
     121: istore_1
     122: iload_1
     123: bipush        117
     125: if_icmpeq     111
     128: aload_0
     129: iload_1
     130: invokespecial #77                 // Method checkHexDigit:(I)V
     133: new           #79                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
     140: astore_3
     141: aload_3
     142: iload_1
     143: i2c
     144: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     147: pop
     148: iconst_0
     149: istore        4
     151: iload         4
     153: iconst_3
     154: if_icmpge     183
     157: aload_0
     158: getfield      #36                 // Field reader:Ljava/io/Reader;
     161: invokevirtual #74                 // Method java/io/Reader.read:()I
     164: istore_1
     165: aload_0
     166: iload_1
     167: invokespecial #77                 // Method checkHexDigit:(I)V
     170: aload_3
     171: iload_1
     172: i2c
     173: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     176: pop
     177: iinc          4, 1
     180: goto          151
     183: aload_3
     184: invokevirtual #88                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: bipush        16
     189: invokestatic  #94                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
     192: istore        4
     194: aload_0
     195: iload         4
     197: invokespecial #66                 // Method write:(I)V
     200: aload_0
     201: dup
     202: getfield      #32                 // Field numUnicodeEscapesFound:I
     205: iconst_4
     206: iload_2
     207: iadd
     208: iadd
     209: putfield      #32                 // Field numUnicodeEscapesFound:I
     212: aload_0
     213: dup
     214: getfield      #34                 // Field numUnicodeEscapesFoundOnCurrentLine:I
     217: iconst_4
     218: iload_2
     219: iadd
     220: iadd
     221: putfield      #34                 // Field numUnicodeEscapesFoundOnCurrentLine:I
     224: iload         4
     226: ireturn

  private void write(int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field sourceBuffer:Lorg/codehaus/groovy/antlr/SourceBuffer;
       4: ifnull        15
       7: aload_0
       8: getfield      #38                 // Field sourceBuffer:Lorg/codehaus/groovy/antlr/SourceBuffer;
      11: iload_1
      12: invokevirtual #102                // Method org/codehaus/groovy/antlr/SourceBuffer.write:(I)V
      15: return

  private void checkHexDigit(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        48
       3: if_icmplt     13
       6: iload_1
       7: bipush        57
       9: if_icmpgt     13
      12: return
      13: iload_1
      14: bipush        97
      16: if_icmplt     26
      19: iload_1
      20: bipush        102
      22: if_icmpgt     26
      25: return
      26: iload_1
      27: bipush        65
      29: if_icmplt     39
      32: iload_1
      33: bipush        70
      35: if_icmpgt     39
      38: return
      39: aload_0
      40: iconst_1
      41: putfield      #30                 // Field hasNextChar:Z
      44: aload_0
      45: iload_1
      46: putfield      #62                 // Field nextChar:I
      49: new           #51                 // class java/io/IOException
      52: dup
      53: new           #79                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #104                // String Did not find four digit hex character code. line:
      62: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #43                 // Field lexer:Lgroovyjarjarantlr/CharScanner;
      69: invokevirtual #73                 // Method groovyjarjarantlr/CharScanner.getLine:()I
      72: invokevirtual #110                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      75: ldc           #112                // String  col:
      77: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #43                 // Field lexer:Lgroovyjarjarantlr/CharScanner;
      84: invokevirtual #115                // Method groovyjarjarantlr/CharScanner.getColumn:()I
      87: invokevirtual #110                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      90: invokevirtual #88                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #118                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      96: athrow

  public int getUnescapedUnicodeColumnCount();
    Code:
       0: aload_0
       1: getfield      #34                 // Field numUnicodeEscapesFoundOnCurrentLine:I
       4: ireturn

  public int getUnescapedUnicodeOffsetCount();
    Code:
       0: aload_0
       1: getfield      #32                 // Field numUnicodeEscapesFound:I
       4: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #36                 // Field reader:Ljava/io/Reader;
       4: invokevirtual #123                // Method java/io/Reader.close:()V
       7: return
}
