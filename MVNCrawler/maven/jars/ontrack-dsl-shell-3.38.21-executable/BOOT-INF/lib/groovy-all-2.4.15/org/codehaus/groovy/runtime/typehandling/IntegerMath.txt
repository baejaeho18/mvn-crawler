Compiled from "IntegerMath.java"
public final class org.codehaus.groovy.runtime.typehandling.IntegerMath extends org.codehaus.groovy.runtime.typehandling.NumberMath {
  public static final org.codehaus.groovy.runtime.typehandling.IntegerMath INSTANCE;

  private org.codehaus.groovy.runtime.typehandling.IntegerMath();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/codehaus/groovy/runtime/typehandling/NumberMath."<init>":()V
       4: return

  protected java.lang.Number absImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: invokestatic  #26                 // Method java/lang/Math.abs:(I)I
       7: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: areturn

  public java.lang.Number addImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: iadd
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  public java.lang.Number subtractImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: isub
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  public java.lang.Number multiplyImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: imul
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  public java.lang.Number divideImpl(java.lang.Number, java.lang.Number);
    Code:
       0: getstatic     #46                 // Field org/codehaus/groovy/runtime/typehandling/BigDecimalMath.INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/BigDecimalMath;
       3: aload_1
       4: aload_2
       5: invokevirtual #48                 // Method org/codehaus/groovy/runtime/typehandling/BigDecimalMath.divideImpl:(Ljava/lang/Number;Ljava/lang/Number;)Ljava/lang/Number;
       8: areturn

  public int compareToImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: istore_3
       5: aload_2
       6: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       9: istore        4
      11: iload_3
      12: iload         4
      14: if_icmpge     21
      17: iconst_m1
      18: goto          32
      21: iload_3
      22: iload         4
      24: if_icmpne     31
      27: iconst_0
      28: goto          32
      31: iconst_1
      32: ireturn

  protected java.lang.Number orImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: ior
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number andImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: iand
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number xorImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: ixor
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number intdivImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: idiv
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number modImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: irem
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number unaryMinusImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: ineg
       5: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: areturn

  protected java.lang.Number unaryPlusImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: areturn

  protected java.lang.Number bitwiseNegateImpl(java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: iconst_m1
       5: ixor
       6: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: areturn

  protected java.lang.Number leftShiftImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: ishl
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number rightShiftImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: ishr
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  protected java.lang.Number rightShiftUnsignedImpl(java.lang.Number, java.lang.Number);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       4: aload_2
       5: invokevirtual #20                 // Method java/lang/Number.intValue:()I
       8: iushr
       9: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: areturn

  static {};
    Code:
       0: new           #2                  // class org/codehaus/groovy/runtime/typehandling/IntegerMath
       3: dup
       4: invokespecial #66                 // Method "<init>":()V
       7: putstatic     #68                 // Field INSTANCE:Lorg/codehaus/groovy/runtime/typehandling/IntegerMath;
      10: return
}
