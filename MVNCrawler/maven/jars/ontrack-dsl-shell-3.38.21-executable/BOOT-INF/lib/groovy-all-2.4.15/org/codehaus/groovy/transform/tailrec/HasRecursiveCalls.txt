Compiled from "HasRecursiveCalls.groovy"
public class org.codehaus.groovy.transform.tailrec.HasRecursiveCalls extends org.codehaus.groovy.ast.CodeVisitorSupport implements groovy.lang.GroovyObject {
  private org.codehaus.groovy.ast.MethodNode method;

  private boolean hasRecursiveCalls;

  private static org.codehaus.groovy.reflection.ClassInfo $staticClassInfo;

  public static transient boolean __$stMC;

  private transient groovy.lang.MetaClass metaClass;

  private static org.codehaus.groovy.reflection.ClassInfo $staticClassInfo$;

  public org.codehaus.groovy.transform.tailrec.HasRecursiveCalls();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/codehaus/groovy/ast/CodeVisitorSupport."<init>":()V
       4: iconst_0
       5: istore_1
       6: iload_1
       7: aload_0
       8: swap
       9: putfield      #23                 // Field hasRecursiveCalls:Z
      12: iload_1
      13: pop
      14: aload_0
      15: invokevirtual #27                 // Method $getStaticMetaClass:()Lgroovy/lang/MetaClass;
      18: astore_2
      19: aload_2
      20: aload_0
      21: swap
      22: putfield      #29                 // Field metaClass:Lgroovy/lang/MetaClass;
      25: aload_2
      26: pop
      27: return

  public void visitMethodCallExpression(org.codehaus.groovy.ast.expr.MethodCallExpression);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method isRecursive:(Ljava/lang/Object;)Z
       5: ifeq          21
       8: iconst_1
       9: istore_2
      10: iload_2
      11: aload_0
      12: swap
      13: putfield      #23                 // Field hasRecursiveCalls:Z
      16: iload_2
      17: pop
      18: goto          28
      21: aload_0
      22: aload_1
      23: invokespecial #39                 // Method org/codehaus/groovy/ast/CodeVisitorSupport.visitMethodCallExpression:(Lorg/codehaus/groovy/ast/expr/MethodCallExpression;)V
      26: aconst_null
      27: pop
      28: return

  public void visitStaticMethodCallExpression(org.codehaus.groovy.ast.expr.StaticMethodCallExpression);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method isRecursive:(Ljava/lang/Object;)Z
       5: ifeq          21
       8: iconst_1
       9: istore_2
      10: iload_2
      11: aload_0
      12: swap
      13: putfield      #23                 // Field hasRecursiveCalls:Z
      16: iload_2
      17: pop
      18: goto          28
      21: aload_0
      22: aload_1
      23: invokespecial #45                 // Method org/codehaus/groovy/ast/CodeVisitorSupport.visitStaticMethodCallExpression:(Lorg/codehaus/groovy/ast/expr/StaticMethodCallExpression;)V
      26: aconst_null
      27: pop
      28: return

  private boolean isRecursive(java.lang.Object);
    Code:
       0: new           #48                 // class org/codehaus/groovy/transform/tailrec/RecursivenessTester
       3: dup
       4: invokespecial #49                 // Method org/codehaus/groovy/transform/tailrec/RecursivenessTester."<init>":()V
       7: iconst_4
       8: anewarray     #51                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: ldc           #52                 // String method
      15: aastore
      16: dup
      17: iconst_1
      18: aload_0
      19: getfield      #54                 // Field method:Lorg/codehaus/groovy/ast/MethodNode;
      22: aastore
      23: dup
      24: iconst_2
      25: ldc           #55                 // String call
      27: aastore
      28: dup
      29: iconst_3
      30: aload_1
      31: aastore
      32: invokestatic  #61                 // Method org/codehaus/groovy/runtime/ScriptBytecodeAdapter.createMap:([Ljava/lang/Object;)Ljava/util/Map;
      35: invokevirtual #62                 // Method org/codehaus/groovy/transform/tailrec/RecursivenessTester.isRecursive:(Ljava/lang/Object;)Z
      38: ireturn
      39: ldc           #63                 // int 0
      41: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: invokestatic  #74                 // Method org/codehaus/groovy/runtime/typehandling/DefaultTypeTransformation.booleanUnbox:(Ljava/lang/Object;)Z
      47: ireturn

  public synchronized boolean test(org.codehaus.groovy.ast.MethodNode);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: swap
       5: putfield      #23                 // Field hasRecursiveCalls:Z
       8: iload_2
       9: pop
      10: aload_1
      11: astore_3
      12: aload_3
      13: aload_0
      14: swap
      15: putfield      #54                 // Field method:Lorg/codehaus/groovy/ast/MethodNode;
      18: aload_3
      19: pop
      20: aload_0
      21: getfield      #54                 // Field method:Lorg/codehaus/groovy/ast/MethodNode;
      24: invokevirtual #83                 // Method org/codehaus/groovy/ast/MethodNode.getCode:()Lorg/codehaus/groovy/ast/stmt/Statement;
      27: checkcast     #85                 // class org/codehaus/groovy/ast/stmt/Statement
      30: aload_0
      31: invokevirtual #89                 // Method org/codehaus/groovy/ast/stmt/Statement.visit:(Lorg/codehaus/groovy/ast/GroovyCodeVisitor;)V
      34: aconst_null
      35: pop
      36: aload_0
      37: getfield      #23                 // Field hasRecursiveCalls:Z
      40: ireturn
      41: ldc           #63                 // int 0
      43: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokestatic  #74                 // Method org/codehaus/groovy/runtime/typehandling/DefaultTypeTransformation.booleanUnbox:(Ljava/lang/Object;)Z
      49: ireturn

  protected groovy.lang.MetaClass $getStaticMetaClass();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #2                  // class org/codehaus/groovy/transform/tailrec/HasRecursiveCalls
       6: if_acmpeq     14
       9: aload_0
      10: invokestatic  #97                 // Method org/codehaus/groovy/runtime/ScriptBytecodeAdapter.initMetaClass:(Ljava/lang/Object;)Lgroovy/lang/MetaClass;
      13: areturn
      14: getstatic     #99                 // Field $staticClassInfo:Lorg/codehaus/groovy/reflection/ClassInfo;
      17: astore_1
      18: aload_1
      19: ifnonnull     34
      22: aload_0
      23: invokevirtual #93                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokestatic  #105                // Method org/codehaus/groovy/reflection/ClassInfo.getClassInfo:(Ljava/lang/Class;)Lorg/codehaus/groovy/reflection/ClassInfo;
      29: dup
      30: astore_1
      31: putstatic     #99                 // Field $staticClassInfo:Lorg/codehaus/groovy/reflection/ClassInfo;
      34: aload_1
      35: invokevirtual #108                // Method org/codehaus/groovy/reflection/ClassInfo.getMetaClass:()Lgroovy/lang/MetaClass;
      38: areturn

  public groovy.lang.MetaClass getMetaClass();
    Code:
       0: aload_0
       1: getfield      #29                 // Field metaClass:Lgroovy/lang/MetaClass;
       4: dup
       5: ifnull        9
       8: areturn
       9: pop
      10: aload_0
      11: dup
      12: invokevirtual #27                 // Method $getStaticMetaClass:()Lgroovy/lang/MetaClass;
      15: putfield      #29                 // Field metaClass:Lgroovy/lang/MetaClass;
      18: aload_0
      19: getfield      #29                 // Field metaClass:Lgroovy/lang/MetaClass;
      22: areturn

  public void setMetaClass(groovy.lang.MetaClass);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field metaClass:Lgroovy/lang/MetaClass;
       5: return

  public java.lang.Object invokeMethod(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method getMetaClass:()Lgroovy/lang/MetaClass;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #118,  4          // InterfaceMethod groovy/lang/MetaClass.invokeMethod:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public java.lang.Object getProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method getMetaClass:()Lgroovy/lang/MetaClass;
       4: aload_0
       5: aload_1
       6: invokeinterface #123,  3          // InterfaceMethod groovy/lang/MetaClass.getProperty:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: areturn

  public void setProperty(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method getMetaClass:()Lgroovy/lang/MetaClass;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokeinterface #128,  4          // InterfaceMethod groovy/lang/MetaClass.setProperty:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      12: return

  public org.codehaus.groovy.ast.MethodNode getMethod();
    Code:
       0: aload_0
       1: getfield      #54                 // Field method:Lorg/codehaus/groovy/ast/MethodNode;
       4: areturn

  public void setMethod(org.codehaus.groovy.ast.MethodNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field method:Lorg/codehaus/groovy/ast/MethodNode;
       5: return

  public boolean getHasRecursiveCalls();
    Code:
       0: aload_0
       1: getfield      #23                 // Field hasRecursiveCalls:Z
       4: ireturn

  public boolean isHasRecursiveCalls();
    Code:
       0: aload_0
       1: getfield      #23                 // Field hasRecursiveCalls:Z
       4: ireturn

  public void setHasRecursiveCalls(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field hasRecursiveCalls:Z
       5: return
}
