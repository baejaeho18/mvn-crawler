Compiled from "AntProjectPropertiesDelegate.java"
public class org.codehaus.groovy.ant.AntProjectPropertiesDelegate extends java.util.Hashtable {
  private org.apache.tools.ant.Project project;

  public org.codehaus.groovy.ant.AntProjectPropertiesDelegate(org.apache.tools.ant.Project);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/util/Hashtable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       9: return

  public synchronized int hashCode();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #31                 // Method java/util/Hashtable.hashCode:()I
      10: ireturn

  public synchronized int size();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #34                 // Method java/util/Hashtable.size:()I
      10: ireturn

  public synchronized void clear();
    Code:
       0: new           #37                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #39                 // String Impossible to clear the project properties.
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #46                 // Method java/util/Hashtable.isEmpty:()Z
      10: ireturn

  public synchronized java.lang.Object clone();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #50                 // Method java/util/Hashtable.clone:()Ljava/lang/Object;
      10: areturn

  public synchronized boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: aload_1
       8: invokevirtual #54                 // Method java/util/Hashtable.contains:(Ljava/lang/Object;)Z
      11: ireturn

  public synchronized boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: aload_1
       8: invokevirtual #59                 // Method java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
      11: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: aload_1
       8: invokevirtual #63                 // Method java/util/Hashtable.containsValue:(Ljava/lang/Object;)Z
      11: ireturn

  public synchronized boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: aload_1
       8: invokevirtual #66                 // Method java/util/Hashtable.equals:(Ljava/lang/Object;)Z
      11: ireturn

  public synchronized java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #71                 // Method java/util/Hashtable.toString:()Ljava/lang/String;
      10: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #75                 // Method java/util/Hashtable.values:()Ljava/util/Collection;
      10: areturn

  public synchronized java.util.Enumeration elements();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #79                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
      10: areturn

  public synchronized java.util.Enumeration keys();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #82                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      10: areturn

  public org.codehaus.groovy.ant.AntProjectPropertiesDelegate(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #85                 // Method java/util/Hashtable."<init>":(Ljava/util/Map;)V
       5: return

  public synchronized void putAll(java.util.Map);
    Code:
       0: aload_1
       1: invokeinterface #92,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #98,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          56
      21: aload_2
      22: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore_3
      28: aload_3
      29: checkcast     #7                  // class java/util/Map$Entry
      32: astore        4
      34: aload_0
      35: aload         4
      37: invokeinterface #109,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: aload         4
      44: invokeinterface #112,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      49: invokevirtual #116                // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: goto          12
      56: return

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #120                // Method java/util/Hashtable.entrySet:()Ljava/util/Set;
      10: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: invokevirtual #123                // Method java/util/Hashtable.keySet:()Ljava/util/Set;
      10: areturn

  public synchronized java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
       4: invokevirtual #29                 // Method org/apache/tools/ant/Project.getProperties:()Ljava/util/Hashtable;
       7: aload_1
       8: invokevirtual #127                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public synchronized java.lang.Object remove(java.lang.Object);
    Code:
       0: new           #37                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #130                // String Impossible to remove a property from the project properties.
       6: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public synchronized java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: aload_1
       4: invokevirtual #131                // Method containsKey:(Ljava/lang/Object;)Z
       7: ifeq          16
      10: aload_0
      11: aload_1
      12: invokevirtual #132                // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_3
      16: aload_0
      17: getfield      #19                 // Field project:Lorg/apache/tools/ant/Project;
      20: aload_1
      21: invokevirtual #135                // Method java/lang/Object.toString:()Ljava/lang/String;
      24: aload_2
      25: invokevirtual #135                // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokevirtual #139                // Method org/apache/tools/ant/Project.setProperty:(Ljava/lang/String;Ljava/lang/String;)V
      31: aload_3
      32: areturn
}
