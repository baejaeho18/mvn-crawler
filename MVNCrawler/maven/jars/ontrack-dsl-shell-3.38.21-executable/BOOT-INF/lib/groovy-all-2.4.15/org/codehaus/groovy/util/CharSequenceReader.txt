Compiled from "CharSequenceReader.java"
public class org.codehaus.groovy.util.CharSequenceReader extends java.io.Reader implements java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.CharSequence charSequence;

  private int idx;

  private int mark;

  private static final int EOF;

  public org.codehaus.groovy.util.CharSequenceReader(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/io/Reader."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          15
      13: ldc           #27                 // String
      15: putfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
      18: return

  public void close();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #34                 // Field idx:I
       5: aload_0
       6: iconst_0
       7: putfield      #36                 // Field mark:I
      10: return

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #34                 // Field idx:I
       5: putfield      #36                 // Field mark:I
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int read();
    Code:
       0: aload_0
       1: getfield      #34                 // Field idx:I
       4: aload_0
       5: getfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
       8: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      13: if_icmplt     18
      16: iconst_m1
      17: ireturn
      18: aload_0
      19: getfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
      22: aload_0
      23: dup
      24: getfield      #34                 // Field idx:I
      27: dup_x1
      28: iconst_1
      29: iadd
      30: putfield      #34                 // Field idx:I
      33: invokeinterface #49,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      38: ireturn

  public int read(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field idx:I
       4: aload_0
       5: getfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
       8: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      13: if_icmplt     18
      16: iconst_m1
      17: ireturn
      18: aload_1
      19: ifnonnull     32
      22: new           #52                 // class java/lang/NullPointerException
      25: dup
      26: ldc           #54                 // String Character array is missing
      28: invokespecial #57                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_3
      33: iflt          48
      36: iload_2
      37: iflt          48
      40: iload_2
      41: iload_3
      42: iadd
      43: aload_1
      44: arraylength
      45: if_icmple     94
      48: new           #59                 // class java/lang/IndexOutOfBoundsException
      51: dup
      52: new           #61                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #64                 // String Array Size=
      61: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: arraylength
      66: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc           #73                 // String , offset=
      71: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload_2
      75: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #75                 // String , length=
      80: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: iload_3
      84: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #80                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: iconst_0
      95: istore        4
      97: iconst_0
      98: istore        5
     100: iload         5
     102: iload_3
     103: if_icmpge     139
     106: aload_0
     107: invokevirtual #82                 // Method read:()I
     110: istore        6
     112: iload         6
     114: iconst_m1
     115: if_icmpne     121
     118: iload         4
     120: ireturn
     121: aload_1
     122: iload_2
     123: iload         5
     125: iadd
     126: iload         6
     128: i2c
     129: castore
     130: iinc          4, 1
     133: iinc          5, 1
     136: goto          100
     139: iload         4
     141: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #36                 // Field mark:I
       5: putfield      #34                 // Field idx:I
       8: return

  public long skip(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #93                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #61                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #62                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #95                 // String Number of characters to skip is less than zero:
      19: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #98                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #99                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #34                 // Field idx:I
      37: aload_0
      38: getfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
      41: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      46: if_icmplt     53
      49: ldc2_w        #100                // long -1l
      52: lreturn
      53: aload_0
      54: getfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
      57: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      62: i2l
      63: aload_0
      64: getfield      #34                 // Field idx:I
      67: i2l
      68: lload_1
      69: ladd
      70: invokestatic  #107                // Method java/lang/Math.min:(JJ)J
      73: l2i
      74: istore_3
      75: iload_3
      76: aload_0
      77: getfield      #34                 // Field idx:I
      80: isub
      81: istore        4
      83: aload_0
      84: iload_3
      85: putfield      #34                 // Field idx:I
      88: iload         4
      90: i2l
      91: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #29                 // Field charSequence:Ljava/lang/CharSequence;
       4: invokeinterface #110,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
       9: areturn
}
