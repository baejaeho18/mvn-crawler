Compiled from "ReferenceManager.java"
class org.codehaus.groovy.util.ReferenceManager$CallBackedManager extends org.codehaus.groovy.util.ReferenceManager {
  private static final java.util.concurrent.ConcurrentHashMap<java.lang.ref.ReferenceQueue, org.codehaus.groovy.util.ReferenceManager> queuesInProcess;

  public org.codehaus.groovy.util.ReferenceManager$CallBackedManager(java.lang.ref.ReferenceQueue);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/codehaus/groovy/util/ReferenceManager."<init>":(Ljava/lang/ref/ReferenceQueue;)V
       5: return

  public void removeStallEntries();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getReferenceQueue:()Ljava/lang/ref/ReferenceQueue;
       4: astore_1
       5: getstatic     #25                 // Field queuesInProcess:Ljava/util/concurrent/ConcurrentHashMap;
       8: aload_1
       9: aload_0
      10: invokevirtual #31                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: ifnonnull     42
      16: aload_1
      17: invokestatic  #34                 // Method removeStallEntries0:(Ljava/lang/ref/ReferenceQueue;)V
      20: getstatic     #25                 // Field queuesInProcess:Ljava/util/concurrent/ConcurrentHashMap;
      23: aload_1
      24: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: goto          42
      31: astore_2
      32: getstatic     #25                 // Field queuesInProcess:Ljava/util/concurrent/ConcurrentHashMap;
      35: aload_1
      36: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: athrow
      42: return
    Exception table:
       from    to  target type
          16    20    31   any

  private static void removeStallEntries0(java.lang.ref.ReferenceQueue);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       4: astore_1
       5: aload_1
       6: ifnonnull     12
       9: goto          50
      12: aload_1
      13: instanceof    #50                 // class org/codehaus/groovy/util/Reference
      16: ifeq          41
      19: aload_1
      20: checkcast     #50                 // class org/codehaus/groovy/util/Reference
      23: astore_2
      24: aload_2
      25: invokeinterface #54,  1           // InterfaceMethod org/codehaus/groovy/util/Reference.getHandler:()Lorg/codehaus/groovy/util/Finalizable;
      30: astore_3
      31: aload_3
      32: ifnull        41
      35: aload_3
      36: invokeinterface #59,  1           // InterfaceMethod org/codehaus/groovy/util/Finalizable.finalizeReference:()V
      41: aload_1
      42: invokevirtual #62                 // Method java/lang/ref/Reference.clear:()V
      45: aconst_null
      46: astore_1
      47: goto          0
      50: return

  public void afterReferenceCreation(org.codehaus.groovy.util.Reference);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method removeStallEntries:()V
       4: return

  public java.lang.String toString();
    Code:
       0: ldc           #76                 // String ReferenceManager(callback)
       2: areturn

  static {};
    Code:
       0: new           #27                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: iconst_4
       5: ldc           #78                 // float 0.9f
       7: iconst_2
       8: invokespecial #81                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      11: putstatic     #25                 // Field queuesInProcess:Ljava/util/concurrent/ConcurrentHashMap;
      14: return
}
