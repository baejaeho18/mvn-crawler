Compiled from "ManagedConcurrentValueMap.java"
public class org.codehaus.groovy.util.ManagedConcurrentValueMap<K, V> {
  private final java.util.concurrent.ConcurrentHashMap<K, org.codehaus.groovy.util.ManagedReference<V>> internalMap;

  private org.codehaus.groovy.util.ReferenceBundle bundle;

  public org.codehaus.groovy.util.ManagedConcurrentValueMap(org.codehaus.groovy.util.ReferenceBundle);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #20                 // Field bundle:Lorg/codehaus/groovy/util/ReferenceBundle;
       9: aload_0
      10: new           #22                 // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #23                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #25                 // Field internalMap:Ljava/util/concurrent/ConcurrentHashMap;
      20: return

  public void setBundle(org.codehaus.groovy.util.ReferenceBundle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field bundle:Lorg/codehaus/groovy/util/ReferenceBundle;
       5: return

  public V get(K);
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #33                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #35                 // class org/codehaus/groovy/util/ManagedReference
      11: astore_2
      12: aload_2
      13: ifnull        21
      16: aload_2
      17: invokevirtual #38                 // Method org/codehaus/groovy/util/ManagedReference.get:()Ljava/lang/Object;
      20: areturn
      21: aconst_null
      22: areturn

  public void put(K, V);
    Code:
       0: new           #8                  // class org/codehaus/groovy/util/ManagedConcurrentValueMap$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #20                 // Field bundle:Lorg/codehaus/groovy/util/ReferenceBundle;
       9: aload_2
      10: aload_1
      11: invokespecial #49                 // Method org/codehaus/groovy/util/ManagedConcurrentValueMap$1."<init>":(Lorg/codehaus/groovy/util/ManagedConcurrentValueMap;Lorg/codehaus/groovy/util/ReferenceBundle;Ljava/lang/Object;Ljava/lang/Object;)V
      14: astore_3
      15: aload_0
      16: getfield      #25                 // Field internalMap:Ljava/util/concurrent/ConcurrentHashMap;
      19: aload_1
      20: aload_3
      21: invokevirtual #52                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: return

  static java.util.concurrent.ConcurrentHashMap access$000(org.codehaus.groovy.util.ManagedConcurrentValueMap);
    Code:
       0: aload_0
       1: getfield      #25                 // Field internalMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn
}
