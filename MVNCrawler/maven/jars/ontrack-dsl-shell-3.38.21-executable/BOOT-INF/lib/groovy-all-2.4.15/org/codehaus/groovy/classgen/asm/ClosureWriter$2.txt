Compiled from "ClosureWriter.java"
final class org.codehaus.groovy.classgen.asm.ClosureWriter$2 extends org.codehaus.groovy.ast.CodeVisitorSupport {
  final org.codehaus.groovy.ast.InnerClassNode val$closureClass;

  org.codehaus.groovy.classgen.asm.ClosureWriter$2(org.codehaus.groovy.ast.InnerClassNode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field val$closureClass:Lorg/codehaus/groovy/ast/InnerClassNode;
       5: aload_0
       6: invokespecial #19                 // Method org/codehaus/groovy/ast/CodeVisitorSupport."<init>":()V
       9: return

  public void visitVariableExpression(org.codehaus.groovy.ast.expr.VariableExpression);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method org/codehaus/groovy/ast/expr/VariableExpression.getAccessedVariable:()Lorg/codehaus/groovy/ast/Variable;
       4: astore_2
       5: aload_2
       6: ifnonnull     10
       9: return
      10: aload_2
      11: instanceof    #33                 // class org/codehaus/groovy/ast/FieldNode
      14: ifne          18
      17: return
      18: aload_1
      19: invokevirtual #37                 // Method org/codehaus/groovy/ast/expr/VariableExpression.getName:()Ljava/lang/String;
      22: astore_3
      23: aload_0
      24: getfield      #16                 // Field val$closureClass:Lorg/codehaus/groovy/ast/InnerClassNode;
      27: aload_3
      28: invokevirtual #43                 // Method org/codehaus/groovy/ast/InnerClassNode.getDeclaredField:(Ljava/lang/String;)Lorg/codehaus/groovy/ast/FieldNode;
      31: astore        4
      33: aload         4
      35: ifnull        44
      38: aload_1
      39: aload         4
      41: invokevirtual #47                 // Method org/codehaus/groovy/ast/expr/VariableExpression.setAccessedVariable:(Lorg/codehaus/groovy/ast/Variable;)V
      44: return
}
