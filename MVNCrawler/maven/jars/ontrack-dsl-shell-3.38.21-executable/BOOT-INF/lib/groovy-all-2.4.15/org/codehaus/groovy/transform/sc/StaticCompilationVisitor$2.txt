Compiled from "StaticCompilationVisitor.java"
class org.codehaus.groovy.transform.sc.StaticCompilationVisitor$2 extends org.codehaus.groovy.ast.ClassCodeVisitorSupport {
  final org.codehaus.groovy.ast.ClassCodeVisitorSupport val$visitor;

  final org.codehaus.groovy.ast.expr.PropertyExpression val$pexp;

  final groovy.lang.Reference val$rType;

  final org.codehaus.groovy.transform.sc.StaticCompilationVisitor this$0;

  org.codehaus.groovy.transform.sc.StaticCompilationVisitor$2(org.codehaus.groovy.transform.sc.StaticCompilationVisitor, org.codehaus.groovy.ast.ClassCodeVisitorSupport, org.codehaus.groovy.ast.expr.PropertyExpression, groovy.lang.Reference);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field this$0:Lorg/codehaus/groovy/transform/sc/StaticCompilationVisitor;
       5: aload_0
       6: aload_2
       7: putfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
      10: aload_0
      11: aload_3
      12: putfield      #26                 // Field val$pexp:Lorg/codehaus/groovy/ast/expr/PropertyExpression;
      15: aload_0
      16: aload         4
      18: putfield      #28                 // Field val$rType:Lgroovy/lang/Reference;
      21: aload_0
      22: invokespecial #31                 // Method org/codehaus/groovy/ast/ClassCodeVisitorSupport."<init>":()V
      25: return

  protected org.codehaus.groovy.control.SourceUnit getSourceUnit();
    Code:
       0: aconst_null
       1: areturn

  public void visitField(org.codehaus.groovy.ast.FieldNode);
    Code:
       0: aload_0
       1: getfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
       4: ifnull        15
       7: aload_0
       8: getfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
      11: aload_1
      12: invokevirtual #39                 // Method org/codehaus/groovy/ast/ClassCodeVisitorSupport.visitField:(Lorg/codehaus/groovy/ast/FieldNode;)V
      15: aload_1
      16: invokevirtual #45                 // Method org/codehaus/groovy/ast/FieldNode.getDeclaringClass:()Lorg/codehaus/groovy/ast/ClassNode;
      19: astore_2
      20: aload_2
      21: ifnull        68
      24: aload_2
      25: getstatic     #51                 // Field org/codehaus/groovy/ast/ClassHelper.LIST_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
      28: invokestatic  #57                 // Method org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.implementsInterfaceOrIsSubclassOf:(Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/ClassNode;)Z
      31: ifeq          60
      34: aload_2
      35: aload_1
      36: invokevirtual #61                 // Method org/codehaus/groovy/ast/FieldNode.getName:()Ljava/lang/String;
      39: invokevirtual #67                 // Method org/codehaus/groovy/ast/ClassNode.getDeclaredField:(Ljava/lang/String;)Lorg/codehaus/groovy/ast/FieldNode;
      42: aload_1
      43: if_acmpeq     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: istore_3
      52: aload_0
      53: getfield      #26                 // Field val$pexp:Lorg/codehaus/groovy/ast/expr/PropertyExpression;
      56: iload_3
      57: invokevirtual #73                 // Method org/codehaus/groovy/ast/expr/PropertyExpression.setSpreadSafe:(Z)V
      60: aload_0
      61: getfield      #28                 // Field val$rType:Lgroovy/lang/Reference;
      64: aload_2
      65: invokevirtual #79                 // Method groovy/lang/Reference.set:(Ljava/lang/Object;)V
      68: return

  public void visitMethod(org.codehaus.groovy.ast.MethodNode);
    Code:
       0: aload_0
       1: getfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
       4: ifnull        15
       7: aload_0
       8: getfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
      11: aload_1
      12: invokevirtual #88                 // Method org/codehaus/groovy/ast/ClassCodeVisitorSupport.visitMethod:(Lorg/codehaus/groovy/ast/MethodNode;)V
      15: aload_1
      16: invokevirtual #91                 // Method org/codehaus/groovy/ast/MethodNode.getDeclaringClass:()Lorg/codehaus/groovy/ast/ClassNode;
      19: astore_2
      20: aload_2
      21: ifnull        108
      24: aload_2
      25: getstatic     #51                 // Field org/codehaus/groovy/ast/ClassHelper.LIST_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
      28: invokestatic  #57                 // Method org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.implementsInterfaceOrIsSubclassOf:(Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/ClassNode;)Z
      31: ifeq          100
      34: aload_2
      35: aload_1
      36: invokevirtual #92                 // Method org/codehaus/groovy/ast/MethodNode.getName:()Ljava/lang/String;
      39: invokevirtual #96                 // Method org/codehaus/groovy/ast/ClassNode.getDeclaredMethods:(Ljava/lang/String;)Ljava/util/List;
      42: astore_3
      43: iconst_1
      44: istore        4
      46: aload_3
      47: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore        5
      54: aload         5
      56: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          91
      64: aload         5
      66: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #90                 // class org/codehaus/groovy/ast/MethodNode
      74: astore        6
      76: aload_1
      77: aload         6
      79: if_acmpne     88
      82: iconst_0
      83: istore        4
      85: goto          91
      88: goto          54
      91: aload_0
      92: getfield      #26                 // Field val$pexp:Lorg/codehaus/groovy/ast/expr/PropertyExpression;
      95: iload         4
      97: invokevirtual #73                 // Method org/codehaus/groovy/ast/expr/PropertyExpression.setSpreadSafe:(Z)V
     100: aload_0
     101: getfield      #28                 // Field val$rType:Lgroovy/lang/Reference;
     104: aload_2
     105: invokevirtual #79                 // Method groovy/lang/Reference.set:(Ljava/lang/Object;)V
     108: return

  public void visitProperty(org.codehaus.groovy.ast.PropertyNode);
    Code:
       0: aload_0
       1: getfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
       4: ifnull        15
       7: aload_0
       8: getfield      #24                 // Field val$visitor:Lorg/codehaus/groovy/ast/ClassCodeVisitorSupport;
      11: aload_1
      12: invokevirtual #121                // Method org/codehaus/groovy/ast/ClassCodeVisitorSupport.visitProperty:(Lorg/codehaus/groovy/ast/PropertyNode;)V
      15: aload_1
      16: invokevirtual #124                // Method org/codehaus/groovy/ast/PropertyNode.getDeclaringClass:()Lorg/codehaus/groovy/ast/ClassNode;
      19: astore_2
      20: aload_2
      21: ifnull        104
      24: aload_2
      25: getstatic     #51                 // Field org/codehaus/groovy/ast/ClassHelper.LIST_TYPE:Lorg/codehaus/groovy/ast/ClassNode;
      28: invokestatic  #57                 // Method org/codehaus/groovy/transform/stc/StaticTypeCheckingSupport.implementsInterfaceOrIsSubclassOf:(Lorg/codehaus/groovy/ast/ClassNode;Lorg/codehaus/groovy/ast/ClassNode;)Z
      31: ifeq          96
      34: aload_2
      35: invokevirtual #128                // Method org/codehaus/groovy/ast/ClassNode.getProperties:()Ljava/util/List;
      38: astore_3
      39: iconst_1
      40: istore        4
      42: aload_3
      43: invokeinterface #102,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore        5
      50: aload         5
      52: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          87
      60: aload         5
      62: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #123                // class org/codehaus/groovy/ast/PropertyNode
      70: astore        6
      72: aload         6
      74: aload_1
      75: if_acmpne     84
      78: iconst_0
      79: istore        4
      81: goto          87
      84: goto          50
      87: aload_0
      88: getfield      #26                 // Field val$pexp:Lorg/codehaus/groovy/ast/expr/PropertyExpression;
      91: iload         4
      93: invokevirtual #73                 // Method org/codehaus/groovy/ast/expr/PropertyExpression.setSpreadSafe:(Z)V
      96: aload_0
      97: getfield      #28                 // Field val$rType:Lgroovy/lang/Reference;
     100: aload_2
     101: invokevirtual #79                 // Method groovy/lang/Reference.set:(Ljava/lang/Object;)V
     104: return
}
