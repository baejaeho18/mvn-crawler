Compiled from "NotExpression.java"
public class org.codehaus.groovy.ast.expr.NotExpression extends org.codehaus.groovy.ast.expr.BooleanExpression {
  public org.codehaus.groovy.ast.expr.NotExpression(org.codehaus.groovy.ast.expr.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method org/codehaus/groovy/ast/expr/BooleanExpression."<init>":(Lorg/codehaus/groovy/ast/expr/Expression;)V
       5: return

  public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #21,  2           // InterfaceMethod org/codehaus/groovy/ast/GroovyCodeVisitor.visitNotExpression:(Lorg/codehaus/groovy/ast/expr/NotExpression;)V
       7: return

  public boolean isDynamic();
    Code:
       0: iconst_0
       1: ireturn

  public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer);
    Code:
       0: new           #2                  // class org/codehaus/groovy/ast/expr/NotExpression
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #31                 // Method getExpression:()Lorg/codehaus/groovy/ast/expr/Expression;
       9: invokeinterface #37,  2           // InterfaceMethod org/codehaus/groovy/ast/expr/ExpressionTransformer.transform:(Lorg/codehaus/groovy/ast/expr/Expression;)Lorg/codehaus/groovy/ast/expr/Expression;
      14: invokespecial #38                 // Method "<init>":(Lorg/codehaus/groovy/ast/expr/Expression;)V
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokevirtual #44                 // Method org/codehaus/groovy/ast/expr/Expression.setSourcePosition:(Lorg/codehaus/groovy/ast/ASTNode;)V
      23: aload_2
      24: aload_0
      25: invokevirtual #47                 // Method org/codehaus/groovy/ast/expr/Expression.copyNodeMetaData:(Lorg/codehaus/groovy/ast/ASTNode;)V
      28: aload_2
      29: areturn
}
