Compiled from "Option.java"
public class groovyjarjarcommonscli.Option implements java.lang.Cloneable,java.io.Serializable {
  private static final long serialVersionUID;

  public static final int UNINITIALIZED;

  public static final int UNLIMITED_VALUES;

  private java.lang.String opt;

  private java.lang.String longOpt;

  private java.lang.String argName;

  private java.lang.String description;

  private boolean required;

  private boolean optionalArg;

  private int numberOfArgs;

  private java.lang.Object type;

  private java.util.List values;

  private char valuesep;

  public groovyjarjarcommonscli.Option(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_0
       4: aload_2
       5: invokespecial #40                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
       8: return

  public groovyjarjarcommonscli.Option(java.lang.String, boolean, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: aload_3
       5: invokespecial #40                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V
       8: return

  public groovyjarjarcommonscli.Option(java.lang.String, java.lang.String, boolean, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #49                 // String arg
       7: putfield      #51                 // Field argName:Ljava/lang/String;
      10: aload_0
      11: iconst_m1
      12: putfield      #53                 // Field numberOfArgs:I
      15: aload_0
      16: new           #55                 // class java/util/ArrayList
      19: dup
      20: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #58                 // Field values:Ljava/util/List;
      26: aload_1
      27: invokestatic  #64                 // Method groovyjarjarcommonscli/OptionValidator.validateOption:(Ljava/lang/String;)V
      30: aload_0
      31: aload_1
      32: putfield      #66                 // Field opt:Ljava/lang/String;
      35: aload_0
      36: aload_2
      37: putfield      #68                 // Field longOpt:Ljava/lang/String;
      40: iload_3
      41: ifeq          49
      44: aload_0
      45: iconst_1
      46: putfield      #53                 // Field numberOfArgs:I
      49: aload_0
      50: aload         4
      52: putfield      #70                 // Field description:Ljava/lang/String;
      55: return

  public int getId();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getKey:()Ljava/lang/String;
       4: iconst_0
       5: invokevirtual #82                 // Method java/lang/String.charAt:(I)C
       8: ireturn

  java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #66                 // Field opt:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #68                 // Field longOpt:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #66                 // Field opt:Ljava/lang/String;
      16: areturn

  public java.lang.String getOpt();
    Code:
       0: aload_0
       1: getfield      #66                 // Field opt:Ljava/lang/String;
       4: areturn

  public java.lang.Object getType();
    Code:
       0: aload_0
       1: getfield      #87                 // Field type:Ljava/lang/Object;
       4: areturn

  public void setType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field type:Ljava/lang/Object;
       5: return

  public java.lang.String getLongOpt();
    Code:
       0: aload_0
       1: getfield      #68                 // Field longOpt:Ljava/lang/String;
       4: areturn

  public void setLongOpt(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field longOpt:Ljava/lang/String;
       5: return

  public void setOptionalArg(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #95                 // Field optionalArg:Z
       5: return

  public boolean hasOptionalArg();
    Code:
       0: aload_0
       1: getfield      #95                 // Field optionalArg:Z
       4: ireturn

  public boolean hasLongOpt();
    Code:
       0: aload_0
       1: getfield      #68                 // Field longOpt:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasArg();
    Code:
       0: aload_0
       1: getfield      #53                 // Field numberOfArgs:I
       4: ifgt          16
       7: aload_0
       8: getfield      #53                 // Field numberOfArgs:I
      11: bipush        -2
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #70                 // Field description:Ljava/lang/String;
       4: areturn

  public void setDescription(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field description:Ljava/lang/String;
       5: return

  public boolean isRequired();
    Code:
       0: aload_0
       1: getfield      #103                // Field required:Z
       4: ireturn

  public void setRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #103                // Field required:Z
       5: return

  public void setArgName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field argName:Ljava/lang/String;
       5: return

  public java.lang.String getArgName();
    Code:
       0: aload_0
       1: getfield      #51                 // Field argName:Ljava/lang/String;
       4: areturn

  public boolean hasArgName();
    Code:
       0: aload_0
       1: getfield      #51                 // Field argName:Ljava/lang/String;
       4: ifnull        21
       7: aload_0
       8: getfield      #51                 // Field argName:Ljava/lang/String;
      11: invokevirtual #110                // Method java/lang/String.length:()I
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasArgs();
    Code:
       0: aload_0
       1: getfield      #53                 // Field numberOfArgs:I
       4: iconst_1
       5: if_icmpgt     17
       8: aload_0
       9: getfield      #53                 // Field numberOfArgs:I
      12: bipush        -2
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void setArgs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field numberOfArgs:I
       5: return

  public void setValueSeparator(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #118                // Field valuesep:C
       5: return

  public char getValueSeparator();
    Code:
       0: aload_0
       1: getfield      #118                // Field valuesep:C
       4: ireturn

  public boolean hasValueSeparator();
    Code:
       0: aload_0
       1: getfield      #118                // Field valuesep:C
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int getArgs();
    Code:
       0: aload_0
       1: getfield      #53                 // Field numberOfArgs:I
       4: ireturn

  void addValueForProcessing(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #53                 // Field numberOfArgs:I
       4: lookupswitch  { // 1
                    -1: 24
               default: 34
          }
      24: new           #126                // class java/lang/RuntimeException
      27: dup
      28: ldc           #128                // String NO_ARGS_ALLOWED
      30: invokespecial #130                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: invokespecial #133                // Method processValue:(Ljava/lang/String;)V
      39: return

  private void processValue(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #136                // Method hasValueSeparator:()Z
       4: ifeq          71
       7: aload_0
       8: invokevirtual #138                // Method getValueSeparator:()C
      11: istore_2
      12: aload_1
      13: iload_2
      14: invokevirtual #142                // Method java/lang/String.indexOf:(I)I
      17: istore_3
      18: iload_3
      19: iconst_m1
      20: if_icmpeq     71
      23: aload_0
      24: getfield      #58                 // Field values:Ljava/util/List;
      27: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      32: aload_0
      33: getfield      #53                 // Field numberOfArgs:I
      36: iconst_1
      37: isub
      38: if_icmpne     44
      41: goto          71
      44: aload_0
      45: aload_1
      46: iconst_0
      47: iload_3
      48: invokevirtual #151                // Method java/lang/String.substring:(II)Ljava/lang/String;
      51: invokespecial #154                // Method add:(Ljava/lang/String;)V
      54: aload_1
      55: iload_3
      56: iconst_1
      57: iadd
      58: invokevirtual #157                // Method java/lang/String.substring:(I)Ljava/lang/String;
      61: astore_1
      62: aload_1
      63: iload_2
      64: invokevirtual #142                // Method java/lang/String.indexOf:(I)I
      67: istore_3
      68: goto          18
      71: aload_0
      72: aload_1
      73: invokespecial #154                // Method add:(Ljava/lang/String;)V
      76: return

  private void add(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #53                 // Field numberOfArgs:I
       4: ifle          35
       7: aload_0
       8: getfield      #58                 // Field values:Ljava/util/List;
      11: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      16: aload_0
      17: getfield      #53                 // Field numberOfArgs:I
      20: iconst_1
      21: isub
      22: if_icmple     35
      25: new           #126                // class java/lang/RuntimeException
      28: dup
      29: ldc           #160                // String Cannot add value, list full.
      31: invokespecial #130                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: getfield      #58                 // Field values:Ljava/util/List;
      39: aload_1
      40: invokeinterface #163,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: return

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: invokespecial #167                // Method hasNoValues:()Z
       4: ifeq          11
       7: aconst_null
       8: goto          24
      11: aload_0
      12: getfield      #58                 // Field values:Ljava/util/List;
      15: iconst_0
      16: invokeinterface #171,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #78                 // class java/lang/String
      24: areturn

  public java.lang.String getValue(int) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: invokespecial #167                // Method hasNoValues:()Z
       4: ifeq          11
       7: aconst_null
       8: goto          24
      11: aload_0
      12: getfield      #58                 // Field values:Ljava/util/List;
      15: iload_1
      16: invokeinterface #171,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: checkcast     #78                 // class java/lang/String
      24: areturn

  public java.lang.String getValue(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #176                // Method getValue:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        13
       9: aload_2
      10: goto          14
      13: aload_1
      14: areturn

  public java.lang.String[] getValues();
    Code:
       0: aload_0
       1: invokespecial #167                // Method hasNoValues:()Z
       4: ifeq          11
       7: aconst_null
       8: goto          38
      11: aload_0
      12: getfield      #58                 // Field values:Ljava/util/List;
      15: aload_0
      16: getfield      #58                 // Field values:Ljava/util/List;
      19: invokeinterface #147,  1          // InterfaceMethod java/util/List.size:()I
      24: anewarray     #78                 // class java/lang/String
      27: invokeinterface #183,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      32: checkcast     #185                // class "[Ljava/lang/String;"
      35: checkcast     #185                // class "[Ljava/lang/String;"
      38: areturn

  public java.util.List getValuesList();
    Code:
       0: aload_0
       1: getfield      #58                 // Field values:Ljava/util/List;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #190                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #191                // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #193                // String [ option:
       9: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: astore_1
      13: aload_1
      14: aload_0
      15: getfield      #66                 // Field opt:Ljava/lang/String;
      18: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      21: pop
      22: aload_0
      23: getfield      #68                 // Field longOpt:Ljava/lang/String;
      26: ifnull        43
      29: aload_1
      30: ldc           #199                // String
      32: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: aload_0
      36: getfield      #68                 // Field longOpt:Ljava/lang/String;
      39: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: pop
      43: aload_1
      44: ldc           #199                // String
      46: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: pop
      50: aload_0
      51: invokevirtual #201                // Method hasArgs:()Z
      54: ifeq          67
      57: aload_1
      58: ldc           #203                // String [ARG...]
      60: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: pop
      64: goto          81
      67: aload_0
      68: invokevirtual #205                // Method hasArg:()Z
      71: ifeq          81
      74: aload_1
      75: ldc           #207                // String  [ARG]
      77: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      80: pop
      81: aload_1
      82: ldc           #209                // String  ::
      84: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: aload_0
      88: getfield      #70                 // Field description:Ljava/lang/String;
      91: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: aload_0
      96: getfield      #87                 // Field type:Ljava/lang/Object;
      99: ifnull        116
     102: aload_1
     103: ldc           #209                // String  ::
     105: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     108: aload_0
     109: getfield      #87                 // Field type:Ljava/lang/Object;
     112: invokevirtual #212                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     115: pop
     116: aload_1
     117: ldc           #214                // String  ]
     119: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     122: pop
     123: aload_1
     124: invokevirtual #216                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     127: areturn

  private boolean hasNoValues();
    Code:
       0: aload_0
       1: getfield      #58                 // Field values:Ljava/util/List;
       4: invokeinterface #221,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #226                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #226                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class groovyjarjarcommonscli/Option
      28: astore_2
      29: aload_0
      30: getfield      #66                 // Field opt:Ljava/lang/String;
      33: ifnull        53
      36: aload_0
      37: getfield      #66                 // Field opt:Ljava/lang/String;
      40: aload_2
      41: getfield      #66                 // Field opt:Ljava/lang/String;
      44: invokevirtual #228                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifne          62
      50: goto          60
      53: aload_2
      54: getfield      #66                 // Field opt:Ljava/lang/String;
      57: ifnull        62
      60: iconst_0
      61: ireturn
      62: aload_0
      63: getfield      #68                 // Field longOpt:Ljava/lang/String;
      66: ifnull        86
      69: aload_0
      70: getfield      #68                 // Field longOpt:Ljava/lang/String;
      73: aload_2
      74: getfield      #68                 // Field longOpt:Ljava/lang/String;
      77: invokevirtual #228                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifne          95
      83: goto          93
      86: aload_2
      87: getfield      #68                 // Field longOpt:Ljava/lang/String;
      90: ifnull        95
      93: iconst_0
      94: ireturn
      95: iconst_1
      96: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #66                 // Field opt:Ljava/lang/String;
       4: ifnull        17
       7: aload_0
       8: getfield      #66                 // Field opt:Ljava/lang/String;
      11: invokevirtual #233                // Method java/lang/String.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: bipush        31
      21: iload_1
      22: imul
      23: aload_0
      24: getfield      #68                 // Field longOpt:Ljava/lang/String;
      27: ifnull        40
      30: aload_0
      31: getfield      #68                 // Field longOpt:Ljava/lang/String;
      34: invokevirtual #233                // Method java/lang/String.hashCode:()I
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_1
      43: iload_1
      44: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #239                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #2                  // class groovyjarjarcommonscli/Option
       7: astore_1
       8: aload_1
       9: new           #55                 // class java/util/ArrayList
      12: dup
      13: aload_0
      14: getfield      #58                 // Field values:Ljava/util/List;
      17: invokespecial #242                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      20: putfield      #58                 // Field values:Ljava/util/List;
      23: aload_1
      24: areturn
      25: astore_1
      26: new           #126                // class java/lang/RuntimeException
      29: dup
      30: new           #190                // class java/lang/StringBuffer
      33: dup
      34: invokespecial #191                // Method java/lang/StringBuffer."<init>":()V
      37: ldc           #244                // String A CloneNotSupportedException was thrown:
      39: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      42: aload_1
      43: invokevirtual #247                // Method java/lang/CloneNotSupportedException.getMessage:()Ljava/lang/String;
      46: invokevirtual #197                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      49: invokevirtual #216                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      52: invokespecial #130                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      55: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/lang/CloneNotSupportedException

  void clearValues();
    Code:
       0: aload_0
       1: getfield      #58                 // Field values:Ljava/util/List;
       4: invokeinterface #253,  1          // InterfaceMethod java/util/List.clear:()V
       9: return

  public boolean addValue(java.lang.String);
    Code:
       0: new           #257                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #259                // String The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead.
       7: invokespecial #260                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow
}
