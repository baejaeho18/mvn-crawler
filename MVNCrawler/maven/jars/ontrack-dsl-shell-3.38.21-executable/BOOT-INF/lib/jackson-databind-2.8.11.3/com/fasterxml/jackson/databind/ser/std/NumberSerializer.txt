Compiled from "NumberSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.NumberSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer<java.lang.Number> {
  public static final com.fasterxml.jackson.databind.ser.std.NumberSerializer instance;

  protected final boolean _isInt;

  public com.fasterxml.jackson.databind.ser.std.NumberSerializer(java.lang.Class<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method com/fasterxml/jackson/databind/ser/std/StdScalarSerializer."<init>":(Ljava/lang/Class;Z)V
       6: aload_0
       7: aload_1
       8: ldc_w         #2                  // class java/math/BigInteger
      11: if_acmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: putfield      #3                  // Field _isInt:Z
      22: return

  public void serialize(java.lang.Number, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_1
       1: instanceof    #4                  // class java/math/BigDecimal
       4: ifeq          18
       7: aload_2
       8: aload_1
       9: checkcast     #4                  // class java/math/BigDecimal
      12: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V
      15: goto          130
      18: aload_1
      19: instanceof    #2                  // class java/math/BigInteger
      22: ifeq          36
      25: aload_2
      26: aload_1
      27: checkcast     #2                  // class java/math/BigInteger
      30: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
      33: goto          130
      36: aload_1
      37: instanceof    #7                  // class java/lang/Long
      40: ifeq          54
      43: aload_2
      44: aload_1
      45: invokevirtual #8                  // Method java/lang/Number.longValue:()J
      48: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V
      51: goto          130
      54: aload_1
      55: instanceof    #10                 // class java/lang/Double
      58: ifeq          72
      61: aload_2
      62: aload_1
      63: invokevirtual #11                 // Method java/lang/Number.doubleValue:()D
      66: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V
      69: goto          130
      72: aload_1
      73: instanceof    #13                 // class java/lang/Float
      76: ifeq          90
      79: aload_2
      80: aload_1
      81: invokevirtual #14                 // Method java/lang/Number.floatValue:()F
      84: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V
      87: goto          130
      90: aload_1
      91: instanceof    #16                 // class java/lang/Integer
      94: ifne          111
      97: aload_1
      98: instanceof    #17                 // class java/lang/Byte
     101: ifne          111
     104: aload_1
     105: instanceof    #18                 // class java/lang/Short
     108: ifeq          122
     111: aload_2
     112: aload_1
     113: invokevirtual #19                 // Method java/lang/Number.intValue:()I
     116: invokevirtual #20                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V
     119: goto          130
     122: aload_2
     123: aload_1
     124: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
     127: invokevirtual #22                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V
     130: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field _isInt:Z
       5: ifeq          13
       8: ldc           #23                 // String integer
      10: goto          15
      13: ldc           #24                 // String number
      15: iconst_1
      16: invokevirtual #25                 // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
      19: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _isInt:Z
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: aload_2
      10: getstatic     #26                 // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
      13: invokevirtual #27                 // Method visitIntFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
      16: goto          51
      19: aload_0
      20: invokevirtual #28                 // Method handledType:()Ljava/lang/Class;
      23: astore_3
      24: aload_3
      25: ldc_w         #4                  // class java/math/BigDecimal
      28: if_acmpne     43
      31: aload_0
      32: aload_1
      33: aload_2
      34: getstatic     #29                 // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
      37: invokevirtual #30                 // Method visitFloatFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/JsonParser$NumberType;)V
      40: goto          51
      43: aload_1
      44: aload_2
      45: invokeinterface #31,  2           // InterfaceMethod com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.expectNumberFormat:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonNumberFormatVisitor;
      50: pop
      51: return

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #32                 // class java/lang/Number
       5: aload_2
       6: aload_3
       7: invokevirtual #33                 // Method serialize:(Ljava/lang/Number;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      10: return

  static {};
    Code:
       0: new           #34                 // class com/fasterxml/jackson/databind/ser/std/NumberSerializer
       3: dup
       4: ldc_w         #32                 // class java/lang/Number
       7: invokespecial #35                 // Method "<init>":(Ljava/lang/Class;)V
      10: putstatic     #36                 // Field instance:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer;
      13: return
}
