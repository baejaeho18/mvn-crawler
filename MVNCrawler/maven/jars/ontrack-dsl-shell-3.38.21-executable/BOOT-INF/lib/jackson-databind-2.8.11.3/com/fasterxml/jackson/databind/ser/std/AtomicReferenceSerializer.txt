Compiled from "AtomicReferenceSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer extends com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer<java.util.concurrent.atomic.AtomicReference<?>> {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer(com.fasterxml.jackson.databind.type.ReferenceType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method com/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer."<init>":(Lcom/fasterxml/jackson/databind/type/ReferenceType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;)V
       9: return

  protected com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.util.NameTransformer, com.fasterxml.jackson.annotation.JsonInclude$Include);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer."<init>":(Lcom/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V
      13: return

  protected com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer<?>, com.fasterxml.jackson.databind.util.NameTransformer, com.fasterxml.jackson.annotation.JsonInclude$Include);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _property:Lcom/fasterxml/jackson/databind/BeanProperty;
       4: aload_1
       5: if_acmpne     44
       8: aload         5
      10: aload_0
      11: getfield      #4                  // Field _contentInclusion:Lcom/fasterxml/jackson/annotation/JsonInclude$Include;
      14: if_acmpne     44
      17: aload_0
      18: getfield      #5                  // Field _valueTypeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
      21: aload_2
      22: if_acmpne     44
      25: aload_0
      26: getfield      #6                  // Field _valueSerializer:Lcom/fasterxml/jackson/databind/JsonSerializer;
      29: aload_3
      30: if_acmpne     44
      33: aload_0
      34: getfield      #7                  // Field _unwrapper:Lcom/fasterxml/jackson/databind/util/NameTransformer;
      37: aload         4
      39: if_acmpne     44
      42: aload_0
      43: areturn
      44: new           #8                  // class com/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer
      47: dup
      48: aload_0
      49: aload_1
      50: aload_2
      51: aload_3
      52: aload         4
      54: aload         5
      56: invokespecial #9                  // Method "<init>":(Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)V
      59: areturn

  protected boolean _isValueEmpty(java.util.concurrent.atomic.AtomicReference<?>);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference<?>);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: areturn

  protected java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference<?>);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       4: areturn

  protected java.lang.Object _getReferencedIfPresent(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #12                 // Method _getReferencedIfPresent:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;
       8: areturn

  protected java.lang.Object _getReferenced(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #13                 // Method _getReferenced:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/lang/Object;
       8: areturn

  protected boolean _isValueEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/util/concurrent/atomic/AtomicReference
       5: invokevirtual #14                 // Method _isValueEmpty:(Ljava/util/concurrent/atomic/AtomicReference;)Z
       8: ireturn

  protected com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.util.NameTransformer, com.fasterxml.jackson.annotation.JsonInclude$Include);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokevirtual #15                 // Method withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer;Lcom/fasterxml/jackson/databind/util/NameTransformer;Lcom/fasterxml/jackson/annotation/JsonInclude$Include;)Lcom/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer;
      11: areturn
}
