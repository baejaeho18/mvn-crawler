Compiled from "ServerProperties.java"
public class org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat {
  private final org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog accesslog;

  private java.lang.String internalProxies;

  private java.lang.String protocolHeader;

  private java.lang.String protocolHeaderHttpsValue;

  private java.lang.String portHeader;

  private java.lang.String remoteIpHeader;

  private java.io.File basedir;

  private int backgroundProcessorDelay;

  private int maxThreads;

  private int minSpareThreads;

  private int maxHttpPostSize;

  private int maxHttpHeaderSize;

  private java.lang.Boolean redirectContextRoot;

  private java.nio.charset.Charset uriEncoding;

  private int maxConnections;

  private int acceptCount;

  private java.util.List<java.lang.String> additionalTldSkipPatterns;

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog
       8: dup
       9: invokespecial #7                  // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog."<init>":()V
      12: putfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      15: aload_0
      16: ldc           #9                  // String 10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3}|169\\.254\\.\\d{1,3}\\.\\d{1,3}|127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|172\\.1[6-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.2[0-9]{1}\\.\\d{1,3}\\.\\d{1,3}|172\\.3[0-1]{1}\\.\\d{1,3}\\.\\d{1,3}|0:0:0:0:0:0:0:1|::1
      18: putfield      #10                 // Field internalProxies:Ljava/lang/String;
      21: aload_0
      22: ldc           #11                 // String https
      24: putfield      #12                 // Field protocolHeaderHttpsValue:Ljava/lang/String;
      27: aload_0
      28: ldc           #13                 // String X-Forwarded-Port
      30: putfield      #14                 // Field portHeader:Ljava/lang/String;
      33: aload_0
      34: bipush        10
      36: putfield      #15                 // Field backgroundProcessorDelay:I
      39: aload_0
      40: sipush        200
      43: putfield      #2                  // Field maxThreads:I
      46: aload_0
      47: bipush        10
      49: putfield      #1                  // Field minSpareThreads:I
      52: aload_0
      53: ldc           #16                 // int 2097152
      55: putfield      #17                 // Field maxHttpPostSize:I
      58: aload_0
      59: iconst_0
      60: putfield      #18                 // Field maxHttpHeaderSize:I
      63: aload_0
      64: iconst_1
      65: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      68: putfield      #20                 // Field redirectContextRoot:Ljava/lang/Boolean;
      71: aload_0
      72: ldc           #21                 // String UTF-8
      74: invokestatic  #22                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      77: putfield      #23                 // Field uriEncoding:Ljava/nio/charset/Charset;
      80: aload_0
      81: sipush        10000
      84: putfield      #3                  // Field maxConnections:I
      87: aload_0
      88: bipush        100
      90: putfield      #4                  // Field acceptCount:I
      93: aload_0
      94: new           #24                 // class java/util/ArrayList
      97: dup
      98: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
     101: putfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
     104: return

  public int getMaxThreads();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxThreads:I
       4: ireturn

  public void setMaxThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxThreads:I
       5: return

  public int getMinSpareThreads();
    Code:
       0: aload_0
       1: getfield      #1                  // Field minSpareThreads:I
       4: ireturn

  public void setMinSpareThreads(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field minSpareThreads:I
       5: return

  public int getMaxHttpPostSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maxHttpPostSize:I
       4: ireturn

  public void setMaxHttpPostSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field maxHttpPostSize:I
       5: return

  public org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog getAccesslog();
    Code:
       0: aload_0
       1: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
       4: areturn

  public int getBackgroundProcessorDelay();
    Code:
       0: aload_0
       1: getfield      #15                 // Field backgroundProcessorDelay:I
       4: ireturn

  public void setBackgroundProcessorDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field backgroundProcessorDelay:I
       5: return

  public java.io.File getBasedir();
    Code:
       0: aload_0
       1: getfield      #27                 // Field basedir:Ljava/io/File;
       4: areturn

  public void setBasedir(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field basedir:Ljava/io/File;
       5: return

  public java.lang.String getInternalProxies();
    Code:
       0: aload_0
       1: getfield      #10                 // Field internalProxies:Ljava/lang/String;
       4: areturn

  public void setInternalProxies(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field internalProxies:Ljava/lang/String;
       5: return

  public java.lang.String getProtocolHeader();
    Code:
       0: aload_0
       1: getfield      #28                 // Field protocolHeader:Ljava/lang/String;
       4: areturn

  public void setProtocolHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field protocolHeader:Ljava/lang/String;
       5: return

  public java.lang.String getProtocolHeaderHttpsValue();
    Code:
       0: aload_0
       1: getfield      #12                 // Field protocolHeaderHttpsValue:Ljava/lang/String;
       4: areturn

  public void setProtocolHeaderHttpsValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field protocolHeaderHttpsValue:Ljava/lang/String;
       5: return

  public java.lang.String getPortHeader();
    Code:
       0: aload_0
       1: getfield      #14                 // Field portHeader:Ljava/lang/String;
       4: areturn

  public void setPortHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field portHeader:Ljava/lang/String;
       5: return

  public java.lang.Boolean getRedirectContextRoot();
    Code:
       0: aload_0
       1: getfield      #20                 // Field redirectContextRoot:Ljava/lang/Boolean;
       4: areturn

  public void setRedirectContextRoot(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field redirectContextRoot:Ljava/lang/Boolean;
       5: return

  public java.lang.String getRemoteIpHeader();
    Code:
       0: aload_0
       1: getfield      #29                 // Field remoteIpHeader:Ljava/lang/String;
       4: areturn

  public void setRemoteIpHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field remoteIpHeader:Ljava/lang/String;
       5: return

  public java.nio.charset.Charset getUriEncoding();
    Code:
       0: aload_0
       1: getfield      #23                 // Field uriEncoding:Ljava/nio/charset/Charset;
       4: areturn

  public void setUriEncoding(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field uriEncoding:Ljava/nio/charset/Charset;
       5: return

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxConnections:I
       4: ireturn

  public void setMaxConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field maxConnections:I
       5: return

  public int getAcceptCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field acceptCount:I
       4: ireturn

  public void setAcceptCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field acceptCount:I
       5: return

  public java.util.List<java.lang.String> getAdditionalTldSkipPatterns();
    Code:
       0: aload_0
       1: getfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
       4: areturn

  public void setAdditionalTldSkipPatterns(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
       5: return

  void customizeTomcat(org.springframework.boot.autoconfigure.web.ServerProperties, org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBasedir:()Ljava/io/File;
       4: ifnull        15
       7: aload_2
       8: aload_0
       9: invokevirtual #30                 // Method getBasedir:()Ljava/io/File;
      12: invokevirtual #31                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.setBaseDirectory:(Ljava/io/File;)V
      15: aload_2
      16: aload_0
      17: getfield      #15                 // Field backgroundProcessorDelay:I
      20: invokevirtual #32                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.setBackgroundProcessorDelay:(I)V
      23: aload_0
      24: aload_1
      25: aload_2
      26: invokespecial #33                 // Method customizeRemoteIpValve:(Lorg/springframework/boot/autoconfigure/web/ServerProperties;Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
      29: aload_0
      30: getfield      #2                  // Field maxThreads:I
      33: ifle          41
      36: aload_0
      37: aload_2
      38: invokespecial #34                 // Method customizeMaxThreads:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
      41: aload_0
      42: getfield      #1                  // Field minSpareThreads:I
      45: ifle          53
      48: aload_0
      49: aload_2
      50: invokespecial #35                 // Method customizeMinThreads:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
      53: aload_1
      54: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getMaxHttpHeaderSize:()I
      57: ifle          67
      60: aload_1
      61: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getMaxHttpHeaderSize:()I
      64: goto          71
      67: aload_0
      68: getfield      #18                 // Field maxHttpHeaderSize:I
      71: istore_3
      72: iload_3
      73: ifle          82
      76: aload_0
      77: aload_2
      78: iload_3
      79: invokespecial #37                 // Method customizeMaxHttpHeaderSize:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;I)V
      82: aload_0
      83: getfield      #17                 // Field maxHttpPostSize:I
      86: ifeq          98
      89: aload_0
      90: aload_2
      91: aload_0
      92: getfield      #17                 // Field maxHttpPostSize:I
      95: invokespecial #38                 // Method customizeMaxHttpPostSize:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;I)V
      98: aload_0
      99: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
     102: invokestatic  #39                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.access$000:(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;)Z
     105: ifeq          113
     108: aload_0
     109: aload_2
     110: invokespecial #40                 // Method customizeAccessLog:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
     113: aload_0
     114: invokevirtual #41                 // Method getUriEncoding:()Ljava/nio/charset/Charset;
     117: ifnull        128
     120: aload_2
     121: aload_0
     122: invokevirtual #41                 // Method getUriEncoding:()Ljava/nio/charset/Charset;
     125: invokevirtual #42                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.setUriEncoding:(Ljava/nio/charset/Charset;)V
     128: aload_1
     129: invokevirtual #43                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getConnectionTimeout:()Ljava/lang/Integer;
     132: ifnull        147
     135: aload_0
     136: aload_2
     137: aload_1
     138: invokevirtual #43                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getConnectionTimeout:()Ljava/lang/Integer;
     141: invokevirtual #44                 // Method java/lang/Integer.intValue:()I
     144: invokespecial #45                 // Method customizeConnectionTimeout:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;I)V
     147: aload_0
     148: getfield      #20                 // Field redirectContextRoot:Ljava/lang/Boolean;
     151: ifnull        166
     154: aload_0
     155: aload_2
     156: aload_0
     157: getfield      #20                 // Field redirectContextRoot:Ljava/lang/Boolean;
     160: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
     163: invokespecial #47                 // Method customizeRedirectContextRoot:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;Z)V
     166: aload_0
     167: getfield      #3                  // Field maxConnections:I
     170: ifle          178
     173: aload_0
     174: aload_2
     175: invokespecial #48                 // Method customizeMaxConnections:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
     178: aload_0
     179: getfield      #4                  // Field acceptCount:I
     182: ifle          190
     185: aload_0
     186: aload_2
     187: invokespecial #49                 // Method customizeAcceptCount:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
     190: aload_0
     191: getfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
     194: invokestatic  #50                 // Method org/springframework/util/ObjectUtils.isEmpty:(Ljava/lang/Object;)Z
     197: ifne          214
     200: aload_2
     201: invokevirtual #51                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.getTldSkipPatterns:()Ljava/util/Set;
     204: aload_0
     205: getfield      #26                 // Field additionalTldSkipPatterns:Ljava/util/List;
     208: invokeinterface #52,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     213: pop
     214: aload_1
     215: invokevirtual #53                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getError:()Lorg/springframework/boot/autoconfigure/web/ErrorProperties;
     218: invokevirtual #54                 // Method org/springframework/boot/autoconfigure/web/ErrorProperties.getIncludeStacktrace:()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
     221: getstatic     #55                 // Field org/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace.NEVER:Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
     224: if_acmpne     232
     227: aload_0
     228: aload_2
     229: invokespecial #56                 // Method customizeErrorReportValve:(Lorg/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory;)V
     232: aload_1
     233: invokevirtual #57                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getSession:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session;
     236: invokevirtual #58                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Session.getCookie:()Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session$Cookie;
     239: astore        4
     241: aload         4
     243: invokevirtual #59                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Session$Cookie.getHttpOnly:()Ljava/lang/Boolean;
     246: ifnull        270
     249: aload_2
     250: iconst_1
     251: anewarray     #60                 // class org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer
     254: dup
     255: iconst_0
     256: new           #61                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$1
     259: dup
     260: aload_0
     261: aload         4
     263: invokespecial #62                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$1."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;Lorg/springframework/boot/autoconfigure/web/ServerProperties$Session$Cookie;)V
     266: aastore
     267: invokevirtual #63                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addContextCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer;)V
     270: return

  private void customizeErrorReportValve(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #60                 // class org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer
       5: dup
       6: iconst_0
       7: new           #64                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$2
      10: dup
      11: aload_0
      12: invokespecial #65                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$2."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #63                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addContextCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer;)V
      19: return

  private void customizeAcceptCount(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #67                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$3
      10: dup
      11: aload_0
      12: invokespecial #68                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$3."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      19: return

  private void customizeMaxConnections(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #70                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$4
      10: dup
      11: aload_0
      12: invokespecial #71                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$4."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      19: return

  private void customizeConnectionTimeout(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #72                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$5
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #73                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$5."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;I)V
      16: aastore
      17: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      20: return

  private void customizeRemoteIpValve(org.springframework.boot.autoconfigure.web.ServerProperties, org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getProtocolHeader:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: invokevirtual #75                 // Method getRemoteIpHeader:()Ljava/lang/String;
       9: astore        4
      11: aload_3
      12: invokestatic  #76                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      15: ifne          33
      18: aload         4
      20: invokestatic  #76                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      23: ifne          33
      26: aload_1
      27: invokevirtual #77                 // Method org/springframework/boot/autoconfigure/web/ServerProperties.getOrDeduceUseForwardHeaders:()Z
      30: ifeq          115
      33: new           #78                 // class org/apache/catalina/valves/RemoteIpValve
      36: dup
      37: invokespecial #79                 // Method org/apache/catalina/valves/RemoteIpValve."<init>":()V
      40: astore        5
      42: aload         5
      44: aload_3
      45: invokestatic  #80                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      48: ifeq          55
      51: aload_3
      52: goto          57
      55: ldc           #81                 // String X-Forwarded-Proto
      57: invokevirtual #82                 // Method org/apache/catalina/valves/RemoteIpValve.setProtocolHeader:(Ljava/lang/String;)V
      60: aload         4
      62: invokestatic  #80                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      65: ifeq          75
      68: aload         5
      70: aload         4
      72: invokevirtual #83                 // Method org/apache/catalina/valves/RemoteIpValve.setRemoteIpHeader:(Ljava/lang/String;)V
      75: aload         5
      77: aload_0
      78: invokevirtual #84                 // Method getInternalProxies:()Ljava/lang/String;
      81: invokevirtual #85                 // Method org/apache/catalina/valves/RemoteIpValve.setInternalProxies:(Ljava/lang/String;)V
      84: aload         5
      86: aload_0
      87: invokevirtual #86                 // Method getPortHeader:()Ljava/lang/String;
      90: invokevirtual #87                 // Method org/apache/catalina/valves/RemoteIpValve.setPortHeader:(Ljava/lang/String;)V
      93: aload         5
      95: aload_0
      96: invokevirtual #88                 // Method getProtocolHeaderHttpsValue:()Ljava/lang/String;
      99: invokevirtual #89                 // Method org/apache/catalina/valves/RemoteIpValve.setProtocolHeaderHttpsValue:(Ljava/lang/String;)V
     102: aload_2
     103: iconst_1
     104: anewarray     #90                 // class org/apache/catalina/Valve
     107: dup
     108: iconst_0
     109: aload         5
     111: aastore
     112: invokevirtual #91                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addEngineValves:([Lorg/apache/catalina/Valve;)V
     115: return

  private void customizeMaxThreads(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #92                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$6
      10: dup
      11: aload_0
      12: invokespecial #93                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$6."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      19: return

  private void customizeMinThreads(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #94                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$7
      10: dup
      11: aload_0
      12: invokespecial #95                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$7."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;)V
      15: aastore
      16: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      19: return

  private void customizeMaxHttpHeaderSize(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #96                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$8
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #97                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$8."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;I)V
      16: aastore
      17: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      20: return

  private void customizeMaxHttpPostSize(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, int);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #66                 // class org/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer
       5: dup
       6: iconst_0
       7: new           #98                 // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$9
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #99                 // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$9."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;I)V
      16: aastore
      17: invokevirtual #69                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addConnectorCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatConnectorCustomizer;)V
      20: return

  private void customizeAccessLog(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory);
    Code:
       0: new           #100                // class org/apache/catalina/valves/AccessLogValve
       3: dup
       4: invokespecial #101                // Method org/apache/catalina/valves/AccessLogValve."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      13: invokevirtual #102                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getPattern:()Ljava/lang/String;
      16: invokevirtual #103                // Method org/apache/catalina/valves/AccessLogValve.setPattern:(Ljava/lang/String;)V
      19: aload_2
      20: aload_0
      21: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      24: invokevirtual #104                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getDirectory:()Ljava/lang/String;
      27: invokevirtual #105                // Method org/apache/catalina/valves/AccessLogValve.setDirectory:(Ljava/lang/String;)V
      30: aload_2
      31: aload_0
      32: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      35: invokevirtual #106                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getPrefix:()Ljava/lang/String;
      38: invokevirtual #107                // Method org/apache/catalina/valves/AccessLogValve.setPrefix:(Ljava/lang/String;)V
      41: aload_2
      42: aload_0
      43: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      46: invokevirtual #108                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getSuffix:()Ljava/lang/String;
      49: invokevirtual #109                // Method org/apache/catalina/valves/AccessLogValve.setSuffix:(Ljava/lang/String;)V
      52: aload_2
      53: aload_0
      54: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      57: invokevirtual #110                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.isRenameOnRotate:()Z
      60: invokevirtual #111                // Method org/apache/catalina/valves/AccessLogValve.setRenameOnRotate:(Z)V
      63: aload_2
      64: aload_0
      65: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      68: invokevirtual #112                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.isRequestAttributesEnabled:()Z
      71: invokevirtual #113                // Method org/apache/catalina/valves/AccessLogValve.setRequestAttributesEnabled:(Z)V
      74: aload_2
      75: aload_0
      76: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      79: invokevirtual #114                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.isRotate:()Z
      82: invokevirtual #115                // Method org/apache/catalina/valves/AccessLogValve.setRotatable:(Z)V
      85: aload_2
      86: aload_0
      87: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
      90: invokevirtual #116                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.isBuffered:()Z
      93: invokevirtual #117                // Method org/apache/catalina/valves/AccessLogValve.setBuffered:(Z)V
      96: aload_2
      97: aload_0
      98: getfield      #8                  // Field accesslog:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog;
     101: invokevirtual #118                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$Accesslog.getFileDateFormat:()Ljava/lang/String;
     104: invokevirtual #119                // Method org/apache/catalina/valves/AccessLogValve.setFileDateFormat:(Ljava/lang/String;)V
     107: aload_1
     108: iconst_1
     109: anewarray     #90                 // class org/apache/catalina/Valve
     112: dup
     113: iconst_0
     114: aload_2
     115: aastore
     116: invokevirtual #91                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addEngineValves:([Lorg/apache/catalina/Valve;)V
     119: return

  private void customizeRedirectContextRoot(org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory, boolean);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #60                 // class org/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer
       5: dup
       6: iconst_0
       7: new           #120                // class org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$10
      10: dup
      11: aload_0
      12: iload_2
      13: invokespecial #121                // Method org/springframework/boot/autoconfigure/web/ServerProperties$Tomcat$10."<init>":(Lorg/springframework/boot/autoconfigure/web/ServerProperties$Tomcat;Z)V
      16: aastore
      17: invokevirtual #63                 // Method org/springframework/boot/context/embedded/tomcat/TomcatEmbeddedServletContainerFactory.addContextCustomizers:([Lorg/springframework/boot/context/embedded/tomcat/TomcatContextCustomizer;)V
      20: return

  static int access$100(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat);
    Code:
       0: aload_0
       1: getfield      #4                  // Field acceptCount:I
       4: ireturn

  static int access$200(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat);
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxConnections:I
       4: ireturn

  static int access$300(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxThreads:I
       4: ireturn

  static int access$400(org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat);
    Code:
       0: aload_0
       1: getfield      #1                  // Field minSpareThreads:I
       4: ireturn
}
