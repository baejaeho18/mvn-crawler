Compiled from "DataSourceProperties.java"
public class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties implements org.springframework.beans.factory.BeanClassLoaderAware,org.springframework.context.EnvironmentAware,org.springframework.beans.factory.InitializingBean {
  private java.lang.ClassLoader classLoader;

  private org.springframework.core.env.Environment environment;

  private java.lang.String name;

  private boolean generateUniqueName;

  private java.lang.Class<? extends javax.sql.DataSource> type;

  private java.lang.String driverClassName;

  private java.lang.String url;

  private java.lang.String username;

  private java.lang.String password;

  private java.lang.String jndiName;

  private boolean initialize;

  private java.lang.String platform;

  private java.util.List<java.lang.String> schema;

  private java.lang.String schemaUsername;

  private java.lang.String schemaPassword;

  private java.util.List<java.lang.String> data;

  private java.lang.String dataUsername;

  private java.lang.String dataPassword;

  private boolean continueOnError;

  private java.lang.String separator;

  private java.nio.charset.Charset sqlScriptEncoding;

  private org.springframework.boot.autoconfigure.jdbc.EmbeddedDatabaseConnection embeddedDatabaseConnection;

  private org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa xa;

  private java.lang.String uniqueName;

  public org.springframework.boot.autoconfigure.jdbc.DataSourceProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String testdb
       7: putfield      #3                  // Field name:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #4                  // Field initialize:Z
      15: aload_0
      16: ldc           #5                  // String all
      18: putfield      #6                  // Field platform:Ljava/lang/String;
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field continueOnError:Z
      26: aload_0
      27: ldc           #8                  // String ;
      29: putfield      #9                  // Field separator:Ljava/lang/String;
      32: aload_0
      33: getstatic     #10                 // Field org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection.NONE:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      36: putfield      #11                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      39: aload_0
      40: new           #12                 // class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa
      43: dup
      44: invokespecial #13                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa."<init>":()V
      47: putfield      #14                 // Field xa:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
      50: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void setEnvironment(org.springframework.core.env.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field environment:Lorg/springframework/core/env/Environment;
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #15                 // Field classLoader:Ljava/lang/ClassLoader;
       5: invokestatic  #17                 // Method org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
       8: putfield      #11                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      11: return

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder initializeDataSourceBuilder();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: invokestatic  #19                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.create:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
       7: aload_0
       8: invokevirtual #20                 // Method getType:()Ljava/lang/Class;
      11: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.type:(Ljava/lang/Class;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
      14: aload_0
      15: invokevirtual #22                 // Method determineDriverClassName:()Ljava/lang/String;
      18: invokevirtual #23                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.driverClassName:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
      21: aload_0
      22: invokevirtual #24                 // Method determineUrl:()Ljava/lang/String;
      25: invokevirtual #25                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.url:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
      28: aload_0
      29: invokevirtual #26                 // Method determineUsername:()Ljava/lang/String;
      32: invokevirtual #27                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.username:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
      35: aload_0
      36: invokevirtual #28                 // Method determinePassword:()Ljava/lang/String;
      39: invokevirtual #29                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder.password:(Ljava/lang/String;)Lorg/springframework/boot/autoconfigure/jdbc/DataSourceBuilder;
      42: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field name:Ljava/lang/String;
       5: return

  public boolean isGenerateUniqueName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field generateUniqueName:Z
       4: ireturn

  public void setGenerateUniqueName(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field generateUniqueName:Z
       5: return

  public java.lang.Class<? extends javax.sql.DataSource> getType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field type:Ljava/lang/Class;
       4: areturn

  public void setType(java.lang.Class<? extends javax.sql.DataSource>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field type:Ljava/lang/Class;
       5: return

  public java.lang.String getDriverClassName();
    Code:
       0: aload_0
       1: getfield      #32                 // Field driverClassName:Ljava/lang/String;
       4: areturn

  public void setDriverClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field driverClassName:Ljava/lang/String;
       5: return

  public java.lang.String determineDriverClassName();
    Code:
       0: aload_0
       1: getfield      #32                 // Field driverClassName:Ljava/lang/String;
       4: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          44
      10: aload_0
      11: invokespecial #34                 // Method driverClassIsLoadable:()Z
      14: new           #35                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #37                 // String Cannot load driver class:
      23: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #32                 // Field driverClassName:Ljava/lang/String;
      30: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokestatic  #40                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      39: aload_0
      40: getfield      #32                 // Field driverClassName:Ljava/lang/String;
      43: areturn
      44: aconst_null
      45: astore_1
      46: aload_0
      47: getfield      #41                 // Field url:Ljava/lang/String;
      50: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      53: ifeq          67
      56: aload_0
      57: getfield      #41                 // Field url:Ljava/lang/String;
      60: invokestatic  #42                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromJdbcUrl:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      63: invokevirtual #43                 // Method org/springframework/boot/jdbc/DatabaseDriver.getDriverClassName:()Ljava/lang/String;
      66: astore_1
      67: aload_1
      68: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      71: ifne          82
      74: aload_0
      75: getfield      #11                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      78: invokevirtual #44                 // Method org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection.getDriverClassName:()Ljava/lang/String;
      81: astore_1
      82: aload_1
      83: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      86: ifne          107
      89: new           #45                 // class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException
      92: dup
      93: aload_0
      94: getfield      #11                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      97: aload_0
      98: getfield      #16                 // Field environment:Lorg/springframework/core/env/Environment;
     101: ldc           #46                 // String driver class
     103: invokespecial #47                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException."<init>":(Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;Lorg/springframework/core/env/Environment;Ljava/lang/String;)V
     106: athrow
     107: aload_1
     108: areturn

  private boolean driverClassIsLoadable();
    Code:
       0: aload_0
       1: getfield      #32                 // Field driverClassName:Ljava/lang/String;
       4: aconst_null
       5: invokestatic  #48                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: pop
       9: iconst_1
      10: ireturn
      11: astore_1
      12: aload_1
      13: athrow
      14: astore_1
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/UnsupportedClassVersionError
           0    10    14   Class java/lang/Throwable

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #41                 // Field url:Ljava/lang/String;
       4: areturn

  public void setUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field url:Ljava/lang/String;
       5: return

  public java.lang.String determineUrl();
    Code:
       0: aload_0
       1: getfield      #41                 // Field url:Ljava/lang/String;
       4: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #41                 // Field url:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #11                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      19: aload_0
      20: invokespecial #51                 // Method determineDatabaseName:()Ljava/lang/String;
      23: invokevirtual #52                 // Method org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection.getUrl:(Ljava/lang/String;)Ljava/lang/String;
      26: astore_1
      27: aload_1
      28: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      31: ifne          52
      34: new           #45                 // class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException
      37: dup
      38: aload_0
      39: getfield      #11                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;
      42: aload_0
      43: getfield      #16                 // Field environment:Lorg/springframework/core/env/Environment;
      46: ldc           #53                 // String url
      48: invokespecial #47                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException."<init>":(Lorg/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection;Lorg/springframework/core/env/Environment;Ljava/lang/String;)V
      51: athrow
      52: aload_1
      53: areturn

  private java.lang.String determineDatabaseName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field generateUniqueName:Z
       4: ifeq          29
       7: aload_0
       8: getfield      #54                 // Field uniqueName:Ljava/lang/String;
      11: ifnonnull     24
      14: aload_0
      15: invokestatic  #55                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      18: invokevirtual #56                 // Method java/util/UUID.toString:()Ljava/lang/String;
      21: putfield      #54                 // Field uniqueName:Ljava/lang/String;
      24: aload_0
      25: getfield      #54                 // Field uniqueName:Ljava/lang/String;
      28: areturn
      29: aload_0
      30: getfield      #3                  // Field name:Ljava/lang/String;
      33: areturn

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #57                 // Field username:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field username:Ljava/lang/String;
       5: return

  public java.lang.String determineUsername();
    Code:
       0: aload_0
       1: getfield      #57                 // Field username:Ljava/lang/String;
       4: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #57                 // Field username:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #22                 // Method determineDriverClassName:()Ljava/lang/String;
      19: invokestatic  #58                 // Method org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection.isEmbedded:(Ljava/lang/String;)Z
      22: ifeq          28
      25: ldc           #59                 // String sa
      27: areturn
      28: aconst_null
      29: areturn

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #60                 // Field password:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field password:Ljava/lang/String;
       5: return

  public java.lang.String determinePassword();
    Code:
       0: aload_0
       1: getfield      #60                 // Field password:Ljava/lang/String;
       4: invokestatic  #33                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #60                 // Field password:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #22                 // Method determineDriverClassName:()Ljava/lang/String;
      19: invokestatic  #58                 // Method org/springframework/boot/autoconfigure/jdbc/EmbeddedDatabaseConnection.isEmbedded:(Ljava/lang/String;)Z
      22: ifeq          28
      25: ldc           #61                 // String
      27: areturn
      28: aconst_null
      29: areturn

  public java.lang.String getJndiName();
    Code:
       0: aload_0
       1: getfield      #62                 // Field jndiName:Ljava/lang/String;
       4: areturn

  public void setJndiName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field jndiName:Ljava/lang/String;
       5: return

  public boolean isInitialize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialize:Z
       4: ireturn

  public void setInitialize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field initialize:Z
       5: return

  public java.lang.String getPlatform();
    Code:
       0: aload_0
       1: getfield      #6                  // Field platform:Ljava/lang/String;
       4: areturn

  public void setPlatform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field platform:Ljava/lang/String;
       5: return

  public java.util.List<java.lang.String> getSchema();
    Code:
       0: aload_0
       1: getfield      #63                 // Field schema:Ljava/util/List;
       4: areturn

  public void setSchema(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field schema:Ljava/util/List;
       5: return

  public java.lang.String getSchemaUsername();
    Code:
       0: aload_0
       1: getfield      #64                 // Field schemaUsername:Ljava/lang/String;
       4: areturn

  public void setSchemaUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field schemaUsername:Ljava/lang/String;
       5: return

  public java.lang.String getSchemaPassword();
    Code:
       0: aload_0
       1: getfield      #65                 // Field schemaPassword:Ljava/lang/String;
       4: areturn

  public void setSchemaPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field schemaPassword:Ljava/lang/String;
       5: return

  public java.util.List<java.lang.String> getData();
    Code:
       0: aload_0
       1: getfield      #66                 // Field data:Ljava/util/List;
       4: areturn

  public void setData(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field data:Ljava/util/List;
       5: return

  public java.lang.String getDataUsername();
    Code:
       0: aload_0
       1: getfield      #67                 // Field dataUsername:Ljava/lang/String;
       4: areturn

  public void setDataUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field dataUsername:Ljava/lang/String;
       5: return

  public java.lang.String getDataPassword();
    Code:
       0: aload_0
       1: getfield      #68                 // Field dataPassword:Ljava/lang/String;
       4: areturn

  public void setDataPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field dataPassword:Ljava/lang/String;
       5: return

  public boolean isContinueOnError();
    Code:
       0: aload_0
       1: getfield      #7                  // Field continueOnError:Z
       4: ireturn

  public void setContinueOnError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field continueOnError:Z
       5: return

  public java.lang.String getSeparator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field separator:Ljava/lang/String;
       4: areturn

  public void setSeparator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field separator:Ljava/lang/String;
       5: return

  public java.nio.charset.Charset getSqlScriptEncoding();
    Code:
       0: aload_0
       1: getfield      #69                 // Field sqlScriptEncoding:Ljava/nio/charset/Charset;
       4: areturn

  public void setSqlScriptEncoding(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #69                 // Field sqlScriptEncoding:Ljava/nio/charset/Charset;
       5: return

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #15                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa getXa();
    Code:
       0: aload_0
       1: getfield      #14                 // Field xa:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
       4: areturn

  public void setXa(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field xa:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
       5: return
}
