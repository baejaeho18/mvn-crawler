Compiled from "MongoProperties.java"
public class org.springframework.boot.autoconfigure.mongo.MongoProperties {
  public static final int DEFAULT_PORT;

  public static final java.lang.String DEFAULT_URI;

  private java.lang.String host;

  private java.lang.Integer port;

  private java.lang.String uri;

  private java.lang.String database;

  private java.lang.String authenticationDatabase;

  private java.lang.String gridFsDatabase;

  private java.lang.String username;

  private char[] password;

  private java.lang.Class<?> fieldNamingStrategy;

  public org.springframework.boot.autoconfigure.mongo.MongoProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field port:Ljava/lang/Integer;
       9: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field host:Ljava/lang/String;
       4: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field host:Ljava/lang/String;
       5: return

  public java.lang.String getDatabase();
    Code:
       0: aload_0
       1: getfield      #4                  // Field database:Ljava/lang/String;
       4: areturn

  public void setDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field database:Ljava/lang/String;
       5: return

  public java.lang.String getAuthenticationDatabase();
    Code:
       0: aload_0
       1: getfield      #5                  // Field authenticationDatabase:Ljava/lang/String;
       4: areturn

  public void setAuthenticationDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field authenticationDatabase:Ljava/lang/String;
       5: return

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #6                  // Field username:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field username:Ljava/lang/String;
       5: return

  public char[] getPassword();
    Code:
       0: aload_0
       1: getfield      #7                  // Field password:[C
       4: areturn

  public void setPassword(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field password:[C
       5: return

  public java.lang.Class<?> getFieldNamingStrategy();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fieldNamingStrategy:Ljava/lang/Class;
       4: areturn

  public void setFieldNamingStrategy(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field fieldNamingStrategy:Ljava/lang/Class;
       5: return

  public void clearPassword();
    Code:
       0: aload_0
       1: getfield      #7                  // Field password:[C
       4: ifnonnull     8
       7: return
       8: iconst_0
       9: istore_1
      10: iload_1
      11: aload_0
      12: getfield      #7                  // Field password:[C
      15: arraylength
      16: if_icmpge     32
      19: aload_0
      20: getfield      #7                  // Field password:[C
      23: iload_1
      24: iconst_0
      25: castore
      26: iinc          1, 1
      29: goto          10
      32: return

  public java.lang.String getUri();
    Code:
       0: aload_0
       1: getfield      #9                  // Field uri:Ljava/lang/String;
       4: areturn

  public java.lang.String determineUri();
    Code:
       0: aload_0
       1: getfield      #9                  // Field uri:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #9                  // Field uri:Ljava/lang/String;
      11: goto          16
      14: ldc           #11                 // String mongodb://localhost/test
      16: areturn

  public void setUri(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field uri:Ljava/lang/String;
       5: return

  public java.lang.Integer getPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field port:Ljava/lang/Integer;
       4: areturn

  public void setPort(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field port:Ljava/lang/Integer;
       5: return

  public java.lang.String getGridFsDatabase();
    Code:
       0: aload_0
       1: getfield      #12                 // Field gridFsDatabase:Ljava/lang/String;
       4: areturn

  public void setGridFsDatabase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field gridFsDatabase:Ljava/lang/String;
       5: return

  public java.lang.String getMongoClientDatabase();
    Code:
       0: aload_0
       1: getfield      #4                  // Field database:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #4                  // Field database:Ljava/lang/String;
      11: areturn
      12: new           #13                 // class com/mongodb/MongoClientURI
      15: dup
      16: aload_0
      17: invokevirtual #14                 // Method determineUri:()Ljava/lang/String;
      20: invokespecial #15                 // Method com/mongodb/MongoClientURI."<init>":(Ljava/lang/String;)V
      23: invokevirtual #16                 // Method com/mongodb/MongoClientURI.getDatabase:()Ljava/lang/String;
      26: areturn

  public com.mongodb.MongoClient createMongoClient(com.mongodb.MongoClientOptions, org.springframework.core.env.Environment) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #17                 // Method getEmbeddedPort:(Lorg/springframework/core/env/Environment;)Ljava/lang/Integer;
       5: astore_3
       6: aload_3
       7: ifnull        28
      10: aload_0
      11: aload_1
      12: aload_3
      13: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
      16: invokespecial #19                 // Method createEmbeddedMongoClient:(Lcom/mongodb/MongoClientOptions;I)Lcom/mongodb/MongoClient;
      19: astore        4
      21: aload_0
      22: invokevirtual #20                 // Method clearPassword:()V
      25: aload         4
      27: areturn
      28: aload_0
      29: aload_1
      30: invokespecial #21                 // Method createNetworkMongoClient:(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClient;
      33: astore        4
      35: aload_0
      36: invokevirtual #20                 // Method clearPassword:()V
      39: aload         4
      41: areturn
      42: astore        5
      44: aload_0
      45: invokevirtual #20                 // Method clearPassword:()V
      48: aload         5
      50: athrow
    Exception table:
       from    to  target type
           0    21    42   any
          28    35    42   any
          42    44    42   any

  private java.lang.Integer getEmbeddedPort(org.springframework.core.env.Environment);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_1
       5: ldc           #22                 // String local.mongo.port
       7: invokeinterface #23,  2           // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: ifnull        22
      17: aload_2
      18: invokestatic  #24                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      21: areturn
      22: aconst_null
      23: areturn

  private com.mongodb.MongoClient createEmbeddedMongoClient(com.mongodb.MongoClientOptions, int);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: invokestatic  #25                 // Method com/mongodb/MongoClientOptions.builder:()Lcom/mongodb/MongoClientOptions$Builder;
       7: invokevirtual #26                 // Method com/mongodb/MongoClientOptions$Builder.build:()Lcom/mongodb/MongoClientOptions;
      10: astore_1
      11: aload_0
      12: getfield      #3                  // Field host:Ljava/lang/String;
      15: ifnull        25
      18: aload_0
      19: getfield      #3                  // Field host:Ljava/lang/String;
      22: goto          27
      25: ldc           #27                 // String localhost
      27: astore_3
      28: new           #28                 // class com/mongodb/MongoClient
      31: dup
      32: new           #29                 // class com/mongodb/ServerAddress
      35: dup
      36: aload_3
      37: iload_2
      38: invokespecial #30                 // Method com/mongodb/ServerAddress."<init>":(Ljava/lang/String;I)V
      41: invokestatic  #31                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      44: invokestatic  #32                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      47: aload_1
      48: invokespecial #33                 // Method com/mongodb/MongoClient."<init>":(Ljava/util/List;Ljava/util/List;Lcom/mongodb/MongoClientOptions;)V
      51: areturn

  private com.mongodb.MongoClient createNetworkMongoClient(com.mongodb.MongoClientOptions);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method hasCustomAddress:()Z
       4: ifne          14
       7: aload_0
       8: invokespecial #35                 // Method hasCustomCredentials:()Z
      11: ifeq          157
      14: aload_0
      15: getfield      #9                  // Field uri:Ljava/lang/String;
      18: ifnull        31
      21: new           #36                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #37                 // String Invalid mongo configuration, either uri or host/port/credentials must be specified
      27: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: ifnonnull     42
      35: invokestatic  #25                 // Method com/mongodb/MongoClientOptions.builder:()Lcom/mongodb/MongoClientOptions$Builder;
      38: invokevirtual #26                 // Method com/mongodb/MongoClientOptions$Builder.build:()Lcom/mongodb/MongoClientOptions;
      41: astore_1
      42: new           #39                 // class java/util/ArrayList
      45: dup
      46: invokespecial #40                 // Method java/util/ArrayList."<init>":()V
      49: astore_2
      50: aload_0
      51: invokespecial #35                 // Method hasCustomCredentials:()Z
      54: ifeq          95
      57: aload_0
      58: getfield      #5                  // Field authenticationDatabase:Ljava/lang/String;
      61: ifnull        71
      64: aload_0
      65: getfield      #5                  // Field authenticationDatabase:Ljava/lang/String;
      68: goto          75
      71: aload_0
      72: invokevirtual #41                 // Method getMongoClientDatabase:()Ljava/lang/String;
      75: astore_3
      76: aload_2
      77: aload_0
      78: getfield      #6                  // Field username:Ljava/lang/String;
      81: aload_3
      82: aload_0
      83: getfield      #7                  // Field password:[C
      86: invokestatic  #42                 // Method com/mongodb/MongoCredential.createCredential:(Ljava/lang/String;Ljava/lang/String;[C)Lcom/mongodb/MongoCredential;
      89: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      94: pop
      95: aload_0
      96: getfield      #3                  // Field host:Ljava/lang/String;
      99: ifnull        109
     102: aload_0
     103: getfield      #3                  // Field host:Ljava/lang/String;
     106: goto          111
     109: ldc           #27                 // String localhost
     111: astore_3
     112: aload_0
     113: getfield      #2                  // Field port:Ljava/lang/Integer;
     116: ifnull        129
     119: aload_0
     120: getfield      #2                  // Field port:Ljava/lang/Integer;
     123: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
     126: goto          132
     129: sipush        27017
     132: istore        4
     134: new           #28                 // class com/mongodb/MongoClient
     137: dup
     138: new           #29                 // class com/mongodb/ServerAddress
     141: dup
     142: aload_3
     143: iload         4
     145: invokespecial #30                 // Method com/mongodb/ServerAddress."<init>":(Ljava/lang/String;I)V
     148: invokestatic  #31                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     151: aload_2
     152: aload_1
     153: invokespecial #33                 // Method com/mongodb/MongoClient."<init>":(Ljava/util/List;Ljava/util/List;Lcom/mongodb/MongoClientOptions;)V
     156: areturn
     157: new           #28                 // class com/mongodb/MongoClient
     160: dup
     161: new           #13                 // class com/mongodb/MongoClientURI
     164: dup
     165: aload_0
     166: invokevirtual #14                 // Method determineUri:()Ljava/lang/String;
     169: aload_0
     170: aload_1
     171: invokespecial #44                 // Method builder:(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClientOptions$Builder;
     174: invokespecial #45                 // Method com/mongodb/MongoClientURI."<init>":(Ljava/lang/String;Lcom/mongodb/MongoClientOptions$Builder;)V
     177: invokespecial #46                 // Method com/mongodb/MongoClient."<init>":(Lcom/mongodb/MongoClientURI;)V
     180: areturn

  private boolean hasCustomAddress();
    Code:
       0: aload_0
       1: getfield      #3                  // Field host:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #2                  // Field port:Ljava/lang/Integer;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean hasCustomCredentials();
    Code:
       0: aload_0
       1: getfield      #6                  // Field username:Ljava/lang/String;
       4: ifnull        18
       7: aload_0
       8: getfield      #7                  // Field password:[C
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private com.mongodb.MongoClientOptions$Builder builder(com.mongodb.MongoClientOptions);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: invokestatic  #47                 // Method com/mongodb/MongoClientOptions.builder:(Lcom/mongodb/MongoClientOptions;)Lcom/mongodb/MongoClientOptions$Builder;
       8: areturn
       9: invokestatic  #25                 // Method com/mongodb/MongoClientOptions.builder:()Lcom/mongodb/MongoClientOptions$Builder;
      12: areturn
}
