Compiled from "RabbitAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$RabbitTemplateConfiguration {
  private final org.springframework.beans.factory.ObjectProvider<org.springframework.amqp.support.converter.MessageConverter> messageConverter;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties properties;

  public org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration$RabbitTemplateConfiguration(org.springframework.beans.factory.ObjectProvider<org.springframework.amqp.support.converter.MessageConverter>, org.springframework.boot.autoconfigure.amqp.RabbitProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field messageConverter:Lorg/springframework/beans/factory/ObjectProvider;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field properties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
      14: return

  public org.springframework.amqp.rabbit.core.RabbitTemplate rabbitTemplate(org.springframework.amqp.rabbit.connection.ConnectionFactory);
    Code:
       0: new           #4                  // class org/springframework/amqp/rabbit/core/RabbitTemplate
       3: dup
       4: aload_1
       5: invokespecial #5                  // Method org/springframework/amqp/rabbit/core/RabbitTemplate."<init>":(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
       8: astore_2
       9: aload_0
      10: getfield      #2                  // Field messageConverter:Lorg/springframework/beans/factory/ObjectProvider;
      13: invokeinterface #6,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfUnique:()Ljava/lang/Object;
      18: checkcast     #7                  // class org/springframework/amqp/support/converter/MessageConverter
      21: astore_3
      22: aload_3
      23: ifnull        31
      26: aload_2
      27: aload_3
      28: invokevirtual #8                  // Method org/springframework/amqp/rabbit/core/RabbitTemplate.setMessageConverter:(Lorg/springframework/amqp/support/converter/MessageConverter;)V
      31: aload_2
      32: aload_0
      33: invokespecial #9                  // Method determineMandatoryFlag:()Z
      36: invokevirtual #10                 // Method org/springframework/amqp/rabbit/core/RabbitTemplate.setMandatory:(Z)V
      39: aload_0
      40: getfield      #3                  // Field properties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
      43: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties.getTemplate:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
      46: astore        4
      48: aload         4
      50: invokevirtual #12                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template.getRetry:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry;
      53: astore        5
      55: aload         5
      57: invokevirtual #13                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry.isEnabled:()Z
      60: ifeq          73
      63: aload_2
      64: aload_0
      65: aload         5
      67: invokespecial #14                 // Method createRetryTemplate:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry;)Lorg/springframework/retry/support/RetryTemplate;
      70: invokevirtual #15                 // Method org/springframework/amqp/rabbit/core/RabbitTemplate.setRetryTemplate:(Lorg/springframework/retry/support/RetryTemplate;)V
      73: aload         4
      75: invokevirtual #16                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template.getReceiveTimeout:()Ljava/lang/Long;
      78: ifnull        93
      81: aload_2
      82: aload         4
      84: invokevirtual #16                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template.getReceiveTimeout:()Ljava/lang/Long;
      87: invokevirtual #17                 // Method java/lang/Long.longValue:()J
      90: invokevirtual #18                 // Method org/springframework/amqp/rabbit/core/RabbitTemplate.setReceiveTimeout:(J)V
      93: aload         4
      95: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template.getReplyTimeout:()Ljava/lang/Long;
      98: ifnull        113
     101: aload_2
     102: aload         4
     104: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template.getReplyTimeout:()Ljava/lang/Long;
     107: invokevirtual #17                 // Method java/lang/Long.longValue:()J
     110: invokevirtual #20                 // Method org/springframework/amqp/rabbit/core/RabbitTemplate.setReplyTimeout:(J)V
     113: aload_2
     114: areturn

  private boolean determineMandatoryFlag();
    Code:
       0: aload_0
       1: getfield      #3                  // Field properties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
       4: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties.getTemplate:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
       7: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template.getMandatory:()Ljava/lang/Boolean;
      10: astore_1
      11: aload_1
      12: ifnull        22
      15: aload_1
      16: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      19: goto          29
      22: aload_0
      23: getfield      #3                  // Field properties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
      26: invokevirtual #23                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties.isPublisherReturns:()Z
      29: ireturn

  private org.springframework.retry.support.RetryTemplate createRetryTemplate(org.springframework.boot.autoconfigure.amqp.RabbitProperties$Retry);
    Code:
       0: new           #24                 // class org/springframework/retry/support/RetryTemplate
       3: dup
       4: invokespecial #25                 // Method org/springframework/retry/support/RetryTemplate."<init>":()V
       7: astore_2
       8: new           #26                 // class org/springframework/retry/policy/SimpleRetryPolicy
      11: dup
      12: invokespecial #27                 // Method org/springframework/retry/policy/SimpleRetryPolicy."<init>":()V
      15: astore_3
      16: aload_3
      17: aload_1
      18: invokevirtual #28                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry.getMaxAttempts:()I
      21: invokevirtual #29                 // Method org/springframework/retry/policy/SimpleRetryPolicy.setMaxAttempts:(I)V
      24: aload_2
      25: aload_3
      26: invokevirtual #30                 // Method org/springframework/retry/support/RetryTemplate.setRetryPolicy:(Lorg/springframework/retry/RetryPolicy;)V
      29: new           #31                 // class org/springframework/retry/backoff/ExponentialBackOffPolicy
      32: dup
      33: invokespecial #32                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy."<init>":()V
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokevirtual #33                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry.getInitialInterval:()J
      44: invokevirtual #34                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy.setInitialInterval:(J)V
      47: aload         4
      49: aload_1
      50: invokevirtual #35                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry.getMultiplier:()D
      53: invokevirtual #36                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy.setMultiplier:(D)V
      56: aload         4
      58: aload_1
      59: invokevirtual #37                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Retry.getMaxInterval:()J
      62: invokevirtual #38                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy.setMaxInterval:(J)V
      65: aload_2
      66: aload         4
      68: invokevirtual #39                 // Method org/springframework/retry/support/RetryTemplate.setBackOffPolicy:(Lorg/springframework/retry/backoff/BackOffPolicy;)V
      71: aload_2
      72: areturn

  public org.springframework.amqp.core.AmqpAdmin amqpAdmin(org.springframework.amqp.rabbit.connection.ConnectionFactory);
    Code:
       0: new           #40                 // class org/springframework/amqp/rabbit/core/RabbitAdmin
       3: dup
       4: aload_1
       5: invokespecial #41                 // Method org/springframework/amqp/rabbit/core/RabbitAdmin."<init>":(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
       8: areturn
}
