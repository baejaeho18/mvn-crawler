Compiled from "HikariDriverConfigurationFailureAnalyzer.java"
class org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer extends org.springframework.boot.diagnostics.AbstractFailureAnalyzer<java.lang.IllegalStateException> {
  private static final java.lang.String EXPECTED_MESSAGE;

  org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/diagnostics/AbstractFailureAnalyzer."<init>":()V
       4: return

  protected org.springframework.boot.diagnostics.FailureAnalysis analyze(java.lang.Throwable, java.lang.IllegalStateException);
    Code:
       0: ldc           #3                  // String both driverClassName and dataSourceClassName are specified, one or the other should be used
       2: aload_2
       3: invokevirtual #4                  // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
       6: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          14
      12: aconst_null
      13: areturn
      14: new           #6                  // class org/springframework/boot/diagnostics/FailureAnalysis
      17: dup
      18: ldc           #7                  // String Configuration of the Hikari connection pool failed: \'dataSourceClassName\' is not supported.
      20: ldc           #8                  // String Spring Boot auto-configures only a driver and can\'t specify a custom DataSource. Consider configuring the Hikari DataSource in your own configuration.
      22: aload_2
      23: invokespecial #9                  // Method org/springframework/boot/diagnostics/FailureAnalysis."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      26: areturn

  protected org.springframework.boot.diagnostics.FailureAnalysis analyze(java.lang.Throwable, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #10                 // class java/lang/IllegalStateException
       6: invokevirtual #11                 // Method analyze:(Ljava/lang/Throwable;Ljava/lang/IllegalStateException;)Lorg/springframework/boot/diagnostics/FailureAnalysis;
       9: areturn
}
