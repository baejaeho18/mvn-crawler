Compiled from "ServerProperties.java"
class org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$2 implements org.springframework.boot.context.embedded.jetty.JettyServerCustomizer {
  final int val$maxHttpHeaderSize;

  final org.springframework.boot.autoconfigure.web.ServerProperties$Jetty this$0;

  org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$2(org.springframework.boot.autoconfigure.web.ServerProperties$Jetty, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/boot/autoconfigure/web/ServerProperties$Jetty;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$maxHttpHeaderSize:I
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void customize(org.eclipse.jetty.server.Server);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/eclipse/jetty/server/Server.getConnectors:()[Lorg/eclipse/jetty/server/Connector;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     100
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: invokeinterface #5,  1            // InterfaceMethod org/eclipse/jetty/server/Connector.getConnectionFactories:()Ljava/util/Collection;
      30: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore        6
      37: aload         6
      39: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          79
      47: aload         6
      49: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #9                  // class org/eclipse/jetty/server/ConnectionFactory
      57: astore        7
      59: aload         7
      61: instanceof    #10                 // class org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory
      64: ifeq          76
      67: aload_0
      68: aload         7
      70: checkcast     #10                 // class org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory
      73: invokespecial #11                 // Method customize:(Lorg/eclipse/jetty/server/HttpConfiguration$ConnectionFactory;)V
      76: goto          37
      79: goto          94
      82: astore        6
      84: aload_0
      85: aload         5
      87: aload_0
      88: getfield      #2                  // Field val$maxHttpHeaderSize:I
      91: invokespecial #13                 // Method customizeOnJetty8:(Lorg/eclipse/jetty/server/Connector;I)V
      94: iinc          4, 1
      97: goto          11
     100: return
    Exception table:
       from    to  target type
          23    79    82   Class java/lang/NoSuchMethodError

  private void customize(org.eclipse.jetty.server.HttpConfiguration$ConnectionFactory);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod org/eclipse/jetty/server/HttpConfiguration$ConnectionFactory.getHttpConfiguration:()Lorg/eclipse/jetty/server/HttpConfiguration;
       6: astore_2
       7: aload_2
       8: aload_0
       9: getfield      #2                  // Field val$maxHttpHeaderSize:I
      12: invokevirtual #15                 // Method org/eclipse/jetty/server/HttpConfiguration.setRequestHeaderSize:(I)V
      15: aload_2
      16: aload_0
      17: getfield      #2                  // Field val$maxHttpHeaderSize:I
      20: invokevirtual #16                 // Method org/eclipse/jetty/server/HttpConfiguration.setResponseHeaderSize:(I)V
      23: return

  private void customizeOnJetty8(org.eclipse.jetty.server.Connector, int);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #18                 // String setRequestHeaderSize
       6: iconst_1
       7: anewarray     #19                 // class java/lang/Class
      10: dup
      11: iconst_0
      12: getstatic     #20                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      15: aastore
      16: invokevirtual #21                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      19: aload_1
      20: iconst_1
      21: anewarray     #22                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload_2
      27: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: invokevirtual #24                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: ldc           #25                 // String setResponseHeaderSize
      41: iconst_1
      42: anewarray     #19                 // class java/lang/Class
      45: dup
      46: iconst_0
      47: getstatic     #20                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      50: aastore
      51: invokevirtual #21                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      54: aload_1
      55: iconst_1
      56: anewarray     #22                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: iload_2
      62: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: aastore
      66: invokevirtual #24                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: goto          83
      73: astore_3
      74: new           #27                 // class java/lang/RuntimeException
      77: dup
      78: aload_3
      79: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      82: athrow
      83: return
    Exception table:
       from    to  target type
           0    70    73   Class java/lang/Exception
}
