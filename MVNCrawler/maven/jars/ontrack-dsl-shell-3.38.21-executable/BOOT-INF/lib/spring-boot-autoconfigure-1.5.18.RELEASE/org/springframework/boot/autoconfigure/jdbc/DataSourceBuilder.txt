Compiled from "DataSourceBuilder.java"
public class org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder {
  private static final java.lang.String[] DATA_SOURCE_TYPE_NAMES;

  private java.lang.Class<? extends javax.sql.DataSource> type;

  private java.lang.ClassLoader classLoader;

  private java.util.Map<java.lang.String, java.lang.String> properties;

  public static org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder create();
    Code:
       0: new           #1                  // class org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder
       3: dup
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/ClassLoader;)V
       8: areturn

  public static org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder create(java.lang.ClassLoader);
    Code:
       0: new           #1                  // class org/springframework/boot/autoconfigure/jdbc/DataSourceBuilder
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/ClassLoader;)V
       8: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashMap
       8: dup
       9: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      12: putfield      #6                  // Field properties:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field classLoader:Ljava/lang/ClassLoader;
      20: return

  public javax.sql.DataSource build();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getType:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: invokestatic  #9                  // Method org/springframework/beans/BeanUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #10                 // class javax/sql/DataSource
      12: astore_2
      13: aload_0
      14: invokespecial #11                 // Method maybeGetDriverClassName:()V
      17: aload_0
      18: aload_2
      19: invokespecial #12                 // Method bind:(Ljavax/sql/DataSource;)V
      22: aload_2
      23: areturn

  private void maybeGetDriverClassName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: ldc           #13                 // String driverClassName
       6: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      11: ifne          64
      14: aload_0
      15: getfield      #6                  // Field properties:Ljava/util/Map;
      18: ldc           #15                 // String url
      20: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      25: ifeq          64
      28: aload_0
      29: getfield      #6                  // Field properties:Ljava/util/Map;
      32: ldc           #15                 // String url
      34: invokeinterface #16,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #17                 // class java/lang/String
      42: astore_1
      43: aload_1
      44: invokestatic  #18                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromJdbcUrl:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      47: invokevirtual #19                 // Method org/springframework/boot/jdbc/DatabaseDriver.getDriverClassName:()Ljava/lang/String;
      50: astore_2
      51: aload_0
      52: getfield      #6                  // Field properties:Ljava/util/Map;
      55: ldc           #13                 // String driverClassName
      57: aload_2
      58: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: return

  private void bind(javax.sql.DataSource);
    Code:
       0: new           #21                 // class org/springframework/beans/MutablePropertyValues
       3: dup
       4: aload_0
       5: getfield      #6                  // Field properties:Ljava/util/Map;
       8: invokespecial #22                 // Method org/springframework/beans/MutablePropertyValues."<init>":(Ljava/util/Map;)V
      11: astore_2
      12: new           #23                 // class org/springframework/boot/bind/RelaxedDataBinder
      15: dup
      16: aload_1
      17: invokespecial #24                 // Method org/springframework/boot/bind/RelaxedDataBinder."<init>":(Ljava/lang/Object;)V
      20: ldc           #15                 // String url
      22: iconst_1
      23: anewarray     #17                 // class java/lang/String
      26: dup
      27: iconst_0
      28: ldc           #25                 // String jdbcUrl
      30: aastore
      31: invokevirtual #26                 // Method org/springframework/boot/bind/RelaxedDataBinder.withAlias:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedDataBinder;
      34: ldc           #27                 // String username
      36: iconst_1
      37: anewarray     #17                 // class java/lang/String
      40: dup
      41: iconst_0
      42: ldc           #28                 // String user
      44: aastore
      45: invokevirtual #26                 // Method org/springframework/boot/bind/RelaxedDataBinder.withAlias:(Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedDataBinder;
      48: aload_2
      49: invokevirtual #29                 // Method org/springframework/boot/bind/RelaxedDataBinder.bind:(Lorg/springframework/beans/PropertyValues;)V
      52: return

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder type(java.lang.Class<? extends javax.sql.DataSource>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field type:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder url(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: ldc           #15                 // String url
       6: aload_1
       7: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder driverClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: ldc           #13                 // String driverClassName
       6: aload_1
       7: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder username(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: ldc           #27                 // String username
       6: aload_1
       7: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder password(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field properties:Ljava/util/Map;
       4: ldc           #31                 // String password
       6: aload_1
       7: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: aload_0
      14: areturn

  public java.lang.Class<? extends javax.sql.DataSource> findType();
    Code:
       0: aload_0
       1: getfield      #30                 // Field type:Ljava/lang/Class;
       4: ifnull        12
       7: aload_0
       8: getfield      #30                 // Field type:Ljava/lang/Class;
      11: areturn
      12: getstatic     #32                 // Field DATA_SOURCE_TYPE_NAMES:[Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: arraylength
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_2
      23: if_icmpge     49
      26: aload_1
      27: iload_3
      28: aaload
      29: astore        4
      31: aload         4
      33: aload_0
      34: getfield      #7                  // Field classLoader:Ljava/lang/ClassLoader;
      37: invokestatic  #33                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      40: areturn
      41: astore        5
      43: iinc          3, 1
      46: goto          21
      49: aconst_null
      50: areturn
    Exception table:
       from    to  target type
          31    40    41   Class java/lang/Exception

  private java.lang.Class<? extends javax.sql.DataSource> getType();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method findType:()Ljava/lang/Class;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: new           #36                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #37                 // String No supported DataSource type found
      17: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow

  static {};
    Code:
       0: iconst_4
       1: anewarray     #17                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #39                 // String org.apache.tomcat.jdbc.pool.DataSource
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #40                 // String com.zaxxer.hikari.HikariDataSource
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #41                 // String org.apache.commons.dbcp.BasicDataSource
      18: aastore
      19: dup
      20: iconst_3
      21: ldc           #42                 // String org.apache.commons.dbcp2.BasicDataSource
      23: aastore
      24: putstatic     #32                 // Field DATA_SOURCE_TYPE_NAMES:[Ljava/lang/String;
      27: return
}
