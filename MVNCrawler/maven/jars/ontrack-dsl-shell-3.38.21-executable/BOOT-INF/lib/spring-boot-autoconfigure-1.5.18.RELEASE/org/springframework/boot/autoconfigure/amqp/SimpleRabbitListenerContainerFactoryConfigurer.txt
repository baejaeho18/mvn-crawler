Compiled from "SimpleRabbitListenerContainerFactoryConfigurer.java"
public final class org.springframework.boot.autoconfigure.amqp.SimpleRabbitListenerContainerFactoryConfigurer {
  private org.springframework.amqp.support.converter.MessageConverter messageConverter;

  private org.springframework.amqp.rabbit.retry.MessageRecoverer messageRecoverer;

  private org.springframework.boot.autoconfigure.amqp.RabbitProperties rabbitProperties;

  public org.springframework.boot.autoconfigure.amqp.SimpleRabbitListenerContainerFactoryConfigurer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  void setMessageConverter(org.springframework.amqp.support.converter.MessageConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field messageConverter:Lorg/springframework/amqp/support/converter/MessageConverter;
       5: return

  void setMessageRecoverer(org.springframework.amqp.rabbit.retry.MessageRecoverer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field messageRecoverer:Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;
       5: return

  void setRabbitProperties(org.springframework.boot.autoconfigure.amqp.RabbitProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field rabbitProperties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
       5: return

  public void configure(org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory, org.springframework.amqp.rabbit.connection.ConnectionFactory);
    Code:
       0: aload_1
       1: ldc           #5                  // String Factory must not be null
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #7                  // String ConnectionFactory must not be null
       9: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_1
      13: aload_2
      14: invokevirtual #8                  // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setConnectionFactory:(Lorg/springframework/amqp/rabbit/connection/ConnectionFactory;)V
      17: aload_0
      18: getfield      #2                  // Field messageConverter:Lorg/springframework/amqp/support/converter/MessageConverter;
      21: ifnull        32
      24: aload_1
      25: aload_0
      26: getfield      #2                  // Field messageConverter:Lorg/springframework/amqp/support/converter/MessageConverter;
      29: invokevirtual #9                  // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setMessageConverter:(Lorg/springframework/amqp/support/converter/MessageConverter;)V
      32: aload_0
      33: getfield      #4                  // Field rabbitProperties:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties;
      36: invokevirtual #10                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties.getListener:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener;
      39: invokevirtual #11                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener.getSimple:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer;
      42: astore_3
      43: aload_1
      44: aload_3
      45: invokevirtual #12                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.isAutoStartup:()Z
      48: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: invokevirtual #14                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setAutoStartup:(Ljava/lang/Boolean;)V
      54: aload_3
      55: invokevirtual #15                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getAcknowledgeMode:()Lorg/springframework/amqp/core/AcknowledgeMode;
      58: ifnull        69
      61: aload_1
      62: aload_3
      63: invokevirtual #15                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getAcknowledgeMode:()Lorg/springframework/amqp/core/AcknowledgeMode;
      66: invokevirtual #16                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setAcknowledgeMode:(Lorg/springframework/amqp/core/AcknowledgeMode;)V
      69: aload_3
      70: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getConcurrency:()Ljava/lang/Integer;
      73: ifnull        84
      76: aload_1
      77: aload_3
      78: invokevirtual #17                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getConcurrency:()Ljava/lang/Integer;
      81: invokevirtual #18                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setConcurrentConsumers:(Ljava/lang/Integer;)V
      84: aload_3
      85: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getMaxConcurrency:()Ljava/lang/Integer;
      88: ifnull        99
      91: aload_1
      92: aload_3
      93: invokevirtual #19                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getMaxConcurrency:()Ljava/lang/Integer;
      96: invokevirtual #20                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setMaxConcurrentConsumers:(Ljava/lang/Integer;)V
      99: aload_3
     100: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getPrefetch:()Ljava/lang/Integer;
     103: ifnull        114
     106: aload_1
     107: aload_3
     108: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getPrefetch:()Ljava/lang/Integer;
     111: invokevirtual #22                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setPrefetchCount:(Ljava/lang/Integer;)V
     114: aload_3
     115: invokevirtual #23                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getTransactionSize:()Ljava/lang/Integer;
     118: ifnull        129
     121: aload_1
     122: aload_3
     123: invokevirtual #23                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getTransactionSize:()Ljava/lang/Integer;
     126: invokevirtual #24                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setTxSize:(Ljava/lang/Integer;)V
     129: aload_3
     130: invokevirtual #25                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getDefaultRequeueRejected:()Ljava/lang/Boolean;
     133: ifnull        144
     136: aload_1
     137: aload_3
     138: invokevirtual #25                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getDefaultRequeueRejected:()Ljava/lang/Boolean;
     141: invokevirtual #26                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setDefaultRequeueRejected:(Ljava/lang/Boolean;)V
     144: aload_3
     145: invokevirtual #27                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getIdleEventInterval:()Ljava/lang/Long;
     148: ifnull        159
     151: aload_1
     152: aload_3
     153: invokevirtual #27                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getIdleEventInterval:()Ljava/lang/Long;
     156: invokevirtual #28                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setIdleEventInterval:(Ljava/lang/Long;)V
     159: aload_3
     160: invokevirtual #29                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$AmqpContainer.getRetry:()Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry;
     163: astore        4
     165: aload         4
     167: invokevirtual #30                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.isEnabled:()Z
     170: ifeq          271
     173: aload         4
     175: invokevirtual #31                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.isStateless:()Z
     178: ifeq          187
     181: invokestatic  #32                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.stateless:()Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder$StatelessRetryInterceptorBuilder;
     184: goto          190
     187: invokestatic  #33                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.stateful:()Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder$StatefulRetryInterceptorBuilder;
     190: astore        5
     192: aload         5
     194: aload         4
     196: invokevirtual #34                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.getMaxAttempts:()I
     199: invokevirtual #35                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.maxAttempts:(I)Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder;
     202: pop
     203: aload         5
     205: aload         4
     207: invokevirtual #36                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.getInitialInterval:()J
     210: aload         4
     212: invokevirtual #37                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.getMultiplier:()D
     215: aload         4
     217: invokevirtual #38                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$ListenerRetry.getMaxInterval:()J
     220: invokevirtual #39                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.backOffOptions:(JDJ)Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder;
     223: pop
     224: aload_0
     225: getfield      #3                  // Field messageRecoverer:Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;
     228: ifnull        238
     231: aload_0
     232: getfield      #3                  // Field messageRecoverer:Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;
     235: goto          245
     238: new           #40                 // class org/springframework/amqp/rabbit/retry/RejectAndDontRequeueRecoverer
     241: dup
     242: invokespecial #41                 // Method org/springframework/amqp/rabbit/retry/RejectAndDontRequeueRecoverer."<init>":()V
     245: astore        6
     247: aload         5
     249: aload         6
     251: invokevirtual #42                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.recoverer:(Lorg/springframework/amqp/rabbit/retry/MessageRecoverer;)Lorg/springframework/amqp/rabbit/config/RetryInterceptorBuilder;
     254: pop
     255: aload_1
     256: iconst_1
     257: anewarray     #43                 // class org/aopalliance/aop/Advice
     260: dup
     261: iconst_0
     262: aload         5
     264: invokevirtual #44                 // Method org/springframework/amqp/rabbit/config/RetryInterceptorBuilder.build:()Lorg/aopalliance/intercept/MethodInterceptor;
     267: aastore
     268: invokevirtual #45                 // Method org/springframework/amqp/rabbit/config/SimpleRabbitListenerContainerFactory.setAdviceChain:([Lorg/aopalliance/aop/Advice;)V
     271: return
}
