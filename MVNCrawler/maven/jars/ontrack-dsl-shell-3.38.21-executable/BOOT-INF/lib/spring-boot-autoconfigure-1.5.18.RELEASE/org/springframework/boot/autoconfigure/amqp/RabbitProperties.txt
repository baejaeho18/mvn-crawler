Compiled from "RabbitProperties.java"
public class org.springframework.boot.autoconfigure.amqp.RabbitProperties {
  private java.lang.String host;

  private int port;

  private java.lang.String username;

  private java.lang.String password;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl ssl;

  private java.lang.String virtualHost;

  private java.lang.String addresses;

  private java.lang.Integer requestedHeartbeat;

  private boolean publisherConfirms;

  private boolean publisherReturns;

  private java.lang.Integer connectionTimeout;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache cache;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener listener;

  private final org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template template;

  private java.util.List<org.springframework.boot.autoconfigure.amqp.RabbitProperties$Address> parsedAddresses;

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String localhost
       7: putfield      #3                  // Field host:Ljava/lang/String;
      10: aload_0
      11: sipush        5672
      14: putfield      #4                  // Field port:I
      17: aload_0
      18: new           #5                  // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl
      21: dup
      22: invokespecial #6                  // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl."<init>":()V
      25: putfield      #7                  // Field ssl:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
      28: aload_0
      29: new           #8                  // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache
      32: dup
      33: invokespecial #9                  // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache."<init>":()V
      36: putfield      #10                 // Field cache:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache;
      39: aload_0
      40: new           #11                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener
      43: dup
      44: invokespecial #12                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener."<init>":()V
      47: putfield      #13                 // Field listener:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener;
      50: aload_0
      51: new           #14                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template
      54: dup
      55: invokespecial #15                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Template."<init>":()V
      58: putfield      #16                 // Field template:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
      61: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field host:Ljava/lang/String;
       4: areturn

  public java.lang.String determineHost();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #19                 // Method getHost:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: invokestatic  #22                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$000:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      31: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field host:Ljava/lang/String;
       5: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #4                  // Field port:I
       4: ireturn

  public int determinePort();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #23                 // Method getPort:()I
      14: ireturn
      15: aload_0
      16: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #24                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$100:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)I
      33: ireturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field port:I
       5: return

  public java.lang.String getAddresses();
    Code:
       0: aload_0
       1: getfield      #25                 // Field addresses:Ljava/lang/String;
       4: areturn

  public java.lang.String determineAddresses();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          40
      10: new           #26                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_0
      18: getfield      #3                  // Field host:Ljava/lang/String;
      21: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #29                 // String :
      26: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #4                  // Field port:I
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
      40: new           #32                 // class java/util/ArrayList
      43: dup
      44: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
      47: astore_1
      48: aload_0
      49: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
      52: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore_2
      58: aload_2
      59: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          116
      67: aload_2
      68: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      76: astore_3
      77: aload_1
      78: new           #26                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      85: aload_3
      86: invokestatic  #22                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$000:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      89: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #29                 // String :
      94: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_3
      98: invokestatic  #24                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$100:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)I
     101: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          58
     116: aload_1
     117: invokestatic  #38                 // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
     120: areturn

  public void setAddresses(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field addresses:Ljava/lang/String;
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokespecial #39                 // Method parseAddresses:(Ljava/lang/String;)Ljava/util/List;
      11: putfield      #17                 // Field parsedAddresses:Ljava/util/List;
      14: return

  private java.util.List<org.springframework.boot.autoconfigure.amqp.RabbitProperties$Address> parseAddresses(java.lang.String);
    Code:
       0: new           #32                 // class java/util/ArrayList
       3: dup
       4: invokespecial #33                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokestatic  #40                 // Method org/springframework/util/StringUtils.commaDelimitedListToStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      12: astore_3
      13: aload_3
      14: arraylength
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     56
      27: aload_3
      28: iload         5
      30: aaload
      31: astore        6
      33: aload_2
      34: new           #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      37: dup
      38: aload         6
      40: aconst_null
      41: invokespecial #41                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address."<init>":(Ljava/lang/String;Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$1;)V
      44: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          5, 1
      53: goto          20
      56: aload_2
      57: areturn

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #42                 // Field username:Ljava/lang/String;
       4: areturn

  public java.lang.String determineUsername();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #42                 // Field username:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #43                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$300:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      33: ifnull        43
      36: aload_1
      37: invokestatic  #43                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$300:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: getfield      #42                 // Field username:Ljava/lang/String;
      47: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #42                 // Field username:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #44                 // Field password:Ljava/lang/String;
       4: areturn

  public java.lang.String determinePassword();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #45                 // Method getPassword:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #46                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$400:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      33: ifnull        43
      36: aload_1
      37: invokestatic  #46                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$400:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: invokevirtual #45                 // Method getPassword:()Ljava/lang/String;
      47: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field password:Ljava/lang/String;
       5: return

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Ssl getSsl();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ssl:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Ssl;
       4: areturn

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: getfield      #47                 // Field virtualHost:Ljava/lang/String;
       4: areturn

  public java.lang.String determineVirtualHost();
    Code:
       0: aload_0
       1: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
       4: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       7: ifeq          15
      10: aload_0
      11: invokevirtual #48                 // Method getVirtualHost:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #17                 // Field parsedAddresses:Ljava/util/List;
      19: iconst_0
      20: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #21                 // class org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address
      28: astore_1
      29: aload_1
      30: invokestatic  #49                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$500:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      33: ifnull        43
      36: aload_1
      37: invokestatic  #49                 // Method org/springframework/boot/autoconfigure/amqp/RabbitProperties$Address.access$500:(Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Address;)Ljava/lang/String;
      40: goto          47
      43: aload_0
      44: invokevirtual #48                 // Method getVirtualHost:()Ljava/lang/String;
      47: areturn

  public void setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #50                 // String
       3: aload_1
       4: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       7: ifeq          15
      10: ldc           #52                 // String /
      12: goto          16
      15: aload_1
      16: putfield      #47                 // Field virtualHost:Ljava/lang/String;
      19: return

  public java.lang.Integer getRequestedHeartbeat();
    Code:
       0: aload_0
       1: getfield      #53                 // Field requestedHeartbeat:Ljava/lang/Integer;
       4: areturn

  public void setRequestedHeartbeat(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field requestedHeartbeat:Ljava/lang/Integer;
       5: return

  public boolean isPublisherConfirms();
    Code:
       0: aload_0
       1: getfield      #54                 // Field publisherConfirms:Z
       4: ireturn

  public void setPublisherConfirms(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field publisherConfirms:Z
       5: return

  public boolean isPublisherReturns();
    Code:
       0: aload_0
       1: getfield      #55                 // Field publisherReturns:Z
       4: ireturn

  public void setPublisherReturns(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #55                 // Field publisherReturns:Z
       5: return

  public java.lang.Integer getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #56                 // Field connectionTimeout:Ljava/lang/Integer;
       4: areturn

  public void setConnectionTimeout(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #56                 // Field connectionTimeout:Ljava/lang/Integer;
       5: return

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Cache getCache();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cache:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Cache;
       4: areturn

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Listener getListener();
    Code:
       0: aload_0
       1: getfield      #13                 // Field listener:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Listener;
       4: areturn

  public org.springframework.boot.autoconfigure.amqp.RabbitProperties$Template getTemplate();
    Code:
       0: aload_0
       1: getfield      #16                 // Field template:Lorg/springframework/boot/autoconfigure/amqp/RabbitProperties$Template;
       4: areturn
}
