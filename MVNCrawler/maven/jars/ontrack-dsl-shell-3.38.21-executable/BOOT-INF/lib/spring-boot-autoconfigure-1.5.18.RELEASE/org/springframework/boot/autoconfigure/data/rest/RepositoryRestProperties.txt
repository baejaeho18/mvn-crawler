Compiled from "RepositoryRestProperties.java"
public class org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties {
  private java.lang.String basePath;

  private java.lang.Integer defaultPageSize;

  private java.lang.Integer maxPageSize;

  private java.lang.String pageParamName;

  private java.lang.String limitParamName;

  private java.lang.String sortParamName;

  private org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy$RepositoryDetectionStrategies detectionStrategy;

  private org.springframework.http.MediaType defaultMediaType;

  private java.lang.Boolean returnBodyOnCreate;

  private java.lang.Boolean returnBodyOnUpdate;

  private java.lang.Boolean enableEnumTranslation;

  public org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies.DEFAULT:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
       8: putfield      #3                  // Field detectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
      11: return

  public java.lang.String getBasePath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field basePath:Ljava/lang/String;
       4: areturn

  public void setBasePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field basePath:Ljava/lang/String;
       5: return

  public java.lang.Integer getDefaultPageSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultPageSize:Ljava/lang/Integer;
       4: areturn

  public void setDefaultPageSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field defaultPageSize:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getMaxPageSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxPageSize:Ljava/lang/Integer;
       4: areturn

  public void setMaxPageSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field maxPageSize:Ljava/lang/Integer;
       5: return

  public java.lang.String getPageParamName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pageParamName:Ljava/lang/String;
       4: areturn

  public void setPageParamName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field pageParamName:Ljava/lang/String;
       5: return

  public java.lang.String getLimitParamName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field limitParamName:Ljava/lang/String;
       4: areturn

  public void setLimitParamName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field limitParamName:Ljava/lang/String;
       5: return

  public java.lang.String getSortParamName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field sortParamName:Ljava/lang/String;
       4: areturn

  public void setSortParamName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field sortParamName:Ljava/lang/String;
       5: return

  public org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy$RepositoryDetectionStrategies getDetectionStrategy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field detectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
       4: areturn

  public void setDetectionStrategy(org.springframework.data.rest.core.mapping.RepositoryDetectionStrategy$RepositoryDetectionStrategies);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field detectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
       5: return

  public org.springframework.http.MediaType getDefaultMediaType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
       4: areturn

  public void setDefaultMediaType(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
       5: return

  public java.lang.Boolean getReturnBodyOnCreate();
    Code:
       0: aload_0
       1: getfield      #11                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
       4: areturn

  public void setReturnBodyOnCreate(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getReturnBodyOnUpdate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
       4: areturn

  public void setReturnBodyOnUpdate(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
       5: return

  public java.lang.Boolean getEnableEnumTranslation();
    Code:
       0: aload_0
       1: getfield      #13                 // Field enableEnumTranslation:Ljava/lang/Boolean;
       4: areturn

  public void setEnableEnumTranslation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field enableEnumTranslation:Ljava/lang/Boolean;
       5: return

  public void applyTo(org.springframework.data.rest.core.config.RepositoryRestConfiguration);
    Code:
       0: aload_0
       1: getfield      #4                  // Field basePath:Ljava/lang/String;
       4: ifnull        16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field basePath:Ljava/lang/String;
      12: invokevirtual #14                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setBasePath:(Ljava/lang/String;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      15: pop
      16: aload_0
      17: getfield      #5                  // Field defaultPageSize:Ljava/lang/Integer;
      20: ifnull        35
      23: aload_1
      24: aload_0
      25: getfield      #5                  // Field defaultPageSize:Ljava/lang/Integer;
      28: invokevirtual #15                 // Method java/lang/Integer.intValue:()I
      31: invokevirtual #16                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setDefaultPageSize:(I)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      34: pop
      35: aload_0
      36: getfield      #6                  // Field maxPageSize:Ljava/lang/Integer;
      39: ifnull        54
      42: aload_1
      43: aload_0
      44: getfield      #6                  // Field maxPageSize:Ljava/lang/Integer;
      47: invokevirtual #15                 // Method java/lang/Integer.intValue:()I
      50: invokevirtual #17                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setMaxPageSize:(I)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      53: pop
      54: aload_0
      55: getfield      #7                  // Field pageParamName:Ljava/lang/String;
      58: ifnull        70
      61: aload_1
      62: aload_0
      63: getfield      #7                  // Field pageParamName:Ljava/lang/String;
      66: invokevirtual #18                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setPageParamName:(Ljava/lang/String;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      69: pop
      70: aload_0
      71: getfield      #8                  // Field limitParamName:Ljava/lang/String;
      74: ifnull        86
      77: aload_1
      78: aload_0
      79: getfield      #8                  // Field limitParamName:Ljava/lang/String;
      82: invokevirtual #19                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setLimitParamName:(Ljava/lang/String;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
      85: pop
      86: aload_0
      87: getfield      #9                  // Field sortParamName:Ljava/lang/String;
      90: ifnull        102
      93: aload_1
      94: aload_0
      95: getfield      #9                  // Field sortParamName:Ljava/lang/String;
      98: invokevirtual #20                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setSortParamName:(Ljava/lang/String;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
     101: pop
     102: aload_0
     103: getfield      #3                  // Field detectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
     106: ifnull        118
     109: aload_1
     110: aload_0
     111: getfield      #3                  // Field detectionStrategy:Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy$RepositoryDetectionStrategies;
     114: invokevirtual #21                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setRepositoryDetectionStrategy:(Lorg/springframework/data/rest/core/mapping/RepositoryDetectionStrategy;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
     117: pop
     118: aload_0
     119: getfield      #10                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
     122: ifnull        134
     125: aload_1
     126: aload_0
     127: getfield      #10                 // Field defaultMediaType:Lorg/springframework/http/MediaType;
     130: invokevirtual #22                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setDefaultMediaType:(Lorg/springframework/http/MediaType;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
     133: pop
     134: aload_0
     135: getfield      #11                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
     138: ifnull        150
     141: aload_1
     142: aload_0
     143: getfield      #11                 // Field returnBodyOnCreate:Ljava/lang/Boolean;
     146: invokevirtual #23                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setReturnBodyOnCreate:(Ljava/lang/Boolean;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
     149: pop
     150: aload_0
     151: getfield      #12                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
     154: ifnull        166
     157: aload_1
     158: aload_0
     159: getfield      #12                 // Field returnBodyOnUpdate:Ljava/lang/Boolean;
     162: invokevirtual #24                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setReturnBodyOnUpdate:(Ljava/lang/Boolean;)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
     165: pop
     166: aload_0
     167: getfield      #13                 // Field enableEnumTranslation:Ljava/lang/Boolean;
     170: ifnull        185
     173: aload_1
     174: aload_0
     175: getfield      #13                 // Field enableEnumTranslation:Ljava/lang/Boolean;
     178: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
     181: invokevirtual #26                 // Method org/springframework/data/rest/core/config/RepositoryRestConfiguration.setEnableEnumTranslation:(Z)Lorg/springframework/data/rest/core/config/RepositoryRestConfiguration;
     184: pop
     185: return
}
