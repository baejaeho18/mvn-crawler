Compiled from "CodedOutputStream.java"
public final class kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream {
  private final byte[] buffer;

  private final int limit;

  private int position;

  private int totalBytesWritten;

  private final java.io.OutputStream output;

  static int computePreferredBufferSize(int);
    Code:
       0: iload_0
       1: sipush        4096
       4: if_icmple     11
       7: sipush        4096
      10: ireturn
      11: iload_0
      12: ireturn

  private kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream(java.io.OutputStream, byte[]);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #43                 // Field totalBytesWritten:I
       9: aload_0
      10: aload_1
      11: putfield      #41                 // Field output:Ljava/io/OutputStream;
      14: aload_0
      15: aload_2
      16: putfield      #39                 // Field buffer:[B
      19: aload_0
      20: iconst_0
      21: putfield      #42                 // Field position:I
      24: aload_0
      25: aload_2
      26: arraylength
      27: putfield      #40                 // Field limit:I
      30: return

  public static kotlin.reflect.jvm.internal.impl.protobuf.CodedOutputStream newInstance(java.io.OutputStream, int);
    Code:
       0: new           #16                 // class kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream
       3: dup
       4: aload_0
       5: iload_1
       6: newarray       byte
       8: invokespecial #54                 // Method "<init>":(Ljava/io/OutputStream;[B)V
      11: areturn

  public void writeDouble(int, double) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: dload_2
       8: invokevirtual #71                 // Method writeDoubleNoTag:(D)V
      11: return

  public void writeFloat(int, float) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_5
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: fload_2
       8: invokevirtual #73                 // Method writeFloatNoTag:(F)V
      11: return

  public void writeInt32(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: iload_2
       8: invokevirtual #75                 // Method writeInt32NoTag:(I)V
      11: return

  public void writeBool(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: iload_2
       8: invokevirtual #69                 // Method writeBoolNoTag:(Z)V
      11: return

  public void writeGroup(int, kotlin.reflect.jvm.internal.impl.protobuf.MessageLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: aload_2
       8: invokevirtual #74                 // Method writeGroupNoTag:(Lkotlin/reflect/jvm/internal/impl/protobuf/MessageLite;)V
      11: aload_0
      12: iload_1
      13: iconst_4
      14: invokevirtual #89                 // Method writeTag:(II)V
      17: return

  public void writeMessage(int, kotlin.reflect.jvm.internal.impl.protobuf.MessageLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: aload_2
       8: invokevirtual #77                 // Method writeMessageNoTag:(Lkotlin/reflect/jvm/internal/impl/protobuf/MessageLite;)V
      11: return

  public void writeBytes(int, kotlin.reflect.jvm.internal.impl.protobuf.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: aload_2
       8: invokevirtual #70                 // Method writeBytesNoTag:(Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;)V
      11: return

  public void writeUInt32(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: iload_2
       8: invokevirtual #91                 // Method writeUInt32NoTag:(I)V
      11: return

  public void writeEnum(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: iload_2
       8: invokevirtual #72                 // Method writeEnumNoTag:(I)V
      11: return

  public void writeSInt64(int, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: lload_2
       8: invokevirtual #88                 // Method writeSInt64NoTag:(J)V
      11: return

  public void writeMessageSetExtension(int, kotlin.reflect.jvm.internal.impl.protobuf.MessageLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_3
       3: invokevirtual #89                 // Method writeTag:(II)V
       6: aload_0
       7: iconst_2
       8: iload_1
       9: invokevirtual #90                 // Method writeUInt32:(II)V
      12: aload_0
      13: iconst_3
      14: aload_2
      15: invokevirtual #76                 // Method writeMessage:(ILkotlin/reflect/jvm/internal/impl/protobuf/MessageLite;)V
      18: aload_0
      19: iconst_1
      20: iconst_4
      21: invokevirtual #89                 // Method writeTag:(II)V
      24: return

  public void writeDoubleNoTag(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #45                 // Method java/lang/Double.doubleToRawLongBits:(D)J
       5: invokevirtual #85                 // Method writeRawLittleEndian64:(J)V
       8: return

  public void writeFloatNoTag(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #46                 // Method java/lang/Float.floatToRawIntBits:(F)I
       5: invokevirtual #84                 // Method writeRawLittleEndian32:(I)V
       8: return

  public void writeUInt64NoTag(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #87                 // Method writeRawVarint64:(J)V
       5: return

  public void writeInt64NoTag(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #87                 // Method writeRawVarint64:(J)V
       5: return

  public void writeInt32NoTag(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iflt          12
       4: aload_0
       5: iload_1
       6: invokevirtual #86                 // Method writeRawVarint32:(I)V
       9: goto          18
      12: aload_0
      13: iload_1
      14: i2l
      15: invokevirtual #87                 // Method writeRawVarint64:(J)V
      18: return

  public void writeFixed64NoTag(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #85                 // Method writeRawLittleEndian64:(J)V
       5: return

  public void writeFixed32NoTag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #84                 // Method writeRawLittleEndian32:(I)V
       5: return

  public void writeBoolNoTag(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #79                 // Method writeRawByte:(I)V
      13: return

  public void writeStringNoTag(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #3                  // String UTF-8
       3: invokevirtual #49                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
       6: astore_2
       7: aload_0
       8: aload_2
       9: arraylength
      10: invokevirtual #86                 // Method writeRawVarint32:(I)V
      13: aload_0
      14: aload_2
      15: invokevirtual #82                 // Method writeRawBytes:([B)V
      18: return

  public void writeGroupNoTag(kotlin.reflect.jvm.internal.impl.protobuf.MessageLite) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #96,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite.writeTo:(Lkotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream;)V
       7: return

  public void writeMessageNoTag(kotlin.reflect.jvm.internal.impl.protobuf.MessageLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #95,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite.getSerializedSize:()I
       7: invokevirtual #86                 // Method writeRawVarint32:(I)V
      10: aload_1
      11: aload_0
      12: invokeinterface #96,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite.writeTo:(Lkotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream;)V
      17: return

  public void writeBytesNoTag(kotlin.reflect.jvm.internal.impl.protobuf.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.size:()I
       5: invokevirtual #86                 // Method writeRawVarint32:(I)V
       8: aload_0
       9: aload_1
      10: invokevirtual #80                 // Method writeRawBytes:(Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;)V
      13: return

  public void writeByteArrayNoTag(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: invokevirtual #86                 // Method writeRawVarint32:(I)V
       6: aload_0
       7: aload_1
       8: invokevirtual #82                 // Method writeRawBytes:([B)V
      11: return

  public void writeUInt32NoTag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #86                 // Method writeRawVarint32:(I)V
       5: return

  public void writeEnumNoTag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method writeInt32NoTag:(I)V
       5: return

  public void writeSFixed32NoTag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #84                 // Method writeRawLittleEndian32:(I)V
       5: return

  public void writeSFixed64NoTag(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #85                 // Method writeRawLittleEndian64:(J)V
       5: return

  public void writeSInt32NoTag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #66                 // Method encodeZigZag32:(I)I
       5: invokevirtual #86                 // Method writeRawVarint32:(I)V
       8: return

  public void writeSInt64NoTag(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #67                 // Method encodeZigZag64:(J)J
       5: invokevirtual #87                 // Method writeRawVarint64:(J)V
       8: return

  public static int computeDoubleSize(int, double);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: dload_1
       5: invokestatic  #57                 // Method computeDoubleSizeNoTag:(D)I
       8: iadd
       9: ireturn

  public static int computeFloatSize(int, float);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: fload_1
       5: invokestatic  #59                 // Method computeFloatSizeNoTag:(F)I
       8: iadd
       9: ireturn

  public static int computeInt32Size(int, int);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: iload_1
       5: invokestatic  #60                 // Method computeInt32SizeNoTag:(I)I
       8: iadd
       9: ireturn

  public static int computeBoolSize(int, boolean);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: iload_1
       5: invokestatic  #55                 // Method computeBoolSizeNoTag:(Z)I
       8: iadd
       9: ireturn

  public static int computeMessageSize(int, kotlin.reflect.jvm.internal.impl.protobuf.MessageLite);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: aload_1
       5: invokestatic  #61                 // Method computeMessageSizeNoTag:(Lkotlin/reflect/jvm/internal/impl/protobuf/MessageLite;)I
       8: iadd
       9: ireturn

  public static int computeBytesSize(int, kotlin.reflect.jvm.internal.impl.protobuf.ByteString);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: aload_1
       5: invokestatic  #56                 // Method computeBytesSizeNoTag:(Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;)I
       8: iadd
       9: ireturn

  public static int computeEnumSize(int, int);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: iload_1
       5: invokestatic  #58                 // Method computeEnumSizeNoTag:(I)I
       8: iadd
       9: ireturn

  public static int computeSInt64Size(int, long);
    Code:
       0: iload_0
       1: invokestatic  #65                 // Method computeTagSize:(I)I
       4: lload_1
       5: invokestatic  #64                 // Method computeSInt64SizeNoTag:(J)I
       8: iadd
       9: ireturn

  public static int computeDoubleSizeNoTag(double);
    Code:
       0: bipush        8
       2: ireturn

  public static int computeFloatSizeNoTag(float);
    Code:
       0: iconst_4
       1: ireturn

  public static int computeUInt64SizeNoTag(long);
    Code:
       0: lload_0
       1: invokestatic  #63                 // Method computeRawVarint64Size:(J)I
       4: ireturn

  public static int computeInt64SizeNoTag(long);
    Code:
       0: lload_0
       1: invokestatic  #63                 // Method computeRawVarint64Size:(J)I
       4: ireturn

  public static int computeInt32SizeNoTag(int);
    Code:
       0: iload_0
       1: iflt          9
       4: iload_0
       5: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       8: ireturn
       9: bipush        10
      11: ireturn

  public static int computeFixed64SizeNoTag(long);
    Code:
       0: bipush        8
       2: ireturn

  public static int computeFixed32SizeNoTag(int);
    Code:
       0: iconst_4
       1: ireturn

  public static int computeBoolSizeNoTag(boolean);
    Code:
       0: iconst_1
       1: ireturn

  public static int computeStringSizeNoTag(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #3                  // String UTF-8
       3: invokevirtual #49                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
       6: astore_1
       7: aload_1
       8: arraylength
       9: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
      12: aload_1
      13: arraylength
      14: iadd
      15: ireturn
      16: astore_1
      17: new           #12                 // class java/lang/RuntimeException
      20: dup
      21: ldc           #4                  // String UTF-8 not supported.
      23: aload_1
      24: invokespecial #48                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/UnsupportedEncodingException

  public static int computeGroupSizeNoTag(kotlin.reflect.jvm.internal.impl.protobuf.MessageLite);
    Code:
       0: aload_0
       1: invokeinterface #95,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite.getSerializedSize:()I
       6: ireturn

  public static int computeMessageSizeNoTag(kotlin.reflect.jvm.internal.impl.protobuf.MessageLite);
    Code:
       0: aload_0
       1: invokeinterface #95,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/protobuf/MessageLite.getSerializedSize:()I
       6: istore_1
       7: iload_1
       8: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
      11: iload_1
      12: iadd
      13: ireturn

  public static int computeLazyFieldSizeNoTag(kotlin.reflect.jvm.internal.impl.protobuf.LazyFieldLite);
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method kotlin/reflect/jvm/internal/impl/protobuf/LazyFieldLite.getSerializedSize:()I
       4: istore_1
       5: iload_1
       6: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       9: iload_1
      10: iadd
      11: ireturn

  public static int computeBytesSizeNoTag(kotlin.reflect.jvm.internal.impl.protobuf.ByteString);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.size:()I
       4: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       7: aload_0
       8: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.size:()I
      11: iadd
      12: ireturn

  public static int computeByteArraySizeNoTag(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       5: aload_0
       6: arraylength
       7: iadd
       8: ireturn

  public static int computeUInt32SizeNoTag(int);
    Code:
       0: iload_0
       1: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       4: ireturn

  public static int computeEnumSizeNoTag(int);
    Code:
       0: iload_0
       1: invokestatic  #60                 // Method computeInt32SizeNoTag:(I)I
       4: ireturn

  public static int computeSFixed32SizeNoTag(int);
    Code:
       0: iconst_4
       1: ireturn

  public static int computeSFixed64SizeNoTag(long);
    Code:
       0: bipush        8
       2: ireturn

  public static int computeSInt32SizeNoTag(int);
    Code:
       0: iload_0
       1: invokestatic  #66                 // Method encodeZigZag32:(I)I
       4: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       7: ireturn

  public static int computeSInt64SizeNoTag(long);
    Code:
       0: lload_0
       1: invokestatic  #67                 // Method encodeZigZag64:(J)J
       4: invokestatic  #63                 // Method computeRawVarint64Size:(J)I
       7: ireturn

  private void refreshBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field output:Ljava/io/OutputStream;
       4: ifnonnull     15
       7: new           #17                 // class kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream$OutOfSpaceException
      10: dup
      11: invokespecial #92                 // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedOutputStream$OutOfSpaceException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #41                 // Field output:Ljava/io/OutputStream;
      19: aload_0
      20: getfield      #39                 // Field buffer:[B
      23: iconst_0
      24: aload_0
      25: getfield      #42                 // Field position:I
      28: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
      31: aload_0
      32: iconst_0
      33: putfield      #42                 // Field position:I
      36: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #41                 // Field output:Ljava/io/OutputStream;
       4: ifnull        11
       7: aload_0
       8: invokespecial #68                 // Method refreshBuffer:()V
      11: return

  public void writeRawByte(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #42                 // Field position:I
       4: aload_0
       5: getfield      #40                 // Field limit:I
       8: if_icmpne     15
      11: aload_0
      12: invokespecial #68                 // Method refreshBuffer:()V
      15: aload_0
      16: getfield      #39                 // Field buffer:[B
      19: aload_0
      20: dup
      21: getfield      #42                 // Field position:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #42                 // Field position:I
      30: iload_1
      31: bastore
      32: aload_0
      33: dup
      34: getfield      #43                 // Field totalBytesWritten:I
      37: iconst_1
      38: iadd
      39: putfield      #43                 // Field totalBytesWritten:I
      42: return

  public void writeRawByte(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: i2b
       3: invokevirtual #78                 // Method writeRawByte:(B)V
       6: return

  public void writeRawBytes(kotlin.reflect.jvm.internal.impl.protobuf.ByteString) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.size:()I
       7: invokevirtual #81                 // Method writeRawBytes:(Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString;II)V
      10: return

  public void writeRawBytes(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #83                 // Method writeRawBytes:([BII)V
       8: return

  public void writeRawBytes(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field limit:I
       4: aload_0
       5: getfield      #42                 // Field position:I
       8: isub
       9: iload_3
      10: if_icmplt     50
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #39                 // Field buffer:[B
      19: aload_0
      20: getfield      #42                 // Field position:I
      23: iload_3
      24: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      27: aload_0
      28: dup
      29: getfield      #42                 // Field position:I
      32: iload_3
      33: iadd
      34: putfield      #42                 // Field position:I
      37: aload_0
      38: dup
      39: getfield      #43                 // Field totalBytesWritten:I
      42: iload_3
      43: iadd
      44: putfield      #43                 // Field totalBytesWritten:I
      47: goto          156
      50: aload_0
      51: getfield      #40                 // Field limit:I
      54: aload_0
      55: getfield      #42                 // Field position:I
      58: isub
      59: istore        4
      61: aload_1
      62: iload_2
      63: aload_0
      64: getfield      #39                 // Field buffer:[B
      67: aload_0
      68: getfield      #42                 // Field position:I
      71: iload         4
      73: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      76: iload_2
      77: iload         4
      79: iadd
      80: istore_2
      81: iload_3
      82: iload         4
      84: isub
      85: istore_3
      86: aload_0
      87: aload_0
      88: getfield      #40                 // Field limit:I
      91: putfield      #42                 // Field position:I
      94: aload_0
      95: dup
      96: getfield      #43                 // Field totalBytesWritten:I
      99: iload         4
     101: iadd
     102: putfield      #43                 // Field totalBytesWritten:I
     105: aload_0
     106: invokespecial #68                 // Method refreshBuffer:()V
     109: iload_3
     110: aload_0
     111: getfield      #40                 // Field limit:I
     114: if_icmpgt     136
     117: aload_1
     118: iload_2
     119: aload_0
     120: getfield      #39                 // Field buffer:[B
     123: iconst_0
     124: iload_3
     125: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     128: aload_0
     129: iload_3
     130: putfield      #42                 // Field position:I
     133: goto          146
     136: aload_0
     137: getfield      #41                 // Field output:Ljava/io/OutputStream;
     140: aload_1
     141: iload_2
     142: iload_3
     143: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
     146: aload_0
     147: dup
     148: getfield      #43                 // Field totalBytesWritten:I
     151: iload_3
     152: iadd
     153: putfield      #43                 // Field totalBytesWritten:I
     156: return

  public void writeRawBytes(kotlin.reflect.jvm.internal.impl.protobuf.ByteString, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #40                 // Field limit:I
       4: aload_0
       5: getfield      #42                 // Field position:I
       8: isub
       9: iload_3
      10: if_icmplt     50
      13: aload_1
      14: aload_0
      15: getfield      #39                 // Field buffer:[B
      18: iload_2
      19: aload_0
      20: getfield      #42                 // Field position:I
      23: iload_3
      24: invokevirtual #51                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.copyTo:([BIII)V
      27: aload_0
      28: dup
      29: getfield      #42                 // Field position:I
      32: iload_3
      33: iadd
      34: putfield      #42                 // Field position:I
      37: aload_0
      38: dup
      39: getfield      #43                 // Field totalBytesWritten:I
      42: iload_3
      43: iadd
      44: putfield      #43                 // Field totalBytesWritten:I
      47: goto          156
      50: aload_0
      51: getfield      #40                 // Field limit:I
      54: aload_0
      55: getfield      #42                 // Field position:I
      58: isub
      59: istore        4
      61: aload_1
      62: aload_0
      63: getfield      #39                 // Field buffer:[B
      66: iload_2
      67: aload_0
      68: getfield      #42                 // Field position:I
      71: iload         4
      73: invokevirtual #51                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.copyTo:([BIII)V
      76: iload_2
      77: iload         4
      79: iadd
      80: istore_2
      81: iload_3
      82: iload         4
      84: isub
      85: istore_3
      86: aload_0
      87: aload_0
      88: getfield      #40                 // Field limit:I
      91: putfield      #42                 // Field position:I
      94: aload_0
      95: dup
      96: getfield      #43                 // Field totalBytesWritten:I
      99: iload         4
     101: iadd
     102: putfield      #43                 // Field totalBytesWritten:I
     105: aload_0
     106: invokespecial #68                 // Method refreshBuffer:()V
     109: iload_3
     110: aload_0
     111: getfield      #40                 // Field limit:I
     114: if_icmpgt     136
     117: aload_1
     118: aload_0
     119: getfield      #39                 // Field buffer:[B
     122: iload_2
     123: iconst_0
     124: iload_3
     125: invokevirtual #51                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.copyTo:([BIII)V
     128: aload_0
     129: iload_3
     130: putfield      #42                 // Field position:I
     133: goto          146
     136: aload_1
     137: aload_0
     138: getfield      #41                 // Field output:Ljava/io/OutputStream;
     141: iload_2
     142: iload_3
     143: invokevirtual #53                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.writeTo:(Ljava/io/OutputStream;II)V
     146: aload_0
     147: dup
     148: getfield      #43                 // Field totalBytesWritten:I
     151: iload_3
     152: iadd
     153: putfield      #43                 // Field totalBytesWritten:I
     156: return

  public void writeTag(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #94                 // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.makeTag:(II)I
       6: invokevirtual #86                 // Method writeRawVarint32:(I)V
       9: return

  public static int computeTagSize(int);
    Code:
       0: iload_0
       1: iconst_0
       2: invokestatic  #94                 // Method kotlin/reflect/jvm/internal/impl/protobuf/WireFormat.makeTag:(II)I
       5: invokestatic  #62                 // Method computeRawVarint32Size:(I)I
       8: ireturn

  public void writeRawVarint32(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        -128
       3: iand
       4: ifne          13
       7: aload_0
       8: iload_1
       9: invokevirtual #79                 // Method writeRawByte:(I)V
      12: return
      13: aload_0
      14: iload_1
      15: bipush        127
      17: iand
      18: sipush        128
      21: ior
      22: invokevirtual #79                 // Method writeRawByte:(I)V
      25: iload_1
      26: bipush        7
      28: iushr
      29: istore_1
      30: goto          0

  public static int computeRawVarint32Size(int);
    Code:
       0: iload_0
       1: bipush        -128
       3: iand
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: iload_0
      10: sipush        -16384
      13: iand
      14: ifne          19
      17: iconst_2
      18: ireturn
      19: iload_0
      20: ldc           #2                  // int -2097152
      22: iand
      23: ifne          28
      26: iconst_3
      27: ireturn
      28: iload_0
      29: ldc           #1                  // int -268435456
      31: iand
      32: ifne          37
      35: iconst_4
      36: ireturn
      37: iconst_5
      38: ireturn

  public void writeRawVarint64(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #37                 // long -128l
       4: land
       5: lconst_0
       6: lcmp
       7: ifne          17
      10: aload_0
      11: lload_1
      12: l2i
      13: invokevirtual #79                 // Method writeRawByte:(I)V
      16: return
      17: aload_0
      18: lload_1
      19: l2i
      20: bipush        127
      22: iand
      23: sipush        128
      26: ior
      27: invokevirtual #79                 // Method writeRawByte:(I)V
      30: lload_1
      31: bipush        7
      33: lushr
      34: lstore_1
      35: goto          0

  public static int computeRawVarint64Size(long);
    Code:
       0: lload_0
       1: ldc2_w        #37                 // long -128l
       4: land
       5: lconst_0
       6: lcmp
       7: ifne          12
      10: iconst_1
      11: ireturn
      12: lload_0
      13: ldc2_w        #35                 // long -16384l
      16: land
      17: lconst_0
      18: lcmp
      19: ifne          24
      22: iconst_2
      23: ireturn
      24: lload_0
      25: ldc2_w        #33                 // long -2097152l
      28: land
      29: lconst_0
      30: lcmp
      31: ifne          36
      34: iconst_3
      35: ireturn
      36: lload_0
      37: ldc2_w        #31                 // long -268435456l
      40: land
      41: lconst_0
      42: lcmp
      43: ifne          48
      46: iconst_4
      47: ireturn
      48: lload_0
      49: ldc2_w        #29                 // long -34359738368l
      52: land
      53: lconst_0
      54: lcmp
      55: ifne          60
      58: iconst_5
      59: ireturn
      60: lload_0
      61: ldc2_w        #27                 // long -4398046511104l
      64: land
      65: lconst_0
      66: lcmp
      67: ifne          73
      70: bipush        6
      72: ireturn
      73: lload_0
      74: ldc2_w        #25                 // long -562949953421312l
      77: land
      78: lconst_0
      79: lcmp
      80: ifne          86
      83: bipush        7
      85: ireturn
      86: lload_0
      87: ldc2_w        #23                 // long -72057594037927936l
      90: land
      91: lconst_0
      92: lcmp
      93: ifne          99
      96: bipush        8
      98: ireturn
      99: lload_0
     100: ldc2_w        #21                 // long -9223372036854775808l
     103: land
     104: lconst_0
     105: lcmp
     106: ifne          112
     109: bipush        9
     111: ireturn
     112: bipush        10
     114: ireturn

  public void writeRawLittleEndian32(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: sipush        255
       5: iand
       6: invokevirtual #79                 // Method writeRawByte:(I)V
       9: aload_0
      10: iload_1
      11: bipush        8
      13: ishr
      14: sipush        255
      17: iand
      18: invokevirtual #79                 // Method writeRawByte:(I)V
      21: aload_0
      22: iload_1
      23: bipush        16
      25: ishr
      26: sipush        255
      29: iand
      30: invokevirtual #79                 // Method writeRawByte:(I)V
      33: aload_0
      34: iload_1
      35: bipush        24
      37: ishr
      38: sipush        255
      41: iand
      42: invokevirtual #79                 // Method writeRawByte:(I)V
      45: return

  public void writeRawLittleEndian64(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: sipush        255
       6: iand
       7: invokevirtual #79                 // Method writeRawByte:(I)V
      10: aload_0
      11: lload_1
      12: bipush        8
      14: lshr
      15: l2i
      16: sipush        255
      19: iand
      20: invokevirtual #79                 // Method writeRawByte:(I)V
      23: aload_0
      24: lload_1
      25: bipush        16
      27: lshr
      28: l2i
      29: sipush        255
      32: iand
      33: invokevirtual #79                 // Method writeRawByte:(I)V
      36: aload_0
      37: lload_1
      38: bipush        24
      40: lshr
      41: l2i
      42: sipush        255
      45: iand
      46: invokevirtual #79                 // Method writeRawByte:(I)V
      49: aload_0
      50: lload_1
      51: bipush        32
      53: lshr
      54: l2i
      55: sipush        255
      58: iand
      59: invokevirtual #79                 // Method writeRawByte:(I)V
      62: aload_0
      63: lload_1
      64: bipush        40
      66: lshr
      67: l2i
      68: sipush        255
      71: iand
      72: invokevirtual #79                 // Method writeRawByte:(I)V
      75: aload_0
      76: lload_1
      77: bipush        48
      79: lshr
      80: l2i
      81: sipush        255
      84: iand
      85: invokevirtual #79                 // Method writeRawByte:(I)V
      88: aload_0
      89: lload_1
      90: bipush        56
      92: lshr
      93: l2i
      94: sipush        255
      97: iand
      98: invokevirtual #79                 // Method writeRawByte:(I)V
     101: return

  public static int encodeZigZag32(int);
    Code:
       0: iload_0
       1: iconst_1
       2: ishl
       3: iload_0
       4: bipush        31
       6: ishr
       7: ixor
       8: ireturn

  public static long encodeZigZag64(long);
    Code:
       0: lload_0
       1: iconst_1
       2: lshl
       3: lload_0
       4: bipush        63
       6: lshr
       7: lxor
       8: lreturn
}
