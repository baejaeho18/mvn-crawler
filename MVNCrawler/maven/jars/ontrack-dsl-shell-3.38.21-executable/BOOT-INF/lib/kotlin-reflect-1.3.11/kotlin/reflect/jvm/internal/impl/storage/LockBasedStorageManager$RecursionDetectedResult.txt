Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> {
  private final T value;

  private final boolean fallThrough;

  static final boolean $assertionsDisabled;

  public static <T> kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> value(T);
    Code:
       0: new           #9                  // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #21                 // Method "<init>":(Ljava/lang/Object;Z)V
       9: areturn

  public static <T> kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> fallThrough();
    Code:
       0: new           #9                  // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult
       3: dup
       4: aconst_null
       5: iconst_1
       6: invokespecial #21                 // Method "<init>":(Ljava/lang/Object;Z)V
       9: areturn

  private kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult(T, boolean);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #12                 // Field value:Ljava/lang/Object;
       9: aload_0
      10: iload_2
      11: putfield      #11                 // Field fallThrough:Z
      14: return

  public T getValue();
    Code:
       0: getstatic     #10                 // Field $assertionsDisabled:Z
       3: ifne          40
       6: aload_0
       7: getfield      #11                 // Field fallThrough:Z
      10: ifeq          40
      13: new           #3                  // class java/lang/AssertionError
      16: dup
      17: new           #7                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #1                  // String A value requested from FALL_THROUGH in
      26: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #13                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      39: athrow
      40: aload_0
      41: getfield      #12                 // Field value:Ljava/lang/Object;
      44: areturn

  public boolean isFallThrough();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fallThrough:Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method isFallThrough:()Z
       4: ifeq          12
       7: ldc           #2                  // String FALL_THROUGH
       9: goto          19
      12: aload_0
      13: getfield      #12                 // Field value:Ljava/lang/Object;
      16: invokestatic  #16                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      19: areturn

  static {};
    Code:
       0: ldc           #8                  // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
       2: invokevirtual #14                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: return
}
