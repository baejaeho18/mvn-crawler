Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue<T> implements kotlin.reflect.jvm.internal.impl.storage.NullableLazyValue<T> {
  private final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager storageManager;

  private final kotlin.jvm.functions.Function0<? extends T> computable;

  private volatile java.lang.Object value;

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #19                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.NOT_COMPUTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
       8: putfield      #17                 // Field value:Ljava/lang/Object;
      11: aload_0
      12: aload_1
      13: putfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      16: aload_0
      17: aload_2
      18: putfield      #15                 // Field computable:Lkotlin/jvm/functions/Function0;
      21: return

  public boolean isComputed();
    Code:
       0: aload_0
       1: getfield      #17                 // Field value:Ljava/lang/Object;
       4: getstatic     #19                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.NOT_COMPUTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
       7: if_acmpeq     24
      10: aload_0
      11: getfield      #17                 // Field value:Ljava/lang/Object;
      14: getstatic     #18                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      17: if_acmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public T invoke();
    Code:
       0: aload_0
       1: getfield      #17                 // Field value:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #9                  // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue
       9: ifne          17
      12: aload_1
      13: invokestatic  #30                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeThrowable:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: aload_0
      18: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      21: getfield      #14                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
      24: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      29: aload_0
      30: getfield      #17                 // Field value:Ljava/lang/Object;
      33: astore_1
      34: aload_1
      35: instanceof    #9                  // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue
      38: ifne          60
      41: aload_1
      42: invokestatic  #30                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeThrowable:(Ljava/lang/Object;)Ljava/lang/Object;
      45: astore_2
      46: aload_0
      47: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      50: getfield      #14                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
      53: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      58: aload_2
      59: areturn
      60: aload_1
      61: getstatic     #18                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      64: if_acmpne     106
      67: aload_0
      68: getstatic     #20                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.RECURSION_WAS_DETECTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      71: putfield      #17                 // Field value:Ljava/lang/Object;
      74: aload_0
      75: iconst_1
      76: invokevirtual #25                 // Method recursionDetected:(Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
      79: astore_2
      80: aload_2
      81: invokevirtual #27                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.isFallThrough:()Z
      84: ifne          106
      87: aload_2
      88: invokevirtual #26                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.getValue:()Ljava/lang/Object;
      91: astore_3
      92: aload_0
      93: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      96: getfield      #14                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
      99: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     104: aload_3
     105: areturn
     106: aload_1
     107: getstatic     #20                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.RECURSION_WAS_DETECTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     110: if_acmpne     145
     113: aload_0
     114: iconst_0
     115: invokevirtual #25                 // Method recursionDetected:(Z)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
     118: astore_2
     119: aload_2
     120: invokevirtual #27                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.isFallThrough:()Z
     123: ifne          145
     126: aload_2
     127: invokevirtual #26                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.getValue:()Ljava/lang/Object;
     130: astore_3
     131: aload_0
     132: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     135: getfield      #14                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
     138: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     143: aload_3
     144: areturn
     145: aload_0
     146: getstatic     #18                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     149: putfield      #17                 // Field value:Ljava/lang/Object;
     152: aload_0
     153: getfield      #15                 // Field computable:Lkotlin/jvm/functions/Function0;
     156: invokeinterface #33,  1           // InterfaceMethod kotlin/jvm/functions/Function0.invoke:()Ljava/lang/Object;
     161: astore_2
     162: aload_0
     163: aload_2
     164: putfield      #17                 // Field value:Ljava/lang/Object;
     167: aload_0
     168: aload_2
     169: invokevirtual #24                 // Method postCompute:(Ljava/lang/Object;)V
     172: aload_2
     173: astore_3
     174: aload_0
     175: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     178: getfield      #14                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
     181: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     186: aload_3
     187: areturn
     188: astore_2
     189: aload_2
     190: invokestatic  #28                 // Method kotlin/reflect/jvm/internal/impl/utils/ExceptionUtilsKt.isProcessCanceledException:(Ljava/lang/Throwable;)Z
     193: ifeq          208
     196: aload_0
     197: getstatic     #19                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.NOT_COMPUTED:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     200: putfield      #17                 // Field value:Ljava/lang/Object;
     203: aload_2
     204: checkcast     #2                  // class java/lang/RuntimeException
     207: athrow
     208: aload_0
     209: getfield      #17                 // Field value:Ljava/lang/Object;
     212: getstatic     #18                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     215: if_acmpne     226
     218: aload_0
     219: aload_2
     220: invokestatic  #29                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.escapeThrowable:(Ljava/lang/Throwable;)Ljava/lang/Object;
     223: putfield      #17                 // Field value:Ljava/lang/Object;
     226: aload_0
     227: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     230: invokestatic  #22                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$100:(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
     233: aload_2
     234: invokeinterface #34,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     239: athrow
     240: astore        4
     242: aload_0
     243: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     246: getfield      #14                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
     249: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     254: aload         4
     256: athrow
    Exception table:
       from    to  target type
         152   174   188   Class java/lang/Throwable
          29    46   240   any
          60    92   240   any
         106   131   240   any
         145   174   240   any
         188   242   240   any

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> recursionDetected(boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       4: invokevirtual #23                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.recursionDetectedDefault:()Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
       7: areturn

  protected void postCompute(T);
    Code:
       0: return
}
