Compiled from "LiteralByteString.java"
class kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString extends kotlin.reflect.jvm.internal.impl.protobuf.ByteString {
  protected final byte[] bytes;

  private int hash;

  kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString(byte[]);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #23                 // Field hash:I
       9: aload_0
      10: aload_1
      11: putfield      #22                 // Field bytes:[B
      14: return

  public byte byteAt(int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field bytes:[B
       4: iload_1
       5: baload
       6: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #22                 // Field bytes:[B
       4: arraylength
       5: ireturn

  protected void copyToInternal(byte[], int, int, int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field bytes:[B
       4: iload_2
       5: aload_1
       6: iload_3
       7: iload         4
       9: invokestatic  #35                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  void writeToInternal(java.io.OutputStream, int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #22                 // Field bytes:[B
       5: aload_0
       6: invokevirtual #40                 // Method getOffsetIntoBytes:()I
       9: iload_2
      10: iadd
      11: iload_3
      12: invokevirtual #24                 // Method java/io/OutputStream.write:([BII)V
      15: return

  public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #11                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #22                 // Field bytes:[B
       8: aload_0
       9: invokevirtual #40                 // Method getOffsetIntoBytes:()I
      12: aload_0
      13: invokevirtual #44                 // Method size:()I
      16: aload_1
      17: invokespecial #28                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      20: areturn

  public boolean isValidUtf8();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getOffsetIntoBytes:()I
       4: istore_1
       5: aload_0
       6: getfield      #22                 // Field bytes:[B
       9: iload_1
      10: iload_1
      11: aload_0
      12: invokevirtual #44                 // Method size:()I
      15: iadd
      16: invokestatic  #46                 // Method kotlin/reflect/jvm/internal/impl/protobuf/Utf8.isValidUtf8:([BII)Z
      19: ireturn

  protected int partialIsValidUtf8(int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getOffsetIntoBytes:()I
       4: iload_2
       5: iadd
       6: istore        4
       8: iload_1
       9: aload_0
      10: getfield      #22                 // Field bytes:[B
      13: iload         4
      15: iload         4
      17: iload_3
      18: iadd
      19: invokestatic  #47                 // Method kotlin/reflect/jvm/internal/impl/protobuf/Utf8.partialIsValidUtf8:(I[BII)I
      22: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class kotlin/reflect/jvm/internal/impl/protobuf/ByteString
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: invokevirtual #44                 // Method size:()I
      20: aload_1
      21: checkcast     #14                 // class kotlin/reflect/jvm/internal/impl/protobuf/ByteString
      24: invokevirtual #37                 // Method kotlin/reflect/jvm/internal/impl/protobuf/ByteString.size:()I
      27: if_icmpeq     32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #44                 // Method size:()I
      36: ifne          41
      39: iconst_1
      40: ireturn
      41: aload_1
      42: instanceof    #17                 // class kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString
      45: ifeq          62
      48: aload_0
      49: aload_1
      50: checkcast     #17                 // class kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString
      53: iconst_0
      54: aload_0
      55: invokevirtual #44                 // Method size:()I
      58: invokevirtual #39                 // Method equalsRange:(Lkotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString;II)Z
      61: ireturn
      62: aload_1
      63: instanceof    #20                 // class kotlin/reflect/jvm/internal/impl/protobuf/RopeByteString
      66: ifeq          75
      69: aload_1
      70: aload_0
      71: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ireturn
      75: new           #9                  // class java/lang/IllegalArgumentException
      78: dup
      79: aload_1
      80: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      83: invokestatic  #30                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      86: invokestatic  #30                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      89: astore_2
      90: new           #12                 // class java/lang/StringBuilder
      93: dup
      94: bipush        49
      96: aload_2
      97: invokevirtual #29                 // Method java/lang/String.length:()I
     100: iadd
     101: invokespecial #31                 // Method java/lang/StringBuilder."<init>":(I)V
     104: ldc           #2                  // String Has a new type of ByteString been created? Found
     106: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_2
     110: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     119: athrow

  boolean equalsRange(kotlin.reflect.jvm.internal.impl.protobuf.LiteralByteString, int, int);
    Code:
       0: iload_3
       1: aload_1
       2: invokevirtual #44                 // Method size:()I
       5: if_icmple     52
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: iload_3
      13: istore        4
      15: aload_0
      16: invokevirtual #44                 // Method size:()I
      19: istore        5
      21: new           #12                 // class java/lang/StringBuilder
      24: dup
      25: bipush        40
      27: invokespecial #31                 // Method java/lang/StringBuilder."<init>":(I)V
      30: ldc           #3                  // String Length too large:
      32: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload         4
      37: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: iload         5
      42: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_2
      53: iload_3
      54: iadd
      55: aload_1
      56: invokevirtual #44                 // Method size:()I
      59: if_icmple     124
      62: new           #9                  // class java/lang/IllegalArgumentException
      65: dup
      66: iload_2
      67: istore        4
      69: iload_3
      70: istore        5
      72: aload_1
      73: invokevirtual #44                 // Method size:()I
      76: istore        6
      78: new           #12                 // class java/lang/StringBuilder
      81: dup
      82: bipush        59
      84: invokespecial #31                 // Method java/lang/StringBuilder."<init>":(I)V
      87: ldc           #4                  // String Ran off end of other:
      89: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: iload         4
      94: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #1                  // String ,
      99: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: iload         5
     104: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     107: ldc           #1                  // String ,
     109: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: iload         6
     114: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: getfield      #22                 // Field bytes:[B
     128: astore        4
     130: aload_1
     131: getfield      #22                 // Field bytes:[B
     134: astore        5
     136: aload_0
     137: invokevirtual #40                 // Method getOffsetIntoBytes:()I
     140: iload_3
     141: iadd
     142: istore        6
     144: aload_0
     145: invokevirtual #40                 // Method getOffsetIntoBytes:()I
     148: istore        7
     150: aload_1
     151: invokevirtual #40                 // Method getOffsetIntoBytes:()I
     154: iload_2
     155: iadd
     156: istore        8
     158: iload         7
     160: iload         6
     162: if_icmpge     189
     165: aload         4
     167: iload         7
     169: baload
     170: aload         5
     172: iload         8
     174: baload
     175: if_icmpeq     180
     178: iconst_0
     179: ireturn
     180: iinc          7, 1
     183: iinc          8, 1
     186: goto          158
     189: iconst_1
     190: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field hash:I
       4: istore_1
       5: iload_1
       6: ifne          33
       9: aload_0
      10: invokevirtual #44                 // Method size:()I
      13: istore_2
      14: aload_0
      15: iload_2
      16: iconst_0
      17: iload_2
      18: invokevirtual #43                 // Method partialHash:(III)I
      21: istore_1
      22: iload_1
      23: ifne          28
      26: iconst_1
      27: istore_1
      28: aload_0
      29: iload_1
      30: putfield      #23                 // Field hash:I
      33: iload_1
      34: ireturn

  protected int peekCachedHashCode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field hash:I
       4: ireturn

  protected int partialHash(int, int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #22                 // Field bytes:[B
       5: aload_0
       6: invokevirtual #40                 // Method getOffsetIntoBytes:()I
       9: iload_2
      10: iadd
      11: iload_3
      12: invokestatic  #41                 // Method hashCode:(I[BII)I
      15: ireturn

  static int hashCode(int, byte[], int, int);
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_2
       6: iload_3
       7: iadd
       8: if_icmpge     27
      11: iload_0
      12: bipush        31
      14: imul
      15: aload_1
      16: iload         4
      18: baload
      19: iadd
      20: istore_0
      21: iinc          4, 1
      24: goto          3
      27: iload_0
      28: ireturn

  public kotlin.reflect.jvm.internal.impl.protobuf.CodedInputStream newCodedInput();
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method kotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream.newInstance:(Lkotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString;)Lkotlin/reflect/jvm/internal/impl/protobuf/CodedInputStream;
       4: areturn

  public kotlin.reflect.jvm.internal.impl.protobuf.ByteString$ByteIterator iterator();
    Code:
       0: new           #19                 // class kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString$LiteralByteIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #45                 // Method kotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString$LiteralByteIterator."<init>":(Lkotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString;Lkotlin/reflect/jvm/internal/impl/protobuf/LiteralByteString$1;)V
       9: areturn

  protected int getTreeDepth();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean isBalanced();
    Code:
       0: iconst_1
       1: ireturn

  protected int getOffsetIntoBytes();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method iterator:()Lkotlin/reflect/jvm/internal/impl/protobuf/ByteString$ByteIterator;
       4: areturn
}
