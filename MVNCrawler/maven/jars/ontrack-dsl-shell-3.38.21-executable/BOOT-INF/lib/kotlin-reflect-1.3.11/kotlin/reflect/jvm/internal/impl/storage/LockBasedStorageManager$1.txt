Compiled from "LockBasedStorageManager.java"
final class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$1 extends kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager {
  kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$1(java.lang.String, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$ExceptionHandlingStrategy, java.util.concurrent.locks.Lock);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #5                  // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager."<init>":(Ljava/lang/String;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;Ljava/util/concurrent/locks/Lock;Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$1;)V
       8: return

  protected <T> kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> recursionDetectedDefault();
    Code:
       0: invokestatic  #6                  // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.fallThrough:()Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
       3: areturn
}
