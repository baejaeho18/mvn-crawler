Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction<K, V> implements kotlin.reflect.jvm.internal.impl.storage.MemoizedFunctionToNullable<K, V> {
  private final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager storageManager;

  private final java.util.concurrent.ConcurrentMap<K, java.lang.Object> cache;

  private final kotlin.jvm.functions.Function1<? super K, ? extends V> compute;

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$MapBasedMemoizedFunction(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, java.util.concurrent.ConcurrentMap<K, java.lang.Object>, kotlin.jvm.functions.Function1<? super K, ? extends V>);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       9: aload_0
      10: aload_2
      11: putfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      14: aload_0
      15: aload_3
      16: putfield      #22                 // Field compute:Lkotlin/jvm/functions/Function1;
      19: return

  public V invoke(K);
    Code:
       0: aload_0
       1: getfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        27
      15: aload_2
      16: getstatic     #24                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      19: if_acmpeq     27
      22: aload_2
      23: invokestatic  #38                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeExceptionOrNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: areturn
      27: aload_0
      28: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      31: getfield      #20                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
      34: invokeinterface #42,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      39: aload_0
      40: getfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      43: aload_1
      44: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: astore_2
      50: aload_2
      51: getstatic     #24                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      54: if_acmpne     63
      57: aload_0
      58: aload_1
      59: invokespecial #34                 // Method recursionDetected:(Ljava/lang/Object;)Ljava/lang/AssertionError;
      62: athrow
      63: aload_2
      64: ifnull        86
      67: aload_2
      68: invokestatic  #38                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.unescapeExceptionOrNull:(Ljava/lang/Object;)Ljava/lang/Object;
      71: astore_3
      72: aload_0
      73: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      76: getfield      #20                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
      79: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      84: aload_3
      85: areturn
      86: aconst_null
      87: astore_3
      88: aload_0
      89: getfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      92: aload_1
      93: getstatic     #24                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
      96: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload_0
     103: getfield      #22                 // Field compute:Lkotlin/jvm/functions/Function1;
     106: aload_1
     107: invokeinterface #44,  2           // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
     112: astore        4
     114: aload_0
     115: getfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     118: aload_1
     119: aload         4
     121: invokestatic  #36                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.escapeNull:(Ljava/lang/Object;)Ljava/lang/Object;
     124: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: astore        5
     131: aload         5
     133: getstatic     #24                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     136: if_acmpeq     149
     139: aload_0
     140: aload_1
     141: aload         5
     143: invokespecial #33                 // Method raceCondition:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/AssertionError;
     146: astore_3
     147: aload_3
     148: athrow
     149: aload         4
     151: astore        6
     153: aload_0
     154: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     157: getfield      #20                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
     160: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     165: aload         6
     167: areturn
     168: astore        4
     170: aload         4
     172: invokestatic  #35                 // Method kotlin/reflect/jvm/internal/impl/utils/ExceptionUtilsKt.isProcessCanceledException:(Ljava/lang/Throwable;)Z
     175: ifeq          195
     178: aload_0
     179: getfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     182: aload_1
     183: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     188: pop
     189: aload         4
     191: checkcast     #7                  // class java/lang/RuntimeException
     194: athrow
     195: aload         4
     197: aload_3
     198: if_acmpne     216
     201: aload_0
     202: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     205: invokestatic  #31                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$100:(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
     208: aload         4
     210: invokeinterface #45,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     215: athrow
     216: aload_0
     217: getfield      #21                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
     220: aload_1
     221: aload         4
     223: invokestatic  #37                 // Method kotlin/reflect/jvm/internal/impl/utils/WrappedValues.escapeThrowable:(Ljava/lang/Throwable;)Ljava/lang/Object;
     226: invokeinterface #40,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     231: astore        5
     233: aload         5
     235: getstatic     #24                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue.COMPUTING:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$NotValue;
     238: if_acmpeq     249
     241: aload_0
     242: aload_1
     243: aload         5
     245: invokespecial #33                 // Method raceCondition:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/AssertionError;
     248: athrow
     249: aload_0
     250: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     253: invokestatic  #31                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$100:(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy;
     256: aload         4
     258: invokeinterface #45,  2           // InterfaceMethod kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$ExceptionHandlingStrategy.handleException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     263: athrow
     264: astore        7
     266: aload_0
     267: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
     270: getfield      #20                 // Field kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.lock:Ljava/util/concurrent/locks/Lock;
     273: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     278: aload         7
     280: athrow
    Exception table:
       from    to  target type
          88   153   168   Class java/lang/Throwable
          39    72   264   any
          86   153   264   any
         168   266   264   any

  private java.lang.AssertionError recursionDetected(K);
    Code:
       0: new           #5                  // class java/lang/AssertionError
       3: dup
       4: new           #8                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #4                  // String Recursion detected on input:
      13: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #1                  // String  under
      22: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      29: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #25                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      38: invokestatic  #32                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$200:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      41: checkcast     #5                  // class java/lang/AssertionError
      44: areturn

  private java.lang.AssertionError raceCondition(K, java.lang.Object);
    Code:
       0: new           #5                  // class java/lang/AssertionError
       3: dup
       4: new           #8                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #3                  // String Race condition detected on input
      13: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #2                  // String . Old value is
      22: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_2
      26: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #1                  // String  under
      31: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #25                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      47: invokestatic  #32                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager.access$200:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      50: checkcast     #5                  // class java/lang/AssertionError
      53: areturn

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager getStorageManager();
    Code:
       0: aload_0
       1: getfield      #23                 // Field storageManager:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       4: areturn
}
