Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValue<T> extends kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedLazyValue<T> implements kotlin.reflect.jvm.internal.impl.storage.NotNullLazyValue<T> {
  static final boolean $assertionsDisabled;

  public kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValue(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.jvm.functions.Function0<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedLazyValue."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;)V
       6: return

  public T invoke();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedLazyValue.invoke:()Ljava/lang/Object;
       4: astore_1
       5: getstatic     #9                  // Field $assertionsDisabled:Z
       8: ifne          25
      11: aload_1
      12: ifnonnull     25
      15: new           #2                  // class java/lang/AssertionError
      18: dup
      19: ldc           #1                  // String compute() returned null
      21: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      24: athrow
      25: aload_1
      26: areturn

  static {};
    Code:
       0: ldc           #5                  // class kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager
       2: invokevirtual #11                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #9                  // Field $assertionsDisabled:Z
      16: return
}
