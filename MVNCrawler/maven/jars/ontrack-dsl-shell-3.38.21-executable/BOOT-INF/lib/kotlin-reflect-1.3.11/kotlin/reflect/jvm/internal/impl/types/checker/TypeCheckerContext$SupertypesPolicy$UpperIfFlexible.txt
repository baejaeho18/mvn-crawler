Compiled from "TypeCheckerContext.kt"
public final class kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SupertypesPolicy$UpperIfFlexible extends kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SupertypesPolicy {
  public static final kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SupertypesPolicy$UpperIfFlexible INSTANCE;

  public kotlin.reflect.jvm.internal.impl.types.SimpleType transformType(kotlin.reflect.jvm.internal.impl.types.KotlinType);
    Code:
       0: aload_1
       1: ldc           #1                  // String type
       3: invokestatic  #8                  // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #9                  // Method kotlin/reflect/jvm/internal/impl/types/FlexibleTypesKt.upperIfFlexible:(Lkotlin/reflect/jvm/internal/impl/types/KotlinType;)Lkotlin/reflect/jvm/internal/impl/types/SimpleType;
      10: areturn

  private kotlin.reflect.jvm.internal.impl.types.checker.TypeCheckerContext$SupertypesPolicy$UpperIfFlexible();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #10                 // Method kotlin/reflect/jvm/internal/impl/types/checker/TypeCheckerContext$SupertypesPolicy."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       5: return

  static {};
    Code:
       0: new           #6                  // class kotlin/reflect/jvm/internal/impl/types/checker/TypeCheckerContext$SupertypesPolicy$UpperIfFlexible
       3: dup
       4: invokespecial #11                 // Method "<init>":()V
       7: astore_0
       8: aload_0
       9: putstatic     #7                  // Field INSTANCE:Lkotlin/reflect/jvm/internal/impl/types/checker/TypeCheckerContext$SupertypesPolicy$UpperIfFlexible;
      12: return
}
