Compiled from "ReflectKotlinClassFinder.kt"
public final class kotlin.reflect.jvm.internal.components.ReflectKotlinClassFinder implements kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinClassFinder {
  private final java.lang.ClassLoader classLoader;

  private final kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass findKotlinClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field classLoader:Ljava/lang/ClassLoader;
       4: aload_1
       5: invokestatic  #25                 // Method kotlin/reflect/jvm/internal/components/ReflectJavaClassFinderKt.tryLoadClass:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;
       8: dup
       9: ifnull        25
      12: astore_2
      13: aload_2
      14: astore_3
      15: getstatic     #21                 // Field kotlin/reflect/jvm/internal/components/ReflectKotlinClass.Factory:Lkotlin/reflect/jvm/internal/components/ReflectKotlinClass$Factory;
      18: aload_3
      19: invokevirtual #26                 // Method kotlin/reflect/jvm/internal/components/ReflectKotlinClass$Factory.create:(Ljava/lang/Class;)Lkotlin/reflect/jvm/internal/components/ReflectKotlinClass;
      22: goto          27
      25: pop
      26: aconst_null
      27: checkcast     #19                 // class kotlin/reflect/jvm/internal/impl/load/kotlin/KotlinJvmBinaryClass
      30: areturn

  public kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass findKotlinClass(kotlin.reflect.jvm.internal.impl.name.ClassId);
    Code:
       0: aload_1
       1: ldc           #5                  // String classId
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #28                 // Method kotlin/reflect/jvm/internal/components/ReflectKotlinClassFinderKt.access$toRuntimeFqName:(Lkotlin/reflect/jvm/internal/impl/name/ClassId;)Ljava/lang/String;
      11: invokespecial #27                 // Method findKotlinClass:(Ljava/lang/String;)Lkotlin/reflect/jvm/internal/impl/load/kotlin/KotlinJvmBinaryClass;
      14: areturn

  public kotlin.reflect.jvm.internal.impl.load.kotlin.KotlinJvmBinaryClass findKotlinClass(kotlin.reflect.jvm.internal.impl.load.java.structure.JavaClass);
    Code:
       0: aload_1
       1: ldc           #7                  // String javaClass
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokeinterface #30,  1           // InterfaceMethod kotlin/reflect/jvm/internal/impl/load/java/structure/JavaClass.getFqName:()Lkotlin/reflect/jvm/internal/impl/name/FqName;
      13: dup
      14: ifnull        27
      17: invokevirtual #29                 // Method kotlin/reflect/jvm/internal/impl/name/FqName.asString:()Ljava/lang/String;
      20: dup
      21: ifnull        27
      24: goto          30
      27: pop
      28: aconst_null
      29: areturn
      30: invokespecial #27                 // Method findKotlinClass:(Ljava/lang/String;)Lkotlin/reflect/jvm/internal/impl/load/kotlin/KotlinJvmBinaryClass;
      33: areturn

  public kotlin.reflect.jvm.internal.components.ReflectKotlinClassFinder(java.lang.ClassLoader);
    Code:
       0: aload_1
       1: ldc           #6                  // String classLoader
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #23                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #22                 // Field classLoader:Ljava/lang/ClassLoader;
      15: return
}
