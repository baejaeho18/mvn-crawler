Compiled from "LockBasedStorageManager.java"
class kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$2 extends kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$LockBasedNotNullLazyValue<T> {
  final java.lang.Object val$onRecursiveCall;

  final kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager this$0;

  kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$2(kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager, kotlin.jvm.functions.Function0, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;
       5: aload_0
       6: aload         4
       8: putfield      #6                  // Field val$onRecursiveCall:Ljava/lang/Object;
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #7                  // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$LockBasedNotNullLazyValue."<init>":(Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager;Lkotlin/jvm/functions/Function0;)V
      17: return

  protected kotlin.reflect.jvm.internal.impl.storage.LockBasedStorageManager$RecursionDetectedResult<T> recursionDetected(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field val$onRecursiveCall:Ljava/lang/Object;
       4: invokestatic  #8                  // Method kotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult.value:(Ljava/lang/Object;)Lkotlin/reflect/jvm/internal/impl/storage/LockBasedStorageManager$RecursionDetectedResult;
       7: areturn
}
