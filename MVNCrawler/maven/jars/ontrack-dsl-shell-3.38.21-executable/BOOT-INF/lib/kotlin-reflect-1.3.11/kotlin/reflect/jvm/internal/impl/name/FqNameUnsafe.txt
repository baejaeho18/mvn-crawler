Compiled from "FqNameUnsafe.java"
public final class kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe {
  private static final kotlin.reflect.jvm.internal.impl.name.Name ROOT_NAME;

  private static final java.util.regex.Pattern SPLIT_BY_DOTS;

  private static final kotlin.jvm.functions.Function1<java.lang.String, kotlin.reflect.jvm.internal.impl.name.Name> STRING_TO_NAME;

  private final java.lang.String fqName;

  private transient kotlin.reflect.jvm.internal.impl.name.FqName safe;

  private transient kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe parent;

  private transient kotlin.reflect.jvm.internal.impl.name.Name shortName;

  kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe(java.lang.String, kotlin.reflect.jvm.internal.impl.name.FqName);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field fqName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #23                 // Field safe:Lkotlin/reflect/jvm/internal/impl/name/FqName;
      14: return

  public kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field fqName:Ljava/lang/String;
       9: return

  private kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe(java.lang.String, kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe, kotlin.reflect.jvm.internal.impl.name.Name);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field fqName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #22                 // Field parent:Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      14: aload_0
      15: aload_3
      16: putfield      #24                 // Field shortName:Lkotlin/reflect/jvm/internal/impl/name/Name;
      19: return

  private void compute();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fqName:Ljava/lang/String;
       4: bipush        46
       6: invokevirtual #31                 // Method java/lang/String.lastIndexOf:(I)I
       9: istore_1
      10: iload_1
      11: iflt          54
      14: aload_0
      15: aload_0
      16: getfield      #21                 // Field fqName:Ljava/lang/String;
      19: iload_1
      20: iconst_1
      21: iadd
      22: invokevirtual #34                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      25: invokestatic  #53                 // Method kotlin/reflect/jvm/internal/impl/name/Name.guessByFirstCharacter:(Ljava/lang/String;)Lkotlin/reflect/jvm/internal/impl/name/Name;
      28: putfield      #24                 // Field shortName:Lkotlin/reflect/jvm/internal/impl/name/Name;
      31: aload_0
      32: new           #14                 // class kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe
      35: dup
      36: aload_0
      37: getfield      #21                 // Field fqName:Ljava/lang/String;
      40: iconst_0
      41: iload_1
      42: invokevirtual #35                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      45: invokespecial #45                 // Method "<init>":(Ljava/lang/String;)V
      48: putfield      #22                 // Field parent:Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      51: goto          75
      54: aload_0
      55: aload_0
      56: getfield      #21                 // Field fqName:Ljava/lang/String;
      59: invokestatic  #53                 // Method kotlin/reflect/jvm/internal/impl/name/Name.guessByFirstCharacter:(Ljava/lang/String;)Lkotlin/reflect/jvm/internal/impl/name/Name;
      62: putfield      #24                 // Field shortName:Lkotlin/reflect/jvm/internal/impl/name/Name;
      65: aload_0
      66: getstatic     #17                 // Field kotlin/reflect/jvm/internal/impl/name/FqName.ROOT:Lkotlin/reflect/jvm/internal/impl/name/FqName;
      69: invokevirtual #44                 // Method kotlin/reflect/jvm/internal/impl/name/FqName.toUnsafe:()Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      72: putfield      #22                 // Field parent:Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      75: return

  public java.lang.String asString();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fqName:Ljava/lang/String;
       4: areturn

  public boolean isSafe();
    Code:
       0: aload_0
       1: getfield      #23                 // Field safe:Lkotlin/reflect/jvm/internal/impl/name/FqName;
       4: ifnonnull     19
       7: aload_0
       8: invokevirtual #47                 // Method asString:()Ljava/lang/String;
      11: bipush        60
      13: invokevirtual #29                 // Method java/lang/String.indexOf:(I)I
      16: ifge          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public kotlin.reflect.jvm.internal.impl.name.FqName toSafe();
    Code:
       0: aload_0
       1: getfield      #23                 // Field safe:Lkotlin/reflect/jvm/internal/impl/name/FqName;
       4: ifnull        12
       7: aload_0
       8: getfield      #23                 // Field safe:Lkotlin/reflect/jvm/internal/impl/name/FqName;
      11: areturn
      12: aload_0
      13: new           #13                 // class kotlin/reflect/jvm/internal/impl/name/FqName
      16: dup
      17: aload_0
      18: invokespecial #43                 // Method kotlin/reflect/jvm/internal/impl/name/FqName."<init>":(Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;)V
      21: putfield      #23                 // Field safe:Lkotlin/reflect/jvm/internal/impl/name/FqName;
      24: aload_0
      25: getfield      #23                 // Field safe:Lkotlin/reflect/jvm/internal/impl/name/FqName;
      28: areturn

  public boolean isRoot();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fqName:Ljava/lang/String;
       4: invokevirtual #30                 // Method java/lang/String.isEmpty:()Z
       7: ireturn

  public kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe parent();
    Code:
       0: aload_0
       1: getfield      #22                 // Field parent:Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
       4: ifnull        12
       7: aload_0
       8: getfield      #22                 // Field parent:Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      11: areturn
      12: aload_0
      13: invokevirtual #49                 // Method isRoot:()Z
      16: ifeq          29
      19: new           #5                  // class java/lang/IllegalStateException
      22: dup
      23: ldc           #4                  // String root
      25: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokespecial #48                 // Method compute:()V
      33: aload_0
      34: getfield      #22                 // Field parent:Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      37: areturn

  public kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe child(kotlin.reflect.jvm.internal.impl.name.Name);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isRoot:()Z
       4: ifeq          15
       7: aload_1
       8: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/name/Name.asString:()Ljava/lang/String;
      11: astore_2
      12: goto          45
      15: new           #8                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      22: aload_0
      23: getfield      #21                 // Field fqName:Ljava/lang/String;
      26: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #1                  // String .
      31: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/name/Name.asString:()Ljava/lang/String;
      38: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_2
      45: new           #14                 // class kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe
      48: dup
      49: aload_2
      50: aload_0
      51: aload_1
      52: invokespecial #46                 // Method "<init>":(Ljava/lang/String;Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;Lkotlin/reflect/jvm/internal/impl/name/Name;)V
      55: areturn

  public kotlin.reflect.jvm.internal.impl.name.Name shortName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field shortName:Lkotlin/reflect/jvm/internal/impl/name/Name;
       4: ifnull        12
       7: aload_0
       8: getfield      #24                 // Field shortName:Lkotlin/reflect/jvm/internal/impl/name/Name;
      11: areturn
      12: aload_0
      13: invokevirtual #49                 // Method isRoot:()Z
      16: ifeq          29
      19: new           #5                  // class java/lang/IllegalStateException
      22: dup
      23: ldc           #4                  // String root
      25: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokespecial #48                 // Method compute:()V
      33: aload_0
      34: getfield      #24                 // Field shortName:Lkotlin/reflect/jvm/internal/impl/name/Name;
      37: areturn

  public kotlin.reflect.jvm.internal.impl.name.Name shortNameOrSpecial();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isRoot:()Z
       4: ifeq          11
       7: getstatic     #18                 // Field ROOT_NAME:Lkotlin/reflect/jvm/internal/impl/name/Name;
      10: areturn
      11: aload_0
      12: invokevirtual #50                 // Method shortName:()Lkotlin/reflect/jvm/internal/impl/name/Name;
      15: areturn

  public java.util.List<kotlin.reflect.jvm.internal.impl.name.Name> pathSegments();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isRoot:()Z
       4: ifeq          13
       7: invokestatic  #39                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: goto          29
      13: getstatic     #19                 // Field SPLIT_BY_DOTS:Ljava/util/regex/Pattern;
      16: aload_0
      17: getfield      #21                 // Field fqName:Ljava/lang/String;
      20: invokevirtual #41                 // Method java/util/regex/Pattern.split:(Ljava/lang/CharSequence;)[Ljava/lang/String;
      23: getstatic     #20                 // Field STRING_TO_NAME:Lkotlin/jvm/functions/Function1;
      26: invokestatic  #42                 // Method kotlin/collections/ArraysKt.map:([Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/util/List;
      29: areturn

  public boolean startsWith(kotlin.reflect.jvm.internal.impl.name.Name);
    Code:
       0: aload_0
       1: getfield      #21                 // Field fqName:Ljava/lang/String;
       4: bipush        46
       6: invokevirtual #29                 // Method java/lang/String.indexOf:(I)I
       9: istore_2
      10: aload_0
      11: invokevirtual #49                 // Method isRoot:()Z
      14: ifne          53
      17: aload_0
      18: getfield      #21                 // Field fqName:Ljava/lang/String;
      21: iconst_0
      22: aload_1
      23: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/name/Name.asString:()Ljava/lang/String;
      26: iconst_0
      27: iload_2
      28: iconst_m1
      29: if_icmpne     42
      32: aload_0
      33: getfield      #21                 // Field fqName:Ljava/lang/String;
      36: invokevirtual #32                 // Method java/lang/String.length:()I
      39: goto          43
      42: iload_2
      43: invokevirtual #33                 // Method java/lang/String.regionMatches:(ILjava/lang/String;II)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public static kotlin.reflect.jvm.internal.impl.name.FqNameUnsafe topLevel(kotlin.reflect.jvm.internal.impl.name.Name);
    Code:
       0: new           #14                 // class kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe
       3: dup
       4: aload_0
       5: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/name/Name.asString:()Ljava/lang/String;
       8: getstatic     #17                 // Field kotlin/reflect/jvm/internal/impl/name/FqName.ROOT:Lkotlin/reflect/jvm/internal/impl/name/FqName;
      11: invokevirtual #44                 // Method kotlin/reflect/jvm/internal/impl/name/FqName.toUnsafe:()Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;
      14: aload_0
      15: invokespecial #46                 // Method "<init>":(Ljava/lang/String;Lkotlin/reflect/jvm/internal/impl/name/FqNameUnsafe;Lkotlin/reflect/jvm/internal/impl/name/Name;)V
      18: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isRoot:()Z
       4: ifeq          16
       7: getstatic     #18                 // Field ROOT_NAME:Lkotlin/reflect/jvm/internal/impl/name/Name;
      10: invokevirtual #52                 // Method kotlin/reflect/jvm/internal/impl/name/Name.asString:()Ljava/lang/String;
      13: goto          20
      16: aload_0
      17: getfield      #21                 // Field fqName:Ljava/lang/String;
      20: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #14                 // class kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe
      20: astore_2
      21: aload_0
      22: getfield      #21                 // Field fqName:Ljava/lang/String;
      25: aload_2
      26: getfield      #21                 // Field fqName:Ljava/lang/String;
      29: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: iconst_1
      38: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #21                 // Field fqName:Ljava/lang/String;
       4: invokevirtual #28                 // Method java/lang/String.hashCode:()I
       7: ireturn

  static {};
    Code:
       0: ldc           #2                  // String <root>
       2: invokestatic  #54                 // Method kotlin/reflect/jvm/internal/impl/name/Name.special:(Ljava/lang/String;)Lkotlin/reflect/jvm/internal/impl/name/Name;
       5: putstatic     #18                 // Field ROOT_NAME:Lkotlin/reflect/jvm/internal/impl/name/Name;
       8: ldc           #3                  // String \\.
      10: invokestatic  #40                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #19                 // Field SPLIT_BY_DOTS:Ljava/util/regex/Pattern;
      16: new           #15                 // class kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe$1
      19: dup
      20: invokespecial #51                 // Method kotlin/reflect/jvm/internal/impl/name/FqNameUnsafe$1."<init>":()V
      23: putstatic     #20                 // Field STRING_TO_NAME:Lkotlin/jvm/functions/Function1;
      26: return
}
