Compiled from "Constructor.java"
public class org.yaml.snakeyaml.constructor.Constructor extends org.yaml.snakeyaml.constructor.SafeConstructor {
  private final java.util.Map<org.yaml.snakeyaml.nodes.Tag, java.lang.Class<? extends java.lang.Object>> typeTags;

  protected final java.util.Map<java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.TypeDescription> typeDefinitions;

  public org.yaml.snakeyaml.constructor.Constructor();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/Class;)V
       7: return

  public org.yaml.snakeyaml.constructor.Constructor(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: new           #3                  // class org/yaml/snakeyaml/TypeDescription
       4: dup
       5: aload_1
       6: invokestatic  #4                  // Method checkRoot:(Ljava/lang/Class;)Ljava/lang/Class;
       9: invokespecial #5                  // Method org/yaml/snakeyaml/TypeDescription."<init>":(Ljava/lang/Class;)V
      12: invokespecial #6                  // Method "<init>":(Lorg/yaml/snakeyaml/TypeDescription;)V
      15: return

  private static java.lang.Class<? extends java.lang.Object> checkRoot(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #7                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #8                  // String Root class must be provided.
      10: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: areturn

  public org.yaml.snakeyaml.constructor.Constructor(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method org/yaml/snakeyaml/constructor/SafeConstructor."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #7                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #11                 // String Root type must be provided.
      14: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #12                 // Field yamlConstructors:Ljava/util/Map;
      22: aconst_null
      23: new           #13                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject
      26: dup
      27: aload_0
      28: invokespecial #14                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructYamlObject."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
      31: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: ldc_w         #1                  // class java/lang/Object
      40: aload_1
      41: invokevirtual #16                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      44: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifne          65
      50: aload_0
      51: new           #18                 // class org/yaml/snakeyaml/nodes/Tag
      54: dup
      55: aload_1
      56: invokevirtual #16                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      59: invokespecial #19                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/Class;)V
      62: putfield      #20                 // Field rootTag:Lorg/yaml/snakeyaml/nodes/Tag;
      65: aload_0
      66: new           #21                 // class java/util/HashMap
      69: dup
      70: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      73: putfield      #23                 // Field typeTags:Ljava/util/Map;
      76: aload_0
      77: new           #21                 // class java/util/HashMap
      80: dup
      81: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      84: putfield      #24                 // Field typeDefinitions:Ljava/util/Map;
      87: aload_0
      88: getfield      #25                 // Field yamlClassConstructors:Ljava/util/Map;
      91: getstatic     #26                 // Field org/yaml/snakeyaml/nodes/NodeId.scalar:Lorg/yaml/snakeyaml/nodes/NodeId;
      94: new           #27                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructScalar
      97: dup
      98: aload_0
      99: invokespecial #28                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructScalar."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
     102: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload_0
     109: getfield      #25                 // Field yamlClassConstructors:Ljava/util/Map;
     112: getstatic     #29                 // Field org/yaml/snakeyaml/nodes/NodeId.mapping:Lorg/yaml/snakeyaml/nodes/NodeId;
     115: new           #30                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructMapping
     118: dup
     119: aload_0
     120: invokespecial #31                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructMapping."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
     123: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_0
     130: getfield      #25                 // Field yamlClassConstructors:Ljava/util/Map;
     133: getstatic     #32                 // Field org/yaml/snakeyaml/nodes/NodeId.sequence:Lorg/yaml/snakeyaml/nodes/NodeId;
     136: new           #33                 // class org/yaml/snakeyaml/constructor/Constructor$ConstructSequence
     139: dup
     140: aload_0
     141: invokespecial #34                 // Method org/yaml/snakeyaml/constructor/Constructor$ConstructSequence."<init>":(Lorg/yaml/snakeyaml/constructor/Constructor;)V
     144: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     149: pop
     150: aload_0
     151: aload_1
     152: invokevirtual #35                 // Method addTypeDescription:(Lorg/yaml/snakeyaml/TypeDescription;)Lorg/yaml/snakeyaml/TypeDescription;
     155: pop
     156: return

  public org.yaml.snakeyaml.constructor.Constructor(java.lang.String) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // Method check:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #37                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       8: invokespecial #2                  // Method "<init>":(Ljava/lang/Class;)V
      11: return

  private static final java.lang.String check(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #7                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #11                 // String Root type must be provided.
      10: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokevirtual #39                 // Method java/lang/String.length:()I
      21: ifne          34
      24: new           #40                 // class org/yaml/snakeyaml/error/YAMLException
      27: dup
      28: ldc           #11                 // String Root type must be provided.
      30: invokespecial #41                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: areturn

  public org.yaml.snakeyaml.TypeDescription addTypeDescription(org.yaml.snakeyaml.TypeDescription);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #42                 // String TypeDescription is required.
      10: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #43                 // Method org/yaml/snakeyaml/TypeDescription.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      18: astore_2
      19: aload_0
      20: getfield      #23                 // Field typeTags:Ljava/util/Map;
      23: aload_2
      24: aload_1
      25: invokevirtual #16                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      28: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: getfield      #24                 // Field typeDefinitions:Ljava/util/Map;
      38: aload_1
      39: invokevirtual #16                 // Method org/yaml/snakeyaml/TypeDescription.getType:()Ljava/lang/Class;
      42: aload_1
      43: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #3                  // class org/yaml/snakeyaml/TypeDescription
      51: areturn

  protected java.lang.Class<?> getClassForNode(org.yaml.snakeyaml.nodes.Node);
    Code:
       0: aload_0
       1: getfield      #23                 // Field typeTags:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #44                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
       8: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #46                 // class java/lang/Class
      16: astore_2
      17: aload_2
      18: ifnonnull     87
      21: aload_1
      22: invokevirtual #44                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      25: invokevirtual #47                 // Method org/yaml/snakeyaml/nodes/Tag.getClassName:()Ljava/lang/String;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokevirtual #48                 // Method getClassForName:(Ljava/lang/String;)Ljava/lang/Class;
      34: astore        4
      36: goto          68
      39: astore        5
      41: new           #40                 // class org/yaml/snakeyaml/error/YAMLException
      44: dup
      45: new           #50                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #52                 // String Class not found:
      54: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #41                 // Method org/yaml/snakeyaml/error/YAMLException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #23                 // Field typeTags:Ljava/util/Map;
      72: aload_1
      73: invokevirtual #44                 // Method org/yaml/snakeyaml/nodes/Node.getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      76: aload         4
      78: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload         4
      86: areturn
      87: aload_2
      88: areturn
    Exception table:
       from    to  target type
          29    36    39   Class java/lang/ClassNotFoundException

  protected java.lang.Class<?> getClassForName(java.lang.String) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #55                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       5: invokevirtual #56                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #57                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      11: areturn
      12: astore_2
      13: aload_1
      14: invokestatic  #37                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      17: areturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/ClassNotFoundException
}
