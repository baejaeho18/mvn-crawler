Compiled from "DefaultLogbackConfiguration.java"
class org.springframework.boot.logging.logback.DefaultLogbackConfiguration {
  private static final java.lang.String CONSOLE_LOG_PATTERN;

  private static final java.lang.String FILE_LOG_PATTERN;

  private static final java.nio.charset.Charset UTF8;

  private final org.springframework.core.env.PropertyResolver patterns;

  private final org.springframework.boot.logging.LogFile logFile;

  org.springframework.boot.logging.logback.DefaultLogbackConfiguration(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method org/springframework/boot/logging/LoggingInitializationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      10: invokespecial #3                  // Method getPatternsResolver:(Lorg/springframework/core/env/Environment;)Lorg/springframework/core/env/PropertyResolver;
      13: putfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      21: return

  private org.springframework.core.env.PropertyResolver getPatternsResolver(org.springframework.core.env.Environment);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: new           #6                  // class org/springframework/core/env/PropertySourcesPropertyResolver
       7: dup
       8: aconst_null
       9: invokespecial #7                  // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      12: areturn
      13: aload_1
      14: ldc           #8                  // String logging.pattern.
      16: invokestatic  #9                  // Method org/springframework/boot/bind/RelaxedPropertyResolver.ignoringUnresolvableNestedPlaceholders:(Lorg/springframework/core/env/Environment;Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedPropertyResolver;
      19: areturn

  public void apply(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getConfigurationLock:()Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokespecial #11                 // Method base:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      12: aload_0
      13: aload_1
      14: invokespecial #12                 // Method consoleAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;)Lch/qos/logback/core/Appender;
      17: astore_3
      18: aload_0
      19: getfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      22: ifnull        62
      25: aload_0
      26: aload_1
      27: aload_0
      28: getfield      #5                  // Field logFile:Lorg/springframework/boot/logging/LogFile;
      31: invokevirtual #13                 // Method org/springframework/boot/logging/LogFile.toString:()Ljava/lang/String;
      34: invokespecial #14                 // Method fileAppender:(Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)Lch/qos/logback/core/Appender;
      37: astore        4
      39: aload_1
      40: getstatic     #15                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      43: iconst_2
      44: anewarray     #16                 // class ch/qos/logback/core/Appender
      47: dup
      48: iconst_0
      49: aload_3
      50: aastore
      51: dup
      52: iconst_1
      53: aload         4
      55: aastore
      56: invokevirtual #17                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      59: goto          77
      62: aload_1
      63: getstatic     #15                 // Field ch/qos/logback/classic/Level.INFO:Lch/qos/logback/classic/Level;
      66: iconst_1
      67: anewarray     #16                 // class ch/qos/logback/core/Appender
      70: dup
      71: iconst_0
      72: aload_3
      73: aastore
      74: invokevirtual #17                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.root:(Lch/qos/logback/classic/Level;[Lch/qos/logback/core/Appender;)V
      77: aload_2
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_2
      85: monitorexit
      86: aload         5
      88: athrow
      89: return
    Exception table:
       from    to  target type
           7    79    82   any
          82    86    82   any

  private void base(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: aload_1
       1: ldc           #18                 // String clr
       3: ldc           #19                 // class org/springframework/boot/logging/logback/ColorConverter
       5: invokevirtual #20                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
       8: aload_1
       9: ldc           #21                 // String wex
      11: ldc           #22                 // class org/springframework/boot/logging/logback/WhitespaceThrowableProxyConverter
      13: invokevirtual #20                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_1
      17: ldc           #23                 // String wEx
      19: ldc           #24                 // class org/springframework/boot/logging/logback/ExtendedWhitespaceThrowableProxyConverter
      21: invokevirtual #20                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.conversionRule:(Ljava/lang/String;Ljava/lang/Class;)V
      24: new           #25                 // class org/springframework/boot/logging/logback/LevelRemappingAppender
      27: dup
      28: ldc           #26                 // String org.springframework.boot
      30: invokespecial #27                 // Method org/springframework/boot/logging/logback/LevelRemappingAppender."<init>":(Ljava/lang/String;)V
      33: astore_2
      34: aload_1
      35: aload_2
      36: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      39: aload_1
      40: ldc           #29                 // String DEBUG_LEVEL_REMAPPER
      42: aload_2
      43: invokevirtual #30                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      46: aload_1
      47: ldc           #31                 // String org.apache.catalina.startup.DigesterFactory
      49: getstatic     #32                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      52: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      55: aload_1
      56: ldc           #34                 // String org.apache.catalina.util.LifecycleBase
      58: getstatic     #32                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
      61: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      64: aload_1
      65: ldc           #35                 // String org.apache.coyote.http11.Http11NioProtocol
      67: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      70: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      73: aload_1
      74: ldc           #37                 // String org.apache.sshd.common.util.SecurityUtils
      76: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      79: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      82: aload_1
      83: ldc           #38                 // String org.apache.tomcat.util.net.NioSelectorPool
      85: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      88: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
      91: aload_1
      92: ldc           #39                 // String org.crsh.plugin
      94: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
      97: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     100: aload_1
     101: ldc           #40                 // String org.crsh.ssh
     103: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     106: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     109: aload_1
     110: ldc           #41                 // String org.eclipse.jetty.util.component.AbstractLifeCycle
     112: getstatic     #32                 // Field ch/qos/logback/classic/Level.ERROR:Lch/qos/logback/classic/Level;
     115: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     118: aload_1
     119: ldc           #42                 // String org.hibernate.validator.internal.util.Version
     121: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     124: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     127: aload_1
     128: ldc           #43                 // String org.springframework.boot.actuate.autoconfigure.CrshAutoConfiguration
     130: getstatic     #36                 // Field ch/qos/logback/classic/Level.WARN:Lch/qos/logback/classic/Level;
     133: invokevirtual #33                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;)V
     136: aload_1
     137: ldc           #44                 // String org.springframework.boot.actuate.endpoint.jmx
     139: aconst_null
     140: iconst_0
     141: aload_2
     142: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;ZLch/qos/logback/core/Appender;)V
     145: aload_1
     146: ldc           #46                 // String org.thymeleaf
     148: aconst_null
     149: iconst_0
     150: aload_2
     151: invokevirtual #45                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;ZLch/qos/logback/core/Appender;)V
     154: return

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> consoleAppender(org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: new           #47                 // class ch/qos/logback/core/ConsoleAppender
       3: dup
       4: invokespecial #48                 // Method ch/qos/logback/core/ConsoleAppender."<init>":()V
       7: astore_2
       8: new           #49                 // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      11: dup
      12: invokespecial #50                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      15: astore_3
      16: aload_0
      17: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      20: ldc           #51                 // String console
      22: ldc           #53                 // String %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
      24: invokeinterface #54,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: astore        4
      31: aload_3
      32: aload         4
      34: aload_1
      35: invokevirtual #55                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/core/spi/PropertyContainer;
      38: invokestatic  #56                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      41: invokevirtual #57                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      44: aload_3
      45: getstatic     #58                 // Field UTF8:Ljava/nio/charset/Charset;
      48: invokevirtual #59                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setCharset:(Ljava/nio/charset/Charset;)V
      51: aload_1
      52: aload_3
      53: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      56: aload_2
      57: aload_3
      58: invokevirtual #60                 // Method ch/qos/logback/core/ConsoleAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      61: aload_1
      62: ldc           #61                 // String CONSOLE
      64: aload_2
      65: invokevirtual #30                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      68: aload_2
      69: areturn

  private ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent> fileAppender(org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #62                 // class ch/qos/logback/core/rolling/RollingFileAppender
       3: dup
       4: invokespecial #63                 // Method ch/qos/logback/core/rolling/RollingFileAppender."<init>":()V
       7: astore_3
       8: new           #49                 // class ch/qos/logback/classic/encoder/PatternLayoutEncoder
      11: dup
      12: invokespecial #50                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder."<init>":()V
      15: astore        4
      17: aload_0
      18: getfield      #4                  // Field patterns:Lorg/springframework/core/env/PropertyResolver;
      21: ldc           #64                 // String file
      23: ldc           #65                 // String %d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
      25: invokeinterface #54,  3           // InterfaceMethod org/springframework/core/env/PropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: astore        5
      32: aload         4
      34: aload         5
      36: aload_1
      37: invokevirtual #55                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.getContext:()Lch/qos/logback/core/spi/PropertyContainer;
      40: invokestatic  #56                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      43: invokevirtual #57                 // Method ch/qos/logback/classic/encoder/PatternLayoutEncoder.setPattern:(Ljava/lang/String;)V
      46: aload_3
      47: aload         4
      49: invokevirtual #66                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setEncoder:(Lch/qos/logback/core/encoder/Encoder;)V
      52: aload_1
      53: aload         4
      55: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      58: aload_3
      59: aload_2
      60: invokevirtual #67                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setFile:(Ljava/lang/String;)V
      63: aload_0
      64: aload_3
      65: aload_1
      66: aload_2
      67: invokespecial #68                 // Method setRollingPolicy:(Lch/qos/logback/core/rolling/RollingFileAppender;Lorg/springframework/boot/logging/logback/LogbackConfigurator;Ljava/lang/String;)V
      70: aload_0
      71: aload_3
      72: aload_1
      73: invokespecial #69                 // Method setMaxFileSize:(Lch/qos/logback/core/rolling/RollingFileAppender;Lorg/springframework/boot/logging/logback/LogbackConfigurator;)V
      76: aload_1
      77: ldc           #70                 // String FILE
      79: aload_3
      80: invokevirtual #30                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.appender:(Ljava/lang/String;Lch/qos/logback/core/Appender;)V
      83: aload_3
      84: areturn

  private void setRollingPolicy(ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>, org.springframework.boot.logging.logback.LogbackConfigurator, java.lang.String);
    Code:
       0: new           #71                 // class ch/qos/logback/core/rolling/FixedWindowRollingPolicy
       3: dup
       4: invokespecial #72                 // Method ch/qos/logback/core/rolling/FixedWindowRollingPolicy."<init>":()V
       7: astore        4
       9: aload         4
      11: new           #73                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_3
      19: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #76                 // String .%i
      24: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #78                 // Method ch/qos/logback/core/rolling/FixedWindowRollingPolicy.setFileNamePattern:(Ljava/lang/String;)V
      33: aload_1
      34: aload         4
      36: invokevirtual #79                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setRollingPolicy:(Lch/qos/logback/core/rolling/RollingPolicy;)V
      39: aload         4
      41: aload_1
      42: invokevirtual #80                 // Method ch/qos/logback/core/rolling/FixedWindowRollingPolicy.setParent:(Lch/qos/logback/core/FileAppender;)V
      45: aload_2
      46: aload         4
      48: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      51: return

  private void setMaxFileSize(ch.qos.logback.core.rolling.RollingFileAppender<ch.qos.logback.classic.spi.ILoggingEvent>, org.springframework.boot.logging.logback.LogbackConfigurator);
    Code:
       0: new           #81                 // class ch/qos/logback/core/rolling/SizeBasedTriggeringPolicy
       3: dup
       4: invokespecial #82                 // Method ch/qos/logback/core/rolling/SizeBasedTriggeringPolicy."<init>":()V
       7: astore_3
       8: aload_3
       9: ldc           #83                 // String 10MB
      11: invokestatic  #84                 // Method ch/qos/logback/core/util/FileSize.valueOf:(Ljava/lang/String;)Lch/qos/logback/core/util/FileSize;
      14: invokevirtual #85                 // Method ch/qos/logback/core/rolling/SizeBasedTriggeringPolicy.setMaxFileSize:(Lch/qos/logback/core/util/FileSize;)V
      17: goto          56
      20: astore        4
      22: ldc           #81                 // class ch/qos/logback/core/rolling/SizeBasedTriggeringPolicy
      24: ldc           #87                 // String setMaxFileSize
      26: iconst_1
      27: anewarray     #88                 // class java/lang/Class
      30: dup
      31: iconst_0
      32: ldc           #89                 // class java/lang/String
      34: aastore
      35: invokestatic  #90                 // Method org/springframework/util/ReflectionUtils.findMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      38: astore        5
      40: aload         5
      42: aload_3
      43: iconst_1
      44: anewarray     #91                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: ldc           #83                 // String 10MB
      51: aastore
      52: invokestatic  #92                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_1
      57: aload_3
      58: invokevirtual #93                 // Method ch/qos/logback/core/rolling/RollingFileAppender.setTriggeringPolicy:(Lch/qos/logback/core/rolling/TriggeringPolicy;)V
      61: aload_2
      62: aload_3
      63: invokevirtual #28                 // Method org/springframework/boot/logging/logback/LogbackConfigurator.start:(Lch/qos/logback/core/spi/LifeCycle;)V
      66: return
    Exception table:
       from    to  target type
           8    17    20   Class java/lang/NoSuchMethodError

  static {};
    Code:
       0: ldc           #94                 // String UTF-8
       2: invokestatic  #95                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #58                 // Field UTF8:Ljava/nio/charset/Charset;
       8: return
}
