Compiled from "AbstractEmbeddedServletContainerFactory.java"
public abstract class org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory extends org.springframework.boot.context.embedded.AbstractConfigurableEmbeddedServletContainer implements org.springframework.boot.context.embedded.EmbeddedServletContainerFactory {
  protected final org.apache.commons.logging.Log logger;

  private static final java.lang.String[] COMMON_DOC_ROOTS;

  public org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #5                  // Method org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer."<init>":(I)V
       5: aload_0
       6: aload_0
       7: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      13: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: return

  public org.springframework.boot.context.embedded.AbstractEmbeddedServletContainerFactory(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method org/springframework/boot/context/embedded/AbstractConfigurableEmbeddedServletContainer."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_0
       8: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      14: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      17: return

  protected final java.io.File getValidDocumentRoot();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getDocumentRoot:()Ljava/io/File;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          17
      13: aload_0
      14: invokespecial #8                  // Method getWarFileDocumentRoot:()Ljava/io/File;
      17: astore_1
      18: aload_1
      19: ifnull        26
      22: aload_1
      23: goto          30
      26: aload_0
      27: invokespecial #9                  // Method getExplodedWarFileDocumentRoot:()Ljava/io/File;
      30: astore_1
      31: aload_1
      32: ifnull        39
      35: aload_1
      36: goto          43
      39: aload_0
      40: invokespecial #10                 // Method getCommonDocumentRoot:()Ljava/io/File;
      43: astore_1
      44: aload_1
      45: ifnonnull     101
      48: aload_0
      49: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      52: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      57: ifeq          101
      60: aload_0
      61: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      64: new           #12                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #14                 // String None of the document roots
      73: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: getstatic     #16                 // Field COMMON_DOC_ROOTS:[Ljava/lang/String;
      79: invokestatic  #17                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      82: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #19                 // String  point to a directory and will be ignored.
      87: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      98: goto          141
     101: aload_0
     102: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     105: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     110: ifeq          141
     113: aload_0
     114: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     117: new           #12                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #22                 // String Document root:
     126: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_1
     130: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     133: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     141: aload_1
     142: areturn

  private java.io.File getExplodedWarFileDocumentRoot();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #23                 // Method getCodeSourceArchive:()Ljava/io/File;
       5: invokevirtual #24                 // Method getExplodedWarFileDocumentRoot:(Ljava/io/File;)Ljava/io/File;
       8: areturn

  protected java.util.List<java.net.URL> getUrlsOfJarsWithMetaInfResources();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #25                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: astore_1
       8: new           #26                 // class java/util/ArrayList
      11: dup
      12: invokespecial #27                 // Method java/util/ArrayList."<init>":()V
      15: astore_2
      16: aload_1
      17: instanceof    #28                 // class java/net/URLClassLoader
      20: ifeq          75
      23: aload_1
      24: checkcast     #28                 // class java/net/URLClassLoader
      27: invokevirtual #29                 // Method java/net/URLClassLoader.getURLs:()[Ljava/net/URL;
      30: astore_3
      31: aload_3
      32: arraylength
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload         4
      42: if_icmpge     75
      45: aload_3
      46: iload         5
      48: aaload
      49: astore        6
      51: aload_0
      52: aload         6
      54: invokespecial #30                 // Method isStaticResourceJar:(Ljava/net/URL;)Z
      57: ifeq          69
      60: aload_2
      61: aload         6
      63: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: iinc          5, 1
      72: goto          38
      75: aload_2
      76: areturn

  private boolean isStaticResourceJar(java.net.URL);
    Code:
       0: ldc           #32                 // String file
       2: aload_1
       3: invokevirtual #33                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       6: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          61
      12: new           #35                 // class java/io/File
      15: dup
      16: aload_1
      17: invokevirtual #36                 // Method java/net/URL.toURI:()Ljava/net/URI;
      20: invokespecial #37                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      23: astore_2
      24: aload_2
      25: invokevirtual #38                 // Method java/io/File.isDirectory:()Z
      28: ifeq          47
      31: new           #35                 // class java/io/File
      34: dup
      35: aload_2
      36: ldc           #39                 // String META-INF/resources
      38: invokespecial #40                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      41: invokevirtual #38                 // Method java/io/File.isDirectory:()Z
      44: ifne          55
      47: aload_0
      48: aload_2
      49: invokespecial #41                 // Method isResourcesJar:(Ljava/io/File;)Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: aload_1
      62: invokevirtual #42                 // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      65: astore_2
      66: aload_2
      67: instanceof    #43                 // class java/net/JarURLConnection
      70: ifeq          86
      73: aload_0
      74: aload_2
      75: checkcast     #43                 // class java/net/JarURLConnection
      78: invokespecial #44                 // Method isResourcesJar:(Ljava/net/JarURLConnection;)Z
      81: ifeq          86
      84: iconst_1
      85: ireturn
      86: goto          99
      89: astore_2
      90: new           #46                 // class java/lang/IllegalStateException
      93: dup
      94: aload_2
      95: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      98: athrow
      99: iconst_0
     100: ireturn
    Exception table:
       from    to  target type
           0    60    89   Class java/lang/Exception
          61    85    89   Class java/lang/Exception

  protected final java.lang.String getDecodedFile(java.net.URL);
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method java/net/URL.getFile:()Ljava/lang/String;
       4: ldc           #49                 // String UTF-8
       6: invokestatic  #50                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: areturn
      10: astore_2
      11: new           #46                 // class java/lang/IllegalStateException
      14: dup
      15: new           #12                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #52                 // String Failed to decode \'
      24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #48                 // Method java/net/URL.getFile:()Ljava/lang/String;
      31: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #53                 // String \' using UTF-8
      36: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #54                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/io/UnsupportedEncodingException

  private boolean isResourcesJar(java.net.JarURLConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method java/net/JarURLConnection.getJarFile:()Ljava/util/jar/JarFile;
       5: invokespecial #56                 // Method isResourcesJar:(Ljava/util/jar/JarFile;)Z
       8: ireturn
       9: astore_2
      10: aload_0
      11: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #12                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #58                 // String Unable to open jar from connection \'
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #59                 // String \' to determine if it contains static resources
      32: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: aload_2
      39: invokeinterface #60,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      44: iconst_0
      45: ireturn
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  private boolean isResourcesJar(java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method java/io/File.getName:()Ljava/lang/String;
       4: ldc           #62                 // String .jar
       6: invokevirtual #63                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ifeq          31
      12: aload_0
      13: new           #64                 // class java/util/jar/JarFile
      16: dup
      17: aload_1
      18: invokespecial #65                 // Method java/util/jar/JarFile."<init>":(Ljava/io/File;)V
      21: invokespecial #56                 // Method isResourcesJar:(Ljava/util/jar/JarFile;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: astore_2
      34: aload_0
      35: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      38: new           #12                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #66                 // String Unable to open jar \'
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #59                 // String \' to determine if it contains static resources
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: aload_2
      63: invokeinterface #60,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      68: iconst_0
      69: ireturn
    Exception table:
       from    to  target type
           0    32    33   Class java/io/IOException

  private boolean isResourcesJar(java.util.jar.JarFile) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #39                 // String META-INF/resources
       3: invokevirtual #67                 // Method java/util/jar/JarFile.getJarEntry:(Ljava/lang/String;)Ljava/util/jar/JarEntry;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: istore_2
      15: aload_1
      16: invokevirtual #68                 // Method java/util/jar/JarFile.close:()V
      19: iload_2
      20: ireturn
      21: astore_3
      22: aload_1
      23: invokevirtual #68                 // Method java/util/jar/JarFile.close:()V
      26: aload_3
      27: athrow
    Exception table:
       from    to  target type
           0    15    21   any

  java.io.File getExplodedWarFileDocumentRoot(java.io.File);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          40
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #12                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #69                 // String Code archive:
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      40: aload_1
      41: ifnull        108
      44: aload_1
      45: invokevirtual #70                 // Method java/io/File.exists:()Z
      48: ifeq          108
      51: aload_1
      52: invokevirtual #71                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      55: astore_2
      56: aload_2
      57: new           #12                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      64: getstatic     #72                 // Field java/io/File.separatorChar:C
      67: invokevirtual #73                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: ldc           #74                 // String WEB-INF
      72: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: getstatic     #72                 // Field java/io/File.separatorChar:C
      78: invokevirtual #73                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      81: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #75                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      87: istore_3
      88: iload_3
      89: iflt          108
      92: aload_2
      93: iconst_0
      94: iload_3
      95: invokevirtual #76                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      98: astore_2
      99: new           #35                 // class java/io/File
     102: dup
     103: aload_2
     104: invokespecial #77                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     107: areturn
     108: aconst_null
     109: areturn

  private java.io.File getWarFileDocumentRoot();
    Code:
       0: aload_0
       1: ldc           #78                 // String .war
       3: invokespecial #79                 // Method getArchiveFileDocumentRoot:(Ljava/lang/String;)Ljava/io/File;
       6: areturn

  private java.io.File getArchiveFileDocumentRoot(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getCodeSourceArchive:()Ljava/io/File;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       9: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      14: ifeq          45
      17: aload_0
      18: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      21: new           #12                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #69                 // String Code archive:
      30: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_2
      46: ifnull        85
      49: aload_2
      50: invokevirtual #70                 // Method java/io/File.exists:()Z
      53: ifeq          85
      56: aload_2
      57: invokevirtual #38                 // Method java/io/File.isDirectory:()Z
      60: ifne          85
      63: aload_2
      64: invokevirtual #61                 // Method java/io/File.getName:()Ljava/lang/String;
      67: getstatic     #80                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      70: invokevirtual #81                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      73: aload_1
      74: invokevirtual #63                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      77: ifeq          85
      80: aload_2
      81: invokevirtual #82                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      84: areturn
      85: aconst_null
      86: areturn

  private java.io.File getCommonDocumentRoot();
    Code:
       0: getstatic     #16                 // Field COMMON_DOC_ROOTS:[Ljava/lang/String;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     58
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: new           #35                 // class java/io/File
      22: dup
      23: aload         4
      25: invokespecial #77                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      28: astore        5
      30: aload         5
      32: invokevirtual #70                 // Method java/io/File.exists:()Z
      35: ifeq          52
      38: aload         5
      40: invokevirtual #38                 // Method java/io/File.isDirectory:()Z
      43: ifeq          52
      46: aload         5
      48: invokevirtual #82                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
      51: areturn
      52: iinc          3, 1
      55: goto          9
      58: aconst_null
      59: areturn

  private java.io.File getCodeSourceArchive();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #83                 // Method java/lang/Class.getProtectionDomain:()Ljava/security/ProtectionDomain;
       8: invokevirtual #84                 // Method java/security/ProtectionDomain.getCodeSource:()Ljava/security/CodeSource;
      11: invokevirtual #85                 // Method getCodeSourceArchive:(Ljava/security/CodeSource;)Ljava/io/File;
      14: areturn

  java.io.File getCodeSourceArchive(java.security.CodeSource);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #86                 // Method java/security/CodeSource.getLocation:()Ljava/net/URL;
       8: goto          12
      11: aconst_null
      12: astore_2
      13: aload_2
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_2
      20: invokevirtual #42                 // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      23: astore        4
      25: aload         4
      27: instanceof    #43                 // class java/net/JarURLConnection
      30: ifeq          48
      33: aload         4
      35: checkcast     #43                 // class java/net/JarURLConnection
      38: invokevirtual #55                 // Method java/net/JarURLConnection.getJarFile:()Ljava/util/jar/JarFile;
      41: invokevirtual #87                 // Method java/util/jar/JarFile.getName:()Ljava/lang/String;
      44: astore_3
      45: goto          56
      48: aload_2
      49: invokevirtual #36                 // Method java/net/URL.toURI:()Ljava/net/URI;
      52: invokevirtual #88                 // Method java/net/URI.getPath:()Ljava/lang/String;
      55: astore_3
      56: aload_3
      57: ldc           #89                 // String !/
      59: invokevirtual #90                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      62: ifeq          77
      65: aload_3
      66: iconst_0
      67: aload_3
      68: ldc           #89                 // String !/
      70: invokevirtual #75                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      73: invokevirtual #76                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      76: astore_3
      77: new           #35                 // class java/io/File
      80: dup
      81: aload_3
      82: invokespecial #77                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      85: areturn
      86: astore_2
      87: aconst_null
      88: areturn
    Exception table:
       from    to  target type
           0    18    86   Class java/lang/Exception
          19    85    86   Class java/lang/Exception

  protected final java.io.File getValidSessionStoreDir();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #91                 // Method getValidSessionStoreDir:(Z)Ljava/io/File;
       5: areturn

  protected final java.io.File getValidSessionStoreDir(boolean);
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method getSessionStoreDir:()Ljava/io/File;
       4: astore_2
       5: aload_2
       6: ifnonnull     22
       9: new           #93                 // class org/springframework/boot/ApplicationTemp
      12: dup
      13: invokespecial #94                 // Method org/springframework/boot/ApplicationTemp."<init>":()V
      16: ldc           #95                 // String servlet-sessions
      18: invokevirtual #96                 // Method org/springframework/boot/ApplicationTemp.getDir:(Ljava/lang/String;)Ljava/io/File;
      21: areturn
      22: aload_2
      23: invokevirtual #97                 // Method java/io/File.isAbsolute:()Z
      26: ifne          51
      29: new           #35                 // class java/io/File
      32: dup
      33: new           #98                 // class org/springframework/boot/ApplicationHome
      36: dup
      37: invokespecial #99                 // Method org/springframework/boot/ApplicationHome."<init>":()V
      40: invokevirtual #100                // Method org/springframework/boot/ApplicationHome.getDir:()Ljava/io/File;
      43: aload_2
      44: invokevirtual #101                // Method java/io/File.getPath:()Ljava/lang/String;
      47: invokespecial #40                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      50: astore_2
      51: aload_2
      52: invokevirtual #70                 // Method java/io/File.exists:()Z
      55: ifne          67
      58: iload_1
      59: ifeq          67
      62: aload_2
      63: invokevirtual #102                // Method java/io/File.mkdirs:()Z
      66: pop
      67: iload_1
      68: ifeq          78
      71: aload_2
      72: invokevirtual #70                 // Method java/io/File.exists:()Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: new           #12                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #103                // String Session dir
      92: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_2
      96: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: ldc           #104                // String  does not exist
     101: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokestatic  #105                // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     110: aload_2
     111: invokevirtual #106                // Method java/io/File.isFile:()Z
     114: ifne          121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: new           #12                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #103                // String Session dir
     131: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_2
     135: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: ldc           #107                // String  points to a file
     140: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokestatic  #105                // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     149: aload_2
     150: areturn

  protected java.io.File createTempDir(java.lang.String);
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #108                // String .
      13: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: new           #12                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #108                // String .
      28: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #109                // Method getPort:()I
      35: invokevirtual #110                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokestatic  #111                // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      44: astore_2
      45: aload_2
      46: invokevirtual #112                // Method java/io/File.delete:()Z
      49: pop
      50: aload_2
      51: invokevirtual #113                // Method java/io/File.mkdir:()Z
      54: pop
      55: aload_2
      56: invokevirtual #114                // Method java/io/File.deleteOnExit:()V
      59: aload_2
      60: areturn
      61: astore_2
      62: new           #115                // class org/springframework/boot/context/embedded/EmbeddedServletContainerException
      65: dup
      66: new           #12                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #116                // String Unable to create tempDir. java.io.tmpdir is set to
      75: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: ldc           #117                // String java.io.tmpdir
      80: invokestatic  #118                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_2
      90: invokespecial #119                // Method org/springframework/boot/context/embedded/EmbeddedServletContainerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: athrow
    Exception table:
       from    to  target type
           0    60    61   Class java/io/IOException

  static {};
    Code:
       0: iconst_3
       1: anewarray     #120                // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #121                // String src/main/webapp
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #122                // String public
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #123                // String static
      18: aastore
      19: putstatic     #16                 // Field COMMON_DOC_ROOTS:[Ljava/lang/String;
      22: return
}
