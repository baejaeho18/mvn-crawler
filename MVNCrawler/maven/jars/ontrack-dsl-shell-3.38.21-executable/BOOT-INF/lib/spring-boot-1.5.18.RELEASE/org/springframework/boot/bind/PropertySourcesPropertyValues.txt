Compiled from "PropertySourcesPropertyValues.java"
public class org.springframework.boot.bind.PropertySourcesPropertyValues implements org.springframework.beans.PropertyValues {
  private static final java.util.regex.Pattern COLLECTION_PROPERTY;

  private final org.springframework.core.env.PropertySources propertySources;

  private final java.util.Collection<java.lang.String> nonEnumerableFallbackNames;

  private final org.springframework.boot.bind.PropertyNamePatternsMatcher includes;

  private final java.util.Map<java.lang.String, org.springframework.beans.PropertyValue> propertyValues;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, org.springframework.core.env.PropertySource<?>> collectionOwners;

  private final boolean resolvePlaceholders;

  public org.springframework.boot.bind.PropertySourcesPropertyValues(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/core/env/PropertySources;Z)V
       6: return

  public org.springframework.boot.bind.PropertySourcesPropertyValues(org.springframework.core.env.PropertySources, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #2                  // class java/util/Collection
       6: getstatic     #3                  // Field org/springframework/boot/bind/PropertyNamePatternsMatcher.ALL:Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
       9: iload_2
      10: invokespecial #4                  // Method "<init>":(Lorg/springframework/core/env/PropertySources;Ljava/util/Collection;Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;Z)V
      13: return

  public org.springframework.boot.bind.PropertySourcesPropertyValues(org.springframework.core.env.PropertySources, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: new           #5                  // class org/springframework/boot/bind/PatternPropertyNamePatternsMatcher
       6: dup
       7: aload_2
       8: invokespecial #6                  // Method org/springframework/boot/bind/PatternPropertyNamePatternsMatcher."<init>":(Ljava/util/Collection;)V
      11: iconst_1
      12: invokespecial #4                  // Method "<init>":(Lorg/springframework/core/env/PropertySources;Ljava/util/Collection;Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;Z)V
      15: return

  org.springframework.boot.bind.PropertySourcesPropertyValues(org.springframework.core.env.PropertySources, java.util.Collection<java.lang.String>, org.springframework.boot.bind.PropertyNamePatternsMatcher, boolean);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #9                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #10                 // Field propertyValues:Ljava/util/Map;
      15: aload_0
      16: new           #11                 // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #12                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #13                 // Field collectionOwners:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_1
      27: ldc           #14                 // String PropertySources must not be null
      29: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_3
      33: ldc           #16                 // String Includes must not be null
      35: invokestatic  #15                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      38: aload_0
      39: aload_1
      40: putfield      #17                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      43: aload_0
      44: aload_2
      45: putfield      #18                 // Field nonEnumerableFallbackNames:Ljava/util/Collection;
      48: aload_0
      49: aload_3
      50: putfield      #19                 // Field includes:Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
      53: aload_0
      54: iload         4
      56: putfield      #20                 // Field resolvePlaceholders:Z
      59: new           #21                 // class org/springframework/core/env/PropertySourcesPropertyResolver
      62: dup
      63: aload_1
      64: invokespecial #22                 // Method org/springframework/core/env/PropertySourcesPropertyResolver."<init>":(Lorg/springframework/core/env/PropertySources;)V
      67: astore        5
      69: aload_1
      70: invokeinterface #23,  1           // InterfaceMethod org/springframework/core/env/PropertySources.iterator:()Ljava/util/Iterator;
      75: astore        6
      77: aload         6
      79: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: ifeq          110
      87: aload         6
      89: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      94: checkcast     #26                 // class org/springframework/core/env/PropertySource
      97: astore        7
      99: aload_0
     100: aload         7
     102: aload         5
     104: invokespecial #27                 // Method processPropertySource:(Lorg/springframework/core/env/PropertySource;Lorg/springframework/core/env/PropertySourcesPropertyResolver;)V
     107: goto          77
     110: return

  private void processPropertySource(org.springframework.core.env.PropertySource<?>, org.springframework.core.env.PropertySourcesPropertyResolver);
    Code:
       0: aload_1
       1: instanceof    #28                 // class org/springframework/core/env/CompositePropertySource
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #28                 // class org/springframework/core/env/CompositePropertySource
      12: aload_2
      13: invokespecial #29                 // Method processCompositePropertySource:(Lorg/springframework/core/env/CompositePropertySource;Lorg/springframework/core/env/PropertySourcesPropertyResolver;)V
      16: goto          48
      19: aload_1
      20: instanceof    #30                 // class org/springframework/core/env/EnumerablePropertySource
      23: ifeq          42
      26: aload_0
      27: aload_1
      28: checkcast     #30                 // class org/springframework/core/env/EnumerablePropertySource
      31: aload_2
      32: aload_0
      33: getfield      #19                 // Field includes:Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
      36: invokespecial #31                 // Method processEnumerablePropertySource:(Lorg/springframework/core/env/EnumerablePropertySource;Lorg/springframework/core/env/PropertySourcesPropertyResolver;Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;)V
      39: goto          48
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #32                 // Method processNonEnumerablePropertySource:(Lorg/springframework/core/env/PropertySource;Lorg/springframework/core/env/PropertySourcesPropertyResolver;)V
      48: return

  private void processCompositePropertySource(org.springframework.core.env.CompositePropertySource, org.springframework.core.env.PropertySourcesPropertyResolver);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method org/springframework/core/env/CompositePropertySource.getPropertySources:()Ljava/util/Collection;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          40
      19: aload_3
      20: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #26                 // class org/springframework/core/env/PropertySource
      28: astore        4
      30: aload_0
      31: aload         4
      33: aload_2
      34: invokespecial #27                 // Method processPropertySource:(Lorg/springframework/core/env/PropertySource;Lorg/springframework/core/env/PropertySourcesPropertyResolver;)V
      37: goto          10
      40: return

  private void processEnumerablePropertySource(org.springframework.core.env.EnumerablePropertySource<?>, org.springframework.core.env.PropertySourcesPropertyResolver, org.springframework.boot.bind.PropertyNamePatternsMatcher);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method org/springframework/core/env/EnumerablePropertySource.getPropertyNames:()[Ljava/lang/String;
       4: arraylength
       5: ifle          73
       8: aload_1
       9: invokevirtual #35                 // Method org/springframework/core/env/EnumerablePropertySource.getPropertyNames:()[Ljava/lang/String;
      12: astore        4
      14: aload         4
      16: arraylength
      17: istore        5
      19: iconst_0
      20: istore        6
      22: iload         6
      24: iload         5
      26: if_icmpge     73
      29: aload         4
      31: iload         6
      33: aaload
      34: astore        7
      36: aload_3
      37: aload         7
      39: invokeinterface #36,  2           // InterfaceMethod org/springframework/boot/bind/PropertyNamePatternsMatcher.matches:(Ljava/lang/String;)Z
      44: ifeq          67
      47: aload_0
      48: aload_1
      49: aload_2
      50: aload         7
      52: invokespecial #37                 // Method getEnumerableProperty:(Lorg/springframework/core/env/EnumerablePropertySource;Lorg/springframework/core/env/PropertySourcesPropertyResolver;Ljava/lang/String;)Ljava/lang/Object;
      55: astore        8
      57: aload_0
      58: aload         7
      60: aload         8
      62: aload_1
      63: invokespecial #38                 // Method putIfAbsent:(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/core/env/PropertySource;)Lorg/springframework/beans/PropertyValue;
      66: pop
      67: iinc          6, 1
      70: goto          22
      73: return

  private java.lang.Object getEnumerableProperty(org.springframework.core.env.EnumerablePropertySource<?>, org.springframework.core.env.PropertySourcesPropertyResolver, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #20                 // Field resolvePlaceholders:Z
       4: ifeq          15
       7: aload_2
       8: aload_3
       9: ldc           #39                 // class java/lang/Object
      11: invokevirtual #40                 // Method org/springframework/core/env/PropertySourcesPropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      14: areturn
      15: goto          20
      18: astore        4
      20: aload_1
      21: aload_3
      22: invokevirtual #42                 // Method org/springframework/core/env/EnumerablePropertySource.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      25: areturn
    Exception table:
       from    to  target type
           0    14    18   Class java/lang/RuntimeException

  private void processNonEnumerablePropertySource(org.springframework.core.env.PropertySource<?>, org.springframework.core.env.PropertySourcesPropertyResolver);
    Code:
       0: aload_0
       1: getfield      #18                 // Field nonEnumerableFallbackNames:Ljava/util/Collection;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #18                 // Field nonEnumerableFallbackNames:Ljava/util/Collection;
      12: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          100
      27: aload_3
      28: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #43                 // class java/lang/String
      36: astore        4
      38: aload_1
      39: aload         4
      41: invokevirtual #44                 // Method org/springframework/core/env/PropertySource.containsProperty:(Ljava/lang/String;)Z
      44: ifne          50
      47: goto          18
      50: aconst_null
      51: astore        5
      53: aload_2
      54: aload         4
      56: ldc           #39                 // class java/lang/Object
      58: invokevirtual #40                 // Method org/springframework/core/env/PropertySourcesPropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      61: astore        5
      63: goto          68
      66: astore        6
      68: aload         5
      70: ifnonnull     87
      73: aload_1
      74: aload         4
      76: getstatic     #45                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      79: invokevirtual #46                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      82: invokevirtual #47                 // Method org/springframework/core/env/PropertySource.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      85: astore        5
      87: aload_0
      88: aload         4
      90: aload         5
      92: aload_1
      93: invokespecial #38                 // Method putIfAbsent:(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/core/env/PropertySource;)Lorg/springframework/beans/PropertyValue;
      96: pop
      97: goto          18
     100: return
    Exception table:
       from    to  target type
          53    63    66   Class java/lang/RuntimeException

  public org.springframework.beans.PropertyValue[] getPropertyValues();
    Code:
       0: aload_0
       1: getfield      #10                 // Field propertyValues:Ljava/util/Map;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: astore_1
      10: aload_1
      11: aload_1
      12: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.size:()I
      17: anewarray     #50                 // class org/springframework/beans/PropertyValue
      20: invokeinterface #51,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      25: checkcast     #52                 // class "[Lorg/springframework/beans/PropertyValue;"
      28: areturn

  public org.springframework.beans.PropertyValue getPropertyValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field propertyValues:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #50                 // class org/springframework/beans/PropertyValue
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: getfield      #17                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      24: invokeinterface #23,  1           // InterfaceMethod org/springframework/core/env/PropertySources.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          77
      39: aload_3
      40: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #26                 // class org/springframework/core/env/PropertySource
      48: astore        4
      50: aload         4
      52: aload_1
      53: invokevirtual #47                 // Method org/springframework/core/env/PropertySource.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      56: astore        5
      58: aload_0
      59: aload_1
      60: aload         5
      62: aload         4
      64: invokespecial #38                 // Method putIfAbsent:(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/core/env/PropertySource;)Lorg/springframework/beans/PropertyValue;
      67: astore_2
      68: aload_2
      69: ifnull        74
      72: aload_2
      73: areturn
      74: goto          30
      77: aconst_null
      78: areturn

  private org.springframework.beans.PropertyValue putIfAbsent(java.lang.String, java.lang.Object, org.springframework.core.env.PropertySource<?>);
    Code:
       0: aload_2
       1: ifnull        82
       4: aload_0
       5: getfield      #10                 // Field propertyValues:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #54,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ifne          82
      17: aload_0
      18: getfield      #13                 // Field collectionOwners:Ljava/util/concurrent/ConcurrentHashMap;
      21: getstatic     #55                 // Field COLLECTION_PROPERTY:Ljava/util/regex/Pattern;
      24: aload_1
      25: invokevirtual #56                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      28: ldc           #57                 // String []
      30: invokevirtual #58                 // Method java/util/regex/Matcher.replaceAll:(Ljava/lang/String;)Ljava/lang/String;
      33: aload_3
      34: invokevirtual #59                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #26                 // class org/springframework/core/env/PropertySource
      40: astore        4
      42: aload         4
      44: ifnull        53
      47: aload         4
      49: aload_3
      50: if_acmpne     82
      53: new           #60                 // class org/springframework/boot/bind/OriginCapablePropertyValue
      56: dup
      57: aload_1
      58: aload_2
      59: aload_1
      60: aload_3
      61: invokespecial #61                 // Method org/springframework/boot/bind/OriginCapablePropertyValue."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V
      64: astore        5
      66: aload_0
      67: getfield      #10                 // Field propertyValues:Ljava/util/Map;
      70: aload_1
      71: aload         5
      73: invokeinterface #62,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload         5
      81: areturn
      82: aconst_null
      83: areturn

  public org.springframework.beans.PropertyValues changesSince(org.springframework.beans.PropertyValues);
    Code:
       0: new           #63                 // class org/springframework/beans/MutablePropertyValues
       3: dup
       4: invokespecial #64                 // Method org/springframework/beans/MutablePropertyValues."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #65                 // Method getPropertyValues:()[Lorg/springframework/beans/PropertyValue;
      12: astore_3
      13: aload_3
      14: arraylength
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     74
      27: aload_3
      28: iload         5
      30: aaload
      31: astore        6
      33: aload_1
      34: aload         6
      36: invokevirtual #66                 // Method org/springframework/beans/PropertyValue.getName:()Ljava/lang/String;
      39: invokeinterface #67,  2           // InterfaceMethod org/springframework/beans/PropertyValues.getPropertyValue:(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
      44: astore        7
      46: aload         7
      48: ifnull        61
      51: aload         7
      53: aload         6
      55: invokevirtual #68                 // Method org/springframework/beans/PropertyValue.equals:(Ljava/lang/Object;)Z
      58: ifne          68
      61: aload_2
      62: aload         6
      64: invokevirtual #69                 // Method org/springframework/beans/MutablePropertyValues.addPropertyValue:(Lorg/springframework/beans/PropertyValue;)Lorg/springframework/beans/MutablePropertyValues;
      67: pop
      68: iinc          5, 1
      71: goto          20
      74: aload_2
      75: areturn

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method getPropertyValue:(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field propertyValues:Ljava/util/Map;
       4: invokeinterface #71,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  static {};
    Code:
       0: ldc           #72                 // String \\[(\\d+)\\](\\.\\S+)?
       2: invokestatic  #73                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #55                 // Field COLLECTION_PROPERTY:Ljava/util/regex/Pattern;
       8: return
}
