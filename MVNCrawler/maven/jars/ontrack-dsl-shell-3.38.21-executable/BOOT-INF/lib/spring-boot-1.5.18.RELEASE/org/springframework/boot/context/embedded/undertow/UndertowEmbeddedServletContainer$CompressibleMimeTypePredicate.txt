Compiled from "UndertowEmbeddedServletContainer.java"
class org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer$CompressibleMimeTypePredicate implements io.undertow.predicate.Predicate {
  private final java.util.List<org.springframework.util.MimeType> mimeTypes;

  org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer$CompressibleMimeTypePredicate(java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: arraylength
      11: invokespecial #3                  // Method java/util/ArrayList."<init>":(I)V
      14: putfield      #4                  // Field mimeTypes:Ljava/util/List;
      17: aload_1
      18: astore_2
      19: aload_2
      20: arraylength
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpge     58
      31: aload_2
      32: iload         4
      34: aaload
      35: astore        5
      37: aload_0
      38: getfield      #4                  // Field mimeTypes:Ljava/util/List;
      41: aload         5
      43: invokestatic  #5                  // Method org/springframework/util/MimeTypeUtils.parseMimeType:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      46: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: iinc          4, 1
      55: goto          25
      58: return

  public boolean resolve(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: ldc           #9                  // String Content-Type
       6: invokevirtual #10                 // Method io/undertow/util/HeaderMap.getFirst:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: ifnull        61
      14: aload_0
      15: getfield      #4                  // Field mimeTypes:Ljava/util/List;
      18: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          61
      33: aload_3
      34: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #14                 // class org/springframework/util/MimeType
      42: astore        4
      44: aload         4
      46: aload_2
      47: invokestatic  #5                  // Method org/springframework/util/MimeTypeUtils.parseMimeType:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      50: invokevirtual #15                 // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
      53: ifeq          58
      56: iconst_1
      57: ireturn
      58: goto          24
      61: iconst_0
      62: ireturn
}
