Compiled from "ExtendedWhitespaceThrowablePatternConverter.java"
public final class org.springframework.boot.logging.log4j2.ExtendedWhitespaceThrowablePatternConverter extends org.apache.logging.log4j.core.pattern.ThrowablePatternConverter {
  private final org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter delegate;

  private org.springframework.boot.logging.log4j2.ExtendedWhitespaceThrowablePatternConverter(java.lang.String[]);
    Code:
       0: aload_0
       1: ldc           #1                  // String WhitespaceExtendedThrowable
       3: ldc           #2                  // String throwable
       5: aload_1
       6: invokespecial #3                  // Method org/apache/logging/log4j/core/pattern/ThrowablePatternConverter."<init>":(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: invokestatic  #4                  // Method org/apache/logging/log4j/core/pattern/ExtendedThrowablePatternConverter.newInstance:([Ljava/lang/String;)Lorg/apache/logging/log4j/core/pattern/ExtendedThrowablePatternConverter;
      14: putfield      #5                  // Field delegate:Lorg/apache/logging/log4j/core/pattern/ExtendedThrowablePatternConverter;
      17: return

  public void format(org.apache.logging.log4j.core.LogEvent, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrown:()Ljava/lang/Throwable;
       6: ifnull        42
       9: aload_2
      10: aload_0
      11: getfield      #7                  // Field options:Lorg/apache/logging/log4j/core/impl/ThrowableFormatOptions;
      14: invokevirtual #8                  // Method org/apache/logging/log4j/core/impl/ThrowableFormatOptions.getSeparator:()Ljava/lang/String;
      17: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: aload_0
      22: getfield      #5                  // Field delegate:Lorg/apache/logging/log4j/core/pattern/ExtendedThrowablePatternConverter;
      25: aload_1
      26: aload_2
      27: invokevirtual #10                 // Method org/apache/logging/log4j/core/pattern/ExtendedThrowablePatternConverter.format:(Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/StringBuilder;)V
      30: aload_2
      31: aload_0
      32: getfield      #7                  // Field options:Lorg/apache/logging/log4j/core/impl/ThrowableFormatOptions;
      35: invokevirtual #8                  // Method org/apache/logging/log4j/core/impl/ThrowableFormatOptions.getSeparator:()Ljava/lang/String;
      38: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: return

  public static org.springframework.boot.logging.log4j2.ExtendedWhitespaceThrowablePatternConverter newInstance(java.lang.String[]);
    Code:
       0: new           #11                 // class org/springframework/boot/logging/log4j2/ExtendedWhitespaceThrowablePatternConverter
       3: dup
       4: aload_0
       5: invokespecial #12                 // Method "<init>":([Ljava/lang/String;)V
       8: areturn
}
