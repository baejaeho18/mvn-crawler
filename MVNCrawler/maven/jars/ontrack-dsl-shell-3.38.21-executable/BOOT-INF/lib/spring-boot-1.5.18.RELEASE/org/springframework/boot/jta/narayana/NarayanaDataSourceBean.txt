Compiled from "NarayanaDataSourceBean.java"
public class org.springframework.boot.jta.narayana.NarayanaDataSourceBean implements javax.sql.DataSource {
  private final javax.sql.XADataSource xaDataSource;

  public org.springframework.boot.jta.narayana.NarayanaDataSourceBean(javax.sql.XADataSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String XADataSource must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
      15: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: new           #5                  // class java/util/Properties
       3: dup
       4: invokespecial #6                  // Method java/util/Properties."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #7                  // Field com/arjuna/ats/jdbc/TransactionalDriver.XADataSource:Ljava/lang/Object;
      12: aload_0
      13: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
      16: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aconst_null
      21: aload_1
      22: invokestatic  #9                  // Method com/arjuna/ats/internal/jdbc/ConnectionManager.create:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
      25: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #5                  // class java/util/Properties
       3: dup
       4: invokespecial #6                  // Method java/util/Properties."<init>":()V
       7: astore_3
       8: aload_3
       9: getstatic     #7                  // Field com/arjuna/ats/jdbc/TransactionalDriver.XADataSource:Ljava/lang/Object;
      12: aload_0
      13: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
      16: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_3
      21: ldc           #11                 // String user
      23: aload_1
      24: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_3
      29: ldc           #12                 // String password
      31: aload_2
      32: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aconst_null
      37: aload_3
      38: invokestatic  #9                  // Method com/arjuna/ats/internal/jdbc/ConnectionManager.create:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;
      41: areturn

  public java.io.PrintWriter getLogWriter() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
       4: invokeinterface #13,  1           // InterfaceMethod javax/sql/XADataSource.getLogWriter:()Ljava/io/PrintWriter;
       9: areturn

  public void setLogWriter(java.io.PrintWriter) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod javax/sql/XADataSource.setLogWriter:(Ljava/io/PrintWriter;)V
      10: return

  public void setLoginTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
       4: iload_1
       5: invokeinterface #15,  2           // InterfaceMethod javax/sql/XADataSource.setLoginTimeout:(I)V
      10: return

  public int getLoginTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
       4: invokeinterface #16,  1           // InterfaceMethod javax/sql/XADataSource.getLoginTimeout:()I
       9: ireturn

  public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException;
    Code:
       0: new           #17                 // class java/sql/SQLFeatureNotSupportedException
       3: dup
       4: invokespecial #18                 // Method java/sql/SQLFeatureNotSupportedException."<init>":()V
       7: athrow

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method isWrapperFor:(Ljava/lang/Class;)Z
       5: ifeq          10
       8: aload_0
       9: areturn
      10: aload_1
      11: aload_0
      12: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
      15: invokestatic  #20                 // Method org/springframework/util/ClassUtils.isAssignableValue:(Ljava/lang/Class;Ljava/lang/Object;)Z
      18: ifeq          26
      21: aload_0
      22: getfield      #4                  // Field xaDataSource:Ljavax/sql/XADataSource;
      25: areturn
      26: new           #21                 // class java/sql/SQLException
      29: dup
      30: new           #22                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_0
      38: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #26                 // String  is not a wrapper for
      46: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #29                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      59: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn
}
