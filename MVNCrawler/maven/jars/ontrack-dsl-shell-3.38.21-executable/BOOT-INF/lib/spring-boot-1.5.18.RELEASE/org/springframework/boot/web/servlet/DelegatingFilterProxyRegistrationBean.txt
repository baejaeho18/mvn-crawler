Compiled from "DelegatingFilterProxyRegistrationBean.java"
public class org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean extends org.springframework.boot.web.servlet.AbstractFilterRegistrationBean implements org.springframework.context.ApplicationContextAware {
  private org.springframework.context.ApplicationContext applicationContext;

  private final java.lang.String targetBeanName;

  public org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean(java.lang.String, org.springframework.boot.web.servlet.ServletRegistrationBean...);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean."<init>":([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
       5: aload_1
       6: ldc           #2                  // String TargetBeanName must not be null or empty
       8: invokestatic  #3                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field targetBeanName:Ljava/lang/String;
      16: aload_0
      17: aload_1
      18: invokevirtual #5                  // Method setName:(Ljava/lang/String;)V
      21: return

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  protected java.lang.String getTargetBeanName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field targetBeanName:Ljava/lang/String;
       4: areturn

  public javax.servlet.Filter getFilter();
    Code:
       0: new           #7                  // class org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field targetBeanName:Ljava/lang/String;
       9: aload_0
      10: invokespecial #8                  // Method getWebApplicationContext:()Lorg/springframework/web/context/WebApplicationContext;
      13: invokespecial #9                  // Method org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean$1."<init>":(Lorg/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean;Ljava/lang/String;Lorg/springframework/web/context/WebApplicationContext;)V
      16: areturn

  private org.springframework.web.context.WebApplicationContext getWebApplicationContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: ldc           #10                 // String ApplicationContext be injected
       6: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: ldc           #12                 // class org/springframework/web/context/WebApplicationContext
      11: aload_0
      12: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      15: invokestatic  #13                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #6                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      22: checkcast     #12                 // class org/springframework/web/context/WebApplicationContext
      25: areturn

  public void onStartup(javax.servlet.ServletContext) throws javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.onStartup:(Ljavax/servlet/ServletContext;)V
       5: return

  public boolean isMatchAfter();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.isMatchAfter:()Z
       4: ireturn

  public void setMatchAfter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #16                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setMatchAfter:(Z)V
       5: return

  public void setDispatcherTypes(java.util.EnumSet);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setDispatcherTypes:(Ljava/util/EnumSet;)V
       5: return

  public void setDispatcherTypes(javax.servlet.DispatcherType, javax.servlet.DispatcherType[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #18                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setDispatcherTypes:(Ljavax/servlet/DispatcherType;[Ljavax/servlet/DispatcherType;)V
       6: return

  public void addUrlPatterns(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.addUrlPatterns:([Ljava/lang/String;)V
       5: return

  public java.util.Collection getUrlPatterns();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.getUrlPatterns:()Ljava/util/Collection;
       4: areturn

  public void setUrlPatterns(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setUrlPatterns:(Ljava/util/Collection;)V
       5: return

  public void addServletNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.addServletNames:([Ljava/lang/String;)V
       5: return

  public java.util.Collection getServletNames();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.getServletNames:()Ljava/util/Collection;
       4: areturn

  public void setServletNames(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setServletNames:(Ljava/util/Collection;)V
       5: return

  public void addServletRegistrationBeans(org.springframework.boot.web.servlet.ServletRegistrationBean[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.addServletRegistrationBeans:([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V
       5: return

  public java.util.Collection getServletRegistrationBeans();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.getServletRegistrationBeans:()Ljava/util/Collection;
       4: areturn

  public void setServletRegistrationBeans(java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.setServletRegistrationBeans:(Ljava/util/Collection;)V
       5: return
}
