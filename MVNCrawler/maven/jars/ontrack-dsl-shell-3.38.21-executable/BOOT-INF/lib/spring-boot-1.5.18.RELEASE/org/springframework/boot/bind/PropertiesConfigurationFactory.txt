Compiled from "PropertiesConfigurationFactory.java"
public class org.springframework.boot.bind.PropertiesConfigurationFactory<T> implements org.springframework.beans.factory.FactoryBean<T>, org.springframework.context.ApplicationContextAware, org.springframework.context.MessageSourceAware, org.springframework.beans.factory.InitializingBean {
  private static final char[] EXACT_DELIMITERS;

  private static final char[] TARGET_NAME_DELIMITERS;

  private static final org.apache.commons.logging.Log logger;

  private boolean ignoreUnknownFields;

  private boolean ignoreInvalidFields;

  private boolean exceptionIfInvalid;

  private org.springframework.core.env.PropertySources propertySources;

  private final T target;

  private org.springframework.validation.Validator validator;

  private org.springframework.context.ApplicationContext applicationContext;

  private org.springframework.context.MessageSource messageSource;

  private boolean hasBeenBound;

  private boolean ignoreNestedProperties;

  private java.lang.String targetName;

  private org.springframework.core.convert.ConversionService conversionService;

  private boolean resolvePlaceholders;

  public org.springframework.boot.bind.PropertiesConfigurationFactory(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field ignoreUnknownFields:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field exceptionIfInvalid:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hasBeenBound:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field ignoreNestedProperties:Z
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field resolvePlaceholders:Z
      29: aload_1
      30: ldc           #7                  // String target must not be null
      32: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      35: aload_0
      36: aload_1
      37: putfield      #9                  // Field target:Ljava/lang/Object;
      40: return

  public org.springframework.boot.bind.PropertiesConfigurationFactory(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field ignoreUnknownFields:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field exceptionIfInvalid:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hasBeenBound:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field ignoreNestedProperties:Z
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field resolvePlaceholders:Z
      29: aload_1
      30: ldc           #10                 // String type must not be null
      32: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      35: aload_0
      36: aload_1
      37: invokestatic  #11                 // Method org/springframework/beans/BeanUtils.instantiate:(Ljava/lang/Class;)Ljava/lang/Object;
      40: putfield      #9                  // Field target:Ljava/lang/Object;
      43: return

  public void setIgnoreNestedProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field ignoreNestedProperties:Z
       5: return

  public void setIgnoreUnknownFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field ignoreUnknownFields:Z
       5: return

  public void setIgnoreInvalidFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field ignoreInvalidFields:Z
       5: return

  public void setTargetName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field targetName:Ljava/lang/String;
       5: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public void setMessageSource(org.springframework.context.MessageSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field messageSource:Lorg/springframework/context/MessageSource;
       5: return

  public void setPropertySources(org.springframework.core.env.PropertySources);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
       5: return

  public void setConversionService(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       5: return

  public void setValidator(org.springframework.validation.Validator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field validator:Lorg/springframework/validation/Validator;
       5: return

  public void setExceptionIfInvalid(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field exceptionIfInvalid:Z
       5: return

  public void setResolvePlaceholders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field resolvePlaceholders:Z
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method bindPropertiesToTarget:()V
       4: return

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field target:Ljava/lang/Object;
       4: ifnonnull     10
       7: ldc           #20                 // class java/lang/Object
       9: areturn
      10: aload_0
      11: getfield      #9                  // Field target:Ljava/lang/Object;
      14: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public T getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasBeenBound:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #19                 // Method bindPropertiesToTarget:()V
      11: aload_0
      12: getfield      #9                  // Field target:Ljava/lang/Object;
      15: areturn

  public void bindPropertiesToTarget() throws org.springframework.validation.BindException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #22                 // String PropertySources should not be null
      14: invokestatic  #23                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: getstatic     #24                 // Field logger:Lorg/apache/commons/logging/Log;
      20: invokeinterface #25,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      25: ifeq          58
      28: getstatic     #24                 // Field logger:Lorg/apache/commons/logging/Log;
      31: new           #26                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #28                 // String Property Sources:
      40: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #16                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      47: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      58: aload_0
      59: iconst_1
      60: putfield      #4                  // Field hasBeenBound:Z
      63: aload_0
      64: invokespecial #33                 // Method doBindPropertiesToTarget:()V
      67: goto          91
      70: astore_1
      71: aload_0
      72: getfield      #3                  // Field exceptionIfInvalid:Z
      75: ifeq          80
      78: aload_1
      79: athrow
      80: getstatic     #24                 // Field logger:Lorg/apache/commons/logging/Log;
      83: ldc           #35                 // String Failed to load Properties validation bean. Your Properties may be invalid.
      85: aload_1
      86: invokeinterface #36,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      91: return
    Exception table:
       from    to  target type
          17    67    70   Class org/springframework/validation/BindException

  private void doBindPropertiesToTarget() throws org.springframework.validation.BindException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field targetName:Ljava/lang/String;
       4: ifnull        25
       7: new           #37                 // class org/springframework/boot/bind/RelaxedDataBinder
      10: dup
      11: aload_0
      12: getfield      #9                  // Field target:Ljava/lang/Object;
      15: aload_0
      16: getfield      #13                 // Field targetName:Ljava/lang/String;
      19: invokespecial #38                 // Method org/springframework/boot/bind/RelaxedDataBinder."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      22: goto          36
      25: new           #37                 // class org/springframework/boot/bind/RelaxedDataBinder
      28: dup
      29: aload_0
      30: getfield      #9                  // Field target:Ljava/lang/Object;
      33: invokespecial #39                 // Method org/springframework/boot/bind/RelaxedDataBinder."<init>":(Ljava/lang/Object;)V
      36: astore_1
      37: aload_0
      38: getfield      #18                 // Field validator:Lorg/springframework/validation/Validator;
      41: ifnull        71
      44: aload_0
      45: getfield      #18                 // Field validator:Lorg/springframework/validation/Validator;
      48: aload_1
      49: invokevirtual #40                 // Method org/springframework/boot/bind/RelaxedDataBinder.getTarget:()Ljava/lang/Object;
      52: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: invokeinterface #41,  2           // InterfaceMethod org/springframework/validation/Validator.supports:(Ljava/lang/Class;)Z
      60: ifeq          71
      63: aload_1
      64: aload_0
      65: getfield      #18                 // Field validator:Lorg/springframework/validation/Validator;
      68: invokevirtual #42                 // Method org/springframework/boot/bind/RelaxedDataBinder.setValidator:(Lorg/springframework/validation/Validator;)V
      71: aload_0
      72: getfield      #17                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      75: ifnull        86
      78: aload_1
      79: aload_0
      80: getfield      #17                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      83: invokevirtual #43                 // Method org/springframework/boot/bind/RelaxedDataBinder.setConversionService:(Lorg/springframework/core/convert/ConversionService;)V
      86: aload_1
      87: ldc           #45                 // int 2147483647
      89: invokevirtual #46                 // Method org/springframework/boot/bind/RelaxedDataBinder.setAutoGrowCollectionLimit:(I)V
      92: aload_1
      93: aload_0
      94: getfield      #5                  // Field ignoreNestedProperties:Z
      97: invokevirtual #47                 // Method org/springframework/boot/bind/RelaxedDataBinder.setIgnoreNestedProperties:(Z)V
     100: aload_1
     101: aload_0
     102: getfield      #12                 // Field ignoreInvalidFields:Z
     105: invokevirtual #48                 // Method org/springframework/boot/bind/RelaxedDataBinder.setIgnoreInvalidFields:(Z)V
     108: aload_1
     109: aload_0
     110: getfield      #2                  // Field ignoreUnknownFields:Z
     113: invokevirtual #49                 // Method org/springframework/boot/bind/RelaxedDataBinder.setIgnoreUnknownFields:(Z)V
     116: aload_0
     117: aload_1
     118: invokevirtual #50                 // Method customizeBinder:(Lorg/springframework/validation/DataBinder;)V
     121: aload_0
     122: getfield      #14                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     125: ifnull        154
     128: new           #51                 // class org/springframework/beans/support/ResourceEditorRegistrar
     131: dup
     132: aload_0
     133: getfield      #14                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     136: aload_0
     137: getfield      #14                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
     140: invokeinterface #52,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
     145: invokespecial #53                 // Method org/springframework/beans/support/ResourceEditorRegistrar."<init>":(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;)V
     148: astore_2
     149: aload_2
     150: aload_1
     151: invokevirtual #54                 // Method org/springframework/beans/support/ResourceEditorRegistrar.registerCustomEditors:(Lorg/springframework/beans/PropertyEditorRegistry;)V
     154: aload_0
     155: invokespecial #55                 // Method getRelaxedTargetNames:()Ljava/lang/Iterable;
     158: astore_2
     159: aload_0
     160: aload_2
     161: invokespecial #56                 // Method getNames:(Ljava/lang/Iterable;)Ljava/util/Set;
     164: astore_3
     165: aload_0
     166: aload_3
     167: aload_2
     168: invokespecial #57                 // Method getPropertySourcesPropertyValues:(Ljava/util/Set;Ljava/lang/Iterable;)Lorg/springframework/beans/PropertyValues;
     171: astore        4
     173: aload_1
     174: aload         4
     176: invokevirtual #58                 // Method org/springframework/boot/bind/RelaxedDataBinder.bind:(Lorg/springframework/beans/PropertyValues;)V
     179: aload_0
     180: getfield      #18                 // Field validator:Lorg/springframework/validation/Validator;
     183: ifnull        190
     186: aload_1
     187: invokevirtual #59                 // Method org/springframework/boot/bind/RelaxedDataBinder.validate:()V
     190: aload_0
     191: aload_1
     192: invokespecial #60                 // Method checkForBindingErrors:(Lorg/springframework/boot/bind/RelaxedDataBinder;)V
     195: return

  private java.lang.Iterable<java.lang.String> getRelaxedTargetNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field target:Ljava/lang/Object;
       4: ifnull        31
       7: aload_0
       8: getfield      #13                 // Field targetName:Ljava/lang/String;
      11: invokestatic  #61                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      14: ifeq          31
      17: new           #62                 // class org/springframework/boot/bind/RelaxedNames
      20: dup
      21: aload_0
      22: getfield      #13                 // Field targetName:Ljava/lang/String;
      25: invokespecial #63                 // Method org/springframework/boot/bind/RelaxedNames."<init>":(Ljava/lang/String;)V
      28: goto          32
      31: aconst_null
      32: areturn

  private java.util.Set<java.lang.String> getNames(java.lang.Iterable<java.lang.String>);
    Code:
       0: new           #64                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #65                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #9                  // Field target:Ljava/lang/Object;
      12: ifnull        258
      15: aload_0
      16: getfield      #9                  // Field target:Ljava/lang/Object;
      19: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokestatic  #66                 // Method org/springframework/beans/BeanUtils.getPropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
      25: astore_3
      26: aload_3
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iload         6
      39: iload         5
      41: if_icmpge     258
      44: aload         4
      46: iload         6
      48: aaload
      49: astore        7
      51: aload         7
      53: invokevirtual #67                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      56: astore        8
      58: aload         8
      60: ldc           #68                 // String class
      62: invokevirtual #69                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifne          252
      68: aload         8
      70: invokestatic  #70                 // Method org/springframework/boot/bind/RelaxedNames.forCamelCase:(Ljava/lang/String;)Lorg/springframework/boot/bind/RelaxedNames;
      73: astore        9
      75: aload_1
      76: ifnonnull     123
      79: aload         9
      81: invokevirtual #71                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
      84: astore        10
      86: aload         10
      88: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          120
      96: aload         10
      98: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #74                 // class java/lang/String
     106: astore        11
     108: aload_2
     109: aload         11
     111: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          86
     120: goto          252
     123: aload_1
     124: invokeinterface #76,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     129: astore        10
     131: aload         10
     133: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          252
     141: aload         10
     143: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #74                 // class java/lang/String
     151: astore        11
     153: aload         9
     155: invokevirtual #71                 // Method org/springframework/boot/bind/RelaxedNames.iterator:()Ljava/util/Iterator;
     158: astore        12
     160: aload         12
     162: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     167: ifeq          249
     170: aload         12
     172: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     177: checkcast     #74                 // class java/lang/String
     180: astore        13
     182: aload_2
     183: new           #26                 // class java/lang/StringBuilder
     186: dup
     187: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     190: aload         11
     192: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: ldc           #77                 // String .
     197: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload         13
     202: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     213: pop
     214: aload_2
     215: new           #26                 // class java/lang/StringBuilder
     218: dup
     219: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     222: aload         11
     224: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #78                 // String _
     229: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload         13
     234: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     245: pop
     246: goto          160
     249: goto          131
     252: iinc          6, 1
     255: goto          37
     258: aload_2
     259: areturn

  private org.springframework.beans.PropertyValues getPropertySourcesPropertyValues(java.util.Set<java.lang.String>, java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #79                 // Method getPropertyNamePatternsMatcher:(Ljava/util/Set;Ljava/lang/Iterable;)Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
       6: astore_3
       7: new           #80                 // class org/springframework/boot/bind/PropertySourcesPropertyValues
      10: dup
      11: aload_0
      12: getfield      #16                 // Field propertySources:Lorg/springframework/core/env/PropertySources;
      15: aload_1
      16: aload_3
      17: aload_0
      18: getfield      #6                  // Field resolvePlaceholders:Z
      21: invokespecial #81                 // Method org/springframework/boot/bind/PropertySourcesPropertyValues."<init>":(Lorg/springframework/core/env/PropertySources;Ljava/util/Collection;Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;Z)V
      24: areturn

  private org.springframework.boot.bind.PropertyNamePatternsMatcher getPropertyNamePatternsMatcher(java.util.Set<java.lang.String>, java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ignoreUnknownFields:Z
       4: ifeq          27
       7: aload_0
       8: invokespecial #82                 // Method isMapTarget:()Z
      11: ifne          27
      14: new           #83                 // class org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher
      17: dup
      18: getstatic     #84                 // Field EXACT_DELIMITERS:[C
      21: iconst_1
      22: aload_1
      23: invokespecial #85                 // Method org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher."<init>":([CZLjava/util/Set;)V
      26: areturn
      27: aload_2
      28: ifnull        94
      31: new           #86                 // class java/util/HashSet
      34: dup
      35: invokespecial #87                 // Method java/util/HashSet."<init>":()V
      38: astore_3
      39: aload_2
      40: invokeinterface #76,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      45: astore        4
      47: aload         4
      49: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          81
      57: aload         4
      59: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #74                 // class java/lang/String
      67: astore        5
      69: aload_3
      70: aload         5
      72: invokeinterface #75,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      77: pop
      78: goto          47
      81: new           #83                 // class org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher
      84: dup
      85: getstatic     #88                 // Field TARGET_NAME_DELIMITERS:[C
      88: iconst_1
      89: aload_3
      90: invokespecial #85                 // Method org/springframework/boot/bind/DefaultPropertyNamePatternsMatcher."<init>":([CZLjava/util/Set;)V
      93: areturn
      94: getstatic     #89                 // Field org/springframework/boot/bind/PropertyNamePatternsMatcher.ALL:Lorg/springframework/boot/bind/PropertyNamePatternsMatcher;
      97: areturn

  private boolean isMapTarget();
    Code:
       0: aload_0
       1: getfield      #9                  // Field target:Ljava/lang/Object;
       4: ifnull        26
       7: ldc           #90                 // class java/util/Map
       9: aload_0
      10: getfield      #9                  // Field target:Ljava/lang/Object;
      13: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: invokevirtual #91                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  private void checkForBindingErrors(org.springframework.boot.bind.RelaxedDataBinder) throws org.springframework.validation.BindException;
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method org/springframework/boot/bind/RelaxedDataBinder.getBindingResult:()Lorg/springframework/validation/BindingResult;
       4: astore_2
       5: aload_2
       6: invokeinterface #93,  1           // InterfaceMethod org/springframework/validation/BindingResult.hasErrors:()Z
      11: ifeq          137
      14: getstatic     #24                 // Field logger:Lorg/apache/commons/logging/Log;
      17: ldc           #94                 // String Properties configuration failed validation
      19: invokeinterface #95,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      24: aload_2
      25: invokeinterface #96,  1           // InterfaceMethod org/springframework/validation/BindingResult.getAllErrors:()Ljava/util/List;
      30: invokeinterface #97,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          121
      45: aload_3
      46: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #98                 // class org/springframework/validation/ObjectError
      54: astore        4
      56: getstatic     #24                 // Field logger:Lorg/apache/commons/logging/Log;
      59: aload_0
      60: getfield      #15                 // Field messageSource:Lorg/springframework/context/MessageSource;
      63: ifnull        111
      66: new           #26                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      73: aload_0
      74: getfield      #15                 // Field messageSource:Lorg/springframework/context/MessageSource;
      77: aload         4
      79: invokestatic  #99                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      82: invokeinterface #100,  3          // InterfaceMethod org/springframework/context/MessageSource.getMessage:(Lorg/springframework/context/MessageSourceResolvable;Ljava/util/Locale;)Ljava/lang/String;
      87: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #101                // String  (
      92: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload         4
      97: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: ldc           #102                // String )
     102: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: goto          113
     111: aload         4
     113: invokeinterface #95,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     118: goto          36
     121: aload_0
     122: getfield      #3                  // Field exceptionIfInvalid:Z
     125: ifeq          137
     128: new           #34                 // class org/springframework/validation/BindException
     131: dup
     132: aload_2
     133: invokespecial #103                // Method org/springframework/validation/BindException."<init>":(Lorg/springframework/validation/BindingResult;)V
     136: athrow
     137: return

  protected void customizeBinder(org.springframework.validation.DataBinder);
    Code:
       0: return

  static {};
    Code:
       0: iconst_3
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        95
       7: castore
       8: dup
       9: iconst_1
      10: bipush        46
      12: castore
      13: dup
      14: iconst_2
      15: bipush        91
      17: castore
      18: putstatic     #84                 // Field EXACT_DELIMITERS:[C
      21: iconst_2
      22: newarray       char
      24: dup
      25: iconst_0
      26: bipush        95
      28: castore
      29: dup
      30: iconst_1
      31: bipush        46
      33: castore
      34: putstatic     #88                 // Field TARGET_NAME_DELIMITERS:[C
      37: ldc           #104                // class org/springframework/boot/bind/PropertiesConfigurationFactory
      39: invokestatic  #105                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      42: putstatic     #24                 // Field logger:Lorg/apache/commons/logging/Log;
      45: return
}
