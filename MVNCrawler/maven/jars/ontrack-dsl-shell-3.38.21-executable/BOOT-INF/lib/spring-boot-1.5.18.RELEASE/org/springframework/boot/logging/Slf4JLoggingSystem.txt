Compiled from "Slf4JLoggingSystem.java"
public abstract class org.springframework.boot.logging.Slf4JLoggingSystem extends org.springframework.boot.logging.AbstractLoggingSystem {
  private static final java.lang.String BRIDGE_HANDLER;

  public org.springframework.boot.logging.Slf4JLoggingSystem(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/boot/logging/AbstractLoggingSystem."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  public void beforeInitialize();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/boot/logging/AbstractLoggingSystem.beforeInitialize:()V
       4: aload_0
       5: invokespecial #3                  // Method configureJdkLoggingBridgeHandler:()V
       8: return

  public void cleanUp();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method removeJdkLoggingBridgeHandler:()V
       4: return

  protected void loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_2
       1: ldc           #5                  // String Location must not be null
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnull        19
      10: aload_0
      11: aload_1
      12: invokevirtual #7                  // Method org/springframework/boot/logging/LoggingInitializationContext.getEnvironment:()Lorg/springframework/core/env/Environment;
      15: aload_3
      16: invokevirtual #8                  // Method applySystemProperties:(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/logging/LogFile;)V
      19: return

  private void configureJdkLoggingBridgeHandler();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isBridgeHandlerAvailable:()Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #4                  // Method removeJdkLoggingBridgeHandler:()V
      11: invokestatic  #10                 // Method org/slf4j/bridge/SLF4JBridgeHandler.install:()V
      14: goto          18
      17: astore_1
      18: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/Throwable

  protected final boolean isBridgeHandlerAvailable();
    Code:
       0: ldc           #13                 // String org.slf4j.bridge.SLF4JBridgeHandler
       2: aload_0
       3: invokevirtual #14                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       6: invokestatic  #15                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
       9: ireturn

  private void removeJdkLoggingBridgeHandler();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isBridgeHandlerAvailable:()Z
       4: ifeq          17
       7: invokestatic  #16                 // Method org/slf4j/bridge/SLF4JBridgeHandler.removeHandlersForRootLogger:()V
      10: goto          17
      13: astore_1
      14: invokestatic  #18                 // Method org/slf4j/bridge/SLF4JBridgeHandler.uninstall:()V
      17: goto          21
      20: astore_1
      21: return
    Exception table:
       from    to  target type
           7    10    13   Class java/lang/NoSuchMethodError
           0    17    20   Class java/lang/Throwable
}
