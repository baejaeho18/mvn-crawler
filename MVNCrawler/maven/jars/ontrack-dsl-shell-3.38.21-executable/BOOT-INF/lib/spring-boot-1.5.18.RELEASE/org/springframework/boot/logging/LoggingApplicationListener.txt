Compiled from "LoggingApplicationListener.java"
public class org.springframework.boot.logging.LoggingApplicationListener implements org.springframework.context.event.GenericApplicationListener {
  public static final int DEFAULT_ORDER;

  public static final java.lang.String CONFIG_PROPERTY;

  public static final java.lang.String REGISTER_SHUTDOWN_HOOK_PROPERTY;

  public static final java.lang.String PATH_PROPERTY;

  public static final java.lang.String FILE_PROPERTY;

  public static final java.lang.String PID_KEY;

  public static final java.lang.String EXCEPTION_CONVERSION_WORD;

  public static final java.lang.String LOG_FILE;

  public static final java.lang.String LOG_PATH;

  public static final java.lang.String CONSOLE_LOG_PATTERN;

  public static final java.lang.String FILE_LOG_PATTERN;

  public static final java.lang.String LOG_LEVEL_PATTERN;

  public static final java.lang.String LOGGING_SYSTEM_BEAN_NAME;

  private static org.springframework.util.MultiValueMap<org.springframework.boot.logging.LogLevel, java.lang.String> LOG_LEVEL_LOGGERS;

  private static java.util.concurrent.atomic.AtomicBoolean shutdownHookRegistered;

  private static java.lang.Class<?>[] EVENT_TYPES;

  private static java.lang.Class<?>[] SOURCE_TYPES;

  private final org.apache.commons.logging.Log logger;

  private org.springframework.boot.logging.LoggingSystem loggingSystem;

  private int order;

  private boolean parseArgs;

  private org.springframework.boot.logging.LogLevel springBootLogging;

  public org.springframework.boot.logging.LoggingApplicationListener();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #8                  // int -2147483628
      18: putfield      #9                  // Field order:I
      21: aload_0
      22: iconst_1
      23: putfield      #10                 // Field parseArgs:Z
      26: aload_0
      27: aconst_null
      28: putfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: return

  public boolean supportsEventType(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       5: getstatic     #13                 // Field EVENT_TYPES:[Ljava/lang/Class;
       8: invokespecial #14                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
      11: ireturn

  public boolean supportsSourceType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #15                 // Field SOURCE_TYPES:[Ljava/lang/Class;
       5: invokespecial #14                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
       8: ireturn

  private boolean isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_2
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     43
      20: aload_3
      21: iload         5
      23: aaload
      24: astore        6
      26: aload         6
      28: aload_1
      29: invokevirtual #16                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iinc          5, 1
      40: goto          13
      43: iconst_0
      44: ireturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_1
       1: instanceof    #17                 // class org/springframework/boot/context/event/ApplicationStartingEvent
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #17                 // class org/springframework/boot/context/event/ApplicationStartingEvent
      12: invokespecial #18                 // Method onApplicationStartingEvent:(Lorg/springframework/boot/context/event/ApplicationStartingEvent;)V
      15: goto          94
      18: aload_1
      19: instanceof    #19                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #19                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      30: invokespecial #20                 // Method onApplicationEnvironmentPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
      33: goto          94
      36: aload_1
      37: instanceof    #21                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      40: ifeq          54
      43: aload_0
      44: aload_1
      45: checkcast     #21                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      48: invokespecial #22                 // Method onApplicationPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
      51: goto          94
      54: aload_1
      55: instanceof    #23                 // class org/springframework/context/event/ContextClosedEvent
      58: ifeq          83
      61: aload_1
      62: checkcast     #23                 // class org/springframework/context/event/ContextClosedEvent
      65: invokevirtual #24                 // Method org/springframework/context/event/ContextClosedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      68: invokeinterface #25,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getParent:()Lorg/springframework/context/ApplicationContext;
      73: ifnonnull     83
      76: aload_0
      77: invokespecial #26                 // Method onContextClosedEvent:()V
      80: goto          94
      83: aload_1
      84: instanceof    #27                 // class org/springframework/boot/context/event/ApplicationFailedEvent
      87: ifeq          94
      90: aload_0
      91: invokespecial #28                 // Method onApplicationFailedEvent:()V
      94: return

  private void onApplicationStartingEvent(org.springframework.boot.context.event.ApplicationStartingEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method org/springframework/boot/context/event/ApplicationStartingEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
       5: invokevirtual #30                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #31                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      11: putfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      14: aload_0
      15: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      18: invokevirtual #33                 // Method org/springframework/boot/logging/LoggingSystem.beforeInitialize:()V
      21: return

  private void onApplicationEnvironmentPreparedEvent(org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent);
    Code:
       0: aload_0
       1: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnonnull     21
       7: aload_0
       8: aload_1
       9: invokevirtual #34                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      12: invokevirtual #30                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      15: invokestatic  #31                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      18: putfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      21: aload_0
      22: aload_1
      23: invokevirtual #35                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getEnvironment:()Lorg/springframework/core/env/ConfigurableEnvironment;
      26: aload_1
      27: invokevirtual #34                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      30: invokevirtual #30                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      33: invokevirtual #36                 // Method initialize:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/ClassLoader;)V
      36: return

  private void onApplicationPreparedEvent(org.springframework.boot.context.event.ApplicationPreparedEvent);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method org/springframework/boot/context/event/ApplicationPreparedEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: invokeinterface #38,  1           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       9: astore_2
      10: aload_2
      11: ldc           #39                 // String springBootLoggingSystem
      13: invokeinterface #40,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      18: ifne          33
      21: aload_2
      22: ldc           #39                 // String springBootLoggingSystem
      24: aload_0
      25: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      28: invokeinterface #41,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      33: return

  private void onContextClosedEvent();
    Code:
       0: aload_0
       1: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #42                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  private void onApplicationFailedEvent();
    Code:
       0: aload_0
       1: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #42                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  protected void initialize(org.springframework.core.env.ConfigurableEnvironment, java.lang.ClassLoader);
    Code:
       0: new           #43                 // class org/springframework/boot/logging/LoggingSystemProperties
       3: dup
       4: aload_1
       5: invokespecial #44                 // Method org/springframework/boot/logging/LoggingSystemProperties."<init>":(Lorg/springframework/core/env/Environment;)V
       8: invokevirtual #45                 // Method org/springframework/boot/logging/LoggingSystemProperties.apply:()V
      11: aload_1
      12: invokestatic  #46                 // Method org/springframework/boot/logging/LogFile.get:(Lorg/springframework/core/env/PropertyResolver;)Lorg/springframework/boot/logging/LogFile;
      15: astore_3
      16: aload_3
      17: ifnull        24
      20: aload_3
      21: invokevirtual #47                 // Method org/springframework/boot/logging/LogFile.applyToSystemProperties:()V
      24: aload_0
      25: aload_1
      26: invokespecial #48                 // Method initializeEarlyLoggingLevel:(Lorg/springframework/core/env/ConfigurableEnvironment;)V
      29: aload_0
      30: aload_1
      31: aload_0
      32: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      35: aload_3
      36: invokespecial #49                 // Method initializeSystem:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogFile;)V
      39: aload_0
      40: aload_1
      41: aload_0
      42: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      45: invokespecial #50                 // Method initializeFinalLoggingLevels:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;)V
      48: aload_0
      49: aload_1
      50: aload_0
      51: getfield      #32                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      54: invokespecial #51                 // Method registerShutdownHookIfNecessary:(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/logging/LoggingSystem;)V
      57: return

  private void initializeEarlyLoggingLevel(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_0
       1: getfield      #10                 // Field parseArgs:Z
       4: ifeq          48
       7: aload_0
       8: getfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      11: ifnonnull     48
      14: aload_0
      15: aload_1
      16: ldc           #52                 // String debug
      18: invokespecial #53                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      21: ifeq          31
      24: aload_0
      25: getstatic     #54                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      28: putfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: aload_0
      32: aload_1
      33: ldc           #55                 // String trace
      35: invokespecial #53                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      38: ifeq          48
      41: aload_0
      42: getstatic     #56                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      45: putfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      48: return

  private boolean isSet(org.springframework.core.env.ConfigurableEnvironment, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #57,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_3
       8: aload_3
       9: ifnull        25
      12: aload_3
      13: ldc           #58                 // String false
      15: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private void initializeSystem(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogFile);
    Code:
       0: new           #60                 // class org/springframework/boot/logging/LoggingInitializationContext
       3: dup
       4: aload_1
       5: invokespecial #61                 // Method org/springframework/boot/logging/LoggingInitializationContext."<init>":(Lorg/springframework/core/env/ConfigurableEnvironment;)V
       8: astore        4
      10: aload_1
      11: ldc           #62                 // String logging.config
      13: invokeinterface #57,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokespecial #63                 // Method ignoreLogConfig:(Ljava/lang/String;)Z
      26: ifeq          40
      29: aload_2
      30: aload         4
      32: aconst_null
      33: aload_3
      34: invokevirtual #64                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      37: goto          114
      40: aload         5
      42: invokestatic  #65                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      45: invokevirtual #66                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      48: invokevirtual #67                 // Method java/io/InputStream.close:()V
      51: aload_2
      52: aload         4
      54: aload         5
      56: aload_3
      57: invokevirtual #64                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      60: goto          114
      63: astore        6
      65: getstatic     #69                 // Field java/lang/System.err:Ljava/io/PrintStream;
      68: new           #70                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #72                 // String Logging system failed to initialize using configuration from \'
      77: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         5
      82: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #74                 // String \'
      87: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokevirtual #76                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      96: aload         6
      98: getstatic     #69                 // Field java/lang/System.err:Ljava/io/PrintStream;
     101: invokevirtual #77                 // Method java/lang/Exception.printStackTrace:(Ljava/io/PrintStream;)V
     104: new           #78                 // class java/lang/IllegalStateException
     107: dup
     108: aload         6
     110: invokespecial #79                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     113: athrow
     114: return
    Exception table:
       from    to  target type
          40    60    63   Class java/lang/Exception

  private boolean ignoreLogConfig(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #80                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: aload_1
       8: ldc           #81                 // String -D
      10: invokevirtual #82                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private void initializeFinalLoggingLevels(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_0
       1: getfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       4: ifnull        16
       7: aload_0
       8: aload_2
       9: aload_0
      10: getfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      13: invokevirtual #83                 // Method initializeLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;)V
      16: aload_0
      17: aload_2
      18: aload_1
      19: invokevirtual #84                 // Method setLogLevels:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/Environment;)V
      22: return

  protected void initializeLogLevel(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel);
    Code:
       0: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
       3: aload_2
       4: invokeinterface #86,  2           // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #87                 // class java/util/List
      12: astore_3
      13: aload_3
      14: ifnull        57
      17: aload_3
      18: invokeinterface #88,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          57
      35: aload         4
      37: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #91                 // class java/lang/String
      45: astore        5
      47: aload_1
      48: aload         5
      50: aload_2
      51: invokevirtual #92                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      54: goto          25
      57: return

  protected void setLogLevels(org.springframework.boot.logging.LoggingSystem, org.springframework.core.env.Environment);
    Code:
       0: new           #93                 // class org/springframework/boot/bind/RelaxedPropertyResolver
       3: dup
       4: aload_2
       5: invokespecial #94                 // Method org/springframework/boot/bind/RelaxedPropertyResolver."<init>":(Lorg/springframework/core/env/PropertyResolver;)V
       8: ldc           #95                 // String logging.level.
      10: invokevirtual #96                 // Method org/springframework/boot/bind/RelaxedPropertyResolver.getSubProperties:(Ljava/lang/String;)Ljava/util/Map;
      13: astore_3
      14: iconst_0
      15: istore        4
      17: aload_3
      18: invokeinterface #97,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #98,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          109
      40: aload         5
      42: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #99                 // class java/util/Map$Entry
      50: astore        6
      52: aload         6
      54: invokeinterface #100,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #91                 // class java/lang/String
      62: astore        7
      64: aload         7
      66: ldc           #102                // String ROOT
      68: invokevirtual #103                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      71: ifeq          88
      74: iload         4
      76: ifeq          82
      79: goto          30
      82: aconst_null
      83: astore        7
      85: iconst_1
      86: istore        4
      88: aload_0
      89: aload_1
      90: aload_2
      91: aload         7
      93: aload         6
      95: invokeinterface #104,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     100: invokevirtual #105                // Method java/lang/Object.toString:()Ljava/lang/String;
     103: invokespecial #106                // Method setLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/Environment;Ljava/lang/String;Ljava/lang/String;)V
     106: goto          30
     109: return

  private void setLogLevel(org.springframework.boot.logging.LoggingSystem, org.springframework.core.env.Environment, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: aload         4
       3: invokeinterface #107,  2          // InterfaceMethod org/springframework/core/env/Environment.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
       8: astore        4
      10: aload_1
      11: aload_3
      12: aload_0
      13: aload         4
      15: invokespecial #108                // Method coerceLogLevel:(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;
      18: invokevirtual #92                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      21: goto          69
      24: astore        5
      26: aload_0
      27: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #70                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #110                // String Cannot set level:
      39: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload         4
      44: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #111                // String  for \'
      49: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_3
      53: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #74                 // String \'
      58: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokeinterface #112,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      69: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/RuntimeException

  private org.springframework.boot.logging.LogLevel coerceLogLevel(java.lang.String);
    Code:
       0: ldc           #58                 // String false
       2: aload_1
       3: invokevirtual #103                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          13
       9: getstatic     #113                // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      12: areturn
      13: aload_1
      14: getstatic     #114                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #115                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokestatic  #116                // Method org/springframework/boot/logging/LogLevel.valueOf:(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;
      23: areturn

  private void registerShutdownHookIfNecessary(org.springframework.core.env.Environment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: new           #93                 // class org/springframework/boot/bind/RelaxedPropertyResolver
       3: dup
       4: aload_1
       5: invokespecial #94                 // Method org/springframework/boot/bind/RelaxedPropertyResolver."<init>":(Lorg/springframework/core/env/PropertyResolver;)V
       8: ldc           #117                // String logging.register-shutdown-hook
      10: ldc           #118                // class java/lang/Boolean
      12: iconst_0
      13: invokestatic  #119                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      16: invokevirtual #120                // Method org/springframework/boot/bind/RelaxedPropertyResolver.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #118                // class java/lang/Boolean
      22: invokevirtual #121                // Method java/lang/Boolean.booleanValue:()Z
      25: istore_3
      26: iload_3
      27: ifeq          65
      30: aload_2
      31: invokevirtual #122                // Method org/springframework/boot/logging/LoggingSystem.getShutdownHandler:()Ljava/lang/Runnable;
      34: astore        4
      36: aload         4
      38: ifnull        65
      41: getstatic     #123                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: iconst_0
      45: iconst_1
      46: invokevirtual #124                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      49: ifeq          65
      52: aload_0
      53: new           #125                // class java/lang/Thread
      56: dup
      57: aload         4
      59: invokespecial #126                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      62: invokevirtual #127                // Method registerShutdownHook:(Ljava/lang/Thread;)V
      65: return

  void registerShutdownHook(java.lang.Thread);
    Code:
       0: invokestatic  #128                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: aload_1
       4: invokevirtual #129                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
       7: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #9                  // Field order:I
       4: ireturn

  public void setSpringBootLogging(org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       5: return

  public void setParseArgs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field parseArgs:Z
       5: return

  static {};
    Code:
       0: new           #130                // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #131                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: putstatic     #123                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: new           #132                // class org/springframework/util/LinkedMultiValueMap
      14: dup
      15: invokespecial #133                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      18: putstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      21: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      24: getstatic     #54                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      27: ldc           #134                // String org.springframework.boot
      29: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      34: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      37: getstatic     #56                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      40: ldc           #136                // String org.springframework
      42: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      47: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      50: getstatic     #56                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      53: ldc           #137                // String org.apache.tomcat
      55: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      60: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      63: getstatic     #56                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      66: ldc           #138                // String org.apache.catalina
      68: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      73: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      76: getstatic     #56                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      79: ldc           #139                // String org.eclipse.jetty
      81: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      86: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      89: getstatic     #56                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      92: ldc           #140                // String org.hibernate.tool.hbm2ddl
      94: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      99: getstatic     #85                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
     102: getstatic     #54                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     105: ldc           #141                // String org.hibernate.SQL
     107: invokeinterface #135,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     112: iconst_5
     113: anewarray     #142                // class java/lang/Class
     116: dup
     117: iconst_0
     118: ldc           #17                 // class org/springframework/boot/context/event/ApplicationStartingEvent
     120: aastore
     121: dup
     122: iconst_1
     123: ldc           #19                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
     125: aastore
     126: dup
     127: iconst_2
     128: ldc           #21                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
     130: aastore
     131: dup
     132: iconst_3
     133: ldc           #23                 // class org/springframework/context/event/ContextClosedEvent
     135: aastore
     136: dup
     137: iconst_4
     138: ldc           #27                 // class org/springframework/boot/context/event/ApplicationFailedEvent
     140: aastore
     141: putstatic     #13                 // Field EVENT_TYPES:[Ljava/lang/Class;
     144: iconst_2
     145: anewarray     #142                // class java/lang/Class
     148: dup
     149: iconst_0
     150: ldc           #143                // class org/springframework/boot/SpringApplication
     152: aastore
     153: dup
     154: iconst_1
     155: ldc           #144                // class org/springframework/context/ApplicationContext
     157: aastore
     158: putstatic     #15                 // Field SOURCE_TYPES:[Ljava/lang/Class;
     161: return
}
