Compiled from "DefaultPropertyNamePatternsMatcher.java"
class org.springframework.boot.bind.DefaultPropertyNamePatternsMatcher implements org.springframework.boot.bind.PropertyNamePatternsMatcher {
  private final char[] delimiters;

  private final boolean ignoreCase;

  private final java.lang.String[] names;

  protected org.springframework.boot.bind.DefaultPropertyNamePatternsMatcher(char[], java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #1                  // Method "<init>":([CZ[Ljava/lang/String;)V
       7: return

  protected org.springframework.boot.bind.DefaultPropertyNamePatternsMatcher(char[], boolean, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: new           #2                  // class java/util/HashSet
       6: dup
       7: aload_3
       8: invokestatic  #3                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: invokespecial #4                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      14: invokespecial #5                  // Method "<init>":([CZLjava/util/Set;)V
      17: return

  org.springframework.boot.bind.DefaultPropertyNamePatternsMatcher(char[], boolean, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field delimiters:[C
       9: aload_0
      10: iload_2
      11: putfield      #8                  // Field ignoreCase:Z
      14: aload_0
      15: aload_3
      16: aload_3
      17: invokeinterface #9,  1            // InterfaceMethod java/util/Set.size:()I
      22: anewarray     #10                 // class java/lang/String
      25: invokeinterface #11,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      30: checkcast     #12                 // class "[Ljava/lang/String;"
      33: putfield      #13                 // Field names:[Ljava/lang/String;
      36: return

  public boolean matches(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method java/lang/String.toCharArray:()[C
       4: astore_2
       5: aload_0
       6: getfield      #13                 // Field names:[Ljava/lang/String;
       9: arraylength
      10: newarray       boolean
      12: astore_3
      13: iconst_1
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: aload_0
      22: getfield      #13                 // Field names:[Ljava/lang/String;
      25: arraylength
      26: if_icmpge     58
      29: aload_0
      30: getfield      #13                 // Field names:[Ljava/lang/String;
      33: iload         5
      35: aaload
      36: invokevirtual #15                 // Method java/lang/String.length:()I
      39: aload_2
      40: arraylength
      41: if_icmpgt     52
      44: aload_3
      45: iload         5
      47: iconst_1
      48: bastore
      49: iconst_0
      50: istore        4
      52: iinc          5, 1
      55: goto          19
      58: iload         4
      60: ifeq          65
      63: iconst_0
      64: ireturn
      65: iconst_0
      66: istore        5
      68: iload         5
      70: aload_2
      71: arraylength
      72: if_icmpge     199
      75: iconst_0
      76: istore        6
      78: iload         6
      80: aload_0
      81: getfield      #13                 // Field names:[Ljava/lang/String;
      84: arraylength
      85: if_icmpge     186
      88: aload_3
      89: iload         6
      91: baload
      92: ifeq          180
      95: aload_3
      96: iload         6
      98: iconst_0
      99: bastore
     100: iload         5
     102: aload_0
     103: getfield      #13                 // Field names:[Ljava/lang/String;
     106: iload         6
     108: aaload
     109: invokevirtual #15                 // Method java/lang/String.length:()I
     112: if_icmpge     149
     115: aload_0
     116: aload_0
     117: getfield      #13                 // Field names:[Ljava/lang/String;
     120: iload         6
     122: aaload
     123: iload         5
     125: invokevirtual #16                 // Method java/lang/String.charAt:(I)C
     128: aload_2
     129: iload         5
     131: caload
     132: invokespecial #17                 // Method isCharMatch:(CC)Z
     135: ifeq          180
     138: aload_3
     139: iload         6
     141: iconst_1
     142: bastore
     143: iconst_0
     144: istore        4
     146: goto          180
     149: aload_2
     150: aload_0
     151: getfield      #13                 // Field names:[Ljava/lang/String;
     154: iload         6
     156: aaload
     157: invokevirtual #15                 // Method java/lang/String.length:()I
     160: caload
     161: istore        7
     163: aload_0
     164: iload         7
     166: invokespecial #18                 // Method isDelimiter:(C)Z
     169: ifeq          180
     172: aload_3
     173: iload         6
     175: iconst_1
     176: bastore
     177: iconst_0
     178: istore        4
     180: iinc          6, 1
     183: goto          78
     186: iload         4
     188: ifeq          193
     191: iconst_0
     192: ireturn
     193: iinc          5, 1
     196: goto          68
     199: iconst_0
     200: istore        5
     202: iload         5
     204: aload_3
     205: arraylength
     206: if_icmpge     224
     209: aload_3
     210: iload         5
     212: baload
     213: ifeq          218
     216: iconst_1
     217: ireturn
     218: iinc          5, 1
     221: goto          202
     224: iconst_0
     225: ireturn

  private boolean isCharMatch(char, char);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ignoreCase:Z
       4: ifeq          24
       7: iload_1
       8: invokestatic  #19                 // Method java/lang/Character.toLowerCase:(C)C
      11: iload_2
      12: invokestatic  #19                 // Method java/lang/Character.toLowerCase:(C)C
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: iload_1
      25: iload_2
      26: if_icmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private boolean isDelimiter(char);
    Code:
       0: aload_0
       1: getfield      #7                  // Field delimiters:[C
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     37
      17: aload_2
      18: iload         4
      20: caload
      21: istore        5
      23: iload_1
      24: iload         5
      26: if_icmpne     31
      29: iconst_1
      30: ireturn
      31: iinc          4, 1
      34: goto          11
      37: iconst_0
      38: ireturn
}
