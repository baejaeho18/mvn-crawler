Compiled from "ResourceEditor.java"
public class org.springframework.core.io.ResourceEditor extends java.beans.PropertyEditorSupport {
  private final org.springframework.core.io.ResourceLoader resourceLoader;

  private org.springframework.core.env.PropertyResolver propertyResolver;

  private final boolean ignoreUnresolvablePlaceholders;

  public org.springframework.core.io.ResourceEditor();
    Code:
       0: aload_0
       1: new           #1                  // class org/springframework/core/io/DefaultResourceLoader
       4: dup
       5: invokespecial #2                  // Method org/springframework/core/io/DefaultResourceLoader."<init>":()V
       8: aconst_null
       9: invokespecial #3                  // Method "<init>":(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;)V
      12: return

  public org.springframework.core.io.ResourceEditor(org.springframework.core.io.ResourceLoader, org.springframework.core.env.PropertyResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #4                  // Method "<init>":(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;Z)V
       7: return

  public org.springframework.core.io.ResourceEditor(org.springframework.core.io.ResourceLoader, org.springframework.core.env.PropertyResolver, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/beans/PropertyEditorSupport."<init>":()V
       4: aload_1
       5: ldc           #6                  // String ResourceLoader must not be null
       7: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #8                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      15: aload_0
      16: aload_2
      17: putfield      #9                  // Field propertyResolver:Lorg/springframework/core/env/PropertyResolver;
      20: aload_0
      21: iload_3
      22: putfield      #10                 // Field ignoreUnresolvablePlaceholders:Z
      25: return

  public void setAsText(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #11                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          33
       7: aload_0
       8: aload_1
       9: invokevirtual #12                 // Method resolvePath:(Ljava/lang/String;)Ljava/lang/String;
      12: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_0
      18: getfield      #8                  // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      21: aload_2
      22: invokeinterface #14,  2           // InterfaceMethod org/springframework/core/io/ResourceLoader.getResource:(Ljava/lang/String;)Lorg/springframework/core/io/Resource;
      27: invokevirtual #15                 // Method setValue:(Ljava/lang/Object;)V
      30: goto          38
      33: aload_0
      34: aconst_null
      35: invokevirtual #15                 // Method setValue:(Ljava/lang/Object;)V
      38: return

  protected java.lang.String resolvePath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field propertyResolver:Lorg/springframework/core/env/PropertyResolver;
       4: ifnonnull     18
       7: aload_0
       8: new           #16                 // class org/springframework/core/env/StandardEnvironment
      11: dup
      12: invokespecial #17                 // Method org/springframework/core/env/StandardEnvironment."<init>":()V
      15: putfield      #9                  // Field propertyResolver:Lorg/springframework/core/env/PropertyResolver;
      18: aload_0
      19: getfield      #10                 // Field ignoreUnresolvablePlaceholders:Z
      22: ifeq          38
      25: aload_0
      26: getfield      #9                  // Field propertyResolver:Lorg/springframework/core/env/PropertyResolver;
      29: aload_1
      30: invokeinterface #18,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.resolvePlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      35: goto          48
      38: aload_0
      39: getfield      #9                  // Field propertyResolver:Lorg/springframework/core/env/PropertyResolver;
      42: aload_1
      43: invokeinterface #19,  2           // InterfaceMethod org/springframework/core/env/PropertyResolver.resolveRequiredPlaceholders:(Ljava/lang/String;)Ljava/lang/String;
      48: areturn

  public java.lang.String getAsText();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getValue:()Ljava/lang/Object;
       4: checkcast     #21                 // class org/springframework/core/io/Resource
       7: astore_1
       8: aload_1
       9: ifnull        24
      12: aload_1
      13: invokeinterface #22,  1           // InterfaceMethod org/springframework/core/io/Resource.getURL:()Ljava/net/URL;
      18: invokevirtual #23                 // Method java/net/URL.toExternalForm:()Ljava/lang/String;
      21: goto          26
      24: ldc           #24                 // String
      26: areturn
      27: astore_2
      28: aconst_null
      29: areturn
    Exception table:
       from    to  target type
           8    26    27   Class java/io/IOException
}
