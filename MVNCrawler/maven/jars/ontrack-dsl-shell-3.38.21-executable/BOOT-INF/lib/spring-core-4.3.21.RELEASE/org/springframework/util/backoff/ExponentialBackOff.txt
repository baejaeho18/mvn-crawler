Compiled from "ExponentialBackOff.java"
public class org.springframework.util.backoff.ExponentialBackOff implements org.springframework.util.backoff.BackOff {
  public static final long DEFAULT_INITIAL_INTERVAL;

  public static final double DEFAULT_MULTIPLIER;

  public static final long DEFAULT_MAX_INTERVAL;

  public static final long DEFAULT_MAX_ELAPSED_TIME;

  private long initialInterval;

  private double multiplier;

  private long maxInterval;

  private long maxElapsedTime;

  public org.springframework.util.backoff.ExponentialBackOff();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long 2000l
       8: putfield      #7                  // Field initialInterval:J
      11: aload_0
      12: ldc2_w        #8                  // double 1.5d
      15: putfield      #10                 // Field multiplier:D
      18: aload_0
      19: ldc2_w        #11                 // long 30000l
      22: putfield      #13                 // Field maxInterval:J
      25: aload_0
      26: ldc2_w        #14                 // long 9223372036854775807l
      29: putfield      #2                  // Field maxElapsedTime:J
      32: return

  public org.springframework.util.backoff.ExponentialBackOff(long, double);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long 2000l
       8: putfield      #7                  // Field initialInterval:J
      11: aload_0
      12: ldc2_w        #8                  // double 1.5d
      15: putfield      #10                 // Field multiplier:D
      18: aload_0
      19: ldc2_w        #11                 // long 30000l
      22: putfield      #13                 // Field maxInterval:J
      25: aload_0
      26: ldc2_w        #14                 // long 9223372036854775807l
      29: putfield      #2                  // Field maxElapsedTime:J
      32: aload_0
      33: dload_3
      34: invokespecial #16                 // Method checkMultiplier:(D)V
      37: aload_0
      38: lload_1
      39: putfield      #7                  // Field initialInterval:J
      42: aload_0
      43: dload_3
      44: putfield      #10                 // Field multiplier:D
      47: return

  public void setInitialInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field initialInterval:J
       5: return

  public long getInitialInterval();
    Code:
       0: aload_0
       1: getfield      #7                  // Field initialInterval:J
       4: lreturn

  public void setMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #16                 // Method checkMultiplier:(D)V
       5: aload_0
       6: dload_1
       7: putfield      #10                 // Field multiplier:D
      10: return

  public double getMultiplier();
    Code:
       0: aload_0
       1: getfield      #10                 // Field multiplier:D
       4: dreturn

  public void setMaxInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field maxInterval:J
       5: return

  public long getMaxInterval();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxInterval:J
       4: lreturn

  public void setMaxElapsedTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #2                  // Field maxElapsedTime:J
       5: return

  public long getMaxElapsedTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxElapsedTime:J
       4: lreturn

  public org.springframework.util.backoff.BackOffExecution start();
    Code:
       0: new           #17                 // class org/springframework/util/backoff/ExponentialBackOff$ExponentialBackOffExecution
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #18                 // Method org/springframework/util/backoff/ExponentialBackOff$ExponentialBackOffExecution."<init>":(Lorg/springframework/util/backoff/ExponentialBackOff;Lorg/springframework/util/backoff/ExponentialBackOff$1;)V
       9: areturn

  private void checkMultiplier(double);
    Code:
       0: dload_1
       1: dconst_1
       2: dcmpg
       3: ifge          38
       6: new           #19                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #20                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #22                 // String Invalid multiplier \'
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: dload_1
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      26: ldc           #25                 // String \'. Should be equalor higher than 1. A multiplier of 1 is equivalent to a fixed interval
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return

  static long access$100(org.springframework.util.backoff.ExponentialBackOff);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxElapsedTime:J
       4: lreturn
}
