Compiled from "IfAction.java"
public class ch.qos.logback.core.joran.conditional.IfAction extends ch.qos.logback.core.joran.action.Action {
  private static final java.lang.String CONDITION_ATTR;

  public static final java.lang.String MISSING_JANINO_MSG;

  public static final java.lang.String MISSING_JANINO_SEE;

  java.util.Stack<ch.qos.logback.core.joran.conditional.IfState> stack;

  public ch.qos.logback.core.joran.conditional.IfAction();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/joran/action/Action."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Stack
       8: dup
       9: invokespecial #3                  // Method java/util/Stack."<init>":()V
      12: putfield      #4                  // Field stack:Ljava/util/Stack;
      15: return

  public void begin(ch.qos.logback.core.joran.spi.InterpretationContext, java.lang.String, org.xml.sax.Attributes) throws ch.qos.logback.core.joran.spi.ActionException;
    Code:
       0: new           #5                  // class ch/qos/logback/core/joran/conditional/IfState
       3: dup
       4: invokespecial #6                  // Method ch/qos/logback/core/joran/conditional/IfState."<init>":()V
       7: astore        4
       9: aload_0
      10: getfield      #4                  // Field stack:Ljava/util/Stack;
      13: invokevirtual #7                  // Method java/util/Stack.isEmpty:()Z
      16: istore        5
      18: aload_0
      19: getfield      #4                  // Field stack:Ljava/util/Stack;
      22: aload         4
      24: invokevirtual #8                  // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: iload         5
      30: ifne          34
      33: return
      34: aload_1
      35: aload_0
      36: invokevirtual #9                  // Method ch/qos/logback/core/joran/spi/InterpretationContext.pushObject:(Ljava/lang/Object;)V
      39: invokestatic  #10                 // Method ch/qos/logback/core/util/EnvUtil.isJaninoAvailable:()Z
      42: ifne          58
      45: aload_0
      46: ldc           #11                 // String Could not find Janino library on the class path. Skipping conditional processing.
      48: invokevirtual #12                 // Method addError:(Ljava/lang/String;)V
      51: aload_0
      52: ldc           #13                 // String See also http://logback.qos.ch/codes.html#ifJanino
      54: invokevirtual #12                 // Method addError:(Ljava/lang/String;)V
      57: return
      58: aload         4
      60: iconst_1
      61: putfield      #14                 // Field ch/qos/logback/core/joran/conditional/IfState.active:Z
      64: aconst_null
      65: astore        6
      67: aload_3
      68: ldc           #15                 // String condition
      70: invokeinterface #16,  2           // InterfaceMethod org/xml/sax/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      75: astore        7
      77: aload         7
      79: invokestatic  #17                 // Method ch/qos/logback/core/util/OptionHelper.isEmpty:(Ljava/lang/String;)Z
      82: ifne          181
      85: aload         7
      87: aload_1
      88: aload_0
      89: getfield      #18                 // Field context:Lch/qos/logback/core/Context;
      92: invokestatic  #19                 // Method ch/qos/logback/core/util/OptionHelper.substVars:(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;
      95: astore        7
      97: new           #20                 // class ch/qos/logback/core/joran/conditional/PropertyEvalScriptBuilder
     100: dup
     101: aload_1
     102: invokespecial #21                 // Method ch/qos/logback/core/joran/conditional/PropertyEvalScriptBuilder."<init>":(Lch/qos/logback/core/spi/PropertyContainer;)V
     105: astore        8
     107: aload         8
     109: aload_0
     110: getfield      #18                 // Field context:Lch/qos/logback/core/Context;
     113: invokevirtual #22                 // Method ch/qos/logback/core/joran/conditional/PropertyEvalScriptBuilder.setContext:(Lch/qos/logback/core/Context;)V
     116: aload         8
     118: aload         7
     120: invokevirtual #23                 // Method ch/qos/logback/core/joran/conditional/PropertyEvalScriptBuilder.build:(Ljava/lang/String;)Lch/qos/logback/core/joran/conditional/Condition;
     123: astore        6
     125: goto          161
     128: astore        9
     130: aload_0
     131: new           #25                 // class java/lang/StringBuilder
     134: dup
     135: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #27                 // String Failed to parse condition [
     140: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload         7
     145: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #29                 // String ]
     150: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: aload         9
     158: invokevirtual #31                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     161: aload         6
     163: ifnull        181
     166: aload         4
     168: aload         6
     170: invokeinterface #32,  1           // InterfaceMethod ch/qos/logback/core/joran/conditional/Condition.evaluate:()Z
     175: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     178: putfield      #34                 // Field ch/qos/logback/core/joran/conditional/IfState.boolResult:Ljava/lang/Boolean;
     181: return
    Exception table:
       from    to  target type
         116   125   128   Class java/lang/Exception

  public void end(ch.qos.logback.core.joran.spi.InterpretationContext, java.lang.String) throws ch.qos.logback.core.joran.spi.ActionException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Ljava/util/Stack;
       4: invokevirtual #35                 // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: checkcast     #5                  // class ch/qos/logback/core/joran/conditional/IfState
      10: astore_3
      11: aload_3
      12: getfield      #14                 // Field ch/qos/logback/core/joran/conditional/IfState.active:Z
      15: ifne          19
      18: return
      19: aload_1
      20: invokevirtual #36                 // Method ch/qos/logback/core/joran/spi/InterpretationContext.peekObject:()Ljava/lang/Object;
      23: astore        4
      25: aload         4
      27: ifnonnull     40
      30: new           #37                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #38                 // String Unexpected null object on stack
      36: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload         4
      42: instanceof    #40                 // class ch/qos/logback/core/joran/conditional/IfAction
      45: ifne          84
      48: new           #37                 // class java/lang/IllegalStateException
      51: dup
      52: new           #25                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #41                 // String Unexpected object of type [
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload         4
      66: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      69: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #44                 // String ] on stack
      74: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         4
      86: aload_0
      87: if_acmpeq     100
      90: new           #37                 // class java/lang/IllegalStateException
      93: dup
      94: ldc           #45                 // String IfAction different then current one on stack
      96: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_1
     101: invokevirtual #46                 // Method ch/qos/logback/core/joran/spi/InterpretationContext.popObject:()Ljava/lang/Object;
     104: pop
     105: aload_3
     106: getfield      #34                 // Field ch/qos/logback/core/joran/conditional/IfState.boolResult:Ljava/lang/Boolean;
     109: ifnonnull     119
     112: aload_0
     113: ldc           #47                 // String Failed to determine \"if then else\" result
     115: invokevirtual #12                 // Method addError:(Ljava/lang/String;)V
     118: return
     119: aload_1
     120: invokevirtual #48                 // Method ch/qos/logback/core/joran/spi/InterpretationContext.getJoranInterpreter:()Lch/qos/logback/core/joran/spi/Interpreter;
     123: astore        5
     125: aload_3
     126: getfield      #49                 // Field ch/qos/logback/core/joran/conditional/IfState.thenSaxEventList:Ljava/util/List;
     129: astore        6
     131: aload_3
     132: getfield      #34                 // Field ch/qos/logback/core/joran/conditional/IfState.boolResult:Ljava/lang/Boolean;
     135: invokevirtual #50                 // Method java/lang/Boolean.booleanValue:()Z
     138: ifne          147
     141: aload_3
     142: getfield      #51                 // Field ch/qos/logback/core/joran/conditional/IfState.elseSaxEventList:Ljava/util/List;
     145: astore        6
     147: aload         6
     149: ifnull        163
     152: aload         5
     154: invokevirtual #52                 // Method ch/qos/logback/core/joran/spi/Interpreter.getEventPlayer:()Lch/qos/logback/core/joran/spi/EventPlayer;
     157: aload         6
     159: iconst_1
     160: invokevirtual #53                 // Method ch/qos/logback/core/joran/spi/EventPlayer.addEventsDynamically:(Ljava/util/List;I)V
     163: return

  public void setThenSaxEventList(java.util.List<ch.qos.logback.core.joran.event.SaxEvent>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Ljava/util/Stack;
       4: invokevirtual #54                 // Method java/util/Stack.firstElement:()Ljava/lang/Object;
       7: checkcast     #5                  // class ch/qos/logback/core/joran/conditional/IfState
      10: astore_2
      11: aload_2
      12: getfield      #14                 // Field ch/qos/logback/core/joran/conditional/IfState.active:Z
      15: ifeq          26
      18: aload_2
      19: aload_1
      20: putfield      #49                 // Field ch/qos/logback/core/joran/conditional/IfState.thenSaxEventList:Ljava/util/List;
      23: goto          36
      26: new           #37                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #55                 // String setThenSaxEventList() invoked on inactive IfAction
      32: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public void setElseSaxEventList(java.util.List<ch.qos.logback.core.joran.event.SaxEvent>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Ljava/util/Stack;
       4: invokevirtual #54                 // Method java/util/Stack.firstElement:()Ljava/lang/Object;
       7: checkcast     #5                  // class ch/qos/logback/core/joran/conditional/IfState
      10: astore_2
      11: aload_2
      12: getfield      #14                 // Field ch/qos/logback/core/joran/conditional/IfState.active:Z
      15: ifeq          26
      18: aload_2
      19: aload_1
      20: putfield      #51                 // Field ch/qos/logback/core/joran/conditional/IfState.elseSaxEventList:Ljava/util/List;
      23: goto          36
      26: new           #37                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #56                 // String setElseSaxEventList() invoked on inactive IfAction
      32: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:Ljava/util/Stack;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field stack:Ljava/util/Stack;
      13: invokevirtual #7                  // Method java/util/Stack.isEmpty:()Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #4                  // Field stack:Ljava/util/Stack;
      25: invokevirtual #57                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      28: checkcast     #5                  // class ch/qos/logback/core/joran/conditional/IfState
      31: getfield      #14                 // Field ch/qos/logback/core/joran/conditional/IfState.active:Z
      34: ireturn
}
