Compiled from "ReflectiveAspectJAdvisorFactory.java"
class org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory$3 implements org.springframework.util.ReflectionUtils$MethodCallback {
  final java.util.List val$methods;

  final org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory this$0;

  org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory$3(org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$methods:Ljava/util/List;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #4                  // class org/aspectj/lang/annotation/Pointcut
       3: invokestatic  #5                  // Method org/springframework/core/annotation/AnnotationUtils.getAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: ifnonnull     20
       9: aload_0
      10: getfield      #2                  // Field val$methods:Ljava/util/List;
      13: aload_1
      14: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      19: pop
      20: return
}
