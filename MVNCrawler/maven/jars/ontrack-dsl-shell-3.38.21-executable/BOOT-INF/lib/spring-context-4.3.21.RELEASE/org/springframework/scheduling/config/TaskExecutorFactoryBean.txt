Compiled from "TaskExecutorFactoryBean.java"
public class org.springframework.scheduling.config.TaskExecutorFactoryBean implements org.springframework.beans.factory.FactoryBean<org.springframework.core.task.TaskExecutor>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  private java.lang.String poolSize;

  private java.lang.Integer queueCapacity;

  private java.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler;

  private java.lang.Integer keepAliveSeconds;

  private java.lang.String beanName;

  private org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor target;

  public org.springframework.scheduling.config.TaskExecutorFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setPoolSize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field poolSize:Ljava/lang/String;
       5: return

  public void setQueueCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
       8: return

  public void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field rejectedExecutionHandler:Ljava/util/concurrent/RejectedExecutionHandler;
       5: return

  public void setKeepAliveSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #3                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #6                  // Field keepAliveSeconds:Ljava/lang/Integer;
       8: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field beanName:Ljava/lang/String;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: new           #8                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor
       4: dup
       5: invokespecial #9                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor."<init>":()V
       8: putfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      11: aload_0
      12: invokespecial #11                 // Method determinePoolSizeRange:()V
      15: aload_0
      16: getfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
      19: ifnull        36
      22: aload_0
      23: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      26: aload_0
      27: getfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
      30: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      33: invokevirtual #13                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setQueueCapacity:(I)V
      36: aload_0
      37: getfield      #6                  // Field keepAliveSeconds:Ljava/lang/Integer;
      40: ifnull        57
      43: aload_0
      44: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      47: aload_0
      48: getfield      #6                  // Field keepAliveSeconds:Ljava/lang/Integer;
      51: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      54: invokevirtual #14                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setKeepAliveSeconds:(I)V
      57: aload_0
      58: getfield      #5                  // Field rejectedExecutionHandler:Ljava/util/concurrent/RejectedExecutionHandler;
      61: ifnull        75
      64: aload_0
      65: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      68: aload_0
      69: getfield      #5                  // Field rejectedExecutionHandler:Ljava/util/concurrent/RejectedExecutionHandler;
      72: invokevirtual #15                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V
      75: aload_0
      76: getfield      #7                  // Field beanName:Ljava/lang/String;
      79: ifnull        111
      82: aload_0
      83: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      86: new           #16                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      93: aload_0
      94: getfield      #7                  // Field beanName:Ljava/lang/String;
      97: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #19                 // String -
     102: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokevirtual #21                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadNamePrefix:(Ljava/lang/String;)V
     111: aload_0
     112: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
     115: invokevirtual #22                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.afterPropertiesSet:()V
     118: return

  private void determinePoolSizeRange();
    Code:
       0: aload_0
       1: getfield      #2                  // Field poolSize:Ljava/lang/String;
       4: invokestatic  #23                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          191
      10: aload_0
      11: getfield      #2                  // Field poolSize:Ljava/lang/String;
      14: bipush        45
      16: invokevirtual #24                 // Method java/lang/String.indexOf:(I)I
      19: istore_3
      20: iload_3
      21: iconst_m1
      22: if_icmpeq     114
      25: aload_0
      26: getfield      #2                  // Field poolSize:Ljava/lang/String;
      29: iconst_0
      30: iload_3
      31: invokevirtual #25                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      34: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      37: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      40: istore_1
      41: aload_0
      42: getfield      #2                  // Field poolSize:Ljava/lang/String;
      45: iload_3
      46: iconst_1
      47: iadd
      48: aload_0
      49: getfield      #2                  // Field poolSize:Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/String.length:()I
      55: invokevirtual #25                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      58: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      61: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      64: istore_2
      65: iload_1
      66: iload_2
      67: if_icmple     80
      70: new           #28                 // class java/lang/IllegalArgumentException
      73: dup
      74: ldc           #29                 // String Lower bound of pool-size range must not exceed the upper bound
      76: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: getfield      #4                  // Field queueCapacity:Ljava/lang/Integer;
      84: ifnonnull     135
      87: iload_1
      88: ifne          104
      91: aload_0
      92: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      95: iconst_1
      96: invokevirtual #31                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setAllowCoreThreadTimeOut:(Z)V
      99: iload_2
     100: istore_1
     101: goto          135
     104: new           #28                 // class java/lang/IllegalArgumentException
     107: dup
     108: ldc           #32                 // String A non-zero lower bound for the size range requires a queue-capacity value
     110: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload_0
     115: getfield      #2                  // Field poolSize:Ljava/lang/String;
     118: invokestatic  #26                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
     121: astore        4
     123: aload         4
     125: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
     128: istore_1
     129: aload         4
     131: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
     134: istore_2
     135: aload_0
     136: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
     139: iload_1
     140: invokevirtual #33                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setCorePoolSize:(I)V
     143: aload_0
     144: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
     147: iload_2
     148: invokevirtual #34                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setMaxPoolSize:(I)V
     151: goto          191
     154: astore_1
     155: new           #28                 // class java/lang/IllegalArgumentException
     158: dup
     159: new           #16                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #36                 // String Invalid pool-size value [
     168: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_0
     172: getfield      #2                  // Field poolSize:Ljava/lang/String;
     175: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: ldc           #37                 // String ]: only single maximum integer (e.g. \"5\") and minimum-maximum range (e.g. \"3-5\") are supported
     180: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: aload_1
     187: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     190: athrow
     191: return
    Exception table:
       from    to  target type
          10   151   154   Class java/lang/NumberFormatException

  public org.springframework.core.task.TaskExecutor getObject();
    Code:
       0: aload_0
       1: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: areturn

  public java.lang.Class<? extends org.springframework.core.task.TaskExecutor> getObjectType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: ifnull        17
       7: aload_0
       8: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      11: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #8                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #10                 // Field target:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       4: invokevirtual #40                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.destroy:()V
       7: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method getObject:()Lorg/springframework/core/task/TaskExecutor;
       4: areturn
}
