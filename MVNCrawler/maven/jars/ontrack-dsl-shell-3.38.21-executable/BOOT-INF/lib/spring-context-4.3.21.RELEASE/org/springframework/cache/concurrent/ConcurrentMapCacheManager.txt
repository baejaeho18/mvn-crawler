Compiled from "ConcurrentMapCacheManager.java"
public class org.springframework.cache.concurrent.ConcurrentMapCacheManager implements org.springframework.cache.CacheManager,org.springframework.beans.factory.BeanClassLoaderAware {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.cache.Cache> cacheMap;

  private boolean dynamic;

  private boolean allowNullValues;

  private boolean storeByValue;

  private org.springframework.core.serializer.support.SerializationDelegate serialization;

  public org.springframework.cache.concurrent.ConcurrentMapCacheManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        16
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field dynamic:Z
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field allowNullValues:Z
      27: aload_0
      28: iconst_0
      29: putfield      #7                  // Field storeByValue:Z
      32: return

  public org.springframework.cache.concurrent.ConcurrentMapCacheManager(java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        16
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field dynamic:Z
      22: aload_0
      23: iconst_1
      24: putfield      #6                  // Field allowNullValues:Z
      27: aload_0
      28: iconst_0
      29: putfield      #7                  // Field storeByValue:Z
      32: aload_0
      33: aload_1
      34: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      37: invokevirtual #9                  // Method setCacheNames:(Ljava/util/Collection;)V
      40: return

  public void setCacheNames(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        57
       4: aload_1
       5: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          49
      20: aload_2
      21: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #13                 // class java/lang/String
      29: astore_3
      30: aload_0
      31: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
      34: aload_3
      35: aload_0
      36: aload_3
      37: invokevirtual #14                 // Method createConcurrentMapCache:(Ljava/lang/String;)Lorg/springframework/cache/Cache;
      40: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: goto          11
      49: aload_0
      50: iconst_0
      51: putfield      #5                  // Field dynamic:Z
      54: goto          62
      57: aload_0
      58: iconst_1
      59: putfield      #5                  // Field dynamic:Z
      62: return

  public void setAllowNullValues(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field allowNullValues:Z
       5: if_icmpeq     17
       8: aload_0
       9: iload_1
      10: putfield      #6                  // Field allowNullValues:Z
      13: aload_0
      14: invokespecial #16                 // Method recreateCaches:()V
      17: return

  public boolean isAllowNullValues();
    Code:
       0: aload_0
       1: getfield      #6                  // Field allowNullValues:Z
       4: ireturn

  public void setStoreByValue(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #7                  // Field storeByValue:Z
       5: if_icmpeq     17
       8: aload_0
       9: iload_1
      10: putfield      #7                  // Field storeByValue:Z
      13: aload_0
      14: invokespecial #16                 // Method recreateCaches:()V
      17: return

  public boolean isStoreByValue();
    Code:
       0: aload_0
       1: getfield      #7                  // Field storeByValue:Z
       4: ireturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: new           #17                 // class org/springframework/core/serializer/support/SerializationDelegate
       4: dup
       5: aload_1
       6: invokespecial #18                 // Method org/springframework/core/serializer/support/SerializationDelegate."<init>":(Ljava/lang/ClassLoader;)V
       9: putfield      #19                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
      12: aload_0
      13: invokevirtual #20                 // Method isStoreByValue:()Z
      16: ifeq          23
      19: aload_0
      20: invokespecial #16                 // Method recreateCaches:()V
      23: return

  public java.util.Collection<java.lang.String> getCacheNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokestatic  #22                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public org.springframework.cache.Cache getCache(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #24                 // class org/springframework/cache/Cache
      13: astore_2
      14: aload_2
      15: ifnonnull     80
      18: aload_0
      19: getfield      #5                  // Field dynamic:Z
      22: ifeq          80
      25: aload_0
      26: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
      29: dup
      30: astore_3
      31: monitorenter
      32: aload_0
      33: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
      36: aload_1
      37: invokeinterface #23,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #24                 // class org/springframework/cache/Cache
      45: astore_2
      46: aload_2
      47: ifnonnull     68
      50: aload_0
      51: aload_1
      52: invokevirtual #14                 // Method createConcurrentMapCache:(Ljava/lang/String;)Lorg/springframework/cache/Cache;
      55: astore_2
      56: aload_0
      57: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
      60: aload_1
      61: aload_2
      62: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_3
      69: monitorexit
      70: goto          80
      73: astore        4
      75: aload_3
      76: monitorexit
      77: aload         4
      79: athrow
      80: aload_2
      81: areturn
    Exception table:
       from    to  target type
          32    70    73   any
          73    77    73   any

  private void recreateCaches();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          57
      24: aload_1
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #27                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: aload_0
      36: aload_2
      37: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #13                 // class java/lang/String
      45: invokevirtual #14                 // Method createConcurrentMapCache:(Ljava/lang/String;)Lorg/springframework/cache/Cache;
      48: invokeinterface #29,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          15
      57: return

  protected org.springframework.cache.Cache createConcurrentMapCache(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isStoreByValue:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #19                 // Field serialization:Lorg/springframework/core/serializer/support/SerializationDelegate;
      11: goto          15
      14: aconst_null
      15: astore_2
      16: new           #30                 // class org/springframework/cache/concurrent/ConcurrentMapCache
      19: dup
      20: aload_1
      21: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      24: dup
      25: sipush        256
      28: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      31: aload_0
      32: invokevirtual #31                 // Method isAllowNullValues:()Z
      35: aload_2
      36: invokespecial #32                 // Method org/springframework/cache/concurrent/ConcurrentMapCache."<init>":(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;ZLorg/springframework/core/serializer/support/SerializationDelegate;)V
      39: areturn
}
