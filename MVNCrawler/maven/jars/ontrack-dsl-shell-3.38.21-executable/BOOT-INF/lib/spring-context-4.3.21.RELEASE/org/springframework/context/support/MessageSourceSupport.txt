Compiled from "MessageSourceSupport.java"
public abstract class org.springframework.context.support.MessageSourceSupport {
  private static final java.text.MessageFormat INVALID_MESSAGE_FORMAT;

  protected final org.apache.commons.logging.Log logger;

  private boolean alwaysUseMessageFormat;

  private final java.util.Map<java.lang.String, java.util.Map<java.util.Locale, java.text.MessageFormat>> messageFormatsPerMessage;

  public org.springframework.context.support.MessageSourceSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field alwaysUseMessageFormat:Z
      20: aload_0
      21: new           #6                  // class java/util/HashMap
      24: dup
      25: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      28: putfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      31: return

  public void setAlwaysUseMessageFormat(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field alwaysUseMessageFormat:Z
       5: return

  protected boolean isAlwaysUseMessageFormat();
    Code:
       0: aload_0
       1: getfield      #5                  // Field alwaysUseMessageFormat:Z
       4: ireturn

  protected java.lang.String renderDefaultMessage(java.lang.String, java.lang.Object[], java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #9                  // Method formatMessage:(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;
       7: areturn

  protected java.lang.String formatMessage(java.lang.String, java.lang.Object[], java.util.Locale);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: invokevirtual #10                 // Method isAlwaysUseMessageFormat:()Z
       8: ifne          20
      11: aload_2
      12: invokestatic  #11                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      15: ifeq          20
      18: aload_1
      19: areturn
      20: aconst_null
      21: astore        4
      23: aload_0
      24: getfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      27: dup
      28: astore        5
      30: monitorenter
      31: aload_0
      32: getfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #13                 // class java/util/Map
      44: astore        6
      46: aload         6
      48: ifnull        67
      51: aload         6
      53: aload_3
      54: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #14                 // class java/text/MessageFormat
      62: astore        4
      64: goto          89
      67: new           #6                  // class java/util/HashMap
      70: dup
      71: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      74: astore        6
      76: aload_0
      77: getfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      80: aload_1
      81: aload         6
      83: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload         4
      91: ifnonnull     133
      94: aload_0
      95: aload_1
      96: aload_3
      97: invokevirtual #16                 // Method createMessageFormat:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
     100: astore        4
     102: goto          122
     105: astore        7
     107: aload_0
     108: invokevirtual #10                 // Method isAlwaysUseMessageFormat:()Z
     111: ifeq          117
     114: aload         7
     116: athrow
     117: getstatic     #18                 // Field INVALID_MESSAGE_FORMAT:Ljava/text/MessageFormat;
     120: astore        4
     122: aload         6
     124: aload_3
     125: aload         4
     127: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: aload         5
     135: monitorexit
     136: goto          147
     139: astore        8
     141: aload         5
     143: monitorexit
     144: aload         8
     146: athrow
     147: aload         4
     149: getstatic     #18                 // Field INVALID_MESSAGE_FORMAT:Ljava/text/MessageFormat;
     152: if_acmpne     157
     155: aload_1
     156: areturn
     157: aload         4
     159: dup
     160: astore        5
     162: monitorenter
     163: aload         4
     165: aload_0
     166: aload_2
     167: aload_3
     168: invokevirtual #19                 // Method resolveArguments:([Ljava/lang/Object;Ljava/util/Locale;)[Ljava/lang/Object;
     171: invokevirtual #20                 // Method java/text/MessageFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
     174: aload         5
     176: monitorexit
     177: areturn
     178: astore        9
     180: aload         5
     182: monitorexit
     183: aload         9
     185: athrow
    Exception table:
       from    to  target type
          94   102   105   Class java/lang/IllegalArgumentException
          31   136   139   any
         139   144   139   any
         163   177   178   any
         178   183   178   any

  protected java.text.MessageFormat createMessageFormat(java.lang.String, java.util.Locale);
    Code:
       0: new           #14                 // class java/text/MessageFormat
       3: dup
       4: aload_1
       5: ifnull        12
       8: aload_1
       9: goto          14
      12: ldc           #21                 // String
      14: aload_2
      15: invokespecial #22                 // Method java/text/MessageFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      18: areturn

  protected java.lang.Object[] resolveArguments(java.lang.Object[], java.util.Locale);
    Code:
       0: aload_1
       1: areturn

  static {};
    Code:
       0: new           #14                 // class java/text/MessageFormat
       3: dup
       4: ldc           #21                 // String
       6: invokespecial #23                 // Method java/text/MessageFormat."<init>":(Ljava/lang/String;)V
       9: putstatic     #18                 // Field INVALID_MESSAGE_FORMAT:Ljava/text/MessageFormat;
      12: return
}
