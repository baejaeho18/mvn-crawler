Compiled from "RegistrationPolicy.java"
public final class org.springframework.jmx.support.RegistrationPolicy extends java.lang.Enum<org.springframework.jmx.support.RegistrationPolicy> {
  public static final org.springframework.jmx.support.RegistrationPolicy FAIL_ON_EXISTING;

  public static final org.springframework.jmx.support.RegistrationPolicy IGNORE_EXISTING;

  public static final org.springframework.jmx.support.RegistrationPolicy REPLACE_EXISTING;

  private static final org.springframework.jmx.support.RegistrationPolicy[] $VALUES;

  public static org.springframework.jmx.support.RegistrationPolicy[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/springframework/jmx/support/RegistrationPolicy;
       3: invokevirtual #2                  // Method "[Lorg/springframework/jmx/support/RegistrationPolicy;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/springframework/jmx/support/RegistrationPolicy;"
       9: areturn

  public static org.springframework.jmx.support.RegistrationPolicy valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/springframework/jmx/support/RegistrationPolicy
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/springframework/jmx/support/RegistrationPolicy
       9: areturn

  private org.springframework.jmx.support.RegistrationPolicy();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static org.springframework.jmx.support.RegistrationPolicy valueOf(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 2
                     0: 36
                     1: 28
                     2: 32
               default: 40
          }
      28: getstatic     #7                  // Field IGNORE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      31: areturn
      32: getstatic     #8                  // Field REPLACE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      35: areturn
      36: getstatic     #9                  // Field FAIL_ON_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      39: areturn
      40: new           #10                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #11                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #13                 // String Unknown MBean registration behavior:
      53: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_0
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow

  static {};
    Code:
       0: new           #4                  // class org/springframework/jmx/support/RegistrationPolicy
       3: dup
       4: ldc           #18                 // String FAIL_ON_EXISTING
       6: iconst_0
       7: invokespecial #19                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #9                  // Field FAIL_ON_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      13: new           #4                  // class org/springframework/jmx/support/RegistrationPolicy
      16: dup
      17: ldc           #20                 // String IGNORE_EXISTING
      19: iconst_1
      20: invokespecial #19                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #7                  // Field IGNORE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      26: new           #4                  // class org/springframework/jmx/support/RegistrationPolicy
      29: dup
      30: ldc           #21                 // String REPLACE_EXISTING
      32: iconst_2
      33: invokespecial #19                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #8                  // Field REPLACE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      39: iconst_3
      40: anewarray     #4                  // class org/springframework/jmx/support/RegistrationPolicy
      43: dup
      44: iconst_0
      45: getstatic     #9                  // Field FAIL_ON_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #7                  // Field IGNORE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #8                  // Field REPLACE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      60: aastore
      61: putstatic     #1                  // Field $VALUES:[Lorg/springframework/jmx/support/RegistrationPolicy;
      64: return
}
