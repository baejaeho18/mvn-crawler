Compiled from "MBeanRegistrationSupport.java"
public class org.springframework.jmx.support.MBeanRegistrationSupport {
  public static final int REGISTRATION_FAIL_ON_EXISTING;

  public static final int REGISTRATION_IGNORE_EXISTING;

  public static final int REGISTRATION_REPLACE_EXISTING;

  private static final org.springframework.core.Constants constants;

  protected final org.apache.commons.logging.Log logger;

  protected javax.management.MBeanServer server;

  private final java.util.Set<javax.management.ObjectName> registeredBeans;

  private org.springframework.jmx.support.RegistrationPolicy registrationPolicy;

  public org.springframework.jmx.support.MBeanRegistrationSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #7                  // Field registeredBeans:Ljava/util/Set;
      26: aload_0
      27: getstatic     #8                  // Field org/springframework/jmx/support/RegistrationPolicy.FAIL_ON_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      30: putfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      33: return

  public void setServer(javax.management.MBeanServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field server:Ljavax/management/MBeanServer;
       5: return

  public final javax.management.MBeanServer getServer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
       4: areturn

  public void setRegistrationBehaviorName(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field constants:Lorg/springframework/core/Constants;
       4: aload_1
       5: invokevirtual #12                 // Method org/springframework/core/Constants.asNumber:(Ljava/lang/String;)Ljava/lang/Number;
       8: invokevirtual #13                 // Method java/lang/Number.intValue:()I
      11: invokevirtual #14                 // Method setRegistrationBehavior:(I)V
      14: return

  public void setRegistrationBehavior(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method org/springframework/jmx/support/RegistrationPolicy.valueOf:(I)Lorg/springframework/jmx/support/RegistrationPolicy;
       5: invokevirtual #16                 // Method setRegistrationPolicy:(Lorg/springframework/jmx/support/RegistrationPolicy;)V
       8: return

  public void setRegistrationPolicy(org.springframework.jmx.support.RegistrationPolicy);
    Code:
       0: aload_1
       1: ldc           #17                 // String RegistrationPolicy must not be null
       3: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      11: return

  protected void doRegister(java.lang.Object, javax.management.ObjectName) throws javax.management.JMException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
       4: dup
       5: astore        4
       7: monitorenter
       8: aconst_null
       9: astore        5
      11: aload_0
      12: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
      15: aload_1
      16: aload_2
      17: invokeinterface #19,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      22: astore        5
      24: goto          223
      27: astore        6
      29: aload_0
      30: getfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      33: getstatic     #21                 // Field org/springframework/jmx/support/RegistrationPolicy.IGNORE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      36: if_acmpne     87
      39: aload_0
      40: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      43: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      48: ifeq          223
      51: aload_0
      52: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      55: new           #23                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #25                 // String Ignoring existing MBean at [
      64: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_2
      68: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: ldc           #28                 // String ]
      73: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      84: goto          223
      87: aload_0
      88: getfield      #9                  // Field registrationPolicy:Lorg/springframework/jmx/support/RegistrationPolicy;
      91: getstatic     #31                 // Field org/springframework/jmx/support/RegistrationPolicy.REPLACE_EXISTING:Lorg/springframework/jmx/support/RegistrationPolicy;
      94: if_acmpne     220
      97: aload_0
      98: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     101: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     106: ifeq          142
     109: aload_0
     110: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     113: new           #23                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #32                 // String Replacing existing MBean at [
     122: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_2
     126: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: ldc           #28                 // String ]
     131: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokeinterface #30,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     142: aload_0
     143: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
     146: aload_2
     147: invokeinterface #33,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
     152: aload_0
     153: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
     156: aload_1
     157: aload_2
     158: invokeinterface #19,  3           // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
     163: astore        5
     165: goto          223
     168: astore        7
     170: aload_0
     171: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     174: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     179: ifeq          217
     182: aload_0
     183: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     186: new           #23                 // class java/lang/StringBuilder
     189: dup
     190: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     193: ldc           #36                 // String Unable to replace existing MBean at [
     195: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: aload_2
     199: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     202: ldc           #28                 // String ]
     204: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: aload         7
     212: invokeinterface #37,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     217: aload         6
     219: athrow
     220: aload         6
     222: athrow
     223: aload         5
     225: ifnull        236
     228: aload         5
     230: invokevirtual #38                 // Method javax/management/ObjectInstance.getObjectName:()Ljavax/management/ObjectName;
     233: goto          237
     236: aconst_null
     237: astore_3
     238: aload_3
     239: ifnonnull     244
     242: aload_2
     243: astore_3
     244: aload_0
     245: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
     248: aload_3
     249: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     254: pop
     255: aload         4
     257: monitorexit
     258: goto          269
     261: astore        8
     263: aload         4
     265: monitorexit
     266: aload         8
     268: athrow
     269: aload_0
     270: aload_3
     271: aload_1
     272: invokevirtual #40                 // Method onRegister:(Ljavax/management/ObjectName;Ljava/lang/Object;)V
     275: return
    Exception table:
       from    to  target type
          11    24    27   Class javax/management/InstanceAlreadyExistsException
          97   165   168   Class javax/management/InstanceNotFoundException
           8   258   261   any
         261   266   261   any

  protected void unregisterBeans();
    Code:
       0: aload_0
       1: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: new           #5                  // class java/util/LinkedHashSet
      10: dup
      11: aload_0
      12: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      15: invokespecial #41                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      18: astore_1
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: aload_1
      30: invokeinterface #42,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      35: ifne          83
      38: aload_0
      39: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      42: ldc           #43                 // String Unregistering JMX-exposed beans
      44: invokeinterface #44,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      49: aload_1
      50: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      55: astore_2
      56: aload_2
      57: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          83
      65: aload_2
      66: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #48                 // class javax/management/ObjectName
      74: astore_3
      75: aload_0
      76: aload_3
      77: invokevirtual #49                 // Method doUnregister:(Ljavax/management/ObjectName;)V
      80: goto          56
      83: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  protected void doUnregister(javax.management.ObjectName);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_0
      10: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #50,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      19: ifeq          147
      22: aload_0
      23: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
      26: aload_1
      27: invokeinterface #51,  2           // InterfaceMethod javax/management/MBeanServer.isRegistered:(Ljavax/management/ObjectName;)Z
      32: ifeq          50
      35: aload_0
      36: getfield      #10                 // Field server:Ljavax/management/MBeanServer;
      39: aload_1
      40: invokeinterface #33,  2           // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      45: iconst_1
      46: istore_2
      47: goto          95
      50: aload_0
      51: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      54: invokeinterface #52,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      59: ifeq          95
      62: aload_0
      63: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      66: new           #23                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #53                 // String Could not unregister MBean [
      75: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #54                 // String ] as said MBean is not registered (perhaps already unregistered by an external process)
      84: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokeinterface #55,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      95: goto          147
      98: astore        4
     100: aload_0
     101: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     104: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     109: ifeq          147
     112: aload_0
     113: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     116: new           #23                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #53                 // String Could not unregister MBean [
     125: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_1
     129: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: ldc           #28                 // String ]
     134: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: aload         4
     142: invokeinterface #37,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     147: aload_3
     148: monitorexit
     149: goto          159
     152: astore        5
     154: aload_3
     155: monitorexit
     156: aload         5
     158: athrow
     159: iload_2
     160: ifeq          168
     163: aload_0
     164: aload_1
     165: invokevirtual #57                 // Method onUnregister:(Ljavax/management/ObjectName;)V
     168: return
    Exception table:
       from    to  target type
          22    95    98   Class javax/management/JMException
           9   149   152   any
         152   156   152   any

  protected final javax.management.ObjectName[] getRegisteredObjectNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      11: aload_0
      12: getfield      #7                  // Field registeredBeans:Ljava/util/Set;
      15: invokeinterface #58,  1           // InterfaceMethod java/util/Set.size:()I
      20: anewarray     #48                 // class javax/management/ObjectName
      23: invokeinterface #59,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      28: checkcast     #60                 // class "[Ljavax/management/ObjectName;"
      31: aload_1
      32: monitorexit
      33: areturn
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           7    33    34   any
          34    37    34   any

  protected void onRegister(javax.management.ObjectName, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method onRegister:(Ljavax/management/ObjectName;)V
       5: return

  protected void onRegister(javax.management.ObjectName);
    Code:
       0: return

  protected void onUnregister(javax.management.ObjectName);
    Code:
       0: return

  static {};
    Code:
       0: new           #62                 // class org/springframework/core/Constants
       3: dup
       4: ldc           #63                 // class org/springframework/jmx/support/MBeanRegistrationSupport
       6: invokespecial #64                 // Method org/springframework/core/Constants."<init>":(Ljava/lang/Class;)V
       9: putstatic     #11                 // Field constants:Lorg/springframework/core/Constants;
      12: return
}
