Compiled from "AbstractRefreshableApplicationContext.java"
public abstract class org.springframework.context.support.AbstractRefreshableApplicationContext extends org.springframework.context.support.AbstractApplicationContext {
  private java.lang.Boolean allowBeanDefinitionOverriding;

  private java.lang.Boolean allowCircularReferences;

  private org.springframework.beans.factory.support.DefaultListableBeanFactory beanFactory;

  private final java.lang.Object beanFactoryMonitor;

  public org.springframework.context.support.AbstractRefreshableApplicationContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/context/support/AbstractApplicationContext."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
      15: return

  public org.springframework.context.support.AbstractRefreshableApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/springframework/context/support/AbstractApplicationContext."<init>":(Lorg/springframework/context/ApplicationContext;)V
       5: aload_0
       6: new           #2                  // class java/lang/Object
       9: dup
      10: invokespecial #3                  // Method java/lang/Object."<init>":()V
      13: putfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
      16: return

  public void setAllowBeanDefinitionOverriding(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #7                  // Field allowBeanDefinitionOverriding:Ljava/lang/Boolean;
       8: return

  public void setAllowCircularReferences(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #8                  // Field allowCircularReferences:Ljava/lang/Boolean;
       8: return

  protected final void refreshBeanFactory() throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method hasBeanFactory:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #10                 // Method destroyBeans:()V
      11: aload_0
      12: invokevirtual #11                 // Method closeBeanFactory:()V
      15: aload_0
      16: invokevirtual #12                 // Method createBeanFactory:()Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      19: astore_1
      20: aload_1
      21: aload_0
      22: invokevirtual #13                 // Method getId:()Ljava/lang/String;
      25: invokevirtual #14                 // Method org/springframework/beans/factory/support/DefaultListableBeanFactory.setSerializationId:(Ljava/lang/String;)V
      28: aload_0
      29: aload_1
      30: invokevirtual #15                 // Method customizeBeanFactory:(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
      33: aload_0
      34: aload_1
      35: invokevirtual #16                 // Method loadBeanDefinitions:(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V
      38: aload_0
      39: getfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
      42: dup
      43: astore_2
      44: monitorenter
      45: aload_0
      46: aload_1
      47: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      50: aload_2
      51: monitorexit
      52: goto          60
      55: astore_3
      56: aload_2
      57: monitorexit
      58: aload_3
      59: athrow
      60: goto          95
      63: astore_1
      64: new           #19                 // class org/springframework/context/ApplicationContextException
      67: dup
      68: new           #20                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #22                 // String I/O error parsing bean definition source for
      77: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokevirtual #24                 // Method getDisplayName:()Ljava/lang/String;
      84: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: aload_1
      91: invokespecial #26                 // Method org/springframework/context/ApplicationContextException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      94: athrow
      95: return
    Exception table:
       from    to  target type
          45    52    55   any
          55    58    55   any
          15    60    63   Class java/io/IOException

  protected void cancelRefresh(org.springframework.beans.BeansException);
    Code:
       0: aload_0
       1: getfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      11: ifnull        22
      14: aload_0
      15: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      18: aconst_null
      19: invokevirtual #14                 // Method org/springframework/beans/factory/support/DefaultListableBeanFactory.setSerializationId:(Ljava/lang/String;)V
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: aload_0
      33: aload_1
      34: invokespecial #27                 // Method org/springframework/context/support/AbstractApplicationContext.cancelRefresh:(Lorg/springframework/beans/BeansException;)V
      37: return
    Exception table:
       from    to  target type
           7    24    27   any
          27    30    27   any

  protected final void closeBeanFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      11: aconst_null
      12: invokevirtual #14                 // Method org/springframework/beans/factory/support/DefaultListableBeanFactory.setSerializationId:(Ljava/lang/String;)V
      15: aload_0
      16: aconst_null
      17: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      20: aload_1
      21: monitorexit
      22: goto          30
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    22    25   any
          25    28    25   any

  protected final boolean hasBeanFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: monitorexit
      21: ireturn
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
    Exception table:
       from    to  target type
           7    21    22   any
          22    25    22   any

  public final org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field beanFactoryMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      11: ifnonnull     24
      14: new           #28                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #29                 // String BeanFactory not initialized or already closed - call \'refresh\' before accessing beans via the ApplicationContext
      20: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;
      28: aload_1
      29: monitorexit
      30: areturn
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
    Exception table:
       from    to  target type
           7    30    31   any
          31    34    31   any

  protected void assertBeanFactoryActive();
    Code:
       0: return

  protected org.springframework.beans.factory.support.DefaultListableBeanFactory createBeanFactory();
    Code:
       0: new           #31                 // class org/springframework/beans/factory/support/DefaultListableBeanFactory
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method getInternalParentBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
       8: invokespecial #33                 // Method org/springframework/beans/factory/support/DefaultListableBeanFactory."<init>":(Lorg/springframework/beans/factory/BeanFactory;)V
      11: areturn

  protected void customizeBeanFactory(org.springframework.beans.factory.support.DefaultListableBeanFactory);
    Code:
       0: aload_0
       1: getfield      #7                  // Field allowBeanDefinitionOverriding:Ljava/lang/Boolean;
       4: ifnull        18
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field allowBeanDefinitionOverriding:Ljava/lang/Boolean;
      12: invokevirtual #34                 // Method java/lang/Boolean.booleanValue:()Z
      15: invokevirtual #35                 // Method org/springframework/beans/factory/support/DefaultListableBeanFactory.setAllowBeanDefinitionOverriding:(Z)V
      18: aload_0
      19: getfield      #8                  // Field allowCircularReferences:Ljava/lang/Boolean;
      22: ifnull        36
      25: aload_1
      26: aload_0
      27: getfield      #8                  // Field allowCircularReferences:Ljava/lang/Boolean;
      30: invokevirtual #34                 // Method java/lang/Boolean.booleanValue:()Z
      33: invokevirtual #36                 // Method org/springframework/beans/factory/support/DefaultListableBeanFactory.setAllowCircularReferences:(Z)V
      36: return

  protected abstract void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory) throws org.springframework.beans.BeansException, java.io.IOException;
}
