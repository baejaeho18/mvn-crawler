Compiled from "FormattingConversionServiceFactoryBean.java"
public class org.springframework.format.support.FormattingConversionServiceFactoryBean implements org.springframework.beans.factory.FactoryBean<org.springframework.format.support.FormattingConversionService>, org.springframework.context.EmbeddedValueResolverAware, org.springframework.beans.factory.InitializingBean {
  private java.util.Set<?> converters;

  private java.util.Set<?> formatters;

  private java.util.Set<org.springframework.format.FormatterRegistrar> formatterRegistrars;

  private boolean registerDefaultFormatters;

  private org.springframework.util.StringValueResolver embeddedValueResolver;

  private org.springframework.format.support.FormattingConversionService conversionService;

  public org.springframework.format.support.FormattingConversionServiceFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field registerDefaultFormatters:Z
       9: return

  public void setConverters(java.util.Set<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field converters:Ljava/util/Set;
       5: return

  public void setFormatters(java.util.Set<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field formatters:Ljava/util/Set;
       5: return

  public void setFormatterRegistrars(java.util.Set<org.springframework.format.FormatterRegistrar>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field formatterRegistrars:Ljava/util/Set;
       5: return

  public void setRegisterDefaultFormatters(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field registerDefaultFormatters:Z
       5: return

  public void setEmbeddedValueResolver(org.springframework.util.StringValueResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: new           #7                  // class org/springframework/format/support/DefaultFormattingConversionService
       4: dup
       5: aload_0
       6: getfield      #6                  // Field embeddedValueResolver:Lorg/springframework/util/StringValueResolver;
       9: aload_0
      10: getfield      #2                  // Field registerDefaultFormatters:Z
      13: invokespecial #8                  // Method org/springframework/format/support/DefaultFormattingConversionService."<init>":(Lorg/springframework/util/StringValueResolver;Z)V
      16: putfield      #9                  // Field conversionService:Lorg/springframework/format/support/FormattingConversionService;
      19: aload_0
      20: getfield      #3                  // Field converters:Ljava/util/Set;
      23: aload_0
      24: getfield      #9                  // Field conversionService:Lorg/springframework/format/support/FormattingConversionService;
      27: invokestatic  #10                 // Method org/springframework/core/convert/support/ConversionServiceFactory.registerConverters:(Ljava/util/Set;Lorg/springframework/core/convert/converter/ConverterRegistry;)V
      30: aload_0
      31: invokespecial #11                 // Method registerFormatters:()V
      34: return

  private void registerFormatters();
    Code:
       0: aload_0
       1: getfield      #4                  // Field formatters:Ljava/util/Set;
       4: ifnull        88
       7: aload_0
       8: getfield      #4                  // Field formatters:Ljava/util/Set;
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          88
      26: aload_1
      27: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore_2
      33: aload_2
      34: instanceof    #15                 // class org/springframework/format/Formatter
      37: ifeq          54
      40: aload_0
      41: getfield      #9                  // Field conversionService:Lorg/springframework/format/support/FormattingConversionService;
      44: aload_2
      45: checkcast     #15                 // class org/springframework/format/Formatter
      48: invokevirtual #16                 // Method org/springframework/format/support/FormattingConversionService.addFormatter:(Lorg/springframework/format/Formatter;)V
      51: goto          85
      54: aload_2
      55: instanceof    #17                 // class org/springframework/format/AnnotationFormatterFactory
      58: ifeq          75
      61: aload_0
      62: getfield      #9                  // Field conversionService:Lorg/springframework/format/support/FormattingConversionService;
      65: aload_2
      66: checkcast     #17                 // class org/springframework/format/AnnotationFormatterFactory
      69: invokevirtual #18                 // Method org/springframework/format/support/FormattingConversionService.addFormatterForFieldAnnotation:(Lorg/springframework/format/AnnotationFormatterFactory;)V
      72: goto          85
      75: new           #19                 // class java/lang/IllegalArgumentException
      78: dup
      79: ldc           #20                 // String Custom formatters must be implementations of Formatter or AnnotationFormatterFactory
      81: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: goto          17
      88: aload_0
      89: getfield      #5                  // Field formatterRegistrars:Ljava/util/Set;
      92: ifnull        137
      95: aload_0
      96: getfield      #5                  // Field formatterRegistrars:Ljava/util/Set;
      99: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore_1
     105: aload_1
     106: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          137
     114: aload_1
     115: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #22                 // class org/springframework/format/FormatterRegistrar
     123: astore_2
     124: aload_2
     125: aload_0
     126: getfield      #9                  // Field conversionService:Lorg/springframework/format/support/FormattingConversionService;
     129: invokeinterface #23,  2           // InterfaceMethod org/springframework/format/FormatterRegistrar.registerFormatters:(Lorg/springframework/format/FormatterRegistry;)V
     134: goto          105
     137: return

  public org.springframework.format.support.FormattingConversionService getObject();
    Code:
       0: aload_0
       1: getfield      #9                  // Field conversionService:Lorg/springframework/format/support/FormattingConversionService;
       4: areturn

  public java.lang.Class<? extends org.springframework.format.support.FormattingConversionService> getObjectType();
    Code:
       0: ldc           #24                 // class org/springframework/format/support/FormattingConversionService
       2: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getObject:()Lorg/springframework/format/support/FormattingConversionService;
       4: areturn
}
