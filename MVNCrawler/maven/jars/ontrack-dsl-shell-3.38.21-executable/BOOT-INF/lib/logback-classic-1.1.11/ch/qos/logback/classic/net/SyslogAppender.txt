Compiled from "SyslogAppender.java"
public class ch.qos.logback.classic.net.SyslogAppender extends ch.qos.logback.core.net.SyslogAppenderBase<ch.qos.logback.classic.spi.ILoggingEvent> {
  public static final java.lang.String DEFAULT_SUFFIX_PATTERN;

  public static final java.lang.String DEFAULT_STACKTRACE_PATTERN;

  ch.qos.logback.classic.PatternLayout stackTraceLayout;

  java.lang.String stackTracePattern;

  boolean throwableExcluded;

  public ch.qos.logback.classic.net.SyslogAppender();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method ch/qos/logback/core/net/SyslogAppenderBase."<init>":()V
       4: aload_0
       5: new           #23                 // class ch/qos/logback/classic/PatternLayout
       8: dup
       9: invokespecial #25                 // Method ch/qos/logback/classic/PatternLayout."<init>":()V
      12: putfield      #26                 // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      15: aload_0
      16: ldc           #11                 // String \t
      18: putfield      #28                 // Field stackTracePattern:Ljava/lang/String;
      21: aload_0
      22: iconst_0
      23: putfield      #30                 // Field throwableExcluded:Z
      26: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method ch/qos/logback/core/net/SyslogAppenderBase.start:()V
       4: aload_0
       5: invokespecial #39                 // Method setupStackTraceLayout:()V
       8: return

  java.lang.String getPrefixPattern();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #46                 // String %syslogStart{
       6: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: invokevirtual #51                 // Method getFacility:()Ljava/lang/String;
      13: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #58                 // String }%nopex{}
      18: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public ch.qos.logback.core.net.SyslogOutputStream createOutputStream() throws java.net.SocketException, java.net.UnknownHostException;
    Code:
       0: new           #70                 // class ch/qos/logback/core/net/SyslogOutputStream
       3: dup
       4: aload_0
       5: invokevirtual #72                 // Method getSyslogHost:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #75                 // Method getPort:()I
      12: invokespecial #79                 // Method ch/qos/logback/core/net/SyslogOutputStream."<init>":(Ljava/lang/String;I)V
      15: areturn

  public int getSeverityForEvent(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #84                 // class ch/qos/logback/classic/spi/ILoggingEvent
       4: astore_2
       5: aload_2
       6: invokestatic  #86                 // Method ch/qos/logback/classic/util/LevelToSyslogSeverity.convert:(Lch/qos/logback/classic/spi/ILoggingEvent;)I
       9: ireturn

  protected void postProcess(java.lang.Object, java.io.OutputStream);
    Code:
       0: aload_0
       1: getfield      #30                 // Field throwableExcluded:Z
       4: ifeq          8
       7: return
       8: aload_1
       9: checkcast     #84                 // class ch/qos/logback/classic/spi/ILoggingEvent
      12: astore_3
      13: aload_3
      14: invokeinterface #98,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThrowableProxy:()Lch/qos/logback/classic/spi/IThrowableProxy;
      19: astore        4
      21: aload         4
      23: ifnonnull     27
      26: return
      27: aload_0
      28: getfield      #26                 // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      31: aload_3
      32: invokevirtual #102                // Method ch/qos/logback/classic/PatternLayout.doLayout:(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/lang/String;
      35: astore        5
      37: iconst_1
      38: istore        6
      40: goto          151
      43: aload         4
      45: invokeinterface #106,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getStackTraceElementProxyArray:()[Lch/qos/logback/classic/spi/StackTraceElementProxy;
      50: astore        7
      52: aload_0
      53: aload_2
      54: aload         4
      56: aload         5
      58: iload         6
      60: invokespecial #112                // Method handleThrowableFirstLine:(Ljava/io/OutputStream;Lch/qos/logback/classic/spi/IThrowableProxy;Ljava/lang/String;Z)V
      63: iconst_0
      64: istore        6
      66: aload         7
      68: dup
      69: astore        11
      71: arraylength
      72: istore        10
      74: iconst_0
      75: istore        9
      77: goto          128
      80: aload         11
      82: iload         9
      84: aaload
      85: astore        8
      87: new           #44                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      94: astore        12
      96: aload         12
      98: aload         5
     100: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload         8
     105: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: pop
     109: aload_2
     110: aload         12
     112: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokevirtual #120                // Method java/lang/String.getBytes:()[B
     118: invokevirtual #126                // Method java/io/OutputStream.write:([B)V
     121: aload_2
     122: invokevirtual #132                // Method java/io/OutputStream.flush:()V
     125: iinc          9, 1
     128: iload         9
     130: iload         10
     132: if_icmplt     80
     135: goto          142
     138: pop
     139: goto          156
     142: aload         4
     144: invokeinterface #135,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getCause:()Lch/qos/logback/classic/spi/IThrowableProxy;
     149: astore        4
     151: aload         4
     153: ifnonnull     43
     156: return
    Exception table:
       from    to  target type
          52   135   138   Class java/io/IOException

  private void handleThrowableFirstLine(java.io.OutputStream, ch.qos.logback.classic.spi.IThrowableProxy, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
       7: aload_3
       8: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: astore        5
      13: iload         4
      15: ifne          26
      18: aload         5
      20: ldc           #156                // String Caused by:
      22: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload         5
      28: aload_2
      29: invokeinterface #158,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getClassName:()Ljava/lang/String;
      34: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #161                // String :
      39: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokeinterface #163,  1          // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getMessage:()Ljava/lang/String;
      48: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload         5
      55: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokevirtual #120                // Method java/lang/String.getBytes:()[B
      61: invokevirtual #126                // Method java/io/OutputStream.write:([B)V
      64: aload_1
      65: invokevirtual #132                // Method java/io/OutputStream.flush:()V
      68: return

  boolean stackTraceHeaderLine(java.lang.StringBuilder, boolean);
    Code:
       0: iconst_0
       1: ireturn

  public ch.qos.logback.core.Layout<ch.qos.logback.classic.spi.ILoggingEvent> buildLayout();
    Code:
       0: new           #23                 // class ch/qos/logback/classic/PatternLayout
       3: dup
       4: invokespecial #25                 // Method ch/qos/logback/classic/PatternLayout."<init>":()V
       7: astore_1
       8: aload_1
       9: invokevirtual #173                // Method ch/qos/logback/classic/PatternLayout.getInstanceConverterMap:()Ljava/util/Map;
      12: ldc           #177                // String syslogStart
      14: ldc           #179                // class ch/qos/logback/classic/pattern/SyslogStartConverter
      16: invokevirtual #181                // Method java/lang/Class.getName:()Ljava/lang/String;
      19: invokeinterface #186,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getfield      #192                // Field suffixPattern:Ljava/lang/String;
      29: ifnonnull     38
      32: aload_0
      33: ldc           #8                  // String [%thread] %logger %msg
      35: putfield      #192                // Field suffixPattern:Ljava/lang/String;
      38: aload_1
      39: new           #44                 // class java/lang/StringBuilder
      42: dup
      43: aload_0
      44: invokevirtual #195                // Method getPrefixPattern:()Ljava/lang/String;
      47: invokestatic  #197                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      50: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      53: aload_0
      54: getfield      #192                // Field suffixPattern:Ljava/lang/String;
      57: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokevirtual #201                // Method ch/qos/logback/classic/PatternLayout.setPattern:(Ljava/lang/String;)V
      66: aload_1
      67: aload_0
      68: invokevirtual #204                // Method getContext:()Lch/qos/logback/core/Context;
      71: invokevirtual #208                // Method ch/qos/logback/classic/PatternLayout.setContext:(Lch/qos/logback/core/Context;)V
      74: aload_1
      75: invokevirtual #212                // Method ch/qos/logback/classic/PatternLayout.start:()V
      78: aload_1
      79: areturn

  private void setupStackTraceLayout();
    Code:
       0: aload_0
       1: getfield      #26                 // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
       4: invokevirtual #173                // Method ch/qos/logback/classic/PatternLayout.getInstanceConverterMap:()Ljava/util/Map;
       7: ldc           #177                // String syslogStart
       9: ldc           #179                // class ch/qos/logback/classic/pattern/SyslogStartConverter
      11: invokevirtual #181                // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokeinterface #186,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getfield      #26                 // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      24: new           #44                 // class java/lang/StringBuilder
      27: dup
      28: aload_0
      29: invokevirtual #195                // Method getPrefixPattern:()Ljava/lang/String;
      32: invokestatic  #197                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #48                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      38: aload_0
      39: getfield      #28                 // Field stackTracePattern:Ljava/lang/String;
      42: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokevirtual #201                // Method ch/qos/logback/classic/PatternLayout.setPattern:(Ljava/lang/String;)V
      51: aload_0
      52: getfield      #26                 // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      55: aload_0
      56: invokevirtual #204                // Method getContext:()Lch/qos/logback/core/Context;
      59: invokevirtual #208                // Method ch/qos/logback/classic/PatternLayout.setContext:(Lch/qos/logback/core/Context;)V
      62: aload_0
      63: getfield      #26                 // Field stackTraceLayout:Lch/qos/logback/classic/PatternLayout;
      66: invokevirtual #212                // Method ch/qos/logback/classic/PatternLayout.start:()V
      69: return

  public boolean isThrowableExcluded();
    Code:
       0: aload_0
       1: getfield      #30                 // Field throwableExcluded:Z
       4: ireturn

  public void setThrowableExcluded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field throwableExcluded:Z
       5: return

  public java.lang.String getStackTracePattern();
    Code:
       0: aload_0
       1: getfield      #28                 // Field stackTracePattern:Ljava/lang/String;
       4: areturn

  public void setStackTracePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field stackTracePattern:Ljava/lang/String;
       5: return
}
