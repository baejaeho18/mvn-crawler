Compiled from "LoggerContext.java"
public class ch.qos.logback.classic.LoggerContext extends ch.qos.logback.core.ContextBase implements org.slf4j.ILoggerFactory,ch.qos.logback.core.spi.LifeCycle {
  public static final boolean DEFAULT_PACKAGING_DATA;

  final ch.qos.logback.classic.Logger root;

  private int size;

  private int noAppenderWarning;

  private final java.util.List<ch.qos.logback.classic.spi.LoggerContextListener> loggerContextListenerList;

  private java.util.Map<java.lang.String, ch.qos.logback.classic.Logger> loggerCache;

  private ch.qos.logback.classic.spi.LoggerContextVO loggerContextRemoteView;

  private final ch.qos.logback.classic.spi.TurboFilterList turboFilterList;

  private boolean packagingDataEnabled;

  private int maxCallerDataDepth;

  int resetCount;

  private java.util.List<java.lang.String> frameworkPackages;

  public ch.qos.logback.classic.LoggerContext();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method ch/qos/logback/core/ContextBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #39                 // Field noAppenderWarning:I
       9: aload_0
      10: new           #41                 // class java/util/ArrayList
      13: dup
      14: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
      17: putfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
      20: aload_0
      21: new           #46                 // class ch/qos/logback/classic/spi/TurboFilterList
      24: dup
      25: invokespecial #48                 // Method ch/qos/logback/classic/spi/TurboFilterList."<init>":()V
      28: putfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
      31: aload_0
      32: iconst_0
      33: putfield      #51                 // Field packagingDataEnabled:Z
      36: aload_0
      37: bipush        8
      39: putfield      #53                 // Field maxCallerDataDepth:I
      42: aload_0
      43: iconst_0
      44: putfield      #55                 // Field resetCount:I
      47: aload_0
      48: new           #57                 // class java/util/concurrent/ConcurrentHashMap
      51: dup
      52: invokespecial #59                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      55: putfield      #60                 // Field loggerCache:Ljava/util/Map;
      58: aload_0
      59: new           #62                 // class ch/qos/logback/classic/spi/LoggerContextVO
      62: dup
      63: aload_0
      64: invokespecial #64                 // Method ch/qos/logback/classic/spi/LoggerContextVO."<init>":(Lch/qos/logback/classic/LoggerContext;)V
      67: putfield      #67                 // Field loggerContextRemoteView:Lch/qos/logback/classic/spi/LoggerContextVO;
      70: aload_0
      71: new           #69                 // class ch/qos/logback/classic/Logger
      74: dup
      75: ldc           #71                 // String ROOT
      77: aconst_null
      78: aload_0
      79: invokespecial #73                 // Method ch/qos/logback/classic/Logger."<init>":(Ljava/lang/String;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/LoggerContext;)V
      82: putfield      #76                 // Field root:Lch/qos/logback/classic/Logger;
      85: aload_0
      86: getfield      #76                 // Field root:Lch/qos/logback/classic/Logger;
      89: getstatic     #78                 // Field ch/qos/logback/classic/Level.DEBUG:Lch/qos/logback/classic/Level;
      92: invokevirtual #84                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
      95: aload_0
      96: getfield      #60                 // Field loggerCache:Ljava/util/Map;
      99: ldc           #71                 // String ROOT
     101: aload_0
     102: getfield      #76                 // Field root:Lch/qos/logback/classic/Logger;
     105: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_0
     112: invokevirtual #94                 // Method initEvaluatorMap:()V
     115: aload_0
     116: iconst_1
     117: putfield      #97                 // Field size:I
     120: aload_0
     121: new           #41                 // class java/util/ArrayList
     124: dup
     125: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
     128: putfield      #99                 // Field frameworkPackages:Ljava/util/List;
     131: return

  void initEvaluatorMap();
    Code:
       0: aload_0
       1: ldc           #105                // String EVALUATOR_MAP
       3: new           #107                // class java/util/HashMap
       6: dup
       7: invokespecial #109                // Method java/util/HashMap."<init>":()V
      10: invokevirtual #110                // Method putObject:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  private void updateLoggerContextVO();
    Code:
       0: aload_0
       1: new           #62                 // class ch/qos/logback/classic/spi/LoggerContextVO
       4: dup
       5: aload_0
       6: invokespecial #64                 // Method ch/qos/logback/classic/spi/LoggerContextVO."<init>":(Lch/qos/logback/classic/LoggerContext;)V
       9: putfield      #67                 // Field loggerContextRemoteView:Lch/qos/logback/classic/spi/LoggerContextVO;
      12: return

  public void putProperty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #117                // Method ch/qos/logback/core/ContextBase.putProperty:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #119                // Method updateLoggerContextVO:()V
      10: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #126                // Method ch/qos/logback/core/ContextBase.setName:(Ljava/lang/String;)V
       5: aload_0
       6: invokespecial #119                // Method updateLoggerContextVO:()V
       9: return

  public final ch.qos.logback.classic.Logger getLogger(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokevirtual #138                // Method getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
       8: areturn

  public final ch.qos.logback.classic.Logger getLogger(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #145                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #147                // String name argument cannot be null
      10: invokespecial #149                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: ldc           #71                 // String ROOT
      16: aload_1
      17: invokevirtual #151                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          28
      23: aload_0
      24: getfield      #76                 // Field root:Lch/qos/logback/classic/Logger;
      27: areturn
      28: iconst_0
      29: istore_2
      30: aload_0
      31: getfield      #76                 // Field root:Lch/qos/logback/classic/Logger;
      34: astore_3
      35: aload_0
      36: getfield      #60                 // Field loggerCache:Ljava/util/Map;
      39: aload_1
      40: invokeinterface #157,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #69                 // class ch/qos/logback/classic/Logger
      48: astore        4
      50: aload         4
      52: ifnull        58
      55: aload         4
      57: areturn
      58: aload_1
      59: iload_2
      60: invokestatic  #161                // Method ch/qos/logback/classic/util/LoggerNameUtil.getSeparatorIndexOf:(Ljava/lang/String;I)I
      63: istore        6
      65: iload         6
      67: iconst_m1
      68: if_icmpne     77
      71: aload_1
      72: astore        5
      74: goto          86
      77: aload_1
      78: iconst_0
      79: iload         6
      81: invokevirtual #167                // Method java/lang/String.substring:(II)Ljava/lang/String;
      84: astore        5
      86: iload         6
      88: iconst_1
      89: iadd
      90: istore_2
      91: aload_3
      92: dup
      93: astore        7
      95: monitorenter
      96: aload_3
      97: aload         5
      99: invokevirtual #171                // Method ch/qos/logback/classic/Logger.getChildByName:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
     102: astore        4
     104: aload         4
     106: ifnonnull     135
     109: aload_3
     110: aload         5
     112: invokevirtual #174                // Method ch/qos/logback/classic/Logger.createChildByName:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
     115: astore        4
     117: aload_0
     118: getfield      #60                 // Field loggerCache:Ljava/util/Map;
     121: aload         5
     123: aload         4
     125: invokeinterface #88,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_0
     132: invokespecial #177                // Method incSize:()V
     135: aload         7
     137: monitorexit
     138: goto          145
     141: aload         7
     143: monitorexit
     144: athrow
     145: aload         4
     147: astore_3
     148: iload         6
     150: iconst_m1
     151: if_icmpne     58
     154: aload         4
     156: areturn
    Exception table:
       from    to  target type
          96   138   141   any
         141   144   141   any

  private void incSize();
    Code:
       0: aload_0
       1: dup
       2: getfield      #97                 // Field size:I
       5: iconst_1
       6: iadd
       7: putfield      #97                 // Field size:I
      10: return

  int size();
    Code:
       0: aload_0
       1: getfield      #97                 // Field size:I
       4: ireturn

  public ch.qos.logback.classic.Logger exists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #60                 // Field loggerCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #157,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #69                 // class ch/qos/logback/classic/Logger
      13: areturn

  final void noAppenderDefinedWarning(ch.qos.logback.classic.Logger);
    Code:
       0: aload_0
       1: dup
       2: getfield      #39                 // Field noAppenderWarning:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #39                 // Field noAppenderWarning:I
      11: ifne          67
      14: aload_0
      15: invokevirtual #192                // Method getStatusManager:()Lch/qos/logback/core/status/StatusManager;
      18: new           #196                // class ch/qos/logback/core/status/WarnStatus
      21: dup
      22: new           #198                // class java/lang/StringBuilder
      25: dup
      26: ldc           #200                // String No appenders present in context [
      28: invokespecial #202                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      31: aload_0
      32: invokevirtual #203                // Method getName:()Ljava/lang/String;
      35: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #208                // String ] for logger [
      40: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #210                // Method ch/qos/logback/classic/Logger.getName:()Ljava/lang/String;
      47: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #211                // String ].
      52: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #213                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: aload_1
      59: invokespecial #216                // Method ch/qos/logback/core/status/WarnStatus."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      62: invokeinterface #218,  2          // InterfaceMethod ch/qos/logback/core/status/StatusManager.add:(Lch/qos/logback/core/status/Status;)V
      67: return

  public java.util.List<ch.qos.logback.classic.Logger> getLoggerList();
    Code:
       0: aload_0
       1: getfield      #60                 // Field loggerCache:Ljava/util/Map;
       4: invokeinterface #227,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: astore_1
      10: new           #41                 // class java/util/ArrayList
      13: dup
      14: aload_1
      15: invokespecial #231                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      18: astore_2
      19: aload_2
      20: new           #234                // class ch/qos/logback/classic/spi/LoggerComparator
      23: dup
      24: invokespecial #236                // Method ch/qos/logback/classic/spi/LoggerComparator."<init>":()V
      27: invokestatic  #237                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      30: aload_2
      31: areturn

  public ch.qos.logback.classic.spi.LoggerContextVO getLoggerContextRemoteView();
    Code:
       0: aload_0
       1: getfield      #67                 // Field loggerContextRemoteView:Lch/qos/logback/classic/spi/LoggerContextVO;
       4: areturn

  public void setPackagingDataEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field packagingDataEnabled:Z
       5: return

  public boolean isPackagingDataEnabled();
    Code:
       0: aload_0
       1: getfield      #51                 // Field packagingDataEnabled:Z
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: dup
       2: getfield      #55                 // Field resetCount:I
       5: iconst_1
       6: iadd
       7: putfield      #55                 // Field resetCount:I
      10: aload_0
      11: invokespecial #255                // Method ch/qos/logback/core/ContextBase.reset:()V
      14: aload_0
      15: invokevirtual #94                 // Method initEvaluatorMap:()V
      18: aload_0
      19: invokevirtual #257                // Method initCollisionMaps:()V
      22: aload_0
      23: getfield      #76                 // Field root:Lch/qos/logback/classic/Logger;
      26: invokevirtual #260                // Method ch/qos/logback/classic/Logger.recursiveReset:()V
      29: aload_0
      30: invokevirtual #263                // Method resetTurboFilterList:()V
      33: aload_0
      34: invokespecial #266                // Method cancelScheduledTasks:()V
      37: aload_0
      38: invokespecial #269                // Method fireOnReset:()V
      41: aload_0
      42: invokespecial #272                // Method resetListenersExceptResetResistant:()V
      45: aload_0
      46: invokespecial #275                // Method resetStatusListeners:()V
      49: return

  private void cancelScheduledTasks();
    Code:
       0: aload_0
       1: getfield      #278                // Field scheduledFutures:Ljava/util/List;
       4: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: goto          31
      13: aload_2
      14: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: checkcast     #293                // class java/util/concurrent/ScheduledFuture
      22: astore_1
      23: aload_1
      24: iconst_0
      25: invokeinterface #295,  2          // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      30: pop
      31: aload_2
      32: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifne          13
      40: aload_0
      41: getfield      #278                // Field scheduledFutures:Ljava/util/List;
      44: invokeinterface #302,  1          // InterfaceMethod java/util/List.clear:()V
      49: return

  private void resetStatusListeners();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method getStatusManager:()Lch/qos/logback/core/status/StatusManager;
       4: astore_1
       5: aload_1
       6: invokeinterface #308,  1          // InterfaceMethod ch/qos/logback/core/status/StatusManager.getCopyOfStatusListenerList:()Ljava/util/List;
      11: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: goto          37
      20: aload_3
      21: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #311                // class ch/qos/logback/core/status/StatusListener
      29: astore_2
      30: aload_1
      31: aload_2
      32: invokeinterface #313,  2          // InterfaceMethod ch/qos/logback/core/status/StatusManager.remove:(Lch/qos/logback/core/status/StatusListener;)V
      37: aload_3
      38: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifne          20
      46: return

  public ch.qos.logback.classic.spi.TurboFilterList getTurboFilterList();
    Code:
       0: aload_0
       1: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
       4: areturn

  public void addTurboFilter(ch.qos.logback.classic.turbo.TurboFilter);
    Code:
       0: aload_0
       1: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
       4: aload_1
       5: invokevirtual #325                // Method ch/qos/logback/classic/spi/TurboFilterList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void resetTurboFilterList();
    Code:
       0: aload_0
       1: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
       4: invokevirtual #330                // Method ch/qos/logback/classic/spi/TurboFilterList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: goto          25
      11: aload_2
      12: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      17: checkcast     #331                // class ch/qos/logback/classic/turbo/TurboFilter
      20: astore_1
      21: aload_1
      22: invokevirtual #333                // Method ch/qos/logback/classic/turbo/TurboFilter.stop:()V
      25: aload_2
      26: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifne          11
      34: aload_0
      35: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
      38: invokevirtual #336                // Method ch/qos/logback/classic/spi/TurboFilterList.clear:()V
      41: return

  final ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker, ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
       4: invokevirtual #340                // Method ch/qos/logback/classic/spi/TurboFilterList.size:()I
       7: ifne          14
      10: getstatic     #342                // Field ch/qos/logback/core/spi/FilterReply.NEUTRAL:Lch/qos/logback/core/spi/FilterReply;
      13: areturn
      14: aload_0
      15: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
      18: aload_1
      19: aload_2
      20: aload_3
      21: aload         4
      23: aload         5
      25: aload         6
      27: invokevirtual #348                // Method ch/qos/logback/classic/spi/TurboFilterList.getTurboFilterChainDecision:(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;
      30: areturn

  final ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_1(org.slf4j.Marker, ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level, java.lang.String, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
       4: invokevirtual #340                // Method ch/qos/logback/classic/spi/TurboFilterList.size:()I
       7: ifne          14
      10: getstatic     #342                // Field ch/qos/logback/core/spi/FilterReply.NEUTRAL:Lch/qos/logback/core/spi/FilterReply;
      13: areturn
      14: aload_0
      15: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
      18: aload_1
      19: aload_2
      20: aload_3
      21: aload         4
      23: iconst_1
      24: anewarray     #361                // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload         5
      31: aastore
      32: aload         6
      34: invokevirtual #348                // Method ch/qos/logback/classic/spi/TurboFilterList.getTurboFilterChainDecision:(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;
      37: areturn

  final ch.qos.logback.core.spi.FilterReply getTurboFilterChainDecision_2(org.slf4j.Marker, ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
       4: invokevirtual #340                // Method ch/qos/logback/classic/spi/TurboFilterList.size:()I
       7: ifne          14
      10: getstatic     #342                // Field ch/qos/logback/core/spi/FilterReply.NEUTRAL:Lch/qos/logback/core/spi/FilterReply;
      13: areturn
      14: aload_0
      15: getfield      #49                 // Field turboFilterList:Lch/qos/logback/classic/spi/TurboFilterList;
      18: aload_1
      19: aload_2
      20: aload_3
      21: aload         4
      23: iconst_2
      24: anewarray     #361                // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload         5
      31: aastore
      32: dup
      33: iconst_1
      34: aload         6
      36: aastore
      37: aload         7
      39: invokevirtual #348                // Method ch/qos/logback/classic/spi/TurboFilterList.getTurboFilterChainDecision:(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;
      42: areturn

  public void addListener(ch.qos.logback.classic.spi.LoggerContextListener);
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #371,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeListener(ch.qos.logback.classic.spi.LoggerContextListener);
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: aload_1
       5: invokeinterface #375,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private void resetListenersExceptResetResistant();
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: invokespecial #43                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
      12: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: goto          48
      21: aload_3
      22: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #377                // class ch/qos/logback/classic/spi/LoggerContextListener
      30: astore_2
      31: aload_2
      32: invokeinterface #379,  1          // InterfaceMethod ch/qos/logback/classic/spi/LoggerContextListener.isResetResistant:()Z
      37: ifeq          48
      40: aload_1
      41: aload_2
      42: invokeinterface #371,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_3
      49: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifne          21
      57: aload_0
      58: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
      61: aload_1
      62: invokeinterface #382,  2          // InterfaceMethod java/util/List.retainAll:(Ljava/util/Collection;)Z
      67: pop
      68: return

  private void resetAllListeners();
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: invokeinterface #302,  1          // InterfaceMethod java/util/List.clear:()V
       9: return

  public java.util.List<ch.qos.logback.classic.spi.LoggerContextListener> getCopyOfListenerList();
    Code:
       0: new           #41                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       8: invokespecial #231                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: areturn

  void fireOnLevelChange(ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level);
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: goto          33
      14: aload         4
      16: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #377                // class ch/qos/logback/classic/spi/LoggerContextListener
      24: astore_3
      25: aload_3
      26: aload_1
      27: aload_2
      28: invokeinterface #393,  3          // InterfaceMethod ch/qos/logback/classic/spi/LoggerContextListener.onLevelChange:(Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;)V
      33: aload         4
      35: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifne          14
      43: return

  private void fireOnReset();
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: goto          30
      13: aload_2
      14: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: checkcast     #377                // class ch/qos/logback/classic/spi/LoggerContextListener
      22: astore_1
      23: aload_1
      24: aload_0
      25: invokeinterface #396,  2          // InterfaceMethod ch/qos/logback/classic/spi/LoggerContextListener.onReset:(Lch/qos/logback/classic/LoggerContext;)V
      30: aload_2
      31: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifne          13
      39: return

  private void fireOnStart();
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: goto          30
      13: aload_2
      14: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: checkcast     #377                // class ch/qos/logback/classic/spi/LoggerContextListener
      22: astore_1
      23: aload_1
      24: aload_0
      25: invokeinterface #400,  2          // InterfaceMethod ch/qos/logback/classic/spi/LoggerContextListener.onStart:(Lch/qos/logback/classic/LoggerContext;)V
      30: aload_2
      31: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifne          13
      39: return

  private void fireOnStop();
    Code:
       0: aload_0
       1: getfield      #44                 // Field loggerContextListenerList:Ljava/util/List;
       4: invokeinterface #281,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: goto          30
      13: aload_2
      14: invokeinterface #287,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: checkcast     #377                // class ch/qos/logback/classic/spi/LoggerContextListener
      22: astore_1
      23: aload_1
      24: aload_0
      25: invokeinterface #404,  2          // InterfaceMethod ch/qos/logback/classic/spi/LoggerContextListener.onStop:(Lch/qos/logback/classic/LoggerContext;)V
      30: aload_2
      31: invokeinterface #299,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifne          13
      39: return

  public void start();
    Code:
       0: aload_0
       1: invokespecial #408                // Method ch/qos/logback/core/ContextBase.start:()V
       4: aload_0
       5: invokespecial #410                // Method fireOnStart:()V
       8: return

  public void stop();
    Code:
       0: aload_0
       1: invokevirtual #412                // Method reset:()V
       4: aload_0
       5: invokespecial #413                // Method fireOnStop:()V
       8: aload_0
       9: invokespecial #415                // Method resetAllListeners:()V
      12: aload_0
      13: invokespecial #417                // Method ch/qos/logback/core/ContextBase.stop:()V
      16: return

  public java.lang.String toString();
    Code:
       0: new           #198                // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #418                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #132                // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokestatic  #422                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokespecial #202                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      17: ldc_w         #426                // String [
      20: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #203                // Method getName:()Ljava/lang/String;
      27: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc_w         #428                // String ]
      33: invokevirtual #204                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #213                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public int getMaxCallerDataDepth();
    Code:
       0: aload_0
       1: getfield      #53                 // Field maxCallerDataDepth:I
       4: ireturn

  public void setMaxCallerDataDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #53                 // Field maxCallerDataDepth:I
       5: return

  public java.util.List<java.lang.String> getFrameworkPackages();
    Code:
       0: aload_0
       1: getfield      #99                 // Field frameworkPackages:Ljava/util/List;
       4: areturn

  public org.slf4j.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #138                // Method getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
       5: areturn
}
