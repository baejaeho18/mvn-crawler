Compiled from "LazyDecompressingInputStream.java"
class org.apache.http.client.entity.LazyDecompressingInputStream extends java.io.InputStream {
  private final java.io.InputStream wrappedStream;

  private final org.apache.http.client.entity.InputStreamFactory inputStreamFactory;

  private java.io.InputStream wrapperStream;

  public org.apache.http.client.entity.LazyDecompressingInputStream(java.io.InputStream, org.apache.http.client.entity.InputStreamFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field wrappedStream:Ljava/io/InputStream;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field inputStreamFactory:Lorg/apache/http/client/entity/InputStreamFactory;
      14: return

  private void initWrapper() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       4: ifnonnull     24
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field inputStreamFactory:Lorg/apache/http/client/entity/InputStreamFactory;
      12: aload_0
      13: getfield      #2                  // Field wrappedStream:Ljava/io/InputStream;
      16: invokeinterface #5,  2            // InterfaceMethod org/apache/http/client/entity/InputStreamFactory.create:(Ljava/io/InputStream;)Ljava/io/InputStream;
      21: putfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
      24: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initWrapper:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       8: invokevirtual #7                  // Method java/io/InputStream.read:()I
      11: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initWrapper:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       8: aload_1
       9: invokevirtual #8                  // Method java/io/InputStream.read:([B)I
      12: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initWrapper:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #9                  // Method java/io/InputStream.read:([BII)I
      14: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initWrapper:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       8: lload_1
       9: invokevirtual #10                 // Method java/io/InputStream.skip:(J)J
      12: lreturn

  public boolean markSupported();
    Code:
       0: iconst_0
       1: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method initWrapper:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       8: invokevirtual #11                 // Method java/io/InputStream.available:()I
      11: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field wrapperStream:Ljava/io/InputStream;
      11: invokevirtual #12                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: getfield      #2                  // Field wrappedStream:Ljava/io/InputStream;
      18: invokevirtual #12                 // Method java/io/InputStream.close:()V
      21: goto          34
      24: astore_1
      25: aload_0
      26: getfield      #2                  // Field wrappedStream:Ljava/io/InputStream;
      29: invokevirtual #12                 // Method java/io/InputStream.close:()V
      32: aload_1
      33: athrow
      34: return
    Exception table:
       from    to  target type
           0    14    24   any
          24    25    24   any
}
