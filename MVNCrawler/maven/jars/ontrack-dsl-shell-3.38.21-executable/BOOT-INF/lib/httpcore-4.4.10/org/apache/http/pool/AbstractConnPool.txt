Compiled from "AbstractConnPool.java"
public abstract class org.apache.http.pool.AbstractConnPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> implements org.apache.http.pool.ConnPool<T, E>, org.apache.http.pool.ConnPoolControl<T> {
  private final java.util.concurrent.locks.Lock lock;

  private final java.util.concurrent.locks.Condition condition;

  private final org.apache.http.pool.ConnFactory<T, C> connFactory;

  private final java.util.Map<T, org.apache.http.pool.RouteSpecificPool<T, C, E>> routeToPool;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.LinkedList<java.util.concurrent.Future<E>> pending;

  private final java.util.Map<T, java.lang.Integer> maxPerRoute;

  private volatile boolean isShutDown;

  private volatile int defaultMaxPerRoute;

  private volatile int maxTotal;

  private volatile int validateAfterInactivity;

  public org.apache.http.pool.AbstractConnPool(org.apache.http.pool.ConnFactory<T, C>, int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #6                  // String Connection factory
       8: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #8                  // class org/apache/http/pool/ConnFactory
      14: putfield      #9                  // Field connFactory:Lorg/apache/http/pool/ConnFactory;
      17: aload_0
      18: iload_2
      19: ldc           #10                 // String Max per route value
      21: invokestatic  #11                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      24: putfield      #12                 // Field defaultMaxPerRoute:I
      27: aload_0
      28: iload_3
      29: ldc           #13                 // String Max total value
      31: invokestatic  #11                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
      34: putfield      #14                 // Field maxTotal:I
      37: aload_0
      38: new           #15                 // class java/util/concurrent/locks/ReentrantLock
      41: dup
      42: invokespecial #16                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      45: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      48: aload_0
      49: aload_0
      50: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      53: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      58: putfield      #3                  // Field condition:Ljava/util/concurrent/locks/Condition;
      61: aload_0
      62: new           #18                 // class java/util/HashMap
      65: dup
      66: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      69: putfield      #20                 // Field routeToPool:Ljava/util/Map;
      72: aload_0
      73: new           #21                 // class java/util/HashSet
      76: dup
      77: invokespecial #22                 // Method java/util/HashSet."<init>":()V
      80: putfield      #23                 // Field leased:Ljava/util/Set;
      83: aload_0
      84: new           #24                 // class java/util/LinkedList
      87: dup
      88: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
      91: putfield      #26                 // Field available:Ljava/util/LinkedList;
      94: aload_0
      95: new           #24                 // class java/util/LinkedList
      98: dup
      99: invokespecial #25                 // Method java/util/LinkedList."<init>":()V
     102: putfield      #27                 // Field pending:Ljava/util/LinkedList;
     105: aload_0
     106: new           #18                 // class java/util/HashMap
     109: dup
     110: invokespecial #19                 // Method java/util/HashMap."<init>":()V
     113: putfield      #28                 // Field maxPerRoute:Ljava/util/Map;
     116: return

  protected abstract E createEntry(T, C);

  protected void onLease(E);
    Code:
       0: return

  protected void onRelease(E);
    Code:
       0: return

  protected void onReuse(E);
    Code:
       0: return

  protected boolean validate(E);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #29                 // Field isShutDown:Z
       4: ireturn

  public void shutdown() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field isShutDown:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #29                 // Field isShutDown:Z
      13: aload_0
      14: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      17: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: getfield      #26                 // Field available:Ljava/util/LinkedList;
      26: invokevirtual #31                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          56
      39: aload_1
      40: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #34                 // class org/apache/http/pool/PoolEntry
      48: astore_2
      49: aload_2
      50: invokevirtual #35                 // Method org/apache/http/pool/PoolEntry.close:()V
      53: goto          30
      56: aload_0
      57: getfield      #23                 // Field leased:Ljava/util/Set;
      60: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore_1
      66: aload_1
      67: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          92
      75: aload_1
      76: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #34                 // class org/apache/http/pool/PoolEntry
      84: astore_2
      85: aload_2
      86: invokevirtual #35                 // Method org/apache/http/pool/PoolEntry.close:()V
      89: goto          66
      92: aload_0
      93: getfield      #20                 // Field routeToPool:Ljava/util/Map;
      96: invokeinterface #37,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     101: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     106: astore_1
     107: aload_1
     108: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          133
     116: aload_1
     117: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #39                 // class org/apache/http/pool/RouteSpecificPool
     125: astore_2
     126: aload_2
     127: invokevirtual #40                 // Method org/apache/http/pool/RouteSpecificPool.shutdown:()V
     130: goto          107
     133: aload_0
     134: getfield      #20                 // Field routeToPool:Ljava/util/Map;
     137: invokeinterface #41,  1           // InterfaceMethod java/util/Map.clear:()V
     142: aload_0
     143: getfield      #23                 // Field leased:Ljava/util/Set;
     146: invokeinterface #42,  1           // InterfaceMethod java/util/Set.clear:()V
     151: aload_0
     152: getfield      #26                 // Field available:Ljava/util/LinkedList;
     155: invokevirtual #43                 // Method java/util/LinkedList.clear:()V
     158: aload_0
     159: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     162: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     167: goto          182
     170: astore_3
     171: aload_0
     172: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     175: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     180: aload_3
     181: athrow
     182: return
    Exception table:
       from    to  target type
          22   158   170   any
         170   171   170   any

  private org.apache.http.pool.RouteSpecificPool<T, C, E> getPool(T);
    Code:
       0: aload_0
       1: getfield      #20                 // Field routeToPool:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #39                 // class org/apache/http/pool/RouteSpecificPool
      13: astore_2
      14: aload_2
      15: ifnonnull     41
      18: new           #46                 // class org/apache/http/pool/AbstractConnPool$1
      21: dup
      22: aload_0
      23: aload_1
      24: aload_1
      25: invokespecial #47                 // Method org/apache/http/pool/AbstractConnPool$1."<init>":(Lorg/apache/http/pool/AbstractConnPool;Ljava/lang/Object;Ljava/lang/Object;)V
      28: astore_2
      29: aload_0
      30: getfield      #20                 // Field routeToPool:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_2
      42: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object, org.apache.http.concurrent.FutureCallback<E>);
    Code:
       0: aload_1
       1: ldc           #49                 // String Route
       3: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #29                 // Field isShutDown:Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #50                 // String Connection pool shut down
      21: invokestatic  #51                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      24: new           #52                 // class org/apache/http/pool/AbstractConnPool$2
      27: dup
      28: aload_0
      29: aload_3
      30: aload_1
      31: aload_2
      32: invokespecial #53                 // Method org/apache/http/pool/AbstractConnPool$2."<init>":(Lorg/apache/http/pool/AbstractConnPool;Lorg/apache/http/concurrent/FutureCallback;Ljava/lang/Object;Ljava/lang/Object;)V
      35: areturn

  public java.util.concurrent.Future<E> lease(T, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #54                 // Method lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/http/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
       7: areturn

  private E getPoolEntryBlocking(T, java.lang.Object, long, java.util.concurrent.TimeUnit, java.util.concurrent.Future<E>) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aconst_null
       1: astore        7
       3: lload_3
       4: lconst_0
       5: lcmp
       6: ifle          28
       9: new           #55                 // class java/util/Date
      12: dup
      13: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
      16: aload         5
      18: lload_3
      19: invokevirtual #57                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      22: ladd
      23: invokespecial #58                 // Method java/util/Date."<init>":(J)V
      26: astore        7
      28: aload_0
      29: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      32: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      37: aload_0
      38: aload_1
      39: invokespecial #59                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      42: astore        8
      44: aload_0
      45: getfield      #29                 // Field isShutDown:Z
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ldc           #50                 // String Connection pool shut down
      58: invokestatic  #51                 // Method org/apache/http/util/Asserts.check:(ZLjava/lang/String;)V
      61: aload         8
      63: aload_2
      64: invokevirtual #60                 // Method org/apache/http/pool/RouteSpecificPool.getFree:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
      67: astore        9
      69: aload         9
      71: ifnonnull     77
      74: goto          122
      77: aload         9
      79: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
      82: invokevirtual #61                 // Method org/apache/http/pool/PoolEntry.isExpired:(J)Z
      85: ifeq          93
      88: aload         9
      90: invokevirtual #35                 // Method org/apache/http/pool/PoolEntry.close:()V
      93: aload         9
      95: invokevirtual #62                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
      98: ifeq          122
     101: aload_0
     102: getfield      #26                 // Field available:Ljava/util/LinkedList;
     105: aload         9
     107: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     110: pop
     111: aload         8
     113: aload         9
     115: iconst_0
     116: invokevirtual #64                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
     119: goto          61
     122: aload         9
     124: ifnull        171
     127: aload_0
     128: getfield      #26                 // Field available:Ljava/util/LinkedList;
     131: aload         9
     133: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     136: pop
     137: aload_0
     138: getfield      #23                 // Field leased:Ljava/util/Set;
     141: aload         9
     143: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     148: pop
     149: aload_0
     150: aload         9
     152: invokevirtual #66                 // Method onReuse:(Lorg/apache/http/pool/PoolEntry;)V
     155: aload         9
     157: astore        10
     159: aload_0
     160: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     163: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     168: aload         10
     170: areturn
     171: aload_0
     172: aload_1
     173: invokespecial #67                 // Method getMax:(Ljava/lang/Object;)I
     176: istore        10
     178: iconst_0
     179: aload         8
     181: invokevirtual #68                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     184: iconst_1
     185: iadd
     186: iload         10
     188: isub
     189: invokestatic  #69                 // Method java/lang/Math.max:(II)I
     192: istore        11
     194: iload         11
     196: ifle          253
     199: iconst_0
     200: istore        12
     202: iload         12
     204: iload         11
     206: if_icmpge     253
     209: aload         8
     211: invokevirtual #70                 // Method org/apache/http/pool/RouteSpecificPool.getLastUsed:()Lorg/apache/http/pool/PoolEntry;
     214: astore        13
     216: aload         13
     218: ifnonnull     224
     221: goto          253
     224: aload         13
     226: invokevirtual #35                 // Method org/apache/http/pool/PoolEntry.close:()V
     229: aload_0
     230: getfield      #26                 // Field available:Ljava/util/LinkedList;
     233: aload         13
     235: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     238: pop
     239: aload         8
     241: aload         13
     243: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     246: pop
     247: iinc          12, 1
     250: goto          202
     253: aload         8
     255: invokevirtual #68                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
     258: iload         10
     260: if_icmpge     405
     263: aload_0
     264: getfield      #23                 // Field leased:Ljava/util/Set;
     267: invokeinterface #72,  1           // InterfaceMethod java/util/Set.size:()I
     272: istore        12
     274: aload_0
     275: getfield      #14                 // Field maxTotal:I
     278: iload         12
     280: isub
     281: iconst_0
     282: invokestatic  #69                 // Method java/lang/Math.max:(II)I
     285: istore        13
     287: iload         13
     289: ifle          405
     292: aload_0
     293: getfield      #26                 // Field available:Ljava/util/LinkedList;
     296: invokevirtual #73                 // Method java/util/LinkedList.size:()I
     299: istore        14
     301: iload         14
     303: iload         13
     305: iconst_1
     306: isub
     307: if_icmple     356
     310: aload_0
     311: getfield      #26                 // Field available:Ljava/util/LinkedList;
     314: invokevirtual #74                 // Method java/util/LinkedList.isEmpty:()Z
     317: ifne          356
     320: aload_0
     321: getfield      #26                 // Field available:Ljava/util/LinkedList;
     324: invokevirtual #75                 // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
     327: checkcast     #34                 // class org/apache/http/pool/PoolEntry
     330: astore        15
     332: aload         15
     334: invokevirtual #35                 // Method org/apache/http/pool/PoolEntry.close:()V
     337: aload_0
     338: aload         15
     340: invokevirtual #76                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     343: invokespecial #59                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
     346: astore        16
     348: aload         16
     350: aload         15
     352: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
     355: pop
     356: aload_0
     357: getfield      #9                  // Field connFactory:Lorg/apache/http/pool/ConnFactory;
     360: aload_1
     361: invokeinterface #77,  2           // InterfaceMethod org/apache/http/pool/ConnFactory.create:(Ljava/lang/Object;)Ljava/lang/Object;
     366: astore        15
     368: aload         8
     370: aload         15
     372: invokevirtual #78                 // Method org/apache/http/pool/RouteSpecificPool.add:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
     375: astore        9
     377: aload_0
     378: getfield      #23                 // Field leased:Ljava/util/Set;
     381: aload         9
     383: invokeinterface #65,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     388: pop
     389: aload         9
     391: astore        16
     393: aload_0
     394: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     397: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     402: aload         16
     404: areturn
     405: iconst_0
     406: istore        12
     408: aload         6
     410: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
     415: ifeq          428
     418: new           #80                 // class java/lang/InterruptedException
     421: dup
     422: ldc           #81                 // String Operation interrupted
     424: invokespecial #82                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
     427: athrow
     428: aload         8
     430: aload         6
     432: invokevirtual #83                 // Method org/apache/http/pool/RouteSpecificPool.queue:(Ljava/util/concurrent/Future;)V
     435: aload_0
     436: getfield      #27                 // Field pending:Ljava/util/LinkedList;
     439: aload         6
     441: invokevirtual #84                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     444: pop
     445: aload         7
     447: ifnull        466
     450: aload_0
     451: getfield      #3                  // Field condition:Ljava/util/concurrent/locks/Condition;
     454: aload         7
     456: invokeinterface #85,  2           // InterfaceMethod java/util/concurrent/locks/Condition.awaitUntil:(Ljava/util/Date;)Z
     461: istore        12
     463: goto          478
     466: aload_0
     467: getfield      #3                  // Field condition:Ljava/util/concurrent/locks/Condition;
     470: invokeinterface #86,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
     475: iconst_1
     476: istore        12
     478: aload         6
     480: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
     485: ifeq          498
     488: new           #80                 // class java/lang/InterruptedException
     491: dup
     492: ldc           #81                 // String Operation interrupted
     494: invokespecial #82                 // Method java/lang/InterruptedException."<init>":(Ljava/lang/String;)V
     497: athrow
     498: aload         8
     500: aload         6
     502: invokevirtual #87                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Ljava/util/concurrent/Future;)V
     505: aload_0
     506: getfield      #27                 // Field pending:Ljava/util/LinkedList;
     509: aload         6
     511: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     514: pop
     515: goto          540
     518: astore        17
     520: aload         8
     522: aload         6
     524: invokevirtual #87                 // Method org/apache/http/pool/RouteSpecificPool.unqueue:(Ljava/util/concurrent/Future;)V
     527: aload_0
     528: getfield      #27                 // Field pending:Ljava/util/LinkedList;
     531: aload         6
     533: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     536: pop
     537: aload         17
     539: athrow
     540: iload         12
     542: ifne          565
     545: aload         7
     547: ifnull        565
     550: aload         7
     552: invokevirtual #88                 // Method java/util/Date.getTime:()J
     555: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
     558: lcmp
     559: ifgt          565
     562: goto          568
     565: goto          44
     568: new           #89                 // class java/util/concurrent/TimeoutException
     571: dup
     572: ldc           #90                 // String Timeout waiting for connection
     574: invokespecial #91                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
     577: athrow
     578: astore        18
     580: aload_0
     581: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     584: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     589: aload         18
     591: athrow
    Exception table:
       from    to  target type
         408   498   518   any
         518   520   518   any
          37   159   578   any
         171   393   578   any
         405   580   578   any

  public void release(E, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #23                 // Field leased:Ljava/util/Set;
      13: aload_1
      14: invokeinterface #92,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      19: ifeq          118
      22: aload_0
      23: aload_1
      24: invokevirtual #76                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      27: invokespecial #59                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      30: astore_3
      31: aload_3
      32: aload_1
      33: iload_2
      34: invokevirtual #64                 // Method org/apache/http/pool/RouteSpecificPool.free:(Lorg/apache/http/pool/PoolEntry;Z)V
      37: iload_2
      38: ifeq          59
      41: aload_0
      42: getfield      #29                 // Field isShutDown:Z
      45: ifne          59
      48: aload_0
      49: getfield      #26                 // Field available:Ljava/util/LinkedList;
      52: aload_1
      53: invokevirtual #93                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      56: goto          63
      59: aload_1
      60: invokevirtual #35                 // Method org/apache/http/pool/PoolEntry.close:()V
      63: aload_0
      64: aload_1
      65: invokevirtual #94                 // Method onRelease:(Lorg/apache/http/pool/PoolEntry;)V
      68: aload_3
      69: invokevirtual #95                 // Method org/apache/http/pool/RouteSpecificPool.nextPending:()Ljava/util/concurrent/Future;
      72: astore        4
      74: aload         4
      76: ifnull        92
      79: aload_0
      80: getfield      #27                 // Field pending:Ljava/util/LinkedList;
      83: aload         4
      85: invokevirtual #63                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      88: pop
      89: goto          104
      92: aload_0
      93: getfield      #27                 // Field pending:Ljava/util/LinkedList;
      96: invokevirtual #96                 // Method java/util/LinkedList.poll:()Ljava/lang/Object;
      99: checkcast     #97                 // class java/util/concurrent/Future
     102: astore        4
     104: aload         4
     106: ifnull        118
     109: aload_0
     110: getfield      #3                  // Field condition:Ljava/util/concurrent/locks/Condition;
     113: invokeinterface #98,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
     118: aload_0
     119: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     122: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     127: goto          144
     130: astore        5
     132: aload_0
     133: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
     136: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     141: aload         5
     143: athrow
     144: return
    Exception table:
       from    to  target type
           9   118   130   any
         130   132   130   any

  private int getMax(T);
    Code:
       0: aload_0
       1: getfield      #28                 // Field maxPerRoute:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #99                 // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #100                // Method java/lang/Integer.intValue:()I
      22: ireturn
      23: aload_0
      24: getfield      #12                 // Field defaultMaxPerRoute:I
      27: ireturn

  public void setMaxTotal(int);
    Code:
       0: iload_1
       1: ldc           #101                // String Max value
       3: invokestatic  #11                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #14                 // Field maxTotal:I
      21: aload_0
      22: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #14                 // Field maxTotal:I
      13: istore_1
      14: aload_0
      15: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setDefaultMaxPerRoute(int);
    Code:
       0: iload_1
       1: ldc           #10                 // String Max per route value
       3: invokestatic  #11                 // Method org/apache/http/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #12                 // Field defaultMaxPerRoute:I
      21: aload_0
      22: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #12                 // Field defaultMaxPerRoute:I
      13: istore_1
      14: aload_0
      15: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setMaxPerRoute(T, int);
    Code:
       0: aload_1
       1: ldc           #49                 // String Route
       3: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: iload_2
      17: iconst_m1
      18: if_icmple     39
      21: aload_0
      22: getfield      #28                 // Field maxPerRoute:Ljava/util/Map;
      25: aload_1
      26: iload_2
      27: invokestatic  #102                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokeinterface #48,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: goto          50
      39: aload_0
      40: getfield      #28                 // Field maxPerRoute:Ljava/util/Map;
      43: aload_1
      44: invokeinterface #103,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      54: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      59: goto          74
      62: astore_3
      63: aload_0
      64: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      67: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      72: aload_3
      73: athrow
      74: return
    Exception table:
       from    to  target type
          16    50    62   any
          62    63    62   any

  public int getMaxPerRoute(T);
    Code:
       0: aload_1
       1: ldc           #49                 // String Route
       3: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #67                 // Method getMax:(Ljava/lang/Object;)I
      21: istore_2
      22: aload_0
      23: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      26: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      31: iload_2
      32: ireturn
      33: astore_3
      34: aload_0
      35: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_3
      44: athrow
    Exception table:
       from    to  target type
          16    22    33   any
          33    34    33   any

  public org.apache.http.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #104                // class org/apache/http/pool/PoolStats
      12: dup
      13: aload_0
      14: getfield      #23                 // Field leased:Ljava/util/Set;
      17: invokeinterface #72,  1           // InterfaceMethod java/util/Set.size:()I
      22: aload_0
      23: getfield      #27                 // Field pending:Ljava/util/LinkedList;
      26: invokevirtual #73                 // Method java/util/LinkedList.size:()I
      29: aload_0
      30: getfield      #26                 // Field available:Ljava/util/LinkedList;
      33: invokevirtual #73                 // Method java/util/LinkedList.size:()I
      36: aload_0
      37: getfield      #14                 // Field maxTotal:I
      40: invokespecial #105                // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      43: astore_1
      44: aload_0
      45: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      48: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_1
      54: areturn
      55: astore_2
      56: aload_0
      57: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_2
      66: athrow
    Exception table:
       from    to  target type
           9    44    55   any
          55    56    55   any

  public org.apache.http.pool.PoolStats getStats(T);
    Code:
       0: aload_1
       1: ldc           #49                 // String Route
       3: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #59                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      21: astore_2
      22: new           #104                // class org/apache/http/pool/PoolStats
      25: dup
      26: aload_2
      27: invokevirtual #106                // Method org/apache/http/pool/RouteSpecificPool.getLeasedCount:()I
      30: aload_2
      31: invokevirtual #107                // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      34: aload_2
      35: invokevirtual #108                // Method org/apache/http/pool/RouteSpecificPool.getAvailableCount:()I
      38: aload_0
      39: aload_1
      40: invokespecial #67                 // Method getMax:(Ljava/lang/Object;)I
      43: invokespecial #105                // Method org/apache/http/pool/PoolStats."<init>":(IIII)V
      46: astore_3
      47: aload_0
      48: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      51: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      56: aload_3
      57: areturn
      58: astore        4
      60: aload_0
      61: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
    Exception table:
       from    to  target type
          16    47    58   any
          58    60    58   any

  public java.util.Set<T> getRoutes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #21                 // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #20                 // Field routeToPool:Ljava/util/Map;
      17: invokeinterface #109,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #110                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: astore_1
      26: aload_0
      27: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_1
      36: areturn
      37: astore_2
      38: aload_0
      39: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: aload_2
      48: athrow
    Exception table:
       from    to  target type
           9    26    37   any
          37    38    37   any

  protected void enumAvailable(org.apache.http.pool.PoolEntryCallback<T, C>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #26                 // Field available:Ljava/util/LinkedList;
      13: invokevirtual #111                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          76
      26: aload_2
      27: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #34                 // class org/apache/http/pool/PoolEntry
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokeinterface #112,  2          // InterfaceMethod org/apache/http/pool/PoolEntryCallback.process:(Lorg/apache/http/pool/PoolEntry;)V
      43: aload_3
      44: invokevirtual #62                 // Method org/apache/http/pool/PoolEntry.isClosed:()Z
      47: ifeq          73
      50: aload_0
      51: aload_3
      52: invokevirtual #76                 // Method org/apache/http/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      55: invokespecial #59                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/http/pool/RouteSpecificPool;
      58: astore        4
      60: aload         4
      62: aload_3
      63: invokevirtual #71                 // Method org/apache/http/pool/RouteSpecificPool.remove:(Lorg/apache/http/pool/PoolEntry;)Z
      66: pop
      67: aload_2
      68: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.remove:()V
      73: goto          17
      76: aload_0
      77: invokespecial #114                // Method purgePoolMap:()V
      80: aload_0
      81: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      84: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      89: goto          106
      92: astore        5
      94: aload_0
      95: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      98: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     103: aload         5
     105: athrow
     106: return
    Exception table:
       from    to  target type
           9    80    92   any
          92    94    92   any

  protected void enumLeased(org.apache.http.pool.PoolEntryCallback<T, C>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #23                 // Field leased:Ljava/util/Set;
      13: invokeinterface #115,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          48
      28: aload_2
      29: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #34                 // class org/apache/http/pool/PoolEntry
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokeinterface #112,  2          // InterfaceMethod org/apache/http/pool/PoolEntryCallback.process:(Lorg/apache/http/pool/PoolEntry;)V
      45: goto          19
      48: aload_0
      49: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: goto          74
      60: astore        4
      62: aload_0
      63: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
      66: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
      74: return
    Exception table:
       from    to  target type
           9    48    60   any
          60    62    60   any

  private void purgePoolMap();
    Code:
       0: aload_0
       1: getfield      #20                 // Field routeToPool:Ljava/util/Map;
       4: invokeinterface #116,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #115,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          65
      24: aload_1
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #117                // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #118,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #39                 // class org/apache/http/pool/RouteSpecificPool
      43: astore_3
      44: aload_3
      45: invokevirtual #107                // Method org/apache/http/pool/RouteSpecificPool.getPendingCount:()I
      48: aload_3
      49: invokevirtual #68                 // Method org/apache/http/pool/RouteSpecificPool.getAllocatedCount:()I
      52: iadd
      53: ifne          62
      56: aload_1
      57: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.remove:()V
      62: goto          15
      65: return

  public void closeIdle(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #119                // String Time unit
       3: invokestatic  #7                  // Method org/apache/http/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: lload_1
       9: invokevirtual #57                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      12: lstore        4
      14: lload         4
      16: lconst_0
      17: lcmp
      18: ifge          24
      21: lconst_0
      22: lstore        4
      24: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
      27: lload         4
      29: lsub
      30: lstore        6
      32: aload_0
      33: new           #120                // class org/apache/http/pool/AbstractConnPool$3
      36: dup
      37: aload_0
      38: lload         6
      40: invokespecial #121                // Method org/apache/http/pool/AbstractConnPool$3."<init>":(Lorg/apache/http/pool/AbstractConnPool;J)V
      43: invokevirtual #122                // Method enumAvailable:(Lorg/apache/http/pool/PoolEntryCallback;)V
      46: return

  public void closeExpired();
    Code:
       0: invokestatic  #56                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: new           #123                // class org/apache/http/pool/AbstractConnPool$4
       8: dup
       9: aload_0
      10: lload_1
      11: invokespecial #124                // Method org/apache/http/pool/AbstractConnPool$4."<init>":(Lorg/apache/http/pool/AbstractConnPool;J)V
      14: invokevirtual #122                // Method enumAvailable:(Lorg/apache/http/pool/PoolEntryCallback;)V
      17: return

  public int getValidateAfterInactivity();
    Code:
       0: aload_0
       1: getfield      #1                  // Field validateAfterInactivity:I
       4: ireturn

  public void setValidateAfterInactivity(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field validateAfterInactivity:I
       5: return

  public java.lang.String toString();
    Code:
       0: new           #125                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #126                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #127                // String [leased:
      11: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #23                 // Field leased:Ljava/util/Set;
      20: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #130                // String ][available:
      27: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #26                 // Field available:Ljava/util/LinkedList;
      36: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #131                // String ][pending:
      43: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: aload_0
      49: getfield      #27                 // Field pending:Ljava/util/LinkedList;
      52: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: ldc           #132                // String ]
      59: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: invokevirtual #133                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  public void release(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class org/apache/http/pool/PoolEntry
       5: iload_2
       6: invokevirtual #134                // Method release:(Lorg/apache/http/pool/PoolEntry;Z)V
       9: return

  static java.util.concurrent.locks.Lock access$000(org.apache.http.pool.AbstractConnPool);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  static java.util.concurrent.locks.Condition access$100(org.apache.http.pool.AbstractConnPool);
    Code:
       0: aload_0
       1: getfield      #3                  // Field condition:Ljava/util/concurrent/locks/Condition;
       4: areturn

  static org.apache.http.pool.PoolEntry access$200(org.apache.http.pool.AbstractConnPool, java.lang.Object, java.lang.Object, long, java.util.concurrent.TimeUnit, java.util.concurrent.Future) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: aload         6
       8: invokespecial #2                  // Method getPoolEntryBlocking:(Ljava/lang/Object;Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/Future;)Lorg/apache/http/pool/PoolEntry;
      11: areturn

  static int access$300(org.apache.http.pool.AbstractConnPool);
    Code:
       0: aload_0
       1: getfield      #1                  // Field validateAfterInactivity:I
       4: ireturn
}
