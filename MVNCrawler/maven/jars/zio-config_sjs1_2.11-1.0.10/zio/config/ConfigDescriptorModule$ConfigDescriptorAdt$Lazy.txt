Compiled from "ConfigDescriptorModule.scala"
public class zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Lazy<A> implements zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, scala.Product, scala.Serializable {
  private final scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>> get;

  public final zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$ $outer;

  private final scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSource> sources;

  private volatile boolean bitmap$0;

  private scala.collection.immutable.Set sources$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #26                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #31                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.sources:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lscala/collection/immutable/Set;
      16: putfield      #33                 // Field sources:Lscala/collection/immutable/Set;
      19: aload_0
      20: iconst_1
      21: putfield      #26                 // Field bitmap$0:Z
      24: getstatic     #39                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: pop
      28: aload_1
      29: monitorexit
      30: aload_0
      31: getfield      #33                 // Field sources:Lscala/collection/immutable/Set;
      34: areturn
      35: aload_1
      36: monitorexit
      37: athrow
    Exception table:
       from    to  target type
           4    30    35   any

  public scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSource> sources();
    Code:
       0: aload_0
       1: getfield      #26                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #33                 // Field sources:Lscala/collection/immutable/Set;
      11: goto          18
      14: aload_0
      15: invokespecial #45                 // Method sources$lzycompute:()Lscala/collection/immutable/Set;
      18: areturn

  public <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> apply(scala.Function1<A, B>, scala.Function1<B, scala.Option<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.apply:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public <B extends scala.Product> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> to(zio.config.TupleConversion<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.to:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lzio/config/TupleConversion;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> $qmark$qmark(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$qmark$qmark:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/String;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ProductBuilder<zio.config.ConfigDescriptorModule$ConfigDescriptor, A, B> $bar$at$bar(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$bar$at$bar:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ProductBuilder;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> $less$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #80                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Tuple2<A, B>> $less$times$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$times$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.util.Either<A, B>> $less$plus$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$plus$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> default(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.default:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/Object;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> describe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.describe:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/String;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> from(zio.config.ConfigSourceModule$ConfigSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.from:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lzio/config/ConfigSourceModule$ConfigSource;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptor<A> mapKey(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #107                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.mapKey:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Option<A>> optional();
    Code:
       0: aload_0
       1: invokestatic  #113                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.optional:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> orElse(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #116                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.orElse:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.util.Either<A, B>> orElseEither(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.orElseEither:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> unsourced();
    Code:
       0: aload_0
       1: invokestatic  #122                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.unsourced:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> updateSource(scala.Function1<zio.config.ConfigSourceModule$ConfigSource, zio.config.ConfigSourceModule$ConfigSource>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.updateSource:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transform(scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #128                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transform:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFail(scala.Function1<A, scala.util.Either<java.lang.String, B>>, scala.Function1<B, scala.util.Either<java.lang.String, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFail:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFailLeft(scala.Function1<A, scala.util.Either<java.lang.String, B>>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFailLeft:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFailRight(scala.Function1<A, B>, scala.Function1<B, scala.util.Either<java.lang.String, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #138                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFailRight:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Tuple2<A, B>> zip(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.zip:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B, C> zio.config.ConfigDescriptorModule$ConfigDescriptor<C> zipWith(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>, scala.Function2<A, B, scala.util.Either<java.lang.String, C>>, scala.Function1<C, scala.util.Either<java.lang.String, scala.Tuple2<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #146                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.zipWith:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       7: areturn

  public scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>> get();
    Code:
       0: aload_0
       1: getfield      #150                // Field get:Lscala/Function0;
       4: areturn

  public <A> zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Lazy<A> copy(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: new           #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Lazy
       3: dup
       4: aload_0
       5: invokevirtual #156                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Lazy$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       8: aload_1
       9: invokespecial #160                // Method "<init>":(Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;Lscala/Function0;)V
      12: areturn

  public <A> scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method get:()Lscala/Function0;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #167                // String Lazy
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>> productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #173                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #179                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #182                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #185                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #163                // Method get:()Lscala/Function0;
      39: areturn

  public scala.collection.Iterator<scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>> productIterator();
    Code:
       0: getstatic     #195                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #199                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Lazy
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #195                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #206                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #195                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #210                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     94
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Lazy
      11: ifeq          33
      14: aload_2
      15: checkcast     #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Lazy
      18: invokevirtual #156                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Lazy$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      21: aload_0
      22: invokevirtual #156                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Lazy$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      25: if_acmpne     33
      28: iconst_1
      29: istore_3
      30: goto          35
      33: iconst_0
      34: istore_3
      35: iload_3
      36: ifeq          98
      39: aload_1
      40: checkcast     #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Lazy
      43: astore        4
      45: aload_0
      46: invokevirtual #163                // Method get:()Lscala/Function0;
      49: aload         4
      51: invokevirtual #163                // Method get:()Lscala/Function0;
      54: astore        5
      56: dup
      57: ifnonnull     69
      60: pop
      61: aload         5
      63: ifnull        77
      66: goto          90
      69: aload         5
      71: invokevirtual #213                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          90
      77: aload         4
      79: aload_0
      80: invokevirtual #215                // Method canEqual:(Ljava/lang/Object;)Z
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ifeq          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: ireturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$ zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Lazy$$$outer();
    Code:
       0: aload_0
       1: getfield      #219                // Field $outer:Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       4: areturn

  public zio.config.ConfigDescriptorModule zio$config$ConfigDescriptorModule$ConfigDescriptor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Lazy$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       4: invokevirtual #226                // Method zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$.zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$$$outer:()Lzio/config/ConfigDescriptorModule;
       7: areturn

  public java.lang.Object productElement(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #229                // Method productElement:(I)Lscala/Function0;
       5: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Lazy(zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #150                // Field get:Lscala/Function0;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #219                // Field $outer:Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      16: aload_0
      17: invokespecial #233                // Method java/lang/Object."<init>":()V
      20: aload_0
      21: invokestatic  #237                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$init$:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)V
      24: aload_0
      25: invokestatic  #242                // Method scala/Product$class.$init$:(Lscala/Product;)V
      28: return
}
