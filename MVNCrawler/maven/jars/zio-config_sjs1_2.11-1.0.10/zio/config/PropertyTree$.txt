Compiled from "PropertyTree.scala"
public final class zio.config.PropertyTree$ {
  public static final zio.config.PropertyTree$ MODULE$;

  private final zio.config.PropertyTree<scala.runtime.Nothing$, scala.runtime.Nothing$> empty;

  public static {};
    Code:
       0: new           #2                  // class zio/config/PropertyTree$
       3: invokespecial #12                 // Method "<init>":()V
       6: return

  public zio.config.PropertyTree<scala.runtime.Nothing$, java.lang.Object> apply(java.lang.Object);
    Code:
       0: new           #19                 // class zio/config/PropertyTree$Leaf
       3: dup
       4: aload_1
       5: invokespecial #22                 // Method zio/config/PropertyTree$Leaf."<init>":(Ljava/lang/Object;)V
       8: areturn

  public zio.config.PropertyTree<scala.runtime.Nothing$, scala.runtime.Nothing$> empty();
    Code:
       0: aload_0
       1: getfield      #28                 // Field empty:Lzio/config/PropertyTree;
       4: areturn

  public <K, V> zio.config.PropertyTree<K, V> fromMap(scala.collection.immutable.Map<K, V>);
    Code:
       0: new           #32                 // class zio/config/PropertyTree$Record
       3: dup
       4: aload_1
       5: new           #34                 // class zio/config/PropertyTree$$anonfun$fromMap$1
       8: dup
       9: invokespecial #35                 // Method zio/config/PropertyTree$$anonfun$fromMap$1."<init>":()V
      12: getstatic     #40                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      15: invokevirtual #44                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      18: invokeinterface #50,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      23: checkcast     #46                 // class scala/collection/immutable/Map
      26: invokespecial #53                 // Method zio/config/PropertyTree$Record."<init>":(Lscala/collection/immutable/Map;)V
      29: areturn

  public scala.collection.immutable.List<zio.config.PropertyTree<java.lang.String, java.lang.String>> fromStringMap(scala.collection.immutable.Map<java.lang.String, java.lang.String>, scala.Option<java.lang.Object>, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #58                 // class zio/config/PropertyTree$$anonfun$fromStringMap$1
       5: dup
       6: aload_2
       7: aload_3
       8: invokespecial #61                 // Method zio/config/PropertyTree$$anonfun$fromStringMap$1."<init>":(Lscala/Option;Lscala/Option;)V
      11: getstatic     #40                 // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      14: invokevirtual #44                 // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      17: invokeinterface #50,  3           // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      22: checkcast     #46                 // class scala/collection/immutable/Map
      25: invokevirtual #65                 // Method unflatten:(Lscala/collection/immutable/Map;)Lscala/collection/immutable/List;
      28: areturn

  public <K, V> zio.config.PropertyTree<K, V> unflatten(scala.collection.immutable.List<K>, scala.collection.immutable.$colon$colon<V>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #71                 // class zio/config/PropertyTree$Sequence
       5: dup
       6: aload_2
       7: new           #73                 // class zio/config/PropertyTree$$anonfun$unflatten$1
      10: dup
      11: invokespecial #74                 // Method zio/config/PropertyTree$$anonfun$unflatten$1."<init>":()V
      14: getstatic     #79                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      17: invokevirtual #80                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      20: invokevirtual #83                 // Method scala/collection/immutable/$colon$colon.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      23: checkcast     #85                 // class scala/collection/immutable/List
      26: invokespecial #88                 // Method zio/config/PropertyTree$Sequence."<init>":(Lscala/collection/immutable/List;)V
      29: invokevirtual #91                 // Method unflatten:(Lscala/collection/immutable/List;Lzio/config/PropertyTree;)Lzio/config/PropertyTree;
      32: areturn

  public <K, V> zio.config.PropertyTree<K, V> unflatten(scala.collection.immutable.List<K>, zio.config.PropertyTree<K, V>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #82                 // class scala/collection/immutable/$colon$colon
       6: ifeq          90
       9: aload_3
      10: checkcast     #82                 // class scala/collection/immutable/$colon$colon
      13: astore        4
      15: aload         4
      17: invokevirtual #99                 // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      20: astore        5
      22: aload         4
      24: invokevirtual #103                // Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
      27: astore        6
      29: new           #32                 // class zio/config/PropertyTree$Record
      32: dup
      33: getstatic     #108                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: invokevirtual #112                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      39: getstatic     #108                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      42: iconst_1
      43: anewarray     #114                // class scala/Tuple2
      46: dup
      47: iconst_0
      48: getstatic     #119                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      51: getstatic     #108                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      54: aload         5
      56: invokevirtual #123                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      59: aload_0
      60: aload         6
      62: aload_2
      63: invokevirtual #91                 // Method unflatten:(Lscala/collection/immutable/List;Lzio/config/PropertyTree;)Lzio/config/PropertyTree;
      66: invokevirtual #127                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      69: aastore
      70: checkcast     #129                // class "[Ljava/lang/Object;"
      73: invokevirtual #133                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      76: invokevirtual #136                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      79: checkcast     #46                 // class scala/collection/immutable/Map
      82: invokespecial #53                 // Method zio/config/PropertyTree$Record."<init>":(Lscala/collection/immutable/Map;)V
      85: astore        7
      87: goto          103
      90: getstatic     #141                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      93: aload_3
      94: invokevirtual #145                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifeq          106
     100: aload_2
     101: astore        7
     103: aload         7
     105: areturn
     106: new           #147                // class scala/MatchError
     109: dup
     110: aload_3
     111: invokespecial #148                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     114: athrow

  public <K, V> scala.collection.immutable.List<zio.config.PropertyTree<K, V>> unflatten(scala.collection.immutable.Map<scala.collection.immutable.Vector<K>, scala.collection.immutable.$colon$colon<V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #155,  1          // InterfaceMethod scala/collection/immutable/Map.toList:()Lscala/collection/immutable/List;
       7: new           #157                // class zio/config/PropertyTree$$anonfun$unflatten$2
      10: dup
      11: invokespecial #158                // Method zio/config/PropertyTree$$anonfun$unflatten$2."<init>":()V
      14: getstatic     #79                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      17: invokevirtual #80                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      20: invokevirtual #159                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      23: checkcast     #85                 // class scala/collection/immutable/List
      26: invokevirtual #163                // Method mergeAll:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      29: areturn

  public <K, V> scala.collection.immutable.List<zio.config.PropertyTree<K, V>> mergeAll(scala.collection.immutable.List<zio.config.PropertyTree<K, V>>);
    Code:
       0: aload_1
       1: invokevirtual #166                // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
       4: astore_2
       5: getstatic     #141                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       8: aload_2
       9: invokevirtual #145                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          22
      15: getstatic     #141                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      18: astore_3
      19: goto          92
      22: aload_2
      23: instanceof    #82                 // class scala/collection/immutable/$colon$colon
      26: ifeq          94
      29: aload_2
      30: checkcast     #82                 // class scala/collection/immutable/$colon$colon
      33: astore        4
      35: aload         4
      37: invokevirtual #99                 // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      40: checkcast     #152                // class zio/config/PropertyTree
      43: astore        5
      45: aload         4
      47: invokevirtual #103                // Method scala/collection/immutable/$colon$colon.tl$1:()Lscala/collection/immutable/List;
      50: astore        6
      52: aload         6
      54: getstatic     #79                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      57: getstatic     #108                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      60: iconst_1
      61: anewarray     #152                // class zio/config/PropertyTree
      64: dup
      65: iconst_0
      66: aload         5
      68: aastore
      69: checkcast     #129                // class "[Ljava/lang/Object;"
      72: invokevirtual #133                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      75: invokevirtual #169                // Method scala/collection/immutable/List$.apply:(Lscala/collection/Seq;)Lscala/collection/immutable/List;
      78: new           #171                // class zio/config/PropertyTree$$anonfun$mergeAll$1
      81: dup
      82: invokespecial #172                // Method zio/config/PropertyTree$$anonfun$mergeAll$1."<init>":()V
      85: invokevirtual #176                // Method scala/collection/immutable/List.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      88: checkcast     #85                 // class scala/collection/immutable/List
      91: astore_3
      92: aload_3
      93: areturn
      94: new           #147                // class scala/MatchError
      97: dup
      98: aload_2
      99: invokespecial #148                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     102: athrow

  public <K, V, A> scala.Tuple2<scala.collection.immutable.List<A>, scala.collection.immutable.List<zio.config.PropertyTree<K, V>>> partitionWith(scala.collection.immutable.List<zio.config.PropertyTree<K, V>>, scala.PartialFunction<zio.config.PropertyTree<K, V>, A>);
    Code:
       0: aload_1
       1: new           #182                // class zio/config/PropertyTree$$anonfun$partitionWith$1
       4: dup
       5: aload_2
       6: invokespecial #185                // Method zio/config/PropertyTree$$anonfun$partitionWith$1."<init>":(Lscala/PartialFunction;)V
       9: getstatic     #79                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      12: invokevirtual #80                 // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      15: invokevirtual #159                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      18: checkcast     #187                // class scala/collection/LinearSeqOptimized
      21: new           #114                // class scala/Tuple2
      24: dup
      25: getstatic     #79                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      28: invokevirtual #189                // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
      31: getstatic     #79                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      34: invokevirtual #189                // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
      37: invokespecial #192                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      40: new           #194                // class zio/config/PropertyTree$$anonfun$partitionWith$2
      43: dup
      44: invokespecial #195                // Method zio/config/PropertyTree$$anonfun$partitionWith$2."<init>":()V
      47: invokeinterface #196,  3          // InterfaceMethod scala/collection/LinearSeqOptimized.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      52: checkcast     #114                // class scala/Tuple2
      55: areturn

  private zio.config.PropertyTree$();
    Code:
       0: aload_0
       1: invokespecial #200                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #202                // Field MODULE$:Lzio/config/PropertyTree$;
       8: aload_0
       9: getstatic     #207                // Field zio/config/PropertyTree$Empty$.MODULE$:Lzio/config/PropertyTree$Empty$;
      12: putfield      #28                 // Field empty:Lzio/config/PropertyTree;
      15: return
}
