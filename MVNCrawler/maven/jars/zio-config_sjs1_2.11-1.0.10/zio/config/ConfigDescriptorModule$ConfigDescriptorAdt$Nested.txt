Compiled from "ConfigDescriptorModule.scala"
public class zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Nested<A> implements zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, scala.Product, scala.Serializable {
  private final zio.config.ConfigSourceModule$ConfigSource source;

  private final java.lang.Object path;

  private final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> config;

  public final zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$ $outer;

  private final scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSource> sources;

  private volatile boolean bitmap$0;

  private scala.collection.immutable.Set sources$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #30                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #35                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.sources:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lscala/collection/immutable/Set;
      16: putfield      #37                 // Field sources:Lscala/collection/immutable/Set;
      19: aload_0
      20: iconst_1
      21: putfield      #30                 // Field bitmap$0:Z
      24: getstatic     #43                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: pop
      28: aload_1
      29: monitorexit
      30: aload_0
      31: getfield      #37                 // Field sources:Lscala/collection/immutable/Set;
      34: areturn
      35: aload_1
      36: monitorexit
      37: athrow
    Exception table:
       from    to  target type
           4    30    35   any

  public scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSource> sources();
    Code:
       0: aload_0
       1: getfield      #30                 // Field bitmap$0:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #37                 // Field sources:Lscala/collection/immutable/Set;
      11: goto          18
      14: aload_0
      15: invokespecial #49                 // Method sources$lzycompute:()Lscala/collection/immutable/Set;
      18: areturn

  public <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> apply(scala.Function1<A, B>, scala.Function1<B, scala.Option<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #56                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.apply:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public <B extends scala.Product> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> to(zio.config.TupleConversion<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.to:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lzio/config/TupleConversion;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> $qmark$qmark(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #71                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$qmark$qmark:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/String;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ProductBuilder<zio.config.ConfigDescriptorModule$ConfigDescriptor, A, B> $bar$at$bar(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #78                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$bar$at$bar:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ProductBuilder;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> $less$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #85                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Tuple2<A, B>> $less$times$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #88                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$times$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.util.Either<A, B>> $less$plus$greater(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #91                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$less$plus$greater:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> default(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #96                 // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.default:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/Object;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> describe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.describe:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/String;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> from(zio.config.ConfigSourceModule$ConfigSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.from:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lzio/config/ConfigSourceModule$ConfigSource;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptor<A> mapKey(scala.Function1<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #110                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.mapKey:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Option<A>> optional();
    Code:
       0: aload_0
       1: invokestatic  #116                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.optional:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> orElse(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.orElse:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.util.Either<A, B>> orElseEither(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #122                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.orElseEither:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> unsourced();
    Code:
       0: aload_0
       1: invokestatic  #125                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.unsourced:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public final zio.config.ConfigDescriptorModule$ConfigDescriptor<A> updateSource(scala.Function1<zio.config.ConfigSourceModule$ConfigSource, zio.config.ConfigSourceModule$ConfigSource>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #128                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.updateSource:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transform(scala.Function1<A, B>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #131                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transform:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFail(scala.Function1<A, scala.util.Either<java.lang.String, B>>, scala.Function1<B, scala.util.Either<java.lang.String, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #134                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFail:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFailLeft(scala.Function1<A, scala.util.Either<java.lang.String, B>>, scala.Function1<B, A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #137                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFailLeft:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<B> transformOrFailRight(scala.Function1<A, B>, scala.Function1<B, scala.util.Either<java.lang.String, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #141                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.transformOrFailRight:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function1;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       6: areturn

  public final <B> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.Tuple2<A, B>> zip(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.zip:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       5: areturn

  public final <B, C> zio.config.ConfigDescriptorModule$ConfigDescriptor<C> zipWith(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<B>>, scala.Function2<A, B, scala.util.Either<java.lang.String, C>>, scala.Function1<C, scala.util.Either<java.lang.String, scala.Tuple2<A, B>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #149                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.zipWith:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       7: areturn

  public zio.config.ConfigSourceModule$ConfigSource source();
    Code:
       0: aload_0
       1: getfield      #153                // Field source:Lzio/config/ConfigSourceModule$ConfigSource;
       4: areturn

  public java.lang.Object path();
    Code:
       0: aload_0
       1: getfield      #156                // Field path:Ljava/lang/Object;
       4: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptor<A> config();
    Code:
       0: aload_0
       1: getfield      #158                // Field config:Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public <A> zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Nested<A> copy(zio.config.ConfigSourceModule$ConfigSource, java.lang.Object, zio.config.ConfigDescriptorModule$ConfigDescriptor<A>);
    Code:
       0: new           #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Nested
       3: dup
       4: aload_0
       5: invokevirtual #164                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Nested$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #168                // Method "<init>":(Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;Lzio/config/ConfigSourceModule$ConfigSource;Ljava/lang/Object;Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)V
      14: areturn

  public <A> zio.config.ConfigSourceModule$ConfigSource copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #171                // Method source:()Lzio/config/ConfigSourceModule$ConfigSource;
       4: areturn

  public <A> java.lang.Object copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #174                // Method path:()Ljava/lang/Object;
       4: areturn

  public <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<A> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #177                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #181                // String Nested
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 57
                     1: 50
                     2: 43
               default: 28
          }
      28: new           #187                // class java/lang/IndexOutOfBoundsException
      31: dup
      32: iload_1
      33: invokestatic  #193                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: invokevirtual #196                // Method java/lang/Object.toString:()Ljava/lang/String;
      39: invokespecial #199                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokevirtual #177                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      47: goto          61
      50: aload_0
      51: invokevirtual #174                // Method path:()Ljava/lang/Object;
      54: goto          61
      57: aload_0
      58: invokevirtual #171                // Method source:()Lzio/config/ConfigSourceModule$ConfigSource;
      61: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #209                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #213                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Nested
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #209                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #220                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #209                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #224                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     141
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Nested
      11: ifeq          33
      14: aload_2
      15: checkcast     #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Nested
      18: invokevirtual #164                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Nested$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      21: aload_0
      22: invokevirtual #164                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Nested$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      25: if_acmpne     33
      28: iconst_1
      29: istore_3
      30: goto          35
      33: iconst_0
      34: istore_3
      35: iload_3
      36: ifeq          145
      39: aload_1
      40: checkcast     #2                  // class zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$Nested
      43: astore        4
      45: aload_0
      46: invokevirtual #171                // Method source:()Lzio/config/ConfigSourceModule$ConfigSource;
      49: aload         4
      51: invokevirtual #171                // Method source:()Lzio/config/ConfigSourceModule$ConfigSource;
      54: astore        5
      56: dup
      57: ifnonnull     69
      60: pop
      61: aload         5
      63: ifnull        77
      66: goto          137
      69: aload         5
      71: invokevirtual #227                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          137
      77: aload_0
      78: invokevirtual #174                // Method path:()Ljava/lang/Object;
      81: aload         4
      83: invokevirtual #174                // Method path:()Ljava/lang/Object;
      86: invokestatic  #230                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      89: ifeq          137
      92: aload_0
      93: invokevirtual #177                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      96: aload         4
      98: invokevirtual #177                // Method config:()Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
     101: astore        6
     103: dup
     104: ifnonnull     116
     107: pop
     108: aload         6
     110: ifnull        124
     113: goto          137
     116: aload         6
     118: invokevirtual #227                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     121: ifeq          137
     124: aload         4
     126: aload_0
     127: invokevirtual #232                // Method canEqual:(Ljava/lang/Object;)Z
     130: ifeq          137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: ifeq          145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: ireturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$ zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Nested$$$outer();
    Code:
       0: aload_0
       1: getfield      #236                // Field $outer:Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       4: areturn

  public zio.config.ConfigDescriptorModule zio$config$ConfigDescriptorModule$ConfigDescriptor$$$outer();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$Nested$$$outer:()Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
       4: invokevirtual #243                // Method zio/config/ConfigDescriptorModule$ConfigDescriptorAdt$.zio$config$ConfigDescriptorModule$ConfigDescriptorAdt$$$outer:()Lzio/config/ConfigDescriptorModule;
       7: areturn

  public zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$Nested(zio.config.ConfigDescriptorModule$ConfigDescriptorAdt$, zio.config.ConfigSourceModule$ConfigSource, java.lang.Object, zio.config.ConfigDescriptorModule$ConfigDescriptor<A>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #153                // Field source:Lzio/config/ConfigSourceModule$ConfigSource;
       5: aload_0
       6: aload_3
       7: putfield      #156                // Field path:Ljava/lang/Object;
      10: aload_0
      11: aload         4
      13: putfield      #158                // Field config:Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      16: aload_1
      17: ifnonnull     22
      20: aconst_null
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #236                // Field $outer:Lzio/config/ConfigDescriptorModule$ConfigDescriptorAdt$;
      27: aload_0
      28: invokespecial #246                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #250                // Method zio/config/ConfigDescriptorModule$ConfigDescriptor$class.$init$:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)V
      35: aload_0
      36: invokestatic  #255                // Method scala/Product$class.$init$:(Lscala/Product;)V
      39: return
}
