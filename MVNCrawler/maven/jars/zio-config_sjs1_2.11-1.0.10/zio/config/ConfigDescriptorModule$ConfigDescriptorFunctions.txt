Compiled from "ConfigDescriptorModule.scala"
public interface zio.config.ConfigDescriptorModule$ConfigDescriptorFunctions {
  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.List<A>> collectAll(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>, scala.collection.Seq<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <D> zio.config.ConfigDescriptorModule$ConfigDescriptorFunctions$PartiallyAppliedEnumeration<D> enumeration();

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<A> head(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<A> head(java.lang.Object, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <K, V, A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.List<A>> list(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.List<A>> list(java.lang.Object, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.List<A>> listOrSingleton(java.lang.Object, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.Map<java.lang.Object, A>> map(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.Map<java.lang.Object, A>> map(java.lang.Object, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<A> nested(java.lang.Object, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <K, V, A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.Set<A>> set(scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> zio.config.ConfigDescriptorModule$ConfigDescriptor<scala.collection.immutable.Set<A>> set(java.lang.Object, scala.Function0<zio.config.ConfigDescriptorModule$ConfigDescriptor<A>>);

  public abstract <A> scala.util.Either<java.lang.String, scala.collection.immutable.Set<A>> distinctListToSet(scala.collection.immutable.List<A>);

  public abstract zio.config.ConfigDescriptorModule zio$config$ConfigDescriptorModule$ConfigDescriptorFunctions$$$outer();
}
