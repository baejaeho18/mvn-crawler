Compiled from "package.scala"
public final class zio.config.package {
  public static scala.Function1<java.lang.String, java.lang.String> addPostFixToKey(java.lang.String);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #18                 // Method zio/config/package$.addPostFixToKey:(Ljava/lang/String;)Lscala/Function1;
       7: areturn

  public static scala.Function1<java.lang.String, java.lang.String> addPrefixToKey(java.lang.String);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #21                 // Method zio/config/package$.addPrefixToKey:(Ljava/lang/String;)Lscala/Function1;
       7: areturn

  public static java.lang.String camelToDelimiter(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: aload_1
       5: invokevirtual #25                 // Method zio/config/package$.camelToDelimiter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public static void zio$config$KeyConversionFunctions$_setter_$toSnakeCase_$eq(scala.Function1);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #29                 // Method zio/config/package$.zio$config$KeyConversionFunctions$_setter_$toSnakeCase_$eq:(Lscala/Function1;)V
       7: return

  public static void zio$config$KeyConversionFunctions$_setter_$toKebabCase_$eq(scala.Function1);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #32                 // Method zio/config/package$.zio$config$KeyConversionFunctions$_setter_$toKebabCase_$eq:(Lscala/Function1;)V
       7: return

  public static scala.Function1<java.lang.String, java.lang.String> toSnakeCase();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #36                 // Method zio/config/package$.toSnakeCase:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.String, java.lang.String> toKebabCase();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #39                 // Method zio/config/package$.toKebabCase:()Lscala/Function1;
       6: areturn

  public static zio.config.ConfigSourceModule$ConfigSource getConfigSource(scala.collection.immutable.Set<zio.config.ConfigSourceModule$ConfigSourceName>, scala.Function1<scala.collection.immutable.List<java.lang.Object>, zio.config.PropertyTree<java.lang.Object, java.lang.Object>>, zio.config.ConfigSourceModule$LeafForSequence);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #43                 // Method zio/config/package$.getConfigSource:(Lscala/collection/immutable/Set;Lscala/Function1;Lzio/config/ConfigSourceModule$LeafForSequence;)Lzio/config/ConfigSourceModule$ConfigSource;
       9: areturn

  public static zio.config.ConfigSourceModule$ConfigSourceFunctions$ ConfigSourceFunctions();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #47                 // Method zio/config/package$.ConfigSourceFunctions:()Lzio/config/ConfigSourceModule$ConfigSourceFunctions$;
       6: areturn

  public static zio.config.ConfigSourceModule$LeafForSequence$ LeafForSequence();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #51                 // Method zio/config/package$.LeafForSequence:()Lzio/config/ConfigSourceModule$LeafForSequence$;
       6: areturn

  public static zio.config.ConfigSourceModule$ConfigSourceName$ ConfigSourceName();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #55                 // Method zio/config/package$.ConfigSourceName:()Lzio/config/ConfigSourceModule$ConfigSourceName$;
       6: areturn

  public static <A> scala.util.Either<java.lang.String, zio.config.PropertyTree<java.lang.Object, java.lang.Object>> write(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, A);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: aload_1
       5: invokevirtual #59                 // Method zio/config/package$.write:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/Object;)Lscala/util/Either;
       8: areturn

  public static <A> scala.util.Either<java.lang.String, zio.config.ConfigDocsModule$ConfigDocs> generateReport(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>, A);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: aload_1
       5: invokevirtual #62                 // Method zio/config/package$.generateReport:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;Ljava/lang/Object;)Lscala/util/Either;
       8: areturn

  public static <A> zio.config.ConfigDocsModule$ConfigDocs generateDocs(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #66                 // Method zio/config/package$.generateDocs:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lzio/config/ConfigDocsModule$ConfigDocs;
       7: areturn

  public static zio.config.ConfigDocsModule$Table$ Table();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #70                 // Method zio/config/package$.Table:()Lzio/config/ConfigDocsModule$Table$;
       6: areturn

  public static int sizeOfZipAndOrErrors(zio.config.ReadError<java.lang.Object>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #74                 // Method zio/config/package$.sizeOfZipAndOrErrors:(Lzio/config/ReadError;)I
       7: ireturn

  public static <A> int requiredZipAndOrFields(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #78                 // Method zio/config/package$.requiredZipAndOrFields:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)I
       7: ireturn

  public static <A> scala.util.Either<zio.config.ReadError<java.lang.Object>, A> read(zio.config.ConfigDescriptorModule$ConfigDescriptor<A>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #82                 // Method zio/config/package$.read:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lscala/util/Either;
       7: areturn

  public static <A> zio.ZIO<zio.Has<A>, scala.runtime.Nothing$, A> getConfig(izumi.reflect.Tag<A>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #86                 // Method zio/config/package$.getConfig:(Lizumi/reflect/Tag;)Lzio/ZIO;
       7: areturn

  public static zio.config.ConfigSourceStringModule$ConfigSource$ ConfigSource();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #90                 // Method zio/config/package$.ConfigSource:()Lzio/config/ConfigSourceStringModule$ConfigSource$;
       6: areturn

  public static zio.config.ConfigStringModule$ZConfig$ ZConfig();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #94                 // Method zio/config/package$.ZConfig:()Lzio/config/ConfigStringModule$ZConfig$;
       6: areturn

  public static zio.config.ConfigStringModule$ConfigDescriptor$ ConfigDescriptor();
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: invokevirtual #98                 // Method zio/config/package$.ConfigDescriptor:()Lzio/config/ConfigStringModule$ConfigDescriptor$;
       6: areturn

  public static <P, A> zio.config.TupleConversion<P, A> autoTupleConversion1(zio.config.TupleConversion<P, scala.Tuple1<A>>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #102                // Method zio/config/package$.autoTupleConversion1:(Lzio/config/TupleConversion;)Lzio/config/TupleConversion;
       7: areturn

  public static <A> zio.config.package$MapOps<A> MapOps(scala.Function0<A>);
    Code:
       0: getstatic     #16                 // Field zio/config/package$.MODULE$:Lzio/config/package$;
       3: aload_0
       4: invokevirtual #106                // Method zio/config/package$.MapOps:(Lscala/Function0;)Lzio/config/package$MapOps;
       7: areturn
}
