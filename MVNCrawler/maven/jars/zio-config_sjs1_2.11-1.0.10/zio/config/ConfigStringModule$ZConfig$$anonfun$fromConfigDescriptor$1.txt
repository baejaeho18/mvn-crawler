Compiled from "ConfigStringModule.scala"
public final class zio.config.ConfigStringModule$ZConfig$$anonfun$fromConfigDescriptor$1 extends scala.runtime.AbstractFunction0<scala.util.Either<zio.config.ReadError<java.lang.String>, A>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final zio.config.ConfigStringModule$ZConfig$ $outer;

  private final zio.config.ConfigDescriptorModule$ConfigDescriptor configDescriptor$1;

  public final scala.util.Either<zio.config.ReadError<java.lang.String>, A> apply();
    Code:
       0: aload_0
       1: getfield      #25                 // Field $outer:Lzio/config/ConfigStringModule$ZConfig$;
       4: invokevirtual #29                 // Method zio/config/ConfigStringModule$ZConfig$.zio$config$ConfigStringModule$ZConfig$$$outer:()Lzio/config/ConfigStringModule;
       7: aload_0
       8: getfield      #31                 // Field configDescriptor$1:Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      11: invokeinterface #37,  2           // InterfaceMethod zio/config/ConfigStringModule.read:(Lzio/config/ConfigDescriptorModule$ConfigDescriptor;)Lscala/util/Either;
      16: areturn

  public final java.lang.Object apply();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method apply:()Lscala/util/Either;
       4: areturn

  public zio.config.ConfigStringModule$ZConfig$$anonfun$fromConfigDescriptor$1(zio.config.ConfigStringModule$ZConfig$, zio.config.ConfigDescriptorModule$ConfigDescriptor);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #25                 // Field $outer:Lzio/config/ConfigStringModule$ZConfig$;
      11: aload_0
      12: aload_2
      13: putfield      #31                 // Field configDescriptor$1:Lzio/config/ConfigDescriptorModule$ConfigDescriptor;
      16: aload_0
      17: invokespecial #47                 // Method scala/runtime/AbstractFunction0."<init>":()V
      20: return
}
