Compiled from "AsyncSQLStorage.scala"
public abstract class net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage$class {
  public static scala.concurrent.ExecutionContextExecutor executionContext(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: getstatic     #13                 // Field scala/concurrent/ExecutionContext$Implicits$.MODULE$:Lscala/concurrent/ExecutionContext$Implicits$;
       3: invokevirtual #17                 // Method scala/concurrent/ExecutionContext$Implicits$.global:()Lscala/concurrent/ExecutionContextExecutor;
       6: areturn

  public static java.nio.charset.Charset charset(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: getstatic     #27                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
       3: areturn

  public static com.github.mauricio.async.db.pool.PoolConfiguration poolConfiguration(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: getstatic     #34                 // Field com/github/mauricio/async/db/pool/PoolConfiguration$.MODULE$:Lcom/github/mauricio/async/db/pool/PoolConfiguration$;
       3: invokevirtual #38                 // Method com/github/mauricio/async/db/pool/PoolConfiguration$.Default:()Lcom/github/mauricio/async/db/pool/PoolConfiguration;
       6: areturn

  public static com.github.mauricio.async.db.pool.ConnectionPool pool(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: new           #42                 // class com/github/mauricio/async/db/pool/ConnectionPool
       3: dup
       4: aload_0
       5: invokeinterface #48,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.objectFactory:()Lcom/github/mauricio/async/db/pool/ObjectFactory;
      10: aload_0
      11: invokeinterface #50,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.poolConfiguration:()Lcom/github/mauricio/async/db/pool/PoolConfiguration;
      16: aload_0
      17: invokeinterface #52,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.executionContext:()Lscala/concurrent/ExecutionContextExecutor;
      22: invokespecial #56                 // Method com/github/mauricio/async/db/pool/ConnectionPool."<init>":(Lcom/github/mauricio/async/db/pool/ObjectFactory;Lcom/github/mauricio/async/db/pool/PoolConfiguration;Lscala/concurrent/ExecutionContext;)V
      25: areturn

  public static scala.collection.immutable.List query(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.statement.query.Query, scala.collection.immutable.List, scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.dialect:()Lnet/fwbrasil/activate/storage/relational/idiom/SqlIdiom;
       6: new           #64                 // class net/fwbrasil/activate/storage/relational/QueryStorageStatement
       9: dup
      10: aload_1
      11: aload_3
      12: invokespecial #67                 // Method net/fwbrasil/activate/storage/relational/QueryStorageStatement."<init>":(Lnet/fwbrasil/activate/statement/query/Query;Lscala/collection/immutable/List;)V
      15: invokeinterface #73,  2           // InterfaceMethod net/fwbrasil/activate/storage/relational/idiom/SqlIdiom.toSqlDml:(Lnet/fwbrasil/activate/storage/relational/QueryStorageStatement;)Lnet/fwbrasil/activate/storage/relational/NormalQlStatement;
      20: astore        4
      22: aload_0
      23: aload         4
      25: aload_2
      26: invokestatic  #77                 // Method net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/NormalQlStatement;Lscala/collection/immutable/List;)Lscala/concurrent/Future;
      29: astore        5
      31: aload_0
      32: aload         5
      34: invokeinterface #81,  2           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.await:(Lscala/concurrent/Future;)Ljava/lang/Object;
      39: checkcast     #83                 // class scala/collection/immutable/List
      42: areturn

  public static scala.concurrent.Future queryAsync(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.statement.query.Query, scala.collection.immutable.List, scala.collection.immutable.List, net.fwbrasil.radon.transaction.TransactionalExecutionContext);
    Code:
       0: getstatic     #98                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: new           #100                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$queryAsync$1
       6: dup
       7: aload_0
       8: aload_1
       9: aload_3
      10: invokespecial #103                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$queryAsync$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/statement/query/Query;Lscala/collection/immutable/List;)V
      13: aload         4
      15: invokevirtual #107                // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      18: new           #109                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$queryAsync$2
      21: dup
      22: aload_0
      23: aload_2
      24: invokespecial #112                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$queryAsync$2."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/collection/immutable/List;)V
      27: aload         4
      29: invokevirtual #118                // Method net/fwbrasil/radon/transaction/TransactionalExecutionContext.ctx:()Lnet/fwbrasil/radon/transaction/TransactionContext;
      32: invokeinterface #123,  1          // InterfaceMethod net/fwbrasil/radon/transaction/TransactionContext.ectx:()Lscala/concurrent/ExecutionContextExecutor;
      37: invokeinterface #129,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      42: areturn

  public static java.lang.Object await(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, scala.concurrent.Future);
    Code:
       0: getstatic     #137                // Field scala/concurrent/Await$.MODULE$:Lscala/concurrent/Await$;
       3: aload_1
       4: aload_0
       5: invokeinterface #141,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.defaultTimeout:()Lscala/concurrent/duration/Duration;
      10: invokevirtual #144                // Method scala/concurrent/Await$.result:(Lscala/concurrent/Awaitable;Lscala/concurrent/duration/Duration;)Ljava/lang/Object;
      13: areturn

  public static scala.concurrent.Future net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.NormalQlStatement, scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokeinterface #52,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.executionContext:()Lscala/concurrent/ExecutionContextExecutor;
       6: astore_3
       7: aload_0
       8: aload_1
       9: aload_0
      10: invokeinterface #148,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.pool:()Lcom/github/mauricio/async/db/pool/ConnectionPool;
      15: invokeinterface #152,  3          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.sendPreparedStatement:(Lnet/fwbrasil/activate/storage/relational/QlStatement;Lcom/github/mauricio/async/db/Connection;)Lscala/concurrent/Future;
      20: astore        4
      22: aload         4
      24: new           #154                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1
      27: dup
      28: aload_0
      29: aload_2
      30: aload_3
      31: invokespecial #157                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/collection/immutable/List;Lscala/concurrent/ExecutionContextExecutor;)V
      34: aload_3
      35: invokeinterface #160,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      40: areturn

  public static net.fwbrasil.activate.storage.marshalling.StorageValue net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$getValue(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.async.JdbcRelationalAsyncResultSet, int, net.fwbrasil.activate.storage.marshalling.StorageValue, scala.concurrent.ExecutionContext);
    Code:
       0: aload_3
       1: astore        6
       3: aload         6
       5: instanceof    #168                // class net/fwbrasil/activate/storage/marshalling/ListStorageValue
       8: ifeq          33
      11: aload         6
      13: checkcast     #168                // class net/fwbrasil/activate/storage/marshalling/ListStorageValue
      16: astore        7
      18: aload_0
      19: aload_1
      20: iload_2
      21: aload         7
      23: aload         4
      25: invokestatic  #172                // Method loadList:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/async/JdbcRelationalAsyncResultSet;ILnet/fwbrasil/activate/storage/marshalling/ListStorageValue;Lscala/concurrent/ExecutionContext;)Lnet/fwbrasil/activate/storage/marshalling/ListStorageValue;
      28: astore        8
      30: goto          50
      33: aload_0
      34: invokeinterface #62,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.dialect:()Lnet/fwbrasil/activate/storage/relational/idiom/SqlIdiom;
      39: aload_1
      40: iload_2
      41: aload         6
      43: invokeinterface #176,  4          // InterfaceMethod net/fwbrasil/activate/storage/relational/idiom/SqlIdiom.getValue:(Lnet/fwbrasil/activate/storage/relational/idiom/ActivateResultSet;ILnet/fwbrasil/activate/storage/marshalling/StorageValue;)Lnet/fwbrasil/activate/storage/marshalling/StorageValue;
      48: astore        8
      50: aload         8
      52: areturn
      53: astore        5
      55: aload         5
      57: athrow
    Exception table:
       from    to  target type
           0    52    53   Class java/lang/ArrayIndexOutOfBoundsException

  private static net.fwbrasil.activate.storage.marshalling.ListStorageValue loadList(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.async.JdbcRelationalAsyncResultSet, int, net.fwbrasil.activate.storage.marshalling.ListStorageValue, scala.concurrent.ExecutionContext);
    Code:
       0: new           #191                // class scala/collection/immutable/StringOps
       3: dup
       4: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_1
       8: iload_2
       9: invokevirtual #200                // Method net/fwbrasil/activate/storage/relational/async/JdbcRelationalAsyncResultSet.getString:(I)Lscala/Option;
      12: new           #202                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$2
      15: dup
      16: aload_0
      17: invokespecial #205                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$2."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      20: invokevirtual #211                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      23: checkcast     #213                // class java/lang/String
      26: invokevirtual #217                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      29: invokespecial #220                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      32: bipush        124
      34: invokevirtual #224                // Method scala/collection/immutable/StringOps.split:(C)[Ljava/lang/String;
      37: astore        5
      39: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      42: aload         5
      44: checkcast     #226                // class "[Ljava/lang/Object;"
      47: invokevirtual #230                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
      50: invokeinterface #236,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.head:()Ljava/lang/Object;
      55: checkcast     #213                // class java/lang/String
      58: astore        6
      60: aload         6
      62: ldc           #238                // String 1
      64: astore        8
      66: dup
      67: ifnonnull     79
      70: pop
      71: aload         8
      73: ifnull        87
      76: goto          171
      79: aload         8
      81: invokevirtual #242                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      84: ifeq          171
      87: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      90: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      93: aload         5
      95: checkcast     #226                // class "[Ljava/lang/Object;"
      98: invokevirtual #230                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     101: invokeinterface #245,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.tail:()Ljava/lang/Object;
     106: checkcast     #226                // class "[Ljava/lang/Object;"
     109: invokevirtual #230                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     112: invokeinterface #236,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.head:()Ljava/lang/Object;
     117: checkcast     #213                // class java/lang/String
     120: astore        9
     122: aload_0
     123: invokeinterface #148,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.pool:()Lcom/github/mauricio/async/db/pool/ConnectionPool;
     128: aload         9
     130: invokevirtual #249                // Method com/github/mauricio/async/db/pool/ConnectionPool.sendQuery:(Ljava/lang/String;)Lscala/concurrent/Future;
     133: new           #251                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$3
     136: dup
     137: aload_0
     138: aload_3
     139: aload         4
     141: invokespecial #254                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$3."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/marshalling/ListStorageValue;Lscala/concurrent/ExecutionContext;)V
     144: aload         4
     146: invokeinterface #160,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
     151: astore        10
     153: new           #256                // class scala/Some
     156: dup
     157: aload_0
     158: aload         10
     160: invokeinterface #81,  2           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.await:(Lscala/concurrent/Future;)Ljava/lang/Object;
     165: invokespecial #259                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     168: goto          174
     171: getstatic     #264                // Field scala/None$.MODULE$:Lscala/None$;
     174: astore        7
     176: new           #168                // class net/fwbrasil/activate/storage/marshalling/ListStorageValue
     179: dup
     180: aload         7
     182: aload_3
     183: invokevirtual #268                // Method net/fwbrasil/activate/storage/marshalling/ListStorageValue.emptyStorageValue:()Lnet/fwbrasil/activate/storage/marshalling/StorageValue;
     186: invokespecial #271                // Method net/fwbrasil/activate/storage/marshalling/ListStorageValue."<init>":(Lscala/Option;Lnet/fwbrasil/activate/storage/marshalling/StorageValue;)V
     189: areturn

  public static scala.concurrent.Future executeStatementsAsync(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, scala.collection.immutable.Map, scala.collection.immutable.List, scala.concurrent.ExecutionContext);
    Code:
       0: aload_2
       1: new           #284                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$4
       4: dup
       5: aload_0
       6: invokespecial #285                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$4."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
       9: invokevirtual #289                // Method scala/collection/immutable/List.find:(Lscala/Function1;)Lscala/Option;
      12: invokevirtual #293                // Method scala/Option.isDefined:()Z
      15: istore        4
      17: aload_2
      18: new           #295                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$5
      21: dup
      22: aload_0
      23: invokespecial #296                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$5."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      26: getstatic     #301                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      29: invokevirtual #305                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      32: invokevirtual #308                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      35: checkcast     #310                // class scala/collection/generic/GenericTraversableTemplate
      38: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      41: invokevirtual #314                // Method scala/Predef$.conforms:()Lscala/Predef$$less$colon$less;
      44: invokeinterface #318,  2          // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
      49: checkcast     #83                 // class scala/collection/immutable/List
      52: astore        5
      54: aload_0
      55: invokeinterface #148,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.pool:()Lcom/github/mauricio/async/db/pool/ConnectionPool;
      60: new           #320                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$executeStatementsAsync$1
      63: dup
      64: aload_0
      65: iload         4
      67: aload         5
      69: aload_1
      70: aload_3
      71: invokespecial #323                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$executeStatementsAsync$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;ZLscala/collection/immutable/List;Lscala/collection/immutable/Map;Lscala/concurrent/ExecutionContext;)V
      74: aload_3
      75: invokevirtual #326                // Method com/github/mauricio/async/db/pool/ConnectionPool.inTransaction:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      78: areturn

  public static scala.Some executeStatements(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, scala.collection.immutable.Map, scala.collection.immutable.List);
    Code:
       0: aload_0
       1: invokeinterface #52,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.executionContext:()Lscala/concurrent/ExecutionContextExecutor;
       6: astore_3
       7: aload_2
       8: new           #336                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$6
      11: dup
      12: aload_0
      13: invokespecial #337                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$6."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      16: invokevirtual #289                // Method scala/collection/immutable/List.find:(Lscala/Function1;)Lscala/Option;
      19: invokevirtual #293                // Method scala/Option.isDefined:()Z
      22: istore        4
      24: aload_2
      25: new           #339                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$7
      28: dup
      29: aload_0
      30: invokespecial #340                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$7."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      33: getstatic     #301                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      36: invokevirtual #305                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      39: invokevirtual #308                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: checkcast     #310                // class scala/collection/generic/GenericTraversableTemplate
      45: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      48: invokevirtual #314                // Method scala/Predef$.conforms:()Lscala/Predef$$less$colon$less;
      51: invokeinterface #318,  2          // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
      56: checkcast     #83                 // class scala/collection/immutable/List
      59: astore        5
      61: aload_0
      62: new           #342                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$8
      65: dup
      66: aload_0
      67: aload_3
      68: iload         4
      70: aload         5
      72: aload_1
      73: invokespecial #345                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$8."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/concurrent/ExecutionContextExecutor;ZLscala/collection/immutable/List;Lscala/collection/immutable/Map;)V
      76: invokeinterface #349,  2          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.executeWithTransactionAndReturnHandle:(Lscala/Function1;)Lscala/concurrent/Future;
      81: astore        6
      83: new           #256                // class scala/Some
      86: dup
      87: aload_0
      88: aload         6
      90: invokeinterface #81,  2           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.await:(Lscala/concurrent/Future;)Ljava/lang/Object;
      95: invokespecial #259                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      98: areturn

  public static scala.concurrent.Future net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, scala.collection.immutable.Map, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.dialect:()Lnet/fwbrasil/activate/storage/relational/idiom/SqlIdiom;
       6: aload_1
       7: aload_0
       8: invokeinterface #357,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.queryLimit:()I
      13: invokeinterface #361,  3          // InterfaceMethod net/fwbrasil/activate/storage/relational/idiom/SqlIdiom.versionVerifyQueries:(Lscala/collection/immutable/Map;I)Lscala/collection/immutable/Iterable;
      18: getstatic     #98                 // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      21: new           #363                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$1
      24: dup
      25: aload_0
      26: invokespecial #364                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      29: aload_2
      30: invokevirtual #107                // Method scala/concurrent/Future$.apply:(Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      33: new           #366                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2
      36: dup
      37: aload_0
      38: aload_2
      39: invokespecial #369                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/concurrent/ExecutionContext;)V
      42: invokeinterface #375,  3          // InterfaceMethod scala/collection/immutable/Iterable.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      47: checkcast     #125                // class scala/concurrent/Future
      50: areturn

  public static scala.concurrent.Future execute(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.QlStatement, com.github.mauricio.async.db.Connection, boolean);
    Code:
       0: aload_0
       1: invokeinterface #52,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.executionContext:()Lscala/concurrent/ExecutionContextExecutor;
       6: astore        4
       8: aload_0
       9: aload_1
      10: aload         4
      12: invokeinterface #381,  3          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.satisfyRestriction:(Lnet/fwbrasil/activate/storage/relational/QlStatement;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      17: new           #383                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$execute$1
      20: dup
      21: aload_0
      22: aload         4
      24: aload_1
      25: aload_2
      26: iload_3
      27: invokespecial #386                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$execute$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/concurrent/ExecutionContextExecutor;Lnet/fwbrasil/activate/storage/relational/QlStatement;Lcom/github/mauricio/async/db/Connection;Z)V
      30: aload         4
      32: invokeinterface #129,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      37: areturn

  public static void net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyStaleData(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.QlStatement, long[]);
    Code:
       0: aload_1
       1: invokeinterface #398,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/QlStatement.expectedNumbersOfAffectedRowsOption:()Lscala/collection/immutable/List;
       6: astore_3
       7: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      10: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      13: aload_2
      14: invokevirtual #402                // Method scala/Predef$.longArrayOps:([J)Lscala/collection/mutable/ArrayOps;
      17: invokeinterface #405,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.size:()I
      22: aload_3
      23: invokevirtual #406                // Method scala/collection/immutable/List.size:()I
      26: if_icmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokevirtual #410                // Method scala/Predef$.require:(Z)V
      37: getstatic     #415                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      40: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      43: iconst_0
      44: invokevirtual #419                // Method scala/Predef$.intWrapper:(I)I
      47: getstatic     #196                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      50: aload_2
      51: invokevirtual #402                // Method scala/Predef$.longArrayOps:([J)Lscala/collection/mutable/ArrayOps;
      54: invokeinterface #405,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.size:()I
      59: invokevirtual #423                // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
      62: new           #425                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$9
      65: dup
      66: aload_0
      67: aload_2
      68: aload_3
      69: invokespecial #428                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$9."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;[JLscala/collection/immutable/List;)V
      72: getstatic     #433                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
      75: invokevirtual #434                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      78: invokevirtual #437                // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      81: checkcast     #310                // class scala/collection/generic/GenericTraversableTemplate
      84: new           #439                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$10
      87: dup
      88: aload_0
      89: invokespecial #440                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$10."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      92: invokeinterface #318,  2          // InterfaceMethod scala/collection/generic/GenericTraversableTemplate.flatten:(Lscala/Function1;)Lscala/collection/GenTraversable;
      97: checkcast     #442                // class scala/collection/TraversableLike
     100: new           #444                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$11
     103: dup
     104: aload_0
     105: aload_1
     106: invokespecial #447                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$11."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/QlStatement;)V
     109: getstatic     #433                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     112: invokevirtual #434                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     115: invokeinterface #449,  3          // InterfaceMethod scala/collection/TraversableLike.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     120: checkcast     #442                // class scala/collection/TraversableLike
     123: new           #451                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$1
     126: dup
     127: aload_0
     128: aload_1
     129: invokespecial #452                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/QlStatement;)V
     132: getstatic     #433                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     135: invokevirtual #434                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     138: invokeinterface #456,  3          // InterfaceMethod scala/collection/TraversableLike.collect:(Lscala/PartialFunction;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     143: checkcast     #458                // class scala/collection/immutable/IndexedSeq
     146: astore        4
     148: aload         4
     150: invokeinterface #461,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.nonEmpty:()Z
     155: ifeq          172
     158: aload_0
     159: aload         4
     161: invokeinterface #465,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.toSet:()Lscala/collection/immutable/Set;
     166: invokeinterface #469,  2          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.staleDataException:(Lscala/collection/immutable/Set;)Lscala/runtime/Nothing$;
     171: athrow
     172: return

  public static scala.concurrent.Future satisfyRestriction(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.QlStatement, scala.concurrent.ExecutionContext);
    Code:
       0: aload_1
       1: invokeinterface #479,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/QlStatement.restrictionQuery:()Lscala/Option;
       6: new           #481                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$satisfyRestriction$1
       9: dup
      10: aload_0
      11: aload_2
      12: invokespecial #482                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$satisfyRestriction$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/concurrent/ExecutionContext;)V
      15: invokevirtual #484                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      18: new           #486                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$satisfyRestriction$2
      21: dup
      22: aload_0
      23: aload_2
      24: invokespecial #487                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$satisfyRestriction$2."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/concurrent/ExecutionContext;)V
      27: invokevirtual #211                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      30: checkcast     #125                // class scala/concurrent/Future
      33: areturn

  public static scala.concurrent.Future executeWithTransactionAndReturnHandle(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, scala.Function1);
    Code:
       0: aload_0
       1: invokeinterface #52,  1           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.executionContext:()Lscala/concurrent/ExecutionContextExecutor;
       6: astore_2
       7: aload_0
       8: invokeinterface #148,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.pool:()Lcom/github/mauricio/async/db/pool/ConnectionPool;
      13: invokevirtual #492                // Method com/github/mauricio/async/db/pool/ConnectionPool.take:()Lscala/concurrent/Future;
      16: new           #494                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$executeWithTransactionAndReturnHandle$1
      19: dup
      20: aload_0
      21: aload_2
      22: aload_1
      23: invokespecial #497                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$executeWithTransactionAndReturnHandle$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/concurrent/ExecutionContextExecutor;Lscala/Function1;)V
      26: aload_2
      27: invokeinterface #129,  3          // InterfaceMethod scala/concurrent/Future.flatMap:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      32: areturn

  public static com.github.mauricio.async.db.QueryResult net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$commit(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, com.github.mauricio.async.db.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #503                // String COMMIT
       5: invokeinterface #506,  2          // InterfaceMethod com/github/mauricio/async/db/Connection.sendQuery:(Ljava/lang/String;)Lscala/concurrent/Future;
      10: invokeinterface #81,  2           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.await:(Lscala/concurrent/Future;)Ljava/lang/Object;
      15: checkcast     #508                // class com/github/mauricio/async/db/QueryResult
      18: areturn

  public static com.github.mauricio.async.db.QueryResult net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$rollback(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, com.github.mauricio.async.db.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #512                // String ROLLBACK
       5: invokeinterface #506,  2          // InterfaceMethod com/github/mauricio/async/db/Connection.sendQuery:(Ljava/lang/String;)Lscala/concurrent/Future;
      10: invokeinterface #81,  2           // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.await:(Lscala/concurrent/Future;)Ljava/lang/Object;
      15: checkcast     #508                // class com/github/mauricio/async/db/QueryResult
      18: areturn

  public static scala.concurrent.Future directAccess(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: aload_0
       1: invokeinterface #148,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.pool:()Lcom/github/mauricio/async/db/pool/ConnectionPool;
       6: invokevirtual #492                // Method com/github/mauricio/async/db/pool/ConnectionPool.take:()Lscala/concurrent/Future;
       9: areturn

  public static boolean isMemoryStorage(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: iconst_0
       1: ireturn

  public static boolean isSchemaless(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: iconst_0
       1: ireturn

  public static boolean isTransactional(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: iconst_1
       1: ireturn

  public static boolean supportsQueryJoin(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: iconst_1
       1: ireturn

  public static boolean supportsAsync(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: iconst_1
       1: ireturn

  public static scala.concurrent.Future sendPreparedStatement(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage, net.fwbrasil.activate.storage.relational.QlStatement, com.github.mauricio.async.db.Connection);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #525,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/QlStatement.indexedStatement:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #528,  1          // InterfaceMethod net/fwbrasil/activate/storage/relational/QlStatement.valuesList:()Lscala/collection/immutable/List;
      13: invokevirtual #529                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
      16: checkcast     #442                // class scala/collection/TraversableLike
      19: new           #531                // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$sendPreparedStatement$1
      22: dup
      23: aload_0
      24: invokespecial #532                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$sendPreparedStatement$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      27: getstatic     #301                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      30: invokevirtual #305                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      33: invokeinterface #533,  3          // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      38: checkcast     #535                // class scala/collection/Seq
      41: invokeinterface #538,  3          // InterfaceMethod com/github/mauricio/async/db/Connection.sendPreparedStatement:(Ljava/lang/String;Lscala/collection/Seq;)Lscala/concurrent/Future;
      46: areturn

  public static void $init$(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage);
    Code:
       0: aload_0
       1: getstatic     #544                // Field scala/concurrent/duration/Duration$.MODULE$:Lscala/concurrent/duration/Duration$;
       4: invokevirtual #548                // Method scala/concurrent/duration/Duration$.Inf:()Lscala/concurrent/duration/Duration$Infinite;
       7: invokeinterface #552,  2          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$_setter_$defaultTimeout_$eq:(Lscala/concurrent/duration/Duration;)V
      12: aload_0
      13: sipush        1000
      16: invokeinterface #556,  2          // InterfaceMethod net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage.net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$_setter_$queryLimit_$eq:(I)V
      21: return
}
