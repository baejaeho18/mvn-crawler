Compiled from "AsyncSQLStorage.scala"
public final class net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1 extends scala.runtime.AbstractFunction1<com.github.mauricio.async.db.QueryResult, scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage $outer;

  public final scala.collection.immutable.List expectedTypes$1;

  public final scala.concurrent.ExecutionContextExecutor ctx$1;

  public final scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>> apply(com.github.mauricio.async.db.QueryResult);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method com/github/mauricio/async/db/QueryResult.rows:()Lscala/Option;
       4: astore_2
       5: aload_2
       6: instanceof    #33                 // class scala/Some
       9: ifeq          60
      12: aload_2
      13: checkcast     #33                 // class scala/Some
      16: astore_3
      17: aload_3
      18: invokevirtual #37                 // Method scala/Some.x:()Ljava/lang/Object;
      21: checkcast     #39                 // class com/github/mauricio/async/db/ResultSet
      24: astore        4
      26: aload         4
      28: new           #41                 // class net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1$$anonfun$apply$11
      31: dup
      32: aload_0
      33: invokespecial #45                 // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1$$anonfun$apply$11."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1;)V
      36: getstatic     #51                 // Field scala/collection/IndexedSeq$.MODULE$:Lscala/collection/IndexedSeq$;
      39: invokevirtual #55                 // Method scala/collection/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      42: invokeinterface #59,  3           // InterfaceMethod com/github/mauricio/async/db/ResultSet.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      47: checkcast     #61                 // class scala/collection/TraversableOnce
      50: invokeinterface #65,  1           // InterfaceMethod scala/collection/TraversableOnce.toList:()Lscala/collection/immutable/List;
      55: astore        5
      57: aload         5
      59: areturn
      60: getstatic     #70                 // Field scala/None$.MODULE$:Lscala/None$;
      63: aload_2
      64: astore        6
      66: dup
      67: ifnonnull     79
      70: pop
      71: aload         6
      73: ifnull        87
      76: goto          97
      79: aload         6
      81: invokevirtual #76                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      84: ifeq          97
      87: new           #78                 // class java/lang/IllegalStateException
      90: dup
      91: ldc           #80                 // String Empty result.
      93: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: new           #85                 // class scala/MatchError
     100: dup
     101: aload_2
     102: invokespecial #88                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     105: athrow

  public net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$anonfun$$$outer();
    Code:
       0: aload_0
       1: getfield      #100                // Field $outer:Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;
       4: areturn

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class com/github/mauricio/async/db/QueryResult
       5: invokevirtual #103                // Method apply:(Lcom/github/mauricio/async/db/QueryResult;)Lscala/collection/immutable/List;
       8: areturn

  public net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$queryAsync$1(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage<C>);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #108                // class java/lang/NullPointerException
       7: dup
       8: invokespecial #111                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #100                // Field $outer:Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;
      17: aload_0
      18: aload_2
      19: putfield      #113                // Field expectedTypes$1:Lscala/collection/immutable/List;
      22: aload_0
      23: aload_3
      24: putfield      #115                // Field ctx$1:Lscala/concurrent/ExecutionContextExecutor;
      27: aload_0
      28: invokespecial #116                // Method scala/runtime/AbstractFunction1."<init>":()V
      31: return
}
