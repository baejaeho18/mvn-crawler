Compiled from "AsyncSQLStorage.scala"
public final class net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21$$anonfun$apply$22 extends scala.runtime.AbstractFunction1<scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>, scala.Tuple2<java.lang.Object, java.lang.Class<net.fwbrasil.activate.entity.BaseEntity>>> implements scala.Serializable {
  public static final long serialVersionUID;

  private final net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21 $outer;

  public final scala.Tuple2<java.lang.Object, java.lang.Class<net.fwbrasil.activate.entity.BaseEntity>> apply(scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #26                 // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       5: aload_2
       6: invokevirtual #30                 // Method scala/collection/immutable/List$.unapplySeq:(Lscala/collection/Seq;)Lscala/Some;
       9: astore_3
      10: aload_3
      11: invokevirtual #36                 // Method scala/Option.isEmpty:()Z
      14: ifne          113
      17: aload_3
      18: invokevirtual #40                 // Method scala/Option.get:()Ljava/lang/Object;
      21: ifnull        113
      24: aload_3
      25: invokevirtual #40                 // Method scala/Option.get:()Ljava/lang/Object;
      28: checkcast     #42                 // class scala/collection/LinearSeqOptimized
      31: iconst_1
      32: invokeinterface #46,  2           // InterfaceMethod scala/collection/LinearSeqOptimized.lengthCompare:(I)I
      37: iconst_0
      38: if_icmpne     113
      41: aload_3
      42: invokevirtual #40                 // Method scala/Option.get:()Ljava/lang/Object;
      45: checkcast     #42                 // class scala/collection/LinearSeqOptimized
      48: iconst_0
      49: invokeinterface #49,  2           // InterfaceMethod scala/collection/LinearSeqOptimized.apply:(I)Ljava/lang/Object;
      54: checkcast     #51                 // class net/fwbrasil/activate/storage/marshalling/StorageValue
      57: astore        4
      59: aload         4
      61: instanceof    #53                 // class net/fwbrasil/activate/storage/marshalling/ReferenceStorageValue
      64: ifeq          113
      67: aload         4
      69: checkcast     #53                 // class net/fwbrasil/activate/storage/marshalling/ReferenceStorageValue
      72: astore        5
      74: aload         5
      76: invokevirtual #57                 // Method net/fwbrasil/activate/storage/marshalling/ReferenceStorageValue.value:()Lnet/fwbrasil/activate/storage/marshalling/StorageOptionalValue;
      79: astore        6
      81: new           #59                 // class scala/Tuple2
      84: dup
      85: aload         6
      87: invokeinterface #63,  1           // InterfaceMethod net/fwbrasil/activate/storage/marshalling/StorageOptionalValue.value:()Ljava/lang/Object;
      92: checkcast     #32                 // class scala/Option
      95: invokevirtual #40                 // Method scala/Option.get:()Ljava/lang/Object;
      98: aload_0
      99: getfield      #65                 // Field $outer:Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21;
     102: getfield      #69                 // Field net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21.clazz$1:Ljava/lang/Class;
     105: invokespecial #73                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     108: astore        7
     110: aload         7
     112: areturn
     113: new           #75                 // class java/lang/IllegalStateException
     116: dup
     117: ldc           #77                 // String Invalid version information
     119: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     122: athrow

  public final java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #88                 // class scala/collection/immutable/List
       5: invokevirtual #93                 // Method apply:(Lscala/collection/immutable/List;)Lscala/Tuple2;
       8: areturn

  public net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21$$anonfun$apply$22(net.fwbrasil.activate.storage.relational.async.AsyncSQLStorage<C>.$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #98                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #101                // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: aload_1
      14: putfield      #65                 // Field $outer:Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$$anonfun$net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$$verifyReads$2$$anonfun$apply$20$$anonfun$apply$21;
      17: aload_0
      18: invokespecial #102                // Method scala/runtime/AbstractFunction1."<init>":()V
      21: return
}
