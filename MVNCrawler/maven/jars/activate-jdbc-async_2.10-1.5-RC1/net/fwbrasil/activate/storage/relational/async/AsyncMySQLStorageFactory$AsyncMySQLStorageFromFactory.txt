Compiled from "AsyncMySQLStorage.scala"
public class net.fwbrasil.activate.storage.relational.async.AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory implements net.fwbrasil.activate.storage.relational.async.AsyncMySQLStorage {
  private final scala.Function1<java.lang.String, scala.Option<java.lang.String>> getProperty;

  private com.github.mauricio.async.db.mysql.pool.MySQLConnectionFactory objectFactory;

  private final net.fwbrasil.activate.storage.relational.idiom.mySqlDialect dialect;

  private final scala.concurrent.duration.Duration defaultTimeout;

  private final scala.concurrent.ExecutionContextExecutor executionContext;

  private final com.github.mauricio.async.db.pool.ConnectionPool<com.github.mauricio.async.db.Connection> pool;

  private final int queryLimit;

  private boolean net$fwbrasil$activate$storage$Storage$$blockingFutureWarned;

  private final grizzled.slf4j.Logger grizzled$slf4j$Logging$$_logger;

  private volatile byte bitmap$0;

  private com.github.mauricio.async.db.mysql.pool.MySQLConnectionFactory objectFactory$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #33                 // Field bitmap$0:B
       8: iconst_1
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     41
      15: aload_0
      16: new           #35                 // class com/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory
      19: dup
      20: aload_0
      21: invokevirtual #39                 // Method configuration:()Lcom/github/mauricio/async/db/Configuration;
      24: invokespecial #43                 // Method com/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory."<init>":(Lcom/github/mauricio/async/db/Configuration;)V
      27: putfield      #45                 // Field objectFactory:Lcom/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory;
      30: aload_0
      31: aload_0
      32: getfield      #33                 // Field bitmap$0:B
      35: iconst_1
      36: ior
      37: i2b
      38: putfield      #33                 // Field bitmap$0:B
      41: getstatic     #51                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      44: pop
      45: aload_1
      46: monitorexit
      47: aload_0
      48: getfield      #45                 // Field objectFactory:Lcom/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory;
      51: areturn
      52: aload_1
      53: monitorexit
      54: athrow
    Exception table:
       from    to  target type
           4    47    52   any

  public net.fwbrasil.activate.storage.relational.idiom.mySqlDialect dialect();
    Code:
       0: aload_0
       1: getfield      #58                 // Field dialect:Lnet/fwbrasil/activate/storage/relational/idiom/mySqlDialect;
       4: areturn

  public void net$fwbrasil$activate$storage$relational$async$AsyncMySQLStorage$_setter_$dialect_$eq(net.fwbrasil.activate.storage.relational.idiom.mySqlDialect);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #58                 // Field dialect:Lnet/fwbrasil/activate/storage/relational/idiom/mySqlDialect;
       5: return

  public scala.concurrent.duration.Duration defaultTimeout();
    Code:
       0: aload_0
       1: getfield      #64                 // Field defaultTimeout:Lscala/concurrent/duration/Duration;
       4: areturn

  private scala.concurrent.ExecutionContextExecutor executionContext$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #33                 // Field bitmap$0:B
       8: iconst_2
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #71                 // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.executionContext:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Lscala/concurrent/ExecutionContextExecutor;
      20: putfield      #73                 // Field executionContext:Lscala/concurrent/ExecutionContextExecutor;
      23: aload_0
      24: aload_0
      25: getfield      #33                 // Field bitmap$0:B
      28: iconst_2
      29: ior
      30: i2b
      31: putfield      #33                 // Field bitmap$0:B
      34: getstatic     #51                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #73                 // Field executionContext:Lscala/concurrent/ExecutionContextExecutor;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public scala.concurrent.ExecutionContextExecutor executionContext();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bitmap$0:B
       4: iconst_2
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #75                 // Method executionContext$lzycompute:()Lscala/concurrent/ExecutionContextExecutor;
      15: goto          22
      18: aload_0
      19: getfield      #73                 // Field executionContext:Lscala/concurrent/ExecutionContextExecutor;
      22: areturn

  private com.github.mauricio.async.db.pool.ConnectionPool pool$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #33                 // Field bitmap$0:B
       8: iconst_4
       9: iand
      10: i2b
      11: iconst_0
      12: if_icmpne     34
      15: aload_0
      16: aload_0
      17: invokestatic  #82                 // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.pool:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Lcom/github/mauricio/async/db/pool/ConnectionPool;
      20: putfield      #84                 // Field pool:Lcom/github/mauricio/async/db/pool/ConnectionPool;
      23: aload_0
      24: aload_0
      25: getfield      #33                 // Field bitmap$0:B
      28: iconst_4
      29: ior
      30: i2b
      31: putfield      #33                 // Field bitmap$0:B
      34: getstatic     #51                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      37: pop
      38: aload_1
      39: monitorexit
      40: aload_0
      41: getfield      #84                 // Field pool:Lcom/github/mauricio/async/db/pool/ConnectionPool;
      44: areturn
      45: aload_1
      46: monitorexit
      47: athrow
    Exception table:
       from    to  target type
           4    40    45   any

  public com.github.mauricio.async.db.pool.ConnectionPool<com.github.mauricio.async.db.mysql.MySQLConnection> pool();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bitmap$0:B
       4: iconst_4
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #86                 // Method pool$lzycompute:()Lcom/github/mauricio/async/db/pool/ConnectionPool;
      15: goto          22
      18: aload_0
      19: getfield      #84                 // Field pool:Lcom/github/mauricio/async/db/pool/ConnectionPool;
      22: areturn

  public int queryLimit();
    Code:
       0: aload_0
       1: getfield      #91                 // Field queryLimit:I
       4: ireturn

  public void net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$_setter_$defaultTimeout_$eq(scala.concurrent.duration.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field defaultTimeout:Lscala/concurrent/duration/Duration;
       5: return

  public void net$fwbrasil$activate$storage$relational$async$AsyncSQLStorage$_setter_$queryLimit_$eq(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #91                 // Field queryLimit:I
       5: return

  public java.nio.charset.Charset charset();
    Code:
       0: aload_0
       1: invokestatic  #100                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.charset:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Ljava/nio/charset/Charset;
       4: areturn

  public scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>> query(net.fwbrasil.activate.statement.query.Query<?>, scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>, scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.entity.BaseEntity>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #105                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.query:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/statement/query/Query;Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       7: areturn

  public scala.concurrent.Future<scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>>> queryAsync(net.fwbrasil.activate.statement.query.Query<?>, scala.collection.immutable.List<net.fwbrasil.activate.storage.marshalling.StorageValue>, scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.entity.BaseEntity>>, net.fwbrasil.radon.transaction.TransactionalExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #114                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.queryAsync:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/statement/query/Query;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lnet/fwbrasil/radon/transaction/TransactionalExecutionContext;)Lscala/concurrent/Future;
       9: areturn

  public scala.concurrent.Future<scala.runtime.BoxedUnit> executeStatementsAsync(scala.collection.immutable.Map<java.lang.Class<net.fwbrasil.activate.entity.BaseEntity>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.storage.marshalling.ReferenceStorageValue, java.lang.Object>>>, scala.collection.immutable.List<net.fwbrasil.activate.storage.relational.StorageStatement>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #121                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.executeStatementsAsync:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/collection/immutable/Map;Lscala/collection/immutable/List;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public scala.Some<net.fwbrasil.activate.storage.TransactionHandle> executeStatements(scala.collection.immutable.Map<java.lang.Class<net.fwbrasil.activate.entity.BaseEntity>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.storage.marshalling.ReferenceStorageValue, java.lang.Object>>>, scala.collection.immutable.List<net.fwbrasil.activate.storage.relational.StorageStatement>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #130                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.executeStatements:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/collection/immutable/Map;Lscala/collection/immutable/List;)Lscala/Some;
       6: areturn

  public scala.concurrent.Future<scala.runtime.BoxedUnit> execute(net.fwbrasil.activate.storage.relational.QlStatement, com.github.mauricio.async.db.Connection, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #136                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.execute:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/QlStatement;Lcom/github/mauricio/async/db/Connection;Z)Lscala/concurrent/Future;
       7: areturn

  public scala.concurrent.Future<java.lang.Object> satisfyRestriction(net.fwbrasil.activate.storage.relational.QlStatement, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #146                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.satisfyRestriction:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/QlStatement;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public scala.concurrent.Future<net.fwbrasil.activate.storage.TransactionHandle> executeWithTransactionAndReturnHandle(scala.Function1<com.github.mauricio.async.db.Connection, scala.concurrent.Future<scala.runtime.BoxedUnit>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #151                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.executeWithTransactionAndReturnHandle:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lscala/Function1;)Lscala/concurrent/Future;
       5: areturn

  public scala.concurrent.Future<com.github.mauricio.async.db.mysql.MySQLConnection> directAccess();
    Code:
       0: aload_0
       1: invokestatic  #157                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.directAccess:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Lscala/concurrent/Future;
       4: areturn

  public boolean isMemoryStorage();
    Code:
       0: aload_0
       1: invokestatic  #162                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.isMemoryStorage:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Z
       4: ireturn

  public boolean isSchemaless();
    Code:
       0: aload_0
       1: invokestatic  #165                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.isSchemaless:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Z
       4: ireturn

  public boolean isTransactional();
    Code:
       0: aload_0
       1: invokestatic  #168                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.isTransactional:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Z
       4: ireturn

  public boolean supportsQueryJoin();
    Code:
       0: aload_0
       1: invokestatic  #171                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.supportsQueryJoin:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Z
       4: ireturn

  public boolean supportsAsync();
    Code:
       0: aload_0
       1: invokestatic  #174                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.supportsAsync:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)Z
       4: ireturn

  public scala.concurrent.Future<com.github.mauricio.async.db.QueryResult> sendPreparedStatement(net.fwbrasil.activate.storage.relational.QlStatement, com.github.mauricio.async.db.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #179                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.sendPreparedStatement:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;Lnet/fwbrasil/activate/storage/relational/QlStatement;Lcom/github/mauricio/async/db/Connection;)Lscala/concurrent/Future;
       6: areturn

  public java.lang.String noEscape(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #186                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.noEscape:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String underscoreSeparated(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #191                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.underscoreSeparated:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public scala.Option<net.fwbrasil.activate.storage.TransactionHandle> store(scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, java.lang.Object>>, scala.collection.immutable.List<net.fwbrasil.activate.statement.mass.MassModificationStatement>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.storage.marshalling.StorageValue>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.storage.marshalling.StorageValue>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.storage.marshalling.StorageValue>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #196                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.store:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Lscala/Option;
      11: areturn

  public scala.concurrent.Future<scala.runtime.BoxedUnit> storeAsync(scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, java.lang.Object>>, scala.collection.immutable.List<net.fwbrasil.activate.statement.mass.MassModificationStatement>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.storage.marshalling.StorageValue>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.storage.marshalling.StorageValue>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.storage.marshalling.StorageValue>>>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #206                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.storeAsync:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      13: areturn

  public scala.collection.immutable.List<net.fwbrasil.activate.storage.relational.DmlStorageStatement> resolveDependencies(scala.collection.immutable.Set<net.fwbrasil.activate.storage.relational.DmlStorageStatement>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.resolveDependencies:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;Lscala/collection/immutable/Set;)Lscala/collection/immutable/List;
       5: areturn

  public void migrateStorage(net.fwbrasil.activate.storage.marshalling.ModifyStorageAction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.migrateStorage:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;Lnet/fwbrasil/activate/storage/marshalling/ModifyStorageAction;)V
       5: return

  public scala.Option<net.fwbrasil.activate.storage.TransactionHandle> toStorage(scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, java.lang.Object>>, scala.collection.immutable.List<net.fwbrasil.activate.statement.mass.MassModificationStatement>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.entity.EntityValue<java.lang.Object>>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.entity.EntityValue<java.lang.Object>>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.entity.EntityValue<java.lang.Object>>>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #226                // Method net/fwbrasil/activate/storage/marshalling/MarshalStorage$class.toStorage:(Lnet/fwbrasil/activate/storage/marshalling/MarshalStorage;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;)Lscala/Option;
      11: areturn

  public scala.concurrent.Future<scala.runtime.BoxedUnit> toStorageAsync(scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, java.lang.Object>>, scala.collection.immutable.List<net.fwbrasil.activate.statement.mass.MassModificationStatement>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.entity.EntityValue<java.lang.Object>>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.entity.EntityValue<java.lang.Object>>>>, scala.collection.immutable.List<scala.Tuple2<net.fwbrasil.activate.entity.BaseEntity, scala.collection.immutable.Map<java.lang.String, net.fwbrasil.activate.entity.EntityValue<java.lang.Object>>>>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #230                // Method net/fwbrasil/activate/storage/marshalling/MarshalStorage$class.toStorageAsync:(Lnet/fwbrasil/activate/storage/marshalling/MarshalStorage;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/collection/immutable/List;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      13: areturn

  public scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.entity.EntityValue<?>>> fromStorage(net.fwbrasil.activate.statement.query.Query<?>, scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.entity.BaseEntity>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #235                // Method net/fwbrasil/activate/storage/marshalling/MarshalStorage$class.fromStorage:(Lnet/fwbrasil/activate/storage/marshalling/MarshalStorage;Lnet/fwbrasil/activate/statement/query/Query;Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       6: areturn

  public scala.concurrent.Future<scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.entity.EntityValue<?>>>> fromStorageAsync(net.fwbrasil.activate.statement.query.Query<?>, scala.collection.immutable.List<scala.collection.immutable.List<net.fwbrasil.activate.entity.BaseEntity>>, net.fwbrasil.radon.transaction.TransactionalExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #241                // Method net/fwbrasil/activate/storage/marshalling/MarshalStorage$class.fromStorageAsync:(Lnet/fwbrasil/activate/storage/marshalling/MarshalStorage;Lnet/fwbrasil/activate/statement/query/Query;Lscala/collection/immutable/List;Lnet/fwbrasil/radon/transaction/TransactionalExecutionContext;)Lscala/concurrent/Future;
       7: areturn

  public void migrate(net.fwbrasil.activate.migration.StorageAction);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // Method net/fwbrasil/activate/storage/marshalling/MarshalStorage$class.migrate:(Lnet/fwbrasil/activate/storage/marshalling/MarshalStorage;Lnet/fwbrasil/activate/migration/StorageAction;)V
       5: return

  public boolean net$fwbrasil$activate$storage$Storage$$blockingFutureWarned();
    Code:
       0: aload_0
       1: getfield      #249                // Field net$fwbrasil$activate$storage$Storage$$blockingFutureWarned:Z
       4: ireturn

  public void net$fwbrasil$activate$storage$Storage$$blockingFutureWarned_$eq(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #249                // Field net$fwbrasil$activate$storage$Storage$$blockingFutureWarned:Z
       5: return

  public <T> scala.concurrent.Future<T> blockingFuture(scala.Function0<T>, scala.concurrent.ExecutionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #258                // Method net/fwbrasil/activate/storage/Storage$class.blockingFuture:(Lnet/fwbrasil/activate/storage/Storage;Lscala/Function0;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
       6: areturn

  public boolean supportsLimitedQueries();
    Code:
       0: aload_0
       1: invokestatic  #264                // Method net/fwbrasil/activate/storage/Storage$class.supportsLimitedQueries:(Lnet/fwbrasil/activate/storage/Storage;)Z
       4: ireturn

  public boolean supportsRegex();
    Code:
       0: aload_0
       1: invokestatic  #267                // Method net/fwbrasil/activate/storage/Storage$class.supportsRegex:(Lnet/fwbrasil/activate/storage/Storage;)Z
       4: ireturn

  public void reinitialize();
    Code:
       0: aload_0
       1: invokestatic  #272                // Method net/fwbrasil/activate/storage/Storage$class.reinitialize:(Lnet/fwbrasil/activate/storage/Storage;)V
       4: return

  public void prepareDatabase();
    Code:
       0: aload_0
       1: invokestatic  #275                // Method net/fwbrasil/activate/storage/Storage$class.prepareDatabase:(Lnet/fwbrasil/activate/storage/Storage;)V
       4: return

  public scala.runtime.Nothing$ staleDataException(scala.collection.immutable.Set<scala.Tuple2<java.lang.Object, java.lang.Class<net.fwbrasil.activate.entity.BaseEntity>>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #280                // Method net/fwbrasil/activate/storage/Storage$class.staleDataException:(Lnet/fwbrasil/activate/storage/Storage;Lscala/collection/immutable/Set;)Lscala/runtime/Nothing$;
       5: areturn

  public <A> A logTrace(scala.Function0<java.lang.String>, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #288                // Method net/fwbrasil/activate/util/Logging$class.logTrace:(Lnet/fwbrasil/activate/util/Logging;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <A> A logDebug(scala.Function0<java.lang.String>, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #292                // Method net/fwbrasil/activate/util/Logging$class.logDebug:(Lnet/fwbrasil/activate/util/Logging;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <A> A logInfo(scala.Function0<java.lang.String>, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #295                // Method net/fwbrasil/activate/util/Logging$class.logInfo:(Lnet/fwbrasil/activate/util/Logging;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <A> A logWarn(scala.Function0<java.lang.String>, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #298                // Method net/fwbrasil/activate/util/Logging$class.logWarn:(Lnet/fwbrasil/activate/util/Logging;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public <A> A logError(scala.Function0<java.lang.String>, scala.Function0<A>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #301                // Method net/fwbrasil/activate/util/Logging$class.logError:(Lnet/fwbrasil/activate/util/Logging;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  private grizzled.slf4j.Logger grizzled$slf4j$Logging$$_logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #33                 // Field bitmap$0:B
       8: bipush        8
      10: iand
      11: i2b
      12: iconst_0
      13: if_icmpne     36
      16: aload_0
      17: aload_0
      18: invokestatic  #308                // Method grizzled/slf4j/Logging$class.grizzled$slf4j$Logging$$_logger:(Lgrizzled/slf4j/Logging;)Lgrizzled/slf4j/Logger;
      21: putfield      #310                // Field grizzled$slf4j$Logging$$_logger:Lgrizzled/slf4j/Logger;
      24: aload_0
      25: aload_0
      26: getfield      #33                 // Field bitmap$0:B
      29: bipush        8
      31: ior
      32: i2b
      33: putfield      #33                 // Field bitmap$0:B
      36: getstatic     #51                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      39: pop
      40: aload_1
      41: monitorexit
      42: aload_0
      43: getfield      #310                // Field grizzled$slf4j$Logging$$_logger:Lgrizzled/slf4j/Logger;
      46: areturn
      47: aload_1
      48: monitorexit
      49: athrow
    Exception table:
       from    to  target type
           4    42    47   any

  public grizzled.slf4j.Logger grizzled$slf4j$Logging$$_logger();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bitmap$0:B
       4: bipush        8
       6: iand
       7: i2b
       8: iconst_0
       9: if_icmpne     19
      12: aload_0
      13: invokespecial #312                // Method grizzled$slf4j$Logging$$_logger$lzycompute:()Lgrizzled/slf4j/Logger;
      16: goto          23
      19: aload_0
      20: getfield      #310                // Field grizzled$slf4j$Logging$$_logger:Lgrizzled/slf4j/Logger;
      23: areturn

  public grizzled.slf4j.Logger logger();
    Code:
       0: aload_0
       1: invokestatic  #317                // Method grizzled/slf4j/Logging$class.logger:(Lgrizzled/slf4j/Logging;)Lgrizzled/slf4j/Logger;
       4: areturn

  public java.lang.String loggerName();
    Code:
       0: aload_0
       1: invokestatic  #322                // Method grizzled/slf4j/Logging$class.loggerName:(Lgrizzled/slf4j/Logging;)Ljava/lang/String;
       4: areturn

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokestatic  #326                // Method grizzled/slf4j/Logging$class.isTraceEnabled:(Lgrizzled/slf4j/Logging;)Z
       4: ireturn

  public void trace(scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #331                // Method grizzled/slf4j/Logging$class.trace:(Lgrizzled/slf4j/Logging;Lscala/Function0;)V
       5: return

  public void trace(scala.Function0<java.lang.Object>, scala.Function0<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #336                // Method grizzled/slf4j/Logging$class.trace:(Lgrizzled/slf4j/Logging;Lscala/Function0;Lscala/Function0;)V
       6: return

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: invokestatic  #340                // Method grizzled/slf4j/Logging$class.isDebugEnabled:(Lgrizzled/slf4j/Logging;)Z
       4: ireturn

  public void debug(scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #343                // Method grizzled/slf4j/Logging$class.debug:(Lgrizzled/slf4j/Logging;Lscala/Function0;)V
       5: return

  public void debug(scala.Function0<java.lang.Object>, scala.Function0<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #345                // Method grizzled/slf4j/Logging$class.debug:(Lgrizzled/slf4j/Logging;Lscala/Function0;Lscala/Function0;)V
       6: return

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: invokestatic  #348                // Method grizzled/slf4j/Logging$class.isErrorEnabled:(Lgrizzled/slf4j/Logging;)Z
       4: ireturn

  public void error(scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #351                // Method grizzled/slf4j/Logging$class.error:(Lgrizzled/slf4j/Logging;Lscala/Function0;)V
       5: return

  public void error(scala.Function0<java.lang.Object>, scala.Function0<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #353                // Method grizzled/slf4j/Logging$class.error:(Lgrizzled/slf4j/Logging;Lscala/Function0;Lscala/Function0;)V
       6: return

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: invokestatic  #356                // Method grizzled/slf4j/Logging$class.isInfoEnabled:(Lgrizzled/slf4j/Logging;)Z
       4: ireturn

  public void info(scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #359                // Method grizzled/slf4j/Logging$class.info:(Lgrizzled/slf4j/Logging;Lscala/Function0;)V
       5: return

  public void info(scala.Function0<java.lang.Object>, scala.Function0<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #361                // Method grizzled/slf4j/Logging$class.info:(Lgrizzled/slf4j/Logging;Lscala/Function0;Lscala/Function0;)V
       6: return

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: invokestatic  #364                // Method grizzled/slf4j/Logging$class.isWarnEnabled:(Lgrizzled/slf4j/Logging;)Z
       4: ireturn

  public void warn(scala.Function0<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #367                // Method grizzled/slf4j/Logging$class.warn:(Lgrizzled/slf4j/Logging;Lscala/Function0;)V
       5: return

  public void warn(scala.Function0<java.lang.Object>, scala.Function0<java.lang.Throwable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #369                // Method grizzled/slf4j/Logging$class.warn:(Lgrizzled/slf4j/Logging;Lscala/Function0;Lscala/Function0;)V
       6: return

  public scala.Function1<java.lang.String, scala.Option<java.lang.String>> getProperty();
    Code:
       0: aload_0
       1: getfield      #372                // Field getProperty:Lscala/Function1;
       4: areturn

  public com.github.mauricio.async.db.Configuration configuration();
    Code:
       0: new           #374                // class com/github/mauricio/async/db/Configuration
       3: dup
       4: aload_0
       5: invokevirtual #376                // Method getProperty:()Lscala/Function1;
       8: ldc_w         #378                // String user
      11: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #386                // class scala/Option
      19: invokevirtual #390                // Method scala/Option.get:()Ljava/lang/Object;
      22: checkcast     #392                // class java/lang/String
      25: aload_0
      26: invokevirtual #376                // Method getProperty:()Lscala/Function1;
      29: ldc_w         #394                // String host
      32: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #386                // class scala/Option
      40: invokevirtual #390                // Method scala/Option.get:()Ljava/lang/Object;
      43: checkcast     #392                // class java/lang/String
      46: aload_0
      47: invokevirtual #376                // Method getProperty:()Lscala/Function1;
      50: ldc_w         #396                // String port
      53: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #386                // class scala/Option
      61: new           #398                // class net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$configuration$2
      64: dup
      65: aload_0
      66: invokespecial #401                // Method net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$configuration$2."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory;)V
      69: invokevirtual #405                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      72: new           #407                // class net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$configuration$1
      75: dup
      76: aload_0
      77: invokespecial #408                // Method net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$configuration$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory;)V
      80: invokevirtual #412                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      83: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      86: aload_0
      87: invokevirtual #376                // Method getProperty:()Lscala/Function1;
      90: ldc_w         #420                // String password
      93: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #386                // class scala/Option
     101: aload_0
     102: invokevirtual #376                // Method getProperty:()Lscala/Function1;
     105: ldc_w         #422                // String database
     108: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     113: checkcast     #386                // class scala/Option
     116: getstatic     #428                // Field com/github/mauricio/async/db/Configuration$.MODULE$:Lcom/github/mauricio/async/db/Configuration$;
     119: invokevirtual #431                // Method com/github/mauricio/async/db/Configuration$.$lessinit$greater$default$6:()Ljava/nio/charset/Charset;
     122: getstatic     #428                // Field com/github/mauricio/async/db/Configuration$.MODULE$:Lcom/github/mauricio/async/db/Configuration$;
     125: invokevirtual #434                // Method com/github/mauricio/async/db/Configuration$.$lessinit$greater$default$7:()I
     128: getstatic     #428                // Field com/github/mauricio/async/db/Configuration$.MODULE$:Lcom/github/mauricio/async/db/Configuration$;
     131: invokevirtual #438                // Method com/github/mauricio/async/db/Configuration$.$lessinit$greater$default$8:()Lio/netty/buffer/AbstractByteBufAllocator;
     134: invokespecial #441                // Method com/github/mauricio/async/db/Configuration."<init>":(Ljava/lang/String;Ljava/lang/String;ILscala/Option;Lscala/Option;Ljava/nio/charset/Charset;ILio/netty/buffer/AbstractByteBufAllocator;)V
     137: areturn

  public com.github.mauricio.async.db.mysql.pool.MySQLConnectionFactory objectFactory();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bitmap$0:B
       4: iconst_1
       5: iand
       6: i2b
       7: iconst_0
       8: if_icmpne     18
      11: aload_0
      12: invokespecial #443                // Method objectFactory$lzycompute:()Lcom/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory;
      15: goto          22
      18: aload_0
      19: getfield      #45                 // Field objectFactory:Lcom/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory;
      22: areturn

  public com.github.mauricio.async.db.pool.PoolConfiguration poolConfiguration();
    Code:
       0: new           #447                // class scala/runtime/ObjectRef
       3: dup
       4: getstatic     #452                // Field com/github/mauricio/async/db/pool/PoolConfiguration$.MODULE$:Lcom/github/mauricio/async/db/pool/PoolConfiguration$;
       7: invokevirtual #455                // Method com/github/mauricio/async/db/pool/PoolConfiguration$.Default:()Lcom/github/mauricio/async/db/pool/PoolConfiguration;
      10: invokespecial #458                // Method scala/runtime/ObjectRef."<init>":(Ljava/lang/Object;)V
      13: astore_1
      14: aload_0
      15: invokevirtual #376                // Method getProperty:()Lscala/Function1;
      18: ldc_w         #460                // String poolMaxQueueSize
      21: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #386                // class scala/Option
      29: new           #462                // class net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$poolConfiguration$1
      32: dup
      33: aload_0
      34: aload_1
      35: invokespecial #465                // Method net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$poolConfiguration$1."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory;Lscala/runtime/ObjectRef;)V
      38: invokevirtual #405                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      41: pop
      42: aload_0
      43: invokevirtual #376                // Method getProperty:()Lscala/Function1;
      46: ldc_w         #467                // String poolMaxObjects
      49: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #386                // class scala/Option
      57: new           #469                // class net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$poolConfiguration$2
      60: dup
      61: aload_0
      62: aload_1
      63: invokespecial #470                // Method net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$poolConfiguration$2."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory;Lscala/runtime/ObjectRef;)V
      66: invokevirtual #405                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      69: pop
      70: aload_0
      71: invokevirtual #376                // Method getProperty:()Lscala/Function1;
      74: ldc_w         #472                // String poolMaxIdle
      77: invokeinterface #384,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #386                // class scala/Option
      85: new           #474                // class net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$poolConfiguration$3
      88: dup
      89: aload_0
      90: aload_1
      91: invokespecial #475                // Method net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory$$anonfun$poolConfiguration$3."<init>":(Lnet/fwbrasil/activate/storage/relational/async/AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory;Lscala/runtime/ObjectRef;)V
      94: invokevirtual #405                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      97: pop
      98: aload_1
      99: getfield      #479                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
     102: checkcast     #481                // class com/github/mauricio/async/db/pool/PoolConfiguration
     105: areturn

  public <R> scala.runtime.Nothing$ await(scala.concurrent.Future<R>);
    Code:
       0: new           #487                // class java/lang/IllegalStateException
       3: dup
       4: ldc_w         #489                // String Don\'t block!
       7: invokespecial #492                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      10: athrow

  public java.lang.Object directAccess();
    Code:
       0: aload_0
       1: invokevirtual #496                // Method directAccess:()Lscala/concurrent/Future;
       4: areturn

  public scala.Option executeStatements(scala.collection.immutable.Map, scala.collection.immutable.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #499                // Method executeStatements:(Lscala/collection/immutable/Map;Lscala/collection/immutable/List;)Lscala/Some;
       6: areturn

  public net.fwbrasil.activate.storage.relational.idiom.SqlIdiom dialect();
    Code:
       0: aload_0
       1: invokevirtual #502                // Method dialect:()Lnet/fwbrasil/activate/storage/relational/idiom/mySqlDialect;
       4: areturn

  public java.lang.Object await(scala.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #505                // Method await:(Lscala/concurrent/Future;)Lscala/runtime/Nothing$;
       5: athrow

  public com.github.mauricio.async.db.pool.ObjectFactory objectFactory();
    Code:
       0: aload_0
       1: invokevirtual #508                // Method objectFactory:()Lcom/github/mauricio/async/db/mysql/pool/MySQLConnectionFactory;
       4: areturn

  public net.fwbrasil.activate.storage.relational.async.AsyncMySQLStorageFactory$AsyncMySQLStorageFromFactory(scala.Function1<java.lang.String, scala.Option<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #372                // Field getProperty:Lscala/Function1;
       5: aload_0
       6: invokespecial #511                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #515                // Method grizzled/slf4j/Logging$class.$init$:(Lgrizzled/slf4j/Logging;)V
      13: aload_0
      14: invokestatic  #518                // Method net/fwbrasil/activate/util/Logging$class.$init$:(Lnet/fwbrasil/activate/util/Logging;)V
      17: aload_0
      18: invokestatic  #520                // Method net/fwbrasil/activate/storage/Storage$class.$init$:(Lnet/fwbrasil/activate/storage/Storage;)V
      21: aload_0
      22: invokestatic  #523                // Method net/fwbrasil/activate/storage/marshalling/MarshalStorage$class.$init$:(Lnet/fwbrasil/activate/storage/marshalling/MarshalStorage;)V
      25: aload_0
      26: invokestatic  #526                // Method net/fwbrasil/activate/storage/relational/RelationalStorage$class.$init$:(Lnet/fwbrasil/activate/storage/relational/RelationalStorage;)V
      29: aload_0
      30: invokestatic  #529                // Method net/fwbrasil/activate/storage/relational/async/AsyncSQLStorage$class.$init$:(Lnet/fwbrasil/activate/storage/relational/async/AsyncSQLStorage;)V
      33: aload_0
      34: invokestatic  #534                // Method net/fwbrasil/activate/storage/relational/async/AsyncMySQLStorage$class.$init$:(Lnet/fwbrasil/activate/storage/relational/async/AsyncMySQLStorage;)V
      37: return
}
