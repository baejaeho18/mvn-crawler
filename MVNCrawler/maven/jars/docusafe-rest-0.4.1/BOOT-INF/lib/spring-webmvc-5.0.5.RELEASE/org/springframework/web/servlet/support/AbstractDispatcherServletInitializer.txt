Compiled from "AbstractDispatcherServletInitializer.java"
public abstract class org.springframework.web.servlet.support.AbstractDispatcherServletInitializer extends org.springframework.web.context.AbstractContextLoaderInitializer {
  public static final java.lang.String DEFAULT_SERVLET_NAME;

  public org.springframework.web.servlet.support.AbstractDispatcherServletInitializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/context/AbstractContextLoaderInitializer."<init>":()V
       4: return

  public void onStartup(javax.servlet.ServletContext) throws javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/web/context/AbstractContextLoaderInitializer.onStartup:(Ljavax/servlet/ServletContext;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #3                  // Method registerDispatcherServlet:(Ljavax/servlet/ServletContext;)V
      10: return

  protected void registerDispatcherServlet(javax.servlet.ServletContext);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getServletName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ldc           #5                  // String getServletName() must not return null or empty
       8: invokestatic  #6                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
      11: aload_0
      12: invokevirtual #7                  // Method createServletApplicationContext:()Lorg/springframework/web/context/WebApplicationContext;
      15: astore_3
      16: aload_3
      17: ldc           #8                  // String createServletApplicationContext() must not return null
      19: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_3
      24: invokevirtual #10                 // Method createDispatcherServlet:(Lorg/springframework/web/context/WebApplicationContext;)Lorg/springframework/web/servlet/FrameworkServlet;
      27: astore        4
      29: aload         4
      31: ldc           #11                 // String createDispatcherServlet(WebApplicationContext) must not return null
      33: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      36: aload         4
      38: aload_0
      39: invokevirtual #12                 // Method getServletApplicationContextInitializers:()[Lorg/springframework/context/ApplicationContextInitializer;
      42: invokevirtual #13                 // Method org/springframework/web/servlet/FrameworkServlet.setContextInitializers:([Lorg/springframework/context/ApplicationContextInitializer;)V
      45: aload_1
      46: aload_2
      47: aload         4
      49: invokeinterface #14,  3           // InterfaceMethod javax/servlet/ServletContext.addServlet:(Ljava/lang/String;Ljavax/servlet/Servlet;)Ljavax/servlet/ServletRegistration$Dynamic;
      54: astore        5
      56: aload         5
      58: ifnonnull     93
      61: new           #15                 // class java/lang/IllegalStateException
      64: dup
      65: new           #16                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #18                 // String Failed to register servlet with name \'
      74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_2
      78: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #20                 // String \'. Check if there is another servlet registered under the same name.
      83: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload         5
      95: iconst_1
      96: invokeinterface #23,  2           // InterfaceMethod javax/servlet/ServletRegistration$Dynamic.setLoadOnStartup:(I)V
     101: aload         5
     103: aload_0
     104: invokevirtual #24                 // Method getServletMappings:()[Ljava/lang/String;
     107: invokeinterface #25,  2           // InterfaceMethod javax/servlet/ServletRegistration$Dynamic.addMapping:([Ljava/lang/String;)Ljava/util/Set;
     112: pop
     113: aload         5
     115: aload_0
     116: invokevirtual #26                 // Method isAsyncSupported:()Z
     119: invokeinterface #27,  2           // InterfaceMethod javax/servlet/ServletRegistration$Dynamic.setAsyncSupported:(Z)V
     124: aload_0
     125: invokevirtual #28                 // Method getServletFilters:()[Ljavax/servlet/Filter;
     128: astore        6
     130: aload         6
     132: invokestatic  #29                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
     135: ifne          178
     138: aload         6
     140: astore        7
     142: aload         7
     144: arraylength
     145: istore        8
     147: iconst_0
     148: istore        9
     150: iload         9
     152: iload         8
     154: if_icmpge     178
     157: aload         7
     159: iload         9
     161: aaload
     162: astore        10
     164: aload_0
     165: aload_1
     166: aload         10
     168: invokevirtual #30                 // Method registerServletFilter:(Ljavax/servlet/ServletContext;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
     171: pop
     172: iinc          9, 1
     175: goto          150
     178: aload_0
     179: aload         5
     181: invokevirtual #31                 // Method customizeRegistration:(Ljavax/servlet/ServletRegistration$Dynamic;)V
     184: return

  protected java.lang.String getServletName();
    Code:
       0: ldc           #33                 // String dispatcher
       2: areturn

  protected abstract org.springframework.web.context.WebApplicationContext createServletApplicationContext();

  protected org.springframework.web.servlet.FrameworkServlet createDispatcherServlet(org.springframework.web.context.WebApplicationContext);
    Code:
       0: new           #34                 // class org/springframework/web/servlet/DispatcherServlet
       3: dup
       4: aload_1
       5: invokespecial #35                 // Method org/springframework/web/servlet/DispatcherServlet."<init>":(Lorg/springframework/web/context/WebApplicationContext;)V
       8: areturn

  protected org.springframework.context.ApplicationContextInitializer<?>[] getServletApplicationContextInitializers();
    Code:
       0: aconst_null
       1: areturn

  protected abstract java.lang.String[] getServletMappings();

  protected javax.servlet.Filter[] getServletFilters();
    Code:
       0: aconst_null
       1: areturn

  protected javax.servlet.FilterRegistration$Dynamic registerServletFilter(javax.servlet.ServletContext, javax.servlet.Filter);
    Code:
       0: aload_2
       1: invokestatic  #36                 // Method org/springframework/core/Conventions.getVariableName:(Ljava/lang/Object;)Ljava/lang/String;
       4: astore_3
       5: aload_1
       6: aload_3
       7: aload_2
       8: invokeinterface #37,  3           // InterfaceMethod javax/servlet/ServletContext.addFilter:(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
      13: astore        4
      15: aload         4
      17: ifnonnull     106
      20: iconst_0
      21: istore        5
      23: aload         4
      25: ifnonnull     106
      28: iload         5
      30: bipush        100
      32: if_icmpne     67
      35: new           #15                 // class java/lang/IllegalStateException
      38: dup
      39: new           #16                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #38                 // String Failed to register filter with name \'
      48: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_3
      52: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #39                 // String \'. Check if there is another filter registered under the same name.
      57: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_1
      68: new           #16                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      75: aload_3
      76: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #40                 // String #
      81: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload         5
      86: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      89: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: aload_2
      93: invokeinterface #37,  3           // InterfaceMethod javax/servlet/ServletContext.addFilter:(Ljava/lang/String;Ljavax/servlet/Filter;)Ljavax/servlet/FilterRegistration$Dynamic;
      98: astore        4
     100: iinc          5, 1
     103: goto          23
     106: aload         4
     108: aload_0
     109: invokevirtual #26                 // Method isAsyncSupported:()Z
     112: invokeinterface #42,  2           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.setAsyncSupported:(Z)V
     117: aload         4
     119: aload_0
     120: invokespecial #43                 // Method getDispatcherTypes:()Ljava/util/EnumSet;
     123: iconst_0
     124: iconst_1
     125: anewarray     #44                 // class java/lang/String
     128: dup
     129: iconst_0
     130: aload_0
     131: invokevirtual #4                  // Method getServletName:()Ljava/lang/String;
     134: aastore
     135: invokeinterface #45,  4           // InterfaceMethod javax/servlet/FilterRegistration$Dynamic.addMappingForServletNames:(Ljava/util/EnumSet;Z[Ljava/lang/String;)V
     140: aload         4
     142: areturn

  private java.util.EnumSet<javax.servlet.DispatcherType> getDispatcherTypes();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isAsyncSupported:()Z
       4: ifeq          25
       7: getstatic     #46                 // Field javax/servlet/DispatcherType.REQUEST:Ljavax/servlet/DispatcherType;
      10: getstatic     #47                 // Field javax/servlet/DispatcherType.FORWARD:Ljavax/servlet/DispatcherType;
      13: getstatic     #48                 // Field javax/servlet/DispatcherType.INCLUDE:Ljavax/servlet/DispatcherType;
      16: getstatic     #49                 // Field javax/servlet/DispatcherType.ASYNC:Ljavax/servlet/DispatcherType;
      19: invokestatic  #50                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      22: goto          37
      25: getstatic     #46                 // Field javax/servlet/DispatcherType.REQUEST:Ljavax/servlet/DispatcherType;
      28: getstatic     #47                 // Field javax/servlet/DispatcherType.FORWARD:Ljavax/servlet/DispatcherType;
      31: getstatic     #48                 // Field javax/servlet/DispatcherType.INCLUDE:Ljavax/servlet/DispatcherType;
      34: invokestatic  #51                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      37: areturn

  protected boolean isAsyncSupported();
    Code:
       0: iconst_1
       1: ireturn

  protected void customizeRegistration(javax.servlet.ServletRegistration$Dynamic);
    Code:
       0: return
}
