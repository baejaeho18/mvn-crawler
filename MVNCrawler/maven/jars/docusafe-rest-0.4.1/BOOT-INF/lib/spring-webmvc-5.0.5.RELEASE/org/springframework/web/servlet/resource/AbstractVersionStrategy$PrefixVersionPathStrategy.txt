Compiled from "AbstractVersionStrategy.java"
public class org.springframework.web.servlet.resource.AbstractVersionStrategy$PrefixVersionPathStrategy implements org.springframework.web.servlet.resource.VersionPathStrategy {
  private final java.lang.String prefix;

  public org.springframework.web.servlet.resource.AbstractVersionStrategy$PrefixVersionPathStrategy(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String \'version\' must not be empty
       7: invokestatic  #3                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field prefix:Ljava/lang/String;
      15: return

  public java.lang.String extractVersion(java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field prefix:Ljava/lang/String;
       5: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ifeq          18
      11: aload_0
      12: getfield      #4                  // Field prefix:Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  public java.lang.String removeVersion(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field prefix:Ljava/lang/String;
       5: invokevirtual #6                  // Method java/lang/String.length:()I
       8: invokevirtual #7                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      11: areturn

  public java.lang.String addVersion(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String .
       3: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          11
       9: aload_1
      10: areturn
      11: aload_0
      12: getfield      #4                  // Field prefix:Ljava/lang/String;
      15: ldc           #9                  // String /
      17: invokevirtual #10                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      20: ifne          32
      23: aload_1
      24: ldc           #9                  // String /
      26: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      29: ifeq          56
      32: new           #11                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      39: aload_0
      40: getfield      #4                  // Field prefix:Ljava/lang/String;
      43: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: goto          82
      56: new           #11                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_0
      64: getfield      #4                  // Field prefix:Ljava/lang/String;
      67: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: bipush        47
      72: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: areturn
}
