Compiled from "AbstractTemplateView.java"
public abstract class org.springframework.web.servlet.view.AbstractTemplateView extends org.springframework.web.servlet.view.AbstractUrlBasedView {
  public static final java.lang.String SPRING_MACRO_REQUEST_CONTEXT_ATTRIBUTE;

  private boolean exposeRequestAttributes;

  private boolean allowRequestOverride;

  private boolean exposeSessionAttributes;

  private boolean allowSessionOverride;

  private boolean exposeSpringMacroHelpers;

  public org.springframework.web.servlet.view.AbstractTemplateView();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractUrlBasedView."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field exposeRequestAttributes:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field allowRequestOverride:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field exposeSessionAttributes:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field allowSessionOverride:Z
      24: aload_0
      25: iconst_1
      26: putfield      #6                  // Field exposeSpringMacroHelpers:Z
      29: return

  public void setExposeRequestAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field exposeRequestAttributes:Z
       5: return

  public void setAllowRequestOverride(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field allowRequestOverride:Z
       5: return

  public void setExposeSessionAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field exposeSessionAttributes:Z
       5: return

  public void setAllowSessionOverride(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field allowSessionOverride:Z
       5: return

  public void setExposeSpringMacroHelpers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field exposeSpringMacroHelpers:Z
       5: return

  protected final void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exposeRequestAttributes:Z
       4: ifeq          168
       7: aload_2
       8: invokeinterface #7,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttributeNames:()Ljava/util/Enumeration;
      13: astore        4
      15: aload         4
      17: invokeinterface #8,  1            // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      22: ifeq          168
      25: aload         4
      27: invokeinterface #9,  1            // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      32: checkcast     #10                 // class java/lang/String
      35: astore        5
      37: aload_1
      38: aload         5
      40: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      45: ifeq          88
      48: aload_0
      49: getfield      #3                  // Field allowRequestOverride:Z
      52: ifne          88
      55: new           #12                 // class javax/servlet/ServletException
      58: dup
      59: new           #13                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #15                 // String Cannot expose request attribute \'
      68: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload         5
      73: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #17                 // String \' because of an existing model object of the same name
      78: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #19                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_2
      89: aload         5
      91: invokeinterface #20,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      96: astore        6
      98: aload_0
      99: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     102: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     107: ifeq          154
     110: aload_0
     111: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     114: new           #13                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #23                 // String Exposing request attribute \'
     123: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         5
     128: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #24                 // String \' with value [
     133: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload         6
     138: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: ldc           #26                 // String ] to model
     143: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     154: aload_1
     155: aload         5
     157: aload         6
     159: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     164: pop
     165: goto          15
     168: aload_0
     169: getfield      #4                  // Field exposeSessionAttributes:Z
     172: ifeq          352
     175: aload_2
     176: iconst_0
     177: invokeinterface #29,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
     182: astore        4
     184: aload         4
     186: ifnull        352
     189: aload         4
     191: invokeinterface #30,  1           // InterfaceMethod javax/servlet/http/HttpSession.getAttributeNames:()Ljava/util/Enumeration;
     196: astore        5
     198: aload         5
     200: invokeinterface #8,  1            // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
     205: ifeq          352
     208: aload         5
     210: invokeinterface #9,  1            // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
     215: checkcast     #10                 // class java/lang/String
     218: astore        6
     220: aload_1
     221: aload         6
     223: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     228: ifeq          271
     231: aload_0
     232: getfield      #5                  // Field allowSessionOverride:Z
     235: ifne          271
     238: new           #12                 // class javax/servlet/ServletException
     241: dup
     242: new           #13                 // class java/lang/StringBuilder
     245: dup
     246: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     249: ldc           #31                 // String Cannot expose session attribute \'
     251: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: aload         6
     256: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     259: ldc           #17                 // String \' because of an existing model object of the same name
     261: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     267: invokespecial #19                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
     270: athrow
     271: aload         4
     273: aload         6
     275: invokeinterface #32,  2           // InterfaceMethod javax/servlet/http/HttpSession.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
     280: astore        7
     282: aload_0
     283: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     286: invokeinterface #22,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     291: ifeq          338
     294: aload_0
     295: getfield      #21                 // Field logger:Lorg/apache/commons/logging/Log;
     298: new           #13                 // class java/lang/StringBuilder
     301: dup
     302: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     305: ldc           #33                 // String Exposing session attribute \'
     307: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     310: aload         6
     312: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: ldc           #24                 // String \' with value [
     317: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: aload         7
     322: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     325: ldc           #26                 // String ] to model
     327: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     330: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     333: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     338: aload_1
     339: aload         6
     341: aload         7
     343: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     348: pop
     349: goto          198
     352: aload_0
     353: getfield      #6                  // Field exposeSpringMacroHelpers:Z
     356: ifeq          403
     359: aload_1
     360: ldc           #35                 // String springMacroRequestContext
     362: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     367: ifeq          380
     370: new           #12                 // class javax/servlet/ServletException
     373: dup
     374: ldc           #36                 // String Cannot expose bind macro helper \'springMacroRequestContext\' because of an existing model object of the same name
     376: invokespecial #19                 // Method javax/servlet/ServletException."<init>":(Ljava/lang/String;)V
     379: athrow
     380: aload_1
     381: ldc           #35                 // String springMacroRequestContext
     383: new           #37                 // class org/springframework/web/servlet/support/RequestContext
     386: dup
     387: aload_2
     388: aload_3
     389: aload_0
     390: invokevirtual #38                 // Method getServletContext:()Ljavax/servlet/ServletContext;
     393: aload_1
     394: invokespecial #39                 // Method org/springframework/web/servlet/support/RequestContext."<init>":(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/ServletContext;Ljava/util/Map;)V
     397: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     402: pop
     403: aload_0
     404: aload_3
     405: invokevirtual #40                 // Method applyContentType:(Ljavax/servlet/http/HttpServletResponse;)V
     408: aload_0
     409: aload_1
     410: aload_2
     411: aload_3
     412: invokevirtual #41                 // Method renderMergedTemplateModel:(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
     415: return

  protected void applyContentType(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getContentType:()Ljava/lang/String;
       6: ifnonnull     19
       9: aload_1
      10: aload_0
      11: invokevirtual #43                 // Method getContentType:()Ljava/lang/String;
      14: invokeinterface #44,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setContentType:(Ljava/lang/String;)V
      19: return

  protected abstract void renderMergedTemplateModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
}
