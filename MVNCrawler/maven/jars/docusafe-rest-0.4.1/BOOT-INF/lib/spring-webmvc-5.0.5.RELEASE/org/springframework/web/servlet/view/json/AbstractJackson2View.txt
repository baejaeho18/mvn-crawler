Compiled from "AbstractJackson2View.java"
public abstract class org.springframework.web.servlet.view.json.AbstractJackson2View extends org.springframework.web.servlet.view.AbstractView {
  private com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private com.fasterxml.jackson.core.JsonEncoding encoding;

  private java.lang.Boolean prettyPrint;

  private boolean disableCaching;

  protected boolean updateContentLength;

  protected org.springframework.web.servlet.view.json.AbstractJackson2View(com.fasterxml.jackson.databind.ObjectMapper, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/view/AbstractView."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/fasterxml/jackson/core/JsonEncoding.UTF8:Lcom/fasterxml/jackson/core/JsonEncoding;
       8: putfield      #3                  // Field encoding:Lcom/fasterxml/jackson/core/JsonEncoding;
      11: aload_0
      12: iconst_1
      13: putfield      #4                  // Field disableCaching:Z
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field updateContentLength:Z
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      26: aload_0
      27: invokespecial #7                  // Method configurePrettyPrint:()V
      30: aload_0
      31: aload_2
      32: invokevirtual #8                  // Method setContentType:(Ljava/lang/String;)V
      35: aload_0
      36: iconst_0
      37: invokevirtual #9                  // Method setExposePathVariables:(Z)V
      40: return

  public void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       5: aload_0
       6: invokespecial #7                  // Method configurePrettyPrint:()V
       9: return

  public final com.fasterxml.jackson.databind.ObjectMapper getObjectMapper();
    Code:
       0: aload_0
       1: getfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: areturn

  public void setEncoding(com.fasterxml.jackson.core.JsonEncoding);
    Code:
       0: aload_1
       1: ldc           #10                 // String \'encoding\' must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field encoding:Lcom/fasterxml/jackson/core/JsonEncoding;
      11: return

  public final com.fasterxml.jackson.core.JsonEncoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #3                  // Field encoding:Lcom/fasterxml/jackson/core/JsonEncoding;
       4: areturn

  public void setPrettyPrint(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #13                 // Field prettyPrint:Ljava/lang/Boolean;
       8: aload_0
       9: invokespecial #7                  // Method configurePrettyPrint:()V
      12: return

  private void configurePrettyPrint();
    Code:
       0: aload_0
       1: getfield      #13                 // Field prettyPrint:Ljava/lang/Boolean;
       4: ifnull        25
       7: aload_0
       8: getfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      11: getstatic     #14                 // Field com/fasterxml/jackson/databind/SerializationFeature.INDENT_OUTPUT:Lcom/fasterxml/jackson/databind/SerializationFeature;
      14: aload_0
      15: getfield      #13                 // Field prettyPrint:Ljava/lang/Boolean;
      18: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
      21: invokevirtual #16                 // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/SerializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
      24: pop
      25: return

  public void setDisableCaching(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field disableCaching:Z
       5: return

  public void setUpdateContentLength(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field updateContentLength:Z
       5: return

  protected void prepareResponse(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method setResponseContentType:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_2
       7: aload_0
       8: getfield      #3                  // Field encoding:Lcom/fasterxml/jackson/core/JsonEncoding;
      11: invokevirtual #18                 // Method com/fasterxml/jackson/core/JsonEncoding.getJavaName:()Ljava/lang/String;
      14: invokeinterface #19,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setCharacterEncoding:(Ljava/lang/String;)V
      19: aload_0
      20: getfield      #4                  // Field disableCaching:Z
      23: ifeq          36
      26: aload_2
      27: ldc           #20                 // String Cache-Control
      29: ldc           #21                 // String no-store
      31: invokeinterface #22,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      36: return

  protected void renderMergedOutputModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #5                  // Field updateContentLength:Z
       7: ifeq          23
      10: aload_0
      11: invokevirtual #23                 // Method createTemporaryOutputStream:()Ljava/io/ByteArrayOutputStream;
      14: astore        4
      16: aload         4
      18: astore        5
      20: goto          31
      23: aload_3
      24: invokeinterface #24,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
      29: astore        5
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #25                 // Method filterAndWrapModel:(Ljava/util/Map;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/Object;
      37: astore        6
      39: aload_0
      40: aload         5
      42: aload         6
      44: invokevirtual #26                 // Method writeContent:(Ljava/io/OutputStream;Ljava/lang/Object;)V
      47: aload         4
      49: ifnull        59
      52: aload_0
      53: aload_3
      54: aload         4
      56: invokevirtual #27                 // Method writeToResponse:(Ljavax/servlet/http/HttpServletResponse;Ljava/io/ByteArrayOutputStream;)V
      59: return

  protected java.lang.Object filterAndWrapModel(java.util.Map<java.lang.String, java.lang.Object>, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method filterModel:(Ljava/util/Map;)Ljava/lang/Object;
       5: astore_3
       6: aload_1
       7: ldc           #29                 // class com/fasterxml/jackson/annotation/JsonView
       9: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #32                 // class java/lang/Class
      20: astore        4
      22: aload_1
      23: ldc           #33                 // class com/fasterxml/jackson/databind/ser/FilterProvider
      25: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #33                 // class com/fasterxml/jackson/databind/ser/FilterProvider
      36: astore        5
      38: aload         4
      40: ifnonnull     48
      43: aload         5
      45: ifnull        85
      48: new           #34                 // class org/springframework/http/converter/json/MappingJacksonValue
      51: dup
      52: aload_3
      53: invokespecial #35                 // Method org/springframework/http/converter/json/MappingJacksonValue."<init>":(Ljava/lang/Object;)V
      56: astore        6
      58: aload         4
      60: ifnull        70
      63: aload         6
      65: aload         4
      67: invokevirtual #36                 // Method org/springframework/http/converter/json/MappingJacksonValue.setSerializationView:(Ljava/lang/Class;)V
      70: aload         5
      72: ifnull        82
      75: aload         6
      77: aload         5
      79: invokevirtual #37                 // Method org/springframework/http/converter/json/MappingJacksonValue.setFilters:(Lcom/fasterxml/jackson/databind/ser/FilterProvider;)V
      82: aload         6
      84: astore_3
      85: aload_3
      86: areturn

  protected void writeContent(java.io.OutputStream, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: invokevirtual #38                 // Method com/fasterxml/jackson/databind/ObjectMapper.getFactory:()Lcom/fasterxml/jackson/core/JsonFactory;
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field encoding:Lcom/fasterxml/jackson/core/JsonEncoding;
      12: invokevirtual #39                 // Method com/fasterxml/jackson/core/JsonFactory.createGenerator:(Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;
      15: astore_3
      16: aload_0
      17: aload_3
      18: aload_2
      19: invokevirtual #40                 // Method writePrefix:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;)V
      22: aconst_null
      23: astore        4
      25: aconst_null
      26: astore        5
      28: aload_2
      29: astore        6
      31: aload         6
      33: instanceof    #34                 // class org/springframework/http/converter/json/MappingJacksonValue
      36: ifeq          67
      39: aload         6
      41: checkcast     #34                 // class org/springframework/http/converter/json/MappingJacksonValue
      44: astore        7
      46: aload         7
      48: invokevirtual #41                 // Method org/springframework/http/converter/json/MappingJacksonValue.getValue:()Ljava/lang/Object;
      51: astore        6
      53: aload         7
      55: invokevirtual #42                 // Method org/springframework/http/converter/json/MappingJacksonValue.getSerializationView:()Ljava/lang/Class;
      58: astore        4
      60: aload         7
      62: invokevirtual #43                 // Method org/springframework/http/converter/json/MappingJacksonValue.getFilters:()Lcom/fasterxml/jackson/databind/ser/FilterProvider;
      65: astore        5
      67: aload         4
      69: ifnull        90
      72: aload_0
      73: getfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      76: aload         4
      78: invokevirtual #44                 // Method com/fasterxml/jackson/databind/ObjectMapper.writerWithView:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/ObjectWriter;
      81: aload_3
      82: aload         6
      84: invokevirtual #45                 // Method com/fasterxml/jackson/databind/ObjectWriter.writeValue:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;)V
      87: goto          123
      90: aload         5
      92: ifnull        113
      95: aload_0
      96: getfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      99: aload         5
     101: invokevirtual #46                 // Method com/fasterxml/jackson/databind/ObjectMapper.writer:(Lcom/fasterxml/jackson/databind/ser/FilterProvider;)Lcom/fasterxml/jackson/databind/ObjectWriter;
     104: aload_3
     105: aload         6
     107: invokevirtual #45                 // Method com/fasterxml/jackson/databind/ObjectWriter.writeValue:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;)V
     110: goto          123
     113: aload_0
     114: getfield      #6                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     117: aload_3
     118: aload         6
     120: invokevirtual #47                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValue:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;)V
     123: aload_0
     124: aload_3
     125: aload_2
     126: invokevirtual #48                 // Method writeSuffix:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;)V
     129: aload_3
     130: invokevirtual #49                 // Method com/fasterxml/jackson/core/JsonGenerator.flush:()V
     133: return

  public abstract void setModelKey(java.lang.String);

  protected abstract java.lang.Object filterModel(java.util.Map<java.lang.String, java.lang.Object>);

  protected void writePrefix(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException;
    Code:
       0: return

  protected void writeSuffix(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException;
    Code:
       0: return
}
