Compiled from "SimpleMappingExceptionResolver.java"
public class org.springframework.web.servlet.handler.SimpleMappingExceptionResolver extends org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver {
  public static final java.lang.String DEFAULT_EXCEPTION_ATTRIBUTE;

  private java.util.Properties exceptionMappings;

  private java.lang.Class<?>[] excludedExceptions;

  private java.lang.String defaultErrorView;

  private java.lang.Integer defaultStatusCode;

  private java.util.Map<java.lang.String, java.lang.Integer> statusCodes;

  private java.lang.String exceptionAttribute;

  public org.springframework.web.servlet.handler.SimpleMappingExceptionResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field statusCodes:Ljava/util/Map;
      15: aload_0
      16: ldc           #6                  // String exception
      18: putfield      #7                  // Field exceptionAttribute:Ljava/lang/String;
      21: return

  public void setExceptionMappings(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field exceptionMappings:Ljava/util/Properties;
       5: return

  public void setExcludedExceptions(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field excludedExceptions:[Ljava/lang/Class;
       5: return

  public void setDefaultErrorView(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field defaultErrorView:Ljava/lang/String;
       5: return

  public void setStatusCodes(java.util.Properties);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
       4: astore_2
       5: aload_2
       6: invokeinterface #12,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      11: ifeq          50
      14: aload_2
      15: invokeinterface #13,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      20: checkcast     #14                 // class java/lang/String
      23: astore_3
      24: aload_1
      25: aload_3
      26: invokevirtual #15                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      29: invokestatic  #16                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      32: astore        4
      34: aload_0
      35: getfield      #4                  // Field statusCodes:Ljava/util/Map;
      38: aload_3
      39: aload         4
      41: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: goto          5
      50: return

  public void addStatusCode(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field statusCodes:Ljava/util/Map;
       4: aload_1
       5: iload_2
       6: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public java.util.Map<java.lang.String, java.lang.Integer> getStatusCodesAsMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field statusCodes:Ljava/util/Map;
       4: invokestatic  #19                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public void setDefaultStatusCode(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #20                 // Field defaultStatusCode:Ljava/lang/Integer;
       8: return

  public void setExceptionAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field exceptionAttribute:Ljava/lang/String;
       5: return

  protected org.springframework.web.servlet.ModelAndView doResolveException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, java.lang.Exception);
    Code:
       0: aload_0
       1: aload         4
       3: aload_1
       4: invokevirtual #21                 // Method determineViewName:(Ljava/lang/Exception;Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;
       7: astore        5
       9: aload         5
      11: ifnull        49
      14: aload_0
      15: aload_1
      16: aload         5
      18: invokevirtual #22                 // Method determineStatusCode:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/Integer;
      21: astore        6
      23: aload         6
      25: ifnull        39
      28: aload_0
      29: aload_1
      30: aload_2
      31: aload         6
      33: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      36: invokevirtual #24                 // Method applyStatusCodeIfPossible:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;I)V
      39: aload_0
      40: aload         5
      42: aload         4
      44: aload_1
      45: invokevirtual #25                 // Method getModelAndView:(Ljava/lang/String;Ljava/lang/Exception;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;
      48: areturn
      49: aconst_null
      50: areturn

  protected java.lang.String determineViewName(java.lang.Exception, javax.servlet.http.HttpServletRequest);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #9                  // Field excludedExceptions:[Ljava/lang/Class;
       6: ifnull        57
       9: aload_0
      10: getfield      #9                  // Field excludedExceptions:[Ljava/lang/Class;
      13: astore        4
      15: aload         4
      17: arraylength
      18: istore        5
      20: iconst_0
      21: istore        6
      23: iload         6
      25: iload         5
      27: if_icmpge     57
      30: aload         4
      32: iload         6
      34: aaload
      35: astore        7
      37: aload         7
      39: aload_1
      40: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: invokevirtual #27                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          51
      49: aconst_null
      50: areturn
      51: iinc          6, 1
      54: goto          23
      57: aload_0
      58: getfield      #8                  // Field exceptionMappings:Ljava/util/Properties;
      61: ifnull        74
      64: aload_0
      65: aload_0
      66: getfield      #8                  // Field exceptionMappings:Ljava/util/Properties;
      69: aload_1
      70: invokevirtual #28                 // Method findMatchingViewName:(Ljava/util/Properties;Ljava/lang/Exception;)Ljava/lang/String;
      73: astore_3
      74: aload_3
      75: ifnonnull     153
      78: aload_0
      79: getfield      #10                 // Field defaultErrorView:Ljava/lang/String;
      82: ifnull        153
      85: aload_0
      86: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      89: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      94: ifeq          148
      97: aload_0
      98: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
     101: new           #31                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #33                 // String Resolving to default view \'
     110: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: getfield      #10                 // Field defaultErrorView:Ljava/lang/String;
     117: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #35                 // String \' for exception of type [
     122: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     129: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
     132: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #37                 // String ]
     137: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     148: aload_0
     149: getfield      #10                 // Field defaultErrorView:Ljava/lang/String;
     152: astore_3
     153: aload_3
     154: areturn

  protected java.lang.String findMatchingViewName(java.util.Properties, java.lang.Exception);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: ldc           #41                 // int 2147483647
       7: istore        5
       9: aload_1
      10: invokevirtual #11                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
      13: astore        6
      15: aload         6
      17: invokeinterface #12,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      22: ifeq          101
      25: aload         6
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      32: checkcast     #14                 // class java/lang/String
      35: astore        7
      37: aload_0
      38: aload         7
      40: aload_2
      41: invokevirtual #42                 // Method getDepth:(Ljava/lang/String;Ljava/lang/Exception;)I
      44: istore        8
      46: iload         8
      48: iflt          98
      51: iload         8
      53: iload         5
      55: if_icmplt     83
      58: iload         8
      60: iload         5
      62: if_icmpne     98
      65: aload         4
      67: ifnull        98
      70: aload         7
      72: invokevirtual #43                 // Method java/lang/String.length:()I
      75: aload         4
      77: invokevirtual #43                 // Method java/lang/String.length:()I
      80: if_icmple     98
      83: iload         8
      85: istore        5
      87: aload         7
      89: astore        4
      91: aload_1
      92: aload         7
      94: invokevirtual #15                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      97: astore_3
      98: goto          15
     101: aload_3
     102: ifnull        175
     105: aload_0
     106: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
     109: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     114: ifeq          175
     117: aload_0
     118: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
     121: new           #31                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #44                 // String Resolving to view \'
     130: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_3
     134: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #35                 // String \' for exception of type [
     139: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_2
     143: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     146: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
     149: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #45                 // String ], based on exception mapping [
     154: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: aload         4
     159: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: ldc           #37                 // String ]
     164: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     175: aload_3
     176: areturn

  protected int getDepth(java.lang.String, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: iconst_0
       7: invokespecial #46                 // Method getDepth:(Ljava/lang/String;Ljava/lang/Class;I)I
      10: ireturn

  private int getDepth(java.lang.String, java.lang.Class<?>, int);
    Code:
       0: aload_2
       1: invokevirtual #36                 // Method java/lang/Class.getName:()Ljava/lang/String;
       4: aload_1
       5: invokevirtual #47                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       8: ifeq          13
      11: iload_3
      12: ireturn
      13: aload_2
      14: ldc           #48                 // class java/lang/Throwable
      16: if_acmpne     21
      19: iconst_m1
      20: ireturn
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokevirtual #49                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      27: iload_3
      28: iconst_1
      29: iadd
      30: invokespecial #46                 // Method getDepth:(Ljava/lang/String;Ljava/lang/Class;I)I
      33: ireturn

  protected java.lang.Integer determineStatusCode(javax.servlet.http.HttpServletRequest, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field statusCodes:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #50,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #4                  // Field statusCodes:Ljava/util/Map;
      17: aload_2
      18: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #40                 // class java/lang/Integer
      26: areturn
      27: aload_0
      28: getfield      #20                 // Field defaultStatusCode:Ljava/lang/Integer;
      31: areturn

  protected void applyStatusCodeIfPossible(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int);
    Code:
       0: aload_1
       1: invokestatic  #52                 // Method org/springframework/web/util/WebUtils.isIncludeRequest:(Ljavax/servlet/ServletRequest;)Z
       4: ifne          66
       7: aload_0
       8: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      16: ifeq          47
      19: aload_0
      20: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      23: new           #31                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #53                 // String Applying HTTP status code
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_3
      36: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      47: aload_2
      48: iload_3
      49: invokeinterface #55,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.setStatus:(I)V
      54: aload_1
      55: ldc           #57                 // String javax.servlet.error.status_code
      57: iload_3
      58: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: invokeinterface #58,  3           // InterfaceMethod javax/servlet/http/HttpServletRequest.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      66: return

  protected org.springframework.web.servlet.ModelAndView getModelAndView(java.lang.String, java.lang.Exception, javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #59                 // Method getModelAndView:(Ljava/lang/String;Ljava/lang/Exception;)Lorg/springframework/web/servlet/ModelAndView;
       6: areturn

  protected org.springframework.web.servlet.ModelAndView getModelAndView(java.lang.String, java.lang.Exception);
    Code:
       0: new           #60                 // class org/springframework/web/servlet/ModelAndView
       3: dup
       4: aload_1
       5: invokespecial #61                 // Method org/springframework/web/servlet/ModelAndView."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_0
      10: getfield      #7                  // Field exceptionAttribute:Ljava/lang/String;
      13: ifnull        74
      16: aload_0
      17: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      20: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      25: ifeq          64
      28: aload_0
      29: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      32: new           #31                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #62                 // String Exposing Exception as model attribute \'
      41: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #7                  // Field exceptionAttribute:Ljava/lang/String;
      48: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #63                 // String \'
      53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      64: aload_3
      65: aload_0
      66: getfield      #7                  // Field exceptionAttribute:Ljava/lang/String;
      69: aload_2
      70: invokevirtual #64                 // Method org/springframework/web/servlet/ModelAndView.addObject:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/web/servlet/ModelAndView;
      73: pop
      74: aload_3
      75: areturn
}
