Compiled from "ByteBufferDecoder.java"
public class org.springframework.core.codec.ByteBufferDecoder extends org.springframework.core.codec.AbstractDataBufferDecoder<java.nio.ByteBuffer> {
  public org.springframework.core.codec.ByteBufferDecoder();
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      10: aastore
      11: invokespecial #3                  // Method org/springframework/core/codec/AbstractDataBufferDecoder."<init>":([Lorg/springframework/util/MimeType;)V
      14: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #5                  // Method org/springframework/core/codec/AbstractDataBufferDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      11: ifeq          31
      14: aload_3
      15: ifnull        31
      18: ldc           #6                  // class java/nio/ByteBuffer
      20: aload_3
      21: invokevirtual #7                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  protected java.nio.ByteBuffer decodeDataBuffer(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
       6: invokestatic  #9                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       9: astore        5
      11: aload         5
      13: aload_1
      14: invokeinterface #10,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asByteBuffer:()Ljava/nio/ByteBuffer;
      19: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      22: pop
      23: aload         5
      25: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      28: pop
      29: aload_1
      30: invokestatic  #13                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      33: pop
      34: aload         5
      36: areturn

  protected java.lang.Object decodeDataBuffer(org.springframework.core.io.buffer.DataBuffer, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #14                 // Method decodeDataBuffer:(Lorg/springframework/core/io/buffer/DataBuffer;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Ljava/nio/ByteBuffer;
       9: areturn
}
