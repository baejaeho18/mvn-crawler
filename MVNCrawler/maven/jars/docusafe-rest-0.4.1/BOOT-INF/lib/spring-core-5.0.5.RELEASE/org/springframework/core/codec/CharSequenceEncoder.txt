Compiled from "CharSequenceEncoder.java"
public class org.springframework.core.codec.CharSequenceEncoder extends org.springframework.core.codec.AbstractEncoder<java.lang.CharSequence> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private org.springframework.core.codec.CharSequenceEncoder(org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/core/codec/AbstractEncoder."<init>":([Lorg/springframework/util/MimeType;)V
       5: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ldc           #2                  // class java/lang/Object
       3: invokevirtual #3                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
       6: astore_3
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #4                  // Method org/springframework/core/codec/AbstractEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      13: ifeq          29
      16: ldc           #5                  // class java/lang/CharSequence
      18: aload_3
      19: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<? extends java.lang.CharSequence>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #7                  // Method getCharset:(Lorg/springframework/util/MimeType;)Ljava/nio/charset/Charset;
       6: astore        6
       8: aload_1
       9: invokestatic  #8                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: aload         6
      14: aload_2
      15: invokedynamic #9,  0              // InvokeDynamic #0:apply:(Ljava/nio/charset/Charset;Lorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/function/Function;
      20: invokevirtual #10                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      23: areturn

  private java.nio.charset.Charset getCharset(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: invokevirtual #11                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
       8: ifnull        19
      11: aload_1
      12: invokevirtual #11                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      15: astore_2
      16: goto          23
      19: getstatic     #12                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      22: astore_2
      23: aload_2
      24: areturn

  public java.lang.Long getContentLength(java.lang.CharSequence, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
       6: aload_0
       7: aload_2
       8: invokespecial #7                  // Method getCharset:(Lorg/springframework/util/MimeType;)Ljava/nio/charset/Charset;
      11: invokevirtual #14                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      14: arraylength
      15: i2l
      16: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: areturn

  public static org.springframework.core.codec.CharSequenceEncoder textPlainOnly();
    Code:
       0: new           #16                 // class org/springframework/core/codec/CharSequenceEncoder
       3: dup
       4: iconst_1
       5: anewarray     #17                 // class org/springframework/util/MimeType
       8: dup
       9: iconst_0
      10: new           #17                 // class org/springframework/util/MimeType
      13: dup
      14: ldc           #18                 // String text
      16: ldc           #19                 // String plain
      18: getstatic     #12                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      21: invokespecial #20                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      24: aastore
      25: invokespecial #21                 // Method "<init>":([Lorg/springframework/util/MimeType;)V
      28: areturn

  public static org.springframework.core.codec.CharSequenceEncoder allMimeTypes();
    Code:
       0: new           #16                 // class org/springframework/core/codec/CharSequenceEncoder
       3: dup
       4: iconst_2
       5: anewarray     #17                 // class org/springframework/util/MimeType
       8: dup
       9: iconst_0
      10: new           #17                 // class org/springframework/util/MimeType
      13: dup
      14: ldc           #18                 // String text
      16: ldc           #19                 // String plain
      18: getstatic     #12                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      21: invokespecial #20                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      24: aastore
      25: dup
      26: iconst_1
      27: getstatic     #22                 // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      30: aastore
      31: invokespecial #21                 // Method "<init>":([Lorg/springframework/util/MimeType;)V
      34: areturn

  public java.lang.Long getContentLength(java.lang.Object, org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #23                 // Method getContentLength:(Ljava/lang/CharSequence;Lorg/springframework/util/MimeType;)Ljava/lang/Long;
       9: areturn

  private static org.springframework.core.io.buffer.DataBuffer lambda$encode$0(java.nio.charset.Charset, org.springframework.core.io.buffer.DataBufferFactory, java.lang.CharSequence);
    Code:
       0: aload_2
       1: invokestatic  #24                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #25                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
      10: astore        4
      12: aload_1
      13: aload         4
      15: invokeinterface #26,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:(Ljava/nio/ByteBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
      20: areturn

  static {};
    Code:
       0: getstatic     #27                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #12                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: return
}
