Compiled from "SocketUtils.java"
abstract class org.springframework.util.SocketUtils$SocketType extends java.lang.Enum<org.springframework.util.SocketUtils$SocketType> {
  public static final org.springframework.util.SocketUtils$SocketType TCP;

  public static final org.springframework.util.SocketUtils$SocketType UDP;

  private static final org.springframework.util.SocketUtils$SocketType[] $VALUES;

  public static org.springframework.util.SocketUtils$SocketType[] values();
    Code:
       0: getstatic     #3                  // Field $VALUES:[Lorg/springframework/util/SocketUtils$SocketType;
       3: invokevirtual #4                  // Method "[Lorg/springframework/util/SocketUtils$SocketType;".clone:()Ljava/lang/Object;
       6: checkcast     #5                  // class "[Lorg/springframework/util/SocketUtils$SocketType;"
       9: areturn

  public static org.springframework.util.SocketUtils$SocketType valueOf(java.lang.String);
    Code:
       0: ldc           #6                  // class org/springframework/util/SocketUtils$SocketType
       2: aload_0
       3: invokestatic  #7                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #6                  // class org/springframework/util/SocketUtils$SocketType
       9: areturn

  private org.springframework.util.SocketUtils$SocketType();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #8                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  protected abstract boolean isPortAvailable(int);

  private int findRandomPort(int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: istore_3
       4: iload_1
       5: invokestatic  #9                  // Method org/springframework/util/SocketUtils.access$100:()Ljava/util/Random;
       8: iload_3
       9: iconst_1
      10: iadd
      11: invokevirtual #10                 // Method java/util/Random.nextInt:(I)I
      14: iadd
      15: ireturn

  int findAvailablePort(int, int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #11                 // String \'minPort\' must be greater than 0
      11: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: iload_2
      15: iload_1
      16: if_icmplt     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #13                 // String \'maxPort\' must be greater than or equal to \'minPort\'
      26: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      29: iload_2
      30: ldc           #14                 // int 65535
      32: if_icmpgt     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc           #15                 // String \'maxPort\' must be less than or equal to 65535
      42: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      45: iload_2
      46: iload_1
      47: isub
      48: istore_3
      49: iconst_0
      50: istore        5
      52: iload         5
      54: iload_3
      55: if_icmple     104
      58: new           #16                 // class java/lang/IllegalStateException
      61: dup
      62: ldc           #17                 // String Could not find an available %s port in the range [%d, %d] after %d attempts
      64: iconst_4
      65: anewarray     #18                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_0
      71: invokevirtual #19                 // Method name:()Ljava/lang/String;
      74: aastore
      75: dup
      76: iconst_1
      77: iload_1
      78: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: aastore
      82: dup
      83: iconst_2
      84: iload_2
      85: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aastore
      89: dup
      90: iconst_3
      91: iload         5
      93: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: aastore
      97: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     100: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_0
     105: iload_1
     106: iload_2
     107: invokespecial #23                 // Method findRandomPort:(II)I
     110: istore        4
     112: iinc          5, 1
     115: aload_0
     116: iload         4
     118: invokevirtual #24                 // Method isPortAvailable:(I)Z
     121: ifeq          52
     124: iload         4
     126: ireturn

  java.util.SortedSet<java.lang.Integer> findAvailablePorts(int, int, int);
    Code:
       0: iload_2
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #11                 // String \'minPort\' must be greater than 0
      11: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: iload_3
      15: iload_2
      16: if_icmple     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #25                 // String \'maxPort\' must be greater than \'minPort\'
      26: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      29: iload_3
      30: ldc           #14                 // int 65535
      32: if_icmpgt     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc           #15                 // String \'maxPort\' must be less than or equal to 65535
      42: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      45: iload_1
      46: ifle          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #26                 // String \'numRequested\' must be greater than 0
      56: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      59: iload_3
      60: iload_2
      61: isub
      62: iload_1
      63: if_icmplt     70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ldc           #27                 // String \'numRequested\' must not be greater than \'maxPort\' - \'minPort\'
      73: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      76: new           #28                 // class java/util/TreeSet
      79: dup
      80: invokespecial #29                 // Method java/util/TreeSet."<init>":()V
      83: astore        4
      85: iconst_0
      86: istore        5
      88: iinc          5, 1
      91: iload         5
      93: iload_1
      94: bipush        100
      96: iadd
      97: if_icmpgt     131
     100: aload         4
     102: invokeinterface #30,  1           // InterfaceMethod java/util/SortedSet.size:()I
     107: iload_1
     108: if_icmpge     131
     111: aload         4
     113: aload_0
     114: iload_2
     115: iload_3
     116: invokevirtual #31                 // Method findAvailablePort:(II)I
     119: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     122: invokeinterface #32,  2           // InterfaceMethod java/util/SortedSet.add:(Ljava/lang/Object;)Z
     127: pop
     128: goto          88
     131: aload         4
     133: invokeinterface #30,  1           // InterfaceMethod java/util/SortedSet.size:()I
     138: iload_1
     139: if_icmpeq     187
     142: new           #16                 // class java/lang/IllegalStateException
     145: dup
     146: ldc           #33                 // String Could not find %d available %s ports in the range [%d, %d]
     148: iconst_4
     149: anewarray     #18                 // class java/lang/Object
     152: dup
     153: iconst_0
     154: iload_1
     155: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     158: aastore
     159: dup
     160: iconst_1
     161: aload_0
     162: invokevirtual #19                 // Method name:()Ljava/lang/String;
     165: aastore
     166: dup
     167: iconst_2
     168: iload_2
     169: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     172: aastore
     173: dup
     174: iconst_3
     175: iload_3
     176: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     179: aastore
     180: invokestatic  #21                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     183: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     186: athrow
     187: aload         4
     189: areturn

  org.springframework.util.SocketUtils$SocketType(java.lang.String, int, org.springframework.util.SocketUtils$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #34                 // class org/springframework/util/SocketUtils$SocketType$1
       3: dup
       4: ldc           #35                 // String TCP
       6: iconst_0
       7: invokespecial #36                 // Method org/springframework/util/SocketUtils$SocketType$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #37                 // Field TCP:Lorg/springframework/util/SocketUtils$SocketType;
      13: new           #38                 // class org/springframework/util/SocketUtils$SocketType$2
      16: dup
      17: ldc           #39                 // String UDP
      19: iconst_1
      20: invokespecial #40                 // Method org/springframework/util/SocketUtils$SocketType$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #41                 // Field UDP:Lorg/springframework/util/SocketUtils$SocketType;
      26: iconst_2
      27: anewarray     #6                  // class org/springframework/util/SocketUtils$SocketType
      30: dup
      31: iconst_0
      32: getstatic     #37                 // Field TCP:Lorg/springframework/util/SocketUtils$SocketType;
      35: aastore
      36: dup
      37: iconst_1
      38: getstatic     #41                 // Field UDP:Lorg/springframework/util/SocketUtils$SocketType;
      41: aastore
      42: putstatic     #3                  // Field $VALUES:[Lorg/springframework/util/SocketUtils$SocketType;
      45: return
}
