Compiled from "AbstractEncoder.java"
public abstract class org.springframework.core.codec.AbstractEncoder<T> implements org.springframework.core.codec.Encoder<T> {
  private final java.util.List<org.springframework.util.MimeType> encodableMimeTypes;

  protected org.springframework.core.codec.AbstractEncoder(org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       9: putfield      #3                  // Field encodableMimeTypes:Ljava/util/List;
      12: return

  public java.util.List<org.springframework.util.MimeType> getEncodableMimeTypes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field encodableMimeTypes:Ljava/util/List;
       4: areturn

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: getfield      #3                  // Field encodableMimeTypes:Ljava/util/List;
      10: invokeinterface #4,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      15: aload_2
      16: invokedynamic #5,  0              // InvokeDynamic #0:test:(Lorg/springframework/util/MimeType;)Ljava/util/function/Predicate;
      21: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      26: ireturn

  private static boolean lambda$canEncode$0(org.springframework.util.MimeType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #7                  // Method org/springframework/util/MimeType.isCompatibleWith:(Lorg/springframework/util/MimeType;)Z
       5: ireturn
}
