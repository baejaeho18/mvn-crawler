Compiled from "FileSystemResource.java"
public class org.springframework.core.io.FileSystemResource extends org.springframework.core.io.AbstractResource implements org.springframework.core.io.WritableResource {
  private final java.io.File file;

  private final java.lang.String path;

  public org.springframework.core.io.FileSystemResource(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/core/io/AbstractResource."<init>":()V
       4: aload_1
       5: ldc           #2                  // String File must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field file:Ljava/io/File;
      15: aload_0
      16: aload_1
      17: invokevirtual #5                  // Method java/io/File.getPath:()Ljava/lang/String;
      20: invokestatic  #6                  // Method org/springframework/util/StringUtils.cleanPath:(Ljava/lang/String;)Ljava/lang/String;
      23: putfield      #7                  // Field path:Ljava/lang/String;
      26: return

  public org.springframework.core.io.FileSystemResource(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/core/io/AbstractResource."<init>":()V
       4: aload_1
       5: ldc           #8                  // String Path must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: new           #9                  // class java/io/File
      14: dup
      15: aload_1
      16: invokespecial #10                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      19: putfield      #4                  // Field file:Ljava/io/File;
      22: aload_0
      23: aload_1
      24: invokestatic  #6                  // Method org/springframework/util/StringUtils.cleanPath:(Ljava/lang/String;)Ljava/lang/String;
      27: putfield      #7                  // Field path:Ljava/lang/String;
      30: return

  public final java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #7                  // Field path:Ljava/lang/String;
       4: areturn

  public boolean exists();
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #11                 // Method java/io/File.exists:()Z
       7: ireturn

  public boolean isReadable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #12                 // Method java/io/File.canRead:()Z
       7: ifeq          24
      10: aload_0
      11: getfield      #4                  // Field file:Ljava/io/File;
      14: invokevirtual #13                 // Method java/io/File.isDirectory:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #14                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       7: iconst_0
       8: anewarray     #15                 // class java/nio/file/OpenOption
      11: invokestatic  #16                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      14: areturn
      15: astore_1
      16: new           #18                 // class java/io/FileNotFoundException
      19: dup
      20: aload_1
      21: invokevirtual #19                 // Method java/nio/file/NoSuchFileException.getMessage:()Ljava/lang/String;
      24: invokespecial #20                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      27: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/nio/file/NoSuchFileException

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #21                 // Method java/io/File.canWrite:()Z
       7: ifeq          24
      10: aload_0
      11: getfield      #4                  // Field file:Ljava/io/File;
      14: invokevirtual #13                 // Method java/io/File.isDirectory:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #14                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       7: iconst_0
       8: anewarray     #15                 // class java/nio/file/OpenOption
      11: invokestatic  #22                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      14: areturn

  public java.net.URL getURL() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #23                 // Method java/io/File.toURI:()Ljava/net/URI;
       7: invokevirtual #24                 // Method java/net/URI.toURL:()Ljava/net/URL;
      10: areturn

  public java.net.URI getURI() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #23                 // Method java/io/File.toURI:()Ljava/net/URI;
       7: areturn

  public boolean isFile();
    Code:
       0: iconst_1
       1: ireturn

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: areturn

  public java.nio.channels.ReadableByteChannel readableChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #14                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       7: iconst_1
       8: anewarray     #15                 // class java/nio/file/OpenOption
      11: dup
      12: iconst_0
      13: getstatic     #25                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;
      16: aastore
      17: invokestatic  #26                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      20: areturn
      21: astore_1
      22: new           #18                 // class java/io/FileNotFoundException
      25: dup
      26: aload_1
      27: invokevirtual #19                 // Method java/nio/file/NoSuchFileException.getMessage:()Ljava/lang/String;
      30: invokespecial #20                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      33: athrow
    Exception table:
       from    to  target type
           0    20    21   Class java/nio/file/NoSuchFileException

  public java.nio.channels.WritableByteChannel writableChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #14                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       7: iconst_1
       8: anewarray     #15                 // class java/nio/file/OpenOption
      11: dup
      12: iconst_0
      13: getstatic     #27                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
      16: aastore
      17: invokestatic  #26                 // Method java/nio/channels/FileChannel.open:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
      20: areturn

  public long contentLength() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #28                 // Method java/io/File.length:()J
       7: lreturn

  public org.springframework.core.io.Resource createRelative(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field path:Ljava/lang/String;
       4: aload_1
       5: invokestatic  #29                 // Method org/springframework/util/StringUtils.applyRelativePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: new           #30                 // class org/springframework/core/io/FileSystemResource
      12: dup
      13: aload_2
      14: invokespecial #31                 // Method "<init>":(Ljava/lang/String;)V
      17: areturn

  public java.lang.String getFilename();
    Code:
       0: aload_0
       1: getfield      #4                  // Field file:Ljava/io/File;
       4: invokevirtual #32                 // Method java/io/File.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getDescription();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String file [
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field file:Ljava/io/File;
      16: invokevirtual #37                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      19: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #38                 // String ]
      24: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     29
       5: aload_1
       6: instanceof    #30                 // class org/springframework/core/io/FileSystemResource
       9: ifeq          33
      12: aload_0
      13: getfield      #7                  // Field path:Ljava/lang/String;
      16: aload_1
      17: checkcast     #30                 // class org/springframework/core/io/FileSystemResource
      20: getfield      #7                  // Field path:Ljava/lang/String;
      23: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field path:Ljava/lang/String;
       4: invokevirtual #41                 // Method java/lang/String.hashCode:()I
       7: ireturn
}
