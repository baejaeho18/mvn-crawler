Compiled from "BasicOutputBuffer.java"
public class org.bson.io.BasicOutputBuffer extends org.bson.io.OutputBuffer {
  private byte[] buffer;

  private int position;

  public org.bson.io.BasicOutputBuffer();
    Code:
       0: aload_0
       1: sipush        1024
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public org.bson.io.BasicOutputBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/bson/io/OutputBuffer."<init>":()V
       4: aload_0
       5: sipush        1024
       8: newarray       byte
      10: putfield      #3                  // Field buffer:[B
      13: aload_0
      14: iload_1
      15: newarray       byte
      17: putfield      #3                  // Field buffer:[B
      20: return

  public byte[] getInternalBuffer();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: areturn

  public void write(byte[]);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: aload_0
       5: aload_1
       6: iconst_0
       7: aload_1
       8: arraylength
       9: invokevirtual #5                  // Method write:([BII)V
      12: return

  public void writeBytes(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: aload_0
       5: iload_3
       6: invokespecial #6                  // Method ensure:(I)V
       9: aload_1
      10: iload_2
      11: aload_0
      12: getfield      #3                  // Field buffer:[B
      15: aload_0
      16: getfield      #7                  // Field position:I
      19: iload_3
      20: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      23: aload_0
      24: dup
      25: getfield      #7                  // Field position:I
      28: iload_3
      29: iadd
      30: putfield      #7                  // Field position:I
      33: return

  public void writeByte(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: aload_0
       5: iconst_1
       6: invokespecial #6                  // Method ensure:(I)V
       9: aload_0
      10: getfield      #3                  // Field buffer:[B
      13: aload_0
      14: dup
      15: getfield      #7                  // Field position:I
      18: dup_x1
      19: iconst_1
      20: iadd
      21: putfield      #7                  // Field position:I
      24: sipush        255
      27: iload_1
      28: iand
      29: i2b
      30: bastore
      31: return

  protected void write(int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: iload_1
       5: ifge          32
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #10                 // String position must be >= 0 but was %d
      14: iconst_1
      15: anewarray     #11                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: iload_1
      21: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iload_1
      33: aload_0
      34: getfield      #7                  // Field position:I
      37: iconst_1
      38: isub
      39: if_icmple     78
      42: new           #9                  // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #15                 // String position must be <= %d but was %d
      48: iconst_2
      49: anewarray     #11                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_0
      55: getfield      #7                  // Field position:I
      58: iconst_1
      59: isub
      60: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: aastore
      64: dup
      65: iconst_1
      66: iload_1
      67: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      70: aastore
      71: invokestatic  #13                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: getfield      #3                  // Field buffer:[B
      82: iload_1
      83: sipush        255
      86: iload_2
      87: iand
      88: i2b
      89: bastore
      90: return

  public int getPosition();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: aload_0
       5: getfield      #7                  // Field position:I
       8: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: aload_0
       5: getfield      #7                  // Field position:I
       8: ireturn

  public int pipe(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field buffer:[B
       9: iconst_0
      10: aload_0
      11: getfield      #7                  // Field position:I
      14: invokevirtual #16                 // Method java/io/OutputStream.write:([BII)V
      17: aload_0
      18: getfield      #7                  // Field position:I
      21: ireturn

  public void truncateToPosition(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: iload_1
       5: aload_0
       6: getfield      #7                  // Field position:I
       9: if_icmpgt     16
      12: iload_1
      13: ifge          24
      16: new           #9                  // class java/lang/IllegalArgumentException
      19: dup
      20: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":()V
      23: athrow
      24: aload_0
      25: iload_1
      26: putfield      #7                  // Field position:I
      29: return

  public java.util.List<org.bson.ByteBuf> getByteBuffers();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method ensureOpen:()V
       4: iconst_1
       5: anewarray     #18                 // class org/bson/ByteBuf
       8: dup
       9: iconst_0
      10: new           #19                 // class org/bson/ByteBufNIO
      13: dup
      14: aload_0
      15: getfield      #3                  // Field buffer:[B
      18: iconst_0
      19: aload_0
      20: getfield      #7                  // Field position:I
      23: invokestatic  #20                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      26: invokevirtual #21                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      29: getstatic     #22                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      32: invokevirtual #23                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      35: invokespecial #24                 // Method org/bson/ByteBufNIO."<init>":(Ljava/nio/ByteBuffer;)V
      38: aastore
      39: invokestatic  #25                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      42: areturn

  public void close();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field buffer:[B
       5: return

  private void ensureOpen();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: ifnonnull     17
       7: new           #26                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #27                 // String The output is closed
      13: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  private void ensure(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field position:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #3                  // Field buffer:[B
      12: arraylength
      13: if_icmpgt     17
      16: return
      17: aload_0
      18: getfield      #3                  // Field buffer:[B
      21: arraylength
      22: iconst_2
      23: imul
      24: istore_3
      25: iload_3
      26: iload_2
      27: if_icmpge     36
      30: iload_2
      31: sipush        128
      34: iadd
      35: istore_3
      36: iload_3
      37: newarray       byte
      39: astore        4
      41: aload_0
      42: getfield      #3                  // Field buffer:[B
      45: iconst_0
      46: aload         4
      48: iconst_0
      49: aload_0
      50: getfield      #7                  // Field position:I
      53: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_0
      57: aload         4
      59: putfield      #3                  // Field buffer:[B
      62: return
}
