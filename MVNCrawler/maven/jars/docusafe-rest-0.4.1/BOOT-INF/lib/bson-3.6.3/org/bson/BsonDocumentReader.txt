Compiled from "BsonDocumentReader.java"
public class org.bson.BsonDocumentReader extends org.bson.AbstractBsonReader {
  private org.bson.BsonValue currentValue;

  private org.bson.BsonDocumentReader$Mark mark;

  public org.bson.BsonDocumentReader(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/bson/AbstractBsonReader."<init>":()V
       4: aload_0
       5: new           #3                  // class org/bson/BsonDocumentReader$Context
       8: dup
       9: aload_0
      10: aconst_null
      11: getstatic     #4                  // Field org/bson/BsonContextType.TOP_LEVEL:Lorg/bson/BsonContextType;
      14: aload_1
      15: invokespecial #5                  // Method org/bson/BsonDocumentReader$Context."<init>":(Lorg/bson/BsonDocumentReader;Lorg/bson/BsonDocumentReader$Context;Lorg/bson/BsonContextType;Lorg/bson/BsonDocument;)V
      18: invokevirtual #6                  // Method setContext:(Lorg/bson/AbstractBsonReader$Context;)V
      21: aload_0
      22: aload_1
      23: putfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
      26: return

  protected org.bson.BsonBinary doReadBinaryData();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #7                  // Method org/bson/BsonValue.asBinary:()Lorg/bson/BsonBinary;
       7: areturn

  protected byte doPeekBinarySubType();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #7                  // Method org/bson/BsonValue.asBinary:()Lorg/bson/BsonBinary;
       7: invokevirtual #8                  // Method org/bson/BsonBinary.getType:()B
      10: ireturn

  protected int doPeekBinarySize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #7                  // Method org/bson/BsonValue.asBinary:()Lorg/bson/BsonBinary;
       7: invokevirtual #9                  // Method org/bson/BsonBinary.getData:()[B
      10: arraylength
      11: ireturn

  protected boolean doReadBoolean();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #10                 // Method org/bson/BsonValue.asBoolean:()Lorg/bson/BsonBoolean;
       7: invokevirtual #11                 // Method org/bson/BsonBoolean.getValue:()Z
      10: ireturn

  protected long doReadDateTime();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #12                 // Method org/bson/BsonValue.asDateTime:()Lorg/bson/BsonDateTime;
       7: invokevirtual #13                 // Method org/bson/BsonDateTime.getValue:()J
      10: lreturn

  protected double doReadDouble();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #14                 // Method org/bson/BsonValue.asDouble:()Lorg/bson/BsonDouble;
       7: invokevirtual #15                 // Method org/bson/BsonDouble.getValue:()D
      10: dreturn

  protected void doReadEndArray();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
       5: invokevirtual #17                 // Method org/bson/BsonDocumentReader$Context.getParentContext:()Lorg/bson/AbstractBsonReader$Context;
       8: invokevirtual #6                  // Method setContext:(Lorg/bson/AbstractBsonReader$Context;)V
      11: return

  protected void doReadEndDocument();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
       5: invokevirtual #17                 // Method org/bson/BsonDocumentReader$Context.getParentContext:()Lorg/bson/AbstractBsonReader$Context;
       8: invokevirtual #6                  // Method setContext:(Lorg/bson/AbstractBsonReader$Context;)V
      11: getstatic     #18                 // Field org/bson/BsonDocumentReader$1.$SwitchMap$org$bson$BsonContextType:[I
      14: aload_0
      15: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
      18: invokevirtual #19                 // Method org/bson/BsonDocumentReader$Context.getContextType:()Lorg/bson/BsonContextType;
      21: invokevirtual #20                 // Method org/bson/BsonContextType.ordinal:()I
      24: iaload
      25: tableswitch   { // 1 to 3
                     1: 52
                     2: 52
                     3: 62
               default: 72
          }
      52: aload_0
      53: getstatic     #21                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      56: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      59: goto          82
      62: aload_0
      63: getstatic     #23                 // Field org/bson/AbstractBsonReader$State.DONE:Lorg/bson/AbstractBsonReader$State;
      66: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      69: goto          82
      72: new           #24                 // class org/bson/BSONException
      75: dup
      76: ldc           #25                 // String Unexpected ContextType.
      78: invokespecial #26                 // Method org/bson/BSONException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: return

  protected int doReadInt32();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #27                 // Method org/bson/BsonValue.asInt32:()Lorg/bson/BsonInt32;
       7: invokevirtual #28                 // Method org/bson/BsonInt32.getValue:()I
      10: ireturn

  protected long doReadInt64();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #29                 // Method org/bson/BsonValue.asInt64:()Lorg/bson/BsonInt64;
       7: invokevirtual #30                 // Method org/bson/BsonInt64.getValue:()J
      10: lreturn

  public org.bson.types.Decimal128 doReadDecimal128();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #31                 // Method org/bson/BsonValue.asDecimal128:()Lorg/bson/BsonDecimal128;
       7: invokevirtual #32                 // Method org/bson/BsonDecimal128.getValue:()Lorg/bson/types/Decimal128;
      10: areturn

  protected java.lang.String doReadJavaScript();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #33                 // Method org/bson/BsonValue.asJavaScript:()Lorg/bson/BsonJavaScript;
       7: invokevirtual #34                 // Method org/bson/BsonJavaScript.getCode:()Ljava/lang/String;
      10: areturn

  protected java.lang.String doReadJavaScriptWithScope();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #35                 // Method org/bson/BsonValue.asJavaScriptWithScope:()Lorg/bson/BsonJavaScriptWithScope;
       7: invokevirtual #36                 // Method org/bson/BsonJavaScriptWithScope.getCode:()Ljava/lang/String;
      10: areturn

  protected void doReadMaxKey();
    Code:
       0: return

  protected void doReadMinKey();
    Code:
       0: return

  protected void doReadNull();
    Code:
       0: return

  protected org.bson.types.ObjectId doReadObjectId();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #37                 // Method org/bson/BsonValue.asObjectId:()Lorg/bson/BsonObjectId;
       7: invokevirtual #38                 // Method org/bson/BsonObjectId.getValue:()Lorg/bson/types/ObjectId;
      10: areturn

  protected org.bson.BsonRegularExpression doReadRegularExpression();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #39                 // Method org/bson/BsonValue.asRegularExpression:()Lorg/bson/BsonRegularExpression;
       7: areturn

  protected org.bson.BsonDbPointer doReadDBPointer();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #40                 // Method org/bson/BsonValue.asDBPointer:()Lorg/bson/BsonDbPointer;
       7: areturn

  protected void doReadStartArray();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #41                 // Method org/bson/BsonValue.asArray:()Lorg/bson/BsonArray;
       7: astore_1
       8: aload_0
       9: new           #3                  // class org/bson/BsonDocumentReader$Context
      12: dup
      13: aload_0
      14: aload_0
      15: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
      18: getstatic     #42                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      21: aload_1
      22: invokespecial #43                 // Method org/bson/BsonDocumentReader$Context."<init>":(Lorg/bson/BsonDocumentReader;Lorg/bson/BsonDocumentReader$Context;Lorg/bson/BsonContextType;Lorg/bson/BsonArray;)V
      25: invokevirtual #6                  // Method setContext:(Lorg/bson/AbstractBsonReader$Context;)V
      28: return

  protected void doReadStartDocument();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #44                 // Method org/bson/BsonValue.getBsonType:()Lorg/bson/BsonType;
       7: getstatic     #45                 // Field org/bson/BsonType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonType;
      10: if_acmpne     27
      13: aload_0
      14: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
      17: invokevirtual #35                 // Method org/bson/BsonValue.asJavaScriptWithScope:()Lorg/bson/BsonJavaScriptWithScope;
      20: invokevirtual #46                 // Method org/bson/BsonJavaScriptWithScope.getScope:()Lorg/bson/BsonDocument;
      23: astore_1
      24: goto          35
      27: aload_0
      28: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
      31: invokevirtual #47                 // Method org/bson/BsonValue.asDocument:()Lorg/bson/BsonDocument;
      34: astore_1
      35: aload_0
      36: new           #3                  // class org/bson/BsonDocumentReader$Context
      39: dup
      40: aload_0
      41: aload_0
      42: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
      45: getstatic     #48                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
      48: aload_1
      49: invokespecial #5                  // Method org/bson/BsonDocumentReader$Context."<init>":(Lorg/bson/BsonDocumentReader;Lorg/bson/BsonDocumentReader$Context;Lorg/bson/BsonContextType;Lorg/bson/BsonDocument;)V
      52: invokevirtual #6                  // Method setContext:(Lorg/bson/AbstractBsonReader$Context;)V
      55: return

  protected java.lang.String doReadString();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #49                 // Method org/bson/BsonValue.asString:()Lorg/bson/BsonString;
       7: invokevirtual #50                 // Method org/bson/BsonString.getValue:()Ljava/lang/String;
      10: areturn

  protected java.lang.String doReadSymbol();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #51                 // Method org/bson/BsonValue.asSymbol:()Lorg/bson/BsonSymbol;
       7: invokevirtual #52                 // Method org/bson/BsonSymbol.getSymbol:()Ljava/lang/String;
      10: areturn

  protected org.bson.BsonTimestamp doReadTimestamp();
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: invokevirtual #53                 // Method org/bson/BsonValue.asTimestamp:()Lorg/bson/BsonTimestamp;
       7: areturn

  protected void doReadUndefined();
    Code:
       0: return

  protected void doSkipName();
    Code:
       0: return

  protected void doSkipValue();
    Code:
       0: return

  public org.bson.BsonType readBsonType();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
       4: getstatic     #55                 // Field org/bson/AbstractBsonReader$State.INITIAL:Lorg/bson/AbstractBsonReader$State;
       7: if_acmpeq     20
      10: aload_0
      11: invokevirtual #54                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      14: getstatic     #56                 // Field org/bson/AbstractBsonReader$State.SCOPE_DOCUMENT:Lorg/bson/AbstractBsonReader$State;
      17: if_acmpne     39
      20: aload_0
      21: getstatic     #57                 // Field org/bson/BsonType.DOCUMENT:Lorg/bson/BsonType;
      24: invokevirtual #58                 // Method setCurrentBsonType:(Lorg/bson/BsonType;)V
      27: aload_0
      28: getstatic     #59                 // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      31: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      34: aload_0
      35: invokevirtual #60                 // Method getCurrentBsonType:()Lorg/bson/BsonType;
      38: areturn
      39: aload_0
      40: invokevirtual #54                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      43: getstatic     #21                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      46: if_acmpeq     65
      49: aload_0
      50: ldc           #61                 // String ReadBSONType
      52: iconst_1
      53: anewarray     #62                 // class org/bson/AbstractBsonReader$State
      56: dup
      57: iconst_0
      58: getstatic     #21                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      61: aastore
      62: invokevirtual #63                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      65: getstatic     #18                 // Field org/bson/BsonDocumentReader$1.$SwitchMap$org$bson$BsonContextType:[I
      68: aload_0
      69: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
      72: invokevirtual #19                 // Method org/bson/BsonDocumentReader$Context.getContextType:()Lorg/bson/BsonContextType;
      75: invokevirtual #20                 // Method org/bson/BsonContextType.ordinal:()I
      78: iaload
      79: lookupswitch  { // 2
                     1: 104
                     2: 143
               default: 202
          }
     104: aload_0
     105: aload_0
     106: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
     109: invokevirtual #64                 // Method org/bson/BsonDocumentReader$Context.getNextValue:()Lorg/bson/BsonValue;
     112: putfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
     115: aload_0
     116: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
     119: ifnonnull     133
     122: aload_0
     123: getstatic     #65                 // Field org/bson/AbstractBsonReader$State.END_OF_ARRAY:Lorg/bson/AbstractBsonReader$State;
     126: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
     129: getstatic     #66                 // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
     132: areturn
     133: aload_0
     134: getstatic     #59                 // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
     137: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
     140: goto          212
     143: aload_0
     144: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
     147: invokevirtual #67                 // Method org/bson/BsonDocumentReader$Context.getNextElement:()Ljava/util/Map$Entry;
     150: astore_1
     151: aload_1
     152: ifnonnull     166
     155: aload_0
     156: getstatic     #68                 // Field org/bson/AbstractBsonReader$State.END_OF_DOCUMENT:Lorg/bson/AbstractBsonReader$State;
     159: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
     162: getstatic     #66                 // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
     165: areturn
     166: aload_0
     167: aload_1
     168: invokeinterface #69,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     173: checkcast     #70                 // class java/lang/String
     176: invokevirtual #71                 // Method setCurrentName:(Ljava/lang/String;)V
     179: aload_0
     180: aload_1
     181: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     186: checkcast     #73                 // class org/bson/BsonValue
     189: putfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
     192: aload_0
     193: getstatic     #74                 // Field org/bson/AbstractBsonReader$State.NAME:Lorg/bson/AbstractBsonReader$State;
     196: invokevirtual #22                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
     199: goto          212
     202: new           #24                 // class org/bson/BSONException
     205: dup
     206: ldc           #75                 // String Invalid ContextType.
     208: invokespecial #26                 // Method org/bson/BSONException."<init>":(Ljava/lang/String;)V
     211: athrow
     212: aload_0
     213: aload_0
     214: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
     217: invokevirtual #44                 // Method org/bson/BsonValue.getBsonType:()Lorg/bson/BsonType;
     220: invokevirtual #58                 // Method setCurrentBsonType:(Lorg/bson/BsonType;)V
     223: aload_0
     224: invokevirtual #60                 // Method getCurrentBsonType:()Lorg/bson/BsonType;
     227: areturn

  public void mark();
    Code:
       0: aload_0
       1: getfield      #76                 // Field mark:Lorg/bson/BsonDocumentReader$Mark;
       4: ifnull        17
       7: new           #24                 // class org/bson/BSONException
      10: dup
      11: ldc           #77                 // String A mark already exists; it needs to be reset before creating a new one
      13: invokespecial #26                 // Method org/bson/BSONException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: new           #78                 // class org/bson/BsonDocumentReader$Mark
      21: dup
      22: aload_0
      23: invokespecial #79                 // Method org/bson/BsonDocumentReader$Mark."<init>":(Lorg/bson/BsonDocumentReader;)V
      26: putfield      #76                 // Field mark:Lorg/bson/BsonDocumentReader$Mark;
      29: return

  public org.bson.BsonReaderMark getMark();
    Code:
       0: new           #78                 // class org/bson/BsonDocumentReader$Mark
       3: dup
       4: aload_0
       5: invokespecial #79                 // Method org/bson/BsonDocumentReader$Mark."<init>":(Lorg/bson/BsonDocumentReader;)V
       8: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #76                 // Field mark:Lorg/bson/BsonDocumentReader$Mark;
       4: ifnonnull     17
       7: new           #24                 // class org/bson/BSONException
      10: dup
      11: ldc           #80                 // String trying to reset a mark before creating it
      13: invokespecial #26                 // Method org/bson/BSONException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #76                 // Field mark:Lorg/bson/BsonDocumentReader$Mark;
      21: invokevirtual #81                 // Method org/bson/BsonDocumentReader$Mark.reset:()V
      24: aload_0
      25: aconst_null
      26: putfield      #76                 // Field mark:Lorg/bson/BsonDocumentReader$Mark;
      29: return

  protected org.bson.BsonDocumentReader$Context getContext();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method org/bson/AbstractBsonReader.getContext:()Lorg/bson/AbstractBsonReader$Context;
       4: checkcast     #3                  // class org/bson/BsonDocumentReader$Context
       7: areturn

  protected org.bson.AbstractBsonReader$Context getContext();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getContext:()Lorg/bson/BsonDocumentReader$Context;
       4: areturn

  static org.bson.BsonValue access$000(org.bson.BsonDocumentReader);
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       4: areturn

  static org.bson.BsonValue access$002(org.bson.BsonDocumentReader, org.bson.BsonValue);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field currentValue:Lorg/bson/BsonValue;
       6: areturn
}
