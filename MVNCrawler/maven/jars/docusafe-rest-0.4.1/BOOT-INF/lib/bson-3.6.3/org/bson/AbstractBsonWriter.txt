Compiled from "AbstractBsonWriter.java"
public abstract class org.bson.AbstractBsonWriter implements org.bson.BsonWriter,java.io.Closeable {
  private final org.bson.BsonWriterSettings settings;

  private final java.util.Stack<org.bson.FieldNameValidator> fieldNameValidatorStack;

  private org.bson.AbstractBsonWriter$State state;

  private org.bson.AbstractBsonWriter$Context context;

  private int serializationDepth;

  private boolean closed;

  protected org.bson.AbstractBsonWriter(org.bson.BsonWriterSettings);
    Code:
       0: aload_0
       1: aload_1
       2: new           #4                  // class org/bson/NoOpFieldNameValidator
       5: dup
       6: invokespecial #5                  // Method org/bson/NoOpFieldNameValidator."<init>":()V
       9: invokespecial #6                  // Method "<init>":(Lorg/bson/BsonWriterSettings;Lorg/bson/FieldNameValidator;)V
      12: return

  protected org.bson.AbstractBsonWriter(org.bson.BsonWriterSettings, org.bson.FieldNameValidator);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/Stack
       8: dup
       9: invokespecial #9                  // Method java/util/Stack."<init>":()V
      12: putfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      15: aload_2
      16: ifnonnull     29
      19: new           #11                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #12                 // String Validator can not be null
      25: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #14                 // Field settings:Lorg/bson/BsonWriterSettings;
      34: aload_0
      35: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      38: aload_2
      39: invokevirtual #15                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      47: putfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
      50: return

  protected java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
       4: invokestatic  #17                 // Method org/bson/AbstractBsonWriter$Context.access$000:(Lorg/bson/AbstractBsonWriter$Context;)Ljava/lang/String;
       7: areturn

  protected boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #18                 // Field closed:Z
       4: ireturn

  protected void setState(org.bson.AbstractBsonWriter$State);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
       5: return

  protected org.bson.AbstractBsonWriter$State getState();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
       4: areturn

  protected org.bson.AbstractBsonWriter$Context getContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
       4: areturn

  protected void setContext(org.bson.AbstractBsonWriter$Context);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
       5: return

  protected abstract void doWriteStartDocument();

  protected abstract void doWriteEndDocument();

  protected abstract void doWriteStartArray();

  protected abstract void doWriteEndArray();

  protected abstract void doWriteBinaryData(org.bson.BsonBinary);

  protected abstract void doWriteBoolean(boolean);

  protected abstract void doWriteDateTime(long);

  protected abstract void doWriteDBPointer(org.bson.BsonDbPointer);

  protected abstract void doWriteDouble(double);

  protected abstract void doWriteInt32(int);

  protected abstract void doWriteInt64(long);

  protected abstract void doWriteDecimal128(org.bson.types.Decimal128);

  protected abstract void doWriteJavaScript(java.lang.String);

  protected abstract void doWriteJavaScriptWithScope(java.lang.String);

  protected abstract void doWriteMaxKey();

  protected abstract void doWriteMinKey();

  protected abstract void doWriteNull();

  protected abstract void doWriteObjectId(org.bson.types.ObjectId);

  protected abstract void doWriteRegularExpression(org.bson.BsonRegularExpression);

  protected abstract void doWriteString(java.lang.String);

  protected abstract void doWriteSymbol(java.lang.String);

  protected abstract void doWriteTimestamp(org.bson.BsonTimestamp);

  protected abstract void doWriteUndefined();

  public void writeStartDocument(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #20                 // Method writeStartDocument:()V
       9: return

  public void writeStartDocument();
    Code:
       0: aload_0
       1: ldc           #21                 // String writeStartDocument
       3: iconst_4
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: dup
      14: iconst_1
      15: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      18: aastore
      19: dup
      20: iconst_2
      21: getstatic     #24                 // Field org/bson/AbstractBsonWriter$State.SCOPE_DOCUMENT:Lorg/bson/AbstractBsonWriter$State;
      24: aastore
      25: dup
      26: iconst_3
      27: getstatic     #25                 // Field org/bson/AbstractBsonWriter$State.DONE:Lorg/bson/AbstractBsonWriter$State;
      30: aastore
      31: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      34: aload_0
      35: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      38: ifnull        78
      41: aload_0
      42: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      45: invokestatic  #17                 // Method org/bson/AbstractBsonWriter$Context.access$000:(Lorg/bson/AbstractBsonWriter$Context;)Ljava/lang/String;
      48: ifnull        78
      51: aload_0
      52: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      55: aload_0
      56: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      59: invokevirtual #27                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      62: checkcast     #28                 // class org/bson/FieldNameValidator
      65: aload_0
      66: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      69: invokeinterface #30,  2           // InterfaceMethod org/bson/FieldNameValidator.getValidatorForField:(Ljava/lang/String;)Lorg/bson/FieldNameValidator;
      74: invokevirtual #15                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: aload_0
      79: dup
      80: getfield      #1                  // Field serializationDepth:I
      83: iconst_1
      84: iadd
      85: putfield      #1                  // Field serializationDepth:I
      88: aload_0
      89: getfield      #1                  // Field serializationDepth:I
      92: aload_0
      93: getfield      #14                 // Field settings:Lorg/bson/BsonWriterSettings;
      96: invokevirtual #31                 // Method org/bson/BsonWriterSettings.getMaxSerializationDepth:()I
      99: if_icmple     112
     102: new           #32                 // class org/bson/BsonSerializationException
     105: dup
     106: ldc           #33                 // String Maximum serialization depth exceeded (does the object being serialized have a circular reference?).
     108: invokespecial #34                 // Method org/bson/BsonSerializationException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_0
     113: invokevirtual #35                 // Method doWriteStartDocument:()V
     116: aload_0
     117: getstatic     #36                 // Field org/bson/AbstractBsonWriter$State.NAME:Lorg/bson/AbstractBsonWriter$State;
     120: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     123: return

  public void writeEndDocument();
    Code:
       0: aload_0
       1: ldc           #38                 // String writeEndDocument
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #36                 // Field org/bson/AbstractBsonWriter$State.NAME:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: invokevirtual #39                 // Method getContext:()Lorg/bson/AbstractBsonWriter$Context;
      20: invokevirtual #40                 // Method org/bson/AbstractBsonWriter$Context.getContextType:()Lorg/bson/BsonContextType;
      23: astore_1
      24: aload_1
      25: getstatic     #41                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
      28: if_acmpeq     61
      31: aload_1
      32: getstatic     #42                 // Field org/bson/BsonContextType.SCOPE_DOCUMENT:Lorg/bson/BsonContextType;
      35: if_acmpeq     61
      38: aload_0
      39: ldc           #43                 // String WriteEndDocument
      41: aload_1
      42: iconst_2
      43: anewarray     #44                 // class org/bson/BsonContextType
      46: dup
      47: iconst_0
      48: getstatic     #41                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
      51: aastore
      52: dup
      53: iconst_1
      54: getstatic     #42                 // Field org/bson/BsonContextType.SCOPE_DOCUMENT:Lorg/bson/BsonContextType;
      57: aastore
      58: invokevirtual #45                 // Method throwInvalidContextType:(Ljava/lang/String;Lorg/bson/BsonContextType;[Lorg/bson/BsonContextType;)V
      61: aload_0
      62: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      65: invokevirtual #46                 // Method org/bson/AbstractBsonWriter$Context.getParentContext:()Lorg/bson/AbstractBsonWriter$Context;
      68: ifnull        92
      71: aload_0
      72: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      75: invokevirtual #46                 // Method org/bson/AbstractBsonWriter$Context.getParentContext:()Lorg/bson/AbstractBsonWriter$Context;
      78: invokestatic  #17                 // Method org/bson/AbstractBsonWriter$Context.access$000:(Lorg/bson/AbstractBsonWriter$Context;)Ljava/lang/String;
      81: ifnull        92
      84: aload_0
      85: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      88: invokevirtual #47                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      91: pop
      92: aload_0
      93: dup
      94: getfield      #1                  // Field serializationDepth:I
      97: iconst_1
      98: isub
      99: putfield      #1                  // Field serializationDepth:I
     102: aload_0
     103: invokevirtual #48                 // Method doWriteEndDocument:()V
     106: aload_0
     107: invokevirtual #39                 // Method getContext:()Lorg/bson/AbstractBsonWriter$Context;
     110: ifnull        126
     113: aload_0
     114: invokevirtual #39                 // Method getContext:()Lorg/bson/AbstractBsonWriter$Context;
     117: invokevirtual #40                 // Method org/bson/AbstractBsonWriter$Context.getContextType:()Lorg/bson/BsonContextType;
     120: getstatic     #49                 // Field org/bson/BsonContextType.TOP_LEVEL:Lorg/bson/BsonContextType;
     123: if_acmpne     136
     126: aload_0
     127: getstatic     #25                 // Field org/bson/AbstractBsonWriter$State.DONE:Lorg/bson/AbstractBsonWriter$State;
     130: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     133: goto          144
     136: aload_0
     137: aload_0
     138: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
     141: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     144: return

  public void writeStartArray(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #51                 // Method writeStartArray:()V
       9: return

  public void writeStartArray();
    Code:
       0: aload_0
       1: ldc           #52                 // String writeStartArray
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      20: ifnull        60
      23: aload_0
      24: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      27: invokestatic  #17                 // Method org/bson/AbstractBsonWriter$Context.access$000:(Lorg/bson/AbstractBsonWriter$Context;)Ljava/lang/String;
      30: ifnull        60
      33: aload_0
      34: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      37: aload_0
      38: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      41: invokevirtual #27                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      44: checkcast     #28                 // class org/bson/FieldNameValidator
      47: aload_0
      48: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      51: invokeinterface #30,  2           // InterfaceMethod org/bson/FieldNameValidator.getValidatorForField:(Ljava/lang/String;)Lorg/bson/FieldNameValidator;
      56: invokevirtual #15                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: dup
      62: getfield      #1                  // Field serializationDepth:I
      65: iconst_1
      66: iadd
      67: putfield      #1                  // Field serializationDepth:I
      70: aload_0
      71: getfield      #1                  // Field serializationDepth:I
      74: aload_0
      75: getfield      #14                 // Field settings:Lorg/bson/BsonWriterSettings;
      78: invokevirtual #31                 // Method org/bson/BsonWriterSettings.getMaxSerializationDepth:()I
      81: if_icmple     94
      84: new           #32                 // class org/bson/BsonSerializationException
      87: dup
      88: ldc           #33                 // String Maximum serialization depth exceeded (does the object being serialized have a circular reference?).
      90: invokespecial #34                 // Method org/bson/BsonSerializationException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: invokevirtual #53                 // Method doWriteStartArray:()V
      98: aload_0
      99: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
     102: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     105: return

  public void writeEndArray();
    Code:
       0: aload_0
       1: ldc           #54                 // String writeEndArray
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: invokevirtual #39                 // Method getContext:()Lorg/bson/AbstractBsonWriter$Context;
      20: invokevirtual #40                 // Method org/bson/AbstractBsonWriter$Context.getContextType:()Lorg/bson/BsonContextType;
      23: getstatic     #55                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      26: if_acmpeq     52
      29: aload_0
      30: ldc           #56                 // String WriteEndArray
      32: aload_0
      33: invokevirtual #39                 // Method getContext:()Lorg/bson/AbstractBsonWriter$Context;
      36: invokevirtual #40                 // Method org/bson/AbstractBsonWriter$Context.getContextType:()Lorg/bson/BsonContextType;
      39: iconst_1
      40: anewarray     #44                 // class org/bson/BsonContextType
      43: dup
      44: iconst_0
      45: getstatic     #55                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      48: aastore
      49: invokevirtual #45                 // Method throwInvalidContextType:(Ljava/lang/String;Lorg/bson/BsonContextType;[Lorg/bson/BsonContextType;)V
      52: aload_0
      53: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      56: invokevirtual #46                 // Method org/bson/AbstractBsonWriter$Context.getParentContext:()Lorg/bson/AbstractBsonWriter$Context;
      59: ifnull        83
      62: aload_0
      63: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      66: invokevirtual #46                 // Method org/bson/AbstractBsonWriter$Context.getParentContext:()Lorg/bson/AbstractBsonWriter$Context;
      69: invokestatic  #17                 // Method org/bson/AbstractBsonWriter$Context.access$000:(Lorg/bson/AbstractBsonWriter$Context;)Ljava/lang/String;
      72: ifnull        83
      75: aload_0
      76: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      79: invokevirtual #47                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      82: pop
      83: aload_0
      84: dup
      85: getfield      #1                  // Field serializationDepth:I
      88: iconst_1
      89: isub
      90: putfield      #1                  // Field serializationDepth:I
      93: aload_0
      94: invokevirtual #57                 // Method doWriteEndArray:()V
      97: aload_0
      98: aload_0
      99: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
     102: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     105: return

  public void writeBinaryData(java.lang.String, org.bson.BsonBinary);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #61                 // Method writeBinaryData:(Lorg/bson/BsonBinary;)V
      24: return

  public void writeBinaryData(org.bson.BsonBinary);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #62                 // String writeBinaryData
      10: iconst_2
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: dup
      21: iconst_1
      22: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      25: aastore
      26: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      29: aload_0
      30: aload_1
      31: invokevirtual #63                 // Method doWriteBinaryData:(Lorg/bson/BsonBinary;)V
      34: aload_0
      35: aload_0
      36: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      39: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      42: return

  public void writeBoolean(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: invokevirtual #64                 // Method writeBoolean:(Z)V
      10: return

  public void writeBoolean(boolean);
    Code:
       0: aload_0
       1: ldc           #65                 // String writeBoolean
       3: iconst_2
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: dup
      14: iconst_1
      15: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      18: aastore
      19: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      22: aload_0
      23: iload_1
      24: invokevirtual #66                 // Method doWriteBoolean:(Z)V
      27: aload_0
      28: aload_0
      29: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      32: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      35: return

  public void writeDateTime(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: lload_2
       7: invokevirtual #67                 // Method writeDateTime:(J)V
      10: return

  public void writeDateTime(long);
    Code:
       0: aload_0
       1: ldc           #68                 // String writeDateTime
       3: iconst_2
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: dup
      14: iconst_1
      15: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      18: aastore
      19: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      22: aload_0
      23: lload_1
      24: invokevirtual #69                 // Method doWriteDateTime:(J)V
      27: aload_0
      28: aload_0
      29: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      32: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      35: return

  public void writeDBPointer(java.lang.String, org.bson.BsonDbPointer);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #70                 // Method writeDBPointer:(Lorg/bson/BsonDbPointer;)V
      24: return

  public void writeDBPointer(org.bson.BsonDbPointer);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #71                 // String writeDBPointer
      10: iconst_2
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: dup
      21: iconst_1
      22: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      25: aastore
      26: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      29: aload_0
      30: aload_1
      31: invokevirtual #72                 // Method doWriteDBPointer:(Lorg/bson/BsonDbPointer;)V
      34: aload_0
      35: aload_0
      36: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      39: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      42: return

  public void writeDouble(java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: dload_2
       7: invokevirtual #73                 // Method writeDouble:(D)V
      10: return

  public void writeDouble(double);
    Code:
       0: aload_0
       1: ldc           #71                 // String writeDBPointer
       3: iconst_2
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: dup
      14: iconst_1
      15: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
      18: aastore
      19: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      22: aload_0
      23: dload_1
      24: invokevirtual #74                 // Method doWriteDouble:(D)V
      27: aload_0
      28: aload_0
      29: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      32: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      35: return

  public void writeInt32(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: invokevirtual #75                 // Method writeInt32:(I)V
      10: return

  public void writeInt32(int);
    Code:
       0: aload_0
       1: ldc           #76                 // String writeInt32
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: iload_1
      18: invokevirtual #77                 // Method doWriteInt32:(I)V
      21: aload_0
      22: aload_0
      23: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      26: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      29: return

  public void writeInt64(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: lload_2
       7: invokevirtual #78                 // Method writeInt64:(J)V
      10: return

  public void writeInt64(long);
    Code:
       0: aload_0
       1: ldc           #79                 // String writeInt64
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: lload_1
      18: invokevirtual #80                 // Method doWriteInt64:(J)V
      21: aload_0
      22: aload_0
      23: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      26: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      29: return

  public void writeDecimal128(org.bson.types.Decimal128);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #79                 // String writeInt64
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #81                 // Method doWriteDecimal128:(Lorg/bson/types/Decimal128;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeDecimal128(java.lang.String, org.bson.types.Decimal128);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #82                 // Method writeDecimal128:(Lorg/bson/types/Decimal128;)V
      24: return

  public void writeJavaScript(java.lang.String, java.lang.String);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #83                 // Method writeJavaScript:(Ljava/lang/String;)V
      24: return

  public void writeJavaScript(java.lang.String);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #84                 // String writeJavaScript
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #85                 // Method doWriteJavaScript:(Ljava/lang/String;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeJavaScriptWithScope(java.lang.String, java.lang.String);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #86                 // Method writeJavaScriptWithScope:(Ljava/lang/String;)V
      24: return

  public void writeJavaScriptWithScope(java.lang.String);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #87                 // String writeJavaScriptWithScope
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #88                 // Method doWriteJavaScriptWithScope:(Ljava/lang/String;)V
      28: aload_0
      29: getstatic     #24                 // Field org/bson/AbstractBsonWriter$State.SCOPE_DOCUMENT:Lorg/bson/AbstractBsonWriter$State;
      32: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      35: return

  public void writeMaxKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #89                 // Method writeMaxKey:()V
       9: return

  public void writeMaxKey();
    Code:
       0: aload_0
       1: ldc           #90                 // String writeMaxKey
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: invokevirtual #91                 // Method doWriteMaxKey:()V
      20: aload_0
      21: aload_0
      22: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      25: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      28: return

  public void writeMinKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #92                 // Method writeMinKey:()V
       9: return

  public void writeMinKey();
    Code:
       0: aload_0
       1: ldc           #93                 // String writeMinKey
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: invokevirtual #94                 // Method doWriteMinKey:()V
      20: aload_0
      21: aload_0
      22: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      25: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      28: return

  public void writeName(java.lang.String);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
      11: getstatic     #36                 // Field org/bson/AbstractBsonWriter$State.NAME:Lorg/bson/AbstractBsonWriter$State;
      14: if_acmpeq     33
      17: aload_0
      18: ldc           #95                 // String WriteName
      20: iconst_1
      21: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      24: dup
      25: iconst_0
      26: getstatic     #36                 // Field org/bson/AbstractBsonWriter$State.NAME:Lorg/bson/AbstractBsonWriter$State;
      29: aastore
      30: invokevirtual #96                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      33: aload_0
      34: getfield      #10                 // Field fieldNameValidatorStack:Ljava/util/Stack;
      37: invokevirtual #27                 // Method java/util/Stack.peek:()Ljava/lang/Object;
      40: checkcast     #28                 // class org/bson/FieldNameValidator
      43: aload_1
      44: invokeinterface #97,  2           // InterfaceMethod org/bson/FieldNameValidator.validate:(Ljava/lang/String;)Z
      49: ifne          73
      52: new           #11                 // class java/lang/IllegalArgumentException
      55: dup
      56: ldc           #98                 // String Invalid BSON field name %s
      58: iconst_1
      59: anewarray     #99                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_1
      65: aastore
      66: invokestatic  #100                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: aload_1
      75: invokevirtual #101                // Method doWriteName:(Ljava/lang/String;)V
      78: aload_0
      79: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
      82: aload_1
      83: invokestatic  #102                // Method org/bson/AbstractBsonWriter$Context.access$002:(Lorg/bson/AbstractBsonWriter$Context;Ljava/lang/String;)Ljava/lang/String;
      86: pop
      87: aload_0
      88: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      91: putfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
      94: return

  protected void doWriteName(java.lang.String);
    Code:
       0: return

  public void writeNull(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #103                // Method writeNull:()V
       9: return

  public void writeNull();
    Code:
       0: aload_0
       1: ldc           #104                // String writeNull
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: invokevirtual #105                // Method doWriteNull:()V
      20: aload_0
      21: aload_0
      22: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      25: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      28: return

  public void writeObjectId(java.lang.String, org.bson.types.ObjectId);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #106                // Method writeObjectId:(Lorg/bson/types/ObjectId;)V
      24: return

  public void writeObjectId(org.bson.types.ObjectId);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #107                // String writeObjectId
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #108                // Method doWriteObjectId:(Lorg/bson/types/ObjectId;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeRegularExpression(java.lang.String, org.bson.BsonRegularExpression);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #109                // Method writeRegularExpression:(Lorg/bson/BsonRegularExpression;)V
      24: return

  public void writeRegularExpression(org.bson.BsonRegularExpression);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #110                // String writeRegularExpression
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #111                // Method doWriteRegularExpression:(Lorg/bson/BsonRegularExpression;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeString(java.lang.String, java.lang.String);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #112                // Method writeString:(Ljava/lang/String;)V
      24: return

  public void writeString(java.lang.String);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #113                // String writeString
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #114                // Method doWriteString:(Ljava/lang/String;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeSymbol(java.lang.String, java.lang.String);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #115                // Method writeSymbol:(Ljava/lang/String;)V
      24: return

  public void writeSymbol(java.lang.String);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #116                // String writeSymbol
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #117                // Method doWriteSymbol:(Ljava/lang/String;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeTimestamp(java.lang.String, org.bson.BsonTimestamp);
    Code:
       0: ldc           #58                 // String name
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #60                 // String value
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      19: aload_0
      20: aload_2
      21: invokevirtual #118                // Method writeTimestamp:(Lorg/bson/BsonTimestamp;)V
      24: return

  public void writeTimestamp(org.bson.BsonTimestamp);
    Code:
       0: ldc           #60                 // String value
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: ldc           #119                // String writeTimestamp
      10: iconst_1
      11: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
      14: dup
      15: iconst_0
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: aastore
      20: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #120                // Method doWriteTimestamp:(Lorg/bson/BsonTimestamp;)V
      28: aload_0
      29: aload_0
      30: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      33: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      36: return

  public void writeUndefined(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #121                // Method writeUndefined:()V
       9: return

  public void writeUndefined();
    Code:
       0: aload_0
       1: ldc           #122                // String writeUndefined
       3: iconst_1
       4: anewarray     #22                 // class org/bson/AbstractBsonWriter$State
       7: dup
       8: iconst_0
       9: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      12: aastore
      13: invokevirtual #26                 // Method checkPreconditions:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      16: aload_0
      17: invokevirtual #123                // Method doWriteUndefined:()V
      20: aload_0
      21: aload_0
      22: invokevirtual #50                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
      25: invokevirtual #37                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
      28: return

  protected org.bson.AbstractBsonWriter$State getNextState();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getContext:()Lorg/bson/AbstractBsonWriter$Context;
       4: invokevirtual #40                 // Method org/bson/AbstractBsonWriter$Context.getContextType:()Lorg/bson/BsonContextType;
       7: getstatic     #55                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      10: if_acmpne     17
      13: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      16: areturn
      17: getstatic     #36                 // Field org/bson/AbstractBsonWriter$State.NAME:Lorg/bson/AbstractBsonWriter$State;
      20: areturn

  protected boolean checkState(org.bson.AbstractBsonWriter$State[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     37
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: aload_0
      23: invokevirtual #124                // Method getState:()Lorg/bson/AbstractBsonWriter$State;
      26: if_acmpne     31
      29: iconst_1
      30: ireturn
      31: iinc          4, 1
      34: goto          8
      37: iconst_0
      38: ireturn

  protected void checkPreconditions(java.lang.String, org.bson.AbstractBsonWriter$State...);
    Code:
       0: aload_0
       1: invokevirtual #125                // Method isClosed:()Z
       4: ifeq          17
       7: new           #126                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #127                // String BsonWriter is closed
      13: invokespecial #128                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_2
      19: invokevirtual #129                // Method checkState:([Lorg/bson/AbstractBsonWriter$State;)Z
      22: ifne          31
      25: aload_0
      26: aload_1
      27: aload_2
      28: invokevirtual #96                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonWriter$State;)V
      31: return

  protected void throwInvalidContextType(java.lang.String, org.bson.BsonContextType, org.bson.BsonContextType...);
    Code:
       0: ldc           #130                // String  or
       2: aload_3
       3: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokestatic  #132                // Method org/bson/StringUtils.join:(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
       9: astore        4
      11: new           #133                // class org/bson/BsonInvalidOperationException
      14: dup
      15: ldc           #134                // String %s can only be called when ContextType is %s, not when ContextType is %s.
      17: iconst_3
      18: anewarray     #99                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: aastore
      25: dup
      26: iconst_1
      27: aload         4
      29: aastore
      30: dup
      31: iconst_2
      32: aload_2
      33: aastore
      34: invokestatic  #100                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: invokespecial #135                // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
      40: athrow

  protected void throwInvalidState(java.lang.String, org.bson.AbstractBsonWriter$State...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
       4: getstatic     #16                 // Field org/bson/AbstractBsonWriter$State.INITIAL:Lorg/bson/AbstractBsonWriter$State;
       7: if_acmpeq     30
      10: aload_0
      11: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
      14: getstatic     #24                 // Field org/bson/AbstractBsonWriter$State.SCOPE_DOCUMENT:Lorg/bson/AbstractBsonWriter$State;
      17: if_acmpeq     30
      20: aload_0
      21: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
      24: getstatic     #25                 // Field org/bson/AbstractBsonWriter$State.DONE:Lorg/bson/AbstractBsonWriter$State;
      27: if_acmpne     166
      30: aload_1
      31: ldc           #136                // String end
      33: invokevirtual #137                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      36: ifne          166
      39: aload_1
      40: ldc           #138                // String writeName
      42: invokevirtual #139                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifne          166
      48: aload_1
      49: iconst_5
      50: invokevirtual #140                // Method java/lang/String.substring:(I)Ljava/lang/String;
      53: astore_3
      54: aload_3
      55: ldc           #141                // String start
      57: invokevirtual #137                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      60: ifeq          69
      63: aload_3
      64: iconst_5
      65: invokevirtual #140                // Method java/lang/String.substring:(I)Ljava/lang/String;
      68: astore_3
      69: ldc           #142                // String A
      71: astore        4
      73: iconst_5
      74: anewarray     #143                // class java/lang/Character
      77: dup
      78: iconst_0
      79: bipush        65
      81: invokestatic  #144                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      84: aastore
      85: dup
      86: iconst_1
      87: bipush        69
      89: invokestatic  #144                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      92: aastore
      93: dup
      94: iconst_2
      95: bipush        73
      97: invokestatic  #144                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     100: aastore
     101: dup
     102: iconst_3
     103: bipush        79
     105: invokestatic  #144                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     108: aastore
     109: dup
     110: iconst_4
     111: bipush        85
     113: invokestatic  #144                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     116: aastore
     117: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     120: aload_3
     121: iconst_0
     122: invokevirtual #145                // Method java/lang/String.charAt:(I)C
     125: invokestatic  #144                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     128: invokeinterface #146,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     133: ifeq          140
     136: ldc           #147                // String An
     138: astore        4
     140: new           #133                // class org/bson/BsonInvalidOperationException
     143: dup
     144: ldc           #148                // String %s %s value cannot be written to the root level of a BSON document.
     146: iconst_2
     147: anewarray     #99                 // class java/lang/Object
     150: dup
     151: iconst_0
     152: aload         4
     154: aastore
     155: dup
     156: iconst_1
     157: aload_3
     158: aastore
     159: invokestatic  #100                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     162: invokespecial #135                // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
     165: athrow
     166: ldc           #130                // String  or
     168: aload_2
     169: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     172: invokestatic  #132                // Method org/bson/StringUtils.join:(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
     175: astore_3
     176: new           #133                // class org/bson/BsonInvalidOperationException
     179: dup
     180: ldc           #149                // String %s can only be called when State is %s, not when State is %s
     182: iconst_3
     183: anewarray     #99                 // class java/lang/Object
     186: dup
     187: iconst_0
     188: aload_1
     189: aastore
     190: dup
     191: iconst_1
     192: aload_3
     193: aastore
     194: dup
     195: iconst_2
     196: aload_0
     197: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
     200: aastore
     201: invokestatic  #100                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     204: invokespecial #135                // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
     207: athrow

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #18                 // Field closed:Z
       5: return

  public void pipe(org.bson.BsonReader);
    Code:
       0: ldc           #150                // String reader
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aconst_null
      10: invokespecial #151                // Method pipeDocument:(Lorg/bson/BsonReader;Ljava/util/List;)V
      13: return

  public void pipe(org.bson.BsonReader, java.util.List<org.bson.BsonElement>);
    Code:
       0: ldc           #150                // String reader
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #152                // String extraElements
       9: aload_2
      10: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #151                // Method pipeDocument:(Lorg/bson/BsonReader;Ljava/util/List;)V
      20: return

  protected void pipeExtraElements(java.util.List<org.bson.BsonElement>);
    Code:
       0: ldc           #152                // String extraElements
       2: aload_1
       3: invokestatic  #59                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #153,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          52
      23: aload_2
      24: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #156                // class org/bson/BsonElement
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokevirtual #157                // Method org/bson/BsonElement.getName:()Ljava/lang/String;
      38: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      41: aload_0
      42: aload_3
      43: invokevirtual #158                // Method org/bson/BsonElement.getValue:()Lorg/bson/BsonValue;
      46: invokespecial #159                // Method pipeValue:(Lorg/bson/BsonValue;)V
      49: goto          14
      52: return

  private void pipeDocument(org.bson.BsonReader, java.util.List<org.bson.BsonElement>);
    Code:
       0: aload_1
       1: invokeinterface #160,  1          // InterfaceMethod org/bson/BsonReader.readStartDocument:()V
       6: aload_0
       7: invokevirtual #20                 // Method writeStartDocument:()V
      10: aload_1
      11: invokeinterface #161,  1          // InterfaceMethod org/bson/BsonReader.readBsonType:()Lorg/bson/BsonType;
      16: getstatic     #162                // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      19: if_acmpeq     40
      22: aload_0
      23: aload_1
      24: invokeinterface #163,  1          // InterfaceMethod org/bson/BsonReader.readName:()Ljava/lang/String;
      29: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      32: aload_0
      33: aload_1
      34: invokespecial #164                // Method pipeValue:(Lorg/bson/BsonReader;)V
      37: goto          10
      40: aload_1
      41: invokeinterface #165,  1          // InterfaceMethod org/bson/BsonReader.readEndDocument:()V
      46: aload_2
      47: ifnull        55
      50: aload_0
      51: aload_2
      52: invokevirtual #166                // Method pipeExtraElements:(Ljava/util/List;)V
      55: aload_0
      56: invokevirtual #167                // Method writeEndDocument:()V
      59: return

  private void pipeJavascriptWithScope(org.bson.BsonReader);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #168,  1          // InterfaceMethod org/bson/BsonReader.readJavaScriptWithScope:()Ljava/lang/String;
       7: invokevirtual #86                 // Method writeJavaScriptWithScope:(Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: aconst_null
      13: invokespecial #151                // Method pipeDocument:(Lorg/bson/BsonReader;Ljava/util/List;)V
      16: return

  private void pipeValue(org.bson.BsonReader);
    Code:
       0: getstatic     #169                // Field org/bson/AbstractBsonWriter$1.$SwitchMap$org$bson$BsonType:[I
       3: aload_1
       4: invokeinterface #170,  1          // InterfaceMethod org/bson/BsonReader.getCurrentBsonType:()Lorg/bson/BsonType;
       9: invokevirtual #171                // Method org/bson/BsonType.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 21
                     1: 112
                     2: 121
                     3: 129
                     4: 142
                     5: 155
                     6: 168
                     7: 181
                     8: 194
                     9: 207
                    10: 220
                    11: 233
                    12: 246
                    13: 259
                    14: 272
                    15: 280
                    16: 293
                    17: 306
                    18: 319
                    19: 332
                    20: 345
                    21: 358
               default: 371
          }
     112: aload_0
     113: aload_1
     114: aconst_null
     115: invokespecial #151                // Method pipeDocument:(Lorg/bson/BsonReader;Ljava/util/List;)V
     118: goto          403
     121: aload_0
     122: aload_1
     123: invokespecial #172                // Method pipeArray:(Lorg/bson/BsonReader;)V
     126: goto          403
     129: aload_0
     130: aload_1
     131: invokeinterface #173,  1          // InterfaceMethod org/bson/BsonReader.readDouble:()D
     136: invokevirtual #73                 // Method writeDouble:(D)V
     139: goto          403
     142: aload_0
     143: aload_1
     144: invokeinterface #174,  1          // InterfaceMethod org/bson/BsonReader.readString:()Ljava/lang/String;
     149: invokevirtual #112                // Method writeString:(Ljava/lang/String;)V
     152: goto          403
     155: aload_0
     156: aload_1
     157: invokeinterface #175,  1          // InterfaceMethod org/bson/BsonReader.readBinaryData:()Lorg/bson/BsonBinary;
     162: invokevirtual #61                 // Method writeBinaryData:(Lorg/bson/BsonBinary;)V
     165: goto          403
     168: aload_1
     169: invokeinterface #176,  1          // InterfaceMethod org/bson/BsonReader.readUndefined:()V
     174: aload_0
     175: invokevirtual #121                // Method writeUndefined:()V
     178: goto          403
     181: aload_0
     182: aload_1
     183: invokeinterface #177,  1          // InterfaceMethod org/bson/BsonReader.readObjectId:()Lorg/bson/types/ObjectId;
     188: invokevirtual #106                // Method writeObjectId:(Lorg/bson/types/ObjectId;)V
     191: goto          403
     194: aload_0
     195: aload_1
     196: invokeinterface #178,  1          // InterfaceMethod org/bson/BsonReader.readBoolean:()Z
     201: invokevirtual #64                 // Method writeBoolean:(Z)V
     204: goto          403
     207: aload_0
     208: aload_1
     209: invokeinterface #179,  1          // InterfaceMethod org/bson/BsonReader.readDateTime:()J
     214: invokevirtual #67                 // Method writeDateTime:(J)V
     217: goto          403
     220: aload_1
     221: invokeinterface #180,  1          // InterfaceMethod org/bson/BsonReader.readNull:()V
     226: aload_0
     227: invokevirtual #103                // Method writeNull:()V
     230: goto          403
     233: aload_0
     234: aload_1
     235: invokeinterface #181,  1          // InterfaceMethod org/bson/BsonReader.readRegularExpression:()Lorg/bson/BsonRegularExpression;
     240: invokevirtual #109                // Method writeRegularExpression:(Lorg/bson/BsonRegularExpression;)V
     243: goto          403
     246: aload_0
     247: aload_1
     248: invokeinterface #182,  1          // InterfaceMethod org/bson/BsonReader.readJavaScript:()Ljava/lang/String;
     253: invokevirtual #83                 // Method writeJavaScript:(Ljava/lang/String;)V
     256: goto          403
     259: aload_0
     260: aload_1
     261: invokeinterface #183,  1          // InterfaceMethod org/bson/BsonReader.readSymbol:()Ljava/lang/String;
     266: invokevirtual #115                // Method writeSymbol:(Ljava/lang/String;)V
     269: goto          403
     272: aload_0
     273: aload_1
     274: invokespecial #184                // Method pipeJavascriptWithScope:(Lorg/bson/BsonReader;)V
     277: goto          403
     280: aload_0
     281: aload_1
     282: invokeinterface #185,  1          // InterfaceMethod org/bson/BsonReader.readInt32:()I
     287: invokevirtual #75                 // Method writeInt32:(I)V
     290: goto          403
     293: aload_0
     294: aload_1
     295: invokeinterface #186,  1          // InterfaceMethod org/bson/BsonReader.readTimestamp:()Lorg/bson/BsonTimestamp;
     300: invokevirtual #118                // Method writeTimestamp:(Lorg/bson/BsonTimestamp;)V
     303: goto          403
     306: aload_0
     307: aload_1
     308: invokeinterface #187,  1          // InterfaceMethod org/bson/BsonReader.readInt64:()J
     313: invokevirtual #78                 // Method writeInt64:(J)V
     316: goto          403
     319: aload_0
     320: aload_1
     321: invokeinterface #188,  1          // InterfaceMethod org/bson/BsonReader.readDecimal128:()Lorg/bson/types/Decimal128;
     326: invokevirtual #82                 // Method writeDecimal128:(Lorg/bson/types/Decimal128;)V
     329: goto          403
     332: aload_1
     333: invokeinterface #189,  1          // InterfaceMethod org/bson/BsonReader.readMinKey:()V
     338: aload_0
     339: invokevirtual #92                 // Method writeMinKey:()V
     342: goto          403
     345: aload_0
     346: aload_1
     347: invokeinterface #190,  1          // InterfaceMethod org/bson/BsonReader.readDBPointer:()Lorg/bson/BsonDbPointer;
     352: invokevirtual #70                 // Method writeDBPointer:(Lorg/bson/BsonDbPointer;)V
     355: goto          403
     358: aload_1
     359: invokeinterface #191,  1          // InterfaceMethod org/bson/BsonReader.readMaxKey:()V
     364: aload_0
     365: invokevirtual #89                 // Method writeMaxKey:()V
     368: goto          403
     371: new           #11                 // class java/lang/IllegalArgumentException
     374: dup
     375: new           #192                // class java/lang/StringBuilder
     378: dup
     379: invokespecial #193                // Method java/lang/StringBuilder."<init>":()V
     382: ldc           #194                // String unhandled BSON type:
     384: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     387: aload_1
     388: invokeinterface #170,  1          // InterfaceMethod org/bson/BsonReader.getCurrentBsonType:()Lorg/bson/BsonType;
     393: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     396: invokevirtual #197                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     399: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     402: athrow
     403: return

  private void pipeDocument(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method writeStartDocument:()V
       4: aload_1
       5: invokevirtual #198                // Method org/bson/BsonDocument.entrySet:()Ljava/util/Set;
       8: invokeinterface #199,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          62
      23: aload_2
      24: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #200                // class java/util/Map$Entry
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokeinterface #201,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #202                // class java/lang/String
      43: invokevirtual #19                 // Method writeName:(Ljava/lang/String;)V
      46: aload_0
      47: aload_3
      48: invokeinterface #203,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: checkcast     #204                // class org/bson/BsonValue
      56: invokespecial #159                // Method pipeValue:(Lorg/bson/BsonValue;)V
      59: goto          14
      62: aload_0
      63: invokevirtual #167                // Method writeEndDocument:()V
      66: return

  private void pipeArray(org.bson.BsonReader);
    Code:
       0: aload_1
       1: invokeinterface #205,  1          // InterfaceMethod org/bson/BsonReader.readStartArray:()V
       6: aload_0
       7: invokevirtual #51                 // Method writeStartArray:()V
      10: aload_1
      11: invokeinterface #161,  1          // InterfaceMethod org/bson/BsonReader.readBsonType:()Lorg/bson/BsonType;
      16: getstatic     #162                // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      19: if_acmpeq     30
      22: aload_0
      23: aload_1
      24: invokespecial #164                // Method pipeValue:(Lorg/bson/BsonReader;)V
      27: goto          10
      30: aload_1
      31: invokeinterface #206,  1          // InterfaceMethod org/bson/BsonReader.readEndArray:()V
      36: aload_0
      37: invokevirtual #207                // Method writeEndArray:()V
      40: return

  private void pipeArray(org.bson.BsonArray);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method writeStartArray:()V
       4: aload_1
       5: invokevirtual #208                // Method org/bson/BsonArray.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          36
      18: aload_2
      19: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #204                // class org/bson/BsonValue
      27: astore_3
      28: aload_0
      29: aload_3
      30: invokespecial #159                // Method pipeValue:(Lorg/bson/BsonValue;)V
      33: goto          9
      36: aload_0
      37: invokevirtual #207                // Method writeEndArray:()V
      40: return

  private void pipeJavascriptWithScope(org.bson.BsonJavaScriptWithScope);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #209                // Method org/bson/BsonJavaScriptWithScope.getCode:()Ljava/lang/String;
       5: invokevirtual #86                 // Method writeJavaScriptWithScope:(Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #210                // Method org/bson/BsonJavaScriptWithScope.getScope:()Lorg/bson/BsonDocument;
      13: invokespecial #211                // Method pipeDocument:(Lorg/bson/BsonDocument;)V
      16: return

  private void pipeValue(org.bson.BsonValue);
    Code:
       0: getstatic     #169                // Field org/bson/AbstractBsonWriter$1.$SwitchMap$org$bson$BsonType:[I
       3: aload_1
       4: invokevirtual #212                // Method org/bson/BsonValue.getBsonType:()Lorg/bson/BsonType;
       7: invokevirtual #171                // Method org/bson/BsonType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 21
                     1: 108
                     2: 119
                     3: 130
                     4: 144
                     5: 158
                     6: 169
                     7: 176
                     8: 190
                     9: 204
                    10: 218
                    11: 225
                    12: 236
                    13: 250
                    14: 264
                    15: 275
                    16: 289
                    17: 300
                    18: 314
                    19: 328
                    20: 335
                    21: 346
               default: 353
          }
     108: aload_0
     109: aload_1
     110: invokevirtual #213                // Method org/bson/BsonValue.asDocument:()Lorg/bson/BsonDocument;
     113: invokespecial #211                // Method pipeDocument:(Lorg/bson/BsonDocument;)V
     116: goto          383
     119: aload_0
     120: aload_1
     121: invokevirtual #214                // Method org/bson/BsonValue.asArray:()Lorg/bson/BsonArray;
     124: invokespecial #215                // Method pipeArray:(Lorg/bson/BsonArray;)V
     127: goto          383
     130: aload_0
     131: aload_1
     132: invokevirtual #216                // Method org/bson/BsonValue.asDouble:()Lorg/bson/BsonDouble;
     135: invokevirtual #217                // Method org/bson/BsonDouble.getValue:()D
     138: invokevirtual #73                 // Method writeDouble:(D)V
     141: goto          383
     144: aload_0
     145: aload_1
     146: invokevirtual #218                // Method org/bson/BsonValue.asString:()Lorg/bson/BsonString;
     149: invokevirtual #219                // Method org/bson/BsonString.getValue:()Ljava/lang/String;
     152: invokevirtual #112                // Method writeString:(Ljava/lang/String;)V
     155: goto          383
     158: aload_0
     159: aload_1
     160: invokevirtual #220                // Method org/bson/BsonValue.asBinary:()Lorg/bson/BsonBinary;
     163: invokevirtual #61                 // Method writeBinaryData:(Lorg/bson/BsonBinary;)V
     166: goto          383
     169: aload_0
     170: invokevirtual #121                // Method writeUndefined:()V
     173: goto          383
     176: aload_0
     177: aload_1
     178: invokevirtual #221                // Method org/bson/BsonValue.asObjectId:()Lorg/bson/BsonObjectId;
     181: invokevirtual #222                // Method org/bson/BsonObjectId.getValue:()Lorg/bson/types/ObjectId;
     184: invokevirtual #106                // Method writeObjectId:(Lorg/bson/types/ObjectId;)V
     187: goto          383
     190: aload_0
     191: aload_1
     192: invokevirtual #223                // Method org/bson/BsonValue.asBoolean:()Lorg/bson/BsonBoolean;
     195: invokevirtual #224                // Method org/bson/BsonBoolean.getValue:()Z
     198: invokevirtual #64                 // Method writeBoolean:(Z)V
     201: goto          383
     204: aload_0
     205: aload_1
     206: invokevirtual #225                // Method org/bson/BsonValue.asDateTime:()Lorg/bson/BsonDateTime;
     209: invokevirtual #226                // Method org/bson/BsonDateTime.getValue:()J
     212: invokevirtual #67                 // Method writeDateTime:(J)V
     215: goto          383
     218: aload_0
     219: invokevirtual #103                // Method writeNull:()V
     222: goto          383
     225: aload_0
     226: aload_1
     227: invokevirtual #227                // Method org/bson/BsonValue.asRegularExpression:()Lorg/bson/BsonRegularExpression;
     230: invokevirtual #109                // Method writeRegularExpression:(Lorg/bson/BsonRegularExpression;)V
     233: goto          383
     236: aload_0
     237: aload_1
     238: invokevirtual #228                // Method org/bson/BsonValue.asJavaScript:()Lorg/bson/BsonJavaScript;
     241: invokevirtual #229                // Method org/bson/BsonJavaScript.getCode:()Ljava/lang/String;
     244: invokevirtual #83                 // Method writeJavaScript:(Ljava/lang/String;)V
     247: goto          383
     250: aload_0
     251: aload_1
     252: invokevirtual #230                // Method org/bson/BsonValue.asSymbol:()Lorg/bson/BsonSymbol;
     255: invokevirtual #231                // Method org/bson/BsonSymbol.getSymbol:()Ljava/lang/String;
     258: invokevirtual #115                // Method writeSymbol:(Ljava/lang/String;)V
     261: goto          383
     264: aload_0
     265: aload_1
     266: invokevirtual #232                // Method org/bson/BsonValue.asJavaScriptWithScope:()Lorg/bson/BsonJavaScriptWithScope;
     269: invokespecial #233                // Method pipeJavascriptWithScope:(Lorg/bson/BsonJavaScriptWithScope;)V
     272: goto          383
     275: aload_0
     276: aload_1
     277: invokevirtual #234                // Method org/bson/BsonValue.asInt32:()Lorg/bson/BsonInt32;
     280: invokevirtual #235                // Method org/bson/BsonInt32.getValue:()I
     283: invokevirtual #75                 // Method writeInt32:(I)V
     286: goto          383
     289: aload_0
     290: aload_1
     291: invokevirtual #236                // Method org/bson/BsonValue.asTimestamp:()Lorg/bson/BsonTimestamp;
     294: invokevirtual #118                // Method writeTimestamp:(Lorg/bson/BsonTimestamp;)V
     297: goto          383
     300: aload_0
     301: aload_1
     302: invokevirtual #237                // Method org/bson/BsonValue.asInt64:()Lorg/bson/BsonInt64;
     305: invokevirtual #238                // Method org/bson/BsonInt64.getValue:()J
     308: invokevirtual #78                 // Method writeInt64:(J)V
     311: goto          383
     314: aload_0
     315: aload_1
     316: invokevirtual #239                // Method org/bson/BsonValue.asDecimal128:()Lorg/bson/BsonDecimal128;
     319: invokevirtual #240                // Method org/bson/BsonDecimal128.getValue:()Lorg/bson/types/Decimal128;
     322: invokevirtual #82                 // Method writeDecimal128:(Lorg/bson/types/Decimal128;)V
     325: goto          383
     328: aload_0
     329: invokevirtual #92                 // Method writeMinKey:()V
     332: goto          383
     335: aload_0
     336: aload_1
     337: invokevirtual #241                // Method org/bson/BsonValue.asDBPointer:()Lorg/bson/BsonDbPointer;
     340: invokevirtual #70                 // Method writeDBPointer:(Lorg/bson/BsonDbPointer;)V
     343: goto          383
     346: aload_0
     347: invokevirtual #89                 // Method writeMaxKey:()V
     350: goto          383
     353: new           #11                 // class java/lang/IllegalArgumentException
     356: dup
     357: new           #192                // class java/lang/StringBuilder
     360: dup
     361: invokespecial #193                // Method java/lang/StringBuilder."<init>":()V
     364: ldc           #194                // String unhandled BSON type:
     366: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     369: aload_1
     370: invokevirtual #212                // Method org/bson/BsonValue.getBsonType:()Lorg/bson/BsonType;
     373: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     376: invokevirtual #197                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     379: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     382: athrow
     383: return

  static org.bson.AbstractBsonWriter$Context access$100(org.bson.AbstractBsonWriter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lorg/bson/AbstractBsonWriter$Context;
       4: areturn

  static org.bson.AbstractBsonWriter$State access$200(org.bson.AbstractBsonWriter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:Lorg/bson/AbstractBsonWriter$State;
       4: areturn

  static int access$300(org.bson.AbstractBsonWriter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serializationDepth:I
       4: ireturn

  static int access$302(org.bson.AbstractBsonWriter, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field serializationDepth:I
       6: ireturn
}
