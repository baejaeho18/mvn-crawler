Compiled from "BsonBinary.java"
public class org.bson.BsonBinary extends org.bson.BsonValue {
  private final byte type;

  private final byte[] data;

  public org.bson.BsonBinary(byte[]);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/bson/BsonBinarySubType.BINARY:Lorg/bson/BsonBinarySubType;
       4: aload_1
       5: invokespecial #2                  // Method "<init>":(Lorg/bson/BsonBinarySubType;[B)V
       8: return

  public org.bson.BsonBinary(org.bson.BsonBinarySubType, byte[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/bson/BsonValue."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #4                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #5                  // String type may not be null
      14: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #4                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #7                  // String data may not be null
      28: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: invokevirtual #8                  // Method org/bson/BsonBinarySubType.getValue:()B
      37: putfield      #9                  // Field type:B
      40: aload_0
      41: aload_2
      42: putfield      #10                 // Field data:[B
      45: return

  public org.bson.BsonBinary(byte, byte[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/bson/BsonValue."<init>":()V
       4: aload_2
       5: ifnonnull     18
       8: new           #4                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #7                  // String data may not be null
      14: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #9                  // Field type:B
      23: aload_0
      24: aload_2
      25: putfield      #10                 // Field data:[B
      28: return

  public org.bson.BsonType getBsonType();
    Code:
       0: getstatic     #11                 // Field org/bson/BsonType.BINARY:Lorg/bson/BsonType;
       3: areturn

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:B
       4: ireturn

  public byte[] getData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field data:[B
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #13                 // class org/bson/BsonBinary
      28: astore_2
      29: aload_0
      30: getfield      #10                 // Field data:[B
      33: aload_2
      34: getfield      #10                 // Field data:[B
      37: invokestatic  #14                 // Method java/util/Arrays.equals:([B[B)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #9                  // Field type:B
      49: aload_2
      50: getfield      #9                  // Field type:B
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:B
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #10                 // Field data:[B
      13: invokestatic  #15                 // Method java/util/Arrays.hashCode:([B)I
      16: iadd
      17: istore_1
      18: iload_1
      19: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String BsonBinary{type=
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #9                  // Field type:B
      16: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #21                 // String , data=
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #10                 // Field data:[B
      28: invokestatic  #22                 // Method java/util/Arrays.toString:([B)Ljava/lang/String;
      31: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: bipush        125
      36: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  static org.bson.BsonBinary clone(org.bson.BsonBinary);
    Code:
       0: new           #13                 // class org/bson/BsonBinary
       3: dup
       4: aload_0
       5: getfield      #9                  // Field type:B
       8: aload_0
       9: getfield      #10                 // Field data:[B
      12: invokevirtual #25                 // Method "[B".clone:()Ljava/lang/Object;
      15: checkcast     #26                 // class "[B"
      18: invokespecial #27                 // Method "<init>":(B[B)V
      21: areturn
}
