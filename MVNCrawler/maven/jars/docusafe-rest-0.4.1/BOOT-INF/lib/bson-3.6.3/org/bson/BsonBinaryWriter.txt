Compiled from "BsonBinaryWriter.java"
public class org.bson.BsonBinaryWriter extends org.bson.AbstractBsonWriter {
  private final org.bson.BsonBinaryWriterSettings binaryWriterSettings;

  private final org.bson.io.BsonOutput bsonOutput;

  private final java.util.Stack<java.lang.Integer> maxDocumentSizeStack;

  private org.bson.BsonBinaryWriter$Mark mark;

  public org.bson.BsonBinaryWriter(org.bson.io.BsonOutput, org.bson.FieldNameValidator);
    Code:
       0: aload_0
       1: new           #3                  // class org/bson/BsonWriterSettings
       4: dup
       5: invokespecial #4                  // Method org/bson/BsonWriterSettings."<init>":()V
       8: new           #5                  // class org/bson/BsonBinaryWriterSettings
      11: dup
      12: invokespecial #6                  // Method org/bson/BsonBinaryWriterSettings."<init>":()V
      15: aload_1
      16: aload_2
      17: invokespecial #7                  // Method "<init>":(Lorg/bson/BsonWriterSettings;Lorg/bson/BsonBinaryWriterSettings;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;)V
      20: return

  public org.bson.BsonBinaryWriter(org.bson.io.BsonOutput);
    Code:
       0: aload_0
       1: new           #3                  // class org/bson/BsonWriterSettings
       4: dup
       5: invokespecial #4                  // Method org/bson/BsonWriterSettings."<init>":()V
       8: new           #5                  // class org/bson/BsonBinaryWriterSettings
      11: dup
      12: invokespecial #6                  // Method org/bson/BsonBinaryWriterSettings."<init>":()V
      15: aload_1
      16: invokespecial #8                  // Method "<init>":(Lorg/bson/BsonWriterSettings;Lorg/bson/BsonBinaryWriterSettings;Lorg/bson/io/BsonOutput;)V
      19: return

  public org.bson.BsonBinaryWriter(org.bson.BsonWriterSettings, org.bson.BsonBinaryWriterSettings, org.bson.io.BsonOutput);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #9                  // class org/bson/NoOpFieldNameValidator
       7: dup
       8: invokespecial #10                 // Method org/bson/NoOpFieldNameValidator."<init>":()V
      11: invokespecial #7                  // Method "<init>":(Lorg/bson/BsonWriterSettings;Lorg/bson/BsonBinaryWriterSettings;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;)V
      14: return

  public org.bson.BsonBinaryWriter(org.bson.BsonWriterSettings, org.bson.BsonBinaryWriterSettings, org.bson.io.BsonOutput, org.bson.FieldNameValidator);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokespecial #11                 // Method org/bson/AbstractBsonWriter."<init>":(Lorg/bson/BsonWriterSettings;Lorg/bson/FieldNameValidator;)V
       7: aload_0
       8: new           #12                 // class java/util/Stack
      11: dup
      12: invokespecial #13                 // Method java/util/Stack."<init>":()V
      15: putfield      #14                 // Field maxDocumentSizeStack:Ljava/util/Stack;
      18: aload_0
      19: aload_2
      20: putfield      #15                 // Field binaryWriterSettings:Lorg/bson/BsonBinaryWriterSettings;
      23: aload_0
      24: aload_3
      25: putfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      28: aload_0
      29: getfield      #14                 // Field maxDocumentSizeStack:Ljava/util/Stack;
      32: aload_2
      33: invokevirtual #16                 // Method org/bson/BsonBinaryWriterSettings.getMaxDocumentSize:()I
      36: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokevirtual #18                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  public void close();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/bson/AbstractBsonWriter.close:()V
       4: return

  public org.bson.io.BsonOutput getBsonOutput();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: areturn

  public org.bson.BsonBinaryWriterSettings getBinaryWriterSettings();
    Code:
       0: aload_0
       1: getfield      #15                 // Field binaryWriterSettings:Lorg/bson/BsonBinaryWriterSettings;
       4: areturn

  public void flush();
    Code:
       0: return

  protected org.bson.BsonBinaryWriter$Context getContext();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/bson/AbstractBsonWriter.getContext:()Lorg/bson/AbstractBsonWriter$Context;
       4: checkcast     #21                 // class org/bson/BsonBinaryWriter$Context
       7: areturn

  protected void doWriteStartDocument();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getState:()Lorg/bson/AbstractBsonWriter$State;
       4: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
       7: if_acmpne     29
      10: aload_0
      11: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      14: getstatic     #24                 // Field org/bson/BsonType.DOCUMENT:Lorg/bson/BsonType;
      17: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      20: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      25: aload_0
      26: invokespecial #27                 // Method writeCurrentName:()V
      29: aload_0
      30: new           #21                 // class org/bson/BsonBinaryWriter$Context
      33: dup
      34: aload_0
      35: aload_0
      36: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      39: getstatic     #29                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
      42: aload_0
      43: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      46: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      51: invokespecial #31                 // Method org/bson/BsonBinaryWriter$Context."<init>":(Lorg/bson/BsonBinaryWriter;Lorg/bson/BsonBinaryWriter$Context;Lorg/bson/BsonContextType;I)V
      54: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
      57: aload_0
      58: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      61: iconst_0
      62: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      67: return

  protected void doWriteEndDocument();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: iconst_0
       5: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      10: aload_0
      11: invokespecial #34                 // Method backpatchSize:()V
      14: aload_0
      15: aload_0
      16: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      19: invokevirtual #35                 // Method org/bson/BsonBinaryWriter$Context.getParentContext:()Lorg/bson/BsonBinaryWriter$Context;
      22: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
      25: aload_0
      26: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      29: ifnull        60
      32: aload_0
      33: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      36: invokevirtual #36                 // Method org/bson/BsonBinaryWriter$Context.getContextType:()Lorg/bson/BsonContextType;
      39: getstatic     #37                 // Field org/bson/BsonContextType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonContextType;
      42: if_acmpne     60
      45: aload_0
      46: invokespecial #34                 // Method backpatchSize:()V
      49: aload_0
      50: aload_0
      51: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      54: invokevirtual #35                 // Method org/bson/BsonBinaryWriter$Context.getParentContext:()Lorg/bson/BsonBinaryWriter$Context;
      57: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
      60: return

  protected void doWriteStartArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #38                 // Field org/bson/BsonType.ARRAY:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: new           #21                 // class org/bson/BsonBinaryWriter$Context
      23: dup
      24: aload_0
      25: aload_0
      26: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      29: getstatic     #39                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      32: aload_0
      33: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      36: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      41: invokespecial #31                 // Method org/bson/BsonBinaryWriter$Context."<init>":(Lorg/bson/BsonBinaryWriter;Lorg/bson/BsonBinaryWriter$Context;Lorg/bson/BsonContextType;I)V
      44: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
      47: aload_0
      48: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      51: iconst_0
      52: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      57: return

  protected void doWriteEndArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: iconst_0
       5: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      10: aload_0
      11: invokespecial #34                 // Method backpatchSize:()V
      14: aload_0
      15: aload_0
      16: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      19: invokevirtual #35                 // Method org/bson/BsonBinaryWriter$Context.getParentContext:()Lorg/bson/BsonBinaryWriter$Context;
      22: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
      25: return

  protected void doWriteBinaryData(org.bson.BsonBinary);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #40                 // Field org/bson/BsonType.BINARY:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_1
      20: invokevirtual #41                 // Method org/bson/BsonBinary.getData:()[B
      23: arraylength
      24: istore_2
      25: aload_1
      26: invokevirtual #42                 // Method org/bson/BsonBinary.getType:()B
      29: getstatic     #43                 // Field org/bson/BsonBinarySubType.OLD_BINARY:Lorg/bson/BsonBinarySubType;
      32: invokevirtual #44                 // Method org/bson/BsonBinarySubType.getValue:()B
      35: if_icmpne     41
      38: iinc          2, 4
      41: aload_0
      42: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      45: iload_2
      46: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      51: aload_0
      52: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      55: aload_1
      56: invokevirtual #42                 // Method org/bson/BsonBinary.getType:()B
      59: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      64: aload_1
      65: invokevirtual #42                 // Method org/bson/BsonBinary.getType:()B
      68: getstatic     #43                 // Field org/bson/BsonBinarySubType.OLD_BINARY:Lorg/bson/BsonBinarySubType;
      71: invokevirtual #44                 // Method org/bson/BsonBinarySubType.getValue:()B
      74: if_icmpne     89
      77: aload_0
      78: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      81: iload_2
      82: iconst_4
      83: isub
      84: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      89: aload_0
      90: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      93: aload_1
      94: invokevirtual #41                 // Method org/bson/BsonBinary.getData:()[B
      97: invokeinterface #45,  2           // InterfaceMethod org/bson/io/BsonOutput.writeBytes:([B)V
     102: return

  public void doWriteBoolean(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #46                 // Field org/bson/BsonType.BOOLEAN:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: iload_1
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      37: return

  protected void doWriteDateTime(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #47                 // Field org/bson/BsonType.DATE_TIME:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: lload_1
      24: invokeinterface #48,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt64:(J)V
      29: return

  protected void doWriteDBPointer(org.bson.BsonDbPointer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #49                 // Field org/bson/BsonType.DB_POINTER:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokevirtual #50                 // Method org/bson/BsonDbPointer.getNamespace:()Ljava/lang/String;
      27: invokeinterface #51,  2           // InterfaceMethod org/bson/io/BsonOutput.writeString:(Ljava/lang/String;)V
      32: aload_0
      33: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      36: aload_1
      37: invokevirtual #52                 // Method org/bson/BsonDbPointer.getId:()Lorg/bson/types/ObjectId;
      40: invokevirtual #53                 // Method org/bson/types/ObjectId.toByteArray:()[B
      43: invokeinterface #45,  2           // InterfaceMethod org/bson/io/BsonOutput.writeBytes:([B)V
      48: return

  protected void doWriteDouble(double);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #54                 // Field org/bson/BsonType.DOUBLE:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: dload_1
      24: invokeinterface #55,  3           // InterfaceMethod org/bson/io/BsonOutput.writeDouble:(D)V
      29: return

  protected void doWriteInt32(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #56                 // Field org/bson/BsonType.INT32:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: iload_1
      24: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      29: return

  protected void doWriteInt64(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #57                 // Field org/bson/BsonType.INT64:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: lload_1
      24: invokeinterface #48,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt64:(J)V
      29: return

  protected void doWriteDecimal128(org.bson.types.Decimal128);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #58                 // Field org/bson/BsonType.DECIMAL128:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokevirtual #59                 // Method org/bson/types/Decimal128.getLow:()J
      27: invokeinterface #48,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt64:(J)V
      32: aload_0
      33: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      36: aload_1
      37: invokevirtual #60                 // Method org/bson/types/Decimal128.getHigh:()J
      40: invokeinterface #48,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt64:(J)V
      45: return

  protected void doWriteJavaScript(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #61                 // Field org/bson/BsonType.JAVASCRIPT:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokeinterface #51,  2           // InterfaceMethod org/bson/io/BsonOutput.writeString:(Ljava/lang/String;)V
      29: return

  protected void doWriteJavaScriptWithScope(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #62                 // Field org/bson/BsonType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: new           #21                 // class org/bson/BsonBinaryWriter$Context
      23: dup
      24: aload_0
      25: aload_0
      26: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      29: getstatic     #37                 // Field org/bson/BsonContextType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonContextType;
      32: aload_0
      33: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      36: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      41: invokespecial #31                 // Method org/bson/BsonBinaryWriter$Context."<init>":(Lorg/bson/BsonBinaryWriter;Lorg/bson/BsonBinaryWriter$Context;Lorg/bson/BsonContextType;I)V
      44: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
      47: aload_0
      48: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      51: iconst_0
      52: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      57: aload_0
      58: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      61: aload_1
      62: invokeinterface #51,  2           // InterfaceMethod org/bson/io/BsonOutput.writeString:(Ljava/lang/String;)V
      67: return

  protected void doWriteMaxKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #63                 // Field org/bson/BsonType.MAX_KEY:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: return

  protected void doWriteMinKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #64                 // Field org/bson/BsonType.MIN_KEY:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: return

  public void doWriteNull();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #65                 // Field org/bson/BsonType.NULL:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: return

  public void doWriteObjectId(org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #66                 // Field org/bson/BsonType.OBJECT_ID:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokevirtual #53                 // Method org/bson/types/ObjectId.toByteArray:()[B
      27: invokeinterface #45,  2           // InterfaceMethod org/bson/io/BsonOutput.writeBytes:([B)V
      32: return

  public void doWriteRegularExpression(org.bson.BsonRegularExpression);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #67                 // Field org/bson/BsonType.REGULAR_EXPRESSION:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokevirtual #68                 // Method org/bson/BsonRegularExpression.getPattern:()Ljava/lang/String;
      27: invokeinterface #69,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
      32: aload_0
      33: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      36: aload_1
      37: invokevirtual #70                 // Method org/bson/BsonRegularExpression.getOptions:()Ljava/lang/String;
      40: invokeinterface #69,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
      45: return

  public void doWriteString(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #71                 // Field org/bson/BsonType.STRING:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokeinterface #51,  2           // InterfaceMethod org/bson/io/BsonOutput.writeString:(Ljava/lang/String;)V
      29: return

  public void doWriteSymbol(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #72                 // Field org/bson/BsonType.SYMBOL:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokeinterface #51,  2           // InterfaceMethod org/bson/io/BsonOutput.writeString:(Ljava/lang/String;)V
      29: return

  public void doWriteTimestamp(org.bson.BsonTimestamp);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #73                 // Field org/bson/BsonType.TIMESTAMP:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: aload_0
      20: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      23: aload_1
      24: invokevirtual #74                 // Method org/bson/BsonTimestamp.getValue:()J
      27: invokeinterface #48,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt64:(J)V
      32: return

  public void doWriteUndefined();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: getstatic     #75                 // Field org/bson/BsonType.UNDEFINED:Lorg/bson/BsonType;
       7: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      10: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      15: aload_0
      16: invokespecial #27                 // Method writeCurrentName:()V
      19: return

  public void pipe(org.bson.BsonReader);
    Code:
       0: ldc           #76                 // String reader
       2: aload_1
       3: invokestatic  #77                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aconst_null
      10: invokespecial #78                 // Method pipeDocument:(Lorg/bson/BsonReader;Ljava/util/List;)V
      13: return

  public void pipe(org.bson.BsonReader, java.util.List<org.bson.BsonElement>);
    Code:
       0: ldc           #76                 // String reader
       2: aload_1
       3: invokestatic  #77                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #79                 // String extraElements
       9: aload_2
      10: invokestatic  #77                 // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #78                 // Method pipeDocument:(Lorg/bson/BsonReader;Ljava/util/List;)V
      20: return

  private void pipeDocument(org.bson.BsonReader, java.util.List<org.bson.BsonElement>);
    Code:
       0: aload_1
       1: instanceof    #80                 // class org/bson/BsonBinaryReader
       4: ifeq          302
       7: aload_1
       8: checkcast     #80                 // class org/bson/BsonBinaryReader
      11: astore_3
      12: aload_0
      13: invokevirtual #22                 // Method getState:()Lorg/bson/AbstractBsonWriter$State;
      16: getstatic     #23                 // Field org/bson/AbstractBsonWriter$State.VALUE:Lorg/bson/AbstractBsonWriter$State;
      19: if_acmpne     41
      22: aload_0
      23: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      26: getstatic     #24                 // Field org/bson/BsonType.DOCUMENT:Lorg/bson/BsonType;
      29: invokevirtual #25                 // Method org/bson/BsonType.getValue:()I
      32: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      37: aload_0
      38: invokespecial #27                 // Method writeCurrentName:()V
      41: aload_3
      42: invokevirtual #81                 // Method org/bson/BsonBinaryReader.getBsonInput:()Lorg/bson/io/BsonInput;
      45: astore        4
      47: aload         4
      49: invokeinterface #82,  1           // InterfaceMethod org/bson/io/BsonInput.readInt32:()I
      54: istore        5
      56: iload         5
      58: iconst_5
      59: if_icmpge     72
      62: new           #83                 // class org/bson/BsonSerializationException
      65: dup
      66: ldc           #84                 // String Document size must be at least 5
      68: invokespecial #85                 // Method org/bson/BsonSerializationException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      76: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      81: istore        6
      83: aload_0
      84: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      87: iload         5
      89: invokeinterface #33,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      94: iload         5
      96: iconst_4
      97: isub
      98: newarray       byte
     100: astore        7
     102: aload         4
     104: aload         7
     106: invokeinterface #86,  2           // InterfaceMethod org/bson/io/BsonInput.readBytes:([B)V
     111: aload_0
     112: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     115: aload         7
     117: invokeinterface #45,  2           // InterfaceMethod org/bson/io/BsonOutput.writeBytes:([B)V
     122: aload_3
     123: getstatic     #87                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
     126: invokevirtual #88                 // Method org/bson/BsonBinaryReader.setState:(Lorg/bson/AbstractBsonReader$State;)V
     129: aload_2
     130: ifnull        230
     133: aload_0
     134: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     137: aload_0
     138: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     141: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
     146: iconst_1
     147: isub
     148: invokeinterface #89,  2           // InterfaceMethod org/bson/io/BsonOutput.truncateToPosition:(I)V
     153: aload_0
     154: new           #21                 // class org/bson/BsonBinaryWriter$Context
     157: dup
     158: aload_0
     159: aload_0
     160: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
     163: getstatic     #29                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
     166: iload         6
     168: invokespecial #31                 // Method org/bson/BsonBinaryWriter$Context."<init>":(Lorg/bson/BsonBinaryWriter;Lorg/bson/BsonBinaryWriter$Context;Lorg/bson/BsonContextType;I)V
     171: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
     174: aload_0
     175: getstatic     #90                 // Field org/bson/AbstractBsonWriter$State.NAME:Lorg/bson/AbstractBsonWriter$State;
     178: invokevirtual #91                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     181: aload_0
     182: aload_2
     183: invokevirtual #92                 // Method pipeExtraElements:(Ljava/util/List;)V
     186: aload_0
     187: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     190: iconst_0
     191: invokeinterface #26,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
     196: aload_0
     197: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     200: iload         6
     202: aload_0
     203: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     206: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
     211: iload         6
     213: isub
     214: invokeinterface #93,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(II)V
     219: aload_0
     220: aload_0
     221: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
     224: invokevirtual #35                 // Method org/bson/BsonBinaryWriter$Context.getParentContext:()Lorg/bson/BsonBinaryWriter$Context;
     227: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
     230: aload_0
     231: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
     234: ifnonnull     247
     237: aload_0
     238: getstatic     #94                 // Field org/bson/AbstractBsonWriter$State.DONE:Lorg/bson/AbstractBsonWriter$State;
     241: invokevirtual #91                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     244: goto          283
     247: aload_0
     248: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
     251: invokevirtual #36                 // Method org/bson/BsonBinaryWriter$Context.getContextType:()Lorg/bson/BsonContextType;
     254: getstatic     #37                 // Field org/bson/BsonContextType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonContextType;
     257: if_acmpne     275
     260: aload_0
     261: invokespecial #34                 // Method backpatchSize:()V
     264: aload_0
     265: aload_0
     266: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
     269: invokevirtual #35                 // Method org/bson/BsonBinaryWriter$Context.getParentContext:()Lorg/bson/BsonBinaryWriter$Context;
     272: invokevirtual #32                 // Method setContext:(Lorg/bson/AbstractBsonWriter$Context;)V
     275: aload_0
     276: aload_0
     277: invokevirtual #95                 // Method getNextState:()Lorg/bson/AbstractBsonWriter$State;
     280: invokevirtual #91                 // Method setState:(Lorg/bson/AbstractBsonWriter$State;)V
     283: aload_0
     284: aload_0
     285: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
     288: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
     293: iload         6
     295: isub
     296: invokespecial #96                 // Method validateSize:(I)V
     299: goto          320
     302: aload_2
     303: ifnull        315
     306: aload_0
     307: aload_1
     308: aload_2
     309: invokespecial #97                 // Method org/bson/AbstractBsonWriter.pipe:(Lorg/bson/BsonReader;Ljava/util/List;)V
     312: goto          320
     315: aload_0
     316: aload_1
     317: invokespecial #98                 // Method org/bson/AbstractBsonWriter.pipe:(Lorg/bson/BsonReader;)V
     320: return

  public void pushMaxDocumentSize(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxDocumentSizeStack:Ljava/util/Stack;
       4: iload_1
       5: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #18                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void popMaxDocumentSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxDocumentSizeStack:Ljava/util/Stack;
       4: invokevirtual #99                 // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: pop
       8: return

  public void mark();
    Code:
       0: aload_0
       1: new           #100                // class org/bson/BsonBinaryWriter$Mark
       4: dup
       5: aload_0
       6: invokespecial #101                // Method org/bson/BsonBinaryWriter$Mark."<init>":(Lorg/bson/BsonBinaryWriter;)V
       9: putfield      #1                  // Field mark:Lorg/bson/BsonBinaryWriter$Mark;
      12: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #1                  // Field mark:Lorg/bson/BsonBinaryWriter$Mark;
       4: ifnonnull     17
       7: new           #102                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #103                // String Can not reset without first marking
      13: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #1                  // Field mark:Lorg/bson/BsonBinaryWriter$Mark;
      21: invokevirtual #105                // Method org/bson/BsonBinaryWriter$Mark.reset:()V
      24: aload_0
      25: aconst_null
      26: putfield      #1                  // Field mark:Lorg/bson/BsonBinaryWriter$Mark;
      29: return

  private void writeCurrentName();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
       4: invokevirtual #36                 // Method org/bson/BsonBinaryWriter$Context.getContextType:()Lorg/bson/BsonContextType;
       7: getstatic     #39                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      10: if_acmpne     35
      13: aload_0
      14: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      17: aload_0
      18: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      21: invokestatic  #106                // Method org/bson/BsonBinaryWriter$Context.access$008:(Lorg/bson/BsonBinaryWriter$Context;)I
      24: invokestatic  #107                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      27: invokeinterface #69,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
      32: goto          48
      35: aload_0
      36: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      39: aload_0
      40: invokevirtual #108                // Method getName:()Ljava/lang/String;
      43: invokeinterface #69,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
      48: return

  private void backpatchSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
       9: aload_0
      10: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
      13: invokestatic  #109                // Method org/bson/BsonBinaryWriter$Context.access$100:(Lorg/bson/BsonBinaryWriter$Context;)I
      16: isub
      17: istore_1
      18: aload_0
      19: iload_1
      20: invokespecial #96                 // Method validateSize:(I)V
      23: aload_0
      24: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      27: aload_0
      28: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
      31: invokeinterface #30,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      36: iload_1
      37: isub
      38: iload_1
      39: invokeinterface #93,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(II)V
      44: return

  private void validateSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #14                 // Field maxDocumentSizeStack:Ljava/util/Stack;
       5: invokevirtual #110                // Method java/util/Stack.peek:()Ljava/lang/Object;
       8: checkcast     #111                // class java/lang/Integer
      11: invokevirtual #112                // Method java/lang/Integer.intValue:()I
      14: if_icmple     51
      17: new           #83                 // class org/bson/BsonSerializationException
      20: dup
      21: ldc           #113                // String Document size of %d is larger than maximum of %d.
      23: iconst_2
      24: anewarray     #114                // class java/lang/Object
      27: dup
      28: iconst_0
      29: iload_1
      30: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_1
      36: aload_0
      37: getfield      #14                 // Field maxDocumentSizeStack:Ljava/util/Stack;
      40: invokevirtual #110                // Method java/util/Stack.peek:()Ljava/lang/Object;
      43: aastore
      44: invokestatic  #115                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      47: invokespecial #85                 // Method org/bson/BsonSerializationException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: return

  protected org.bson.AbstractBsonWriter$Context getContext();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getContext:()Lorg/bson/BsonBinaryWriter$Context;
       4: areturn

  static org.bson.io.BsonOutput access$200(org.bson.BsonBinaryWriter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bsonOutput:Lorg/bson/io/BsonOutput;
       4: areturn

  static org.bson.BsonBinaryWriter$Mark access$300(org.bson.BsonBinaryWriter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field mark:Lorg/bson/BsonBinaryWriter$Mark;
       4: areturn
}
