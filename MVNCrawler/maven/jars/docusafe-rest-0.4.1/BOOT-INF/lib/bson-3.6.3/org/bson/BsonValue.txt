Compiled from "BsonValue.java"
public abstract class org.bson.BsonValue {
  org.bson.BsonValue();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract org.bson.BsonType getBsonType();

  public org.bson.BsonDocument asDocument();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/bson/BsonType.DOCUMENT:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #4                  // class org/bson/BsonDocument
      11: areturn

  public org.bson.BsonArray asArray();
    Code:
       0: aload_0
       1: getstatic     #5                  // Field org/bson/BsonType.ARRAY:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #6                  // class org/bson/BsonArray
      11: areturn

  public org.bson.BsonString asString();
    Code:
       0: aload_0
       1: getstatic     #7                  // Field org/bson/BsonType.STRING:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #8                  // class org/bson/BsonString
      11: areturn

  public org.bson.BsonNumber asNumber();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getBsonType:()Lorg/bson/BsonType;
       4: getstatic     #10                 // Field org/bson/BsonType.INT32:Lorg/bson/BsonType;
       7: if_acmpeq     54
      10: aload_0
      11: invokevirtual #9                  // Method getBsonType:()Lorg/bson/BsonType;
      14: getstatic     #11                 // Field org/bson/BsonType.INT64:Lorg/bson/BsonType;
      17: if_acmpeq     54
      20: aload_0
      21: invokevirtual #9                  // Method getBsonType:()Lorg/bson/BsonType;
      24: getstatic     #12                 // Field org/bson/BsonType.DOUBLE:Lorg/bson/BsonType;
      27: if_acmpeq     54
      30: new           #13                 // class org/bson/BsonInvalidOperationException
      33: dup
      34: ldc           #14                 // String Value expected to be of a numerical BSON type is of unexpected type %s
      36: iconst_1
      37: anewarray     #15                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: invokevirtual #9                  // Method getBsonType:()Lorg/bson/BsonType;
      46: aastore
      47: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      50: invokespecial #17                 // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: checkcast     #18                 // class org/bson/BsonNumber
      58: areturn

  public org.bson.BsonInt32 asInt32();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/bson/BsonType.INT32:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #19                 // class org/bson/BsonInt32
      11: areturn

  public org.bson.BsonInt64 asInt64();
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/bson/BsonType.INT64:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #20                 // class org/bson/BsonInt64
      11: areturn

  public org.bson.BsonDecimal128 asDecimal128();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/bson/BsonType.DECIMAL128:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #22                 // class org/bson/BsonDecimal128
      11: areturn

  public org.bson.BsonDouble asDouble();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/bson/BsonType.DOUBLE:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #23                 // class org/bson/BsonDouble
      11: areturn

  public org.bson.BsonBoolean asBoolean();
    Code:
       0: aload_0
       1: getstatic     #24                 // Field org/bson/BsonType.BOOLEAN:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #25                 // class org/bson/BsonBoolean
      11: areturn

  public org.bson.BsonObjectId asObjectId();
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/bson/BsonType.OBJECT_ID:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #27                 // class org/bson/BsonObjectId
      11: areturn

  public org.bson.BsonDbPointer asDBPointer();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/bson/BsonType.DB_POINTER:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #29                 // class org/bson/BsonDbPointer
      11: areturn

  public org.bson.BsonTimestamp asTimestamp();
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/bson/BsonType.TIMESTAMP:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #31                 // class org/bson/BsonTimestamp
      11: areturn

  public org.bson.BsonBinary asBinary();
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/bson/BsonType.BINARY:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #33                 // class org/bson/BsonBinary
      11: areturn

  public org.bson.BsonDateTime asDateTime();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field org/bson/BsonType.DATE_TIME:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #35                 // class org/bson/BsonDateTime
      11: areturn

  public org.bson.BsonSymbol asSymbol();
    Code:
       0: aload_0
       1: getstatic     #36                 // Field org/bson/BsonType.SYMBOL:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #37                 // class org/bson/BsonSymbol
      11: areturn

  public org.bson.BsonRegularExpression asRegularExpression();
    Code:
       0: aload_0
       1: getstatic     #38                 // Field org/bson/BsonType.REGULAR_EXPRESSION:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #39                 // class org/bson/BsonRegularExpression
      11: areturn

  public org.bson.BsonJavaScript asJavaScript();
    Code:
       0: aload_0
       1: getstatic     #40                 // Field org/bson/BsonType.JAVASCRIPT:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #41                 // class org/bson/BsonJavaScript
      11: areturn

  public org.bson.BsonJavaScriptWithScope asJavaScriptWithScope();
    Code:
       0: aload_0
       1: getstatic     #42                 // Field org/bson/BsonType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonType;
       4: invokespecial #3                  // Method throwIfInvalidType:(Lorg/bson/BsonType;)V
       7: aload_0
       8: checkcast     #43                 // class org/bson/BsonJavaScriptWithScope
      11: areturn

  public boolean isNull();
    Code:
       0: aload_0
       1: instanceof    #44                 // class org/bson/BsonNull
       4: ireturn

  public boolean isDocument();
    Code:
       0: aload_0
       1: instanceof    #4                  // class org/bson/BsonDocument
       4: ireturn

  public boolean isArray();
    Code:
       0: aload_0
       1: instanceof    #6                  // class org/bson/BsonArray
       4: ireturn

  public boolean isString();
    Code:
       0: aload_0
       1: instanceof    #8                  // class org/bson/BsonString
       4: ireturn

  public boolean isNumber();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method isInt32:()Z
       4: ifne          21
       7: aload_0
       8: invokevirtual #46                 // Method isInt64:()Z
      11: ifne          21
      14: aload_0
      15: invokevirtual #47                 // Method isDouble:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean isInt32();
    Code:
       0: aload_0
       1: instanceof    #19                 // class org/bson/BsonInt32
       4: ireturn

  public boolean isInt64();
    Code:
       0: aload_0
       1: instanceof    #20                 // class org/bson/BsonInt64
       4: ireturn

  public boolean isDecimal128();
    Code:
       0: aload_0
       1: instanceof    #22                 // class org/bson/BsonDecimal128
       4: ireturn

  public boolean isDouble();
    Code:
       0: aload_0
       1: instanceof    #23                 // class org/bson/BsonDouble
       4: ireturn

  public boolean isBoolean();
    Code:
       0: aload_0
       1: instanceof    #25                 // class org/bson/BsonBoolean
       4: ireturn

  public boolean isObjectId();
    Code:
       0: aload_0
       1: instanceof    #27                 // class org/bson/BsonObjectId
       4: ireturn

  public boolean isDBPointer();
    Code:
       0: aload_0
       1: instanceof    #29                 // class org/bson/BsonDbPointer
       4: ireturn

  public boolean isTimestamp();
    Code:
       0: aload_0
       1: instanceof    #31                 // class org/bson/BsonTimestamp
       4: ireturn

  public boolean isBinary();
    Code:
       0: aload_0
       1: instanceof    #33                 // class org/bson/BsonBinary
       4: ireturn

  public boolean isDateTime();
    Code:
       0: aload_0
       1: instanceof    #35                 // class org/bson/BsonDateTime
       4: ireturn

  public boolean isSymbol();
    Code:
       0: aload_0
       1: instanceof    #37                 // class org/bson/BsonSymbol
       4: ireturn

  public boolean isRegularExpression();
    Code:
       0: aload_0
       1: instanceof    #39                 // class org/bson/BsonRegularExpression
       4: ireturn

  public boolean isJavaScript();
    Code:
       0: aload_0
       1: instanceof    #41                 // class org/bson/BsonJavaScript
       4: ireturn

  public boolean isJavaScriptWithScope();
    Code:
       0: aload_0
       1: instanceof    #43                 // class org/bson/BsonJavaScriptWithScope
       4: ireturn

  private void throwIfInvalidType(org.bson.BsonType);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getBsonType:()Lorg/bson/BsonType;
       4: aload_1
       5: if_acmpeq     36
       8: new           #13                 // class org/bson/BsonInvalidOperationException
      11: dup
      12: ldc           #48                 // String Value expected to be of type %s is of unexpected type %s
      14: iconst_2
      15: anewarray     #15                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: dup
      23: iconst_1
      24: aload_0
      25: invokevirtual #9                  // Method getBsonType:()Lorg/bson/BsonType;
      28: aastore
      29: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #17                 // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return
}
