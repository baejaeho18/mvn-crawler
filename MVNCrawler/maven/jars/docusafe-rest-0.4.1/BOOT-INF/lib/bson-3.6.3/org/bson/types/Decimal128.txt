Compiled from "Decimal128.java"
public final class org.bson.types.Decimal128 implements java.io.Serializable {
  private static final long serialVersionUID;

  private static final long INFINITY_MASK;

  private static final long NaN_MASK;

  private static final long SIGN_BIT_MASK;

  private static final int MIN_EXPONENT;

  private static final int MAX_EXPONENT;

  private static final int EXPONENT_OFFSET;

  private static final int MAX_BIT_LENGTH;

  private static final java.math.BigInteger BIG_INT_TEN;

  private static final java.math.BigInteger BIG_INT_ONE;

  private static final java.math.BigInteger BIG_INT_ZERO;

  private static final java.util.Set<java.lang.String> NaN_STRINGS;

  private static final java.util.Set<java.lang.String> NEGATIVE_NaN_STRINGS;

  private static final java.util.Set<java.lang.String> POSITIVE_INFINITY_STRINGS;

  private static final java.util.Set<java.lang.String> NEGATIVE_INFINITY_STRINGS;

  public static final org.bson.types.Decimal128 POSITIVE_INFINITY;

  public static final org.bson.types.Decimal128 NEGATIVE_INFINITY;

  public static final org.bson.types.Decimal128 NEGATIVE_NaN;

  public static final org.bson.types.Decimal128 NaN;

  public static final org.bson.types.Decimal128 POSITIVE_ZERO;

  public static final org.bson.types.Decimal128 NEGATIVE_ZERO;

  private final long high;

  private final long low;

  public static org.bson.types.Decimal128 parse(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #2                  // Field NaN_STRINGS:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #3,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: getstatic     #4                  // Field NaN:Lorg/bson/types/Decimal128;
      20: areturn
      21: getstatic     #5                  // Field NEGATIVE_NaN_STRINGS:Ljava/util/Set;
      24: aload_1
      25: invokeinterface #3,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      30: ifeq          37
      33: getstatic     #6                  // Field NEGATIVE_NaN:Lorg/bson/types/Decimal128;
      36: areturn
      37: getstatic     #7                  // Field POSITIVE_INFINITY_STRINGS:Ljava/util/Set;
      40: aload_1
      41: invokeinterface #3,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: getstatic     #8                  // Field POSITIVE_INFINITY:Lorg/bson/types/Decimal128;
      52: areturn
      53: getstatic     #9                  // Field NEGATIVE_INFINITY_STRINGS:Ljava/util/Set;
      56: aload_1
      57: invokeinterface #3,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      62: ifeq          69
      65: getstatic     #10                 // Field NEGATIVE_INFINITY:Lorg/bson/types/Decimal128;
      68: areturn
      69: new           #11                 // class org/bson/types/Decimal128
      72: dup
      73: new           #12                 // class java/math/BigDecimal
      76: dup
      77: aload_0
      78: invokespecial #13                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      81: aload_0
      82: iconst_0
      83: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      86: bipush        45
      88: if_icmpne     95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: invokespecial #15                 // Method "<init>":(Ljava/math/BigDecimal;Z)V
      99: areturn

  public static org.bson.types.Decimal128 fromIEEE754BIDEncoding(long, long);
    Code:
       0: new           #11                 // class org/bson/types/Decimal128
       3: dup
       4: lload_0
       5: lload_2
       6: invokespecial #16                 // Method "<init>":(JJ)V
       9: areturn

  public org.bson.types.Decimal128(long);
    Code:
       0: aload_0
       1: new           #12                 // class java/math/BigDecimal
       4: dup
       5: lload_1
       6: getstatic     #17                 // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
       9: invokespecial #18                 // Method java/math/BigDecimal."<init>":(JLjava/math/MathContext;)V
      12: invokespecial #19                 // Method "<init>":(Ljava/math/BigDecimal;)V
      15: return

  public org.bson.types.Decimal128(java.math.BigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #20                 // Method java/math/BigDecimal.signum:()I
       6: iconst_m1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: invokespecial #15                 // Method "<init>":(Ljava/math/BigDecimal;Z)V
      18: return

  private org.bson.types.Decimal128(long, long);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #22                 // Field high:J
       9: aload_0
      10: lload_3
      11: putfield      #23                 // Field low:J
      14: return

  private org.bson.types.Decimal128(java.math.BigDecimal, boolean);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: lconst_0
       5: lstore_3
       6: lconst_0
       7: lstore        5
       9: aload_0
      10: aload_1
      11: invokespecial #24                 // Method clampAndRound:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
      14: astore        7
      16: aload         7
      18: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
      21: ineg
      22: i2l
      23: lstore        8
      25: lload         8
      27: ldc2_w        #26                 // long -6176l
      30: lcmp
      31: iflt          43
      34: lload         8
      36: ldc2_w        #28                 // long 6111l
      39: lcmp
      40: ifle          71
      43: new           #30                 // class java/lang/AssertionError
      46: dup
      47: new           #31                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #33                 // String Exponent is out of range for Decimal128 encoding:
      56: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: lload         8
      61: invokevirtual #35                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      64: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #37                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      70: athrow
      71: aload         7
      73: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      76: invokevirtual #39                 // Method java/math/BigInteger.bitLength:()I
      79: bipush        113
      81: if_icmple     115
      84: new           #30                 // class java/lang/AssertionError
      87: dup
      88: new           #31                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #40                 // String Unscaled roundedValue is out of range for Decimal128 encoding:
      97: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload         7
     102: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
     105: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokespecial #37                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     114: athrow
     115: aload         7
     117: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
     120: invokevirtual #42                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
     123: astore        10
     125: aload         10
     127: invokevirtual #39                 // Method java/math/BigInteger.bitLength:()I
     130: istore        11
     132: iconst_0
     133: istore        12
     135: iload         12
     137: bipush        64
     139: iload         11
     141: invokestatic  #43                 // Method java/lang/Math.min:(II)I
     144: if_icmpge     172
     147: aload         10
     149: iload         12
     151: invokevirtual #44                 // Method java/math/BigInteger.testBit:(I)Z
     154: ifeq          166
     157: lload         5
     159: lconst_1
     160: iload         12
     162: lshl
     163: lor
     164: lstore        5
     166: iinc          12, 1
     169: goto          135
     172: bipush        64
     174: istore        12
     176: iload         12
     178: iload         11
     180: if_icmpge     209
     183: aload         10
     185: iload         12
     187: invokevirtual #44                 // Method java/math/BigInteger.testBit:(I)Z
     190: ifeq          203
     193: lload_3
     194: lconst_1
     195: iload         12
     197: bipush        64
     199: isub
     200: lshl
     201: lor
     202: lstore_3
     203: iinc          12, 1
     206: goto          176
     209: lload         8
     211: ldc2_w        #45                 // long 6176l
     214: ladd
     215: lstore        12
     217: lload_3
     218: lload         12
     220: bipush        49
     222: lshl
     223: lor
     224: lstore_3
     225: aload         7
     227: invokevirtual #20                 // Method java/math/BigDecimal.signum:()I
     230: iconst_m1
     231: if_icmpeq     238
     234: iload_2
     235: ifeq          244
     238: lload_3
     239: ldc2_w        #47                 // long -9223372036854775808l
     242: lor
     243: lstore_3
     244: aload_0
     245: lload_3
     246: putfield      #22                 // Field high:J
     249: aload_0
     250: lload         5
     252: putfield      #23                 // Field low:J
     255: return

  private java.math.BigDecimal clampAndRound(java.math.BigDecimal);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
       4: ineg
       5: sipush        6111
       8: if_icmple     125
      11: aload_1
      12: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
      15: ineg
      16: sipush        6111
      19: isub
      20: istore_3
      21: aload_1
      22: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      25: getstatic     #49                 // Field BIG_INT_ZERO:Ljava/math/BigInteger;
      28: invokevirtual #50                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      31: ifeq          52
      34: new           #12                 // class java/math/BigDecimal
      37: dup
      38: aload_1
      39: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      42: sipush        -6111
      45: invokespecial #51                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
      48: astore_2
      49: goto          122
      52: iload_3
      53: aload_1
      54: invokevirtual #52                 // Method java/math/BigDecimal.precision:()I
      57: iadd
      58: bipush        34
      60: if_icmple     90
      63: new           #53                 // class java/lang/NumberFormatException
      66: dup
      67: new           #31                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #54                 // String Exponent is out of range for Decimal128 encoding of
      76: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #55                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: getstatic     #56                 // Field BIG_INT_TEN:Ljava/math/BigInteger;
      93: iload_3
      94: invokevirtual #57                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
      97: astore        4
      99: new           #12                 // class java/math/BigDecimal
     102: dup
     103: aload_1
     104: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
     107: aload         4
     109: invokevirtual #58                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     112: aload_1
     113: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
     116: iload_3
     117: iadd
     118: invokespecial #51                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
     121: astore_2
     122: goto          228
     125: aload_1
     126: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
     129: ineg
     130: sipush        -6176
     133: if_icmpge     199
     136: aload_1
     137: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
     140: sipush        -6176
     143: iadd
     144: istore_3
     145: aload_0
     146: aload_1
     147: iload_3
     148: invokespecial #59                 // Method ensureExactRounding:(Ljava/math/BigDecimal;I)I
     151: istore        4
     153: iload         4
     155: ifne          164
     158: getstatic     #60                 // Field BIG_INT_ONE:Ljava/math/BigInteger;
     161: goto          171
     164: getstatic     #56                 // Field BIG_INT_TEN:Ljava/math/BigInteger;
     167: iload_3
     168: invokevirtual #57                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
     171: astore        5
     173: new           #12                 // class java/math/BigDecimal
     176: dup
     177: aload_1
     178: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
     181: aload         5
     183: invokevirtual #61                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     186: aload_1
     187: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
     190: iload_3
     191: isub
     192: invokespecial #51                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
     195: astore_2
     196: goto          228
     199: aload_1
     200: getstatic     #17                 // Field java/math/MathContext.DECIMAL128:Ljava/math/MathContext;
     203: invokevirtual #62                 // Method java/math/BigDecimal.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;
     206: astore_2
     207: aload_1
     208: invokevirtual #52                 // Method java/math/BigDecimal.precision:()I
     211: aload_2
     212: invokevirtual #52                 // Method java/math/BigDecimal.precision:()I
     215: isub
     216: istore_3
     217: iload_3
     218: ifle          228
     221: aload_0
     222: aload_1
     223: iload_3
     224: invokespecial #59                 // Method ensureExactRounding:(Ljava/math/BigDecimal;I)I
     227: pop
     228: aload_2
     229: areturn

  private int ensureExactRounding(java.math.BigDecimal, int);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
       4: invokevirtual #42                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
       7: invokevirtual #63                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
      10: astore_3
      11: iconst_0
      12: aload_3
      13: invokevirtual #64                 // Method java/lang/String.length:()I
      16: iload_2
      17: isub
      18: invokestatic  #65                 // Method java/lang/Math.max:(II)I
      21: istore        4
      23: iload         4
      25: istore        5
      27: iload         5
      29: aload_3
      30: invokevirtual #64                 // Method java/lang/String.length:()I
      33: if_icmpge     80
      36: aload_3
      37: iload         5
      39: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      42: bipush        48
      44: if_icmpeq     74
      47: new           #53                 // class java/lang/NumberFormatException
      50: dup
      51: new           #31                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #66                 // String Conversion to Decimal128 would require inexact rounding of
      60: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_1
      64: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #55                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: iinc          5, 1
      77: goto          27
      80: iload         4
      82: ireturn

  public long getHigh();
    Code:
       0: aload_0
       1: getfield      #22                 // Field high:J
       4: lreturn

  public long getLow();
    Code:
       0: aload_0
       1: getfield      #23                 // Field low:J
       4: lreturn

  public java.math.BigDecimal bigDecimalValue();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method isNaN:()Z
       4: ifeq          17
       7: new           #68                 // class java/lang/ArithmeticException
      10: dup
      11: ldc           #69                 // String NaN can not be converted to a BigDecimal
      13: invokespecial #70                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #71                 // Method isInfinite:()Z
      21: ifeq          34
      24: new           #68                 // class java/lang/ArithmeticException
      27: dup
      28: ldc           #72                 // String Infinity can not be converted to a BigDecimal
      30: invokespecial #70                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: invokespecial #73                 // Method bigDecimalValueNoNegativeZeroCheck:()Ljava/math/BigDecimal;
      38: astore_1
      39: aload_0
      40: invokevirtual #74                 // Method isNegative:()Z
      43: ifeq          63
      46: aload_1
      47: invokevirtual #20                 // Method java/math/BigDecimal.signum:()I
      50: ifne          63
      53: new           #68                 // class java/lang/ArithmeticException
      56: dup
      57: ldc           #75                 // String Negative zero can not be converted to a BigDecimal
      59: invokespecial #70                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_1
      64: areturn

  private java.math.BigDecimal bigDecimalValueNoNegativeZeroCheck();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getExponent:()I
       4: ineg
       5: istore_1
       6: aload_0
       7: invokespecial #77                 // Method twoHighestCombinationBitsAreSet:()Z
      10: ifeq          19
      13: lconst_0
      14: iload_1
      15: invokestatic  #78                 // Method java/math/BigDecimal.valueOf:(JI)Ljava/math/BigDecimal;
      18: areturn
      19: new           #12                 // class java/math/BigDecimal
      22: dup
      23: new           #79                 // class java/math/BigInteger
      26: dup
      27: aload_0
      28: invokevirtual #74                 // Method isNegative:()Z
      31: ifeq          38
      34: iconst_m1
      35: goto          39
      38: iconst_1
      39: aload_0
      40: invokespecial #80                 // Method getBytes:()[B
      43: invokespecial #81                 // Method java/math/BigInteger."<init>":(I[B)V
      46: iload_1
      47: invokespecial #51                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;I)V
      50: areturn

  private byte[] getBytes();
    Code:
       0: bipush        15
       2: newarray       byte
       4: astore_1
       5: ldc2_w        #82                 // long 255l
       8: lstore_2
       9: bipush        14
      11: istore        4
      13: iload         4
      15: bipush        7
      17: if_icmplt     51
      20: aload_1
      21: iload         4
      23: aload_0
      24: getfield      #23                 // Field low:J
      27: lload_2
      28: land
      29: bipush        14
      31: iload         4
      33: isub
      34: iconst_3
      35: ishl
      36: lushr
      37: l2i
      38: i2b
      39: bastore
      40: lload_2
      41: bipush        8
      43: lshl
      44: lstore_2
      45: iinc          4, -1
      48: goto          13
      51: ldc2_w        #82                 // long 255l
      54: lstore_2
      55: bipush        6
      57: istore        4
      59: iload         4
      61: iconst_1
      62: if_icmplt     96
      65: aload_1
      66: iload         4
      68: aload_0
      69: getfield      #22                 // Field high:J
      72: lload_2
      73: land
      74: bipush        6
      76: iload         4
      78: isub
      79: iconst_3
      80: ishl
      81: lushr
      82: l2i
      83: i2b
      84: bastore
      85: lload_2
      86: bipush        8
      88: lshl
      89: lstore_2
      90: iinc          4, -1
      93: goto          59
      96: ldc2_w        #84                 // long 281474976710656l
      99: lstore_2
     100: aload_1
     101: iconst_0
     102: aload_0
     103: getfield      #22                 // Field high:J
     106: lload_2
     107: land
     108: bipush        48
     110: lushr
     111: l2i
     112: i2b
     113: bastore
     114: aload_1
     115: areturn

  int getExponent();
    Code:
       0: aload_0
       1: invokespecial #77                 // Method twoHighestCombinationBitsAreSet:()Z
       4: ifeq          24
       7: aload_0
       8: getfield      #22                 // Field high:J
      11: ldc2_w        #86                 // long 2305807824841605120l
      14: land
      15: bipush        47
      17: lushr
      18: l2i
      19: sipush        6176
      22: isub
      23: ireturn
      24: aload_0
      25: getfield      #22                 // Field high:J
      28: ldc2_w        #88                 // long 9223231299366420480l
      31: land
      32: bipush        49
      34: lushr
      35: l2i
      36: sipush        6176
      39: isub
      40: ireturn

  private boolean twoHighestCombinationBitsAreSet();
    Code:
       0: aload_0
       1: getfield      #22                 // Field high:J
       4: ldc2_w        #90                 // long 6917529027641081856l
       7: land
       8: ldc2_w        #90                 // long 6917529027641081856l
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isNegative();
    Code:
       0: aload_0
       1: getfield      #22                 // Field high:J
       4: ldc2_w        #47                 // long -9223372036854775808l
       7: land
       8: ldc2_w        #47                 // long -9223372036854775808l
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isInfinite();
    Code:
       0: aload_0
       1: getfield      #22                 // Field high:J
       4: ldc2_w        #92                 // long 8646911284551352320l
       7: land
       8: ldc2_w        #92                 // long 8646911284551352320l
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean isFinite();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method isInfinite:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isNaN();
    Code:
       0: aload_0
       1: getfield      #22                 // Field high:J
       4: ldc2_w        #94                 // long 8935141660703064064l
       7: land
       8: ldc2_w        #94                 // long 8935141660703064064l
      11: lcmp
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #11                 // class org/bson/types/Decimal128
      28: astore_2
      29: aload_0
      30: getfield      #22                 // Field high:J
      33: aload_2
      34: getfield      #22                 // Field high:J
      37: lcmp
      38: ifeq          43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: getfield      #23                 // Field low:J
      47: aload_2
      48: getfield      #23                 // Field low:J
      51: lcmp
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: iconst_1
      58: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field low:J
       4: aload_0
       5: getfield      #23                 // Field low:J
       8: bipush        32
      10: lushr
      11: lxor
      12: l2i
      13: istore_1
      14: bipush        31
      16: iload_1
      17: imul
      18: aload_0
      19: getfield      #22                 // Field high:J
      22: aload_0
      23: getfield      #22                 // Field high:J
      26: bipush        32
      28: lushr
      29: lxor
      30: l2i
      31: iadd
      32: istore_1
      33: iload_1
      34: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method isNaN:()Z
       4: ifeq          10
       7: ldc           #97                 // String NaN
       9: areturn
      10: aload_0
      11: invokevirtual #71                 // Method isInfinite:()Z
      14: ifeq          30
      17: aload_0
      18: invokevirtual #74                 // Method isNegative:()Z
      21: ifeq          27
      24: ldc           #98                 // String -Infinity
      26: areturn
      27: ldc           #99                 // String Infinity
      29: areturn
      30: aload_0
      31: invokespecial #100                // Method toStringWithBigDecimal:()Ljava/lang/String;
      34: areturn

  private java.lang.String toStringWithBigDecimal();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokespecial #73                 // Method bigDecimalValueNoNegativeZeroCheck:()Ljava/math/BigDecimal;
      12: astore_2
      13: aload_2
      14: invokevirtual #38                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      17: invokevirtual #42                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      20: invokevirtual #63                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
      23: astore_3
      24: aload_0
      25: invokevirtual #74                 // Method isNegative:()Z
      28: ifeq          38
      31: aload_1
      32: bipush        45
      34: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      37: pop
      38: aload_2
      39: invokevirtual #25                 // Method java/math/BigDecimal.scale:()I
      42: ineg
      43: istore        4
      45: iload         4
      47: aload_3
      48: invokevirtual #64                 // Method java/lang/String.length:()I
      51: iconst_1
      52: isub
      53: iadd
      54: istore        5
      56: iload         4
      58: ifgt          183
      61: iload         5
      63: bipush        -6
      65: if_icmplt     183
      68: iload         4
      70: ifne          82
      73: aload_1
      74: aload_3
      75: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: pop
      79: goto          245
      82: iload         4
      84: ineg
      85: aload_3
      86: invokevirtual #64                 // Method java/lang/String.length:()I
      89: isub
      90: istore        6
      92: iload         6
      94: iflt          148
      97: aload_1
      98: bipush        48
     100: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     103: pop
     104: aload_1
     105: bipush        46
     107: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     110: pop
     111: iconst_0
     112: istore        7
     114: iload         7
     116: iload         6
     118: if_icmpge     134
     121: aload_1
     122: bipush        48
     124: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     127: pop
     128: iinc          7, 1
     131: goto          114
     134: aload_1
     135: aload_3
     136: iconst_0
     137: aload_3
     138: invokevirtual #64                 // Method java/lang/String.length:()I
     141: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     144: pop
     145: goto          180
     148: aload_1
     149: aload_3
     150: iconst_0
     151: iload         6
     153: ineg
     154: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     157: pop
     158: aload_1
     159: bipush        46
     161: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     164: pop
     165: aload_1
     166: aload_3
     167: iload         6
     169: ineg
     170: iload         6
     172: ineg
     173: iload         4
     175: isub
     176: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     179: pop
     180: goto          245
     183: aload_1
     184: aload_3
     185: iconst_0
     186: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
     189: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     192: pop
     193: aload_3
     194: invokevirtual #64                 // Method java/lang/String.length:()I
     197: iconst_1
     198: if_icmple     219
     201: aload_1
     202: bipush        46
     204: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     207: pop
     208: aload_1
     209: aload_3
     210: iconst_1
     211: aload_3
     212: invokevirtual #64                 // Method java/lang/String.length:()I
     215: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     218: pop
     219: aload_1
     220: bipush        69
     222: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     225: pop
     226: iload         5
     228: ifle          238
     231: aload_1
     232: bipush        43
     234: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     237: pop
     238: aload_1
     239: iload         5
     241: invokevirtual #103                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     244: pop
     245: aload_1
     246: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: areturn

  static {};
    Code:
       0: new           #79                 // class java/math/BigInteger
       3: dup
       4: ldc           #104                // String 10
       6: invokespecial #105                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
       9: putstatic     #56                 // Field BIG_INT_TEN:Ljava/math/BigInteger;
      12: new           #79                 // class java/math/BigInteger
      15: dup
      16: ldc           #106                // String 1
      18: invokespecial #105                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      21: putstatic     #60                 // Field BIG_INT_ONE:Ljava/math/BigInteger;
      24: new           #79                 // class java/math/BigInteger
      27: dup
      28: ldc           #107                // String 0
      30: invokespecial #105                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      33: putstatic     #49                 // Field BIG_INT_ZERO:Ljava/math/BigInteger;
      36: new           #108                // class java/util/HashSet
      39: dup
      40: iconst_1
      41: anewarray     #109                // class java/lang/String
      44: dup
      45: iconst_0
      46: ldc           #110                // String nan
      48: aastore
      49: invokestatic  #111                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      52: invokespecial #112                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      55: putstatic     #2                  // Field NaN_STRINGS:Ljava/util/Set;
      58: new           #108                // class java/util/HashSet
      61: dup
      62: iconst_1
      63: anewarray     #109                // class java/lang/String
      66: dup
      67: iconst_0
      68: ldc           #113                // String -nan
      70: aastore
      71: invokestatic  #111                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      74: invokespecial #112                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      77: putstatic     #5                  // Field NEGATIVE_NaN_STRINGS:Ljava/util/Set;
      80: new           #108                // class java/util/HashSet
      83: dup
      84: iconst_4
      85: anewarray     #109                // class java/lang/String
      88: dup
      89: iconst_0
      90: ldc           #114                // String inf
      92: aastore
      93: dup
      94: iconst_1
      95: ldc           #115                // String +inf
      97: aastore
      98: dup
      99: iconst_2
     100: ldc           #116                // String infinity
     102: aastore
     103: dup
     104: iconst_3
     105: ldc           #117                // String +infinity
     107: aastore
     108: invokestatic  #111                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     111: invokespecial #112                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     114: putstatic     #7                  // Field POSITIVE_INFINITY_STRINGS:Ljava/util/Set;
     117: new           #108                // class java/util/HashSet
     120: dup
     121: iconst_2
     122: anewarray     #109                // class java/lang/String
     125: dup
     126: iconst_0
     127: ldc           #118                // String -inf
     129: aastore
     130: dup
     131: iconst_1
     132: ldc           #119                // String -infinity
     134: aastore
     135: invokestatic  #111                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     138: invokespecial #112                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     141: putstatic     #9                  // Field NEGATIVE_INFINITY_STRINGS:Ljava/util/Set;
     144: ldc2_w        #92                 // long 8646911284551352320l
     147: lconst_0
     148: invokestatic  #120                // Method fromIEEE754BIDEncoding:(JJ)Lorg/bson/types/Decimal128;
     151: putstatic     #8                  // Field POSITIVE_INFINITY:Lorg/bson/types/Decimal128;
     154: ldc2_w        #121                // long -576460752303423488l
     157: lconst_0
     158: invokestatic  #120                // Method fromIEEE754BIDEncoding:(JJ)Lorg/bson/types/Decimal128;
     161: putstatic     #10                 // Field NEGATIVE_INFINITY:Lorg/bson/types/Decimal128;
     164: ldc2_w        #123                // long -288230376151711744l
     167: lconst_0
     168: invokestatic  #120                // Method fromIEEE754BIDEncoding:(JJ)Lorg/bson/types/Decimal128;
     171: putstatic     #6                  // Field NEGATIVE_NaN:Lorg/bson/types/Decimal128;
     174: ldc2_w        #94                 // long 8935141660703064064l
     177: lconst_0
     178: invokestatic  #120                // Method fromIEEE754BIDEncoding:(JJ)Lorg/bson/types/Decimal128;
     181: putstatic     #4                  // Field NaN:Lorg/bson/types/Decimal128;
     184: ldc2_w        #125                // long 3476778912330022912l
     187: lconst_0
     188: invokestatic  #120                // Method fromIEEE754BIDEncoding:(JJ)Lorg/bson/types/Decimal128;
     191: putstatic     #127                // Field POSITIVE_ZERO:Lorg/bson/types/Decimal128;
     194: ldc2_w        #128                // long -5746593124524752896l
     197: lconst_0
     198: invokestatic  #120                // Method fromIEEE754BIDEncoding:(JJ)Lorg/bson/types/Decimal128;
     201: putstatic     #130                // Field NEGATIVE_ZERO:Lorg/bson/types/Decimal128;
     204: return
}
