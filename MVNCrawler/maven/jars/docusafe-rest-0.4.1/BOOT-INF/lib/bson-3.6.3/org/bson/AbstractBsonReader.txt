Compiled from "AbstractBsonReader.java"
public abstract class org.bson.AbstractBsonReader implements java.io.Closeable,org.bson.BsonReader {
  private org.bson.AbstractBsonReader$State state;

  private org.bson.AbstractBsonReader$Context context;

  private org.bson.BsonType currentBsonType;

  private java.lang.String currentName;

  private boolean closed;

  protected org.bson.AbstractBsonReader();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #6                  // Field org/bson/AbstractBsonReader$State.INITIAL:Lorg/bson/AbstractBsonReader$State;
       8: putfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      11: return

  public org.bson.BsonType getCurrentBsonType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field currentBsonType:Lorg/bson/BsonType;
       4: areturn

  public java.lang.String getCurrentName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       4: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
       7: if_acmpeq     26
      10: aload_0
      11: ldc           #8                  // String getCurrentName
      13: iconst_1
      14: anewarray     #9                  // class org/bson/AbstractBsonReader$State
      17: dup
      18: iconst_0
      19: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      22: aastore
      23: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      26: aload_0
      27: getfield      #1                  // Field currentName:Ljava/lang/String;
      30: areturn

  protected void setCurrentBsonType(org.bson.BsonType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field currentBsonType:Lorg/bson/BsonType;
       5: return

  public org.bson.AbstractBsonReader$State getState();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       4: areturn

  protected void setState(org.bson.AbstractBsonReader$State);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       5: return

  protected void setCurrentName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field currentName:Ljava/lang/String;
       5: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field closed:Z
       5: return

  protected boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Z
       4: ireturn

  protected abstract org.bson.BsonBinary doReadBinaryData();

  protected abstract byte doPeekBinarySubType();

  protected abstract int doPeekBinarySize();

  protected abstract boolean doReadBoolean();

  protected abstract long doReadDateTime();

  protected abstract double doReadDouble();

  protected abstract void doReadEndArray();

  protected abstract void doReadEndDocument();

  protected abstract int doReadInt32();

  protected abstract long doReadInt64();

  protected abstract org.bson.types.Decimal128 doReadDecimal128();

  protected abstract java.lang.String doReadJavaScript();

  protected abstract java.lang.String doReadJavaScriptWithScope();

  protected abstract void doReadMaxKey();

  protected abstract void doReadMinKey();

  protected abstract void doReadNull();

  protected abstract org.bson.types.ObjectId doReadObjectId();

  protected abstract org.bson.BsonRegularExpression doReadRegularExpression();

  protected abstract org.bson.BsonDbPointer doReadDBPointer();

  protected abstract void doReadStartArray();

  protected abstract void doReadStartDocument();

  protected abstract java.lang.String doReadString();

  protected abstract java.lang.String doReadSymbol();

  protected abstract org.bson.BsonTimestamp doReadTimestamp();

  protected abstract void doReadUndefined();

  protected abstract void doSkipName();

  protected abstract void doSkipValue();

  public org.bson.BsonBinary readBinaryData();
    Code:
       0: aload_0
       1: ldc           #12                 // String readBinaryData
       3: getstatic     #13                 // Field org/bson/BsonType.BINARY:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #17                 // Method doReadBinaryData:()Lorg/bson/BsonBinary;
      21: areturn

  public byte peekBinarySubType();
    Code:
       0: aload_0
       1: ldc           #12                 // String readBinaryData
       3: getstatic     #13                 // Field org/bson/BsonType.BINARY:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: invokevirtual #18                 // Method doPeekBinarySubType:()B
      13: ireturn

  public int peekBinarySize();
    Code:
       0: aload_0
       1: ldc           #12                 // String readBinaryData
       3: getstatic     #13                 // Field org/bson/BsonType.BINARY:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: invokevirtual #19                 // Method doPeekBinarySize:()I
      13: ireturn

  public boolean readBoolean();
    Code:
       0: aload_0
       1: ldc           #20                 // String readBoolean
       3: getstatic     #21                 // Field org/bson/BsonType.BOOLEAN:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #22                 // Method doReadBoolean:()Z
      21: ireturn

  public abstract org.bson.BsonType readBsonType();

  public long readDateTime();
    Code:
       0: aload_0
       1: ldc           #23                 // String readDateTime
       3: getstatic     #24                 // Field org/bson/BsonType.DATE_TIME:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #25                 // Method doReadDateTime:()J
      21: lreturn

  public double readDouble();
    Code:
       0: aload_0
       1: ldc           #26                 // String readDouble
       3: getstatic     #27                 // Field org/bson/BsonType.DOUBLE:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #28                 // Method doReadDouble:()D
      21: dreturn

  public void readEndArray();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isClosed:()Z
       4: ifeq          17
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String BSONBinaryWriter
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
      21: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      24: getstatic     #35                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      27: if_acmpeq     53
      30: aload_0
      31: ldc           #36                 // String readEndArray
      33: aload_0
      34: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
      37: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      40: iconst_1
      41: anewarray     #37                 // class org/bson/BsonContextType
      44: dup
      45: iconst_0
      46: getstatic     #35                 // Field org/bson/BsonContextType.ARRAY:Lorg/bson/BsonContextType;
      49: aastore
      50: invokevirtual #38                 // Method throwInvalidContextType:(Ljava/lang/String;Lorg/bson/BsonContextType;[Lorg/bson/BsonContextType;)V
      53: aload_0
      54: invokevirtual #39                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      57: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      60: if_acmpne     68
      63: aload_0
      64: invokevirtual #41                 // Method readBsonType:()Lorg/bson/BsonType;
      67: pop
      68: aload_0
      69: invokevirtual #39                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      72: getstatic     #42                 // Field org/bson/AbstractBsonReader$State.END_OF_ARRAY:Lorg/bson/AbstractBsonReader$State;
      75: if_acmpeq     94
      78: aload_0
      79: ldc           #43                 // String ReadEndArray
      81: iconst_1
      82: anewarray     #9                  // class org/bson/AbstractBsonReader$State
      85: dup
      86: iconst_0
      87: getstatic     #42                 // Field org/bson/AbstractBsonReader$State.END_OF_ARRAY:Lorg/bson/AbstractBsonReader$State;
      90: aastore
      91: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      94: aload_0
      95: invokevirtual #44                 // Method doReadEndArray:()V
      98: aload_0
      99: invokespecial #45                 // Method setStateOnEnd:()V
     102: return

  public void readEndDocument();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isClosed:()Z
       4: ifeq          17
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String BSONBinaryWriter
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
      21: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      24: getstatic     #46                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
      27: if_acmpeq     72
      30: aload_0
      31: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
      34: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      37: getstatic     #47                 // Field org/bson/BsonContextType.SCOPE_DOCUMENT:Lorg/bson/BsonContextType;
      40: if_acmpeq     72
      43: aload_0
      44: ldc           #48                 // String readEndDocument
      46: aload_0
      47: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
      50: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      53: iconst_2
      54: anewarray     #37                 // class org/bson/BsonContextType
      57: dup
      58: iconst_0
      59: getstatic     #46                 // Field org/bson/BsonContextType.DOCUMENT:Lorg/bson/BsonContextType;
      62: aastore
      63: dup
      64: iconst_1
      65: getstatic     #47                 // Field org/bson/BsonContextType.SCOPE_DOCUMENT:Lorg/bson/BsonContextType;
      68: aastore
      69: invokevirtual #38                 // Method throwInvalidContextType:(Ljava/lang/String;Lorg/bson/BsonContextType;[Lorg/bson/BsonContextType;)V
      72: aload_0
      73: invokevirtual #39                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      76: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      79: if_acmpne     87
      82: aload_0
      83: invokevirtual #41                 // Method readBsonType:()Lorg/bson/BsonType;
      86: pop
      87: aload_0
      88: invokevirtual #39                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      91: getstatic     #49                 // Field org/bson/AbstractBsonReader$State.END_OF_DOCUMENT:Lorg/bson/AbstractBsonReader$State;
      94: if_acmpeq     113
      97: aload_0
      98: ldc           #48                 // String readEndDocument
     100: iconst_1
     101: anewarray     #9                  // class org/bson/AbstractBsonReader$State
     104: dup
     105: iconst_0
     106: getstatic     #49                 // Field org/bson/AbstractBsonReader$State.END_OF_DOCUMENT:Lorg/bson/AbstractBsonReader$State;
     109: aastore
     110: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
     113: aload_0
     114: invokevirtual #50                 // Method doReadEndDocument:()V
     117: aload_0
     118: invokespecial #45                 // Method setStateOnEnd:()V
     121: return

  public int readInt32();
    Code:
       0: aload_0
       1: ldc           #51                 // String readInt32
       3: getstatic     #52                 // Field org/bson/BsonType.INT32:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #53                 // Method doReadInt32:()I
      21: ireturn

  public long readInt64();
    Code:
       0: aload_0
       1: ldc           #54                 // String readInt64
       3: getstatic     #55                 // Field org/bson/BsonType.INT64:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #56                 // Method doReadInt64:()J
      21: lreturn

  public org.bson.types.Decimal128 readDecimal128();
    Code:
       0: aload_0
       1: ldc           #57                 // String readDecimal
       3: getstatic     #58                 // Field org/bson/BsonType.DECIMAL128:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #59                 // Method doReadDecimal128:()Lorg/bson/types/Decimal128;
      21: areturn

  public java.lang.String readJavaScript();
    Code:
       0: aload_0
       1: ldc           #60                 // String readJavaScript
       3: getstatic     #61                 // Field org/bson/BsonType.JAVASCRIPT:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #62                 // Method doReadJavaScript:()Ljava/lang/String;
      21: areturn

  public java.lang.String readJavaScriptWithScope();
    Code:
       0: aload_0
       1: ldc           #63                 // String readJavaScriptWithScope
       3: getstatic     #64                 // Field org/bson/BsonType.JAVASCRIPT_WITH_SCOPE:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: getstatic     #65                 // Field org/bson/AbstractBsonReader$State.SCOPE_DOCUMENT:Lorg/bson/AbstractBsonReader$State;
      13: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      16: aload_0
      17: invokevirtual #66                 // Method doReadJavaScriptWithScope:()Ljava/lang/String;
      20: areturn

  public void readMaxKey();
    Code:
       0: aload_0
       1: ldc           #67                 // String readMaxKey
       3: getstatic     #68                 // Field org/bson/BsonType.MAX_KEY:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #69                 // Method doReadMaxKey:()V
      21: return

  public void readMinKey();
    Code:
       0: aload_0
       1: ldc           #70                 // String readMinKey
       3: getstatic     #71                 // Field org/bson/BsonType.MIN_KEY:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #72                 // Method doReadMinKey:()V
      21: return

  public void readNull();
    Code:
       0: aload_0
       1: ldc           #73                 // String readNull
       3: getstatic     #74                 // Field org/bson/BsonType.NULL:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #75                 // Method doReadNull:()V
      21: return

  public org.bson.types.ObjectId readObjectId();
    Code:
       0: aload_0
       1: ldc           #76                 // String readObjectId
       3: getstatic     #77                 // Field org/bson/BsonType.OBJECT_ID:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #78                 // Method doReadObjectId:()Lorg/bson/types/ObjectId;
      21: areturn

  public org.bson.BsonRegularExpression readRegularExpression();
    Code:
       0: aload_0
       1: ldc           #79                 // String readRegularExpression
       3: getstatic     #80                 // Field org/bson/BsonType.REGULAR_EXPRESSION:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #81                 // Method doReadRegularExpression:()Lorg/bson/BsonRegularExpression;
      21: areturn

  public org.bson.BsonDbPointer readDBPointer();
    Code:
       0: aload_0
       1: ldc           #82                 // String readDBPointer
       3: getstatic     #83                 // Field org/bson/BsonType.DB_POINTER:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #84                 // Method doReadDBPointer:()Lorg/bson/BsonDbPointer;
      21: areturn

  public void readStartArray();
    Code:
       0: aload_0
       1: ldc           #85                 // String readStartArray
       3: getstatic     #86                 // Field org/bson/BsonType.ARRAY:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: invokevirtual #87                 // Method doReadStartArray:()V
      13: aload_0
      14: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      17: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      20: return

  public void readStartDocument();
    Code:
       0: aload_0
       1: ldc           #88                 // String readStartDocument
       3: getstatic     #89                 // Field org/bson/BsonType.DOCUMENT:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: invokevirtual #90                 // Method doReadStartDocument:()V
      13: aload_0
      14: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      17: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      20: return

  public java.lang.String readString();
    Code:
       0: aload_0
       1: ldc           #91                 // String readString
       3: getstatic     #92                 // Field org/bson/BsonType.STRING:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #93                 // Method doReadString:()Ljava/lang/String;
      21: areturn

  public java.lang.String readSymbol();
    Code:
       0: aload_0
       1: ldc           #94                 // String readSymbol
       3: getstatic     #95                 // Field org/bson/BsonType.SYMBOL:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #96                 // Method doReadSymbol:()Ljava/lang/String;
      21: areturn

  public org.bson.BsonTimestamp readTimestamp();
    Code:
       0: aload_0
       1: ldc           #97                 // String readTimestamp
       3: getstatic     #98                 // Field org/bson/BsonType.TIMESTAMP:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #99                 // Method doReadTimestamp:()Lorg/bson/BsonTimestamp;
      21: areturn

  public void readUndefined();
    Code:
       0: aload_0
       1: ldc           #100                // String readUndefined
       3: getstatic     #101                // Field org/bson/BsonType.UNDEFINED:Lorg/bson/BsonType;
       6: invokevirtual #14                 // Method checkPreconditions:(Ljava/lang/String;Lorg/bson/BsonType;)V
       9: aload_0
      10: aload_0
      11: invokevirtual #15                 // Method getNextState:()Lorg/bson/AbstractBsonReader$State;
      14: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      17: aload_0
      18: invokevirtual #102                // Method doReadUndefined:()V
      21: return

  public void skipName();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isClosed:()Z
       4: ifeq          17
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #103                // String This instance has been closed
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #39                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      21: getstatic     #104                // Field org/bson/AbstractBsonReader$State.NAME:Lorg/bson/AbstractBsonReader$State;
      24: if_acmpeq     43
      27: aload_0
      28: ldc           #105                // String skipName
      30: iconst_1
      31: anewarray     #9                  // class org/bson/AbstractBsonReader$State
      34: dup
      35: iconst_0
      36: getstatic     #104                // Field org/bson/AbstractBsonReader$State.NAME:Lorg/bson/AbstractBsonReader$State;
      39: aastore
      40: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      43: aload_0
      44: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      47: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      50: aload_0
      51: invokevirtual #106                // Method doSkipName:()V
      54: return

  public void skipValue();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isClosed:()Z
       4: ifeq          17
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String BSONBinaryWriter
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #39                 // Method getState:()Lorg/bson/AbstractBsonReader$State;
      21: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      24: if_acmpeq     43
      27: aload_0
      28: ldc           #107                // String skipValue
      30: iconst_1
      31: anewarray     #9                  // class org/bson/AbstractBsonReader$State
      34: dup
      35: iconst_0
      36: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      39: aastore
      40: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      43: aload_0
      44: invokevirtual #108                // Method doSkipValue:()V
      47: aload_0
      48: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      51: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      54: return

  public org.bson.BsonBinary readBinaryData(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #110                // Method readBinaryData:()Lorg/bson/BsonBinary;
       9: areturn

  public boolean readBoolean(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #111                // Method readBoolean:()Z
       9: ireturn

  public long readDateTime(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #112                // Method readDateTime:()J
       9: lreturn

  public double readDouble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #113                // Method readDouble:()D
       9: dreturn

  public int readInt32(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #114                // Method readInt32:()I
       9: ireturn

  public long readInt64(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #115                // Method readInt64:()J
       9: lreturn

  public org.bson.types.Decimal128 readDecimal128(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #116                // Method readDecimal128:()Lorg/bson/types/Decimal128;
       9: areturn

  public java.lang.String readJavaScript(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #117                // Method readJavaScript:()Ljava/lang/String;
       9: areturn

  public java.lang.String readJavaScriptWithScope(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #118                // Method readJavaScriptWithScope:()Ljava/lang/String;
       9: areturn

  public void readMaxKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #119                // Method readMaxKey:()V
       9: return

  public void readMinKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #120                // Method readMinKey:()V
       9: return

  public java.lang.String readName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       4: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
       7: if_acmpne     15
      10: aload_0
      11: invokevirtual #41                 // Method readBsonType:()Lorg/bson/BsonType;
      14: pop
      15: aload_0
      16: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      19: getstatic     #104                // Field org/bson/AbstractBsonReader$State.NAME:Lorg/bson/AbstractBsonReader$State;
      22: if_acmpeq     41
      25: aload_0
      26: ldc           #121                // String readName
      28: iconst_1
      29: anewarray     #9                  // class org/bson/AbstractBsonReader$State
      32: dup
      33: iconst_0
      34: getstatic     #104                // Field org/bson/AbstractBsonReader$State.NAME:Lorg/bson/AbstractBsonReader$State;
      37: aastore
      38: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      41: aload_0
      42: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      45: putfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      48: aload_0
      49: getfield      #1                  // Field currentName:Ljava/lang/String;
      52: areturn

  public void readName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: return

  public void readNull(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #122                // Method readNull:()V
       9: return

  public org.bson.types.ObjectId readObjectId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #123                // Method readObjectId:()Lorg/bson/types/ObjectId;
       9: areturn

  public org.bson.BsonRegularExpression readRegularExpression(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #124                // Method readRegularExpression:()Lorg/bson/BsonRegularExpression;
       9: areturn

  public org.bson.BsonDbPointer readDBPointer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #125                // Method readDBPointer:()Lorg/bson/BsonDbPointer;
       9: areturn

  public java.lang.String readString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #126                // Method readString:()Ljava/lang/String;
       9: areturn

  public java.lang.String readSymbol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #127                // Method readSymbol:()Ljava/lang/String;
       9: areturn

  public org.bson.BsonTimestamp readTimestamp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #128                // Method readTimestamp:()Lorg/bson/BsonTimestamp;
       9: areturn

  public void readUndefined(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #109                // Method verifyName:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #129                // Method readUndefined:()V
       9: return

  protected void throwInvalidContextType(java.lang.String, org.bson.BsonContextType, org.bson.BsonContextType...);
    Code:
       0: ldc           #130                // String  or
       2: aload_3
       3: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokestatic  #132                // Method org/bson/StringUtils.join:(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
       9: astore        4
      11: ldc           #133                // String %s can only be called when ContextType is %s, not when ContextType is %s.
      13: iconst_3
      14: anewarray     #134                // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: aastore
      21: dup
      22: iconst_1
      23: aload         4
      25: aastore
      26: dup
      27: iconst_2
      28: aload_2
      29: aastore
      30: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: astore        5
      35: new           #136                // class org/bson/BsonInvalidOperationException
      38: dup
      39: aload         5
      41: invokespecial #137                // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
      44: athrow

  protected void throwInvalidState(java.lang.String, org.bson.AbstractBsonReader$State...);
    Code:
       0: ldc           #130                // String  or
       2: aload_2
       3: invokestatic  #131                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       6: invokestatic  #132                // Method org/bson/StringUtils.join:(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String;
       9: astore_3
      10: ldc           #138                // String %s can only be called when State is %s, not when State is %s.
      12: iconst_3
      13: anewarray     #134                // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: dup
      21: iconst_1
      22: aload_3
      23: aastore
      24: dup
      25: iconst_2
      26: aload_0
      27: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      30: aastore
      31: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: astore        4
      36: new           #136                // class org/bson/BsonInvalidOperationException
      39: dup
      40: aload         4
      42: invokespecial #137                // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
      45: athrow

  protected void verifyBSONType(java.lang.String, org.bson.BsonType);
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       4: getstatic     #6                  // Field org/bson/AbstractBsonReader$State.INITIAL:Lorg/bson/AbstractBsonReader$State;
       7: if_acmpeq     30
      10: aload_0
      11: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      14: getstatic     #65                 // Field org/bson/AbstractBsonReader$State.SCOPE_DOCUMENT:Lorg/bson/AbstractBsonReader$State;
      17: if_acmpeq     30
      20: aload_0
      21: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      24: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      27: if_acmpne     35
      30: aload_0
      31: invokevirtual #41                 // Method readBsonType:()Lorg/bson/BsonType;
      34: pop
      35: aload_0
      36: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      39: getstatic     #104                // Field org/bson/AbstractBsonReader$State.NAME:Lorg/bson/AbstractBsonReader$State;
      42: if_acmpne     49
      45: aload_0
      46: invokevirtual #139                // Method skipName:()V
      49: aload_0
      50: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
      53: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      56: if_acmpeq     74
      59: aload_0
      60: aload_1
      61: iconst_1
      62: anewarray     #9                  // class org/bson/AbstractBsonReader$State
      65: dup
      66: iconst_0
      67: getstatic     #7                  // Field org/bson/AbstractBsonReader$State.VALUE:Lorg/bson/AbstractBsonReader$State;
      70: aastore
      71: invokevirtual #10                 // Method throwInvalidState:(Ljava/lang/String;[Lorg/bson/AbstractBsonReader$State;)V
      74: aload_0
      75: getfield      #2                  // Field currentBsonType:Lorg/bson/BsonType;
      78: aload_2
      79: if_acmpeq     114
      82: new           #136                // class org/bson/BsonInvalidOperationException
      85: dup
      86: ldc           #140                // String %s can only be called when CurrentBSONType is %s, not when CurrentBSONType is %s.
      88: iconst_3
      89: anewarray     #134                // class java/lang/Object
      92: dup
      93: iconst_0
      94: aload_1
      95: aastore
      96: dup
      97: iconst_1
      98: aload_2
      99: aastore
     100: dup
     101: iconst_2
     102: aload_0
     103: getfield      #2                  // Field currentBsonType:Lorg/bson/BsonType;
     106: aastore
     107: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     110: invokespecial #137                // Method org/bson/BsonInvalidOperationException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: return

  protected void verifyName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method readBsonType:()Lorg/bson/BsonType;
       4: pop
       5: aload_0
       6: invokevirtual #141                // Method readName:()Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: aload_1
      12: invokevirtual #142                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          43
      18: new           #143                // class org/bson/BsonSerializationException
      21: dup
      22: ldc           #144                // String Expected element name to be \'%s\', not \'%s\'.
      24: iconst_2
      25: anewarray     #134                // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: aastore
      32: dup
      33: iconst_1
      34: aload_2
      35: aastore
      36: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: invokespecial #145                // Method org/bson/BsonSerializationException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: return

  protected void checkPreconditions(java.lang.String, org.bson.BsonType);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isClosed:()Z
       4: ifeq          17
       7: new           #30                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #146                // String BsonWriter is closed
      13: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #147                // Method verifyBSONType:(Ljava/lang/String;Lorg/bson/BsonType;)V
      23: return

  protected org.bson.AbstractBsonReader$Context getContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lorg/bson/AbstractBsonReader$Context;
       4: areturn

  protected void setContext(org.bson.AbstractBsonReader$Context);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field context:Lorg/bson/AbstractBsonReader$Context;
       5: return

  protected org.bson.AbstractBsonReader$State getNextState();
    Code:
       0: getstatic     #148                // Field org/bson/AbstractBsonReader$1.$SwitchMap$org$bson$BsonContextType:[I
       3: aload_0
       4: getfield      #3                  // Field context:Lorg/bson/AbstractBsonReader$Context;
       7: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      10: invokevirtual #149                // Method org/bson/BsonContextType.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 4
                     1: 44
                     2: 44
                     3: 44
                     4: 48
               default: 52
          }
      44: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      47: areturn
      48: getstatic     #150                // Field org/bson/AbstractBsonReader$State.DONE:Lorg/bson/AbstractBsonReader$State;
      51: areturn
      52: new           #151                // class org/bson/BSONException
      55: dup
      56: ldc           #152                // String Unexpected ContextType %s.
      58: iconst_1
      59: anewarray     #134                // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: getfield      #3                  // Field context:Lorg/bson/AbstractBsonReader$Context;
      68: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      71: aastore
      72: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      75: invokespecial #153                // Method org/bson/BSONException."<init>":(Ljava/lang/String;)V
      78: athrow

  private void setStateOnEnd();
    Code:
       0: getstatic     #148                // Field org/bson/AbstractBsonReader$1.$SwitchMap$org$bson$BsonContextType:[I
       3: aload_0
       4: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
       7: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      10: invokevirtual #149                // Method org/bson/BsonContextType.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 4
                     1: 44
                     2: 44
                     3: 64
                     4: 54
               default: 64
          }
      44: aload_0
      45: getstatic     #40                 // Field org/bson/AbstractBsonReader$State.TYPE:Lorg/bson/AbstractBsonReader$State;
      48: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      51: goto          91
      54: aload_0
      55: getstatic     #150                // Field org/bson/AbstractBsonReader$State.DONE:Lorg/bson/AbstractBsonReader$State;
      58: invokevirtual #16                 // Method setState:(Lorg/bson/AbstractBsonReader$State;)V
      61: goto          91
      64: new           #151                // class org/bson/BSONException
      67: dup
      68: ldc           #152                // String Unexpected ContextType %s.
      70: iconst_1
      71: anewarray     #134                // class java/lang/Object
      74: dup
      75: iconst_0
      76: aload_0
      77: invokevirtual #33                 // Method getContext:()Lorg/bson/AbstractBsonReader$Context;
      80: invokevirtual #34                 // Method org/bson/AbstractBsonReader$Context.getContextType:()Lorg/bson/BsonContextType;
      83: aastore
      84: invokestatic  #135                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      87: invokespecial #153                // Method org/bson/BSONException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: return

  static org.bson.AbstractBsonReader$State access$000(org.bson.AbstractBsonReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       4: areturn

  static org.bson.AbstractBsonReader$Context access$100(org.bson.AbstractBsonReader);
    Code:
       0: aload_0
       1: getfield      #3                  // Field context:Lorg/bson/AbstractBsonReader$Context;
       4: areturn

  static org.bson.BsonType access$400(org.bson.AbstractBsonReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field currentBsonType:Lorg/bson/BsonType;
       4: areturn

  static java.lang.String access$500(org.bson.AbstractBsonReader);
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentName:Ljava/lang/String;
       4: areturn

  static org.bson.AbstractBsonReader$State access$002(org.bson.AbstractBsonReader, org.bson.AbstractBsonReader$State);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field state:Lorg/bson/AbstractBsonReader$State;
       6: areturn

  static org.bson.BsonType access$402(org.bson.AbstractBsonReader, org.bson.BsonType);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field currentBsonType:Lorg/bson/BsonType;
       6: areturn

  static java.lang.String access$502(org.bson.AbstractBsonReader, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field currentName:Ljava/lang/String;
       6: areturn
}
