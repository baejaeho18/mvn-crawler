Compiled from "ConventionUseGettersAsSettersImpl.java"
final class org.bson.codecs.pojo.ConventionUseGettersAsSettersImpl implements org.bson.codecs.pojo.Convention {
  org.bson.codecs.pojo.ConventionUseGettersAsSettersImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void apply(org.bson.codecs.pojo.ClassModelBuilder<?>);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/bson/codecs/pojo/ClassModelBuilder.getPropertyModelBuilders:()Ljava/util/List;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          124
      19: aload_2
      20: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #6                  // class org/bson/codecs/pojo/PropertyModelBuilder
      28: astore_3
      29: aload_3
      30: invokevirtual #7                  // Method org/bson/codecs/pojo/PropertyModelBuilder.getPropertyAccessor:()Lorg/bson/codecs/pojo/PropertyAccessor;
      33: instanceof    #8                  // class org/bson/codecs/pojo/PropertyAccessorImpl
      36: ifne          69
      39: new           #9                  // class org/bson/codecs/configuration/CodecConfigurationException
      42: dup
      43: ldc           #10                 // String The USE_GETTER_AS_SETTER_CONVENTION is not compatible with propertyModelBuilder instance that have custom implementations of org.bson.codecs.pojo.PropertyAccessor: %s
      45: iconst_1
      46: anewarray     #11                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_3
      52: invokevirtual #7                  // Method org/bson/codecs/pojo/PropertyModelBuilder.getPropertyAccessor:()Lorg/bson/codecs/pojo/PropertyAccessor;
      55: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      61: aastore
      62: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: invokespecial #15                 // Method org/bson/codecs/configuration/CodecConfigurationException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_3
      70: invokevirtual #7                  // Method org/bson/codecs/pojo/PropertyModelBuilder.getPropertyAccessor:()Lorg/bson/codecs/pojo/PropertyAccessor;
      73: checkcast     #8                  // class org/bson/codecs/pojo/PropertyAccessorImpl
      76: astore        4
      78: aload         4
      80: invokevirtual #16                 // Method org/bson/codecs/pojo/PropertyAccessorImpl.getPropertyMetadata:()Lorg/bson/codecs/pojo/PropertyMetadata;
      83: astore        5
      85: aload         5
      87: invokevirtual #17                 // Method org/bson/codecs/pojo/PropertyMetadata.isDeserializable:()Z
      90: ifne          121
      93: aload         5
      95: invokevirtual #18                 // Method org/bson/codecs/pojo/PropertyMetadata.isSerializable:()Z
      98: ifeq          121
     101: aload_0
     102: aload         5
     104: invokevirtual #19                 // Method org/bson/codecs/pojo/PropertyMetadata.getTypeData:()Lorg/bson/codecs/pojo/TypeData;
     107: invokevirtual #20                 // Method org/bson/codecs/pojo/TypeData.getType:()Ljava/lang/Class;
     110: invokespecial #21                 // Method isMapOrCollection:(Ljava/lang/Class;)Z
     113: ifeq          121
     116: aload_0
     117: aload_3
     118: invokespecial #22                 // Method setPropertyAccessor:(Lorg/bson/codecs/pojo/PropertyModelBuilder;)V
     121: goto          10
     124: return

  private <T> boolean isMapOrCollection(java.lang.Class<T>);
    Code:
       0: ldc           #23                 // class java/util/Collection
       2: aload_1
       3: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifne          18
       9: ldc           #25                 // class java/util/Map
      11: aload_1
      12: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private <T> void setPropertyAccessor(org.bson.codecs.pojo.PropertyModelBuilder<T>);
    Code:
       0: aload_1
       1: new           #26                 // class org/bson/codecs/pojo/ConventionUseGettersAsSettersImpl$PrivateProperyAccessor
       4: dup
       5: aload_1
       6: invokevirtual #7                  // Method org/bson/codecs/pojo/PropertyModelBuilder.getPropertyAccessor:()Lorg/bson/codecs/pojo/PropertyAccessor;
       9: checkcast     #8                  // class org/bson/codecs/pojo/PropertyAccessorImpl
      12: aconst_null
      13: invokespecial #27                 // Method org/bson/codecs/pojo/ConventionUseGettersAsSettersImpl$PrivateProperyAccessor."<init>":(Lorg/bson/codecs/pojo/PropertyAccessorImpl;Lorg/bson/codecs/pojo/ConventionUseGettersAsSettersImpl$1;)V
      16: invokevirtual #28                 // Method org/bson/codecs/pojo/PropertyModelBuilder.propertyAccessor:(Lorg/bson/codecs/pojo/PropertyAccessor;)Lorg/bson/codecs/pojo/PropertyModelBuilder;
      19: pop
      20: return
}
