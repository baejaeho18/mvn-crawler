Compiled from "WebFluxAutoConfiguration.java"
public class org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig implements org.springframework.web.reactive.config.WebFluxConfigurer {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.boot.autoconfigure.web.ResourceProperties resourceProperties;

  private final org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties webFluxProperties;

  private final org.springframework.beans.factory.ListableBeanFactory beanFactory;

  private final java.util.List<org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver> argumentResolvers;

  private final java.util.List<org.springframework.boot.web.codec.CodecCustomizer> codecCustomizers;

  private final org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer;

  private final java.util.List<org.springframework.web.reactive.result.view.ViewResolver> viewResolvers;

  public org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig(org.springframework.boot.autoconfigure.web.ResourceProperties, org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties, org.springframework.beans.factory.ListableBeanFactory, org.springframework.beans.factory.ObjectProvider<java.util.List<org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver>>, org.springframework.beans.factory.ObjectProvider<java.util.List<org.springframework.boot.web.codec.CodecCustomizer>>, org.springframework.beans.factory.ObjectProvider<org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer>, org.springframework.beans.factory.ObjectProvider<java.util.List<org.springframework.web.reactive.result.view.ViewResolver>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field webFluxProperties:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field beanFactory:Lorg/springframework/beans/factory/ListableBeanFactory;
      19: aload_0
      20: aload         4
      22: invokeinterface #5,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      27: checkcast     #6                  // class java/util/List
      30: putfield      #7                  // Field argumentResolvers:Ljava/util/List;
      33: aload_0
      34: aload         5
      36: invokeinterface #5,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      41: checkcast     #6                  // class java/util/List
      44: putfield      #8                  // Field codecCustomizers:Ljava/util/List;
      47: aload_0
      48: aload         6
      50: invokeinterface #5,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      55: checkcast     #9                  // class org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer
      58: putfield      #10                 // Field resourceHandlerRegistrationCustomizer:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer;
      61: aload_0
      62: aload         7
      64: invokeinterface #5,  1            // InterfaceMethod org/springframework/beans/factory/ObjectProvider.getIfAvailable:()Ljava/lang/Object;
      69: checkcast     #6                  // class java/util/List
      72: putfield      #11                 // Field viewResolvers:Ljava/util/List;
      75: return

  public void configureArgumentResolvers(org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field argumentResolvers:Ljava/util/List;
       4: ifnull        27
       7: aload_0
       8: getfield      #7                  // Field argumentResolvers:Ljava/util/List;
      11: aload_1
      12: dup
      13: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: pop
      17: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Lorg/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer;)Ljava/util/function/Consumer;
      22: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      27: return

  public void configureHttpMessageCodecs(org.springframework.http.codec.ServerCodecConfigurer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field codecCustomizers:Ljava/util/List;
       4: ifnull        22
       7: aload_0
       8: getfield      #8                  // Field codecCustomizers:Ljava/util/List;
      11: aload_1
      12: invokedynamic #15,  0             // InvokeDynamic #1:accept:(Lorg/springframework/http/codec/ServerCodecConfigurer;)Ljava/util/function/Consumer;
      17: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      22: return

  public void addResourceHandlers(org.springframework.web.reactive.config.ResourceHandlerRegistry);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
       4: invokevirtual #16                 // Method org/springframework/boot/autoconfigure/web/ResourceProperties.isAddMappings:()Z
       7: ifne          21
      10: getstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
      13: ldc           #18                 // String Default resource handling disabled
      15: invokeinterface #19,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      20: return
      21: aload_0
      22: getfield      #2                  // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
      25: invokevirtual #20                 // Method org/springframework/boot/autoconfigure/web/ResourceProperties.getCache:()Lorg/springframework/boot/autoconfigure/web/ResourceProperties$Cache;
      28: invokevirtual #21                 // Method org/springframework/boot/autoconfigure/web/ResourceProperties$Cache.getPeriod:()Ljava/time/Duration;
      31: astore_2
      32: aload_1
      33: ldc           #22                 // String /webjars/**
      35: invokevirtual #23                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistry.hasMappingForPattern:(Ljava/lang/String;)Z
      38: ifne          91
      41: aload_1
      42: iconst_1
      43: anewarray     #24                 // class java/lang/String
      46: dup
      47: iconst_0
      48: ldc           #22                 // String /webjars/**
      50: aastore
      51: invokevirtual #25                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistry.addResourceHandler:([Ljava/lang/String;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
      54: iconst_1
      55: anewarray     #24                 // class java/lang/String
      58: dup
      59: iconst_0
      60: ldc           #26                 // String classpath:/META-INF/resources/webjars/
      62: aastore
      63: invokevirtual #27                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistration.addResourceLocations:([Ljava/lang/String;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
      66: astore_3
      67: aload_2
      68: ifnull        86
      71: aload_3
      72: aload_2
      73: invokevirtual #28                 // Method java/time/Duration.toMillis:()J
      76: getstatic     #29                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      79: invokestatic  #30                 // Method org/springframework/http/CacheControl.maxAge:(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/http/CacheControl;
      82: invokevirtual #31                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistration.setCacheControl:(Lorg/springframework/http/CacheControl;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
      85: pop
      86: aload_0
      87: aload_3
      88: invokespecial #32                 // Method customizeResourceHandlerRegistration:(Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;)V
      91: aload_0
      92: getfield      #3                  // Field webFluxProperties:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxProperties;
      95: invokevirtual #33                 // Method org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties.getStaticPathPattern:()Ljava/lang/String;
      98: astore_3
      99: aload_1
     100: aload_3
     101: invokevirtual #23                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistry.hasMappingForPattern:(Ljava/lang/String;)Z
     104: ifne          157
     107: aload_1
     108: iconst_1
     109: anewarray     #24                 // class java/lang/String
     112: dup
     113: iconst_0
     114: aload_3
     115: aastore
     116: invokevirtual #25                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistry.addResourceHandler:([Ljava/lang/String;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
     119: aload_0
     120: getfield      #2                  // Field resourceProperties:Lorg/springframework/boot/autoconfigure/web/ResourceProperties;
     123: invokevirtual #34                 // Method org/springframework/boot/autoconfigure/web/ResourceProperties.getStaticLocations:()[Ljava/lang/String;
     126: invokevirtual #27                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistration.addResourceLocations:([Ljava/lang/String;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
     129: astore        4
     131: aload_2
     132: ifnull        151
     135: aload         4
     137: aload_2
     138: invokevirtual #28                 // Method java/time/Duration.toMillis:()J
     141: getstatic     #29                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     144: invokestatic  #30                 // Method org/springframework/http/CacheControl.maxAge:(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/http/CacheControl;
     147: invokevirtual #31                 // Method org/springframework/web/reactive/config/ResourceHandlerRegistration.setCacheControl:(Lorg/springframework/http/CacheControl;)Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;
     150: pop
     151: aload_0
     152: aload         4
     154: invokespecial #32                 // Method customizeResourceHandlerRegistration:(Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;)V
     157: return

  public void configureViewResolvers(org.springframework.web.reactive.config.ViewResolverRegistry);
    Code:
       0: aload_0
       1: getfield      #11                 // Field viewResolvers:Ljava/util/List;
       4: ifnull        34
       7: aload_0
       8: getfield      #11                 // Field viewResolvers:Ljava/util/List;
      11: invokestatic  #35                 // Method org/springframework/core/annotation/AnnotationAwareOrderComparator.sort:(Ljava/util/List;)V
      14: aload_0
      15: getfield      #11                 // Field viewResolvers:Ljava/util/List;
      18: aload_1
      19: dup
      20: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: pop
      24: invokedynamic #36,  0             // InvokeDynamic #2:accept:(Lorg/springframework/web/reactive/config/ViewResolverRegistry;)Ljava/util/function/Consumer;
      29: invokeinterface #14,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      34: return

  public void addFormatters(org.springframework.format.FormatterRegistry);
    Code:
       0: aload_0
       1: ldc           #37                 // class org/springframework/core/convert/converter/Converter
       3: invokespecial #38                 // Method getBeansOfType:(Ljava/lang/Class;)Ljava/util/Collection;
       6: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          41
      21: aload_2
      22: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class org/springframework/core/convert/converter/Converter
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokeinterface #42,  2           // InterfaceMethod org/springframework/format/FormatterRegistry.addConverter:(Lorg/springframework/core/convert/converter/Converter;)V
      38: goto          12
      41: aload_0
      42: ldc           #43                 // class org/springframework/core/convert/converter/GenericConverter
      44: invokespecial #38                 // Method getBeansOfType:(Ljava/lang/Class;)Ljava/util/Collection;
      47: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          82
      62: aload_2
      63: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #43                 // class org/springframework/core/convert/converter/GenericConverter
      71: astore_3
      72: aload_1
      73: aload_3
      74: invokeinterface #44,  2           // InterfaceMethod org/springframework/format/FormatterRegistry.addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      79: goto          53
      82: aload_0
      83: ldc           #45                 // class org/springframework/format/Formatter
      85: invokespecial #38                 // Method getBeansOfType:(Ljava/lang/Class;)Ljava/util/Collection;
      88: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      93: astore_2
      94: aload_2
      95: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          123
     103: aload_2
     104: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #45                 // class org/springframework/format/Formatter
     112: astore_3
     113: aload_1
     114: aload_3
     115: invokeinterface #46,  2           // InterfaceMethod org/springframework/format/FormatterRegistry.addFormatter:(Lorg/springframework/format/Formatter;)V
     120: goto          94
     123: return

  private <T> java.util.Collection<T> getBeansOfType(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field beanFactory:Lorg/springframework/beans/factory/ListableBeanFactory;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod org/springframework/beans/factory/ListableBeanFactory.getBeansOfType:(Ljava/lang/Class;)Ljava/util/Map;
      10: invokeinterface #48,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: areturn

  private void customizeResourceHandlerRegistration(org.springframework.web.reactive.config.ResourceHandlerRegistration);
    Code:
       0: aload_0
       1: getfield      #10                 // Field resourceHandlerRegistrationCustomizer:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer;
       4: ifnull        17
       7: aload_0
       8: getfield      #10                 // Field resourceHandlerRegistrationCustomizer:Lorg/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer;
      11: aload_1
      12: invokeinterface #49,  2           // InterfaceMethod org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceHandlerRegistrationCustomizer.customize:(Lorg/springframework/web/reactive/config/ResourceHandlerRegistration;)V
      17: return

  private static void lambda$configureHttpMessageCodecs$1(org.springframework.http.codec.ServerCodecConfigurer, org.springframework.boot.web.codec.CodecCustomizer);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #50,  2           // InterfaceMethod org/springframework/boot/web/codec/CodecCustomizer.customize:(Lorg/springframework/http/codec/CodecConfigurer;)V
       7: return

  private static void lambda$configureArgumentResolvers$0(org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer, org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #51                 // class org/springframework/web/reactive/result/method/HandlerMethodArgumentResolver
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #52                 // Method org/springframework/web/reactive/result/method/annotation/ArgumentResolverConfigurer.addCustomResolver:([Lorg/springframework/web/reactive/result/method/HandlerMethodArgumentResolver;)V
      12: return

  static {};
    Code:
       0: ldc           #53                 // class org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WebFluxConfig
       2: invokestatic  #54                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #17                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
