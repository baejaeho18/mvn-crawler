Compiled from "DataSourceProperties.java"
public class org.springframework.boot.autoconfigure.jdbc.DataSourceProperties implements org.springframework.beans.factory.BeanClassLoaderAware,org.springframework.beans.factory.InitializingBean {
  private java.lang.ClassLoader classLoader;

  private java.lang.String name;

  private boolean generateUniqueName;

  private java.lang.Class<? extends javax.sql.DataSource> type;

  private java.lang.String driverClassName;

  private java.lang.String url;

  private java.lang.String username;

  private java.lang.String password;

  private java.lang.String jndiName;

  private org.springframework.boot.jdbc.DataSourceInitializationMode initializationMode;

  private java.lang.String platform;

  private java.util.List<java.lang.String> schema;

  private java.lang.String schemaUsername;

  private java.lang.String schemaPassword;

  private java.util.List<java.lang.String> data;

  private java.lang.String dataUsername;

  private java.lang.String dataPassword;

  private boolean continueOnError;

  private java.lang.String separator;

  private java.nio.charset.Charset sqlScriptEncoding;

  private org.springframework.boot.jdbc.EmbeddedDatabaseConnection embeddedDatabaseConnection;

  private org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa xa;

  private java.lang.String uniqueName;

  public org.springframework.boot.autoconfigure.jdbc.DataSourceProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/springframework/boot/jdbc/DataSourceInitializationMode.EMBEDDED:Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
       8: putfield      #3                  // Field initializationMode:Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
      11: aload_0
      12: ldc           #4                  // String all
      14: putfield      #5                  // Field platform:Ljava/lang/String;
      17: aload_0
      18: iconst_0
      19: putfield      #6                  // Field continueOnError:Z
      22: aload_0
      23: ldc           #7                  // String ;
      25: putfield      #8                  // Field separator:Ljava/lang/String;
      28: aload_0
      29: getstatic     #9                  // Field org/springframework/boot/jdbc/EmbeddedDatabaseConnection.NONE:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      32: putfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      35: aload_0
      36: new           #11                 // class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa
      39: dup
      40: invokespecial #12                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa."<init>":()V
      43: putfield      #13                 // Field xa:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
      46: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #14                 // Field classLoader:Ljava/lang/ClassLoader;
       5: invokestatic  #15                 // Method org/springframework/boot/jdbc/EmbeddedDatabaseConnection.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
       8: putfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      11: return

  public org.springframework.boot.jdbc.DataSourceBuilder<?> initializeDataSourceBuilder();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: invokestatic  #17                 // Method org/springframework/boot/jdbc/DataSourceBuilder.create:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
       7: aload_0
       8: invokevirtual #18                 // Method getType:()Ljava/lang/Class;
      11: invokevirtual #19                 // Method org/springframework/boot/jdbc/DataSourceBuilder.type:(Ljava/lang/Class;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
      14: aload_0
      15: invokevirtual #20                 // Method determineDriverClassName:()Ljava/lang/String;
      18: invokevirtual #21                 // Method org/springframework/boot/jdbc/DataSourceBuilder.driverClassName:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
      21: aload_0
      22: invokevirtual #22                 // Method determineUrl:()Ljava/lang/String;
      25: invokevirtual #23                 // Method org/springframework/boot/jdbc/DataSourceBuilder.url:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
      28: aload_0
      29: invokevirtual #24                 // Method determineUsername:()Ljava/lang/String;
      32: invokevirtual #25                 // Method org/springframework/boot/jdbc/DataSourceBuilder.username:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
      35: aload_0
      36: invokevirtual #26                 // Method determinePassword:()Ljava/lang/String;
      39: invokevirtual #27                 // Method org/springframework/boot/jdbc/DataSourceBuilder.password:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DataSourceBuilder;
      42: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #28                 // Field name:Ljava/lang/String;
       4: areturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field name:Ljava/lang/String;
       5: return

  public boolean isGenerateUniqueName();
    Code:
       0: aload_0
       1: getfield      #29                 // Field generateUniqueName:Z
       4: ireturn

  public void setGenerateUniqueName(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field generateUniqueName:Z
       5: return

  public java.lang.Class<? extends javax.sql.DataSource> getType();
    Code:
       0: aload_0
       1: getfield      #30                 // Field type:Ljava/lang/Class;
       4: areturn

  public void setType(java.lang.Class<? extends javax.sql.DataSource>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field type:Ljava/lang/Class;
       5: return

  public java.lang.String getDriverClassName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field driverClassName:Ljava/lang/String;
       4: areturn

  public void setDriverClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field driverClassName:Ljava/lang/String;
       5: return

  public java.lang.String determineDriverClassName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field driverClassName:Ljava/lang/String;
       4: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          28
      10: aload_0
      11: invokespecial #33                 // Method driverClassIsLoadable:()Z
      14: aload_0
      15: invokedynamic #34,  0             // InvokeDynamic #0:get:(Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties;)Ljava/util/function/Supplier;
      20: invokestatic  #35                 // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
      23: aload_0
      24: getfield      #31                 // Field driverClassName:Ljava/lang/String;
      27: areturn
      28: aconst_null
      29: astore_1
      30: aload_0
      31: getfield      #36                 // Field url:Ljava/lang/String;
      34: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      37: ifeq          51
      40: aload_0
      41: getfield      #36                 // Field url:Ljava/lang/String;
      44: invokestatic  #37                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromJdbcUrl:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      47: invokevirtual #38                 // Method org/springframework/boot/jdbc/DatabaseDriver.getDriverClassName:()Ljava/lang/String;
      50: astore_1
      51: aload_1
      52: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      55: ifne          66
      58: aload_0
      59: getfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      62: invokevirtual #39                 // Method org/springframework/boot/jdbc/EmbeddedDatabaseConnection.getDriverClassName:()Ljava/lang/String;
      65: astore_1
      66: aload_1
      67: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      70: ifne          87
      73: new           #40                 // class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException
      76: dup
      77: ldc           #41                 // String Failed to determine a suitable driver class
      79: aload_0
      80: getfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      83: invokespecial #42                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException."<init>":(Ljava/lang/String;Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;)V
      86: athrow
      87: aload_1
      88: areturn

  private boolean driverClassIsLoadable();
    Code:
       0: aload_0
       1: getfield      #31                 // Field driverClassName:Ljava/lang/String;
       4: aconst_null
       5: invokestatic  #43                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
       8: pop
       9: iconst_1
      10: ireturn
      11: astore_1
      12: aload_1
      13: athrow
      14: astore_1
      15: iconst_0
      16: ireturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/UnsupportedClassVersionError
           0    10    14   Class java/lang/Throwable

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #36                 // Field url:Ljava/lang/String;
       4: areturn

  public void setUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field url:Ljava/lang/String;
       5: return

  public java.lang.String determineUrl();
    Code:
       0: aload_0
       1: getfield      #36                 // Field url:Ljava/lang/String;
       4: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #36                 // Field url:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #46                 // Method determineDatabaseName:()Ljava/lang/String;
      19: astore_1
      20: aload_1
      21: ifnonnull     28
      24: aconst_null
      25: goto          36
      28: aload_0
      29: getfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      32: aload_1
      33: invokevirtual #47                 // Method org/springframework/boot/jdbc/EmbeddedDatabaseConnection.getUrl:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      41: ifne          58
      44: new           #40                 // class org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException
      47: dup
      48: ldc           #48                 // String Failed to determine suitable jdbc url
      50: aload_0
      51: getfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      54: invokespecial #42                 // Method org/springframework/boot/autoconfigure/jdbc/DataSourceProperties$DataSourceBeanCreationException."<init>":(Ljava/lang/String;Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;)V
      57: athrow
      58: aload_2
      59: areturn

  public java.lang.String determineDatabaseName();
    Code:
       0: aload_0
       1: getfield      #29                 // Field generateUniqueName:Z
       4: ifeq          29
       7: aload_0
       8: getfield      #49                 // Field uniqueName:Ljava/lang/String;
      11: ifnonnull     24
      14: aload_0
      15: invokestatic  #50                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      18: invokevirtual #51                 // Method java/util/UUID.toString:()Ljava/lang/String;
      21: putfield      #49                 // Field uniqueName:Ljava/lang/String;
      24: aload_0
      25: getfield      #49                 // Field uniqueName:Ljava/lang/String;
      28: areturn
      29: aload_0
      30: getfield      #28                 // Field name:Ljava/lang/String;
      33: invokestatic  #52                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      36: ifeq          44
      39: aload_0
      40: getfield      #28                 // Field name:Ljava/lang/String;
      43: areturn
      44: aload_0
      45: getfield      #10                 // Field embeddedDatabaseConnection:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      48: getstatic     #9                  // Field org/springframework/boot/jdbc/EmbeddedDatabaseConnection.NONE:Lorg/springframework/boot/jdbc/EmbeddedDatabaseConnection;
      51: if_acmpeq     57
      54: ldc           #53                 // String testdb
      56: areturn
      57: aconst_null
      58: areturn

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #54                 // Field username:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field username:Ljava/lang/String;
       5: return

  public java.lang.String determineUsername();
    Code:
       0: aload_0
       1: getfield      #54                 // Field username:Ljava/lang/String;
       4: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #54                 // Field username:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #20                 // Method determineDriverClassName:()Ljava/lang/String;
      19: invokestatic  #55                 // Method org/springframework/boot/jdbc/EmbeddedDatabaseConnection.isEmbedded:(Ljava/lang/String;)Z
      22: ifeq          28
      25: ldc           #56                 // String sa
      27: areturn
      28: aconst_null
      29: areturn

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #57                 // Field password:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field password:Ljava/lang/String;
       5: return

  public java.lang.String determinePassword();
    Code:
       0: aload_0
       1: getfield      #57                 // Field password:Ljava/lang/String;
       4: invokestatic  #32                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       7: ifeq          15
      10: aload_0
      11: getfield      #57                 // Field password:Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokevirtual #20                 // Method determineDriverClassName:()Ljava/lang/String;
      19: invokestatic  #55                 // Method org/springframework/boot/jdbc/EmbeddedDatabaseConnection.isEmbedded:(Ljava/lang/String;)Z
      22: ifeq          28
      25: ldc           #58                 // String
      27: areturn
      28: aconst_null
      29: areturn

  public java.lang.String getJndiName();
    Code:
       0: aload_0
       1: getfield      #59                 // Field jndiName:Ljava/lang/String;
       4: areturn

  public void setJndiName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field jndiName:Ljava/lang/String;
       5: return

  public org.springframework.boot.jdbc.DataSourceInitializationMode getInitializationMode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field initializationMode:Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
       4: areturn

  public void setInitializationMode(org.springframework.boot.jdbc.DataSourceInitializationMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field initializationMode:Lorg/springframework/boot/jdbc/DataSourceInitializationMode;
       5: return

  public java.lang.String getPlatform();
    Code:
       0: aload_0
       1: getfield      #5                  // Field platform:Ljava/lang/String;
       4: areturn

  public void setPlatform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field platform:Ljava/lang/String;
       5: return

  public java.util.List<java.lang.String> getSchema();
    Code:
       0: aload_0
       1: getfield      #60                 // Field schema:Ljava/util/List;
       4: areturn

  public void setSchema(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field schema:Ljava/util/List;
       5: return

  public java.lang.String getSchemaUsername();
    Code:
       0: aload_0
       1: getfield      #61                 // Field schemaUsername:Ljava/lang/String;
       4: areturn

  public void setSchemaUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field schemaUsername:Ljava/lang/String;
       5: return

  public java.lang.String getSchemaPassword();
    Code:
       0: aload_0
       1: getfield      #62                 // Field schemaPassword:Ljava/lang/String;
       4: areturn

  public void setSchemaPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #62                 // Field schemaPassword:Ljava/lang/String;
       5: return

  public java.util.List<java.lang.String> getData();
    Code:
       0: aload_0
       1: getfield      #63                 // Field data:Ljava/util/List;
       4: areturn

  public void setData(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field data:Ljava/util/List;
       5: return

  public java.lang.String getDataUsername();
    Code:
       0: aload_0
       1: getfield      #64                 // Field dataUsername:Ljava/lang/String;
       4: areturn

  public void setDataUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field dataUsername:Ljava/lang/String;
       5: return

  public java.lang.String getDataPassword();
    Code:
       0: aload_0
       1: getfield      #65                 // Field dataPassword:Ljava/lang/String;
       4: areturn

  public void setDataPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field dataPassword:Ljava/lang/String;
       5: return

  public boolean isContinueOnError();
    Code:
       0: aload_0
       1: getfield      #6                  // Field continueOnError:Z
       4: ireturn

  public void setContinueOnError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field continueOnError:Z
       5: return

  public java.lang.String getSeparator();
    Code:
       0: aload_0
       1: getfield      #8                  // Field separator:Ljava/lang/String;
       4: areturn

  public void setSeparator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field separator:Ljava/lang/String;
       5: return

  public java.nio.charset.Charset getSqlScriptEncoding();
    Code:
       0: aload_0
       1: getfield      #66                 // Field sqlScriptEncoding:Ljava/nio/charset/Charset;
       4: areturn

  public void setSqlScriptEncoding(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field sqlScriptEncoding:Ljava/nio/charset/Charset;
       5: return

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #14                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa getXa();
    Code:
       0: aload_0
       1: getfield      #13                 // Field xa:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
       4: areturn

  public void setXa(org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field xa:Lorg/springframework/boot/autoconfigure/jdbc/DataSourceProperties$Xa;
       5: return

  private java.lang.String lambda$determineDriverClassName$0();
    Code:
       0: new           #67                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #69                 // String Cannot load driver class:
       9: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #31                 // Field driverClassName:Ljava/lang/String;
      16: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
