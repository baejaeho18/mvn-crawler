Compiled from "FlywayAutoConfiguration.java"
class org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver {
  private static final java.lang.String VENDOR_PLACEHOLDER;

  private final javax.sql.DataSource dataSource;

  org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration$LocationResolver(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dataSource:Ljavax/sql/DataSource;
       9: return

  public java.lang.String[] resolveLocations(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method org/springframework/util/StringUtils.toStringArray:(Ljava/util/Collection;)[Ljava/lang/String;
       5: invokevirtual #4                  // Method resolveLocations:([Ljava/lang/String;)[Ljava/lang/String;
       8: areturn

  public java.lang.String[] resolveLocations(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method usesVendorLocation:([Ljava/lang/String;)Z
       5: ifeq          20
       8: aload_0
       9: invokespecial #6                  // Method getDatabaseDriver:()Lorg/springframework/boot/jdbc/DatabaseDriver;
      12: astore_2
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokespecial #7                  // Method replaceVendorLocations:([Ljava/lang/String;Lorg/springframework/boot/jdbc/DatabaseDriver;)[Ljava/lang/String;
      19: areturn
      20: aload_1
      21: areturn

  private java.lang.String[] replaceVendorLocations(java.lang.String[], org.springframework.boot.jdbc.DatabaseDriver);
    Code:
       0: aload_2
       1: getstatic     #8                  // Field org/springframework/boot/jdbc/DatabaseDriver.UNKNOWN:Lorg/springframework/boot/jdbc/DatabaseDriver;
       4: if_acmpne     9
       7: aload_1
       8: areturn
       9: aload_2
      10: invokevirtual #9                  // Method org/springframework/boot/jdbc/DatabaseDriver.getId:()Ljava/lang/String;
      13: astore_3
      14: aload_1
      15: invokestatic  #10                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      18: aload_3
      19: invokedynamic #11,  0             // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      24: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      29: invokedynamic #13,  0             // InvokeDynamic #1:apply:()Ljava/util/function/IntFunction;
      34: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      39: checkcast     #15                 // class "[Ljava/lang/String;"
      42: areturn

  private org.springframework.boot.jdbc.DatabaseDriver getDatabaseDriver();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dataSource:Ljavax/sql/DataSource;
       4: ldc           #16                 // String getURL
       6: invokestatic  #17                 // Method org/springframework/jdbc/support/JdbcUtils.extractDatabaseMetaData:(Ljavax/sql/DataSource;Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #18                 // class java/lang/String
      12: astore_1
      13: aload_1
      14: invokestatic  #19                 // Method org/springframework/boot/jdbc/DatabaseDriver.fromJdbcUrl:(Ljava/lang/String;)Lorg/springframework/boot/jdbc/DatabaseDriver;
      17: areturn
      18: astore_1
      19: new           #21                 // class java/lang/IllegalStateException
      22: dup
      23: aload_1
      24: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
    Exception table:
       from    to  target type
           0    17    18   Class org/springframework/jdbc/support/MetaDataAccessException

  private boolean usesVendorLocation(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     38
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: ldc           #24                 // String {vendor}
      24: invokevirtual #25                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: iinc          4, 1
      35: goto          8
      38: iconst_0
      39: ireturn

  private static java.lang.String[] lambda$replaceVendorLocations$1(int);
    Code:
       0: iload_0
       1: anewarray     #18                 // class java/lang/String
       4: areturn

  private static java.lang.String lambda$replaceVendorLocations$0(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #24                 // String {vendor}
       3: aload_0
       4: invokevirtual #26                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
       7: areturn
}
