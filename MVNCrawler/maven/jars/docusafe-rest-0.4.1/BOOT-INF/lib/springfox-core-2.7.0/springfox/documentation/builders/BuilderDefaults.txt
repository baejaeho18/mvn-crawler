Compiled from "BuilderDefaults.java"
public class springfox.documentation.builders.BuilderDefaults {
  private springfox.documentation.builders.BuilderDefaults();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class java/lang/UnsupportedOperationException
       7: dup
       8: invokespecial #3                  // Method java/lang/UnsupportedOperationException."<init>":()V
      11: athrow

  public static <T> T defaultIfAbsent(T, T);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Optional.fromNullable:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
       4: aload_1
       5: invokestatic  #4                  // Method com/google/common/base/Optional.fromNullable:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
       8: invokevirtual #5                  // Method com/google/common/base/Optional.or:(Lcom/google/common/base/Optional;)Lcom/google/common/base/Optional;
      11: invokevirtual #6                  // Method com/google/common/base/Optional.orNull:()Ljava/lang/Object;
      14: areturn

  public static <T> java.util.List<T> nullToEmptyList(java.util.Collection<T>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #7                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       7: areturn
       8: aload_0
       9: invokestatic  #8                  // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      12: areturn

  public static <K, V> java.util.Map<K, V> nullToEmptyMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #9                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       7: areturn
       8: aload_0
       9: areturn

  public static <K, V> com.google.common.collect.Multimap<K, V> nullToEmptyMultimap(com.google.common.collect.Multimap<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #10                 // Method com/google/common/collect/LinkedListMultimap.create:()Lcom/google/common/collect/LinkedListMultimap;
       7: areturn
       8: aload_0
       9: areturn

  public static <T> java.util.Set<T> nullToEmptySet(java.util.Set<T>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #11                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       7: areturn
       8: aload_0
       9: areturn

  public static com.fasterxml.classmate.ResolvedType replaceIfMoreSpecific(com.fasterxml.classmate.ResolvedType, com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #12                 // Method defaultIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #13                 // class com/fasterxml/classmate/ResolvedType
       8: astore_2
       9: aload_0
      10: invokestatic  #14                 // Method isObject:(Lcom/fasterxml/classmate/ResolvedType;)Z
      13: ifeq          25
      16: aload_1
      17: invokestatic  #15                 // Method isNotObject:(Lcom/fasterxml/classmate/ResolvedType;)Z
      20: ifeq          25
      23: aload_1
      24: areturn
      25: aload_2
      26: areturn

  public static <T> java.util.List<T> nullVarArgsToEmptyList(T...);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #7                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       7: areturn
       8: aload_0
       9: invokestatic  #16                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      12: areturn

  private static boolean isNotObject(com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_0
       1: ifnull        21
       4: ldc_w         #17                 // class java/lang/Object
       7: aload_0
       8: invokevirtual #18                 // Method com/fasterxml/classmate/ResolvedType.getErasedType:()Ljava/lang/Class;
      11: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private static boolean isObject(com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_0
       1: ifnull        21
       4: ldc_w         #17                 // class java/lang/Object
       7: aload_0
       8: invokevirtual #18                 // Method com/fasterxml/classmate/ResolvedType.getErasedType:()Ljava/lang/Class;
      11: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static springfox.documentation.service.AllowableValues emptyToNull(springfox.documentation.service.AllowableValues, springfox.documentation.service.AllowableValues);
    Code:
       0: aload_0
       1: ifnull        35
       4: aload_0
       5: instanceof    #20                 // class springfox/documentation/service/AllowableListValues
       8: ifeq          26
      11: aload_0
      12: checkcast     #20                 // class springfox/documentation/service/AllowableListValues
      15: invokestatic  #21                 // Method springfox/documentation/schema/Enums.emptyListValuesToNull:(Lspringfox/documentation/service/AllowableListValues;)Lspringfox/documentation/service/AllowableValues;
      18: aload_1
      19: invokestatic  #12                 // Method defaultIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #22                 // class springfox/documentation/service/AllowableValues
      25: areturn
      26: aload_0
      27: aload_1
      28: invokestatic  #12                 // Method defaultIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #22                 // class springfox/documentation/service/AllowableValues
      34: areturn
      35: aload_1
      36: areturn
}
