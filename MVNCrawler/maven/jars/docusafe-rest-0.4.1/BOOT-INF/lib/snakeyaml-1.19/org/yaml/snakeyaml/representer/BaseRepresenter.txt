Compiled from "BaseRepresenter.java"
public abstract class org.yaml.snakeyaml.representer.BaseRepresenter {
  protected final java.util.Map<java.lang.Class<?>, org.yaml.snakeyaml.representer.Represent> representers;

  protected org.yaml.snakeyaml.representer.Represent nullRepresenter;

  protected final java.util.Map<java.lang.Class<?>, org.yaml.snakeyaml.representer.Represent> multiRepresenters;

  protected java.lang.Character defaultScalarStyle;

  protected org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle;

  protected final java.util.Map<java.lang.Object, org.yaml.snakeyaml.nodes.Node> representedObjects;

  protected java.lang.Object objectToRepresent;

  private org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils;

  private boolean explicitPropertyUtils;

  public org.yaml.snakeyaml.representer.BaseRepresenter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field representers:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #7                  // Field multiRepresenters:Ljava/util/Map;
      26: aload_0
      27: getstatic     #8                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      30: putfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
      33: aload_0
      34: new           #10                 // class org/yaml/snakeyaml/representer/BaseRepresenter$1
      37: dup
      38: aload_0
      39: invokespecial #11                 // Method org/yaml/snakeyaml/representer/BaseRepresenter$1."<init>":(Lorg/yaml/snakeyaml/representer/BaseRepresenter;)V
      42: putfield      #12                 // Field representedObjects:Ljava/util/Map;
      45: aload_0
      46: iconst_0
      47: putfield      #13                 // Field explicitPropertyUtils:Z
      50: return

  public org.yaml.snakeyaml.nodes.Node represent(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
       5: astore_2
       6: aload_0
       7: getfield      #12                 // Field representedObjects:Ljava/util/Map;
      10: invokeinterface #15,  1           // InterfaceMethod java/util/Map.clear:()V
      15: aload_0
      16: aconst_null
      17: putfield      #16                 // Field objectToRepresent:Ljava/lang/Object;
      20: aload_2
      21: areturn

  protected final org.yaml.snakeyaml.nodes.Node representData(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field objectToRepresent:Ljava/lang/Object;
       5: aload_0
       6: getfield      #12                 // Field representedObjects:Ljava/util/Map;
       9: aload_0
      10: getfield      #16                 // Field objectToRepresent:Ljava/lang/Object;
      13: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      18: ifeq          40
      21: aload_0
      22: getfield      #12                 // Field representedObjects:Ljava/util/Map;
      25: aload_0
      26: getfield      #16                 // Field objectToRepresent:Ljava/lang/Object;
      29: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #19                 // class org/yaml/snakeyaml/nodes/Node
      37: astore_2
      38: aload_2
      39: areturn
      40: aload_1
      41: ifnonnull     57
      44: aload_0
      45: getfield      #20                 // Field nullRepresenter:Lorg/yaml/snakeyaml/representer/Represent;
      48: aconst_null
      49: invokeinterface #21,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      54: astore_2
      55: aload_2
      56: areturn
      57: aload_1
      58: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: astore_3
      62: aload_0
      63: getfield      #4                  // Field representers:Ljava/util/Map;
      66: aload_3
      67: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      72: ifeq          102
      75: aload_0
      76: getfield      #4                  // Field representers:Ljava/util/Map;
      79: aload_3
      80: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #23                 // class org/yaml/snakeyaml/representer/Represent
      88: astore        4
      90: aload         4
      92: aload_1
      93: invokeinterface #21,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      98: astore_2
      99: goto          248
     102: aload_0
     103: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     106: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     111: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     116: astore        4
     118: aload         4
     120: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          184
     128: aload         4
     130: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #28                 // class java/lang/Class
     138: astore        5
     140: aload         5
     142: ifnull        181
     145: aload         5
     147: aload_1
     148: invokevirtual #29                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     151: ifeq          181
     154: aload_0
     155: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     158: aload         5
     160: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     165: checkcast     #23                 // class org/yaml/snakeyaml/representer/Represent
     168: astore        6
     170: aload         6
     172: aload_1
     173: invokeinterface #21,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     178: astore_2
     179: aload_2
     180: areturn
     181: goto          118
     184: aload_0
     185: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     188: aconst_null
     189: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     194: ifeq          224
     197: aload_0
     198: getfield      #7                  // Field multiRepresenters:Ljava/util/Map;
     201: aconst_null
     202: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     207: checkcast     #23                 // class org/yaml/snakeyaml/representer/Represent
     210: astore        4
     212: aload         4
     214: aload_1
     215: invokeinterface #21,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     220: astore_2
     221: goto          248
     224: aload_0
     225: getfield      #4                  // Field representers:Ljava/util/Map;
     228: aconst_null
     229: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     234: checkcast     #23                 // class org/yaml/snakeyaml/representer/Represent
     237: astore        4
     239: aload         4
     241: aload_1
     242: invokeinterface #21,  2           // InterfaceMethod org/yaml/snakeyaml/representer/Represent.representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     247: astore_2
     248: aload_2
     249: areturn

  protected org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag, java.lang.String, java.lang.Character);
    Code:
       0: aload_3
       1: ifnonnull     9
       4: aload_0
       5: getfield      #30                 // Field defaultScalarStyle:Ljava/lang/Character;
       8: astore_3
       9: new           #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
      12: dup
      13: aload_1
      14: aload_2
      15: aconst_null
      16: aconst_null
      17: aload_3
      18: invokespecial #32                 // Method org/yaml/snakeyaml/nodes/ScalarNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/String;Lorg/yaml/snakeyaml/error/Mark;Lorg/yaml/snakeyaml/error/Mark;Ljava/lang/Character;)V
      21: astore        4
      23: aload         4
      25: areturn

  protected org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #33                 // Method representScalar:(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/lang/String;Ljava/lang/Character;)Lorg/yaml/snakeyaml/nodes/Node;
       7: areturn

  protected org.yaml.snakeyaml.nodes.Node representSequence(org.yaml.snakeyaml.nodes.Tag, java.lang.Iterable<?>, java.lang.Boolean);
    Code:
       0: bipush        10
       2: istore        4
       4: aload_2
       5: instanceof    #34                 // class java/util/List
       8: ifeq          22
      11: aload_2
      12: checkcast     #34                 // class java/util/List
      15: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      20: istore        4
      22: new           #36                 // class java/util/ArrayList
      25: dup
      26: iload         4
      28: invokespecial #37                 // Method java/util/ArrayList."<init>":(I)V
      31: astore        5
      33: new           #38                 // class org/yaml/snakeyaml/nodes/SequenceNode
      36: dup
      37: aload_1
      38: aload         5
      40: aload_3
      41: invokespecial #39                 // Method org/yaml/snakeyaml/nodes/SequenceNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/List;Ljava/lang/Boolean;)V
      44: astore        6
      46: aload_0
      47: getfield      #12                 // Field representedObjects:Ljava/util/Map;
      50: aload_0
      51: getfield      #16                 // Field objectToRepresent:Ljava/lang/Object;
      54: aload         6
      56: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: iconst_1
      63: istore        7
      65: aload_2
      66: invokeinterface #41,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      71: astore        8
      73: aload         8
      75: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          135
      83: aload         8
      85: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: astore        9
      92: aload_0
      93: aload         9
      95: invokevirtual #14                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      98: astore        10
     100: aload         10
     102: instanceof    #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     105: ifeq          119
     108: aload         10
     110: checkcast     #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     113: invokevirtual #42                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getStyle:()Ljava/lang/Character;
     116: ifnull        122
     119: iconst_0
     120: istore        7
     122: aload         5
     124: aload         10
     126: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     131: pop
     132: goto          73
     135: aload_3
     136: ifnonnull     174
     139: aload_0
     140: getfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     143: getstatic     #8                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     146: if_acmpeq     164
     149: aload         6
     151: aload_0
     152: getfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     155: invokevirtual #44                 // Method org/yaml/snakeyaml/DumperOptions$FlowStyle.getStyleBoolean:()Ljava/lang/Boolean;
     158: invokevirtual #45                 // Method org/yaml/snakeyaml/nodes/SequenceNode.setFlowStyle:(Ljava/lang/Boolean;)V
     161: goto          174
     164: aload         6
     166: iload         7
     168: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     171: invokevirtual #45                 // Method org/yaml/snakeyaml/nodes/SequenceNode.setFlowStyle:(Ljava/lang/Boolean;)V
     174: aload         6
     176: areturn

  protected org.yaml.snakeyaml.nodes.Node representMapping(org.yaml.snakeyaml.nodes.Tag, java.util.Map<?, ?>, java.lang.Boolean);
    Code:
       0: new           #36                 // class java/util/ArrayList
       3: dup
       4: aload_2
       5: invokeinterface #47,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokespecial #37                 // Method java/util/ArrayList."<init>":(I)V
      13: astore        4
      15: new           #48                 // class org/yaml/snakeyaml/nodes/MappingNode
      18: dup
      19: aload_1
      20: aload         4
      22: aload_3
      23: invokespecial #49                 // Method org/yaml/snakeyaml/nodes/MappingNode."<init>":(Lorg/yaml/snakeyaml/nodes/Tag;Ljava/util/List;Ljava/lang/Boolean;)V
      26: astore        5
      28: aload_0
      29: getfield      #12                 // Field representedObjects:Ljava/util/Map;
      32: aload_0
      33: getfield      #16                 // Field objectToRepresent:Ljava/lang/Object;
      36: aload         5
      38: invokeinterface #40,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: iconst_1
      45: istore        6
      47: aload_2
      48: invokeinterface #50,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      53: invokeinterface #25,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      58: astore        7
      60: aload         7
      62: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          174
      70: aload         7
      72: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #51                 // class java/util/Map$Entry
      80: astore        8
      82: aload_0
      83: aload         8
      85: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      90: invokevirtual #14                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
      93: astore        9
      95: aload_0
      96: aload         8
      98: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     103: invokevirtual #14                 // Method representData:(Ljava/lang/Object;)Lorg/yaml/snakeyaml/nodes/Node;
     106: astore        10
     108: aload         9
     110: instanceof    #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     113: ifeq          127
     116: aload         9
     118: checkcast     #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     121: invokevirtual #42                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getStyle:()Ljava/lang/Character;
     124: ifnull        130
     127: iconst_0
     128: istore        6
     130: aload         10
     132: instanceof    #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     135: ifeq          149
     138: aload         10
     140: checkcast     #31                 // class org/yaml/snakeyaml/nodes/ScalarNode
     143: invokevirtual #42                 // Method org/yaml/snakeyaml/nodes/ScalarNode.getStyle:()Ljava/lang/Character;
     146: ifnull        152
     149: iconst_0
     150: istore        6
     152: aload         4
     154: new           #54                 // class org/yaml/snakeyaml/nodes/NodeTuple
     157: dup
     158: aload         9
     160: aload         10
     162: invokespecial #55                 // Method org/yaml/snakeyaml/nodes/NodeTuple."<init>":(Lorg/yaml/snakeyaml/nodes/Node;Lorg/yaml/snakeyaml/nodes/Node;)V
     165: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     170: pop
     171: goto          60
     174: aload_3
     175: ifnonnull     213
     178: aload_0
     179: getfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     182: getstatic     #8                  // Field org/yaml/snakeyaml/DumperOptions$FlowStyle.AUTO:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     185: if_acmpeq     203
     188: aload         5
     190: aload_0
     191: getfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
     194: invokevirtual #44                 // Method org/yaml/snakeyaml/DumperOptions$FlowStyle.getStyleBoolean:()Ljava/lang/Boolean;
     197: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Ljava/lang/Boolean;)V
     200: goto          213
     203: aload         5
     205: iload         6
     207: invokestatic  #46                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     210: invokevirtual #56                 // Method org/yaml/snakeyaml/nodes/MappingNode.setFlowStyle:(Ljava/lang/Boolean;)V
     213: aload         5
     215: areturn

  public void setDefaultScalarStyle(org.yaml.snakeyaml.DumperOptions$ScalarStyle);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method org/yaml/snakeyaml/DumperOptions$ScalarStyle.getChar:()Ljava/lang/Character;
       5: putfield      #30                 // Field defaultScalarStyle:Ljava/lang/Character;
       8: return

  public org.yaml.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle();
    Code:
       0: aload_0
       1: getfield      #30                 // Field defaultScalarStyle:Ljava/lang/Character;
       4: invokestatic  #58                 // Method org/yaml/snakeyaml/DumperOptions$ScalarStyle.createStyle:(Ljava/lang/Character;)Lorg/yaml/snakeyaml/DumperOptions$ScalarStyle;
       7: areturn

  public void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       5: return

  public org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle();
    Code:
       0: aload_0
       1: getfield      #9                  // Field defaultFlowStyle:Lorg/yaml/snakeyaml/DumperOptions$FlowStyle;
       4: areturn

  public void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       5: aload_0
       6: iconst_1
       7: putfield      #13                 // Field explicitPropertyUtils:Z
      10: return

  public final org.yaml.snakeyaml.introspector.PropertyUtils getPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #59                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
       4: ifnonnull     18
       7: aload_0
       8: new           #60                 // class org/yaml/snakeyaml/introspector/PropertyUtils
      11: dup
      12: invokespecial #61                 // Method org/yaml/snakeyaml/introspector/PropertyUtils."<init>":()V
      15: putfield      #59                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      18: aload_0
      19: getfield      #59                 // Field propertyUtils:Lorg/yaml/snakeyaml/introspector/PropertyUtils;
      22: areturn

  public final boolean isExplicitPropertyUtils();
    Code:
       0: aload_0
       1: getfield      #13                 // Field explicitPropertyUtils:Z
       4: ireturn
}
