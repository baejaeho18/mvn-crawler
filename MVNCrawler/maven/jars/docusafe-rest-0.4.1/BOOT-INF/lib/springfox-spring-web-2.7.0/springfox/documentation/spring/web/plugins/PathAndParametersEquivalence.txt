Compiled from "PathAndParametersEquivalence.java"
class springfox.documentation.spring.web.plugins.PathAndParametersEquivalence extends com.google.common.base.Equivalence<springfox.documentation.RequestHandler> {
  private static final springfox.documentation.spring.web.plugins.ResolvedMethodParameterEquivalence parameterEquivalence;

  springfox.documentation.spring.web.plugins.PathAndParametersEquivalence();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/base/Equivalence."<init>":()V
       4: return

  protected boolean doEquivalent(springfox.documentation.RequestHandler, springfox.documentation.RequestHandler);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod springfox/documentation/RequestHandler.getPatternsCondition:()Lorg/springframework/web/servlet/mvc/condition/PatternsRequestCondition;
       6: aload_2
       7: invokeinterface #3,  1            // InterfaceMethod springfox/documentation/RequestHandler.getPatternsCondition:()Lorg/springframework/web/servlet/mvc/condition/PatternsRequestCondition;
      12: invokevirtual #4                  // Method org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.equals:(Ljava/lang/Object;)Z
      15: ifeq          92
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod springfox/documentation/RequestHandler.supportedMethods:()Ljava/util/Set;
      24: aload_2
      25: invokeinterface #5,  1            // InterfaceMethod springfox/documentation/RequestHandler.supportedMethods:()Ljava/util/Set;
      30: invokestatic  #6                  // Method com/google/common/collect/Sets.intersection:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;
      33: invokevirtual #7                  // Method com/google/common/collect/Sets$SetView.isEmpty:()Z
      36: ifne          92
      39: aload_1
      40: invokeinterface #8,  1            // InterfaceMethod springfox/documentation/RequestHandler.params:()Ljava/util/Set;
      45: aload_2
      46: invokeinterface #8,  1            // InterfaceMethod springfox/documentation/RequestHandler.params:()Ljava/util/Set;
      51: invokeinterface #9,  2            // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      56: ifeq          92
      59: aload_0
      60: aload_1
      61: invokeinterface #10,  1           // InterfaceMethod springfox/documentation/RequestHandler.getParameters:()Ljava/util/List;
      66: invokespecial #11                 // Method wrapped:(Ljava/util/List;)Ljava/util/Set;
      69: aload_0
      70: aload_2
      71: invokeinterface #10,  1           // InterfaceMethod springfox/documentation/RequestHandler.getParameters:()Ljava/util/List;
      76: invokespecial #11                 // Method wrapped:(Ljava/util/List;)Ljava/util/Set;
      79: invokestatic  #12                 // Method com/google/common/collect/Sets.difference:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;
      82: invokevirtual #7                  // Method com/google/common/collect/Sets$SetView.isEmpty:()Z
      85: ifeq          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ireturn

  private java.util.Set<com.google.common.base.Equivalence$Wrapper<springfox.documentation.service.ResolvedMethodParameter>> wrapped(java.util.List<springfox.documentation.service.ResolvedMethodParameter>);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/collect/FluentIterable.from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       4: aload_0
       5: invokespecial #14                 // Method wrappingFunction:()Lcom/google/common/base/Function;
       8: invokevirtual #15                 // Method com/google/common/collect/FluentIterable.transform:(Lcom/google/common/base/Function;)Lcom/google/common/collect/FluentIterable;
      11: invokevirtual #16                 // Method com/google/common/collect/FluentIterable.toSet:()Lcom/google/common/collect/ImmutableSet;
      14: areturn

  private com.google.common.base.Function<springfox.documentation.service.ResolvedMethodParameter, com.google.common.base.Equivalence$Wrapper<springfox.documentation.service.ResolvedMethodParameter>> wrappingFunction();
    Code:
       0: new           #17                 // class springfox/documentation/spring/web/plugins/PathAndParametersEquivalence$1
       3: dup
       4: aload_0
       5: invokespecial #18                 // Method springfox/documentation/spring/web/plugins/PathAndParametersEquivalence$1."<init>":(Lspringfox/documentation/spring/web/plugins/PathAndParametersEquivalence;)V
       8: areturn

  protected int doHash(springfox.documentation.RequestHandler);
    Code:
       0: iconst_4
       1: anewarray     #19                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_1
       7: invokeinterface #3,  1            // InterfaceMethod springfox/documentation/RequestHandler.getPatternsCondition:()Lorg/springframework/web/servlet/mvc/condition/PatternsRequestCondition;
      12: invokevirtual #20                 // Method org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.getPatterns:()Ljava/util/Set;
      15: aastore
      16: dup
      17: iconst_1
      18: aload_1
      19: invokeinterface #5,  1            // InterfaceMethod springfox/documentation/RequestHandler.supportedMethods:()Ljava/util/Set;
      24: aastore
      25: dup
      26: iconst_2
      27: aload_1
      28: invokeinterface #8,  1            // InterfaceMethod springfox/documentation/RequestHandler.params:()Ljava/util/Set;
      33: aastore
      34: dup
      35: iconst_3
      36: aload_0
      37: aload_1
      38: invokeinterface #10,  1           // InterfaceMethod springfox/documentation/RequestHandler.getParameters:()Ljava/util/List;
      43: invokespecial #11                 // Method wrapped:(Ljava/util/List;)Ljava/util/Set;
      46: aastore
      47: invokestatic  #21                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      50: ireturn

  protected int doHash(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class springfox/documentation/RequestHandler
       5: invokevirtual #23                 // Method doHash:(Lspringfox/documentation/RequestHandler;)I
       8: ireturn

  protected boolean doEquivalent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class springfox/documentation/RequestHandler
       5: aload_2
       6: checkcast     #22                 // class springfox/documentation/RequestHandler
       9: invokevirtual #24                 // Method doEquivalent:(Lspringfox/documentation/RequestHandler;Lspringfox/documentation/RequestHandler;)Z
      12: ireturn

  static springfox.documentation.spring.web.plugins.ResolvedMethodParameterEquivalence access$000();
    Code:
       0: getstatic     #1                  // Field parameterEquivalence:Lspringfox/documentation/spring/web/plugins/ResolvedMethodParameterEquivalence;
       3: areturn

  static {};
    Code:
       0: new           #25                 // class springfox/documentation/spring/web/plugins/ResolvedMethodParameterEquivalence
       3: dup
       4: invokespecial #26                 // Method springfox/documentation/spring/web/plugins/ResolvedMethodParameterEquivalence."<init>":()V
       7: putstatic     #1                  // Field parameterEquivalence:Lspringfox/documentation/spring/web/plugins/ResolvedMethodParameterEquivalence;
      10: return
}
