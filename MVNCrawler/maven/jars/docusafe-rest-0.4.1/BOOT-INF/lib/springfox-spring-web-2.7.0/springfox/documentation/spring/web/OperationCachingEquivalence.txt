Compiled from "OperationCachingEquivalence.java"
public class springfox.documentation.spring.web.OperationCachingEquivalence extends com.google.common.base.Equivalence<springfox.documentation.spi.service.contexts.RequestMappingContext> {
  public springfox.documentation.spring.web.OperationCachingEquivalence();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/base/Equivalence."<init>":()V
       4: return

  protected boolean doEquivalent(springfox.documentation.spi.service.contexts.RequestMappingContext, springfox.documentation.spi.service.contexts.RequestMappingContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method bothAreNull:(Lspringfox/documentation/spi/service/contexts/RequestMappingContext;Lspringfox/documentation/spi/service/contexts/RequestMappingContext;)Z
       6: ifeq          11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #3                  // Method eitherOfThemIsNull:(Lspringfox/documentation/spi/service/contexts/RequestMappingContext;Lspringfox/documentation/spi/service/contexts/RequestMappingContext;)Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
      26: aload_2
      27: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
      30: invokestatic  #5                  // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ifeq          54
      36: aload_1
      37: invokevirtual #6                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.getGenericsNamingStrategy:()Lspringfox/documentation/spi/schema/GenericTypeNamingStrategy;
      40: aload_2
      41: invokevirtual #6                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.getGenericsNamingStrategy:()Lspringfox/documentation/spi/schema/GenericTypeNamingStrategy;
      44: invokestatic  #5                  // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn

  private boolean eitherOfThemIsNull(springfox.documentation.spi.service.contexts.RequestMappingContext, springfox.documentation.spi.service.contexts.RequestMappingContext);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
       4: ifnull        14
       7: aload_2
       8: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean bothAreNull(springfox.documentation.spi.service.contexts.RequestMappingContext, springfox.documentation.spi.service.contexts.RequestMappingContext);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
       4: ifnonnull     18
       7: aload_2
       8: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected int doHash(springfox.documentation.spi.service.contexts.RequestMappingContext);
    Code:
       0: iconst_3
       1: anewarray     #7                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_1
       7: invokevirtual #4                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.key:()Lspringfox/documentation/RequestHandlerKey;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_1
      14: invokevirtual #8                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.getRequestMappingPattern:()Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_1
      21: invokevirtual #6                  // Method springfox/documentation/spi/service/contexts/RequestMappingContext.getGenericsNamingStrategy:()Lspringfox/documentation/spi/schema/GenericTypeNamingStrategy;
      24: aastore
      25: invokestatic  #9                  // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      28: ireturn

  protected int doHash(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class springfox/documentation/spi/service/contexts/RequestMappingContext
       5: invokevirtual #11                 // Method doHash:(Lspringfox/documentation/spi/service/contexts/RequestMappingContext;)I
       8: ireturn

  protected boolean doEquivalent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class springfox/documentation/spi/service/contexts/RequestMappingContext
       5: aload_2
       6: checkcast     #10                 // class springfox/documentation/spi/service/contexts/RequestMappingContext
       9: invokevirtual #12                 // Method doEquivalent:(Lspringfox/documentation/spi/service/contexts/RequestMappingContext;Lspringfox/documentation/spi/service/contexts/RequestMappingContext;)Z
      12: ireturn
}
