Compiled from "DefaultRequestHandlerCombiner.java"
class springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner$1 implements com.google.common.base.Function<springfox.documentation.RequestHandler, com.google.common.base.Equivalence$Wrapper<springfox.documentation.RequestHandler>> {
  final springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner this$0;

  springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner$1(springfox.documentation.spring.web.plugins.DefaultRequestHandlerCombiner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lspringfox/documentation/spring/web/plugins/DefaultRequestHandlerCombiner;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public com.google.common.base.Equivalence$Wrapper<springfox.documentation.RequestHandler> apply(springfox.documentation.RequestHandler);
    Code:
       0: invokestatic  #3                  // Method springfox/documentation/spring/web/plugins/DefaultRequestHandlerCombiner.access$000:()Lspringfox/documentation/spring/web/plugins/PathAndParametersEquivalence;
       3: aload_1
       4: invokevirtual #4                  // Method springfox/documentation/spring/web/plugins/PathAndParametersEquivalence.wrap:(Ljava/lang/Object;)Lcom/google/common/base/Equivalence$Wrapper;
       7: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class springfox/documentation/RequestHandler
       5: invokevirtual #6                  // Method apply:(Lspringfox/documentation/RequestHandler;)Lcom/google/common/base/Equivalence$Wrapper;
       8: areturn
}
