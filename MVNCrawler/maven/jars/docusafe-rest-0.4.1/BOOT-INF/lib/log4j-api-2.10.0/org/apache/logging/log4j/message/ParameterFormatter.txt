Compiled from "ParameterFormatter.java"
final class org.apache.logging.log4j.message.ParameterFormatter {
  static final java.lang.String RECURSION_PREFIX;

  static final java.lang.String RECURSION_SUFFIX;

  static final java.lang.String ERROR_PREFIX;

  static final java.lang.String ERROR_SEPARATOR;

  static final java.lang.String ERROR_MSG_SEPARATOR;

  static final java.lang.String ERROR_SUFFIX;

  private static final char DELIM_START;

  private static final char DELIM_STOP;

  private static final char ESCAPE_CHAR;

  private static java.lang.ThreadLocal<java.text.SimpleDateFormat> threadLocalSimpleDateFormat;

  private org.apache.logging.log4j.message.ParameterFormatter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static int countArgumentPlaceholders(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/lang/String.length:()I
      10: istore_1
      11: iconst_0
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: iload_1
      21: iconst_1
      22: isub
      23: if_icmpge     97
      26: aload_0
      27: iload         4
      29: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      32: istore        5
      34: iload         5
      36: bipush        92
      38: if_icmpne     54
      41: iload_3
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: istore_3
      51: goto          91
      54: iload         5
      56: bipush        123
      58: if_icmpne     89
      61: iload_3
      62: ifne          84
      65: aload_0
      66: iload         4
      68: iconst_1
      69: iadd
      70: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      73: bipush        125
      75: if_icmpne     84
      78: iinc          2, 1
      81: iinc          4, 1
      84: iconst_0
      85: istore_3
      86: goto          91
      89: iconst_0
      90: istore_3
      91: iinc          4, 1
      94: goto          18
      97: iload_2
      98: ireturn

  static int countArgumentPlaceholders2(java.lang.String, int[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #2                  // Method java/lang/String.length:()I
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload_2
      22: iconst_1
      23: isub
      24: if_icmpge     115
      27: aload_0
      28: iload         5
      30: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      33: istore        6
      35: iload         6
      37: bipush        92
      39: if_icmpne     64
      42: iload         4
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        4
      54: aload_1
      55: iconst_0
      56: iconst_m1
      57: iastore
      58: iinc          3, 1
      61: goto          109
      64: iload         6
      66: bipush        123
      68: if_icmpne     106
      71: iload         4
      73: ifne          100
      76: aload_0
      77: iload         5
      79: iconst_1
      80: iadd
      81: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      84: bipush        125
      86: if_icmpne     100
      89: aload_1
      90: iload_3
      91: iload         5
      93: iastore
      94: iinc          3, 1
      97: iinc          5, 1
     100: iconst_0
     101: istore        4
     103: goto          109
     106: iconst_0
     107: istore        4
     109: iinc          5, 1
     112: goto          19
     115: iload_3
     116: ireturn

  static int countArgumentPlaceholders3(char[], int, int[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: iload_1
      11: iconst_1
      12: isub
      13: if_icmpge     93
      16: aload_0
      17: iload         5
      19: caload
      20: istore        6
      22: iload         6
      24: bipush        92
      26: if_icmpne     44
      29: iload         4
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore        4
      41: goto          87
      44: iload         6
      46: bipush        123
      48: if_icmpne     84
      51: iload         4
      53: ifne          78
      56: aload_0
      57: iload         5
      59: iconst_1
      60: iadd
      61: caload
      62: bipush        125
      64: if_icmpne     78
      67: aload_2
      68: iload_3
      69: iload         5
      71: iastore
      72: iinc          3, 1
      75: iinc          5, 1
      78: iconst_0
      79: istore        4
      81: goto          87
      84: iconst_0
      85: istore        4
      87: iinc          5, 1
      90: goto          8
      93: iload_3
      94: ireturn

  static java.lang.String format(java.lang.String, java.lang.Object[]);
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: ifnonnull     16
      12: iconst_0
      13: goto          18
      16: aload_1
      17: arraylength
      18: istore_3
      19: aload_2
      20: aload_0
      21: aload_1
      22: iload_3
      23: invokestatic  #6                  // Method formatMessage:(Ljava/lang/StringBuilder;Ljava/lang/String;[Ljava/lang/Object;I)V
      26: aload_2
      27: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  static void formatMessage2(java.lang.StringBuilder, java.lang.String, java.lang.Object[], int, int[]);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_2
       5: ifnull        12
       8: iload_3
       9: ifne          19
      12: aload_0
      13: aload_1
      14: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: return
      19: iconst_0
      20: istore        5
      22: iconst_0
      23: istore        6
      25: iload         6
      27: iload_3
      28: if_icmpge     68
      31: aload_0
      32: aload_1
      33: iload         5
      35: aload         4
      37: iload         6
      39: iaload
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      43: pop
      44: aload         4
      46: iload         6
      48: iaload
      49: iconst_2
      50: iadd
      51: istore        5
      53: aload_2
      54: iload         6
      56: aaload
      57: aload_0
      58: aconst_null
      59: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      62: iinc          6, 1
      65: goto          25
      68: aload_0
      69: aload_1
      70: iload         5
      72: aload_1
      73: invokevirtual #2                  // Method java/lang/String.length:()I
      76: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      79: pop
      80: return

  static void formatMessage3(java.lang.StringBuilder, char[], int, java.lang.Object[], int, int[]);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_3
       6: ifnull        14
       9: iload         4
      11: ifne          21
      14: aload_0
      15: aload_1
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;
      19: pop
      20: return
      21: iconst_0
      22: istore        6
      24: iconst_0
      25: istore        7
      27: iload         7
      29: iload         4
      31: if_icmpge     71
      34: aload_0
      35: aload_1
      36: iload         6
      38: aload         5
      40: iload         7
      42: iaload
      43: invokevirtual #12                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      46: pop
      47: aload         5
      49: iload         7
      51: iaload
      52: iconst_2
      53: iadd
      54: istore        6
      56: aload_3
      57: iload         7
      59: aaload
      60: aload_0
      61: aconst_null
      62: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      65: iinc          7, 1
      68: goto          27
      71: aload_0
      72: aload_1
      73: iload         6
      75: iload_2
      76: invokevirtual #12                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      79: pop
      80: return

  static void formatMessage(java.lang.StringBuilder, java.lang.String, java.lang.Object[], int);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_2
       5: ifnull        12
       8: iload_3
       9: ifne          19
      12: aload_0
      13: aload_1
      14: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: return
      19: iconst_0
      20: istore        4
      22: iconst_0
      23: istore        5
      25: iconst_0
      26: istore        6
      28: aload_1
      29: invokevirtual #2                  // Method java/lang/String.length:()I
      32: istore        7
      34: iload         6
      36: iload         7
      38: iconst_1
      39: isub
      40: if_icmpge     130
      43: aload_1
      44: iload         6
      46: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      49: istore        8
      51: iload         8
      53: bipush        92
      55: if_icmpne     64
      58: iinc          4, 1
      61: goto          124
      64: iload         8
      66: aload_1
      67: iload         6
      69: invokestatic  #13                 // Method isDelimPair:(CLjava/lang/String;I)Z
      72: ifeq          113
      75: iinc          6, 1
      78: iload         4
      80: aload_0
      81: invokestatic  #14                 // Method writeEscapedEscapeChars:(ILjava/lang/StringBuilder;)V
      84: iload         4
      86: invokestatic  #15                 // Method isOdd:(I)Z
      89: ifeq          99
      92: aload_0
      93: invokestatic  #16                 // Method writeDelimPair:(Ljava/lang/StringBuilder;)V
      96: goto          121
      99: aload_2
     100: iload_3
     101: iload         5
     103: aload_0
     104: invokestatic  #17                 // Method writeArgOrDelimPair:([Ljava/lang/Object;IILjava/lang/StringBuilder;)V
     107: iinc          5, 1
     110: goto          121
     113: aload_0
     114: iload         4
     116: iload         8
     118: invokestatic  #18                 // Method handleLiteralChar:(Ljava/lang/StringBuilder;IC)V
     121: iconst_0
     122: istore        4
     124: iinc          6, 1
     127: goto          34
     130: aload_1
     131: iload         7
     133: aload_0
     134: iload         4
     136: iload         6
     138: invokestatic  #19                 // Method handleRemainingCharIfAny:(Ljava/lang/String;ILjava/lang/StringBuilder;II)V
     141: return

  private static boolean isDelimPair(char, java.lang.String, int);
    Code:
       0: iload_0
       1: bipush        123
       3: if_icmpne     22
       6: aload_1
       7: iload_2
       8: iconst_1
       9: iadd
      10: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      13: bipush        125
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static void handleRemainingCharIfAny(java.lang.String, int, java.lang.StringBuilder, int, int);
    Code:
       0: iload         4
       2: iload_1
       3: iconst_1
       4: isub
       5: if_icmpne     23
       8: aload_0
       9: iload         4
      11: invokevirtual #3                  // Method java/lang/String.charAt:(I)C
      14: istore        5
      16: aload_2
      17: iload_3
      18: iload         5
      20: invokestatic  #20                 // Method handleLastChar:(Ljava/lang/StringBuilder;IC)V
      23: return

  private static void handleLastChar(java.lang.StringBuilder, int, char);
    Code:
       0: iload_2
       1: bipush        92
       3: if_icmpne     16
       6: iload_1
       7: iconst_1
       8: iadd
       9: aload_0
      10: invokestatic  #21                 // Method writeUnescapedEscapeChars:(ILjava/lang/StringBuilder;)V
      13: goto          22
      16: aload_0
      17: iload_1
      18: iload_2
      19: invokestatic  #18                 // Method handleLiteralChar:(Ljava/lang/StringBuilder;IC)V
      22: return

  private static void handleLiteralChar(java.lang.StringBuilder, int, char);
    Code:
       0: iload_1
       1: aload_0
       2: invokestatic  #21                 // Method writeUnescapedEscapeChars:(ILjava/lang/StringBuilder;)V
       5: aload_0
       6: iload_2
       7: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      10: pop
      11: return

  private static void writeDelimPair(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: bipush        123
       3: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: aload_0
       8: bipush        125
      10: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      13: pop
      14: return

  private static boolean isOdd(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iand
       3: iconst_1
       4: if_icmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static void writeEscapedEscapeChars(int, java.lang.StringBuilder);
    Code:
       0: iload_0
       1: iconst_1
       2: ishr
       3: istore_2
       4: iload_2
       5: aload_1
       6: invokestatic  #21                 // Method writeUnescapedEscapeChars:(ILjava/lang/StringBuilder;)V
       9: return

  private static void writeUnescapedEscapeChars(int, java.lang.StringBuilder);
    Code:
       0: iload_0
       1: ifle          17
       4: aload_1
       5: bipush        92
       7: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      10: pop
      11: iinc          0, -1
      14: goto          0
      17: return

  private static void writeArgOrDelimPair(java.lang.Object[], int, int, java.lang.StringBuilder);
    Code:
       0: iload_2
       1: iload_1
       2: if_icmpge     16
       5: aload_0
       6: iload_2
       7: aaload
       8: aload_3
       9: aconst_null
      10: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      13: goto          20
      16: aload_3
      17: invokestatic  #16                 // Method writeDelimPair:(Ljava/lang/StringBuilder;)V
      20: return

  static java.lang.String deepToString(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: instanceof    #23                 // class java/lang/String
      10: ifeq          18
      13: aload_0
      14: checkcast     #23                 // class java/lang/String
      17: areturn
      18: aload_0
      19: instanceof    #24                 // class java/lang/Integer
      22: ifeq          36
      25: aload_0
      26: checkcast     #24                 // class java/lang/Integer
      29: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      32: invokestatic  #26                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      35: areturn
      36: aload_0
      37: instanceof    #27                 // class java/lang/Long
      40: ifeq          54
      43: aload_0
      44: checkcast     #27                 // class java/lang/Long
      47: invokevirtual #28                 // Method java/lang/Long.longValue:()J
      50: invokestatic  #29                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      53: areturn
      54: aload_0
      55: instanceof    #30                 // class java/lang/Double
      58: ifeq          72
      61: aload_0
      62: checkcast     #30                 // class java/lang/Double
      65: invokevirtual #31                 // Method java/lang/Double.doubleValue:()D
      68: invokestatic  #32                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      71: areturn
      72: aload_0
      73: instanceof    #33                 // class java/lang/Boolean
      76: ifeq          90
      79: aload_0
      80: checkcast     #33                 // class java/lang/Boolean
      83: invokevirtual #34                 // Method java/lang/Boolean.booleanValue:()Z
      86: invokestatic  #35                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      89: areturn
      90: aload_0
      91: instanceof    #36                 // class java/lang/Character
      94: ifeq          108
      97: aload_0
      98: checkcast     #36                 // class java/lang/Character
     101: invokevirtual #37                 // Method java/lang/Character.charValue:()C
     104: invokestatic  #38                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
     107: areturn
     108: aload_0
     109: instanceof    #39                 // class java/lang/Short
     112: ifeq          126
     115: aload_0
     116: checkcast     #39                 // class java/lang/Short
     119: invokevirtual #40                 // Method java/lang/Short.shortValue:()S
     122: invokestatic  #41                 // Method java/lang/Short.toString:(S)Ljava/lang/String;
     125: areturn
     126: aload_0
     127: instanceof    #42                 // class java/lang/Float
     130: ifeq          144
     133: aload_0
     134: checkcast     #42                 // class java/lang/Float
     137: invokevirtual #43                 // Method java/lang/Float.floatValue:()F
     140: invokestatic  #44                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
     143: areturn
     144: aload_0
     145: instanceof    #45                 // class java/lang/Byte
     148: ifeq          162
     151: aload_0
     152: checkcast     #45                 // class java/lang/Byte
     155: invokevirtual #46                 // Method java/lang/Byte.byteValue:()B
     158: invokestatic  #47                 // Method java/lang/Byte.toString:(B)Ljava/lang/String;
     161: areturn
     162: new           #4                  // class java/lang/StringBuilder
     165: dup
     166: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
     169: astore_1
     170: aload_0
     171: aload_1
     172: aconst_null
     173: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     176: aload_1
     177: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: areturn

  static void recursiveDeepToString(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method appendSpecialTypes:(Ljava/lang/Object;Ljava/lang/StringBuilder;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: invokestatic  #49                 // Method isMaybeRecursive:(Ljava/lang/Object;)Z
      13: ifeq          25
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokestatic  #50                 // Method appendPotentiallyRecursiveValue:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      22: goto          30
      25: aload_0
      26: aload_1
      27: invokestatic  #51                 // Method tryObjectToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V
      30: return

  private static boolean appendSpecialTypes(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #52                 // Method org/apache/logging/log4j/util/StringBuilders.appendSpecificTypes:(Ljava/lang/StringBuilder;Ljava/lang/Object;)Z
       5: ifne          16
       8: aload_0
       9: aload_1
      10: invokestatic  #53                 // Method appendDate:(Ljava/lang/Object;Ljava/lang/StringBuilder;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean appendDate(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: instanceof    #54                 // class java/util/Date
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: checkcast     #54                 // class java/util/Date
      13: astore_2
      14: invokestatic  #55                 // Method getSimpleDateFormat:()Ljava/text/SimpleDateFormat;
      17: astore_3
      18: aload_1
      19: aload_3
      20: aload_2
      21: invokevirtual #56                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: pop
      28: iconst_1
      29: ireturn

  private static java.text.SimpleDateFormat getSimpleDateFormat();
    Code:
       0: getstatic     #57                 // Field threadLocalSimpleDateFormat:Ljava/lang/ThreadLocal;
       3: invokevirtual #58                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #59                 // class java/text/SimpleDateFormat
       9: astore_0
      10: aload_0
      11: ifnonnull     31
      14: new           #59                 // class java/text/SimpleDateFormat
      17: dup
      18: ldc           #60                 // String yyyy-MM-dd\'T\'HH:mm:ss.SSSZ
      20: invokespecial #61                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      23: astore_0
      24: getstatic     #57                 // Field threadLocalSimpleDateFormat:Ljava/lang/ThreadLocal;
      27: aload_0
      28: invokevirtual #62                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      31: aload_0
      32: areturn

  private static boolean isMaybeRecursive(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #64                 // Method java/lang/Class.isArray:()Z
       7: ifne          24
      10: aload_0
      11: instanceof    #65                 // class java/util/Map
      14: ifne          24
      17: aload_0
      18: instanceof    #66                 // class java/util/Collection
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private static void appendPotentiallyRecursiveValue(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: invokevirtual #64                 // Method java/lang/Class.isArray:()Z
       9: ifeq          22
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokestatic  #67                 // Method appendArray:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;Ljava/lang/Class;)V
      19: goto          51
      22: aload_0
      23: instanceof    #65                 // class java/util/Map
      26: ifeq          38
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokestatic  #68                 // Method appendMap:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      35: goto          51
      38: aload_0
      39: instanceof    #66                 // class java/util/Collection
      42: ifeq          51
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokestatic  #69                 // Method appendCollection:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
      51: return

  private static void appendArray(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.String>, java.lang.Class<?>);
    Code:
       0: aload_3
       1: ldc_w         #70                 // class "[B"
       4: if_acmpne     25
       7: aload_1
       8: aload_0
       9: checkcast     #70                 // class "[B"
      12: checkcast     #70                 // class "[B"
      15: invokestatic  #71                 // Method java/util/Arrays.toString:([B)Ljava/lang/String;
      18: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: goto          348
      25: aload_3
      26: ldc_w         #72                 // class "[S"
      29: if_acmpne     50
      32: aload_1
      33: aload_0
      34: checkcast     #72                 // class "[S"
      37: checkcast     #72                 // class "[S"
      40: invokestatic  #73                 // Method java/util/Arrays.toString:([S)Ljava/lang/String;
      43: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: goto          348
      50: aload_3
      51: ldc_w         #74                 // class "[I"
      54: if_acmpne     75
      57: aload_1
      58: aload_0
      59: checkcast     #74                 // class "[I"
      62: checkcast     #74                 // class "[I"
      65: invokestatic  #75                 // Method java/util/Arrays.toString:([I)Ljava/lang/String;
      68: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: pop
      72: goto          348
      75: aload_3
      76: ldc_w         #76                 // class "[J"
      79: if_acmpne     100
      82: aload_1
      83: aload_0
      84: checkcast     #76                 // class "[J"
      87: checkcast     #76                 // class "[J"
      90: invokestatic  #77                 // Method java/util/Arrays.toString:([J)Ljava/lang/String;
      93: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: goto          348
     100: aload_3
     101: ldc_w         #78                 // class "[F"
     104: if_acmpne     125
     107: aload_1
     108: aload_0
     109: checkcast     #78                 // class "[F"
     112: checkcast     #78                 // class "[F"
     115: invokestatic  #79                 // Method java/util/Arrays.toString:([F)Ljava/lang/String;
     118: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: pop
     122: goto          348
     125: aload_3
     126: ldc_w         #80                 // class "[D"
     129: if_acmpne     150
     132: aload_1
     133: aload_0
     134: checkcast     #80                 // class "[D"
     137: checkcast     #80                 // class "[D"
     140: invokestatic  #81                 // Method java/util/Arrays.toString:([D)Ljava/lang/String;
     143: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: goto          348
     150: aload_3
     151: ldc_w         #82                 // class "[Z"
     154: if_acmpne     175
     157: aload_1
     158: aload_0
     159: checkcast     #82                 // class "[Z"
     162: checkcast     #82                 // class "[Z"
     165: invokestatic  #83                 // Method java/util/Arrays.toString:([Z)Ljava/lang/String;
     168: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: pop
     172: goto          348
     175: aload_3
     176: ldc_w         #84                 // class "[C"
     179: if_acmpne     200
     182: aload_1
     183: aload_0
     184: checkcast     #84                 // class "[C"
     187: checkcast     #84                 // class "[C"
     190: invokestatic  #85                 // Method java/util/Arrays.toString:([C)Ljava/lang/String;
     193: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: pop
     197: goto          348
     200: aload_2
     201: ifnonnull     212
     204: new           #86                 // class java/util/HashSet
     207: dup
     208: invokespecial #87                 // Method java/util/HashSet."<init>":()V
     211: astore_2
     212: aload_0
     213: invokestatic  #88                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
     216: astore        4
     218: aload_2
     219: aload         4
     221: invokeinterface #89,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     226: ifeq          249
     229: aload_1
     230: ldc           #90                 // String [...
     232: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: aload         4
     237: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: ldc           #91                 // String ...]
     242: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: pop
     246: goto          348
     249: aload_2
     250: aload         4
     252: invokeinterface #92,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     257: pop
     258: aload_0
     259: checkcast     #93                 // class "[Ljava/lang/Object;"
     262: checkcast     #93                 // class "[Ljava/lang/Object;"
     265: astore        5
     267: aload_1
     268: bipush        91
     270: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     273: pop
     274: iconst_1
     275: istore        6
     277: aload         5
     279: astore        7
     281: aload         7
     283: arraylength
     284: istore        8
     286: iconst_0
     287: istore        9
     289: iload         9
     291: iload         8
     293: if_icmpge     341
     296: aload         7
     298: iload         9
     300: aaload
     301: astore        10
     303: iload         6
     305: ifeq          314
     308: iconst_0
     309: istore        6
     311: goto          321
     314: aload_1
     315: ldc           #94                 // String ,
     317: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     320: pop
     321: aload         10
     323: aload_1
     324: new           #86                 // class java/util/HashSet
     327: dup
     328: aload_2
     329: invokespecial #95                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     332: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     335: iinc          9, 1
     338: goto          289
     341: aload_1
     342: bipush        93
     344: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     347: pop
     348: return

  private static void appendMap(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #86                 // class java/util/HashSet
       7: dup
       8: invokespecial #87                 // Method java/util/HashSet."<init>":()V
      11: astore_2
      12: aload_0
      13: invokestatic  #88                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
      16: astore_3
      17: aload_2
      18: aload_3
      19: invokeinterface #89,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ifeq          46
      27: aload_1
      28: ldc           #90                 // String [...
      30: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_3
      34: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #91                 // String ...]
      39: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: goto          191
      46: aload_2
      47: aload_3
      48: invokeinterface #92,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: checkcast     #65                 // class java/util/Map
      58: astore        4
      60: aload_1
      61: bipush        123
      63: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      66: pop
      67: iconst_1
      68: istore        5
      70: aload         4
      72: invokeinterface #96,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      77: invokeinterface #97,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore        6
      84: aload         6
      86: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          184
      94: aload         6
      96: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: astore        7
     103: aload         7
     105: checkcast     #100                // class java/util/Map$Entry
     108: astore        8
     110: iload         5
     112: ifeq          121
     115: iconst_0
     116: istore        5
     118: goto          128
     121: aload_1
     122: ldc           #94                 // String ,
     124: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: pop
     128: aload         8
     130: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     135: astore        9
     137: aload         8
     139: invokeinterface #102,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     144: astore        10
     146: aload         9
     148: aload_1
     149: new           #86                 // class java/util/HashSet
     152: dup
     153: aload_2
     154: invokespecial #95                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     157: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     160: aload_1
     161: bipush        61
     163: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     166: pop
     167: aload         10
     169: aload_1
     170: new           #86                 // class java/util/HashSet
     173: dup
     174: aload_2
     175: invokespecial #95                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     178: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     181: goto          84
     184: aload_1
     185: bipush        125
     187: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     190: pop
     191: return

  private static void appendCollection(java.lang.Object, java.lang.StringBuilder, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: new           #86                 // class java/util/HashSet
       7: dup
       8: invokespecial #87                 // Method java/util/HashSet."<init>":()V
      11: astore_2
      12: aload_0
      13: invokestatic  #88                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
      16: astore_3
      17: aload_2
      18: aload_3
      19: invokeinterface #89,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ifeq          46
      27: aload_1
      28: ldc           #90                 // String [...
      30: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_3
      34: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #91                 // String ...]
      39: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: goto          140
      46: aload_2
      47: aload_3
      48: invokeinterface #92,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: checkcast     #66                 // class java/util/Collection
      58: astore        4
      60: aload_1
      61: bipush        91
      63: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      66: pop
      67: iconst_1
      68: istore        5
      70: aload         4
      72: invokeinterface #103,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      77: astore        6
      79: aload         6
      81: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          133
      89: aload         6
      91: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: astore        7
      98: iload         5
     100: ifeq          109
     103: iconst_0
     104: istore        5
     106: goto          116
     109: aload_1
     110: ldc           #94                 // String ,
     112: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: pop
     116: aload         7
     118: aload_1
     119: new           #86                 // class java/util/HashSet
     122: dup
     123: aload_2
     124: invokespecial #95                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     127: invokestatic  #10                 // Method recursiveDeepToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V
     130: goto          79
     133: aload_1
     134: bipush        93
     136: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     139: pop
     140: return

  private static void tryObjectToString(java.lang.Object, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #104                // Method java/lang/Object.toString:()Ljava/lang/String;
       5: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: goto          19
      12: astore_2
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokestatic  #106                // Method handleErrorInObjectToString:(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/lang/Throwable;)V
      19: return
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Throwable

  private static void handleErrorInObjectToString(java.lang.Object, java.lang.StringBuilder, java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #107                // String [!!!
       3: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: pop
       7: aload_1
       8: aload_0
       9: invokestatic  #88                 // Method identityToString:(Ljava/lang/Object;)Ljava/lang/String;
      12: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: aload_1
      17: ldc           #108                // String =>
      19: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: aload_2
      24: invokevirtual #109                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      27: astore_3
      28: aload_2
      29: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #110                // Method java/lang/Class.getName:()Ljava/lang/String;
      35: astore        4
      37: aload_1
      38: aload         4
      40: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload         4
      46: aload_3
      47: invokevirtual #111                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifne          66
      53: aload_1
      54: ldc           #112                // String :
      56: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_1
      61: aload_3
      62: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: ldc           #113                // String !!!]
      69: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: return

  static java.lang.String identityToString(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #4                  // class java/lang/StringBuilder
       9: dup
      10: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      13: aload_0
      14: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #110                // Method java/lang/Class.getName:()Ljava/lang/String;
      20: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: bipush        64
      25: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokestatic  #114                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      32: invokestatic  #115                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      35: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  static {};
    Code:
       0: new           #116                // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #117                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #57                 // Field threadLocalSimpleDateFormat:Ljava/lang/ThreadLocal;
      10: return
}
