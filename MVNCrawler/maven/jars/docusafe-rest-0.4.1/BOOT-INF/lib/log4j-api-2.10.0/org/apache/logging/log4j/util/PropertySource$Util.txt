Compiled from "PropertySource.java"
public final class org.apache.logging.log4j.util.PropertySource$Util {
  private static final java.lang.String PREFIXES;

  private static final java.util.regex.Pattern PROPERTY_TOKENIZER;

  private static final java.util.Map<java.lang.CharSequence, java.util.List<java.lang.CharSequence>> CACHE;

  public static java.util.List<java.lang.CharSequence> tokenize(java.lang.CharSequence);
    Code:
       0: getstatic     #1                  // Field CACHE:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #2,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: ifeq          25
      12: getstatic     #1                  // Field CACHE:Ljava/util/Map;
      15: aload_0
      16: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #4                  // class java/util/List
      24: areturn
      25: new           #5                  // class java/util/ArrayList
      28: dup
      29: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      32: astore_1
      33: getstatic     #7                  // Field PROPERTY_TOKENIZER:Ljava/util/regex/Pattern;
      36: aload_0
      37: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      40: astore_2
      41: aload_2
      42: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      45: ifeq          66
      48: aload_1
      49: aload_2
      50: iconst_1
      51: invokevirtual #10                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      54: invokevirtual #11                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      57: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          41
      66: getstatic     #1                  // Field CACHE:Ljava/util/Map;
      69: aload_0
      70: aload_1
      71: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_1
      78: areturn

  public static java.lang.CharSequence joinAsCamelCase(java.lang.Iterable<? extends java.lang.CharSequence>);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_1
       9: istore_2
      10: aload_0
      11: invokeinterface #16,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          103
      26: aload_3
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #19                 // class java/lang/CharSequence
      35: astore        4
      37: iload_2
      38: ifeq          51
      41: aload_1
      42: aload         4
      44: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      47: pop
      48: goto          98
      51: aload_1
      52: aload         4
      54: iconst_0
      55: invokeinterface #21,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      60: invokestatic  #22                 // Method java/lang/Character.toUpperCase:(C)C
      63: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      66: pop
      67: aload         4
      69: invokeinterface #24,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      74: iconst_1
      75: if_icmple     98
      78: aload_1
      79: aload         4
      81: iconst_1
      82: aload         4
      84: invokeinterface #24,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      89: invokeinterface #25,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      94: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      97: pop
      98: iconst_0
      99: istore_2
     100: goto          17
     103: aload_1
     104: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: areturn

  private org.apache.logging.log4j.util.PropertySource$Util();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #28                 // String (?i:^log4j2?[-._/]?|^org\\.apache\\.logging\\.log4j\\.)?([A-Z]*[a-z0-9]+|[A-Z0-9]+)[-._/]?
       2: invokestatic  #29                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #7                  // Field PROPERTY_TOKENIZER:Ljava/util/regex/Pattern;
       8: new           #30                 // class java/util/concurrent/ConcurrentHashMap
      11: dup
      12: invokespecial #31                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      15: putstatic     #1                  // Field CACHE:Ljava/util/Map;
      18: return
}
