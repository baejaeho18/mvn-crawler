Compiled from "DefaultDateTypeAdapter.java"
final class com.google.gson.DefaultDateTypeAdapter extends com.google.gson.TypeAdapter<java.util.Date> {
  private static final java.lang.String SIMPLE_NAME;

  private final java.lang.Class<? extends java.util.Date> dateType;

  private final java.text.DateFormat enUsFormat;

  private final java.text.DateFormat localFormat;

  com.google.gson.DefaultDateTypeAdapter(java.lang.Class<? extends java.util.Date>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: iconst_2
       4: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
       7: invokestatic  #3                  // Method java/text/DateFormat.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;
      10: iconst_2
      11: iconst_2
      12: invokestatic  #4                  // Method java/text/DateFormat.getDateTimeInstance:(II)Ljava/text/DateFormat;
      15: invokespecial #5                  // Method "<init>":(Ljava/lang/Class;Ljava/text/DateFormat;Ljava/text/DateFormat;)V
      18: return

  com.google.gson.DefaultDateTypeAdapter(java.lang.Class<? extends java.util.Date>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #6                  // class java/text/SimpleDateFormat
       5: dup
       6: aload_2
       7: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
      10: invokespecial #7                  // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      13: new           #6                  // class java/text/SimpleDateFormat
      16: dup
      17: aload_2
      18: invokespecial #8                  // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      21: invokespecial #5                  // Method "<init>":(Ljava/lang/Class;Ljava/text/DateFormat;Ljava/text/DateFormat;)V
      24: return

  com.google.gson.DefaultDateTypeAdapter(java.lang.Class<? extends java.util.Date>, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
       6: invokestatic  #9                  // Method java/text/DateFormat.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;
       9: iload_2
      10: invokestatic  #10                 // Method java/text/DateFormat.getDateInstance:(I)Ljava/text/DateFormat;
      13: invokespecial #5                  // Method "<init>":(Ljava/lang/Class;Ljava/text/DateFormat;Ljava/text/DateFormat;)V
      16: return

  public com.google.gson.DefaultDateTypeAdapter(int, int);
    Code:
       0: aload_0
       1: ldc           #11                 // class java/util/Date
       3: iload_1
       4: iload_2
       5: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
       8: invokestatic  #3                  // Method java/text/DateFormat.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;
      11: iload_1
      12: iload_2
      13: invokestatic  #4                  // Method java/text/DateFormat.getDateTimeInstance:(II)Ljava/text/DateFormat;
      16: invokespecial #5                  // Method "<init>":(Ljava/lang/Class;Ljava/text/DateFormat;Ljava/text/DateFormat;)V
      19: return

  public com.google.gson.DefaultDateTypeAdapter(java.lang.Class<? extends java.util.Date>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: getstatic     #2                  // Field java/util/Locale.US:Ljava/util/Locale;
       7: invokestatic  #3                  // Method java/text/DateFormat.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;
      10: iload_2
      11: iload_3
      12: invokestatic  #4                  // Method java/text/DateFormat.getDateTimeInstance:(II)Ljava/text/DateFormat;
      15: invokespecial #5                  // Method "<init>":(Ljava/lang/Class;Ljava/text/DateFormat;Ljava/text/DateFormat;)V
      18: return

  com.google.gson.DefaultDateTypeAdapter(java.lang.Class<? extends java.util.Date>, java.text.DateFormat, java.text.DateFormat);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method com/google/gson/TypeAdapter."<init>":()V
       4: aload_1
       5: ldc           #11                 // class java/util/Date
       7: if_acmpeq     79
      10: aload_1
      11: ldc           #13                 // class java/sql/Date
      13: if_acmpeq     79
      16: aload_1
      17: ldc           #14                 // class java/sql/Timestamp
      19: if_acmpeq     79
      22: new           #15                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #16                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #18                 // String Date type must be one of
      35: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #11                 // class java/util/Date
      40: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #21                 // String ,
      45: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #14                 // class java/sql/Timestamp
      50: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: ldc           #22                 // String , or
      55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #13                 // class java/sql/Date
      60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #23                 // String  but was
      65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: aload_1
      81: putfield      #26                 // Field dateType:Ljava/lang/Class;
      84: aload_0
      85: aload_2
      86: putfield      #27                 // Field enUsFormat:Ljava/text/DateFormat;
      89: aload_0
      90: aload_3
      91: putfield      #28                 // Field localFormat:Ljava/text/DateFormat;
      94: return

  public void write(com.google.gson.stream.JsonWriter, java.util.Date) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     10
       4: aload_1
       5: invokevirtual #29                 // Method com/google/gson/stream/JsonWriter.nullValue:()Lcom/google/gson/stream/JsonWriter;
       8: pop
       9: return
      10: aload_0
      11: getfield      #28                 // Field localFormat:Ljava/text/DateFormat;
      14: dup
      15: astore_3
      16: monitorenter
      17: aload_0
      18: getfield      #27                 // Field enUsFormat:Ljava/text/DateFormat;
      21: aload_2
      22: invokevirtual #30                 // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      25: astore        4
      27: aload_1
      28: aload         4
      30: invokevirtual #31                 // Method com/google/gson/stream/JsonWriter.value:(Ljava/lang/String;)Lcom/google/gson/stream/JsonWriter;
      33: pop
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        5
      41: aload_3
      42: monitorexit
      43: aload         5
      45: athrow
      46: return
    Exception table:
       from    to  target type
          17    36    39   any
          39    43    39   any

  public java.util.Date read(com.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method com/google/gson/stream/JsonReader.peek:()Lcom/google/gson/stream/JsonToken;
       4: getstatic     #33                 // Field com/google/gson/stream/JsonToken.NULL:Lcom/google/gson/stream/JsonToken;
       7: if_acmpne     16
      10: aload_1
      11: invokevirtual #34                 // Method com/google/gson/stream/JsonReader.nextNull:()V
      14: aconst_null
      15: areturn
      16: aload_0
      17: aload_1
      18: invokevirtual #35                 // Method com/google/gson/stream/JsonReader.nextString:()Ljava/lang/String;
      21: invokespecial #36                 // Method deserializeToDate:(Ljava/lang/String;)Ljava/util/Date;
      24: astore_2
      25: aload_0
      26: getfield      #26                 // Field dateType:Ljava/lang/Class;
      29: ldc           #11                 // class java/util/Date
      31: if_acmpne     36
      34: aload_2
      35: areturn
      36: aload_0
      37: getfield      #26                 // Field dateType:Ljava/lang/Class;
      40: ldc           #14                 // class java/sql/Timestamp
      42: if_acmpne     57
      45: new           #14                 // class java/sql/Timestamp
      48: dup
      49: aload_2
      50: invokevirtual #37                 // Method java/util/Date.getTime:()J
      53: invokespecial #38                 // Method java/sql/Timestamp."<init>":(J)V
      56: areturn
      57: aload_0
      58: getfield      #26                 // Field dateType:Ljava/lang/Class;
      61: ldc           #13                 // class java/sql/Date
      63: if_acmpne     78
      66: new           #13                 // class java/sql/Date
      69: dup
      70: aload_2
      71: invokevirtual #37                 // Method java/util/Date.getTime:()J
      74: invokespecial #39                 // Method java/sql/Date."<init>":(J)V
      77: areturn
      78: new           #40                 // class java/lang/AssertionError
      81: dup
      82: invokespecial #41                 // Method java/lang/AssertionError."<init>":()V
      85: athrow

  private java.util.Date deserializeToDate(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field localFormat:Ljava/text/DateFormat;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #28                 // Field localFormat:Ljava/text/DateFormat;
      11: aload_1
      12: invokevirtual #42                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      15: aload_2
      16: monitorexit
      17: areturn
      18: astore_3
      19: aload_0
      20: getfield      #27                 // Field enUsFormat:Ljava/text/DateFormat;
      23: aload_1
      24: invokevirtual #42                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      27: aload_2
      28: monitorexit
      29: areturn
      30: astore_3
      31: aload_1
      32: new           #44                 // class java/text/ParsePosition
      35: dup
      36: iconst_0
      37: invokespecial #45                 // Method java/text/ParsePosition."<init>":(I)V
      40: invokestatic  #46                 // Method com/google/gson/internal/bind/util/ISO8601Utils.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
      43: aload_2
      44: monitorexit
      45: areturn
      46: astore_3
      47: new           #47                 // class com/google/gson/JsonSyntaxException
      50: dup
      51: aload_1
      52: aload_3
      53: invokespecial #48                 // Method com/google/gson/JsonSyntaxException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: athrow
      57: astore        4
      59: aload_2
      60: monitorexit
      61: aload         4
      63: athrow
    Exception table:
       from    to  target type
           7    15    18   Class java/text/ParseException
          19    27    30   Class java/text/ParseException
          31    43    46   Class java/text/ParseException
           7    17    57   any
          18    29    57   any
          30    45    57   any
          46    61    57   any

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #50                 // String DefaultDateTypeAdapter
      11: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: bipush        40
      18: invokevirtual #51                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #28                 // Field localFormat:Ljava/text/DateFormat;
      25: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #53                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      31: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: bipush        41
      36: invokevirtual #51                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  public java.lang.Object read(com.google.gson.stream.JsonReader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method read:(Lcom/google/gson/stream/JsonReader;)Ljava/util/Date;
       5: areturn

  public void write(com.google.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class java/util/Date
       6: invokevirtual #55                 // Method write:(Lcom/google/gson/stream/JsonWriter;Ljava/util/Date;)V
       9: return
}
