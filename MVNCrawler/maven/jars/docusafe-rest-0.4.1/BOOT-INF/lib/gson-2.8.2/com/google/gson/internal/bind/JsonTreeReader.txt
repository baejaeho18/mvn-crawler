Compiled from "JsonTreeReader.java"
public final class com.google.gson.internal.bind.JsonTreeReader extends com.google.gson.stream.JsonReader {
  private static final java.io.Reader UNREADABLE_READER;

  private static final java.lang.Object SENTINEL_CLOSED;

  private java.lang.Object[] stack;

  private int stackSize;

  private java.lang.String[] pathNames;

  private int[] pathIndices;

  public com.google.gson.internal.bind.JsonTreeReader(com.google.gson.JsonElement);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field UNREADABLE_READER:Ljava/io/Reader;
       4: invokespecial #2                  // Method com/google/gson/stream/JsonReader."<init>":(Ljava/io/Reader;)V
       7: aload_0
       8: bipush        32
      10: anewarray     #3                  // class java/lang/Object
      13: putfield      #4                  // Field stack:[Ljava/lang/Object;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field stackSize:I
      21: aload_0
      22: bipush        32
      24: anewarray     #6                  // class java/lang/String
      27: putfield      #7                  // Field pathNames:[Ljava/lang/String;
      30: aload_0
      31: bipush        32
      33: newarray       int
      35: putfield      #8                  // Field pathIndices:[I
      38: aload_0
      39: aload_1
      40: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      43: return

  public void beginArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #10                 // Field com/google/gson/stream/JsonToken.BEGIN_ARRAY:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      11: checkcast     #13                 // class com/google/gson/JsonArray
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #14                 // Method com/google/gson/JsonArray.iterator:()Ljava/util/Iterator;
      20: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #8                  // Field pathIndices:[I
      27: aload_0
      28: getfield      #5                  // Field stackSize:I
      31: iconst_1
      32: isub
      33: iconst_0
      34: iastore
      35: return

  public void endArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #15                 // Field com/google/gson/stream/JsonToken.END_ARRAY:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      11: pop
      12: aload_0
      13: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #5                  // Field stackSize:I
      21: ifle          39
      24: aload_0
      25: getfield      #8                  // Field pathIndices:[I
      28: aload_0
      29: getfield      #5                  // Field stackSize:I
      32: iconst_1
      33: isub
      34: dup2
      35: iaload
      36: iconst_1
      37: iadd
      38: iastore
      39: return

  public void beginObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #17                 // Field com/google/gson/stream/JsonToken.BEGIN_OBJECT:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      11: checkcast     #18                 // class com/google/gson/JsonObject
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #19                 // Method com/google/gson/JsonObject.entrySet:()Ljava/util/Set;
      20: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      28: return

  public void endObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #21                 // Field com/google/gson/stream/JsonToken.END_OBJECT:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      11: pop
      12: aload_0
      13: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      16: pop
      17: aload_0
      18: getfield      #5                  // Field stackSize:I
      21: ifle          39
      24: aload_0
      25: getfield      #8                  // Field pathIndices:[I
      28: aload_0
      29: getfield      #5                  // Field stackSize:I
      32: iconst_1
      33: isub
      34: dup2
      35: iaload
      36: iconst_1
      37: iadd
      38: iastore
      39: return

  public boolean hasNext() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #21                 // Field com/google/gson/stream/JsonToken.END_OBJECT:Lcom/google/gson/stream/JsonToken;
       9: if_acmpeq     23
      12: aload_1
      13: getstatic     #15                 // Field com/google/gson/stream/JsonToken.END_ARRAY:Lcom/google/gson/stream/JsonToken;
      16: if_acmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public com.google.gson.stream.JsonToken peek() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field stackSize:I
       4: ifne          11
       7: getstatic     #23                 // Field com/google/gson/stream/JsonToken.END_DOCUMENT:Lcom/google/gson/stream/JsonToken;
      10: areturn
      11: aload_0
      12: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      15: astore_1
      16: aload_1
      17: instanceof    #24                 // class java/util/Iterator
      20: ifeq          89
      23: aload_0
      24: getfield      #4                  // Field stack:[Ljava/lang/Object;
      27: aload_0
      28: getfield      #5                  // Field stackSize:I
      31: iconst_2
      32: isub
      33: aaload
      34: instanceof    #18                 // class com/google/gson/JsonObject
      37: istore_2
      38: aload_1
      39: checkcast     #24                 // class java/util/Iterator
      42: astore_3
      43: aload_3
      44: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          75
      52: iload_2
      53: ifeq          60
      56: getstatic     #26                 // Field com/google/gson/stream/JsonToken.NAME:Lcom/google/gson/stream/JsonToken;
      59: areturn
      60: aload_0
      61: aload_3
      62: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      70: aload_0
      71: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      74: areturn
      75: iload_2
      76: ifeq          85
      79: getstatic     #21                 // Field com/google/gson/stream/JsonToken.END_OBJECT:Lcom/google/gson/stream/JsonToken;
      82: goto          88
      85: getstatic     #15                 // Field com/google/gson/stream/JsonToken.END_ARRAY:Lcom/google/gson/stream/JsonToken;
      88: areturn
      89: aload_1
      90: instanceof    #18                 // class com/google/gson/JsonObject
      93: ifeq          100
      96: getstatic     #17                 // Field com/google/gson/stream/JsonToken.BEGIN_OBJECT:Lcom/google/gson/stream/JsonToken;
      99: areturn
     100: aload_1
     101: instanceof    #13                 // class com/google/gson/JsonArray
     104: ifeq          111
     107: getstatic     #10                 // Field com/google/gson/stream/JsonToken.BEGIN_ARRAY:Lcom/google/gson/stream/JsonToken;
     110: areturn
     111: aload_1
     112: instanceof    #28                 // class com/google/gson/JsonPrimitive
     115: ifeq          164
     118: aload_1
     119: checkcast     #28                 // class com/google/gson/JsonPrimitive
     122: astore_2
     123: aload_2
     124: invokevirtual #29                 // Method com/google/gson/JsonPrimitive.isString:()Z
     127: ifeq          134
     130: getstatic     #30                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
     133: areturn
     134: aload_2
     135: invokevirtual #31                 // Method com/google/gson/JsonPrimitive.isBoolean:()Z
     138: ifeq          145
     141: getstatic     #32                 // Field com/google/gson/stream/JsonToken.BOOLEAN:Lcom/google/gson/stream/JsonToken;
     144: areturn
     145: aload_2
     146: invokevirtual #33                 // Method com/google/gson/JsonPrimitive.isNumber:()Z
     149: ifeq          156
     152: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
     155: areturn
     156: new           #35                 // class java/lang/AssertionError
     159: dup
     160: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
     163: athrow
     164: aload_1
     165: instanceof    #37                 // class com/google/gson/JsonNull
     168: ifeq          175
     171: getstatic     #38                 // Field com/google/gson/stream/JsonToken.NULL:Lcom/google/gson/stream/JsonToken;
     174: areturn
     175: aload_1
     176: getstatic     #39                 // Field SENTINEL_CLOSED:Ljava/lang/Object;
     179: if_acmpne     192
     182: new           #40                 // class java/lang/IllegalStateException
     185: dup
     186: ldc           #41                 // String JsonReader is closed
     188: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     191: athrow
     192: new           #35                 // class java/lang/AssertionError
     195: dup
     196: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
     199: athrow

  private java.lang.Object peekStack();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:[Ljava/lang/Object;
       4: aload_0
       5: getfield      #5                  // Field stackSize:I
       8: iconst_1
       9: isub
      10: aaload
      11: areturn

  private java.lang.Object popStack();
    Code:
       0: aload_0
       1: getfield      #4                  // Field stack:[Ljava/lang/Object;
       4: aload_0
       5: dup
       6: getfield      #5                  // Field stackSize:I
       9: iconst_1
      10: isub
      11: dup_x1
      12: putfield      #5                  // Field stackSize:I
      15: aaload
      16: astore_1
      17: aload_0
      18: getfield      #4                  // Field stack:[Ljava/lang/Object;
      21: aload_0
      22: getfield      #5                  // Field stackSize:I
      25: aconst_null
      26: aastore
      27: aload_1
      28: areturn

  private void expect(com.google.gson.stream.JsonToken) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: aload_1
       5: if_acmpeq     54
       8: new           #40                 // class java/lang/IllegalStateException
      11: dup
      12: new           #43                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #45                 // String Expected
      21: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #48                 // String  but was
      30: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
      37: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokespecial #49                 // Method locationString:()Ljava/lang/String;
      44: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: return

  public java.lang.String nextName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #26                 // Field com/google/gson/stream/JsonToken.NAME:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      11: checkcast     #24                 // class java/util/Iterator
      14: astore_1
      15: aload_1
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #51                 // class java/util/Map$Entry
      24: astore_2
      25: aload_2
      26: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      31: checkcast     #6                  // class java/lang/String
      34: astore_3
      35: aload_0
      36: getfield      #7                  // Field pathNames:[Ljava/lang/String;
      39: aload_0
      40: getfield      #5                  // Field stackSize:I
      43: iconst_1
      44: isub
      45: aload_3
      46: aastore
      47: aload_0
      48: aload_2
      49: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      54: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      57: aload_3
      58: areturn

  public java.lang.String nextString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #30                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
       9: if_acmpeq     64
      12: aload_1
      13: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
      16: if_acmpeq     64
      19: new           #40                 // class java/lang/IllegalStateException
      22: dup
      23: new           #43                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #45                 // String Expected
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: getstatic     #30                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
      38: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #48                 // String  but was
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokespecial #49                 // Method locationString:()Ljava/lang/String;
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      68: checkcast     #28                 // class com/google/gson/JsonPrimitive
      71: invokevirtual #54                 // Method com/google/gson/JsonPrimitive.getAsString:()Ljava/lang/String;
      74: astore_2
      75: aload_0
      76: getfield      #5                  // Field stackSize:I
      79: ifle          97
      82: aload_0
      83: getfield      #8                  // Field pathIndices:[I
      86: aload_0
      87: getfield      #5                  // Field stackSize:I
      90: iconst_1
      91: isub
      92: dup2
      93: iaload
      94: iconst_1
      95: iadd
      96: iastore
      97: aload_2
      98: areturn

  public boolean nextBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #32                 // Field com/google/gson/stream/JsonToken.BOOLEAN:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      11: checkcast     #28                 // class com/google/gson/JsonPrimitive
      14: invokevirtual #55                 // Method com/google/gson/JsonPrimitive.getAsBoolean:()Z
      17: istore_1
      18: aload_0
      19: getfield      #5                  // Field stackSize:I
      22: ifle          40
      25: aload_0
      26: getfield      #8                  // Field pathIndices:[I
      29: aload_0
      30: getfield      #5                  // Field stackSize:I
      33: iconst_1
      34: isub
      35: dup2
      36: iaload
      37: iconst_1
      38: iadd
      39: iastore
      40: iload_1
      41: ireturn

  public void nextNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #38                 // Field com/google/gson/stream/JsonToken.NULL:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #5                  // Field stackSize:I
      16: ifle          34
      19: aload_0
      20: getfield      #8                  // Field pathIndices:[I
      23: aload_0
      24: getfield      #5                  // Field stackSize:I
      27: iconst_1
      28: isub
      29: dup2
      30: iaload
      31: iconst_1
      32: iadd
      33: iastore
      34: return

  public double nextDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
       9: if_acmpeq     64
      12: aload_1
      13: getstatic     #30                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
      16: if_acmpeq     64
      19: new           #40                 // class java/lang/IllegalStateException
      22: dup
      23: new           #43                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #45                 // String Expected
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
      38: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #48                 // String  but was
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokespecial #49                 // Method locationString:()Ljava/lang/String;
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      68: checkcast     #28                 // class com/google/gson/JsonPrimitive
      71: invokevirtual #56                 // Method com/google/gson/JsonPrimitive.getAsDouble:()D
      74: dstore_2
      75: aload_0
      76: invokevirtual #57                 // Method isLenient:()Z
      79: ifne          123
      82: dload_2
      83: invokestatic  #58                 // Method java/lang/Double.isNaN:(D)Z
      86: ifne          96
      89: dload_2
      90: invokestatic  #59                 // Method java/lang/Double.isInfinite:(D)Z
      93: ifeq          123
      96: new           #60                 // class java/lang/NumberFormatException
      99: dup
     100: new           #43                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     107: ldc           #61                 // String JSON forbids NaN and infinities:
     109: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: dload_2
     113: invokevirtual #62                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     116: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #63                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: aload_0
     124: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
     127: pop
     128: aload_0
     129: getfield      #5                  // Field stackSize:I
     132: ifle          150
     135: aload_0
     136: getfield      #8                  // Field pathIndices:[I
     139: aload_0
     140: getfield      #5                  // Field stackSize:I
     143: iconst_1
     144: isub
     145: dup2
     146: iaload
     147: iconst_1
     148: iadd
     149: iastore
     150: dload_2
     151: dreturn

  public long nextLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
       9: if_acmpeq     64
      12: aload_1
      13: getstatic     #30                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
      16: if_acmpeq     64
      19: new           #40                 // class java/lang/IllegalStateException
      22: dup
      23: new           #43                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #45                 // String Expected
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
      38: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #48                 // String  but was
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokespecial #49                 // Method locationString:()Ljava/lang/String;
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      68: checkcast     #28                 // class com/google/gson/JsonPrimitive
      71: invokevirtual #64                 // Method com/google/gson/JsonPrimitive.getAsLong:()J
      74: lstore_2
      75: aload_0
      76: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      79: pop
      80: aload_0
      81: getfield      #5                  // Field stackSize:I
      84: ifle          102
      87: aload_0
      88: getfield      #8                  // Field pathIndices:[I
      91: aload_0
      92: getfield      #5                  // Field stackSize:I
      95: iconst_1
      96: isub
      97: dup2
      98: iaload
      99: iconst_1
     100: iadd
     101: iastore
     102: lload_2
     103: lreturn

  public int nextInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
       9: if_acmpeq     64
      12: aload_1
      13: getstatic     #30                 // Field com/google/gson/stream/JsonToken.STRING:Lcom/google/gson/stream/JsonToken;
      16: if_acmpeq     64
      19: new           #40                 // class java/lang/IllegalStateException
      22: dup
      23: new           #43                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #45                 // String Expected
      32: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: getstatic     #34                 // Field com/google/gson/stream/JsonToken.NUMBER:Lcom/google/gson/stream/JsonToken;
      38: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #48                 // String  but was
      43: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokespecial #49                 // Method locationString:()Ljava/lang/String;
      54: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      68: checkcast     #28                 // class com/google/gson/JsonPrimitive
      71: invokevirtual #65                 // Method com/google/gson/JsonPrimitive.getAsInt:()I
      74: istore_2
      75: aload_0
      76: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      79: pop
      80: aload_0
      81: getfield      #5                  // Field stackSize:I
      84: ifle          102
      87: aload_0
      88: getfield      #8                  // Field pathIndices:[I
      91: aload_0
      92: getfield      #5                  // Field stackSize:I
      95: iconst_1
      96: isub
      97: dup2
      98: iaload
      99: iconst_1
     100: iadd
     101: iastore
     102: iload_2
     103: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #3                  // class java/lang/Object
       5: dup
       6: iconst_0
       7: getstatic     #39                 // Field SENTINEL_CLOSED:Ljava/lang/Object;
      10: aastore
      11: putfield      #4                  // Field stack:[Ljava/lang/Object;
      14: aload_0
      15: iconst_1
      16: putfield      #5                  // Field stackSize:I
      19: return

  public void skipValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method peek:()Lcom/google/gson/stream/JsonToken;
       4: getstatic     #26                 // Field com/google/gson/stream/JsonToken.NAME:Lcom/google/gson/stream/JsonToken;
       7: if_acmpne     31
      10: aload_0
      11: invokevirtual #66                 // Method nextName:()Ljava/lang/String;
      14: pop
      15: aload_0
      16: getfield      #7                  // Field pathNames:[Ljava/lang/String;
      19: aload_0
      20: getfield      #5                  // Field stackSize:I
      23: iconst_2
      24: isub
      25: ldc           #67                 // String null
      27: aastore
      28: goto          56
      31: aload_0
      32: invokespecial #16                 // Method popStack:()Ljava/lang/Object;
      35: pop
      36: aload_0
      37: getfield      #5                  // Field stackSize:I
      40: ifle          56
      43: aload_0
      44: getfield      #7                  // Field pathNames:[Ljava/lang/String;
      47: aload_0
      48: getfield      #5                  // Field stackSize:I
      51: iconst_1
      52: isub
      53: ldc           #67                 // String null
      55: aastore
      56: aload_0
      57: getfield      #5                  // Field stackSize:I
      60: ifle          78
      63: aload_0
      64: getfield      #8                  // Field pathIndices:[I
      67: aload_0
      68: getfield      #5                  // Field stackSize:I
      71: iconst_1
      72: isub
      73: dup2
      74: iaload
      75: iconst_1
      76: iadd
      77: iastore
      78: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #69                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  public void promoteNameToValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #26                 // Field com/google/gson/stream/JsonToken.NAME:Lcom/google/gson/stream/JsonToken;
       4: invokespecial #11                 // Method expect:(Lcom/google/gson/stream/JsonToken;)V
       7: aload_0
       8: invokespecial #12                 // Method peekStack:()Ljava/lang/Object;
      11: checkcast     #24                 // class java/util/Iterator
      14: astore_1
      15: aload_1
      16: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #51                 // class java/util/Map$Entry
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      32: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      35: aload_0
      36: new           #28                 // class com/google/gson/JsonPrimitive
      39: dup
      40: aload_2
      41: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: checkcast     #6                  // class java/lang/String
      49: invokespecial #70                 // Method com/google/gson/JsonPrimitive."<init>":(Ljava/lang/String;)V
      52: invokespecial #9                  // Method push:(Ljava/lang/Object;)V
      55: return

  private void push(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field stackSize:I
       4: aload_0
       5: getfield      #4                  // Field stack:[Ljava/lang/Object;
       8: arraylength
       9: if_icmpne     101
      12: aload_0
      13: getfield      #5                  // Field stackSize:I
      16: iconst_2
      17: imul
      18: anewarray     #3                  // class java/lang/Object
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field stackSize:I
      26: iconst_2
      27: imul
      28: newarray       int
      30: astore_3
      31: aload_0
      32: getfield      #5                  // Field stackSize:I
      35: iconst_2
      36: imul
      37: anewarray     #6                  // class java/lang/String
      40: astore        4
      42: aload_0
      43: getfield      #4                  // Field stack:[Ljava/lang/Object;
      46: iconst_0
      47: aload_2
      48: iconst_0
      49: aload_0
      50: getfield      #5                  // Field stackSize:I
      53: invokestatic  #71                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_0
      57: getfield      #8                  // Field pathIndices:[I
      60: iconst_0
      61: aload_3
      62: iconst_0
      63: aload_0
      64: getfield      #5                  // Field stackSize:I
      67: invokestatic  #71                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      70: aload_0
      71: getfield      #7                  // Field pathNames:[Ljava/lang/String;
      74: iconst_0
      75: aload         4
      77: iconst_0
      78: aload_0
      79: getfield      #5                  // Field stackSize:I
      82: invokestatic  #71                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      85: aload_0
      86: aload_2
      87: putfield      #4                  // Field stack:[Ljava/lang/Object;
      90: aload_0
      91: aload_3
      92: putfield      #8                  // Field pathIndices:[I
      95: aload_0
      96: aload         4
      98: putfield      #7                  // Field pathNames:[Ljava/lang/String;
     101: aload_0
     102: getfield      #4                  // Field stack:[Ljava/lang/Object;
     105: aload_0
     106: dup
     107: getfield      #5                  // Field stackSize:I
     110: dup_x1
     111: iconst_1
     112: iadd
     113: putfield      #5                  // Field stackSize:I
     116: aload_1
     117: aastore
     118: return

  public java.lang.String getPath();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: bipush        36
       9: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: astore_1
      13: iconst_0
      14: istore_2
      15: iload_2
      16: aload_0
      17: getfield      #5                  // Field stackSize:I
      20: if_icmpge     134
      23: aload_0
      24: getfield      #4                  // Field stack:[Ljava/lang/Object;
      27: iload_2
      28: aaload
      29: instanceof    #13                 // class com/google/gson/JsonArray
      32: ifeq          74
      35: aload_0
      36: getfield      #4                  // Field stack:[Ljava/lang/Object;
      39: iinc          2, 1
      42: iload_2
      43: aaload
      44: instanceof    #24                 // class java/util/Iterator
      47: ifeq          128
      50: aload_1
      51: bipush        91
      53: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #8                  // Field pathIndices:[I
      60: iload_2
      61: iaload
      62: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      65: bipush        93
      67: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: pop
      71: goto          128
      74: aload_0
      75: getfield      #4                  // Field stack:[Ljava/lang/Object;
      78: iload_2
      79: aaload
      80: instanceof    #18                 // class com/google/gson/JsonObject
      83: ifeq          128
      86: aload_0
      87: getfield      #4                  // Field stack:[Ljava/lang/Object;
      90: iinc          2, 1
      93: iload_2
      94: aaload
      95: instanceof    #24                 // class java/util/Iterator
      98: ifeq          128
     101: aload_1
     102: bipush        46
     104: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     107: pop
     108: aload_0
     109: getfield      #7                  // Field pathNames:[Ljava/lang/String;
     112: iload_2
     113: aaload
     114: ifnull        128
     117: aload_1
     118: aload_0
     119: getfield      #7                  // Field pathNames:[Ljava/lang/String;
     122: iload_2
     123: aaload
     124: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: pop
     128: iinc          2, 1
     131: goto          15
     134: aload_1
     135: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: areturn

  private java.lang.String locationString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #74                 // String  at path
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #75                 // Method getPath:()Ljava/lang/String;
      16: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  static {};
    Code:
       0: new           #76                 // class com/google/gson/internal/bind/JsonTreeReader$1
       3: dup
       4: invokespecial #77                 // Method com/google/gson/internal/bind/JsonTreeReader$1."<init>":()V
       7: putstatic     #1                  // Field UNREADABLE_READER:Ljava/io/Reader;
      10: new           #3                  // class java/lang/Object
      13: dup
      14: invokespecial #78                 // Method java/lang/Object."<init>":()V
      17: putstatic     #39                 // Field SENTINEL_CLOSED:Ljava/lang/Object;
      20: return
}
