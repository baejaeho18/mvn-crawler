Compiled from "FieldNamingPolicy.java"
public abstract class com.google.gson.FieldNamingPolicy extends java.lang.Enum<com.google.gson.FieldNamingPolicy> implements com.google.gson.FieldNamingStrategy {
  public static final com.google.gson.FieldNamingPolicy IDENTITY;

  public static final com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE;

  public static final com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES;

  public static final com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES;

  public static final com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES;

  private static final com.google.gson.FieldNamingPolicy[] $VALUES;

  public static com.google.gson.FieldNamingPolicy[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lcom/google/gson/FieldNamingPolicy;
       3: invokevirtual #3                  // Method "[Lcom/google/gson/FieldNamingPolicy;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lcom/google/gson/FieldNamingPolicy;"
       9: areturn

  public static com.google.gson.FieldNamingPolicy valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class com/google/gson/FieldNamingPolicy
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class com/google/gson/FieldNamingPolicy
       9: areturn

  private com.google.gson.FieldNamingPolicy();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static java.lang.String separateCamelCase(java.lang.String, java.lang.String);
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_0
      11: invokevirtual #10                 // Method java/lang/String.length:()I
      14: istore        4
      16: iload_3
      17: iload         4
      19: if_icmpge     63
      22: aload_0
      23: iload_3
      24: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      27: istore        5
      29: iload         5
      31: invokestatic  #12                 // Method java/lang/Character.isUpperCase:(C)Z
      34: ifeq          50
      37: aload_2
      38: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      41: ifeq          50
      44: aload_2
      45: aload_1
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: aload_2
      51: iload         5
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: pop
      57: iinc          3, 1
      60: goto          16
      63: aload_2
      64: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  static java.lang.String upperCaseFirstLetter(java.lang.String);
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: iload_2
      12: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      15: istore_3
      16: aload_0
      17: invokevirtual #10                 // Method java/lang/String.length:()I
      20: istore        4
      22: iload_2
      23: iload         4
      25: iconst_1
      26: isub
      27: if_icmpge     58
      30: iload_3
      31: invokestatic  #17                 // Method java/lang/Character.isLetter:(C)Z
      34: ifeq          40
      37: goto          58
      40: aload_1
      41: iload_3
      42: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: pop
      46: aload_0
      47: iinc          2, 1
      50: iload_2
      51: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      54: istore_3
      55: goto          22
      58: iload_3
      59: invokestatic  #12                 // Method java/lang/Character.isUpperCase:(C)Z
      62: ifne          89
      65: iload_3
      66: invokestatic  #18                 // Method java/lang/Character.toUpperCase:(C)C
      69: aload_0
      70: iinc          2, 1
      73: iload_2
      74: invokestatic  #19                 // Method modifyString:(CLjava/lang/String;I)Ljava/lang/String;
      77: astore        5
      79: aload_1
      80: aload         5
      82: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: areturn
      89: aload_0
      90: areturn

  private static java.lang.String modifyString(char, java.lang.String, int);
    Code:
       0: iload_2
       1: aload_1
       2: invokevirtual #10                 // Method java/lang/String.length:()I
       5: if_icmpge     33
       8: new           #8                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      15: iload_0
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_1
      20: iload_2
      21: invokevirtual #20                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: goto          37
      33: iload_0
      34: invokestatic  #21                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      37: areturn

  com.google.gson.FieldNamingPolicy(java.lang.String, int, com.google.gson.FieldNamingPolicy$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #22                 // class com/google/gson/FieldNamingPolicy$1
       3: dup
       4: ldc           #23                 // String IDENTITY
       6: iconst_0
       7: invokespecial #24                 // Method com/google/gson/FieldNamingPolicy$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #25                 // Field IDENTITY:Lcom/google/gson/FieldNamingPolicy;
      13: new           #26                 // class com/google/gson/FieldNamingPolicy$2
      16: dup
      17: ldc           #27                 // String UPPER_CAMEL_CASE
      19: iconst_1
      20: invokespecial #28                 // Method com/google/gson/FieldNamingPolicy$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #29                 // Field UPPER_CAMEL_CASE:Lcom/google/gson/FieldNamingPolicy;
      26: new           #30                 // class com/google/gson/FieldNamingPolicy$3
      29: dup
      30: ldc           #31                 // String UPPER_CAMEL_CASE_WITH_SPACES
      32: iconst_2
      33: invokespecial #32                 // Method com/google/gson/FieldNamingPolicy$3."<init>":(Ljava/lang/String;I)V
      36: putstatic     #33                 // Field UPPER_CAMEL_CASE_WITH_SPACES:Lcom/google/gson/FieldNamingPolicy;
      39: new           #34                 // class com/google/gson/FieldNamingPolicy$4
      42: dup
      43: ldc           #35                 // String LOWER_CASE_WITH_UNDERSCORES
      45: iconst_3
      46: invokespecial #36                 // Method com/google/gson/FieldNamingPolicy$4."<init>":(Ljava/lang/String;I)V
      49: putstatic     #37                 // Field LOWER_CASE_WITH_UNDERSCORES:Lcom/google/gson/FieldNamingPolicy;
      52: new           #38                 // class com/google/gson/FieldNamingPolicy$5
      55: dup
      56: ldc           #39                 // String LOWER_CASE_WITH_DASHES
      58: iconst_4
      59: invokespecial #40                 // Method com/google/gson/FieldNamingPolicy$5."<init>":(Ljava/lang/String;I)V
      62: putstatic     #41                 // Field LOWER_CASE_WITH_DASHES:Lcom/google/gson/FieldNamingPolicy;
      65: iconst_5
      66: anewarray     #5                  // class com/google/gson/FieldNamingPolicy
      69: dup
      70: iconst_0
      71: getstatic     #25                 // Field IDENTITY:Lcom/google/gson/FieldNamingPolicy;
      74: aastore
      75: dup
      76: iconst_1
      77: getstatic     #29                 // Field UPPER_CAMEL_CASE:Lcom/google/gson/FieldNamingPolicy;
      80: aastore
      81: dup
      82: iconst_2
      83: getstatic     #33                 // Field UPPER_CAMEL_CASE_WITH_SPACES:Lcom/google/gson/FieldNamingPolicy;
      86: aastore
      87: dup
      88: iconst_3
      89: getstatic     #37                 // Field LOWER_CASE_WITH_UNDERSCORES:Lcom/google/gson/FieldNamingPolicy;
      92: aastore
      93: dup
      94: iconst_4
      95: getstatic     #41                 // Field LOWER_CASE_WITH_DASHES:Lcom/google/gson/FieldNamingPolicy;
      98: aastore
      99: putstatic     #2                  // Field $VALUES:[Lcom/google/gson/FieldNamingPolicy;
     102: return
}
