Compiled from "AbstractJackson2Decoder.java"
public abstract class org.springframework.http.codec.json.AbstractJackson2Decoder extends org.springframework.http.codec.json.Jackson2CodecSupport implements org.springframework.http.codec.HttpMessageDecoder<java.lang.Object> {
  protected org.springframework.http.codec.json.AbstractJackson2Decoder(com.fasterxml.jackson.databind.ObjectMapper, org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/http/codec/json/Jackson2CodecSupport."<init>":(Lcom/fasterxml/jackson/databind/ObjectMapper;[Lorg/springframework/util/MimeType;)V
       6: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       4: invokevirtual #3                  // Method com/fasterxml/jackson/databind/ObjectMapper.getTypeFactory:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
       7: aload_1
       8: invokevirtual #4                  // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
      11: invokevirtual #5                  // Method com/fasterxml/jackson/databind/type/TypeFactory.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      14: astore_3
      15: ldc           #6                  // class java/lang/CharSequence
      17: aload_1
      18: ldc           #7                  // class java/lang/Object
      20: invokevirtual #8                  // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      23: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      26: ifne          52
      29: aload_0
      30: invokevirtual #2                  // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      33: aload_3
      34: invokevirtual #10                 // Method com/fasterxml/jackson/databind/ObjectMapper.canDeserialize:(Lcom/fasterxml/jackson/databind/JavaType;)Z
      37: ifeq          52
      40: aload_0
      41: aload_2
      42: invokevirtual #11                 // Method supportsMimeType:(Lorg/springframework/util/MimeType;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public reactor.core.publisher.Flux<java.lang.Object> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #12                 // Method tokenize:(Lorg/reactivestreams/Publisher;Z)Lreactor/core/publisher/Flux;
       6: astore        5
       8: aload_0
       9: aload         5
      11: aload_2
      12: aload_3
      13: aload         4
      15: invokespecial #13                 // Method decodeInternal:(Lreactor/core/publisher/Flux;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      18: areturn

  public reactor.core.publisher.Mono<java.lang.Object> decodeToMono(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #12                 // Method tokenize:(Lorg/reactivestreams/Publisher;Z)Lreactor/core/publisher/Flux;
       6: astore        5
       8: aload_0
       9: aload         5
      11: aload_2
      12: aload_3
      13: aload         4
      15: invokespecial #13                 // Method decodeInternal:(Lreactor/core/publisher/Flux;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      18: invokevirtual #14                 // Method reactor/core/publisher/Flux.singleOrEmpty:()Lreactor/core/publisher/Mono;
      21: areturn

  private reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> tokenize(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, boolean);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: astore_3
       5: aload_0
       6: invokevirtual #2                  // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       9: invokevirtual #16                 // Method com/fasterxml/jackson/databind/ObjectMapper.getFactory:()Lcom/fasterxml/jackson/core/JsonFactory;
      12: astore        4
      14: aload_3
      15: aload         4
      17: iload_2
      18: invokestatic  #17                 // Method org/springframework/http/codec/json/Jackson2Tokenizer.tokenize:(Lreactor/core/publisher/Flux;Lcom/fasterxml/jackson/core/JsonFactory;Z)Lreactor/core/publisher/Flux;
      21: areturn

  private reactor.core.publisher.Flux<java.lang.Object> decodeInternal(reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #18                 // String \'tokens\' must not be null
       3: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #20                 // String \'elementType\' must not be null
       9: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: invokevirtual #21                 // Method getParameter:(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/MethodParameter;
      17: astore        5
      19: aload         5
      21: ifnull        32
      24: aload         5
      26: invokevirtual #22                 // Method org/springframework/core/MethodParameter.getContainingClass:()Ljava/lang/Class;
      29: goto          33
      32: aconst_null
      33: astore        6
      35: aload_0
      36: aload_2
      37: invokevirtual #4                  // Method org/springframework/core/ResolvableType.getType:()Ljava/lang/reflect/Type;
      40: aload         6
      42: invokevirtual #23                 // Method getJavaType:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JavaType;
      45: astore        7
      47: aload         4
      49: ifnull        68
      52: aload         4
      54: getstatic     #24                 // Field org/springframework/http/codec/json/Jackson2CodecSupport.JSON_VIEW_HINT:Ljava/lang/String;
      57: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #26                 // class java/lang/Class
      65: goto          69
      68: aconst_null
      69: astore        8
      71: aload         8
      73: ifnull        93
      76: aload_0
      77: invokevirtual #2                  // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      80: aload         8
      82: invokevirtual #27                 // Method com/fasterxml/jackson/databind/ObjectMapper.readerWithView:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/ObjectReader;
      85: aload         7
      87: invokevirtual #28                 // Method com/fasterxml/jackson/databind/ObjectReader.forType:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/ObjectReader;
      90: goto          102
      93: aload_0
      94: invokevirtual #2                  // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
      97: aload         7
      99: invokevirtual #29                 // Method com/fasterxml/jackson/databind/ObjectMapper.readerFor:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/ObjectReader;
     102: astore        9
     104: aload_1
     105: aload_0
     106: aload         9
     108: invokedynamic #30,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/json/AbstractJackson2Decoder;Lcom/fasterxml/jackson/databind/ObjectReader;)Ljava/util/function/Function;
     113: invokevirtual #31                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     116: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getDecodeHints(org.springframework.core.ResolvableType, org.springframework.core.ResolvableType, org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method getHints:(Lorg/springframework/core/ResolvableType;)Ljava/util/Map;
       5: areturn

  public java.util.List<org.springframework.util.MimeType> getDecodableMimeTypes();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method getMimeTypes:()Ljava/util/List;
       4: areturn

  protected <A extends java.lang.annotation.Annotation> A getAnnotation(org.springframework.core.MethodParameter, java.lang.Class<A>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #34                 // Method org/springframework/core/MethodParameter.getParameterAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       5: areturn

  private java.lang.Object lambda$decodeInternal$0(com.fasterxml.jackson.databind.ObjectReader, com.fasterxml.jackson.databind.util.TokenBuffer);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #2                  // Method getObjectMapper:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       6: invokevirtual #35                 // Method com/fasterxml/jackson/databind/util/TokenBuffer.asParser:(Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonParser;
       9: invokevirtual #36                 // Method com/fasterxml/jackson/databind/ObjectReader.readValue:(Lcom/fasterxml/jackson/core/JsonParser;)Ljava/lang/Object;
      12: areturn
      13: astore_3
      14: new           #38                 // class org/springframework/core/codec/CodecException
      17: dup
      18: new           #39                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #41                 // String Type definition error:
      27: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_3
      31: invokevirtual #43                 // Method com/fasterxml/jackson/databind/exc/InvalidDefinitionException.getType:()Lcom/fasterxml/jackson/databind/JavaType;
      34: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: aload_3
      41: invokespecial #46                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: astore_3
      46: new           #48                 // class org/springframework/core/codec/DecodingException
      49: dup
      50: new           #39                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #49                 // String JSON decoding error:
      59: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_3
      63: invokevirtual #50                 // Method com/fasterxml/jackson/core/JsonProcessingException.getOriginalMessage:()Ljava/lang/String;
      66: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: aload_3
      73: invokespecial #51                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: athrow
      77: astore_3
      78: new           #48                 // class org/springframework/core/codec/DecodingException
      81: dup
      82: ldc           #53                 // String I/O error while parsing input stream
      84: aload_3
      85: invokespecial #51                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      88: athrow
    Exception table:
       from    to  target type
           0    12    13   Class com/fasterxml/jackson/databind/exc/InvalidDefinitionException
           0    12    45   Class com/fasterxml/jackson/core/JsonProcessingException
           0    12    77   Class java/io/IOException
}
