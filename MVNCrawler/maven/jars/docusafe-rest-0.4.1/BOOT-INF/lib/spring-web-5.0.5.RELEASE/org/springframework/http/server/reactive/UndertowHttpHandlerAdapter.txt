Compiled from "UndertowHttpHandlerAdapter.java"
public class org.springframework.http.server.reactive.UndertowHttpHandlerAdapter implements io.undertow.server.HttpHandler {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.http.server.reactive.HttpHandler httpHandler;

  private org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  public org.springframework.http.server.reactive.UndertowHttpHandlerAdapter(org.springframework.http.server.reactive.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/core/io/buffer/DefaultDataBufferFactory
       8: dup
       9: iconst_0
      10: invokespecial #4                  // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":(Z)V
      13: putfield      #5                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      16: aload_1
      17: ldc           #6                  // String HttpHandler must not be null
      19: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #8                  // Field httpHandler:Lorg/springframework/http/server/reactive/HttpHandler;
      27: return

  public void setDataBufferFactory(org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_1
       1: ldc           #9                  // String DataBufferFactory must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #5                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      11: return

  public org.springframework.core.io.buffer.DataBufferFactory getDataBufferFactory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
       4: areturn

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: new           #10                 // class org/springframework/http/server/reactive/UndertowServerHttpRequest
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #11                 // Method getDataBufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
       9: invokespecial #12                 // Method org/springframework/http/server/reactive/UndertowServerHttpRequest."<init>":(Lio/undertow/server/HttpServerExchange;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
      12: astore_2
      13: new           #13                 // class org/springframework/http/server/reactive/UndertowServerHttpResponse
      16: dup
      17: aload_1
      18: aload_0
      19: invokevirtual #11                 // Method getDataBufferFactory:()Lorg/springframework/core/io/buffer/DataBufferFactory;
      22: invokespecial #14                 // Method org/springframework/http/server/reactive/UndertowServerHttpResponse."<init>":(Lio/undertow/server/HttpServerExchange;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
      25: astore_3
      26: aload_2
      27: invokeinterface #15,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
      32: getstatic     #16                 // Field org/springframework/http/HttpMethod.HEAD:Lorg/springframework/http/HttpMethod;
      35: if_acmpne     47
      38: new           #17                 // class org/springframework/http/server/reactive/HttpHeadResponseDecorator
      41: dup
      42: aload_3
      43: invokespecial #18                 // Method org/springframework/http/server/reactive/HttpHeadResponseDecorator."<init>":(Lorg/springframework/http/server/reactive/ServerHttpResponse;)V
      46: astore_3
      47: new           #19                 // class org/springframework/http/server/reactive/UndertowHttpHandlerAdapter$HandlerResultSubscriber
      50: dup
      51: aload_0
      52: aload_1
      53: invokespecial #20                 // Method org/springframework/http/server/reactive/UndertowHttpHandlerAdapter$HandlerResultSubscriber."<init>":(Lorg/springframework/http/server/reactive/UndertowHttpHandlerAdapter;Lio/undertow/server/HttpServerExchange;)V
      56: astore        4
      58: aload_0
      59: getfield      #8                  // Field httpHandler:Lorg/springframework/http/server/reactive/HttpHandler;
      62: aload_2
      63: aload_3
      64: invokeinterface #21,  3           // InterfaceMethod org/springframework/http/server/reactive/HttpHandler.handle:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lreactor/core/publisher/Mono;
      69: aload         4
      71: invokevirtual #22                 // Method reactor/core/publisher/Mono.subscribe:(Lorg/reactivestreams/Subscriber;)V
      74: return

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #23                 // class org/springframework/http/server/reactive/UndertowHttpHandlerAdapter
       2: invokestatic  #24                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
