Compiled from "AbstractUriTemplateHandler.java"
public abstract class org.springframework.web.util.AbstractUriTemplateHandler implements org.springframework.web.util.UriTemplateHandler {
  private java.lang.String baseUrl;

  private final java.util.Map<java.lang.String, java.lang.Object> defaultUriVariables;

  public org.springframework.web.util.AbstractUriTemplateHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field defaultUriVariables:Ljava/util/Map;
      15: return

  public void setBaseUrl(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_1
       5: invokestatic  #5                  // Method org/springframework/web/util/UriComponentsBuilder.fromUriString:(Ljava/lang/String;)Lorg/springframework/web/util/UriComponentsBuilder;
       8: invokevirtual #6                  // Method org/springframework/web/util/UriComponentsBuilder.build:()Lorg/springframework/web/util/UriComponents;
      11: astore_2
      12: aload_2
      13: invokevirtual #7                  // Method org/springframework/web/util/UriComponents.getScheme:()Ljava/lang/String;
      16: ldc           #8                  // String \'baseUrl\' must have a scheme
      18: invokestatic  #9                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      21: aload_2
      22: invokevirtual #10                 // Method org/springframework/web/util/UriComponents.getHost:()Ljava/lang/String;
      25: ldc           #11                 // String \'baseUrl\' must have a host
      27: invokestatic  #9                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      30: aload_2
      31: invokevirtual #12                 // Method org/springframework/web/util/UriComponents.getQuery:()Ljava/lang/String;
      34: ldc           #13                 // String \'baseUrl\' cannot have a query
      36: invokestatic  #14                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload_2
      40: invokevirtual #15                 // Method org/springframework/web/util/UriComponents.getFragment:()Ljava/lang/String;
      43: ldc           #16                 // String \'baseUrl\' cannot have a fragment
      45: invokestatic  #14                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      48: aload_0
      49: aload_1
      50: putfield      #17                 // Field baseUrl:Ljava/lang/String;
      53: return

  public java.lang.String getBaseUrl();
    Code:
       0: aload_0
       1: getfield      #17                 // Field baseUrl:Ljava/lang/String;
       4: areturn

  public void setDefaultUriVariables(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultUriVariables:Ljava/util/Map;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_1
      10: ifnull        23
      13: aload_0
      14: getfield      #4                  // Field defaultUriVariables:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #19,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      23: return

  public java.util.Map<java.lang.String, ?> getDefaultUriVariables();
    Code:
       0: aload_0
       1: getfield      #4                  // Field defaultUriVariables:Ljava/util/Map;
       4: invokestatic  #20                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public java.net.URI expand(java.lang.String, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getDefaultUriVariables:()Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          39
      12: new           #2                  // class java/util/HashMap
      15: dup
      16: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      19: astore_3
      20: aload_3
      21: aload_0
      22: invokevirtual #21                 // Method getDefaultUriVariables:()Ljava/util/Map;
      25: invokeinterface #19,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      30: aload_3
      31: aload_2
      32: invokeinterface #19,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      37: aload_3
      38: astore_2
      39: aload_0
      40: aload_1
      41: aload_2
      42: invokevirtual #23                 // Method expandInternal:(Ljava/lang/String;Ljava/util/Map;)Ljava/net/URI;
      45: astore_3
      46: aload_0
      47: aload_3
      48: invokespecial #24                 // Method insertBaseUrl:(Ljava/net/URI;)Ljava/net/URI;
      51: areturn

  public java.net.URI expand(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #25                 // Method expandInternal:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/net/URI;
       6: astore_3
       7: aload_0
       8: aload_3
       9: invokespecial #24                 // Method insertBaseUrl:(Ljava/net/URI;)Ljava/net/URI;
      12: areturn

  protected abstract java.net.URI expandInternal(java.lang.String, java.util.Map<java.lang.String, ?>);

  protected abstract java.net.URI expandInternal(java.lang.String, java.lang.Object...);

  private java.net.URI insertBaseUrl(java.net.URI);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getBaseUrl:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        45
       9: aload_1
      10: invokevirtual #27                 // Method java/net/URI.getHost:()Ljava/lang/String;
      13: ifnonnull     45
      16: new           #28                 // class java/net/URI
      19: dup
      20: new           #29                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_2
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #32                 // Method java/net/URI.toString:()Ljava/lang/String;
      35: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #34                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      44: astore_1
      45: aload_1
      46: areturn
      47: astore_2
      48: new           #36                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #29                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #37                 // String Invalid URL after inserting base URL:
      61: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_1
      65: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: aload_2
      72: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
    Exception table:
       from    to  target type
           0    46    47   Class java/net/URISyntaxException
}
