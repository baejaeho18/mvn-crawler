Compiled from "DefaultServerHttpRequestBuilder.java"
class org.springframework.http.server.reactive.DefaultServerHttpRequestBuilder implements org.springframework.http.server.reactive.ServerHttpRequest$Builder {
  private java.net.URI uri;

  private org.springframework.http.HttpHeaders httpHeaders;

  private java.lang.String httpMethodValue;

  private final org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> cookies;

  private java.lang.String uriPath;

  private java.lang.String contextPath;

  private reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> body;

  private final org.springframework.http.server.reactive.ServerHttpRequest originalRequest;

  public org.springframework.http.server.reactive.DefaultServerHttpRequestBuilder(org.springframework.http.server.reactive.ServerHttpRequest);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String ServerHttpRequest is required
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #4,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getURI:()Ljava/net/URI;
      17: putfield      #5                  // Field uri:Ljava/net/URI;
      20: aload_0
      21: aload_1
      22: invokeinterface #6,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethodValue:()Ljava/lang/String;
      27: putfield      #7                  // Field httpMethodValue:Ljava/lang/String;
      30: aload_0
      31: aload_1
      32: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getBody:()Lreactor/core/publisher/Flux;
      37: putfield      #9                  // Field body:Lreactor/core/publisher/Flux;
      40: aload_0
      41: new           #10                 // class org/springframework/http/HttpHeaders
      44: dup
      45: invokespecial #11                 // Method org/springframework/http/HttpHeaders."<init>":()V
      48: putfield      #12                 // Field httpHeaders:Lorg/springframework/http/HttpHeaders;
      51: aload_1
      52: invokeinterface #13,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      57: aload_0
      58: getfield      #12                 // Field httpHeaders:Lorg/springframework/http/HttpHeaders;
      61: invokestatic  #14                 // Method copyMultiValueMap:(Lorg/springframework/util/MultiValueMap;Lorg/springframework/util/MultiValueMap;)V
      64: aload_0
      65: new           #15                 // class org/springframework/util/LinkedMultiValueMap
      68: dup
      69: aload_1
      70: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getCookies:()Lorg/springframework/util/MultiValueMap;
      75: invokeinterface #17,  1           // InterfaceMethod org/springframework/util/MultiValueMap.size:()I
      80: invokespecial #18                 // Method org/springframework/util/LinkedMultiValueMap."<init>":(I)V
      83: putfield      #19                 // Field cookies:Lorg/springframework/util/MultiValueMap;
      86: aload_1
      87: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getCookies:()Lorg/springframework/util/MultiValueMap;
      92: aload_0
      93: getfield      #19                 // Field cookies:Lorg/springframework/util/MultiValueMap;
      96: invokestatic  #14                 // Method copyMultiValueMap:(Lorg/springframework/util/MultiValueMap;Lorg/springframework/util/MultiValueMap;)V
      99: aload_0
     100: aload_1
     101: putfield      #20                 // Field originalRequest:Lorg/springframework/http/server/reactive/ServerHttpRequest;
     104: return

  private static <K, V> void copyMultiValueMap(org.springframework.util.MultiValueMap<K, V>, org.springframework.util.MultiValueMap<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #21,  0             // InvokeDynamic #0:accept:(Lorg/springframework/util/MultiValueMap;)Ljava/util/function/BiConsumer;
       7: invokeinterface #22,  2           // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public org.springframework.http.server.reactive.ServerHttpRequest$Builder method(org.springframework.http.HttpMethod);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
       5: putfield      #7                  // Field httpMethodValue:Ljava/lang/String;
       8: aload_0
       9: areturn

  public org.springframework.http.server.reactive.ServerHttpRequest$Builder uri(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field uri:Ljava/net/URI;
       5: aload_0
       6: areturn

  public org.springframework.http.server.reactive.ServerHttpRequest$Builder path(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field uriPath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.springframework.http.server.reactive.ServerHttpRequest$Builder contextPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field contextPath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.springframework.http.server.reactive.ServerHttpRequest$Builder header(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field httpHeaders:Lorg/springframework/http/HttpHeaders;
       4: aload_1
       5: aload_2
       6: invokevirtual #26                 // Method org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: areturn

  public org.springframework.http.server.reactive.ServerHttpRequest$Builder headers(java.util.function.Consumer<org.springframework.http.HttpHeaders>);
    Code:
       0: aload_1
       1: ldc           #27                 // String \'headersConsumer\' must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: aload_0
       8: getfield      #12                 // Field httpHeaders:Lorg/springframework/http/HttpHeaders;
      11: invokeinterface #28,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      16: aload_0
      17: areturn

  public org.springframework.http.server.reactive.ServerHttpRequest build();
    Code:
       0: new           #29                 // class org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder$DefaultServerHttpRequest
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method getUriToUse:()Ljava/net/URI;
       8: aload_0
       9: getfield      #25                 // Field contextPath:Ljava/lang/String;
      12: aload_0
      13: getfield      #12                 // Field httpHeaders:Lorg/springframework/http/HttpHeaders;
      16: aload_0
      17: getfield      #7                  // Field httpMethodValue:Ljava/lang/String;
      20: aload_0
      21: getfield      #19                 // Field cookies:Lorg/springframework/util/MultiValueMap;
      24: aload_0
      25: getfield      #9                  // Field body:Lreactor/core/publisher/Flux;
      28: aload_0
      29: getfield      #20                 // Field originalRequest:Lorg/springframework/http/server/reactive/ServerHttpRequest;
      32: invokespecial #31                 // Method org/springframework/http/server/reactive/DefaultServerHttpRequestBuilder$DefaultServerHttpRequest."<init>":(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;Ljava/lang/String;Lorg/springframework/util/MultiValueMap;Lreactor/core/publisher/Flux;Lorg/springframework/http/server/reactive/ServerHttpRequest;)V
      35: areturn

  private java.net.URI getUriToUse();
    Code:
       0: aload_0
       1: getfield      #24                 // Field uriPath:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #5                  // Field uri:Ljava/net/URI;
      11: areturn
      12: new           #32                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      19: astore_1
      20: aload_0
      21: getfield      #5                  // Field uri:Ljava/net/URI;
      24: invokevirtual #34                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      27: ifnull        47
      30: aload_1
      31: aload_0
      32: getfield      #5                  // Field uri:Ljava/net/URI;
      35: invokevirtual #34                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: bipush        58
      43: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      46: pop
      47: aload_0
      48: getfield      #5                  // Field uri:Ljava/net/URI;
      51: invokevirtual #37                 // Method java/net/URI.getRawUserInfo:()Ljava/lang/String;
      54: ifnonnull     67
      57: aload_0
      58: getfield      #5                  // Field uri:Ljava/net/URI;
      61: invokevirtual #38                 // Method java/net/URI.getHost:()Ljava/lang/String;
      64: ifnull        151
      67: aload_1
      68: ldc           #39                 // String //
      70: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_0
      75: getfield      #5                  // Field uri:Ljava/net/URI;
      78: invokevirtual #37                 // Method java/net/URI.getRawUserInfo:()Ljava/lang/String;
      81: ifnull        101
      84: aload_1
      85: aload_0
      86: getfield      #5                  // Field uri:Ljava/net/URI;
      89: invokevirtual #37                 // Method java/net/URI.getRawUserInfo:()Ljava/lang/String;
      92: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: bipush        64
      97: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     100: pop
     101: aload_0
     102: getfield      #5                  // Field uri:Ljava/net/URI;
     105: invokevirtual #38                 // Method java/net/URI.getHost:()Ljava/lang/String;
     108: ifnull        123
     111: aload_1
     112: aload_0
     113: getfield      #5                  // Field uri:Ljava/net/URI;
     116: invokevirtual #38                 // Method java/net/URI.getHost:()Ljava/lang/String;
     119: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_0
     124: getfield      #5                  // Field uri:Ljava/net/URI;
     127: invokevirtual #40                 // Method java/net/URI.getPort:()I
     130: iconst_m1
     131: if_icmpeq     151
     134: aload_1
     135: bipush        58
     137: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     140: aload_0
     141: getfield      #5                  // Field uri:Ljava/net/URI;
     144: invokevirtual #40                 // Method java/net/URI.getPort:()I
     147: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     150: pop
     151: aload_0
     152: getfield      #24                 // Field uriPath:Ljava/lang/String;
     155: invokestatic  #42                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
     158: ifeq          170
     161: aload_1
     162: aload_0
     163: getfield      #24                 // Field uriPath:Ljava/lang/String;
     166: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: pop
     170: aload_0
     171: getfield      #5                  // Field uri:Ljava/net/URI;
     174: invokevirtual #43                 // Method java/net/URI.getRawQuery:()Ljava/lang/String;
     177: ifnull        197
     180: aload_1
     181: bipush        63
     183: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     186: aload_0
     187: getfield      #5                  // Field uri:Ljava/net/URI;
     190: invokevirtual #43                 // Method java/net/URI.getRawQuery:()Ljava/lang/String;
     193: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: pop
     197: aload_0
     198: getfield      #5                  // Field uri:Ljava/net/URI;
     201: invokevirtual #44                 // Method java/net/URI.getRawFragment:()Ljava/lang/String;
     204: ifnull        224
     207: aload_1
     208: bipush        35
     210: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     213: aload_0
     214: getfield      #5                  // Field uri:Ljava/net/URI;
     217: invokevirtual #44                 // Method java/net/URI.getRawFragment:()Ljava/lang/String;
     220: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: pop
     224: new           #45                 // class java/net/URI
     227: dup
     228: aload_1
     229: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     232: invokespecial #47                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     235: areturn
     236: astore_2
     237: new           #49                 // class java/lang/IllegalStateException
     240: dup
     241: new           #32                 // class java/lang/StringBuilder
     244: dup
     245: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     248: ldc           #50                 // String Invalid URI path: \"
     250: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: aload_0
     254: getfield      #24                 // Field uriPath:Ljava/lang/String;
     257: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: ldc           #51                 // String \"
     262: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     268: aload_2
     269: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     272: athrow
    Exception table:
       from    to  target type
         224   235   236   Class java/net/URISyntaxException

  private static void lambda$copyMultiValueMap$0(org.springframework.util.MultiValueMap, java.lang.Object, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: new           #53                 // class java/util/LinkedList
       5: dup
       6: aload_2
       7: invokespecial #54                 // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      10: invokeinterface #55,  3           // InterfaceMethod org/springframework/util/MultiValueMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #56                 // class java/util/List
      18: pop
      19: return
}
