Compiled from "DefaultResponseErrorHandler.java"
public class org.springframework.web.client.DefaultResponseErrorHandler implements org.springframework.web.client.ResponseErrorHandler {
  public org.springframework.web.client.DefaultResponseErrorHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean hasError(org.springframework.http.client.ClientHttpResponse) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
       6: invokestatic  #3                  // Method org/springframework/http/HttpStatus.resolve:(I)Lorg/springframework/http/HttpStatus;
       9: astore_2
      10: aload_2
      11: ifnull        26
      14: aload_0
      15: aload_2
      16: invokevirtual #4                  // Method hasError:(Lorg/springframework/http/HttpStatus;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  protected boolean hasError(org.springframework.http.HttpStatus);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/http/HttpStatus.series:()Lorg/springframework/http/HttpStatus$Series;
       4: getstatic     #6                  // Field org/springframework/http/HttpStatus$Series.CLIENT_ERROR:Lorg/springframework/http/HttpStatus$Series;
       7: if_acmpeq     20
      10: aload_1
      11: invokevirtual #5                  // Method org/springframework/http/HttpStatus.series:()Lorg/springframework/http/HttpStatus$Series;
      14: getstatic     #7                  // Field org/springframework/http/HttpStatus$Series.SERVER_ERROR:Lorg/springframework/http/HttpStatus$Series;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void handleError(org.springframework.http.client.ClientHttpResponse) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
       6: invokestatic  #3                  // Method org/springframework/http/HttpStatus.resolve:(I)Lorg/springframework/http/HttpStatus;
       9: astore_2
      10: aload_2
      11: ifnonnull     50
      14: new           #8                  // class org/springframework/web/client/UnknownHttpStatusCodeException
      17: dup
      18: aload_1
      19: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
      24: aload_1
      25: invokeinterface #9,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusText:()Ljava/lang/String;
      30: aload_1
      31: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      36: aload_0
      37: aload_1
      38: invokevirtual #11                 // Method getResponseBody:(Lorg/springframework/http/client/ClientHttpResponse;)[B
      41: aload_0
      42: aload_1
      43: invokevirtual #12                 // Method getCharset:(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/nio/charset/Charset;
      46: invokespecial #13                 // Method org/springframework/web/client/UnknownHttpStatusCodeException."<init>":(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokevirtual #14                 // Method handleError:(Lorg/springframework/http/client/ClientHttpResponse;Lorg/springframework/http/HttpStatus;)V
      56: return

  protected void handleError(org.springframework.http.client.ClientHttpResponse, org.springframework.http.HttpStatus) throws java.io.IOException;
    Code:
       0: getstatic     #15                 // Field org/springframework/web/client/DefaultResponseErrorHandler$1.$SwitchMap$org$springframework$http$HttpStatus$Series:[I
       3: aload_2
       4: invokevirtual #5                  // Method org/springframework/http/HttpStatus.series:()Lorg/springframework/http/HttpStatus$Series;
       7: invokevirtual #16                 // Method org/springframework/http/HttpStatus$Series.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 67
               default: 98
          }
      36: new           #17                 // class org/springframework/web/client/HttpClientErrorException
      39: dup
      40: aload_2
      41: aload_1
      42: invokeinterface #9,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusText:()Ljava/lang/String;
      47: aload_1
      48: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      53: aload_0
      54: aload_1
      55: invokevirtual #11                 // Method getResponseBody:(Lorg/springframework/http/client/ClientHttpResponse;)[B
      58: aload_0
      59: aload_1
      60: invokevirtual #12                 // Method getCharset:(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/nio/charset/Charset;
      63: invokespecial #18                 // Method org/springframework/web/client/HttpClientErrorException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
      66: athrow
      67: new           #19                 // class org/springframework/web/client/HttpServerErrorException
      70: dup
      71: aload_2
      72: aload_1
      73: invokeinterface #9,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusText:()Ljava/lang/String;
      78: aload_1
      79: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      84: aload_0
      85: aload_1
      86: invokevirtual #11                 // Method getResponseBody:(Lorg/springframework/http/client/ClientHttpResponse;)[B
      89: aload_0
      90: aload_1
      91: invokevirtual #12                 // Method getCharset:(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/nio/charset/Charset;
      94: invokespecial #20                 // Method org/springframework/web/client/HttpServerErrorException."<init>":(Lorg/springframework/http/HttpStatus;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
      97: athrow
      98: new           #8                  // class org/springframework/web/client/UnknownHttpStatusCodeException
     101: dup
     102: aload_2
     103: invokevirtual #21                 // Method org/springframework/http/HttpStatus.value:()I
     106: aload_1
     107: invokeinterface #9,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusText:()Ljava/lang/String;
     112: aload_1
     113: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
     118: aload_0
     119: aload_1
     120: invokevirtual #11                 // Method getResponseBody:(Lorg/springframework/http/client/ClientHttpResponse;)[B
     123: aload_0
     124: aload_1
     125: invokevirtual #12                 // Method getCharset:(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/nio/charset/Charset;
     128: invokespecial #13                 // Method org/springframework/web/client/UnknownHttpStatusCodeException."<init>":(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
     131: athrow

  protected org.springframework.http.HttpStatus getHttpStatusCode(org.springframework.http.client.ClientHttpResponse) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
       6: invokestatic  #3                  // Method org/springframework/http/HttpStatus.resolve:(I)Lorg/springframework/http/HttpStatus;
       9: astore_2
      10: aload_2
      11: ifnonnull     50
      14: new           #8                  // class org/springframework/web/client/UnknownHttpStatusCodeException
      17: dup
      18: aload_1
      19: invokeinterface #2,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getRawStatusCode:()I
      24: aload_1
      25: invokeinterface #9,  1            // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getStatusText:()Ljava/lang/String;
      30: aload_1
      31: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      36: aload_0
      37: aload_1
      38: invokevirtual #11                 // Method getResponseBody:(Lorg/springframework/http/client/ClientHttpResponse;)[B
      41: aload_0
      42: aload_1
      43: invokevirtual #12                 // Method getCharset:(Lorg/springframework/http/client/ClientHttpResponse;)Ljava/nio/charset/Charset;
      46: invokespecial #13                 // Method org/springframework/web/client/UnknownHttpStatusCodeException."<init>":(ILjava/lang/String;Lorg/springframework/http/HttpHeaders;[BLjava/nio/charset/Charset;)V
      49: athrow
      50: aload_2
      51: areturn

  protected byte[] getResponseBody(org.springframework.http.client.ClientHttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getBody:()Ljava/io/InputStream;
       6: invokestatic  #23                 // Method org/springframework/util/FileCopyUtils.copyToByteArray:(Ljava/io/InputStream;)[B
       9: areturn
      10: astore_2
      11: iconst_0
      12: newarray       byte
      14: areturn
    Exception table:
       from    to  target type
           0     9    10   Class java/io/IOException

  protected java.nio.charset.Charset getCharset(org.springframework.http.client.ClientHttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod org/springframework/http/client/ClientHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: astore_2
       7: aload_2
       8: invokevirtual #25                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      11: astore_3
      12: aload_3
      13: ifnull        23
      16: aload_3
      17: invokevirtual #26                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      20: goto          24
      23: aconst_null
      24: areturn
}
