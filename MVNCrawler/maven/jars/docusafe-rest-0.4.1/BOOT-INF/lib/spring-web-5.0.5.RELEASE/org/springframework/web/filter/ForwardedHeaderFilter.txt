Compiled from "ForwardedHeaderFilter.java"
public class org.springframework.web.filter.ForwardedHeaderFilter extends org.springframework.web.filter.OncePerRequestFilter {
  private static final java.util.Set<java.lang.String> FORWARDED_HEADER_NAMES;

  private final org.springframework.web.util.UrlPathHelper pathHelper;

  private boolean removeOnly;

  private boolean relativeRedirects;

  public org.springframework.web.filter.ForwardedHeaderFilter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/web/util/UrlPathHelper
       8: dup
       9: invokespecial #4                  // Method org/springframework/web/util/UrlPathHelper."<init>":()V
      12: putfield      #5                  // Field pathHelper:Lorg/springframework/web/util/UrlPathHelper;
      15: aload_0
      16: getfield      #5                  // Field pathHelper:Lorg/springframework/web/util/UrlPathHelper;
      19: iconst_0
      20: invokevirtual #6                  // Method org/springframework/web/util/UrlPathHelper.setUrlDecode:(Z)V
      23: aload_0
      24: getfield      #5                  // Field pathHelper:Lorg/springframework/web/util/UrlPathHelper;
      27: iconst_0
      28: invokevirtual #7                  // Method org/springframework/web/util/UrlPathHelper.setRemoveSemicolonContent:(Z)V
      31: return

  public void setRemoveOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field removeOnly:Z
       5: return

  public void setRelativeRedirects(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field relativeRedirects:Z
       5: return

  protected boolean shouldNotFilter(javax.servlet.http.HttpServletRequest) throws javax.servlet.ServletException;
    Code:
       0: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
       3: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_2
      19: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #13                 // class java/lang/String
      27: astore_3
      28: aload_1
      29: aload_3
      30: invokeinterface #14,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      35: ifnull        40
      38: iconst_0
      39: ireturn
      40: goto          9
      43: iconst_1
      44: ireturn

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean shouldNotFilterErrorDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field removeOnly:Z
       4: ifeq          29
       7: new           #15                 // class org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderRemovingRequest
      10: dup
      11: aload_1
      12: invokespecial #16                 // Method org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderRemovingRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
      15: astore        4
      17: aload_3
      18: aload         4
      20: aload_2
      21: invokeinterface #17,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      26: goto          82
      29: new           #18                 // class org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingRequest
      32: dup
      33: aload_1
      34: aload_0
      35: getfield      #5                  // Field pathHelper:Lorg/springframework/web/util/UrlPathHelper;
      38: invokespecial #19                 // Method org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingRequest."<init>":(Ljavax/servlet/http/HttpServletRequest;Lorg/springframework/web/util/UrlPathHelper;)V
      41: astore        4
      43: aload_0
      44: getfield      #9                  // Field relativeRedirects:Z
      47: ifeq          60
      50: aload_2
      51: getstatic     #20                 // Field org/springframework/http/HttpStatus.SEE_OTHER:Lorg/springframework/http/HttpStatus;
      54: invokestatic  #21                 // Method org/springframework/web/filter/RelativeRedirectResponseWrapper.wrapIfNecessary:(Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/http/HttpStatus;)Ljavax/servlet/http/HttpServletResponse;
      57: goto          70
      60: new           #22                 // class org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse
      63: dup
      64: aload_2
      65: aload         4
      67: invokespecial #23                 // Method org/springframework/web/filter/ForwardedHeaderFilter$ForwardedHeaderExtractingResponse."<init>":(Ljavax/servlet/http/HttpServletResponse;Ljavax/servlet/http/HttpServletRequest;)V
      70: astore        5
      72: aload_3
      73: aload         4
      75: aload         5
      77: invokeinterface #17,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
      82: return

  static java.util.Set access$000();
    Code:
       0: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
       3: areturn

  static {};
    Code:
       0: new           #24                 // class org/springframework/util/LinkedCaseInsensitiveMap
       3: dup
       4: iconst_5
       5: getstatic     #25                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       8: invokespecial #26                 // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
      11: invokestatic  #27                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      14: putstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
      17: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
      20: ldc           #28                 // String Forwarded
      22: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
      31: ldc           #30                 // String X-Forwarded-Host
      33: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      38: pop
      39: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
      42: ldc           #31                 // String X-Forwarded-Port
      44: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      49: pop
      50: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
      53: ldc           #32                 // String X-Forwarded-Proto
      55: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      60: pop
      61: getstatic     #1                  // Field FORWARDED_HEADER_NAMES:Ljava/util/Set;
      64: ldc           #33                 // String X-Forwarded-Prefix
      66: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      71: pop
      72: return
}
