Compiled from "RequestParamMapMethodArgumentResolver.java"
public class org.springframework.web.method.annotation.RequestParamMapMethodArgumentResolver implements org.springframework.web.method.support.HandlerMethodArgumentResolver {
  public org.springframework.web.method.annotation.RequestParamMapMethodArgumentResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean supportsParameter(org.springframework.core.MethodParameter);
    Code:
       0: aload_1
       1: ldc           #2                  // class org/springframework/web/bind/annotation/RequestParam
       3: invokevirtual #3                  // Method org/springframework/core/MethodParameter.getParameterAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #2                  // class org/springframework/web/bind/annotation/RequestParam
       9: astore_2
      10: aload_2
      11: ifnull        42
      14: ldc           #4                  // class java/util/Map
      16: aload_1
      17: invokevirtual #5                  // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      20: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      23: ifeq          42
      26: aload_2
      27: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/bind/annotation/RequestParam.name:()Ljava/lang/String;
      32: invokestatic  #8                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public java.lang.Object resolveArgument(org.springframework.core.MethodParameter, org.springframework.web.method.support.ModelAndViewContainer, org.springframework.web.context.request.NativeWebRequest, org.springframework.web.bind.support.WebDataBinderFactory) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
       4: astore        5
       6: aload_3
       7: invokeinterface #9,  1            // InterfaceMethod org/springframework/web/context/request/NativeWebRequest.getParameterMap:()Ljava/util/Map;
      12: astore        6
      14: ldc           #10                 // class org/springframework/util/MultiValueMap
      16: aload         5
      18: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifeq          57
      24: new           #11                 // class org/springframework/util/LinkedMultiValueMap
      27: dup
      28: aload         6
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      35: invokespecial #13                 // Method org/springframework/util/LinkedMultiValueMap."<init>":(I)V
      38: astore        7
      40: aload         6
      42: aload         7
      44: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Lorg/springframework/util/MultiValueMap;)Ljava/util/function/BiConsumer;
      49: invokeinterface #15,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      54: aload         7
      56: areturn
      57: new           #16                 // class java/util/LinkedHashMap
      60: dup
      61: aload         6
      63: invokeinterface #12,  1           // InterfaceMethod java/util/Map.size:()I
      68: invokespecial #17                 // Method java/util/LinkedHashMap."<init>":(I)V
      71: astore        7
      73: aload         6
      75: aload         7
      77: invokedynamic #18,  0             // InvokeDynamic #1:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      82: invokeinterface #15,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      87: aload         7
      89: areturn

  private static void lambda$resolveArgument$1(java.util.Map, java.lang.String, java.lang.String[]);
    Code:
       0: aload_2
       1: arraylength
       2: ifle          16
       5: aload_0
       6: aload_1
       7: aload_2
       8: iconst_0
       9: aaload
      10: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  private static void lambda$resolveArgument$0(org.springframework.util.MultiValueMap, java.lang.String, java.lang.String[]);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     37
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: aload_1
      24: aload         6
      26: invokeinterface #20,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      31: iinc          5, 1
      34: goto          9
      37: return
}
