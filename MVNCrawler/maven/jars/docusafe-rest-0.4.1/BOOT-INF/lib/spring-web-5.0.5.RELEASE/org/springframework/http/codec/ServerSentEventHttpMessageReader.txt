Compiled from "ServerSentEventHttpMessageReader.java"
public class org.springframework.http.codec.ServerSentEventHttpMessageReader implements org.springframework.http.codec.HttpMessageReader<java.lang.Object> {
  private static final java.util.function.IntPredicate NEWLINE_DELIMITER;

  private static final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private static final org.springframework.core.codec.StringDecoder stringDecoder;

  private final org.springframework.core.codec.Decoder<?> decoder;

  public org.springframework.http.codec.ServerSentEventHttpMessageReader();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/core/codec/Decoder;)V
       5: return

  public org.springframework.http.codec.ServerSentEventHttpMessageReader(org.springframework.core.codec.Decoder<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
       9: return

  public org.springframework.core.codec.Decoder<?> getDecoder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
       4: areturn

  public java.util.List<org.springframework.http.MediaType> getReadableMediaTypes();
    Code:
       0: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
       3: invokestatic  #5                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       6: areturn

  public boolean canRead(org.springframework.core.ResolvableType, org.springframework.http.MediaType);
    Code:
       0: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
       3: aload_2
       4: invokevirtual #6                  // Method org/springframework/http/MediaType.includes:(Lorg/springframework/http/MediaType;)Z
       7: ifne          18
      10: aload_0
      11: aload_1
      12: invokespecial #7                  // Method isServerSentEvent:(Lorg/springframework/core/ResolvableType;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean isServerSentEvent(org.springframework.core.ResolvableType);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: ifnull        22
       9: ldc           #9                  // class org/springframework/http/codec/ServerSentEvent
      11: aload_2
      12: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public reactor.core.publisher.Flux<java.lang.Object> read(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method isServerSentEvent:(Lorg/springframework/core/ResolvableType;)Z
       5: istore        4
       7: iload         4
       9: ifeq          26
      12: aload_1
      13: iconst_1
      14: newarray       int
      16: dup
      17: iconst_0
      18: iconst_0
      19: iastore
      20: invokevirtual #11                 // Method org/springframework/core/ResolvableType.getGeneric:([I)Lorg/springframework/core/ResolvableType;
      23: goto          27
      26: aload_1
      27: astore        5
      29: aload_2
      30: invokeinterface #12,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
      35: invokestatic  #13                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      38: invokedynamic #14,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      43: invokevirtual #15                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      46: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      51: invokevirtual #17                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      54: invokedynamic #18,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      59: invokevirtual #19                 // Method reactor/core/publisher/Flux.bufferUntil:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Flux;
      62: aload_0
      63: aload         5
      65: aload_3
      66: iload         4
      68: invokedynamic #20,  0             // InvokeDynamic #3:apply:(Lorg/springframework/http/codec/ServerSentEventHttpMessageReader;Lorg/springframework/core/ResolvableType;Ljava/util/Map;Z)Ljava/util/function/Function;
      73: invokevirtual #15                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      76: ldc           #21                 // class java/lang/Object
      78: invokevirtual #22                 // Method reactor/core/publisher/Flux.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
      81: areturn

  private static reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> splitOnNewline(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: new           #23                 // class java/util/ArrayList
       3: dup
       4: invokespecial #24                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: invokeinterface #25,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
      16: istore        4
      18: aload_0
      19: getstatic     #26                 // Field NEWLINE_DELIMITER:Ljava/util/function/IntPredicate;
      22: iload_2
      23: invokeinterface #27,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.indexOf:(Ljava/util/function/IntPredicate;I)I
      28: istore_3
      29: iload_3
      30: iconst_m1
      31: if_icmpeq     42
      34: iload_3
      35: iload_2
      36: isub
      37: iconst_1
      38: iadd
      39: goto          46
      42: iload         4
      44: iload_2
      45: isub
      46: istore        5
      48: aload_0
      49: iload_2
      50: iload         5
      52: invokeinterface #28,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.slice:(II)Lorg/springframework/core/io/buffer/DataBuffer;
      57: astore        6
      59: aload_1
      60: aload         6
      62: invokestatic  #29                 // Method org/springframework/core/io/buffer/DataBufferUtils.retain:(Lorg/springframework/core/io/buffer/DataBuffer;)Lorg/springframework/core/io/buffer/DataBuffer;
      65: invokeinterface #30,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: iload_3
      72: iconst_1
      73: iadd
      74: istore_2
      75: iload_2
      76: iload         4
      78: if_icmpge     86
      81: iload_3
      82: iconst_m1
      83: if_icmpne     18
      86: aload_0
      87: invokestatic  #31                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      90: pop
      91: aload_1
      92: invokestatic  #32                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      95: areturn

  private reactor.core.publisher.Mono<org.springframework.http.codec.ServerSentEvent<java.lang.Object>> buildEvent(java.lang.String[], org.springframework.core.ResolvableType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: invokestatic  #33                 // Method org/springframework/http/codec/ServerSentEvent.builder:()Lorg/springframework/http/codec/ServerSentEvent$Builder;
       3: astore        4
       5: aconst_null
       6: astore        5
       8: aconst_null
       9: astore        6
      11: aload_1
      12: astore        7
      14: aload         7
      16: arraylength
      17: istore        8
      19: iconst_0
      20: istore        9
      22: iload         9
      24: iload         8
      26: if_icmpge     229
      29: aload         7
      31: iload         9
      33: aaload
      34: astore        10
      36: aload         10
      38: ldc           #34                 // String id:
      40: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      43: ifeq          63
      46: aload         4
      48: aload         10
      50: iconst_3
      51: invokevirtual #36                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      54: invokeinterface #37,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.id:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
      59: pop
      60: goto          223
      63: aload         10
      65: ldc           #38                 // String event:
      67: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      70: ifeq          91
      73: aload         4
      75: aload         10
      77: bipush        6
      79: invokevirtual #36                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      82: invokeinterface #39,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.event:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
      87: pop
      88: goto          223
      91: aload         10
      93: ldc           #40                 // String data:
      95: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      98: ifeq          140
     101: aload         5
     103: ifnull        111
     106: aload         5
     108: goto          118
     111: new           #41                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     118: astore        5
     120: aload         5
     122: aload         10
     124: iconst_5
     125: invokevirtual #36                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     128: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #44                 // String \n
     133: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: pop
     137: goto          223
     140: aload         10
     142: ldc           #45                 // String retry:
     144: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     147: ifeq          177
     150: aload         4
     152: aload         10
     154: bipush        6
     156: invokevirtual #36                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     159: invokestatic  #46                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     162: invokevirtual #47                 // Method java/lang/Long.longValue:()J
     165: invokestatic  #48                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
     168: invokeinterface #49,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.retry:(Ljava/time/Duration;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     173: pop
     174: goto          223
     177: aload         10
     179: ldc           #50                 // String :
     181: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     184: ifeq          223
     187: aload         6
     189: ifnull        197
     192: aload         6
     194: goto          204
     197: new           #41                 // class java/lang/StringBuilder
     200: dup
     201: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     204: astore        6
     206: aload         6
     208: aload         10
     210: iconst_1
     211: invokevirtual #36                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     214: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: ldc           #44                 // String \n
     219: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: pop
     223: iinc          9, 1
     226: goto          22
     229: aload         6
     231: ifnull        258
     234: aload         4
     236: aload         6
     238: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     241: iconst_0
     242: aload         6
     244: invokevirtual #52                 // Method java/lang/StringBuilder.length:()I
     247: iconst_1
     248: isub
     249: invokevirtual #53                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     252: invokeinterface #54,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.comment:(Ljava/lang/String;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
     257: pop
     258: aload         5
     260: ifnull        285
     263: aload_0
     264: aload         5
     266: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     269: aload_2
     270: aload_3
     271: invokespecial #55                 // Method decodeData:(Ljava/lang/String;Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     274: aload         4
     276: invokedynamic #56,  0             // InvokeDynamic #4:apply:(Lorg/springframework/http/codec/ServerSentEvent$Builder;)Ljava/util/function/Function;
     281: invokevirtual #57                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     284: areturn
     285: aload         4
     287: invokeinterface #58,  1           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.build:()Lorg/springframework/http/codec/ServerSentEvent;
     292: invokestatic  #59                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     295: areturn

  private reactor.core.publisher.Mono<?> decodeData(java.lang.String, org.springframework.core.ResolvableType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: ldc           #60                 // class java/lang/String
       2: aload_2
       3: invokevirtual #61                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
       6: if_acmpne     24
       9: aload_1
      10: iconst_0
      11: aload_1
      12: invokevirtual #62                 // Method java/lang/String.length:()I
      15: iconst_1
      16: isub
      17: invokevirtual #53                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: invokestatic  #59                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      23: areturn
      24: aload_0
      25: getfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      28: ifnonnull     44
      31: new           #63                 // class org/springframework/core/codec/CodecException
      34: dup
      35: ldc           #64                 // String No SSE decoder configured and the data is not String.
      37: invokespecial #65                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;)V
      40: invokestatic  #66                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      43: areturn
      44: aload_1
      45: getstatic     #67                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      48: invokevirtual #68                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      51: astore        4
      53: getstatic     #69                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      56: aload         4
      58: invokeinterface #70,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.wrap:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      63: invokestatic  #59                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      66: astore        5
      68: aload_0
      69: getfield      #3                  // Field decoder:Lorg/springframework/core/codec/Decoder;
      72: aload         5
      74: aload_2
      75: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_EVENT_STREAM:Lorg/springframework/http/MediaType;
      78: aload_3
      79: invokeinterface #71,  5           // InterfaceMethod org/springframework/core/codec/Decoder.decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      84: areturn

  public reactor.core.publisher.Mono<java.lang.Object> readMono(org.springframework.core.ResolvableType, org.springframework.http.ReactiveHttpInputMessage, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: ldc           #60                 // class java/lang/String
       2: aload_1
       3: invokevirtual #8                  // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       6: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          37
      12: aload_2
      13: invokeinterface #12,  1           // InterfaceMethod org/springframework/http/ReactiveHttpInputMessage.getBody:()Lreactor/core/publisher/Flux;
      18: astore        4
      20: getstatic     #73                 // Field stringDecoder:Lorg/springframework/core/codec/StringDecoder;
      23: aload         4
      25: aload_1
      26: aconst_null
      27: aconst_null
      28: invokevirtual #74                 // Method org/springframework/core/codec/StringDecoder.decodeToMono:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      31: ldc           #21                 // class java/lang/Object
      33: invokevirtual #75                 // Method reactor/core/publisher/Mono.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      36: areturn
      37: new           #76                 // class java/lang/UnsupportedOperationException
      40: dup
      41: ldc           #77                 // String ServerSentEventHttpMessageReader only supports reading stream of events as a Flux
      43: invokespecial #78                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      46: invokestatic  #66                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      49: areturn

  private static org.springframework.http.codec.ServerSentEvent lambda$buildEvent$6(org.springframework.http.codec.ServerSentEvent$Builder, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #79,  2           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.data:(Ljava/lang/Object;)Lorg/springframework/http/codec/ServerSentEvent$Builder;
       7: pop
       8: aload_0
       9: invokeinterface #58,  1           // InterfaceMethod org/springframework/http/codec/ServerSentEvent$Builder.build:()Lorg/springframework/http/codec/ServerSentEvent;
      14: areturn

  private org.reactivestreams.Publisher lambda$read$5(org.springframework.core.ResolvableType, java.util.Map, boolean, java.util.List);
    Code:
       0: aload         4
       2: invokeinterface #80,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       7: invokestatic  #81                 // Method java/util/stream/Collectors.joining:()Ljava/util/stream/Collector;
      10: invokeinterface #82,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      15: checkcast     #60                 // class java/lang/String
      18: ldc           #83                 // String \\r?\\n
      20: invokevirtual #84                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      23: astore        5
      25: aload_0
      26: aload         5
      28: aload_1
      29: aload_2
      30: invokespecial #85                 // Method buildEvent:([Ljava/lang/String;Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Lreactor/core/publisher/Mono;
      33: iload_3
      34: invokedynamic #86,  0             // InvokeDynamic #5:test:(Z)Ljava/util/function/Predicate;
      39: invokevirtual #87                 // Method reactor/core/publisher/Mono.filter:(Ljava/util/function/Predicate;)Lreactor/core/publisher/Mono;
      42: iload_3
      43: invokedynamic #88,  0             // InvokeDynamic #6:apply:(Z)Ljava/util/function/Function;
      48: invokevirtual #57                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      51: areturn

  private static java.lang.Object lambda$null$4(boolean, org.springframework.http.codec.ServerSentEvent);
    Code:
       0: iload_0
       1: ifeq          8
       4: aload_1
       5: goto          12
       8: aload_1
       9: invokevirtual #89                 // Method org/springframework/http/codec/ServerSentEvent.data:()Ljava/lang/Object;
      12: areturn

  private static boolean lambda$null$3(boolean, org.springframework.http.codec.ServerSentEvent);
    Code:
       0: iload_0
       1: ifne          11
       4: aload_1
       5: invokevirtual #89                 // Method org/springframework/http/codec/ServerSentEvent.data:()Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static boolean lambda$read$2(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #44                 // String \n
       3: invokevirtual #90                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ireturn

  private static java.lang.String lambda$read$1(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: getstatic     #67                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: aload_0
       4: invokeinterface #91,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asByteBuffer:()Ljava/nio/ByteBuffer;
       9: invokevirtual #92                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      12: astore_1
      13: aload_0
      14: invokestatic  #31                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      17: pop
      18: aload_1
      19: invokevirtual #93                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
      22: areturn

  private static boolean lambda$static$0(int);
    Code:
       0: iload_0
       1: bipush        10
       3: if_icmpeq     12
       6: iload_0
       7: bipush        13
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  static {};
    Code:
       0: invokedynamic #94,  0             // InvokeDynamic #7:test:()Ljava/util/function/IntPredicate;
       5: putstatic     #26                 // Field NEWLINE_DELIMITER:Ljava/util/function/IntPredicate;
       8: new           #95                 // class org/springframework/core/io/buffer/DefaultDataBufferFactory
      11: dup
      12: invokespecial #96                 // Method org/springframework/core/io/buffer/DefaultDataBufferFactory."<init>":()V
      15: putstatic     #69                 // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      18: invokestatic  #97                 // Method org/springframework/core/codec/StringDecoder.textPlainOnly:()Lorg/springframework/core/codec/StringDecoder;
      21: putstatic     #73                 // Field stringDecoder:Lorg/springframework/core/codec/StringDecoder;
      24: return
}
