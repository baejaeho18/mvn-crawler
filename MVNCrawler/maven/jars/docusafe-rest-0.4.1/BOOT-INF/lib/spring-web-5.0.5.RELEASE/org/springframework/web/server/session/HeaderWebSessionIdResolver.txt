Compiled from "HeaderWebSessionIdResolver.java"
public class org.springframework.web.server.session.HeaderWebSessionIdResolver implements org.springframework.web.server.session.WebSessionIdResolver {
  public static final java.lang.String DEFAULT_HEADER_NAME;

  private java.lang.String headerName;

  public org.springframework.web.server.session.HeaderWebSessionIdResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String SESSION
       7: putfield      #4                  // Field headerName:Ljava/lang/String;
      10: return

  public void setHeaderName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #5                  // String \'headerName\' must not be empty
       3: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field headerName:Ljava/lang/String;
      11: return

  public java.lang.String getHeaderName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field headerName:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> resolveSessionIds(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
       6: invokeinterface #8,  1            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getHeaders:()Lorg/springframework/http/HttpHeaders;
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokevirtual #9                  // Method getHeaderName:()Ljava/lang/String;
      17: invokestatic  #10                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      20: invokevirtual #11                 // Method org/springframework/http/HttpHeaders.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #12                 // class java/util/List
      26: areturn

  public void setSessionId(org.springframework.web.server.ServerWebExchange, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #13                 // String \'id\' is required.
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #15,  1           // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      12: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.getHeaders:()Lorg/springframework/http/HttpHeaders;
      17: aload_0
      18: invokevirtual #9                  // Method getHeaderName:()Ljava/lang/String;
      21: aload_2
      22: invokevirtual #17                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      25: return

  public void expireSession(org.springframework.web.server.ServerWebExchange);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #18                 // String
       4: invokevirtual #19                 // Method setSessionId:(Lorg/springframework/web/server/ServerWebExchange;Ljava/lang/String;)V
       7: return
}
