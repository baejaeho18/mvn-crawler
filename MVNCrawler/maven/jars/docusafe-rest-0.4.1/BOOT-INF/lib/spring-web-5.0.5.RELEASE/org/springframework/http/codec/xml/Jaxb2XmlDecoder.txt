Compiled from "Jaxb2XmlDecoder.java"
public class org.springframework.http.codec.xml.Jaxb2XmlDecoder extends org.springframework.core.codec.AbstractDecoder<java.lang.Object> {
  private static final java.lang.String JAXB_DEFAULT_ANNOTATION_VALUE;

  private final org.springframework.http.codec.xml.XmlEventDecoder xmlEventDecoder;

  private final org.springframework.http.codec.xml.JaxbContextContainer jaxbContexts;

  public org.springframework.http.codec.xml.Jaxb2XmlDecoder();
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.APPLICATION_XML:Lorg/springframework/util/MimeType;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #3                  // Field org/springframework/util/MimeTypeUtils.TEXT_XML:Lorg/springframework/util/MimeType;
      16: aastore
      17: invokespecial #4                  // Method org/springframework/core/codec/AbstractDecoder."<init>":([Lorg/springframework/util/MimeType;)V
      20: aload_0
      21: new           #5                  // class org/springframework/http/codec/xml/XmlEventDecoder
      24: dup
      25: invokespecial #6                  // Method org/springframework/http/codec/xml/XmlEventDecoder."<init>":()V
      28: putfield      #7                  // Field xmlEventDecoder:Lorg/springframework/http/codec/xml/XmlEventDecoder;
      31: aload_0
      32: new           #8                  // class org/springframework/http/codec/xml/JaxbContextContainer
      35: dup
      36: invokespecial #9                  // Method org/springframework/http/codec/xml/JaxbContextContainer."<init>":()V
      39: putfield      #10                 // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
      42: return

  public boolean canDecode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method org/springframework/core/codec/AbstractDecoder.canDecode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
       6: ifeq          42
       9: aload_1
      10: invokevirtual #12                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
      13: astore_3
      14: aload_3
      15: ifnull        40
      18: aload_3
      19: ldc           #13                 // class javax/xml/bind/annotation/XmlRootElement
      21: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      24: ifne          36
      27: aload_3
      28: ldc           #15                 // class javax/xml/bind/annotation/XmlType
      30: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn
      42: iconst_0
      43: ireturn

  public reactor.core.publisher.Flux<java.lang.Object> decode(org.reactivestreams.Publisher<org.springframework.core.io.buffer.DataBuffer>, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: invokevirtual #12                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       4: astore        5
       6: aload         5
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #16                 // String Unresolvable output class
      18: invokestatic  #17                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      21: aload_0
      22: getfield      #7                  // Field xmlEventDecoder:Lorg/springframework/http/codec/xml/XmlEventDecoder;
      25: aload_1
      26: ldc           #18                 // class javax/xml/stream/events/XMLEvent
      28: invokestatic  #19                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      31: aload_3
      32: aload         4
      34: invokevirtual #20                 // Method org/springframework/http/codec/xml/XmlEventDecoder.decode:(Lorg/reactivestreams/Publisher;Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;Ljava/util/Map;)Lreactor/core/publisher/Flux;
      37: astore        6
      39: aload_0
      40: aload         5
      42: invokevirtual #21                 // Method toQName:(Ljava/lang/Class;)Ljavax/xml/namespace/QName;
      45: astore        7
      47: aload_0
      48: aload         6
      50: aload         7
      52: invokevirtual #22                 // Method split:(Lreactor/core/publisher/Flux;Ljavax/xml/namespace/QName;)Lreactor/core/publisher/Flux;
      55: astore        8
      57: aload         8
      59: aload_0
      60: aload         5
      62: invokedynamic #23,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/xml/Jaxb2XmlDecoder;Ljava/lang/Class;)Ljava/util/function/Function;
      67: invokevirtual #24                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      70: areturn

  private java.lang.Object unmarshal(java.util.List<javax.xml.stream.events.XMLEvent>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
       4: aload_2
       5: invokevirtual #25                 // Method org/springframework/http/codec/xml/JaxbContextContainer.createUnmarshaller:(Ljava/lang/Class;)Ljavax/xml/bind/Unmarshaller;
       8: astore_3
       9: aload_1
      10: invokestatic  #26                 // Method org/springframework/util/xml/StaxUtils.createXMLEventReader:(Ljava/util/List;)Ljavax/xml/stream/XMLEventReader;
      13: astore        4
      15: aload_2
      16: ldc           #13                 // class javax/xml/bind/annotation/XmlRootElement
      18: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      21: ifeq          33
      24: aload_3
      25: aload         4
      27: invokeinterface #27,  2           // InterfaceMethod javax/xml/bind/Unmarshaller.unmarshal:(Ljavax/xml/stream/XMLEventReader;)Ljava/lang/Object;
      32: areturn
      33: aload_3
      34: aload         4
      36: aload_2
      37: invokeinterface #28,  3           // InterfaceMethod javax/xml/bind/Unmarshaller.unmarshal:(Ljavax/xml/stream/XMLEventReader;Ljava/lang/Class;)Ljavax/xml/bind/JAXBElement;
      42: astore        5
      44: aload         5
      46: invokevirtual #29                 // Method javax/xml/bind/JAXBElement.getValue:()Ljava/lang/Object;
      49: areturn
      50: astore_3
      51: new           #31                 // class org/springframework/core/codec/DecodingException
      54: dup
      55: new           #32                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #34                 // String Could not unmarshal XML to
      64: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_2
      68: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: aload_3
      75: invokespecial #38                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: athrow
      79: astore_3
      80: new           #40                 // class org/springframework/core/codec/CodecException
      83: dup
      84: ldc           #41                 // String Invalid JAXB configuration
      86: aload_3
      87: invokespecial #42                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: athrow
    Exception table:
       from    to  target type
           0    32    50   Class javax/xml/bind/UnmarshalException
          33    49    50   Class javax/xml/bind/UnmarshalException
           0    32    79   Class javax/xml/bind/JAXBException
          33    49    79   Class javax/xml/bind/JAXBException

  javax.xml.namespace.QName toQName(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #13                 // class javax/xml/bind/annotation/XmlRootElement
       3: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          39
       9: aload_1
      10: ldc           #13                 // class javax/xml/bind/annotation/XmlRootElement
      12: invokevirtual #43                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: checkcast     #13                 // class javax/xml/bind/annotation/XmlRootElement
      18: astore        4
      20: aload         4
      22: invokeinterface #44,  1           // InterfaceMethod javax/xml/bind/annotation/XmlRootElement.name:()Ljava/lang/String;
      27: astore_2
      28: aload         4
      30: invokeinterface #45,  1           // InterfaceMethod javax/xml/bind/annotation/XmlRootElement.namespace:()Ljava/lang/String;
      35: astore_3
      36: goto          113
      39: aload_1
      40: ldc           #15                 // class javax/xml/bind/annotation/XmlType
      42: invokevirtual #14                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      45: ifeq          78
      48: aload_1
      49: ldc           #15                 // class javax/xml/bind/annotation/XmlType
      51: invokevirtual #43                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      54: checkcast     #15                 // class javax/xml/bind/annotation/XmlType
      57: astore        4
      59: aload         4
      61: invokeinterface #46,  1           // InterfaceMethod javax/xml/bind/annotation/XmlType.name:()Ljava/lang/String;
      66: astore_2
      67: aload         4
      69: invokeinterface #47,  1           // InterfaceMethod javax/xml/bind/annotation/XmlType.namespace:()Ljava/lang/String;
      74: astore_3
      75: goto          113
      78: new           #48                 // class java/lang/IllegalArgumentException
      81: dup
      82: new           #32                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #49                 // String Output class [
      91: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #50                 // Method java/lang/Class.getName:()Ljava/lang/String;
      98: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #51                 // String ] is neither annotated with @XmlRootElement nor @XmlType
     103: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: ldc           #54                 // String ##default
     115: aload_2
     116: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     119: ifeq          127
     122: aload_1
     123: invokestatic  #56                 // Method org/springframework/util/ClassUtils.getShortNameAsProperty:(Ljava/lang/Class;)Ljava/lang/String;
     126: astore_2
     127: ldc           #54                 // String ##default
     129: aload_3
     130: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     133: ifeq          183
     136: aload_1
     137: invokevirtual #57                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
     140: astore        4
     142: aload         4
     144: ifnull        180
     147: aload         4
     149: ldc           #58                 // class javax/xml/bind/annotation/XmlSchema
     151: invokevirtual #59                 // Method java/lang/Package.isAnnotationPresent:(Ljava/lang/Class;)Z
     154: ifeq          180
     157: aload         4
     159: ldc           #58                 // class javax/xml/bind/annotation/XmlSchema
     161: invokevirtual #60                 // Method java/lang/Package.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     164: checkcast     #58                 // class javax/xml/bind/annotation/XmlSchema
     167: astore        5
     169: aload         5
     171: invokeinterface #61,  1           // InterfaceMethod javax/xml/bind/annotation/XmlSchema.namespace:()Ljava/lang/String;
     176: astore_3
     177: goto          183
     180: ldc           #63                 // String
     182: astore_3
     183: new           #64                 // class javax/xml/namespace/QName
     186: dup
     187: aload_3
     188: aload_2
     189: invokespecial #65                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     192: areturn

  reactor.core.publisher.Flux<java.util.List<javax.xml.stream.events.XMLEvent>> split(reactor.core.publisher.Flux<javax.xml.stream.events.XMLEvent>, javax.xml.namespace.QName);
    Code:
       0: aload_1
       1: new           #66                 // class org/springframework/http/codec/xml/Jaxb2XmlDecoder$SplitFunction
       4: dup
       5: aload_2
       6: invokespecial #67                 // Method org/springframework/http/codec/xml/Jaxb2XmlDecoder$SplitFunction."<init>":(Ljavax/xml/namespace/QName;)V
       9: invokevirtual #68                 // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      12: areturn

  private java.lang.Object lambda$decode$0(java.lang.Class, java.util.List);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #69                 // Method unmarshal:(Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Object;
       6: areturn
}
