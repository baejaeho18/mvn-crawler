Compiled from "ProtobufHttpMessageConverter.java"
public class org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<com.google.protobuf.Message> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  public static final org.springframework.http.MediaType PROTOBUF;

  public static final java.lang.String X_PROTOBUF_SCHEMA_HEADER;

  public static final java.lang.String X_PROTOBUF_MESSAGE_HEADER;

  private static final java.util.concurrent.ConcurrentHashMap<java.lang.Class<?>, java.lang.reflect.Method> methodCache;

  private final com.google.protobuf.ExtensionRegistry extensionRegistry;

  private final org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufFormatSupport protobufFormatSupport;

  public org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V
       5: return

  public org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter(org.springframework.http.converter.protobuf.ExtensionRegistryInitializer);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #2                  // Method "<init>":(Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;Lorg/springframework/http/converter/protobuf/ExtensionRegistryInitializer;)V
       6: return

  org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter(org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter$ProtobufFormatSupport, org.springframework.http.converter.protobuf.ExtensionRegistryInitializer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method com/google/protobuf/ExtensionRegistry.newInstance:()Lcom/google/protobuf/ExtensionRegistry;
       8: putfield      #5                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
      11: aload_1
      12: ifnull        23
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      20: goto          88
      23: ldc           #7                  // String com.googlecode.protobuf.format.FormatFactory
      25: aload_0
      26: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #9                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      32: invokestatic  #10                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      35: ifeq          52
      38: aload_0
      39: new           #11                 // class org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaFormatSupport
      42: dup
      43: invokespecial #12                 // Method org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaFormatSupport."<init>":()V
      46: putfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      49: goto          88
      52: ldc           #13                 // String com.google.protobuf.util.JsonFormat
      54: aload_0
      55: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokevirtual #9                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      61: invokestatic  #10                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      64: ifeq          83
      67: aload_0
      68: new           #14                 // class org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaUtilSupport
      71: dup
      72: aconst_null
      73: aconst_null
      74: invokespecial #15                 // Method org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufJavaUtilSupport."<init>":(Lcom/google/protobuf/util/JsonFormat$Parser;Lcom/google/protobuf/util/JsonFormat$Printer;)V
      77: putfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      80: goto          88
      83: aload_0
      84: aconst_null
      85: putfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      88: aload_0
      89: aload_0
      90: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      93: ifnull        108
      96: aload_0
      97: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     100: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.supportedMediaTypes:()[Lorg/springframework/http/MediaType;
     105: goto          124
     108: iconst_2
     109: anewarray     #17                 // class org/springframework/http/MediaType
     112: dup
     113: iconst_0
     114: getstatic     #18                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
     117: aastore
     118: dup
     119: iconst_1
     120: getstatic     #19                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
     123: aastore
     124: invokestatic  #20                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     127: invokevirtual #21                 // Method setSupportedMediaTypes:(Ljava/util/List;)V
     130: aload_2
     131: ifnull        144
     134: aload_2
     135: aload_0
     136: getfield      #5                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
     139: invokeinterface #22,  2           // InterfaceMethod org/springframework/http/converter/protobuf/ExtensionRegistryInitializer.initializeExtensionRegistry:(Lcom/google/protobuf/ExtensionRegistry;)V
     144: return

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: ldc           #23                 // class com/google/protobuf/Message
       2: aload_1
       3: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ireturn

  protected org.springframework.http.MediaType getDefaultContentType(com.google.protobuf.Message);
    Code:
       0: getstatic     #18                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
       3: areturn

  protected com.google.protobuf.Message readInternal(java.lang.Class<? extends com.google.protobuf.Message>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_2
       1: invokeinterface #25,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: invokevirtual #26                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       9: astore_3
      10: aload_3
      11: ifnonnull     18
      14: getstatic     #18                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      17: astore_3
      18: aload_3
      19: invokevirtual #27                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      22: astore        4
      24: aload         4
      26: ifnonnull     34
      29: getstatic     #28                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      32: astore        4
      34: aload_1
      35: invokestatic  #29                 // Method getMessageBuilder:(Ljava/lang/Class;)Lcom/google/protobuf/Message$Builder;
      38: astore        5
      40: getstatic     #18                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      43: aload_3
      44: invokevirtual #30                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      47: ifeq          71
      50: aload         5
      52: aload_2
      53: invokeinterface #31,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      58: aload_0
      59: getfield      #5                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
      62: invokeinterface #32,  3           // InterfaceMethod com/google/protobuf/Message$Builder.mergeFrom:(Ljava/io/InputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/Message$Builder;
      67: pop
      68: goto          143
      71: getstatic     #19                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
      74: aload_3
      75: invokevirtual #30                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      78: ifeq          112
      81: new           #33                 // class java/io/InputStreamReader
      84: dup
      85: aload_2
      86: invokeinterface #31,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      91: aload         4
      93: invokespecial #34                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      96: astore        6
      98: aload         6
     100: aload_0
     101: getfield      #5                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
     104: aload         5
     106: invokestatic  #35                 // Method com/google/protobuf/TextFormat.merge:(Ljava/lang/Readable;Lcom/google/protobuf/ExtensionRegistry;Lcom/google/protobuf/Message$Builder;)V
     109: goto          143
     112: aload_0
     113: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     116: ifnull        143
     119: aload_0
     120: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     123: aload_2
     124: invokeinterface #31,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
     129: aload         4
     131: aload_3
     132: aload_0
     133: getfield      #5                  // Field extensionRegistry:Lcom/google/protobuf/ExtensionRegistry;
     136: aload         5
     138: invokeinterface #36,  6           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.merge:(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/springframework/http/MediaType;Lcom/google/protobuf/ExtensionRegistry;Lcom/google/protobuf/Message$Builder;)V
     143: aload         5
     145: invokeinterface #37,  1           // InterfaceMethod com/google/protobuf/Message$Builder.build:()Lcom/google/protobuf/Message;
     150: areturn
     151: astore        5
     153: new           #39                 // class org/springframework/http/converter/HttpMessageNotReadableException
     156: dup
     157: new           #40                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #42                 // String Could not read Protobuf message:
     166: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload         5
     171: invokevirtual #44                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     174: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: aload         5
     182: invokespecial #46                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     185: athrow
    Exception table:
       from    to  target type
          34   150   151   Class java/lang/Exception

  protected boolean canWrite(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #47                 // Method org/springframework/http/converter/AbstractHttpMessageConverter.canWrite:(Lorg/springframework/http/MediaType;)Z
       5: ifne          28
       8: aload_0
       9: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      12: ifnull        32
      15: aload_0
      16: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
      19: aload_1
      20: invokeinterface #48,  2           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.supportsWriteOnly:(Lorg/springframework/http/MediaType;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  protected void writeInternal(com.google.protobuf.Message, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_2
       1: invokeinterface #49,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: invokevirtual #26                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       9: astore_3
      10: aload_3
      11: ifnonnull     34
      14: aload_0
      15: aload_1
      16: invokevirtual #50                 // Method getDefaultContentType:(Lcom/google/protobuf/Message;)Lorg/springframework/http/MediaType;
      19: astore_3
      20: aload_3
      21: ifnull        28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #51                 // String No content type
      31: invokestatic  #52                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      34: aload_3
      35: invokevirtual #27                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      38: astore        4
      40: aload         4
      42: ifnonnull     50
      45: getstatic     #28                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      48: astore        4
      50: getstatic     #18                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      53: aload_3
      54: invokevirtual #30                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
      57: ifeq          93
      60: aload_0
      61: aload_2
      62: aload_1
      63: invokespecial #53                 // Method setProtoHeader:(Lorg/springframework/http/HttpOutputMessage;Lcom/google/protobuf/Message;)V
      66: aload_2
      67: invokeinterface #54,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      72: invokestatic  #55                 // Method com/google/protobuf/CodedOutputStream.newInstance:(Ljava/io/OutputStream;)Lcom/google/protobuf/CodedOutputStream;
      75: astore        5
      77: aload_1
      78: aload         5
      80: invokeinterface #56,  2           // InterfaceMethod com/google/protobuf/Message.writeTo:(Lcom/google/protobuf/CodedOutputStream;)V
      85: aload         5
      87: invokevirtual #57                 // Method com/google/protobuf/CodedOutputStream.flush:()V
      90: goto          178
      93: getstatic     #19                 // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
      96: aload_3
      97: invokevirtual #30                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
     100: ifeq          143
     103: new           #58                 // class java/io/OutputStreamWriter
     106: dup
     107: aload_2
     108: invokeinterface #54,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     113: aload         4
     115: invokespecial #59                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
     118: astore        5
     120: aload_1
     121: aload         5
     123: invokestatic  #60                 // Method com/google/protobuf/TextFormat.print:(Lcom/google/protobuf/MessageOrBuilder;Ljava/lang/Appendable;)V
     126: aload         5
     128: invokevirtual #61                 // Method java/io/OutputStreamWriter.flush:()V
     131: aload_2
     132: invokeinterface #54,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     137: invokevirtual #62                 // Method java/io/OutputStream.flush:()V
     140: goto          178
     143: aload_0
     144: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     147: ifnull        178
     150: aload_0
     151: getfield      #6                  // Field protobufFormatSupport:Lorg/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport;
     154: aload_1
     155: aload_2
     156: invokeinterface #54,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     161: aload_3
     162: aload         4
     164: invokeinterface #63,  5           // InterfaceMethod org/springframework/http/converter/protobuf/ProtobufHttpMessageConverter$ProtobufFormatSupport.print:(Lcom/google/protobuf/Message;Ljava/io/OutputStream;Lorg/springframework/http/MediaType;Ljava/nio/charset/Charset;)V
     169: aload_2
     170: invokeinterface #54,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
     175: invokevirtual #62                 // Method java/io/OutputStream.flush:()V
     178: return

  private void setProtoHeader(org.springframework.http.HttpOutputMessage, com.google.protobuf.Message);
    Code:
       0: aload_1
       1: invokeinterface #49,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       6: ldc           #65                 // String X-Protobuf-Schema
       8: aload_2
       9: invokeinterface #66,  1           // InterfaceMethod com/google/protobuf/Message.getDescriptorForType:()Lcom/google/protobuf/Descriptors$Descriptor;
      14: invokevirtual #67                 // Method com/google/protobuf/Descriptors$Descriptor.getFile:()Lcom/google/protobuf/Descriptors$FileDescriptor;
      17: invokevirtual #68                 // Method com/google/protobuf/Descriptors$FileDescriptor.getName:()Ljava/lang/String;
      20: invokevirtual #69                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      23: aload_1
      24: invokeinterface #49,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      29: ldc           #70                 // String X-Protobuf-Message
      31: aload_2
      32: invokeinterface #66,  1           // InterfaceMethod com/google/protobuf/Message.getDescriptorForType:()Lcom/google/protobuf/Descriptors$Descriptor;
      37: invokevirtual #71                 // Method com/google/protobuf/Descriptors$Descriptor.getFullName:()Ljava/lang/String;
      40: invokevirtual #69                 // Method org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
      43: return

  private static com.google.protobuf.Message$Builder getMessageBuilder(java.lang.Class<? extends com.google.protobuf.Message>) throws java.lang.Exception;
    Code:
       0: getstatic     #72                 // Field methodCache:Ljava/util/concurrent/ConcurrentHashMap;
       3: aload_0
       4: invokevirtual #73                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #74                 // class java/lang/reflect/Method
      10: astore_1
      11: aload_1
      12: ifnonnull     35
      15: aload_0
      16: ldc           #75                 // String newBuilder
      18: iconst_0
      19: anewarray     #76                 // class java/lang/Class
      22: invokevirtual #77                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      25: astore_1
      26: getstatic     #72                 // Field methodCache:Ljava/util/concurrent/ConcurrentHashMap;
      29: aload_0
      30: aload_1
      31: invokevirtual #78                 // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: aload_0
      37: iconst_0
      38: anewarray     #79                 // class java/lang/Object
      41: invokevirtual #80                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #81                 // class com/google/protobuf/Message$Builder
      47: areturn

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class com/google/protobuf/Message
       5: aload_2
       6: invokevirtual #82                 // Method writeInternal:(Lcom/google/protobuf/Message;Lorg/springframework/http/HttpOutputMessage;)V
       9: return

  protected java.lang.Object readInternal(java.lang.Class, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #83                 // Method readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Lcom/google/protobuf/Message;
       6: areturn

  protected org.springframework.http.MediaType getDefaultContentType(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class com/google/protobuf/Message
       5: invokevirtual #50                 // Method getDefaultContentType:(Lcom/google/protobuf/Message;)Lorg/springframework/http/MediaType;
       8: areturn

  static {};
    Code:
       0: getstatic     #84                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #28                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: new           #17                 // class org/springframework/http/MediaType
       9: dup
      10: ldc           #85                 // String application
      12: ldc           #86                 // String x-protobuf
      14: getstatic     #28                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      17: invokespecial #87                 // Method org/springframework/http/MediaType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      20: putstatic     #18                 // Field PROTOBUF:Lorg/springframework/http/MediaType;
      23: new           #88                 // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: invokespecial #89                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      30: putstatic     #72                 // Field methodCache:Ljava/util/concurrent/ConcurrentHashMap;
      33: return
}
