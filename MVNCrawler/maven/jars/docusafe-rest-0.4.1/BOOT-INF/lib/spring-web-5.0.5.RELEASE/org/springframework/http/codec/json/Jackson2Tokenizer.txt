Compiled from "Jackson2Tokenizer.java"
class org.springframework.http.codec.json.Jackson2Tokenizer {
  private final com.fasterxml.jackson.core.JsonParser parser;

  private final boolean tokenizeArrayElements;

  private com.fasterxml.jackson.databind.util.TokenBuffer tokenBuffer;

  private int objectDepth;

  private int arrayDepth;

  private final com.fasterxml.jackson.core.async.ByteArrayFeeder inputFeeder;

  private org.springframework.http.codec.json.Jackson2Tokenizer(com.fasterxml.jackson.core.JsonParser, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String \'parser\' must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      15: aload_0
      16: iload_2
      17: putfield      #5                  // Field tokenizeArrayElements:Z
      20: aload_0
      21: new           #6                  // class com/fasterxml/jackson/databind/util/TokenBuffer
      24: dup
      25: aload_1
      26: invokespecial #7                  // Method com/fasterxml/jackson/databind/util/TokenBuffer."<init>":(Lcom/fasterxml/jackson/core/JsonParser;)V
      29: putfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      32: aload_0
      33: aload_0
      34: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      37: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonParser.getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;
      40: checkcast     #10                 // class com/fasterxml/jackson/core/async/ByteArrayFeeder
      43: putfield      #11                 // Field inputFeeder:Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;
      46: return

  public static reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> tokenize(reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer>, com.fasterxml.jackson.core.JsonFactory, boolean);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonFactory.createNonBlockingByteArrayParser:()Lcom/fasterxml/jackson/core/JsonParser;
       4: astore_3
       5: new           #13                 // class org/springframework/http/codec/json/Jackson2Tokenizer
       8: dup
       9: aload_3
      10: iload_2
      11: invokespecial #14                 // Method "<init>":(Lcom/fasterxml/jackson/core/JsonParser;Z)V
      14: astore        4
      16: aload_0
      17: aload         4
      19: dup
      20: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: pop
      24: invokedynamic #16,  0             // InvokeDynamic #0:apply:(Lorg/springframework/http/codec/json/Jackson2Tokenizer;)Ljava/util/function/Function;
      29: invokedynamic #17,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      34: aload         4
      36: dup
      37: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: pop
      41: invokedynamic #18,  0             // InvokeDynamic #2:get:(Lorg/springframework/http/codec/json/Jackson2Tokenizer;)Ljava/util/function/Supplier;
      46: invokevirtual #19                 // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Supplier;)Lreactor/core/publisher/Flux;
      49: areturn
      50: astore_3
      51: aload_3
      52: invokestatic  #21                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      55: areturn
    Exception table:
       from    to  target type
           0    49    50   Class java/io/IOException

  private reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> tokenize(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
       6: newarray       byte
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #23,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.read:([B)Lorg/springframework/core/io/buffer/DataBuffer;
      16: pop
      17: aload_1
      18: invokestatic  #24                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      21: pop
      22: aload_0
      23: getfield      #11                 // Field inputFeeder:Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;
      26: aload_2
      27: iconst_0
      28: aload_2
      29: arraylength
      30: invokeinterface #25,  4           // InterfaceMethod com/fasterxml/jackson/core/async/ByteArrayFeeder.feedInput:([BII)V
      35: aload_0
      36: invokespecial #26                 // Method parseTokenBufferFlux:()Lreactor/core/publisher/Flux;
      39: areturn
      40: astore_3
      41: new           #28                 // class org/springframework/core/codec/DecodingException
      44: dup
      45: new           #29                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #31                 // String JSON decoding error:
      54: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #33                 // Method com/fasterxml/jackson/core/JsonProcessingException.getOriginalMessage:()Ljava/lang/String;
      61: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: aload_3
      68: invokespecial #35                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      71: invokestatic  #21                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      74: areturn
      75: astore_3
      76: aload_3
      77: invokestatic  #21                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      80: areturn
    Exception table:
       from    to  target type
          22    39    40   Class com/fasterxml/jackson/core/JsonProcessingException
          22    39    75   Class java/io/IOException

  private reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> endOfInput();
    Code:
       0: aload_0
       1: getfield      #11                 // Field inputFeeder:Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;
       4: invokeinterface #36,  1           // InterfaceMethod com/fasterxml/jackson/core/async/ByteArrayFeeder.endOfInput:()V
       9: aload_0
      10: invokespecial #26                 // Method parseTokenBufferFlux:()Lreactor/core/publisher/Flux;
      13: areturn
      14: astore_1
      15: new           #28                 // class org/springframework/core/codec/DecodingException
      18: dup
      19: new           #29                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #31                 // String JSON decoding error:
      28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #33                 // Method com/fasterxml/jackson/core/JsonProcessingException.getOriginalMessage:()Ljava/lang/String;
      35: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: aload_1
      42: invokespecial #35                 // Method org/springframework/core/codec/DecodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: invokestatic  #21                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      48: areturn
      49: astore_1
      50: aload_1
      51: invokestatic  #21                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      54: areturn
    Exception table:
       from    to  target type
           9    13    14   Class com/fasterxml/jackson/core/JsonProcessingException
           9    13    49   Class java/io/IOException

  private reactor.core.publisher.Flux<com.fasterxml.jackson.databind.util.TokenBuffer> parseTokenBufferFlux() throws java.io.IOException;
    Code:
       0: new           #37                 // class java/util/ArrayList
       3: dup
       4: invokespecial #38                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      12: invokevirtual #39                 // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
      15: astore_2
      16: aload_2
      17: getstatic     #40                 // Field com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;
      20: if_acmpeq     72
      23: aload_2
      24: ifnonnull     42
      27: aload_0
      28: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      31: invokevirtual #39                 // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;
      34: dup
      35: astore_2
      36: ifnonnull     42
      39: goto          72
      42: aload_0
      43: aload_2
      44: invokespecial #41                 // Method updateDepth:(Lcom/fasterxml/jackson/core/JsonToken;)V
      47: aload_0
      48: getfield      #5                  // Field tokenizeArrayElements:Z
      51: ifne          63
      54: aload_0
      55: aload_2
      56: aload_1
      57: invokespecial #42                 // Method processTokenNormal:(Lcom/fasterxml/jackson/core/JsonToken;Ljava/util/List;)V
      60: goto          69
      63: aload_0
      64: aload_2
      65: aload_1
      66: invokespecial #43                 // Method processTokenArray:(Lcom/fasterxml/jackson/core/JsonToken;Ljava/util/List;)V
      69: goto          8
      72: aload_1
      73: invokestatic  #44                 // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      76: areturn

  private void updateDepth(com.fasterxml.jackson.core.JsonToken);
    Code:
       0: getstatic     #45                 // Field org/springframework/http/codec/json/Jackson2Tokenizer$1.$SwitchMap$com$fasterxml$jackson$core$JsonToken:[I
       3: aload_1
       4: invokevirtual #46                 // Method com/fasterxml/jackson/core/JsonToken.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 4
                     1: 40
                     2: 53
                     3: 66
                     4: 79
               default: 89
          }
      40: aload_0
      41: dup
      42: getfield      #47                 // Field objectDepth:I
      45: iconst_1
      46: iadd
      47: putfield      #47                 // Field objectDepth:I
      50: goto          89
      53: aload_0
      54: dup
      55: getfield      #47                 // Field objectDepth:I
      58: iconst_1
      59: isub
      60: putfield      #47                 // Field objectDepth:I
      63: goto          89
      66: aload_0
      67: dup
      68: getfield      #48                 // Field arrayDepth:I
      71: iconst_1
      72: iadd
      73: putfield      #48                 // Field arrayDepth:I
      76: goto          89
      79: aload_0
      80: dup
      81: getfield      #48                 // Field arrayDepth:I
      84: iconst_1
      85: isub
      86: putfield      #48                 // Field arrayDepth:I
      89: return

  private void processTokenNormal(com.fasterxml.jackson.core.JsonToken, java.util.List<com.fasterxml.jackson.databind.util.TokenBuffer>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
       4: aload_0
       5: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
       8: invokevirtual #49                 // Method com/fasterxml/jackson/databind/util/TokenBuffer.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V
      11: aload_1
      12: invokevirtual #50                 // Method com/fasterxml/jackson/core/JsonToken.isStructEnd:()Z
      15: ifne          25
      18: aload_1
      19: invokevirtual #51                 // Method com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z
      22: ifeq          65
      25: aload_0
      26: getfield      #47                 // Field objectDepth:I
      29: ifne          65
      32: aload_0
      33: getfield      #48                 // Field arrayDepth:I
      36: ifne          65
      39: aload_2
      40: aload_0
      41: getfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      44: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: aload_0
      51: new           #6                  // class com/fasterxml/jackson/databind/util/TokenBuffer
      54: dup
      55: aload_0
      56: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      59: invokespecial #7                  // Method com/fasterxml/jackson/databind/util/TokenBuffer."<init>":(Lcom/fasterxml/jackson/core/JsonParser;)V
      62: putfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      65: return

  private void processTokenArray(com.fasterxml.jackson.core.JsonToken, java.util.List<com.fasterxml.jackson.databind.util.TokenBuffer>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // Method isTopLevelArrayToken:(Lcom/fasterxml/jackson/core/JsonToken;)Z
       5: ifne          19
       8: aload_0
       9: getfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      12: aload_0
      13: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      16: invokevirtual #49                 // Method com/fasterxml/jackson/databind/util/TokenBuffer.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V
      19: aload_0
      20: getfield      #47                 // Field objectDepth:I
      23: ifne          81
      26: aload_0
      27: getfield      #48                 // Field arrayDepth:I
      30: ifeq          41
      33: aload_0
      34: getfield      #48                 // Field arrayDepth:I
      37: iconst_1
      38: if_icmpne     81
      41: aload_1
      42: getstatic     #54                 // Field com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;
      45: if_acmpeq     55
      48: aload_1
      49: invokevirtual #51                 // Method com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z
      52: ifeq          81
      55: aload_2
      56: aload_0
      57: getfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      60: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_0
      67: new           #6                  // class com/fasterxml/jackson/databind/util/TokenBuffer
      70: dup
      71: aload_0
      72: getfield      #4                  // Field parser:Lcom/fasterxml/jackson/core/JsonParser;
      75: invokespecial #7                  // Method com/fasterxml/jackson/databind/util/TokenBuffer."<init>":(Lcom/fasterxml/jackson/core/JsonParser;)V
      78: putfield      #8                  // Field tokenBuffer:Lcom/fasterxml/jackson/databind/util/TokenBuffer;
      81: return

  private boolean isTopLevelArrayToken(com.fasterxml.jackson.core.JsonToken);
    Code:
       0: aload_0
       1: getfield      #47                 // Field objectDepth:I
       4: ifne          40
       7: aload_1
       8: getstatic     #55                 // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
      11: if_acmpne     22
      14: aload_0
      15: getfield      #48                 // Field arrayDepth:I
      18: iconst_1
      19: if_icmpeq     36
      22: aload_1
      23: getstatic     #56                 // Field com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;
      26: if_acmpne     40
      29: aload_0
      30: getfield      #48                 // Field arrayDepth:I
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn
}
