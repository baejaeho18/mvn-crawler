Compiled from "ServletServerHttpResponse.java"
class org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor extends org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<org.springframework.core.io.buffer.DataBuffer> {
  final org.springframework.http.server.reactive.ServletServerHttpResponse this$0;

  private org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       5: aload_0
       6: invokespecial #3                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor."<init>":()V
       9: return

  protected org.reactivestreams.Processor<? super org.springframework.core.io.buffer.DataBuffer, java.lang.Void> createWriteProcessor();
    Code:
       0: new           #4                  // class org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor
       3: dup
       4: aload_0
       5: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       8: aconst_null
       9: invokespecial #5                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor."<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;Lorg/springframework/http/server/reactive/ServletServerHttpResponse$1;)V
      12: astore_1
      13: aload_0
      14: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
      17: aload_1
      18: invokestatic  #6                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$402:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;)Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;
      21: pop
      22: aload_1
      23: areturn

  protected void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       9: ifeq          23
      12: aload_0
      13: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #9                  // String flush
      18: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
      27: invokestatic  #11                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$600:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
      30: return

  protected boolean isWritePossible();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: invokestatic  #12                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$700:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
       7: ireturn

  protected boolean isFlushPending();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: invokestatic  #13                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$800:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
       7: ireturn

  org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyFlushProcessor(org.springframework.http.server.reactive.ServletServerHttpResponse, org.springframework.http.server.reactive.ServletServerHttpResponse$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
       5: return
}
