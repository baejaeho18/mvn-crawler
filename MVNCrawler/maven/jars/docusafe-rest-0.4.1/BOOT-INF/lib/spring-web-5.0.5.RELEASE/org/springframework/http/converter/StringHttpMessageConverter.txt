Compiled from "StringHttpMessageConverter.java"
public class org.springframework.http.converter.StringHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<java.lang.String> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private volatile java.util.List<java.nio.charset.Charset> availableCharsets;

  private boolean writeAcceptCharset;

  public org.springframework.http.converter.StringHttpMessageConverter();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       4: invokespecial #2                  // Method "<init>":(Ljava/nio/charset/Charset;)V
       7: return

  public org.springframework.http.converter.StringHttpMessageConverter(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: anewarray     #3                  // class org/springframework/http/MediaType
       6: dup
       7: iconst_0
       8: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
      11: aastore
      12: dup
      13: iconst_1
      14: getstatic     #5                  // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
      17: aastore
      18: invokespecial #6                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":(Ljava/nio/charset/Charset;[Lorg/springframework/http/MediaType;)V
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field writeAcceptCharset:Z
      26: return

  public void setWriteAcceptCharset(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field writeAcceptCharset:Z
       5: return

  public boolean supports(java.lang.Class<?>);
    Code:
       0: ldc           #8                  // class java/lang/String
       2: aload_1
       3: if_acmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  protected java.lang.String readInternal(java.lang.Class<? extends java.lang.String>, org.springframework.http.HttpInputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #9,  1            // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
       7: invokevirtual #10                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      10: invokespecial #11                 // Method getContentTypeCharset:(Lorg/springframework/http/MediaType;)Ljava/nio/charset/Charset;
      13: astore_3
      14: aload_2
      15: invokeinterface #12,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      20: aload_3
      21: invokestatic  #13                 // Method org/springframework/util/StreamUtils.copyToString:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;
      24: areturn

  protected java.lang.Long getContentLength(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #11                 // Method getContentTypeCharset:(Lorg/springframework/http/MediaType;)Ljava/nio/charset/Charset;
       5: astore_3
       6: aload_1
       7: aload_3
       8: invokevirtual #14                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: arraylength
      12: i2l
      13: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: areturn

  protected void writeInternal(java.lang.String, org.springframework.http.HttpOutputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field writeAcceptCharset:Z
       4: ifeq          20
       7: aload_2
       8: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      13: aload_0
      14: invokevirtual #17                 // Method getAcceptedCharsets:()Ljava/util/List;
      17: invokevirtual #18                 // Method org/springframework/http/HttpHeaders.setAcceptCharset:(Ljava/util/List;)V
      20: aload_0
      21: aload_2
      22: invokeinterface #16,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      27: invokevirtual #10                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      30: invokespecial #11                 // Method getContentTypeCharset:(Lorg/springframework/http/MediaType;)Ljava/nio/charset/Charset;
      33: astore_3
      34: aload_1
      35: aload_3
      36: aload_2
      37: invokeinterface #19,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      42: invokestatic  #20                 // Method org/springframework/util/StreamUtils.copy:(Ljava/lang/String;Ljava/nio/charset/Charset;Ljava/io/OutputStream;)V
      45: return

  protected java.util.List<java.nio.charset.Charset> getAcceptedCharsets();
    Code:
       0: aload_0
       1: getfield      #21                 // Field availableCharsets:Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: new           #22                 // class java/util/ArrayList
      12: dup
      13: invokestatic  #23                 // Method java/nio/charset/Charset.availableCharsets:()Ljava/util/SortedMap;
      16: invokeinterface #24,  1           // InterfaceMethod java/util/SortedMap.values:()Ljava/util/Collection;
      21: invokespecial #25                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: astore_1
      25: aload_0
      26: aload_1
      27: putfield      #21                 // Field availableCharsets:Ljava/util/List;
      30: aload_1
      31: areturn

  private java.nio.charset.Charset getContentTypeCharset(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: invokevirtual #26                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
       8: ifnull        16
      11: aload_1
      12: invokevirtual #26                 // Method org/springframework/http/MediaType.getCharset:()Ljava/nio/charset/Charset;
      15: areturn
      16: aload_0
      17: invokevirtual #27                 // Method getDefaultCharset:()Ljava/nio/charset/Charset;
      20: astore_2
      21: aload_2
      22: ifnull        29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ldc           #28                 // String No default charset
      32: invokestatic  #29                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      35: aload_2
      36: areturn

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class java/lang/String
       5: aload_2
       6: invokevirtual #30                 // Method writeInternal:(Ljava/lang/String;Lorg/springframework/http/HttpOutputMessage;)V
       9: return

  protected java.lang.Object readInternal(java.lang.Class, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #31                 // Method readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/String;
       6: areturn

  protected java.lang.Long getContentLength(java.lang.Object, org.springframework.http.MediaType) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class java/lang/String
       5: aload_2
       6: invokevirtual #32                 // Method getContentLength:(Ljava/lang/String;Lorg/springframework/http/MediaType;)Ljava/lang/Long;
       9: areturn

  static {};
    Code:
       0: getstatic     #33                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       3: putstatic     #1                  // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: return
}
