Compiled from "Jaxb2XmlEncoder.java"
public class org.springframework.http.codec.xml.Jaxb2XmlEncoder extends org.springframework.core.codec.AbstractSingleValueEncoder<java.lang.Object> {
  private final org.springframework.http.codec.xml.JaxbContextContainer jaxbContexts;

  public org.springframework.http.codec.xml.Jaxb2XmlEncoder();
    Code:
       0: aload_0
       1: iconst_2
       2: anewarray     #1                  // class org/springframework/util/MimeType
       5: dup
       6: iconst_0
       7: getstatic     #2                  // Field org/springframework/util/MimeTypeUtils.APPLICATION_XML:Lorg/springframework/util/MimeType;
      10: aastore
      11: dup
      12: iconst_1
      13: getstatic     #3                  // Field org/springframework/util/MimeTypeUtils.TEXT_XML:Lorg/springframework/util/MimeType;
      16: aastore
      17: invokespecial #4                  // Method org/springframework/core/codec/AbstractSingleValueEncoder."<init>":([Lorg/springframework/util/MimeType;)V
      20: aload_0
      21: new           #5                  // class org/springframework/http/codec/xml/JaxbContextContainer
      24: dup
      25: invokespecial #6                  // Method org/springframework/http/codec/xml/JaxbContextContainer."<init>":()V
      28: putfield      #7                  // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
      31: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method org/springframework/core/codec/AbstractSingleValueEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
       6: ifeq          40
       9: aload_1
      10: ldc           #9                  // class java/lang/Object
      12: invokevirtual #10                 // Method org/springframework/core/ResolvableType.resolve:(Ljava/lang/Class;)Ljava/lang/Class;
      15: astore_3
      16: aload_3
      17: ldc           #11                 // class javax/xml/bind/annotation/XmlRootElement
      19: invokevirtual #12                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      22: ifne          34
      25: aload_3
      26: ldc           #13                 // class javax/xml/bind/annotation/XmlType
      28: invokevirtual #12                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn
      40: iconst_0
      41: ireturn

  protected reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(java.lang.Object, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: sipush        1024
       4: invokeinterface #14,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
       9: astore        6
      11: aload         6
      13: invokeinterface #15,  1           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asOutputStream:()Ljava/io/OutputStream;
      18: astore        7
      20: aload_1
      21: invokestatic  #16                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Object;)Ljava/lang/Class;
      24: astore        8
      26: aload_0
      27: getfield      #7                  // Field jaxbContexts:Lorg/springframework/http/codec/xml/JaxbContextContainer;
      30: aload         8
      32: invokevirtual #17                 // Method org/springframework/http/codec/xml/JaxbContextContainer.createMarshaller:(Ljava/lang/Class;)Ljavax/xml/bind/Marshaller;
      35: astore        9
      37: aload         9
      39: ldc           #19                 // String jaxb.encoding
      41: getstatic     #20                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      44: invokevirtual #21                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      47: invokeinterface #22,  3           // InterfaceMethod javax/xml/bind/Marshaller.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      52: aload         9
      54: aload_1
      55: aload         7
      57: invokeinterface #23,  3           // InterfaceMethod javax/xml/bind/Marshaller.marshal:(Ljava/lang/Object;Ljava/io/OutputStream;)V
      62: aload         6
      64: invokestatic  #24                 // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      67: areturn
      68: astore        6
      70: new           #26                 // class org/springframework/core/codec/EncodingException
      73: dup
      74: new           #27                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #29                 // String Could not marshal
      83: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #33                 // String  to XML
      95: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: aload         6
     103: invokespecial #35                 // Method org/springframework/core/codec/EncodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: invokestatic  #36                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
     109: areturn
     110: astore        6
     112: new           #38                 // class org/springframework/core/codec/CodecException
     115: dup
     116: ldc           #39                 // String Invalid JAXB configuration
     118: aload         6
     120: invokespecial #40                 // Method org/springframework/core/codec/CodecException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     123: invokestatic  #36                 // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
     126: areturn
    Exception table:
       from    to  target type
           0    67    68   Class javax/xml/bind/MarshalException
           0    67   110   Class javax/xml/bind/JAXBException
}
