Compiled from "AbstractListenerWriteFlushProcessor.java"
final class org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$4 extends org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State {
  org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor$State$4(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State."<init>":(Ljava/lang/String;ILorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$1;)V
       7: return

  public <T> void onFlushPossible(org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<T>);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.flush:()V
       4: goto          14
       7: astore_2
       8: aload_1
       9: aload_2
      10: invokevirtual #4                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.flushingFailed:(Ljava/lang/Throwable;)V
      13: return
      14: aload_1
      15: aload_0
      16: getstatic     #5                  // Field COMPLETED:Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State;
      19: invokestatic  #6                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.access$100:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State;Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State;)Z
      22: ifeq          35
      25: aload_1
      26: invokestatic  #7                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.access$300:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;)Lorg/springframework/http/server/reactive/WriteResultPublisher;
      29: invokevirtual #8                  // Method org/springframework/http/server/reactive/WriteResultPublisher.publishComplete:()V
      32: goto          49
      35: aload_1
      36: invokestatic  #9                  // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor.access$400:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;)Ljava/util/concurrent/atomic/AtomicReference;
      39: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      42: checkcast     #11                 // class org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State
      45: aload_1
      46: invokevirtual #12                 // Method org/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor$State.onComplete:(Lorg/springframework/http/server/reactive/AbstractListenerWriteFlushProcessor;)V
      49: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Throwable

  public <T> void onNext(org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<T>, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: return

  public <T> void onComplete(org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor<T>);
    Code:
       0: return
}
