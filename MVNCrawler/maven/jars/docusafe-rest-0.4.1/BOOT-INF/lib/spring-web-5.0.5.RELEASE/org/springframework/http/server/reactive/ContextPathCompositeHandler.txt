Compiled from "ContextPathCompositeHandler.java"
public class org.springframework.http.server.reactive.ContextPathCompositeHandler implements org.springframework.http.server.reactive.HttpHandler {
  private final java.util.Map<java.lang.String, org.springframework.http.server.reactive.HttpHandler> handlerMap;

  public org.springframework.http.server.reactive.ContextPathCompositeHandler(java.util.Map<java.lang.String, ? extends org.springframework.http.server.reactive.HttpHandler>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Handler map must not be empty
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Map;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokestatic  #4                  // Method initHandlers:(Ljava/util/Map;)Ljava/util/Map;
      15: putfield      #5                  // Field handlerMap:Ljava/util/Map;
      18: return

  private static java.util.Map<java.lang.String, org.springframework.http.server.reactive.HttpHandler> initHandlers(java.util.Map<java.lang.String, ? extends org.springframework.http.server.reactive.HttpHandler>);
    Code:
       0: aload_0
       1: invokeinterface #6,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: invokedynamic #7,  0              // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      11: invokeinterface #8,  2            // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      16: new           #9                  // class java/util/LinkedHashMap
      19: dup
      20: aload_0
      21: invokespecial #10                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      24: areturn

  private static void assertValidContextPath(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #11                 // String Context path must not be empty
       3: invokestatic  #12                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: ldc           #13                 // String /
       9: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          16
      15: return
      16: aload_0
      17: ldc           #13                 // String /
      19: invokevirtual #15                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      22: ldc           #16                 // String Context path must begin with \'/\'
      24: invokestatic  #17                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      27: aload_0
      28: ldc           #13                 // String /
      30: invokevirtual #18                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #19                 // String Context path must not end with \'/\'
      43: invokestatic  #17                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      46: return

  public reactor.core.publisher.Mono<java.lang.Void> handle(org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getPath:()Lorg/springframework/http/server/RequestPath;
       6: invokeinterface #21,  1           // InterfaceMethod org/springframework/http/server/RequestPath.pathWithinApplication:()Lorg/springframework/http/server/PathContainer;
      11: invokeinterface #22,  1           // InterfaceMethod org/springframework/http/server/PathContainer.value:()Ljava/lang/String;
      16: astore_3
      17: aload_0
      18: getfield      #5                  // Field handlerMap:Ljava/util/Map;
      21: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #24,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      31: aload_3
      32: invokedynamic #25,  0             // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      37: invokeinterface #26,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      42: invokeinterface #27,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      47: aload_1
      48: aload_2
      49: invokedynamic #28,  0             // InvokeDynamic #2:apply:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/function/Function;
      54: invokevirtual #29                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      57: aload_2
      58: invokedynamic #30,  0             // InvokeDynamic #3:get:(Lorg/springframework/http/server/reactive/ServerHttpResponse;)Ljava/util/function/Supplier;
      63: invokevirtual #31                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      66: checkcast     #32                 // class reactor/core/publisher/Mono
      69: areturn

  private static reactor.core.publisher.Mono lambda$handle$2(org.springframework.http.server.reactive.ServerHttpResponse);
    Code:
       0: aload_0
       1: getstatic     #33                 // Field org/springframework/http/HttpStatus.NOT_FOUND:Lorg/springframework/http/HttpStatus;
       4: invokeinterface #34,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setStatusCode:(Lorg/springframework/http/HttpStatus;)Z
       9: pop
      10: aload_0
      11: invokeinterface #35,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setComplete:()Lreactor/core/publisher/Mono;
      16: pop
      17: invokestatic  #36                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      20: areturn

  private static reactor.core.publisher.Mono lambda$handle$1(org.springframework.http.server.reactive.ServerHttpRequest, org.springframework.http.server.reactive.ServerHttpResponse, java.util.Map$Entry);
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokeinterface #20,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getPath:()Lorg/springframework/http/server/RequestPath;
      13: invokeinterface #39,  1           // InterfaceMethod org/springframework/http/server/RequestPath.contextPath:()Lorg/springframework/http/server/PathContainer;
      18: invokeinterface #22,  1           // InterfaceMethod org/springframework/http/server/PathContainer.value:()Ljava/lang/String;
      23: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      32: checkcast     #42                 // class java/lang/String
      35: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: astore_3
      42: aload_0
      43: invokeinterface #44,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.mutate:()Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
      48: aload_3
      49: invokeinterface #45,  2           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest$Builder.contextPath:(Ljava/lang/String;)Lorg/springframework/http/server/reactive/ServerHttpRequest$Builder;
      54: invokeinterface #46,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest$Builder.build:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      59: astore        4
      61: aload_2
      62: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: checkcast     #48                 // class org/springframework/http/server/reactive/HttpHandler
      70: aload         4
      72: aload_1
      73: invokeinterface #49,  3           // InterfaceMethod org/springframework/http/server/reactive/HttpHandler.handle:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Lorg/springframework/http/server/reactive/ServerHttpResponse;)Lreactor/core/publisher/Mono;
      78: areturn

  private static boolean lambda$handle$0(java.lang.String, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #42                 // class java/lang/String
      10: invokevirtual #15                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ireturn
}
