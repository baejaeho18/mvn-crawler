Compiled from "ResponseStatusExceptionHandler.java"
public class org.springframework.web.server.handler.ResponseStatusExceptionHandler implements org.springframework.web.server.WebExceptionHandler {
  private static final org.apache.commons.logging.Log logger;

  public org.springframework.web.server.handler.ResponseStatusExceptionHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public reactor.core.publisher.Mono<java.lang.Void> handle(org.springframework.web.server.ServerWebExchange, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #2                  // Method resolveStatus:(Ljava/lang/Throwable;)Lorg/springframework/http/HttpStatus;
       5: astore_3
       6: aload_3
       7: ifnull        114
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
      16: aload_3
      17: invokeinterface #4,  2            // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setStatusCode:(Lorg/springframework/http/HttpStatus;)Z
      22: ifeq          114
      25: aload_3
      26: invokevirtual #5                  // Method org/springframework/http/HttpStatus.is5xxServerError:()Z
      29: ifeq          54
      32: getstatic     #6                  // Field logger:Lorg/apache/commons/logging/Log;
      35: aload_0
      36: aload_1
      37: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      42: aload_2
      43: invokespecial #8                  // Method buildMessage:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Ljava/lang/Throwable;)Ljava/lang/String;
      46: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      51: goto          102
      54: aload_3
      55: getstatic     #10                 // Field org/springframework/http/HttpStatus.BAD_REQUEST:Lorg/springframework/http/HttpStatus;
      58: if_acmpne     83
      61: getstatic     #6                  // Field logger:Lorg/apache/commons/logging/Log;
      64: aload_0
      65: aload_1
      66: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      71: aload_2
      72: invokespecial #8                  // Method buildMessage:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Ljava/lang/Throwable;)Ljava/lang/String;
      75: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      80: goto          102
      83: getstatic     #6                  // Field logger:Lorg/apache/commons/logging/Log;
      86: aload_0
      87: aload_1
      88: invokeinterface #7,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getRequest:()Lorg/springframework/http/server/reactive/ServerHttpRequest;
      93: aload_2
      94: invokespecial #8                  // Method buildMessage:(Lorg/springframework/http/server/reactive/ServerHttpRequest;Ljava/lang/Throwable;)Ljava/lang/String;
      97: invokeinterface #12,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     102: aload_1
     103: invokeinterface #3,  1            // InterfaceMethod org/springframework/web/server/ServerWebExchange.getResponse:()Lorg/springframework/http/server/reactive/ServerHttpResponse;
     108: invokeinterface #13,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpResponse.setComplete:()Lreactor/core/publisher/Mono;
     113: areturn
     114: aload_2
     115: invokestatic  #14                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     118: areturn

  private java.lang.String buildMessage(org.springframework.http.server.reactive.ServerHttpRequest, java.lang.Throwable);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String Failed to handle request [
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokeinterface #19,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getMethod:()Lorg/springframework/http/HttpMethod;
      18: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #21                 // String
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokeinterface #22,  1           // InterfaceMethod org/springframework/http/server/reactive/ServerHttpRequest.getURI:()Ljava/net/URI;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: ldc           #23                 // String ]:
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #24                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      44: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: areturn

  private org.springframework.http.HttpStatus resolveStatus(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method determineStatus:(Ljava/lang/Throwable;)Lorg/springframework/http/HttpStatus;
       5: astore_2
       6: aload_2
       7: ifnonnull     25
      10: aload_1
      11: invokevirtual #27                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      14: astore_3
      15: aload_3
      16: ifnull        25
      19: aload_0
      20: aload_3
      21: invokespecial #2                  // Method resolveStatus:(Ljava/lang/Throwable;)Lorg/springframework/http/HttpStatus;
      24: astore_2
      25: aload_2
      26: areturn

  protected org.springframework.http.HttpStatus determineStatus(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #28                 // class org/springframework/web/server/ResponseStatusException
       4: ifeq          15
       7: aload_1
       8: checkcast     #28                 // class org/springframework/web/server/ResponseStatusException
      11: invokevirtual #29                 // Method org/springframework/web/server/ResponseStatusException.getStatus:()Lorg/springframework/http/HttpStatus;
      14: areturn
      15: aconst_null
      16: areturn

  static {};
    Code:
       0: ldc           #30                 // class org/springframework/web/server/handler/ResponseStatusExceptionHandler
       2: invokestatic  #31                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #6                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
