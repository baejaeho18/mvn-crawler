Compiled from "InMemoryWebSessionStore.java"
public class org.springframework.web.server.session.InMemoryWebSessionStore implements org.springframework.web.server.session.WebSessionStore {
  private static final java.time.Duration EXPIRATION_CHECK_PERIOD;

  private static final org.springframework.util.IdGenerator idGenerator;

  private java.time.Clock clock;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.web.server.session.InMemoryWebSessionStore$InMemoryWebSession> sessions;

  private volatile java.time.Instant nextExpirationCheckTime;

  private final java.util.concurrent.locks.ReentrantLock expirationCheckLock;

  public org.springframework.web.server.session.InMemoryWebSessionStore();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // String GMT
       7: invokestatic  #5                  // Method java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
      10: invokestatic  #6                  // Method java/time/Clock.system:(Ljava/time/ZoneId;)Ljava/time/Clock;
      13: putfield      #7                  // Field clock:Ljava/time/Clock;
      16: aload_0
      17: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      24: putfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      27: aload_0
      28: aload_0
      29: getfield      #7                  // Field clock:Ljava/time/Clock;
      32: invokestatic  #10                 // Method java/time/Instant.now:(Ljava/time/Clock;)Ljava/time/Instant;
      35: getstatic     #11                 // Field EXPIRATION_CHECK_PERIOD:Ljava/time/Duration;
      38: invokevirtual #12                 // Method java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
      41: putfield      #13                 // Field nextExpirationCheckTime:Ljava/time/Instant;
      44: aload_0
      45: new           #14                 // class java/util/concurrent/locks/ReentrantLock
      48: dup
      49: invokespecial #15                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      52: putfield      #16                 // Field expirationCheckLock:Ljava/util/concurrent/locks/ReentrantLock;
      55: return

  public void setClock(java.time.Clock);
    Code:
       0: aload_1
       1: ldc           #17                 // String Clock is required
       3: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field clock:Ljava/time/Clock;
      11: aload_0
      12: aload_0
      13: getfield      #7                  // Field clock:Ljava/time/Clock;
      16: invokestatic  #10                 // Method java/time/Instant.now:(Ljava/time/Clock;)Ljava/time/Instant;
      19: putfield      #13                 // Field nextExpirationCheckTime:Ljava/time/Instant;
      22: return

  public java.time.Clock getClock();
    Code:
       0: aload_0
       1: getfield      #7                  // Field clock:Ljava/time/Clock;
       4: areturn

  public reactor.core.publisher.Mono<org.springframework.web.server.WebSession> createWebSession();
    Code:
       0: aload_0
       1: invokedynamic #19,  0             // InvokeDynamic #0:get:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)Ljava/util/function/Supplier;
       6: invokestatic  #20                 // Method reactor/core/publisher/Mono.fromSupplier:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
       9: areturn

  public reactor.core.publisher.Mono<org.springframework.web.server.WebSession> retrieveSession(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field clock:Ljava/time/Clock;
       4: invokestatic  #10                 // Method java/time/Instant.now:(Ljava/time/Clock;)Ljava/time/Instant;
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      12: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
      17: ifne          36
      20: aload_2
      21: aload_0
      22: getfield      #13                 // Field nextExpirationCheckTime:Ljava/time/Instant;
      25: invokevirtual #22                 // Method java/time/Instant.isBefore:(Ljava/time/Instant;)Z
      28: ifne          36
      31: aload_0
      32: aload_2
      33: invokespecial #23                 // Method checkExpiredSessions:(Ljava/time/Instant;)V
      36: aload_0
      37: getfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      40: aload_1
      41: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #25                 // class org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession
      49: astore_3
      50: aload_3
      51: ifnonnull     58
      54: invokestatic  #26                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      57: areturn
      58: aload_3
      59: aload_2
      60: invokestatic  #27                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession.access$000:(Lorg/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession;Ljava/time/Instant;)Z
      63: ifeq          81
      66: aload_0
      67: getfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      70: aload_1
      71: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: invokestatic  #26                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      80: areturn
      81: aload_3
      82: aload_2
      83: invokestatic  #29                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession.access$100:(Lorg/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession;Ljava/time/Instant;)V
      86: aload_3
      87: invokestatic  #30                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      90: areturn

  private void checkExpiredSessions(java.time.Instant);
    Code:
       0: aload_0
       1: getfield      #16                 // Field expirationCheckLock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #31                 // Method java/util/concurrent/locks/ReentrantLock.tryLock:()Z
       7: ifeq          110
      10: aload_0
      11: getfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      19: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          66
      34: aload_2
      35: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #25                 // class org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession
      43: astore_3
      44: aload_3
      45: aload_1
      46: invokestatic  #27                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession.access$000:(Lorg/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession;Ljava/time/Instant;)Z
      49: ifeq          63
      52: aload_2
      53: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.remove:()V
      58: aload_3
      59: invokevirtual #37                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession.invalidate:()Lreactor/core/publisher/Mono;
      62: pop
      63: goto          25
      66: aload_0
      67: aload_1
      68: getstatic     #11                 // Field EXPIRATION_CHECK_PERIOD:Ljava/time/Duration;
      71: invokevirtual #12                 // Method java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
      74: putfield      #13                 // Field nextExpirationCheckTime:Ljava/time/Instant;
      77: aload_0
      78: getfield      #16                 // Field expirationCheckLock:Ljava/util/concurrent/locks/ReentrantLock;
      81: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      84: goto          110
      87: astore        4
      89: aload_0
      90: aload_1
      91: getstatic     #11                 // Field EXPIRATION_CHECK_PERIOD:Ljava/time/Duration;
      94: invokevirtual #12                 // Method java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;
      97: putfield      #13                 // Field nextExpirationCheckTime:Ljava/time/Instant;
     100: aload_0
     101: getfield      #16                 // Field expirationCheckLock:Ljava/util/concurrent/locks/ReentrantLock;
     104: invokevirtual #38                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     107: aload         4
     109: athrow
     110: return
    Exception table:
       from    to  target type
          10    66    87   any
          87    89    87   any

  public reactor.core.publisher.Mono<java.lang.Void> removeSession(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: invokestatic  #26                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      14: areturn

  public reactor.core.publisher.Mono<org.springframework.web.server.WebSession> updateLastAccessTime(org.springframework.web.server.WebSession);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #39,  0             // InvokeDynamic #1:get:(Lorg/springframework/web/server/session/InMemoryWebSessionStore;Lorg/springframework/web/server/WebSession;)Ljava/util/function/Supplier;
       7: invokestatic  #20                 // Method reactor/core/publisher/Mono.fromSupplier:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      10: areturn

  private org.springframework.web.server.WebSession lambda$updateLastAccessTime$1(org.springframework.web.server.WebSession);
    Code:
       0: ldc           #25                 // class org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession
       2: aload_1
       3: invokestatic  #40                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
       6: aload_1
       7: checkcast     #25                 // class org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession
      10: astore_2
      11: aload_2
      12: aload_0
      13: invokevirtual #41                 // Method getClock:()Ljava/time/Clock;
      16: invokestatic  #10                 // Method java/time/Instant.now:(Ljava/time/Clock;)Ljava/time/Instant;
      19: invokestatic  #29                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession.access$100:(Lorg/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession;Ljava/time/Instant;)V
      22: aload_2
      23: areturn

  private org.springframework.web.server.WebSession lambda$createWebSession$0();
    Code:
       0: new           #25                 // class org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession
       3: dup
       4: aload_0
       5: invokespecial #42                 // Method org/springframework/web/server/session/InMemoryWebSessionStore$InMemoryWebSession."<init>":(Lorg/springframework/web/server/session/InMemoryWebSessionStore;)V
       8: areturn

  static org.springframework.util.IdGenerator access$200();
    Code:
       0: getstatic     #2                  // Field idGenerator:Lorg/springframework/util/IdGenerator;
       3: areturn

  static java.util.concurrent.ConcurrentMap access$300(org.springframework.web.server.session.InMemoryWebSessionStore);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static {};
    Code:
       0: ldc2_w        #43                 // long 60l
       3: invokestatic  #45                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
       6: putstatic     #11                 // Field EXPIRATION_CHECK_PERIOD:Ljava/time/Duration;
       9: new           #46                 // class org/springframework/util/JdkIdGenerator
      12: dup
      13: invokespecial #47                 // Method org/springframework/util/JdkIdGenerator."<init>":()V
      16: putstatic     #2                  // Field idGenerator:Lorg/springframework/util/IdGenerator;
      19: return
}
