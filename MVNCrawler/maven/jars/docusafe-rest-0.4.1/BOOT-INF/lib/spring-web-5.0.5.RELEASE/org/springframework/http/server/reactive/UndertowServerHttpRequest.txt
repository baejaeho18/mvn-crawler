Compiled from "UndertowServerHttpRequest.java"
class org.springframework.http.server.reactive.UndertowServerHttpRequest extends org.springframework.http.server.reactive.AbstractServerHttpRequest {
  private final io.undertow.server.HttpServerExchange exchange;

  private final org.springframework.http.server.reactive.UndertowServerHttpRequest$RequestBodyPublisher body;

  public org.springframework.http.server.reactive.UndertowServerHttpRequest(io.undertow.server.HttpServerExchange, org.springframework.core.io.buffer.DataBufferFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method initUri:(Lio/undertow/server/HttpServerExchange;)Ljava/net/URI;
       5: ldc           #2                  // String
       7: aload_1
       8: invokestatic  #3                  // Method initHeaders:(Lio/undertow/server/HttpServerExchange;)Lorg/springframework/http/HttpHeaders;
      11: invokespecial #4                  // Method org/springframework/http/server/reactive/AbstractServerHttpRequest."<init>":(Ljava/net/URI;Ljava/lang/String;Lorg/springframework/http/HttpHeaders;)V
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      19: aload_0
      20: new           #6                  // class org/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher
      23: dup
      24: aload_1
      25: aload_2
      26: invokespecial #7                  // Method org/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher."<init>":(Lio/undertow/server/HttpServerExchange;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
      29: putfield      #8                  // Field body:Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;
      32: aload_0
      33: getfield      #8                  // Field body:Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;
      36: aload_1
      37: invokestatic  #9                  // Method org/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher.access$000:(Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;Lio/undertow/server/HttpServerExchange;)V
      40: return

  private static java.net.URI initUri(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: ldc           #10                 // String HttpServerExchange is required.
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #12                 // Method io/undertow/server/HttpServerExchange.getRequestURL:()Ljava/lang/String;
      10: astore_1
      11: aload_0
      12: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getQueryString:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: invokestatic  #14                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: aload_1
      24: goto          50
      27: new           #15                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      34: aload_1
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #18                 // String ?
      40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_2
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: astore_3
      51: aload_3
      52: invokestatic  #20                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      55: areturn

  private static org.springframework.http.HttpHeaders initHeaders(io.undertow.server.HttpServerExchange);
    Code:
       0: new           #21                 // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #22                 // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      12: invokevirtual #24                 // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          51
      25: aload_2
      26: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #27                 // class io/undertow/util/HeaderValues
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokevirtual #28                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      40: invokevirtual #29                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      43: aload_3
      44: invokevirtual #30                 // Method org/springframework/http/HttpHeaders.put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      47: pop
      48: goto          16
      51: aload_1
      52: areturn

  public java.lang.String getMethodValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       7: invokevirtual #29                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
      10: areturn

  protected org.springframework.util.MultiValueMap<java.lang.String, org.springframework.http.HttpCookie> initCookies();
    Code:
       0: new           #32                 // class org/springframework/util/LinkedMultiValueMap
       3: dup
       4: invokespecial #33                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      12: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getRequestCookies:()Ljava/util/Map;
      15: invokeinterface #35,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      20: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          92
      35: aload_2
      36: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #37                 // class java/lang/String
      44: astore_3
      45: aload_0
      46: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      49: invokevirtual #34                 // Method io/undertow/server/HttpServerExchange.getRequestCookies:()Ljava/util/Map;
      52: aload_3
      53: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #39                 // class io/undertow/server/handlers/Cookie
      61: astore        4
      63: new           #40                 // class org/springframework/http/HttpCookie
      66: dup
      67: aload_3
      68: aload         4
      70: invokeinterface #41,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      75: invokespecial #42                 // Method org/springframework/http/HttpCookie."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      78: astore        5
      80: aload_1
      81: aload_3
      82: aload         5
      84: invokeinterface #43,  3           // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      89: goto          26
      92: aload_1
      93: areturn

  public java.net.InetSocketAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.getSourceAddress:()Ljava/net/InetSocketAddress;
       7: areturn

  protected org.springframework.http.server.reactive.SslInfo initSslInfo();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #45                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokevirtual #46                 // Method io/undertow/server/ServerConnection.getSslSession:()Ljavax/net/ssl/SSLSession;
      10: astore_1
      11: aload_1
      12: ifnull        24
      15: new           #47                 // class org/springframework/http/server/reactive/DefaultSslInfo
      18: dup
      19: aload_1
      20: invokespecial #48                 // Method org/springframework/http/server/reactive/DefaultSslInfo."<init>":(Ljavax/net/ssl/SSLSession;)V
      23: areturn
      24: aconst_null
      25: areturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> getBody();
    Code:
       0: aload_0
       1: getfield      #8                  // Field body:Lorg/springframework/http/server/reactive/UndertowServerHttpRequest$RequestBodyPublisher;
       4: invokestatic  #49                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       7: areturn

  public <T> T getNativeRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: areturn
}
