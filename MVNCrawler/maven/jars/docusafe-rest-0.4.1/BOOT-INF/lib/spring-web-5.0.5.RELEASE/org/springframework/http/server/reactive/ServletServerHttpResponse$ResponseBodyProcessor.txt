Compiled from "ServletServerHttpResponse.java"
class org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor extends org.springframework.http.server.reactive.AbstractListenerWriteProcessor<org.springframework.core.io.buffer.DataBuffer> {
  final org.springframework.http.server.reactive.ServletServerHttpResponse this$0;

  private org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor(org.springframework.http.server.reactive.ServletServerHttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       5: aload_0
       6: invokespecial #3                  // Method org/springframework/http/server/reactive/AbstractListenerWriteProcessor."<init>":()V
       9: return

  protected boolean isWritePossible();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: invokestatic  #4                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$700:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
       7: ireturn

  protected boolean isDataEmpty(org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  protected boolean write(org.springframework.core.io.buffer.DataBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: invokestatic  #6                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$800:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
       7: ifeq          40
      10: aload_0
      11: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      14: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      19: ifeq          33
      22: aload_0
      23: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      26: ldc           #9                  // String flush
      28: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
      37: invokestatic  #11                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$600:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
      40: aload_0
      41: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
      44: invokestatic  #4                  // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$700:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)Z
      47: istore_2
      48: aload_0
      49: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      52: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      57: ifeq          97
      60: aload_0
      61: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
      64: new           #12                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #14                 // String write:
      73: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: ldc           #17                 // String  ready:
      82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iload_2
      86: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      89: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      97: aload_1
      98: invokeinterface #5,  1            // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.readableByteCount:()I
     103: istore_3
     104: iload_2
     105: ifeq          225
     108: iload_3
     109: ifle          225
     112: aload_0
     113: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
     116: aload_1
     117: invokevirtual #20                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.writeToOutputStream:(Lorg/springframework/core/io/buffer/DataBuffer;)I
     120: istore        4
     122: aload_0
     123: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
     126: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     131: ifeq          172
     134: aload_0
     135: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
     138: new           #12                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #21                 // String written:
     147: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: iload         4
     152: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: ldc           #23                 // String  total:
     157: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: iload_3
     161: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     164: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     172: iload         4
     174: iload_3
     175: if_icmpne     225
     178: aload_0
     179: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
     182: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     187: ifeq          218
     190: aload_0
     191: getfield      #7                  // Field logger:Lorg/apache/commons/logging/Log;
     194: new           #12                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     201: ldc           #24                 // String releaseData:
     203: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: aload_1
     207: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     210: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     218: aload_1
     219: invokestatic  #25                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     222: pop
     223: iconst_1
     224: ireturn
     225: iconst_0
     226: ireturn

  protected void writingComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/http/server/reactive/ServletServerHttpResponse;
       4: aconst_null
       5: invokestatic  #26                 // Method org/springframework/http/server/reactive/ServletServerHttpResponse.access$402:(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;)Lorg/springframework/http/server/reactive/ServletServerHttpResponse$ResponseBodyProcessor;
       8: pop
       9: return

  protected boolean write(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class org/springframework/core/io/buffer/DataBuffer
       5: invokevirtual #28                 // Method write:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
       8: ireturn

  protected boolean isDataEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class org/springframework/core/io/buffer/DataBuffer
       5: invokevirtual #29                 // Method isDataEmpty:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
       8: ireturn

  org.springframework.http.server.reactive.ServletServerHttpResponse$ResponseBodyProcessor(org.springframework.http.server.reactive.ServletServerHttpResponse, org.springframework.http.server.reactive.ServletServerHttpResponse$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/http/server/reactive/ServletServerHttpResponse;)V
       5: return
}
