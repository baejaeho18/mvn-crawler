Compiled from "ExceptionHandlerMethodResolver.java"
public class org.springframework.web.method.annotation.ExceptionHandlerMethodResolver {
  public static final org.springframework.util.ReflectionUtils$MethodFilter EXCEPTION_HANDLER_METHODS;

  private final java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.reflect.Method> mappedMethods;

  private final java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.reflect.Method> exceptionLookupCache;

  public org.springframework.web.method.annotation.ExceptionHandlerMethodResolver(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: bipush        16
      11: invokespecial #3                  // Method java/util/HashMap."<init>":(I)V
      14: putfield      #4                  // Field mappedMethods:Ljava/util/Map;
      17: aload_0
      18: new           #5                  // class org/springframework/util/ConcurrentReferenceHashMap
      21: dup
      22: bipush        16
      24: invokespecial #6                  // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      27: putfield      #7                  // Field exceptionLookupCache:Ljava/util/Map;
      30: aload_1
      31: getstatic     #8                  // Field EXCEPTION_HANDLER_METHODS:Lorg/springframework/util/ReflectionUtils$MethodFilter;
      34: invokestatic  #9                  // Method org/springframework/core/MethodIntrospector.selectMethods:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)Ljava/util/Set;
      37: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          109
      52: aload_2
      53: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #13                 // class java/lang/reflect/Method
      61: astore_3
      62: aload_0
      63: aload_3
      64: invokespecial #14                 // Method detectExceptionMappings:(Ljava/lang/reflect/Method;)Ljava/util/List;
      67: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      72: astore        4
      74: aload         4
      76: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          106
      84: aload         4
      86: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #16                 // class java/lang/Class
      94: astore        5
      96: aload_0
      97: aload         5
      99: aload_3
     100: invokespecial #17                 // Method addExceptionMapping:(Ljava/lang/Class;Ljava/lang/reflect/Method;)V
     103: goto          74
     106: goto          43
     109: return

  private java.util.List<java.lang.Class<? extends java.lang.Throwable>> detectExceptionMappings(java.lang.reflect.Method);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #20                 // Method detectAnnotationExceptionMappings:(Ljava/lang/reflect/Method;Ljava/util/List;)V
      14: aload_2
      15: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      20: ifeq          73
      23: aload_1
      24: invokevirtual #22                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      27: astore_3
      28: aload_3
      29: arraylength
      30: istore        4
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload         4
      39: if_icmpge     73
      42: aload_3
      43: iload         5
      45: aaload
      46: astore        6
      48: ldc           #23                 // class java/lang/Throwable
      50: aload         6
      52: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      55: ifeq          67
      58: aload_2
      59: aload         6
      61: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: iinc          5, 1
      70: goto          35
      73: aload_2
      74: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      79: ifeq          109
      82: new           #26                 // class java/lang/IllegalStateException
      85: dup
      86: new           #27                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #29                 // String No exception types mapped to
      95: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_2
     110: areturn

  protected void detectAnnotationExceptionMappings(java.lang.reflect.Method, java.util.List<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: aload_1
       1: ldc           #34                 // class org/springframework/web/bind/annotation/ExceptionHandler
       3: invokestatic  #35                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #34                 // class org/springframework/web/bind/annotation/ExceptionHandler
       9: astore_3
      10: aload_3
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #36                 // String No ExceptionHandler annotation
      21: invokestatic  #37                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      24: aload_2
      25: aload_3
      26: invokeinterface #38,  1           // InterfaceMethod org/springframework/web/bind/annotation/ExceptionHandler.value:()[Ljava/lang/Class;
      31: invokestatic  #39                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokeinterface #40,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: return

  private void addExceptionMapping(java.lang.Class<? extends java.lang.Throwable>, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #13                 // class java/lang/reflect/Method
      14: astore_3
      15: aload_3
      16: ifnull        77
      19: aload_3
      20: aload_2
      21: invokevirtual #42                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      24: ifne          77
      27: new           #26                 // class java/lang/IllegalStateException
      30: dup
      31: new           #27                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #43                 // String Ambiguous @ExceptionHandler method mapped for [
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #44                 // String ]: {
      49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_3
      53: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: ldc           #45                 // String ,
      58: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #46                 // String }
      67: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: return

  public boolean hasExceptionMappings();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.reflect.Method resolveMethod(java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method resolveMethodByThrowable:(Ljava/lang/Throwable;)Ljava/lang/reflect/Method;
       5: areturn

  public java.lang.reflect.Method resolveMethodByThrowable(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #50                 // Method resolveMethodByExceptionType:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
       8: astore_2
       9: aload_2
      10: ifnonnull     31
      13: aload_1
      14: invokevirtual #51                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      17: astore_3
      18: aload_3
      19: ifnull        31
      22: aload_0
      23: aload_3
      24: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #50                 // Method resolveMethodByExceptionType:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      30: astore_2
      31: aload_2
      32: areturn

  public java.lang.reflect.Method resolveMethodByExceptionType(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exceptionLookupCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #13                 // class java/lang/reflect/Method
      13: astore_2
      14: aload_2
      15: ifnonnull     36
      18: aload_0
      19: aload_1
      20: invokespecial #53                 // Method getMappedMethod:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      23: astore_2
      24: aload_0
      25: getfield      #7                  // Field exceptionLookupCache:Ljava/util/Map;
      28: aload_1
      29: aload_2
      30: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_2
      37: areturn

  private java.lang.reflect.Method getMappedMethod(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
      12: invokeinterface #54,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          64
      32: aload_3
      33: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #16                 // class java/lang/Class
      41: astore        4
      43: aload         4
      45: aload_1
      46: invokevirtual #24                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      49: ifeq          61
      52: aload_2
      53: aload         4
      55: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: goto          23
      64: aload_2
      65: invokeinterface #21,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      70: ifne          107
      73: aload_2
      74: new           #55                 // class org/springframework/core/ExceptionDepthComparator
      77: dup
      78: aload_1
      79: invokespecial #56                 // Method org/springframework/core/ExceptionDepthComparator."<init>":(Ljava/lang/Class;)V
      82: invokeinterface #57,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      87: aload_0
      88: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
      91: aload_2
      92: iconst_0
      93: invokeinterface #58,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      98: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #13                 // class java/lang/reflect/Method
     106: areturn
     107: aconst_null
     108: areturn

  private static boolean lambda$static$0(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: ldc           #34                 // class org/springframework/web/bind/annotation/ExceptionHandler
       3: invokestatic  #35                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static {};
    Code:
       0: invokedynamic #59,  0             // InvokeDynamic #0:matches:()Lorg/springframework/util/ReflectionUtils$MethodFilter;
       5: putstatic     #8                  // Field EXCEPTION_HANDLER_METHODS:Lorg/springframework/util/ReflectionUtils$MethodFilter;
       8: return
}
