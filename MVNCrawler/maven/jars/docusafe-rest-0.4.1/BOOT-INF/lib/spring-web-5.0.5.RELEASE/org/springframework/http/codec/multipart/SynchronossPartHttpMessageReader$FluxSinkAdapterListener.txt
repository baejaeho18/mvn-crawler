Compiled from "SynchronossPartHttpMessageReader.java"
class org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$FluxSinkAdapterListener implements org.synchronoss.cloud.nio.multipart.NioMultipartParserListener {
  private final reactor.core.publisher.FluxSink<org.springframework.http.codec.multipart.Part> sink;

  private final org.springframework.core.io.buffer.DataBufferFactory bufferFactory;

  private final org.synchronoss.cloud.nio.multipart.MultipartContext context;

  private final java.util.concurrent.atomic.AtomicInteger terminated;

  org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader$FluxSinkAdapterListener(reactor.core.publisher.FluxSink<org.springframework.http.codec.multipart.Part>, org.springframework.core.io.buffer.DataBufferFactory, org.synchronoss.cloud.nio.multipart.MultipartContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field terminated:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field sink:Lreactor/core/publisher/FluxSink;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field context:Lorg/synchronoss/cloud/nio/multipart/MultipartContext;
      31: return

  public void onPartFinished(org.synchronoss.cloud.nio.stream.storage.StreamStorage, java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: new           #8                  // class org/springframework/http/HttpHeaders
       3: dup
       4: invokespecial #9                  // Method org/springframework/http/HttpHeaders."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokevirtual #10                 // Method org/springframework/http/HttpHeaders.putAll:(Ljava/util/Map;)V
      13: aload_0
      14: getfield      #5                  // Field sink:Lreactor/core/publisher/FluxSink;
      17: aload_0
      18: aload_1
      19: aload_3
      20: invokespecial #11                 // Method createPart:(Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/codec/multipart/Part;
      23: invokeinterface #12,  2           // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
      28: pop
      29: return

  private org.springframework.http.codec.multipart.Part createPart(org.synchronoss.cloud.nio.stream.storage.StreamStorage, org.springframework.http.HttpHeaders);
    Code:
       0: aload_2
       1: invokestatic  #13                 // Method org/synchronoss/cloud/nio/multipart/MultipartUtils.getFileName:(Ljava/util/Map;)Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ifnull        24
       9: new           #14                 // class org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossFilePart
      12: dup
      13: aload_2
      14: aload_3
      15: aload_1
      16: aload_0
      17: getfield      #6                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      20: invokespecial #15                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossFilePart."<init>":(Lorg/springframework/http/HttpHeaders;Ljava/lang/String;Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
      23: areturn
      24: aload_2
      25: aload_0
      26: getfield      #7                  // Field context:Lorg/synchronoss/cloud/nio/multipart/MultipartContext;
      29: invokestatic  #16                 // Method org/synchronoss/cloud/nio/multipart/MultipartUtils.isFormField:(Ljava/util/Map;Lorg/synchronoss/cloud/nio/multipart/MultipartContext;)Z
      32: ifeq          57
      35: aload_1
      36: aload_2
      37: invokestatic  #17                 // Method org/synchronoss/cloud/nio/multipart/MultipartUtils.readFormParameterValue:(Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;Ljava/util/Map;)Ljava/lang/String;
      40: astore        4
      42: new           #18                 // class org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossFormFieldPart
      45: dup
      46: aload_2
      47: aload_0
      48: getfield      #6                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      51: aload         4
      53: invokespecial #19                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossFormFieldPart."<init>":(Lorg/springframework/http/HttpHeaders;Lorg/springframework/core/io/buffer/DataBufferFactory;Ljava/lang/String;)V
      56: areturn
      57: new           #20                 // class org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossPart
      60: dup
      61: aload_2
      62: aload_1
      63: aload_0
      64: getfield      #6                  // Field bufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      67: invokespecial #21                 // Method org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader$SynchronossPart."<init>":(Lorg/springframework/http/HttpHeaders;Lorg/synchronoss/cloud/nio/stream/storage/StreamStorage;Lorg/springframework/core/io/buffer/DataBufferFactory;)V
      70: areturn

  public void onError(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field terminated:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          28
      10: aload_0
      11: getfield      #5                  // Field sink:Lreactor/core/publisher/FluxSink;
      14: new           #23                 // class java/lang/RuntimeException
      17: dup
      18: aload_1
      19: aload_2
      20: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: invokeinterface #25,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      28: return

  public void onAllPartsFinished();
    Code:
       0: aload_0
       1: getfield      #4                  // Field terminated:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       7: ifne          19
      10: aload_0
      11: getfield      #5                  // Field sink:Lreactor/core/publisher/FluxSink;
      14: invokeinterface #26,  1           // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
      19: return

  public void onNestedPartStarted(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: return

  public void onNestedPartFinished();
    Code:
       0: return
}
