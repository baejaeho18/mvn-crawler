Compiled from "InputStreamEntity.java"
public class org.apache.http.entity.InputStreamEntity extends org.apache.http.entity.AbstractHttpEntity {
  private static final int BUFFER_SIZE;

  private final java.io.InputStream content;

  private final long length;

  private boolean consumed;

  public org.apache.http.entity.InputStreamEntity(java.io.InputStream, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/http/entity/AbstractHttpEntity."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field consumed:Z
       9: aload_1
      10: ifnonnull     23
      13: new           #3                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #4                  // String Source input stream may not be null
      19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field content:Ljava/io/InputStream;
      28: aload_0
      29: lload_2
      30: putfield      #7                  // Field length:J
      33: return

  public boolean isRepeatable();
    Code:
       0: iconst_0
       1: ireturn

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field length:J
       4: lreturn

  public java.io.InputStream getContent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field content:Ljava/io/InputStream;
       4: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String Output stream may not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #6                  // Field content:Ljava/io/InputStream;
      18: astore_2
      19: sipush        2048
      22: newarray       byte
      24: astore_3
      25: aload_0
      26: getfield      #7                  // Field length:J
      29: lconst_0
      30: lcmp
      31: ifge          57
      34: aload_2
      35: aload_3
      36: invokevirtual #9                  // Method java/io/InputStream.read:([B)I
      39: dup
      40: istore        4
      42: iconst_m1
      43: if_icmpeq     115
      46: aload_1
      47: aload_3
      48: iconst_0
      49: iload         4
      51: invokevirtual #10                 // Method java/io/OutputStream.write:([BII)V
      54: goto          34
      57: aload_0
      58: getfield      #7                  // Field length:J
      61: lstore        5
      63: lload         5
      65: lconst_0
      66: lcmp
      67: ifle          115
      70: aload_2
      71: aload_3
      72: iconst_0
      73: ldc2_w        #11                 // long 2048l
      76: lload         5
      78: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      81: l2i
      82: invokevirtual #14                 // Method java/io/InputStream.read:([BII)I
      85: istore        4
      87: iload         4
      89: iconst_m1
      90: if_icmpne     96
      93: goto          115
      96: aload_1
      97: aload_3
      98: iconst_0
      99: iload         4
     101: invokevirtual #10                 // Method java/io/OutputStream.write:([BII)V
     104: lload         5
     106: iload         4
     108: i2l
     109: lsub
     110: lstore        5
     112: goto          63
     115: aload_0
     116: iconst_1
     117: putfield      #2                  // Field consumed:Z
     120: return

  public boolean isStreaming();
    Code:
       0: aload_0
       1: getfield      #2                  // Field consumed:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void consumeContent() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field consumed:Z
       5: aload_0
       6: getfield      #6                  // Field content:Ljava/io/InputStream;
       9: invokevirtual #15                 // Method java/io/InputStream.close:()V
      12: return
}
