Compiled from "CharArrayBuffer.java"
public final class org.apache.http.util.CharArrayBuffer {
  private char[] buffer;

  private int len;

  public org.apache.http.util.CharArrayBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Buffer capacity may not be negative
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: newarray       char
      22: putfield      #5                  // Field buffer:[C
      25: return

  private void expand(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:[C
       4: arraylength
       5: iconst_1
       6: ishl
       7: iload_1
       8: invokestatic  #6                  // Method java/lang/Math.max:(II)I
      11: newarray       char
      13: astore_2
      14: aload_0
      15: getfield      #5                  // Field buffer:[C
      18: iconst_0
      19: aload_2
      20: iconst_0
      21: aload_0
      22: getfield      #7                  // Field len:I
      25: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: aload_0
      29: aload_2
      30: putfield      #5                  // Field buffer:[C
      33: return

  public void append(char[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_2
       6: iflt          33
       9: iload_2
      10: aload_1
      11: arraylength
      12: if_icmpgt     33
      15: iload_3
      16: iflt          33
      19: iload_2
      20: iload_3
      21: iadd
      22: iflt          33
      25: iload_2
      26: iload_3
      27: iadd
      28: aload_1
      29: arraylength
      30: if_icmple     41
      33: new           #9                  // class java/lang/IndexOutOfBoundsException
      36: dup
      37: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      40: athrow
      41: iload_3
      42: ifne          46
      45: return
      46: aload_0
      47: getfield      #7                  // Field len:I
      50: iload_3
      51: iadd
      52: istore        4
      54: iload         4
      56: aload_0
      57: getfield      #5                  // Field buffer:[C
      60: arraylength
      61: if_icmple     70
      64: aload_0
      65: iload         4
      67: invokespecial #11                 // Method expand:(I)V
      70: aload_1
      71: iload_2
      72: aload_0
      73: getfield      #5                  // Field buffer:[C
      76: aload_0
      77: getfield      #7                  // Field len:I
      80: iload_3
      81: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      84: aload_0
      85: iload         4
      87: putfield      #7                  // Field len:I
      90: return

  public void append(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #12                 // String null
       6: astore_1
       7: aload_1
       8: invokevirtual #13                 // Method java/lang/String.length:()I
      11: istore_2
      12: aload_0
      13: getfield      #7                  // Field len:I
      16: iload_2
      17: iadd
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #5                  // Field buffer:[C
      24: arraylength
      25: if_icmple     33
      28: aload_0
      29: iload_3
      30: invokespecial #11                 // Method expand:(I)V
      33: aload_1
      34: iconst_0
      35: iload_2
      36: aload_0
      37: getfield      #5                  // Field buffer:[C
      40: aload_0
      41: getfield      #7                  // Field len:I
      44: invokevirtual #14                 // Method java/lang/String.getChars:(II[CI)V
      47: aload_0
      48: iload_3
      49: putfield      #7                  // Field len:I
      52: return

  public void append(org.apache.http.util.CharArrayBuffer, int, int);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: getfield      #5                  // Field buffer:[C
      10: iload_2
      11: iload_3
      12: invokevirtual #15                 // Method append:([CII)V
      15: return

  public void append(org.apache.http.util.CharArrayBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: getfield      #5                  // Field buffer:[C
      10: iconst_0
      11: aload_1
      12: getfield      #7                  // Field len:I
      15: invokevirtual #15                 // Method append:([CII)V
      18: return

  public void append(char);
    Code:
       0: aload_0
       1: getfield      #7                  // Field len:I
       4: iconst_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #5                  // Field buffer:[C
      12: arraylength
      13: if_icmple     21
      16: aload_0
      17: iload_2
      18: invokespecial #11                 // Method expand:(I)V
      21: aload_0
      22: getfield      #5                  // Field buffer:[C
      25: aload_0
      26: getfield      #7                  // Field len:I
      29: iload_1
      30: castore
      31: aload_0
      32: iload_2
      33: putfield      #7                  // Field len:I
      36: return

  public void append(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_2
       6: iflt          33
       9: iload_2
      10: aload_1
      11: arraylength
      12: if_icmpgt     33
      15: iload_3
      16: iflt          33
      19: iload_2
      20: iload_3
      21: iadd
      22: iflt          33
      25: iload_2
      26: iload_3
      27: iadd
      28: aload_1
      29: arraylength
      30: if_icmple     41
      33: new           #9                  // class java/lang/IndexOutOfBoundsException
      36: dup
      37: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      40: athrow
      41: iload_3
      42: ifne          46
      45: return
      46: aload_0
      47: getfield      #7                  // Field len:I
      50: istore        4
      52: iload         4
      54: iload_3
      55: iadd
      56: istore        5
      58: iload         5
      60: aload_0
      61: getfield      #5                  // Field buffer:[C
      64: arraylength
      65: if_icmple     74
      68: aload_0
      69: iload         5
      71: invokespecial #11                 // Method expand:(I)V
      74: iload_2
      75: istore        6
      77: iload         4
      79: istore        7
      81: iload         7
      83: iload         5
      85: if_icmpge     113
      88: aload_0
      89: getfield      #5                  // Field buffer:[C
      92: iload         7
      94: aload_1
      95: iload         6
      97: baload
      98: sipush        255
     101: iand
     102: i2c
     103: castore
     104: iinc          6, 1
     107: iinc          7, 1
     110: goto          81
     113: aload_0
     114: iload         5
     116: putfield      #7                  // Field len:I
     119: return

  public void append(org.apache.http.util.ByteArrayBuffer, int, int);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokevirtual #16                 // Method org/apache/http/util/ByteArrayBuffer.buffer:()[B
      10: iload_2
      11: iload_3
      12: invokevirtual #17                 // Method append:([BII)V
      15: return

  public void append(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       5: invokevirtual #19                 // Method append:(Ljava/lang/String;)V
       8: return

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #7                  // Field len:I
       5: return

  public char[] toCharArray();
    Code:
       0: aload_0
       1: getfield      #7                  // Field len:I
       4: newarray       char
       6: astore_1
       7: aload_0
       8: getfield      #7                  // Field len:I
      11: ifle          28
      14: aload_0
      15: getfield      #5                  // Field buffer:[C
      18: iconst_0
      19: aload_1
      20: iconst_0
      21: aload_0
      22: getfield      #7                  // Field len:I
      25: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: aload_1
      29: areturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:[C
       4: iload_1
       5: caload
       6: ireturn

  public char[] buffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:[C
       4: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:[C
       4: arraylength
       5: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #7                  // Field len:I
       4: ireturn

  public void ensureCapacity(int);
    Code:
       0: iload_1
       1: ifgt          5
       4: return
       5: aload_0
       6: getfield      #5                  // Field buffer:[C
       9: arraylength
      10: aload_0
      11: getfield      #7                  // Field len:I
      14: isub
      15: istore_2
      16: iload_1
      17: iload_2
      18: if_icmple     31
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field len:I
      26: iload_1
      27: iadd
      28: invokespecial #11                 // Method expand:(I)V
      31: return

  public void setLength(int);
    Code:
       0: iload_1
       1: iflt          13
       4: iload_1
       5: aload_0
       6: getfield      #5                  // Field buffer:[C
       9: arraylength
      10: if_icmple     21
      13: new           #9                  // class java/lang/IndexOutOfBoundsException
      16: dup
      17: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #7                  // Field len:I
      26: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field len:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isFull();
    Code:
       0: aload_0
       1: getfield      #7                  // Field len:I
       4: aload_0
       5: getfield      #5                  // Field buffer:[C
       8: arraylength
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public int indexOf(int, int, int);
    Code:
       0: iload_2
       1: ifge          6
       4: iconst_0
       5: istore_2
       6: iload_3
       7: aload_0
       8: getfield      #7                  // Field len:I
      11: if_icmple     19
      14: aload_0
      15: getfield      #7                  // Field len:I
      18: istore_3
      19: iload_2
      20: iload_3
      21: if_icmple     26
      24: iconst_m1
      25: ireturn
      26: iload_2
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     55
      35: aload_0
      36: getfield      #5                  // Field buffer:[C
      39: iload         4
      41: caload
      42: iload_1
      43: if_icmpne     49
      46: iload         4
      48: ireturn
      49: iinc          4, 1
      52: goto          29
      55: iconst_m1
      56: ireturn

  public int indexOf(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: aload_0
       4: getfield      #7                  // Field len:I
       7: invokevirtual #20                 // Method indexOf:(III)I
      10: ireturn

  public java.lang.String substring(int, int);
    Code:
       0: iload_1
       1: ifge          12
       4: new           #9                  // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: iload_2
      13: aload_0
      14: getfield      #7                  // Field len:I
      17: if_icmple     28
      20: new           #9                  // class java/lang/IndexOutOfBoundsException
      23: dup
      24: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      27: athrow
      28: iload_1
      29: iload_2
      30: if_icmple     41
      33: new           #9                  // class java/lang/IndexOutOfBoundsException
      36: dup
      37: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      40: athrow
      41: new           #21                 // class java/lang/String
      44: dup
      45: aload_0
      46: getfield      #5                  // Field buffer:[C
      49: iload_1
      50: iload_2
      51: iload_1
      52: isub
      53: invokespecial #22                 // Method java/lang/String."<init>":([CII)V
      56: areturn

  public java.lang.String substringTrimmed(int, int);
    Code:
       0: iload_1
       1: ifge          12
       4: new           #9                  // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: iload_2
      13: aload_0
      14: getfield      #7                  // Field len:I
      17: if_icmple     28
      20: new           #9                  // class java/lang/IndexOutOfBoundsException
      23: dup
      24: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      27: athrow
      28: iload_1
      29: iload_2
      30: if_icmple     41
      33: new           #9                  // class java/lang/IndexOutOfBoundsException
      36: dup
      37: invokespecial #10                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      40: athrow
      41: iload_1
      42: iload_2
      43: if_icmpge     64
      46: aload_0
      47: getfield      #5                  // Field buffer:[C
      50: iload_1
      51: caload
      52: invokestatic  #23                 // Method org/apache/http/protocol/HTTP.isWhitespace:(C)Z
      55: ifeq          64
      58: iinc          1, 1
      61: goto          41
      64: iload_2
      65: iload_1
      66: if_icmple     89
      69: aload_0
      70: getfield      #5                  // Field buffer:[C
      73: iload_2
      74: iconst_1
      75: isub
      76: caload
      77: invokestatic  #23                 // Method org/apache/http/protocol/HTTP.isWhitespace:(C)Z
      80: ifeq          89
      83: iinc          2, -1
      86: goto          64
      89: new           #21                 // class java/lang/String
      92: dup
      93: aload_0
      94: getfield      #5                  // Field buffer:[C
      97: iload_1
      98: iload_2
      99: iload_1
     100: isub
     101: invokespecial #22                 // Method java/lang/String."<init>":([CII)V
     104: areturn

  public java.lang.String toString();
    Code:
       0: new           #21                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #5                  // Field buffer:[C
       8: iconst_0
       9: aload_0
      10: getfield      #7                  // Field len:I
      13: invokespecial #22                 // Method java/lang/String."<init>":([CII)V
      16: areturn
}
