Compiled from "Pipe.java"
final class okio.Pipe$PipeSink implements okio.Sink {
  final okio.Timeout timeout;

  final okio.Pipe this$0;

  okio.Pipe$PipeSink(okio.Pipe);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lokio/Pipe;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class okio/Timeout
      13: dup
      14: invokespecial #4                  // Method okio/Timeout."<init>":()V
      17: putfield      #5                  // Field timeout:Lokio/Timeout;
      20: return

  public void write(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokio/Pipe;
       4: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
       7: dup
       8: astore        4
      10: monitorenter
      11: aload_0
      12: getfield      #1                  // Field this$0:Lokio/Pipe;
      15: getfield      #7                  // Field okio/Pipe.sinkClosed:Z
      18: ifeq          31
      21: new           #8                  // class java/lang/IllegalStateException
      24: dup
      25: ldc           #9                  // String closed
      27: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: lload_2
      32: lconst_0
      33: lcmp
      34: ifle          140
      37: aload_0
      38: getfield      #1                  // Field this$0:Lokio/Pipe;
      41: getfield      #11                 // Field okio/Pipe.sourceClosed:Z
      44: ifeq          57
      47: new           #12                 // class java/io/IOException
      50: dup
      51: ldc           #13                 // String source is closed
      53: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #1                  // Field this$0:Lokio/Pipe;
      61: getfield      #15                 // Field okio/Pipe.maxBufferSize:J
      64: aload_0
      65: getfield      #1                  // Field this$0:Lokio/Pipe;
      68: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
      71: invokevirtual #16                 // Method okio/Buffer.size:()J
      74: lsub
      75: lstore        5
      77: lload         5
      79: lconst_0
      80: lcmp
      81: ifne          101
      84: aload_0
      85: getfield      #5                  // Field timeout:Lokio/Timeout;
      88: aload_0
      89: getfield      #1                  // Field this$0:Lokio/Pipe;
      92: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
      95: invokevirtual #17                 // Method okio/Timeout.waitUntilNotified:(Ljava/lang/Object;)V
      98: goto          31
     101: lload         5
     103: lload_2
     104: invokestatic  #18                 // Method java/lang/Math.min:(JJ)J
     107: lstore        7
     109: aload_0
     110: getfield      #1                  // Field this$0:Lokio/Pipe;
     113: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
     116: aload_1
     117: lload         7
     119: invokevirtual #19                 // Method okio/Buffer.write:(Lokio/Buffer;J)V
     122: lload_2
     123: lload         7
     125: lsub
     126: lstore_2
     127: aload_0
     128: getfield      #1                  // Field this$0:Lokio/Pipe;
     131: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
     134: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
     137: goto          31
     140: aload         4
     142: monitorexit
     143: goto          154
     146: astore        9
     148: aload         4
     150: monitorexit
     151: aload         9
     153: athrow
     154: return
    Exception table:
       from    to  target type
          11   143   146   any
         146   151   146   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokio/Pipe;
       4: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #1                  // Field this$0:Lokio/Pipe;
      14: getfield      #7                  // Field okio/Pipe.sinkClosed:Z
      17: ifeq          30
      20: new           #8                  // class java/lang/IllegalStateException
      23: dup
      24: ldc           #9                  // String closed
      26: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: getfield      #1                  // Field this$0:Lokio/Pipe;
      34: getfield      #11                 // Field okio/Pipe.sourceClosed:Z
      37: ifeq          65
      40: aload_0
      41: getfield      #1                  // Field this$0:Lokio/Pipe;
      44: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
      47: invokevirtual #16                 // Method okio/Buffer.size:()J
      50: lconst_0
      51: lcmp
      52: ifle          65
      55: new           #12                 // class java/io/IOException
      58: dup
      59: ldc           #13                 // String source is closed
      61: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_1
      66: monitorexit
      67: goto          75
      70: astore_2
      71: aload_1
      72: monitorexit
      73: aload_2
      74: athrow
      75: return
    Exception table:
       from    to  target type
          10    67    70   any
          70    73    70   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokio/Pipe;
       4: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #1                  // Field this$0:Lokio/Pipe;
      14: getfield      #7                  // Field okio/Pipe.sinkClosed:Z
      17: ifeq          23
      20: aload_1
      21: monitorexit
      22: return
      23: aload_0
      24: getfield      #1                  // Field this$0:Lokio/Pipe;
      27: getfield      #11                 // Field okio/Pipe.sourceClosed:Z
      30: ifeq          58
      33: aload_0
      34: getfield      #1                  // Field this$0:Lokio/Pipe;
      37: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
      40: invokevirtual #16                 // Method okio/Buffer.size:()J
      43: lconst_0
      44: lcmp
      45: ifle          58
      48: new           #12                 // class java/io/IOException
      51: dup
      52: ldc           #13                 // String source is closed
      54: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: getfield      #1                  // Field this$0:Lokio/Pipe;
      62: iconst_1
      63: putfield      #7                  // Field okio/Pipe.sinkClosed:Z
      66: aload_0
      67: getfield      #1                  // Field this$0:Lokio/Pipe;
      70: getfield      #6                  // Field okio/Pipe.buffer:Lokio/Buffer;
      73: invokevirtual #20                 // Method java/lang/Object.notifyAll:()V
      76: aload_1
      77: monitorexit
      78: goto          86
      81: astore_2
      82: aload_1
      83: monitorexit
      84: aload_2
      85: athrow
      86: return
    Exception table:
       from    to  target type
          10    22    81   any
          23    78    81   any
          81    84    81   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeout:Lokio/Timeout;
       4: areturn
}
