Compiled from "Okio.java"
public final class okio.Okio {
  static final java.util.logging.Logger logger;

  private okio.Okio();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static okio.BufferedSource buffer(okio.Source);
    Code:
       0: new           #2                  // class okio/RealBufferedSource
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method okio/RealBufferedSource."<init>":(Lokio/Source;)V
       8: areturn

  public static okio.BufferedSink buffer(okio.Sink);
    Code:
       0: new           #4                  // class okio/RealBufferedSink
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method okio/RealBufferedSink."<init>":(Lokio/Sink;)V
       8: areturn

  public static okio.Sink sink(java.io.OutputStream);
    Code:
       0: aload_0
       1: new           #6                  // class okio/Timeout
       4: dup
       5: invokespecial #7                  // Method okio/Timeout."<init>":()V
       8: invokestatic  #8                  // Method sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;
      11: areturn

  private static okio.Sink sink(java.io.OutputStream, okio.Timeout);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #10                 // String out == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #9                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #12                 // String timeout == null
      24: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #13                 // class okio/Okio$1
      31: dup
      32: aload_1
      33: aload_0
      34: invokespecial #14                 // Method okio/Okio$1."<init>":(Lokio/Timeout;Ljava/io/OutputStream;)V
      37: areturn

  public static okio.Sink sink(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String socket == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokestatic  #16                 // Method timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;
      18: astore_1
      19: aload_0
      20: invokevirtual #17                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
      23: aload_1
      24: invokestatic  #8                  // Method sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;
      27: astore_2
      28: aload_1
      29: aload_2
      30: invokevirtual #18                 // Method okio/AsyncTimeout.sink:(Lokio/Sink;)Lokio/Sink;
      33: areturn

  public static okio.Source source(java.io.InputStream);
    Code:
       0: aload_0
       1: new           #6                  // class okio/Timeout
       4: dup
       5: invokespecial #7                  // Method okio/Timeout."<init>":()V
       8: invokestatic  #19                 // Method source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;
      11: areturn

  private static okio.Source source(java.io.InputStream, okio.Timeout);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #20                 // String in == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ifnonnull     28
      18: new           #9                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #12                 // String timeout == null
      24: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #21                 // class okio/Okio$2
      31: dup
      32: aload_1
      33: aload_0
      34: invokespecial #22                 // Method okio/Okio$2."<init>":(Lokio/Timeout;Ljava/io/InputStream;)V
      37: areturn

  public static okio.Source source(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #23                 // String file == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #24                 // class java/io/FileInputStream
      17: dup
      18: aload_0
      19: invokespecial #25                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      22: invokestatic  #26                 // Method source:(Ljava/io/InputStream;)Lokio/Source;
      25: areturn

  public static okio.Source source(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #27                 // String path == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokestatic  #28                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      19: invokestatic  #26                 // Method source:(Ljava/io/InputStream;)Lokio/Source;
      22: areturn

  public static okio.Sink sink(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #23                 // String file == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #29                 // class java/io/FileOutputStream
      17: dup
      18: aload_0
      19: invokespecial #30                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      22: invokestatic  #31                 // Method sink:(Ljava/io/OutputStream;)Lokio/Sink;
      25: areturn

  public static okio.Sink appendingSink(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #23                 // String file == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #29                 // class java/io/FileOutputStream
      17: dup
      18: aload_0
      19: iconst_1
      20: invokespecial #32                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
      23: invokestatic  #31                 // Method sink:(Ljava/io/OutputStream;)Lokio/Sink;
      26: areturn

  public static okio.Sink sink(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #27                 // String path == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokestatic  #33                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      19: invokestatic  #31                 // Method sink:(Ljava/io/OutputStream;)Lokio/Sink;
      22: areturn

  public static okio.Sink blackhole();
    Code:
       0: new           #34                 // class okio/Okio$3
       3: dup
       4: invokespecial #35                 // Method okio/Okio$3."<init>":()V
       7: areturn

  public static okio.Source source(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #9                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String socket == null
      10: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokestatic  #16                 // Method timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;
      18: astore_1
      19: aload_0
      20: invokevirtual #36                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
      23: aload_1
      24: invokestatic  #19                 // Method source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;
      27: astore_2
      28: aload_1
      29: aload_2
      30: invokevirtual #37                 // Method okio/AsyncTimeout.source:(Lokio/Source;)Lokio/Source;
      33: areturn

  private static okio.AsyncTimeout timeout(java.net.Socket);
    Code:
       0: new           #38                 // class okio/Okio$4
       3: dup
       4: aload_0
       5: invokespecial #39                 // Method okio/Okio$4."<init>":(Ljava/net/Socket;)V
       8: areturn

  static boolean isAndroidGetsocknameError(java.lang.AssertionError);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/AssertionError.getCause:()Ljava/lang/Throwable;
       4: ifnull        30
       7: aload_0
       8: invokevirtual #41                 // Method java/lang/AssertionError.getMessage:()Ljava/lang/String;
      11: ifnull        30
      14: aload_0
      15: invokevirtual #41                 // Method java/lang/AssertionError.getMessage:()Ljava/lang/String;
      18: ldc           #42                 // String getsockname failed
      20: invokevirtual #43                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  static {};
    Code:
       0: ldc           #44                 // class okio/Okio
       2: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #46                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #47                 // Field logger:Ljava/util/logging/Logger;
      11: return
}
