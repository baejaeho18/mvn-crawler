Compiled from "ChunkedInputStream.java"
class io.minio.ChunkedInputStream extends java.io.InputStream {
  private static final int CHUNK_SIZE;

  private static final int FULL_CHUNK_LEN;

  private static final int CHUNK_SIGNATURE_METADATA_LEN;

  private static final int FINAL_ADDITIONAL_CHUNK_LEN;

  private java.io.InputStream inputStream;

  private int streamSize;

  private int length;

  private org.joda.time.DateTime date;

  private java.lang.String region;

  private java.lang.String secretKey;

  private java.lang.String prevSignature;

  private int streamBytesRead;

  private byte[] chunkBody;

  private int chunkPos;

  private boolean isEof;

  private int bytesRead;

  public io.minio.ChunkedInputStream(java.io.InputStream, int, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field streamBytesRead:I
       9: aload_0
      10: iconst_0
      11: newarray       byte
      13: putfield      #4                  // Field chunkBody:[B
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field chunkPos:I
      21: aload_0
      22: iconst_0
      23: putfield      #6                  // Field isEof:Z
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field bytesRead:I
      31: aload_0
      32: aload_1
      33: putfield      #8                  // Field inputStream:Ljava/io/InputStream;
      36: aload_0
      37: iload_2
      38: putfield      #9                  // Field streamSize:I
      41: aload_0
      42: aload_3
      43: putfield      #10                 // Field date:Lorg/joda/time/DateTime;
      46: aload_0
      47: aload         4
      49: putfield      #11                 // Field region:Ljava/lang/String;
      52: aload_0
      53: aload         5
      55: putfield      #12                 // Field secretKey:Ljava/lang/String;
      58: aload_0
      59: aload         6
      61: putfield      #13                 // Field prevSignature:Ljava/lang/String;
      64: aload_0
      65: getfield      #9                  // Field streamSize:I
      68: ldc           #14                 // int 65536
      70: idiv
      71: istore        7
      73: aload_0
      74: iload         7
      76: ldc           #15                 // int 65626
      78: imul
      79: putfield      #16                 // Field length:I
      82: aload_0
      83: getfield      #9                  // Field streamSize:I
      86: ldc           #14                 // int 65536
      88: irem
      89: istore        8
      91: iload         8
      93: ifle          139
      96: aload_0
      97: dup
      98: getfield      #16                 // Field length:I
     101: iload         8
     103: invokestatic  #17                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     106: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     109: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     112: arraylength
     113: iadd
     114: putfield      #16                 // Field length:I
     117: aload_0
     118: dup
     119: getfield      #16                 // Field length:I
     122: bipush        85
     124: iadd
     125: putfield      #16                 // Field length:I
     128: aload_0
     129: dup
     130: getfield      #16                 // Field length:I
     133: iload         8
     135: iadd
     136: putfield      #16                 // Field length:I
     139: aload_0
     140: dup
     141: getfield      #16                 // Field length:I
     144: bipush        86
     146: iadd
     147: putfield      #16                 // Field length:I
     150: return

  private int readData(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field isEof:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: iconst_0
      10: istore_2
      11: aload_1
      12: arraylength
      13: istore_3
      14: iconst_0
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         4
      22: aload_1
      23: arraylength
      24: if_icmpge     71
      27: aload_0
      28: getfield      #8                  // Field inputStream:Ljava/io/InputStream;
      31: aload_1
      32: iload_2
      33: iload_3
      34: invokevirtual #20                 // Method java/io/InputStream.read:([BII)I
      37: istore        5
      39: iload         5
      41: ifge          52
      44: aload_0
      45: iconst_1
      46: putfield      #6                  // Field isEof:Z
      49: goto          71
      52: iload         4
      54: iload         5
      56: iadd
      57: istore        4
      59: iload         5
      61: istore_2
      62: aload_1
      63: arraylength
      64: iload         4
      66: isub
      67: istore_3
      68: goto          20
      71: iload         4
      73: ireturn

  private void createChunkBody(byte[]) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, io.minio.errors.InsufficientDataException, io.minio.errors.InternalException;
    Code:
       0: aload_1
       1: aload_1
       2: arraylength
       3: invokestatic  #21                 // Method io/minio/Digest.sha256Hash:(Ljava/lang/Object;I)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: aload_0
       9: getfield      #10                 // Field date:Lorg/joda/time/DateTime;
      12: aload_0
      13: getfield      #11                 // Field region:Ljava/lang/String;
      16: aload_0
      17: getfield      #12                 // Field secretKey:Ljava/lang/String;
      20: aload_0
      21: getfield      #13                 // Field prevSignature:Ljava/lang/String;
      24: invokestatic  #22                 // Method io/minio/Signer.getChunkSignature:(Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: astore_3
      28: new           #23                 // class java/io/ByteArrayOutputStream
      31: dup
      32: invokespecial #24                 // Method java/io/ByteArrayOutputStream."<init>":()V
      35: astore        4
      37: aload         4
      39: aload_1
      40: arraylength
      41: invokestatic  #17                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      44: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      47: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      50: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.write:([B)V
      53: aload         4
      55: ldc           #26                 // String ;chunk-signature=
      57: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      60: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      63: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.write:([B)V
      66: aload         4
      68: aload_3
      69: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      72: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      75: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.write:([B)V
      78: aload         4
      80: ldc           #27                 // String \r\n
      82: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      85: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      88: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.write:([B)V
      91: aload         4
      93: aload_1
      94: iconst_0
      95: aload_1
      96: arraylength
      97: invokevirtual #28                 // Method java/io/ByteArrayOutputStream.write:([BII)V
     100: aload         4
     102: ldc           #27                 // String \r\n
     104: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     107: invokevirtual #19                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     110: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.write:([B)V
     113: aload_0
     114: aload         4
     116: invokevirtual #29                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     119: putfield      #4                  // Field chunkBody:[B
     122: aload_0
     123: iconst_0
     124: putfield      #5                  // Field chunkPos:I
     127: aload_0
     128: aload_3
     129: putfield      #13                 // Field prevSignature:Ljava/lang/String;
     132: return

  private int readChunk(int) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, io.minio.errors.InsufficientDataException, io.minio.errors.InternalException;
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokespecial #30                 // Method readData:([B)I
       9: istore_3
      10: iload_3
      11: ifge          16
      14: iconst_m1
      15: ireturn
      16: iload_3
      17: iload_1
      18: if_icmpeq     57
      21: new           #31                 // class io/minio/errors/InsufficientDataException
      24: dup
      25: new           #32                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #34                 // String Insufficient data.  read =
      34: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_3
      38: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #37                 // String  expected =
      43: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_1
      47: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #39                 // Method io/minio/errors/InsufficientDataException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: aload_2
      59: invokespecial #40                 // Method createChunkBody:([B)V
      62: aload_0
      63: getfield      #4                  // Field chunkBody:[B
      66: arraylength
      67: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesRead:I
       4: aload_0
       5: getfield      #16                 // Field length:I
       8: if_icmpne     13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field streamBytesRead:I
      17: ifeq          32
      20: aload_0
      21: getfield      #5                  // Field chunkPos:I
      24: aload_0
      25: getfield      #4                  // Field chunkBody:[B
      28: arraylength
      29: if_icmpne     101
      32: aload_0
      33: getfield      #3                  // Field streamBytesRead:I
      36: aload_0
      37: getfield      #9                  // Field streamSize:I
      40: if_icmpeq     92
      43: ldc           #14                 // int 65536
      45: istore_1
      46: aload_0
      47: getfield      #3                  // Field streamBytesRead:I
      50: iload_1
      51: iadd
      52: aload_0
      53: getfield      #9                  // Field streamSize:I
      56: if_icmple     69
      59: aload_0
      60: getfield      #9                  // Field streamSize:I
      63: aload_0
      64: getfield      #3                  // Field streamBytesRead:I
      67: isub
      68: istore_1
      69: aload_0
      70: iload_1
      71: invokespecial #41                 // Method readChunk:(I)I
      74: ifge          79
      77: iconst_m1
      78: ireturn
      79: aload_0
      80: dup
      81: getfield      #3                  // Field streamBytesRead:I
      84: iload_1
      85: iadd
      86: putfield      #3                  // Field streamBytesRead:I
      89: goto          101
      92: iconst_0
      93: newarray       byte
      95: astore_1
      96: aload_0
      97: aload_1
      98: invokespecial #40                 // Method createChunkBody:([B)V
     101: aload_0
     102: dup
     103: getfield      #7                  // Field bytesRead:I
     106: iconst_1
     107: iadd
     108: putfield      #7                  // Field bytesRead:I
     111: aload_0
     112: getfield      #4                  // Field chunkBody:[B
     115: aload_0
     116: getfield      #5                  // Field chunkPos:I
     119: baload
     120: sipush        255
     123: iand
     124: istore_1
     125: aload_0
     126: dup
     127: getfield      #5                  // Field chunkPos:I
     130: iconst_1
     131: iadd
     132: putfield      #5                  // Field chunkPos:I
     135: iload_1
     136: ireturn
     137: astore_1
     138: new           #45                 // class java/io/IOException
     141: dup
     142: aload_1
     143: invokevirtual #46                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
     146: invokespecial #47                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     149: athrow
    Exception table:
       from    to  target type
          13    78   137   Class java/security/NoSuchAlgorithmException
          13    78   137   Class java/security/InvalidKeyException
          13    78   137   Class io/minio/errors/InsufficientDataException
          13    78   137   Class io/minio/errors/InternalException
          79   136   137   Class java/security/NoSuchAlgorithmException
          79   136   137   Class java/security/InvalidKeyException
          79   136   137   Class io/minio/errors/InsufficientDataException
          79   136   137   Class io/minio/errors/InternalException

  public int length();
    Code:
       0: aload_0
       1: getfield      #16                 // Field length:I
       4: ireturn
}
