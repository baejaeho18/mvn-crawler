Compiled from "MinioProperties.java"
final class io.minio.MinioProperties extends java.lang.Enum<io.minio.MinioProperties> {
  public static final io.minio.MinioProperties INSTANCE;

  private static final java.util.logging.Logger LOGGER;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.String> version;

  private static final io.minio.MinioProperties[] $VALUES;

  public static io.minio.MinioProperties[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lio/minio/MinioProperties;
       3: invokevirtual #2                  // Method "[Lio/minio/MinioProperties;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lio/minio/MinioProperties;"
       9: areturn

  public static io.minio.MinioProperties valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class io/minio/MinioProperties
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class io/minio/MinioProperties
       9: areturn

  private io.minio.MinioProperties();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      10: dup
      11: aconst_null
      12: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
      18: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class java/lang/String
      10: astore_1
      11: aload_1
      12: ifnonnull     96
      15: getstatic     #12                 // Field INSTANCE:Lio/minio/MinioProperties;
      18: dup
      19: astore_2
      20: monitorenter
      21: aload_0
      22: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
      25: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      28: ifnonnull     84
      31: aload_0
      32: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #14                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokespecial #15                 // Method setMinioClientJavaVersion:(Ljava/lang/ClassLoader;)V
      44: aload_0
      45: invokespecial #16                 // Method setDevelopmentVersion:()V
      48: goto          73
      51: astore_3
      52: getstatic     #18                 // Field LOGGER:Ljava/util/logging/Logger;
      55: getstatic     #19                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      58: ldc           #20                 // String IOException occured
      60: aload_3
      61: invokevirtual #21                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      64: aload_0
      65: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
      68: ldc           #22                 // String unknown
      70: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      73: aload_0
      74: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
      77: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      80: checkcast     #11                 // class java/lang/String
      83: astore_1
      84: aload_2
      85: monitorexit
      86: goto          96
      89: astore        4
      91: aload_2
      92: monitorexit
      93: aload         4
      95: athrow
      96: aload_1
      97: areturn
    Exception table:
       from    to  target type
          31    48    51   Class java/io/IOException
          21    86    89   any
          89    93    89   any

  private void setDevelopmentVersion();
    Code:
       0: aload_0
       1: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     19
      10: aload_0
      11: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
      14: ldc           #24                 // String dev
      16: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      19: return

  private void setMinioClientJavaVersion(java.lang.ClassLoader) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        115
       4: aload_1
       5: ldc           #25                 // String META-INF/MANIFEST.MF
       7: invokevirtual #26                 // Method java/lang/ClassLoader.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;
      10: astore_2
      11: aload_2
      12: invokeinterface #27,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      17: ifeq          115
      20: new           #28                 // class java/util/jar/Manifest
      23: dup
      24: aload_2
      25: invokeinterface #29,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      30: checkcast     #30                 // class java/net/URL
      33: invokevirtual #31                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      36: invokespecial #32                 // Method java/util/jar/Manifest."<init>":(Ljava/io/InputStream;)V
      39: astore_3
      40: aload_3
      41: invokevirtual #33                 // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
      44: invokevirtual #34                 // Method java/util/jar/Attributes.keySet:()Ljava/util/Set;
      47: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          112
      64: aload         4
      66: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: astore        5
      73: ldc           #38                 // String Minio-Client-Java-Version
      75: astore        6
      77: aload         5
      79: invokevirtual #39                 // Method java/lang/Object.toString:()Ljava/lang/String;
      82: aload         6
      84: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      87: ifeq          109
      90: aload_0
      91: getfield      #9                  // Field version:Ljava/util/concurrent/atomic/AtomicReference;
      94: aload_3
      95: invokevirtual #33                 // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
      98: aload         5
     100: checkcast     #41                 // class java/util/jar/Attributes$Name
     103: invokevirtual #42                 // Method java/util/jar/Attributes.getValue:(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;
     106: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     109: goto          54
     112: goto          11
     115: return

  static {};
    Code:
       0: new           #4                  // class io/minio/MinioProperties
       3: dup
       4: ldc           #43                 // String INSTANCE
       6: iconst_0
       7: invokespecial #44                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #12                 // Field INSTANCE:Lio/minio/MinioProperties;
      13: iconst_1
      14: anewarray     #4                  // class io/minio/MinioProperties
      17: dup
      18: iconst_0
      19: getstatic     #12                 // Field INSTANCE:Lio/minio/MinioProperties;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lio/minio/MinioProperties;
      26: ldc           #4                  // class io/minio/MinioProperties
      28: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokestatic  #46                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      34: putstatic     #18                 // Field LOGGER:Ljava/util/logging/Logger;
      37: return
}
