Compiled from "Signer.java"
class io.minio.Signer {
  private static final java.util.Set<java.lang.String> IGNORED_HEADERS;

  private okhttp3.Request request;

  private java.lang.String contentSha256;

  private org.joda.time.DateTime date;

  private java.lang.String region;

  private java.lang.String accessKey;

  private java.lang.String secretKey;

  private java.lang.String prevSignature;

  private java.lang.String scope;

  private java.util.Map<java.lang.String, java.lang.String> canonicalHeaders;

  private java.lang.String signedHeaders;

  private okhttp3.HttpUrl url;

  private java.lang.String canonicalQueryString;

  private java.lang.String canonicalRequest;

  private java.lang.String canonicalRequestHash;

  private java.lang.String stringToSign;

  private byte[] signingKey;

  private java.lang.String signature;

  private java.lang.String authorization;

  public io.minio.Signer(okhttp3.Request, java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field request:Lokhttp3/Request;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field contentSha256:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field date:Lorg/joda/time/DateTime;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field region:Ljava/lang/String;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field accessKey:Ljava/lang/String;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field secretKey:Ljava/lang/String;
      37: aload_0
      38: aload         7
      40: putfield      #8                  // Field prevSignature:Ljava/lang/String;
      43: return

  private void setScope();
    Code:
       0: aload_0
       1: new           #9                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_0
       9: getfield      #4                  // Field date:Lorg/joda/time/DateTime;
      12: getstatic     #11                 // Field io/minio/DateFormat.SIGNER_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      15: invokevirtual #12                 // Method org/joda/time/DateTime.toString:(Lorg/joda/time/format/DateTimeFormatter;)Ljava/lang/String;
      18: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #14                 // String /
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #5                  // Field region:Ljava/lang/String;
      30: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #15                 // String /s3/aws4_request
      35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: putfield      #17                 // Field scope:Ljava/lang/String;
      44: return

  private void setCanonicalHeaders();
    Code:
       0: aload_0
       1: new           #18                 // class java/util/TreeMap
       4: dup
       5: invokespecial #19                 // Method java/util/TreeMap."<init>":()V
       8: putfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
      11: aload_0
      12: getfield      #2                  // Field request:Lokhttp3/Request;
      15: invokevirtual #21                 // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      18: astore_1
      19: aload_1
      20: invokevirtual #22                 // Method okhttp3/Headers.names:()Ljava/util/Set;
      23: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          87
      38: aload_2
      39: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #26                 // class java/lang/String
      47: astore_3
      48: aload_3
      49: invokevirtual #27                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      52: astore        4
      54: getstatic     #28                 // Field IGNORED_HEADERS:Ljava/util/Set;
      57: aload         4
      59: invokeinterface #29,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      64: ifne          84
      67: aload_0
      68: getfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
      71: aload         4
      73: aload_1
      74: aload_3
      75: invokevirtual #30                 // Method okhttp3/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
      78: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: goto          29
      87: aload_0
      88: ldc           #32                 // String ;
      90: invokestatic  #33                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
      93: aload_0
      94: getfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
      97: invokeinterface #34,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     102: invokevirtual #35                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
     105: putfield      #36                 // Field signedHeaders:Ljava/lang/String;
     108: return

  private void setCanonicalQueryString();
    Code:
       0: new           #18                 // class java/util/TreeMap
       3: dup
       4: invokespecial #19                 // Method java/util/TreeMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #37                 // Field url:Lokhttp3/HttpUrl;
      12: invokevirtual #38                 // Method okhttp3/HttpUrl.encodedQuery:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: ifnonnull     27
      20: aload_0
      21: ldc           #39                 // String
      23: putfield      #40                 // Field canonicalQueryString:Ljava/lang/String;
      26: return
      27: aload_2
      28: ldc           #41                 // String &
      30: invokevirtual #42                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      33: astore_3
      34: aload_3
      35: arraylength
      36: istore        4
      38: iconst_0
      39: istore        5
      41: iload         5
      43: iload         4
      45: if_icmpge     107
      48: aload_3
      49: iload         5
      51: aaload
      52: astore        6
      54: aload         6
      56: ldc           #43                 // String =
      58: invokevirtual #42                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      61: astore        7
      63: aload         7
      65: arraylength
      66: iconst_1
      67: if_icmple     88
      70: aload_1
      71: aload         7
      73: iconst_0
      74: aaload
      75: aload         7
      77: iconst_1
      78: aaload
      79: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          101
      88: aload_1
      89: aload         7
      91: iconst_0
      92: aaload
      93: ldc           #39                 // String
      95: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: iinc          5, 1
     104: goto          41
     107: aload_0
     108: ldc           #41                 // String &
     110: invokestatic  #33                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
     113: ldc           #43                 // String =
     115: invokevirtual #44                 // Method com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
     118: aload_1
     119: invokevirtual #45                 // Method com/google/common/base/Joiner$MapJoiner.join:(Ljava/util/Map;)Ljava/lang/String;
     122: putfield      #40                 // Field canonicalQueryString:Ljava/lang/String;
     125: return

  private void setCanonicalRequest() throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_0
       1: invokespecial #46                 // Method setCanonicalHeaders:()V
       4: aload_0
       5: aload_0
       6: getfield      #2                  // Field request:Lokhttp3/Request;
       9: invokevirtual #47                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      12: putfield      #37                 // Field url:Lokhttp3/HttpUrl;
      15: aload_0
      16: invokespecial #48                 // Method setCanonicalQueryString:()V
      19: aload_0
      20: new           #9                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_0
      28: getfield      #2                  // Field request:Lokhttp3/Request;
      31: invokevirtual #49                 // Method okhttp3/Request.method:()Ljava/lang/String;
      34: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #50                 // String \n
      39: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #37                 // Field url:Lokhttp3/HttpUrl;
      46: invokevirtual #51                 // Method okhttp3/HttpUrl.encodedPath:()Ljava/lang/String;
      49: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #50                 // String \n
      54: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #40                 // Field canonicalQueryString:Ljava/lang/String;
      61: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #50                 // String \n
      66: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #50                 // String \n
      71: invokestatic  #33                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
      74: ldc           #52                 // String :
      76: invokevirtual #44                 // Method com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
      79: aload_0
      80: getfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
      83: invokevirtual #45                 // Method com/google/common/base/Joiner$MapJoiner.join:(Ljava/util/Map;)Ljava/lang/String;
      86: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #53                 // String \n\n
      91: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_0
      95: getfield      #36                 // Field signedHeaders:Ljava/lang/String;
      98: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #50                 // String \n
     103: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #3                  // Field contentSha256:Ljava/lang/String;
     110: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: putfield      #54                 // Field canonicalRequest:Ljava/lang/String;
     119: aload_0
     120: aload_0
     121: getfield      #54                 // Field canonicalRequest:Ljava/lang/String;
     124: invokestatic  #55                 // Method io/minio/Digest.sha256Hash:(Ljava/lang/String;)Ljava/lang/String;
     127: putfield      #56                 // Field canonicalRequestHash:Ljava/lang/String;
     130: return

  private void setStringToSign();
    Code:
       0: aload_0
       1: new           #9                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #57                 // String AWS4-HMAC-SHA256\n
      10: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #4                  // Field date:Lorg/joda/time/DateTime;
      17: getstatic     #58                 // Field io/minio/DateFormat.AMZ_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      20: invokevirtual #12                 // Method org/joda/time/DateTime.toString:(Lorg/joda/time/format/DateTimeFormatter;)Ljava/lang/String;
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #50                 // String \n
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #17                 // Field scope:Ljava/lang/String;
      35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #50                 // String \n
      40: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #56                 // Field canonicalRequestHash:Ljava/lang/String;
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: putfield      #59                 // Field stringToSign:Ljava/lang/String;
      56: return

  private void setChunkStringToSign() throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_0
       1: new           #9                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #60                 // String AWS4-HMAC-SHA256-PAYLOAD\n
      10: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #4                  // Field date:Lorg/joda/time/DateTime;
      17: getstatic     #58                 // Field io/minio/DateFormat.AMZ_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      20: invokevirtual #12                 // Method org/joda/time/DateTime.toString:(Lorg/joda/time/format/DateTimeFormatter;)Ljava/lang/String;
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #50                 // String \n
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #17                 // Field scope:Ljava/lang/String;
      35: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #50                 // String \n
      40: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #8                  // Field prevSignature:Ljava/lang/String;
      47: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #50                 // String \n
      52: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #39                 // String
      57: invokestatic  #55                 // Method io/minio/Digest.sha256Hash:(Ljava/lang/String;)Ljava/lang/String;
      60: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc           #50                 // String \n
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #3                  // Field contentSha256:Ljava/lang/String;
      72: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: putfield      #59                 // Field stringToSign:Ljava/lang/String;
      81: return

  private void setSigningKey() throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #61                 // String AWS4
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field secretKey:Ljava/lang/String;
      16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: astore_1
      23: aload_1
      24: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      27: invokevirtual #63                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      30: aload_0
      31: getfield      #4                  // Field date:Lorg/joda/time/DateTime;
      34: getstatic     #11                 // Field io/minio/DateFormat.SIGNER_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      37: invokevirtual #12                 // Method org/joda/time/DateTime.toString:(Lorg/joda/time/format/DateTimeFormatter;)Ljava/lang/String;
      40: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      43: invokevirtual #63                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      46: invokestatic  #64                 // Method sumHmac:([B[B)[B
      49: astore_2
      50: aload_2
      51: aload_0
      52: getfield      #5                  // Field region:Ljava/lang/String;
      55: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      58: invokevirtual #63                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      61: invokestatic  #64                 // Method sumHmac:([B[B)[B
      64: astore_3
      65: aload_3
      66: ldc           #65                 // String s3
      68: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      71: invokevirtual #63                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      74: invokestatic  #64                 // Method sumHmac:([B[B)[B
      77: astore        4
      79: aload_0
      80: aload         4
      82: ldc           #66                 // String aws4_request
      84: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      87: invokevirtual #63                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      90: invokestatic  #64                 // Method sumHmac:([B[B)[B
      93: putfield      #67                 // Field signingKey:[B
      96: return

  private void setSignature() throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field signingKey:[B
       4: aload_0
       5: getfield      #59                 // Field stringToSign:Ljava/lang/String;
       8: getstatic     #62                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokevirtual #63                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      14: invokestatic  #64                 // Method sumHmac:([B[B)[B
      17: astore_1
      18: aload_0
      19: invokestatic  #68                 // Method com/google/common/io/BaseEncoding.base16:()Lcom/google/common/io/BaseEncoding;
      22: aload_1
      23: invokevirtual #69                 // Method com/google/common/io/BaseEncoding.encode:([B)Ljava/lang/String;
      26: invokevirtual #27                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      29: putfield      #70                 // Field signature:Ljava/lang/String;
      32: return

  private void setAuthorization();
    Code:
       0: aload_0
       1: new           #9                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #71                 // String AWS4-HMAC-SHA256 Credential=
      10: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #6                  // Field accessKey:Ljava/lang/String;
      17: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #14                 // String /
      22: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #17                 // Field scope:Ljava/lang/String;
      29: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #72                 // String , SignedHeaders=
      34: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #36                 // Field signedHeaders:Ljava/lang/String;
      41: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #73                 // String , Signature=
      46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #70                 // Field signature:Ljava/lang/String;
      53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: putfield      #74                 // Field authorization:Ljava/lang/String;
      62: return

  public static java.lang.String getChunkSignature(java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: new           #75                 // class io/minio/Signer
       3: dup
       4: aconst_null
       5: aload_0
       6: aload_1
       7: aload_2
       8: aconst_null
       9: aload_3
      10: aload         4
      12: invokespecial #76                 // Method "<init>":(Lokhttp3/Request;Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      15: astore        5
      17: aload         5
      19: invokespecial #77                 // Method setScope:()V
      22: aload         5
      24: invokespecial #78                 // Method setChunkStringToSign:()V
      27: aload         5
      29: invokespecial #79                 // Method setSigningKey:()V
      32: aload         5
      34: invokespecial #80                 // Method setSignature:()V
      37: aload         5
      39: getfield      #70                 // Field signature:Ljava/lang/String;
      42: areturn

  public static java.lang.String getChunkSeedSignature(okhttp3.Request, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: aload_0
       1: ldc           #81                 // String x-amz-content-sha256
       3: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: getstatic     #58                 // Field io/minio/DateFormat.AMZ_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      10: aload_0
      11: ldc           #83                 // String x-amz-date
      13: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #84                 // Method org/joda/time/format/DateTimeFormatter.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;
      19: astore        4
      21: new           #75                 // class io/minio/Signer
      24: dup
      25: aload_0
      26: aload_3
      27: aload         4
      29: aload_1
      30: aconst_null
      31: aload_2
      32: aconst_null
      33: invokespecial #76                 // Method "<init>":(Lokhttp3/Request;Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      36: astore        5
      38: aload         5
      40: invokespecial #77                 // Method setScope:()V
      43: aload         5
      45: invokespecial #85                 // Method setCanonicalRequest:()V
      48: aload         5
      50: invokespecial #86                 // Method setStringToSign:()V
      53: aload         5
      55: invokespecial #79                 // Method setSigningKey:()V
      58: aload         5
      60: invokespecial #80                 // Method setSignature:()V
      63: aload         5
      65: getfield      #70                 // Field signature:Ljava/lang/String;
      68: areturn

  public static okhttp3.Request signV4(okhttp3.Request, java.lang.String, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: aload_0
       1: ldc           #81                 // String x-amz-content-sha256
       3: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
       6: astore        4
       8: getstatic     #58                 // Field io/minio/DateFormat.AMZ_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      11: aload_0
      12: ldc           #83                 // String x-amz-date
      14: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
      17: invokevirtual #84                 // Method org/joda/time/format/DateTimeFormatter.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;
      20: astore        5
      22: new           #75                 // class io/minio/Signer
      25: dup
      26: aload_0
      27: aload         4
      29: aload         5
      31: aload_1
      32: aload_2
      33: aload_3
      34: aconst_null
      35: invokespecial #76                 // Method "<init>":(Lokhttp3/Request;Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      38: astore        6
      40: aload         6
      42: invokespecial #77                 // Method setScope:()V
      45: aload         6
      47: invokespecial #85                 // Method setCanonicalRequest:()V
      50: aload         6
      52: invokespecial #86                 // Method setStringToSign:()V
      55: aload         6
      57: invokespecial #79                 // Method setSigningKey:()V
      60: aload         6
      62: invokespecial #80                 // Method setSignature:()V
      65: aload         6
      67: invokespecial #87                 // Method setAuthorization:()V
      70: aload_0
      71: invokevirtual #88                 // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
      74: ldc           #89                 // String Authorization
      76: aload         6
      78: getfield      #74                 // Field authorization:Ljava/lang/String;
      81: invokevirtual #90                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      84: invokevirtual #91                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      87: areturn

  private void setPresignCanonicalRequest(int) throws java.security.NoSuchAlgorithmException;
    Code:
       0: aload_0
       1: new           #18                 // class java/util/TreeMap
       4: dup
       5: invokespecial #19                 // Method java/util/TreeMap."<init>":()V
       8: putfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
      11: aload_0
      12: getfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
      15: ldc           #92                 // String host
      17: aload_0
      18: getfield      #2                  // Field request:Lokhttp3/Request;
      21: invokevirtual #21                 // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      24: ldc           #93                 // String Host
      26: invokevirtual #30                 // Method okhttp3/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
      29: invokeinterface #31,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: ldc           #92                 // String host
      38: putfield      #36                 // Field signedHeaders:Ljava/lang/String;
      41: aload_0
      42: getfield      #2                  // Field request:Lokhttp3/Request;
      45: invokevirtual #47                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      48: invokevirtual #94                 // Method okhttp3/HttpUrl.newBuilder:()Lokhttp3/HttpUrl$Builder;
      51: astore_2
      52: aload_2
      53: ldc           #95                 // String X-Amz-Algorithm
      55: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
      58: ldc           #97                 // String AWS4-HMAC-SHA256
      60: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
      63: invokevirtual #98                 // Method okhttp3/HttpUrl$Builder.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
      66: pop
      67: aload_2
      68: ldc           #99                 // String X-Amz-Credential
      70: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
      73: new           #9                  // class java/lang/StringBuilder
      76: dup
      77: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      80: aload_0
      81: getfield      #6                  // Field accessKey:Ljava/lang/String;
      84: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #14                 // String /
      89: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: getfield      #17                 // Field scope:Ljava/lang/String;
      96: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     105: invokevirtual #98                 // Method okhttp3/HttpUrl$Builder.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
     108: pop
     109: aload_2
     110: ldc           #100                // String X-Amz-Date
     112: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     115: aload_0
     116: getfield      #4                  // Field date:Lorg/joda/time/DateTime;
     119: getstatic     #58                 // Field io/minio/DateFormat.AMZ_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
     122: invokevirtual #12                 // Method org/joda/time/DateTime.toString:(Lorg/joda/time/format/DateTimeFormatter;)Ljava/lang/String;
     125: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     128: invokevirtual #98                 // Method okhttp3/HttpUrl$Builder.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
     131: pop
     132: aload_2
     133: ldc           #101                // String X-Amz-Expires
     135: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     138: iload_1
     139: invokestatic  #102                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     142: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     145: invokevirtual #98                 // Method okhttp3/HttpUrl$Builder.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
     148: pop
     149: aload_2
     150: ldc           #103                // String X-Amz-SignedHeaders
     152: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     155: aload_0
     156: getfield      #36                 // Field signedHeaders:Ljava/lang/String;
     159: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
     162: invokevirtual #98                 // Method okhttp3/HttpUrl$Builder.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
     165: pop
     166: aload_0
     167: aload_2
     168: invokevirtual #104                // Method okhttp3/HttpUrl$Builder.build:()Lokhttp3/HttpUrl;
     171: putfield      #37                 // Field url:Lokhttp3/HttpUrl;
     174: aload_0
     175: invokespecial #48                 // Method setCanonicalQueryString:()V
     178: aload_0
     179: new           #9                  // class java/lang/StringBuilder
     182: dup
     183: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     186: aload_0
     187: getfield      #2                  // Field request:Lokhttp3/Request;
     190: invokevirtual #49                 // Method okhttp3/Request.method:()Ljava/lang/String;
     193: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: ldc           #50                 // String \n
     198: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload_0
     202: getfield      #37                 // Field url:Lokhttp3/HttpUrl;
     205: invokevirtual #51                 // Method okhttp3/HttpUrl.encodedPath:()Ljava/lang/String;
     208: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: ldc           #50                 // String \n
     213: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_0
     217: getfield      #40                 // Field canonicalQueryString:Ljava/lang/String;
     220: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: ldc           #50                 // String \n
     225: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: ldc           #50                 // String \n
     230: invokestatic  #33                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
     233: ldc           #52                 // String :
     235: invokevirtual #44                 // Method com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
     238: aload_0
     239: getfield      #20                 // Field canonicalHeaders:Ljava/util/Map;
     242: invokevirtual #45                 // Method com/google/common/base/Joiner$MapJoiner.join:(Ljava/util/Map;)Ljava/lang/String;
     245: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: ldc           #53                 // String \n\n
     250: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: aload_0
     254: getfield      #36                 // Field signedHeaders:Ljava/lang/String;
     257: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     260: ldc           #50                 // String \n
     262: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: aload_0
     266: getfield      #3                  // Field contentSha256:Ljava/lang/String;
     269: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: putfield      #54                 // Field canonicalRequest:Ljava/lang/String;
     278: aload_0
     279: aload_0
     280: getfield      #54                 // Field canonicalRequest:Ljava/lang/String;
     283: invokestatic  #55                 // Method io/minio/Digest.sha256Hash:(Ljava/lang/String;)Ljava/lang/String;
     286: putfield      #56                 // Field canonicalRequestHash:Ljava/lang/String;
     289: return

  public static okhttp3.HttpUrl presignV4(okhttp3.Request, java.lang.String, java.lang.String, java.lang.String, int) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: ldc           #105                // String UNSIGNED-PAYLOAD
       2: astore        5
       4: getstatic     #58                 // Field io/minio/DateFormat.AMZ_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
       7: aload_0
       8: ldc           #83                 // String x-amz-date
      10: invokevirtual #82                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
      13: invokevirtual #84                 // Method org/joda/time/format/DateTimeFormatter.parseDateTime:(Ljava/lang/String;)Lorg/joda/time/DateTime;
      16: astore        6
      18: new           #75                 // class io/minio/Signer
      21: dup
      22: aload_0
      23: aload         5
      25: aload         6
      27: aload_1
      28: aload_2
      29: aload_3
      30: aconst_null
      31: invokespecial #76                 // Method "<init>":(Lokhttp3/Request;Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      34: astore        7
      36: aload         7
      38: invokespecial #77                 // Method setScope:()V
      41: aload         7
      43: iload         4
      45: invokespecial #106                // Method setPresignCanonicalRequest:(I)V
      48: aload         7
      50: invokespecial #86                 // Method setStringToSign:()V
      53: aload         7
      55: invokespecial #79                 // Method setSigningKey:()V
      58: aload         7
      60: invokespecial #80                 // Method setSignature:()V
      63: aload         7
      65: getfield      #37                 // Field url:Lokhttp3/HttpUrl;
      68: invokevirtual #94                 // Method okhttp3/HttpUrl.newBuilder:()Lokhttp3/HttpUrl$Builder;
      71: ldc           #107                // String X-Amz-Signature
      73: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
      76: aload         7
      78: getfield      #70                 // Field signature:Ljava/lang/String;
      81: invokestatic  #96                 // Method io/minio/S3Escaper.encode:(Ljava/lang/String;)Ljava/lang/String;
      84: invokevirtual #98                 // Method okhttp3/HttpUrl$Builder.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
      87: invokevirtual #104                // Method okhttp3/HttpUrl$Builder.build:()Lokhttp3/HttpUrl;
      90: areturn

  public static java.lang.String credential(java.lang.String, org.joda.time.DateTime, java.lang.String);
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #14                 // String /
      13: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: getstatic     #11                 // Field io/minio/DateFormat.SIGNER_DATE_FORMAT:Lorg/joda/time/format/DateTimeFormatter;
      20: invokevirtual #12                 // Method org/joda/time/DateTime.toString:(Lorg/joda/time/format/DateTimeFormatter;)Ljava/lang/String;
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #14                 // String /
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #15                 // String /s3/aws4_request
      37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  public static java.lang.String postPresignV4(java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: new           #75                 // class io/minio/Signer
       3: dup
       4: aconst_null
       5: aconst_null
       6: aload_2
       7: aload_3
       8: aconst_null
       9: aload_1
      10: aconst_null
      11: invokespecial #76                 // Method "<init>":(Lokhttp3/Request;Ljava/lang/String;Lorg/joda/time/DateTime;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      14: astore        4
      16: aload         4
      18: aload_0
      19: putfield      #59                 // Field stringToSign:Ljava/lang/String;
      22: aload         4
      24: invokespecial #79                 // Method setSigningKey:()V
      27: aload         4
      29: invokespecial #80                 // Method setSignature:()V
      32: aload         4
      34: getfield      #70                 // Field signature:Ljava/lang/String;
      37: areturn

  public static byte[] sumHmac(byte[], byte[]) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
    Code:
       0: ldc           #108                // String HmacSHA256
       2: invokestatic  #109                // Method javax/crypto/Mac.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;
       5: astore_2
       6: aload_2
       7: new           #110                // class javax/crypto/spec/SecretKeySpec
      10: dup
      11: aload_0
      12: ldc           #108                // String HmacSHA256
      14: invokespecial #111                // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      17: invokevirtual #112                // Method javax/crypto/Mac.init:(Ljava/security/Key;)V
      20: aload_2
      21: aload_1
      22: invokevirtual #113                // Method javax/crypto/Mac.update:([B)V
      25: aload_2
      26: invokevirtual #114                // Method javax/crypto/Mac.doFinal:()[B
      29: areturn

  static {};
    Code:
       0: new           #115                // class java/util/HashSet
       3: dup
       4: invokespecial #116                // Method java/util/HashSet."<init>":()V
       7: putstatic     #28                 // Field IGNORED_HEADERS:Ljava/util/Set;
      10: getstatic     #28                 // Field IGNORED_HEADERS:Ljava/util/Set;
      13: ldc           #117                // String authorization
      15: invokeinterface #118,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: getstatic     #28                 // Field IGNORED_HEADERS:Ljava/util/Set;
      24: ldc           #119                // String content-type
      26: invokeinterface #118,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: getstatic     #28                 // Field IGNORED_HEADERS:Ljava/util/Set;
      35: ldc           #120                // String content-length
      37: invokeinterface #118,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: pop
      43: getstatic     #28                 // Field IGNORED_HEADERS:Ljava/util/Set;
      46: ldc           #121                // String user-agent
      48: invokeinterface #118,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      53: pop
      54: return
}
