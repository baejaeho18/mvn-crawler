Compiled from "GridFSFile.java"
public abstract class com.mongodb.gridfs.GridFSFile implements com.mongodb.DBObject {
  private static final java.util.Set<java.lang.String> VALID_FIELDS;

  final com.mongodb.DBObject extra;

  com.mongodb.gridfs.GridFS fs;

  java.lang.Object id;

  java.lang.String filename;

  java.lang.String contentType;

  long length;

  long chunkSize;

  java.util.Date uploadDate;

  java.lang.String md5;

  public com.mongodb.gridfs.GridFSFile();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/mongodb/BasicDBObject
       8: dup
       9: invokespecial #3                  // Method com/mongodb/BasicDBObject."<init>":()V
      12: putfield      #4                  // Field extra:Lcom/mongodb/DBObject;
      15: return

  public void save();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       4: ifnonnull     17
       7: new           #6                  // class com/mongodb/MongoException
      10: dup
      11: ldc           #7                  // String need fs
      13: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
      21: invokevirtual #9                  // Method com/mongodb/gridfs/GridFS.getFilesCollection:()Lcom/mongodb/DBCollection;
      24: aload_0
      25: invokevirtual #10                 // Method com/mongodb/DBCollection.save:(Lcom/mongodb/DBObject;)Lcom/mongodb/WriteResult;
      28: pop
      29: return

  public void validate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       4: ifnonnull     17
       7: new           #6                  // class com/mongodb/MongoException
      10: dup
      11: ldc           #11                 // String no fs
      13: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #12                 // Field md5:Ljava/lang/String;
      21: ifnonnull     34
      24: new           #6                  // class com/mongodb/MongoException
      27: dup
      28: ldc           #13                 // String no md5 stored
      30: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: new           #2                  // class com/mongodb/BasicDBObject
      37: dup
      38: ldc           #14                 // String filemd5
      40: aload_0
      41: getfield      #15                 // Field id:Ljava/lang/Object;
      44: invokespecial #16                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      47: astore_1
      48: aload_1
      49: ldc           #17                 // String root
      51: aload_0
      52: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
      55: invokevirtual #18                 // Method com/mongodb/gridfs/GridFS.getBucketName:()Ljava/lang/String;
      58: invokeinterface #19,  3           // InterfaceMethod com/mongodb/DBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
      68: invokevirtual #20                 // Method com/mongodb/gridfs/GridFS.getDB:()Lcom/mongodb/DB;
      71: aload_1
      72: invokevirtual #21                 // Method com/mongodb/DB.command:(Lcom/mongodb/DBObject;)Lcom/mongodb/CommandResult;
      75: astore_2
      76: aload_2
      77: ifnull        159
      80: aload_2
      81: ldc           #22                 // String md5
      83: invokeinterface #23,  2           // InterfaceMethod com/mongodb/DBObject.containsField:(Ljava/lang/String;)Z
      88: ifeq          159
      91: aload_2
      92: ldc           #22                 // String md5
      94: invokeinterface #24,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      99: invokevirtual #25                 // Method java/lang/Object.toString:()Ljava/lang/String;
     102: astore_3
     103: aload_3
     104: aload_0
     105: getfield      #12                 // Field md5:Ljava/lang/String;
     108: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     111: ifeq          115
     114: return
     115: new           #6                  // class com/mongodb/MongoException
     118: dup
     119: new           #27                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #29                 // String md5 differ.  mine [
     128: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_0
     132: getfield      #12                 // Field md5:Ljava/lang/String;
     135: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: ldc           #31                 // String ] theirs [
     140: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_3
     144: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: ldc           #32                 // String ]
     149: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: new           #6                  // class com/mongodb/MongoException
     162: dup
     163: new           #27                 // class java/lang/StringBuilder
     166: dup
     167: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     170: ldc           #34                 // String no md5 returned from server:
     172: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     175: aload_2
     176: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
     185: athrow

  public int numChunks();
    Code:
       0: aload_0
       1: getfield      #36                 // Field length:J
       4: l2d
       5: dstore_1
       6: dload_1
       7: aload_0
       8: getfield      #37                 // Field chunkSize:J
      11: l2d
      12: ddiv
      13: dstore_1
      14: dload_1
      15: invokestatic  #38                 // Method java/lang/Math.ceil:(D)D
      18: d2i
      19: ireturn

  public java.lang.Object getId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field id:Ljava/lang/Object;
       4: areturn

  public java.lang.String getFilename();
    Code:
       0: aload_0
       1: getfield      #39                 // Field filename:Ljava/lang/String;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #40                 // Field contentType:Ljava/lang/String;
       4: areturn

  public long getLength();
    Code:
       0: aload_0
       1: getfield      #36                 // Field length:J
       4: lreturn

  public long getChunkSize();
    Code:
       0: aload_0
       1: getfield      #37                 // Field chunkSize:J
       4: lreturn

  public java.util.Date getUploadDate();
    Code:
       0: aload_0
       1: getfield      #41                 // Field uploadDate:Ljava/util/Date;
       4: areturn

  public java.util.List<java.lang.String> getAliases();
    Code:
       0: aload_0
       1: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
       4: ldc           #42                 // String aliases
       6: invokeinterface #24,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #43                 // class java/util/List
      14: areturn

  public com.mongodb.DBObject getMetaData();
    Code:
       0: aload_0
       1: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
       4: ldc           #44                 // String metadata
       6: invokeinterface #24,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #45                 // class com/mongodb/DBObject
      14: areturn

  public void setMetaData(com.mongodb.DBObject);
    Code:
       0: aload_0
       1: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
       4: ldc           #44                 // String metadata
       6: aload_1
       7: invokeinterface #19,  3           // InterfaceMethod com/mongodb/DBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: return

  public java.lang.String getMD5();
    Code:
       0: aload_0
       1: getfield      #12                 // Field md5:Ljava/lang/String;
       4: areturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #46                 // class java/lang/RuntimeException
       7: dup
       8: ldc           #47                 // String key should never be null
      10: invokespecial #48                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ldc           #49                 // String _id
      17: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          31
      23: aload_0
      24: aload_2
      25: putfield      #15                 // Field id:Ljava/lang/Object;
      28: goto          177
      31: aload_1
      32: ldc           #50                 // String filename
      34: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          59
      40: aload_0
      41: aload_2
      42: ifnonnull     49
      45: aconst_null
      46: goto          53
      49: aload_2
      50: invokevirtual #25                 // Method java/lang/Object.toString:()Ljava/lang/String;
      53: putfield      #39                 // Field filename:Ljava/lang/String;
      56: goto          177
      59: aload_1
      60: ldc           #51                 // String contentType
      62: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      65: ifeq          79
      68: aload_0
      69: aload_2
      70: checkcast     #52                 // class java/lang/String
      73: putfield      #40                 // Field contentType:Ljava/lang/String;
      76: goto          177
      79: aload_1
      80: ldc           #53                 // String length
      82: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          102
      88: aload_0
      89: aload_2
      90: checkcast     #54                 // class java/lang/Number
      93: invokevirtual #55                 // Method java/lang/Number.longValue:()J
      96: putfield      #36                 // Field length:J
      99: goto          177
     102: aload_1
     103: ldc           #56                 // String chunkSize
     105: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     108: ifeq          125
     111: aload_0
     112: aload_2
     113: checkcast     #54                 // class java/lang/Number
     116: invokevirtual #55                 // Method java/lang/Number.longValue:()J
     119: putfield      #37                 // Field chunkSize:J
     122: goto          177
     125: aload_1
     126: ldc           #57                 // String uploadDate
     128: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     131: ifeq          145
     134: aload_0
     135: aload_2
     136: checkcast     #58                 // class java/util/Date
     139: putfield      #41                 // Field uploadDate:Ljava/util/Date;
     142: goto          177
     145: aload_1
     146: ldc           #22                 // String md5
     148: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     151: ifeq          165
     154: aload_0
     155: aload_2
     156: checkcast     #52                 // class java/lang/String
     159: putfield      #12                 // Field md5:Ljava/lang/String;
     162: goto          177
     165: aload_0
     166: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
     169: aload_1
     170: aload_2
     171: invokeinterface #19,  3           // InterfaceMethod com/mongodb/DBObject.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     176: pop
     177: aload_2
     178: areturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #59                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #60                 // String Key should never be null
      10: invokespecial #61                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: ldc           #49                 // String _id
      17: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          28
      23: aload_0
      24: getfield      #15                 // Field id:Ljava/lang/Object;
      27: areturn
      28: aload_1
      29: ldc           #50                 // String filename
      31: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          42
      37: aload_0
      38: getfield      #39                 // Field filename:Ljava/lang/String;
      41: areturn
      42: aload_1
      43: ldc           #51                 // String contentType
      45: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          56
      51: aload_0
      52: getfield      #40                 // Field contentType:Ljava/lang/String;
      55: areturn
      56: aload_1
      57: ldc           #53                 // String length
      59: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          73
      65: aload_0
      66: getfield      #36                 // Field length:J
      69: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      72: areturn
      73: aload_1
      74: ldc           #56                 // String chunkSize
      76: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          90
      82: aload_0
      83: getfield      #37                 // Field chunkSize:J
      86: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      89: areturn
      90: aload_1
      91: ldc           #57                 // String uploadDate
      93: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          104
      99: aload_0
     100: getfield      #41                 // Field uploadDate:Ljava/util/Date;
     103: areturn
     104: aload_1
     105: ldc           #22                 // String md5
     107: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifeq          118
     113: aload_0
     114: getfield      #12                 // Field md5:Ljava/lang/String;
     117: areturn
     118: aload_0
     119: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
     122: aload_1
     123: invokeinterface #24,  2           // InterfaceMethod com/mongodb/DBObject.get:(Ljava/lang/String;)Ljava/lang/Object;
     128: areturn

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method containsField:(Ljava/lang/String;)Z
       5: ireturn

  public boolean containsField(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method keySet:()Ljava/util/Set;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: new           #66                 // class java/util/HashSet
       3: dup
       4: invokespecial #67                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #68                 // Field VALID_FIELDS:Ljava/util/Set;
      12: invokeinterface #69,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      17: pop
      18: aload_1
      19: aload_0
      20: getfield      #4                  // Field extra:Lcom/mongodb/DBObject;
      23: invokeinterface #70,  1           // InterfaceMethod com/mongodb/DBObject.keySet:()Ljava/util/Set;
      28: invokeinterface #69,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      33: pop
      34: aload_1
      35: areturn

  public boolean isPartialObject();
    Code:
       0: iconst_0
       1: ireturn

  public void markAsPartialObject();
    Code:
       0: new           #6                  // class com/mongodb/MongoException
       3: dup
       4: ldc           #71                 // String Can\'t load partial GridFSFile file
       6: invokespecial #8                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #72                 // Method com/mongodb/util/JSON.serialize:(Ljava/lang/Object;)Ljava/lang/String;
       4: areturn

  protected void setGridFS(com.mongodb.gridfs.GridFS);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       5: return

  protected com.mongodb.gridfs.GridFS getGridFS();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fs:Lcom/mongodb/gridfs/GridFS;
       4: areturn

  public void putAll(org.bson.BSONObject);
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void putAll(java.util.Map);
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.util.Map<?, ?> toMap();
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object removeField(java.lang.String);
    Code:
       0: new           #73                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #74                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: new           #66                 // class java/util/HashSet
       3: dup
       4: bipush        8
       6: anewarray     #52                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #49                 // String _id
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #50                 // String filename
      18: aastore
      19: dup
      20: iconst_2
      21: ldc           #51                 // String contentType
      23: aastore
      24: dup
      25: iconst_3
      26: ldc           #53                 // String length
      28: aastore
      29: dup
      30: iconst_4
      31: ldc           #56                 // String chunkSize
      33: aastore
      34: dup
      35: iconst_5
      36: ldc           #57                 // String uploadDate
      38: aastore
      39: dup
      40: bipush        6
      42: ldc           #42                 // String aliases
      44: aastore
      45: dup
      46: bipush        7
      48: ldc           #22                 // String md5
      50: aastore
      51: invokestatic  #75                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      54: invokespecial #76                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      57: invokestatic  #77                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      60: putstatic     #68                 // Field VALID_FIELDS:Ljava/util/Set;
      63: return
}
