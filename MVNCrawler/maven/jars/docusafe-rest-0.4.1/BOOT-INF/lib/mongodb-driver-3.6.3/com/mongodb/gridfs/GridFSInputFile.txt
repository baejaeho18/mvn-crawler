Compiled from "GridFSInputFile.java"
public class com.mongodb.gridfs.GridFSInputFile extends com.mongodb.gridfs.GridFSFile {
  private final java.io.InputStream inputStream;

  private final boolean closeStreamOnPersist;

  private boolean savedChunks;

  private byte[] buffer;

  private int currentChunkNumber;

  private int currentBufferPosition;

  private long totalBytes;

  private java.io.OutputStream outputStream;

  private java.security.MessageDigest messageDigester;

  protected com.mongodb.gridfs.GridFSInputFile(com.mongodb.gridfs.GridFS, java.io.InputStream, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method com/mongodb/gridfs/GridFSFile."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field savedChunks:Z
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field buffer:[B
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field currentChunkNumber:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field currentBufferPosition:I
      24: aload_0
      25: lconst_0
      26: putfield      #9                  // Field totalBytes:J
      29: aload_0
      30: aconst_null
      31: putfield      #10                 // Field outputStream:Ljava/io/OutputStream;
      34: aload_0
      35: aconst_null
      36: putfield      #11                 // Field messageDigester:Ljava/security/MessageDigest;
      39: aload_0
      40: aload_1
      41: putfield      #12                 // Field fs:Lcom/mongodb/gridfs/GridFS;
      44: aload_0
      45: aload_2
      46: putfield      #13                 // Field inputStream:Ljava/io/InputStream;
      49: aload_0
      50: aload_3
      51: putfield      #14                 // Field filename:Ljava/lang/String;
      54: aload_0
      55: iload         4
      57: putfield      #15                 // Field closeStreamOnPersist:Z
      60: aload_0
      61: new           #16                 // class org/bson/types/ObjectId
      64: dup
      65: invokespecial #17                 // Method org/bson/types/ObjectId."<init>":()V
      68: putfield      #18                 // Field id:Ljava/lang/Object;
      71: aload_0
      72: ldc2_w        #20                 // long 261120l
      75: putfield      #22                 // Field chunkSize:J
      78: aload_0
      79: new           #23                 // class java/util/Date
      82: dup
      83: invokespecial #24                 // Method java/util/Date."<init>":()V
      86: putfield      #25                 // Field uploadDate:Ljava/util/Date;
      89: aload_0
      90: ldc           #26                 // String MD5
      92: invokestatic  #27                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      95: putfield      #11                 // Field messageDigester:Ljava/security/MessageDigest;
      98: goto          113
     101: astore        5
     103: new           #29                 // class java/lang/RuntimeException
     106: dup
     107: ldc           #30                 // String No MD5!
     109: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload_0
     114: getfield      #11                 // Field messageDigester:Ljava/security/MessageDigest;
     117: invokevirtual #32                 // Method java/security/MessageDigest.reset:()V
     120: aload_0
     121: aload_0
     122: getfield      #22                 // Field chunkSize:J
     125: l2i
     126: newarray       byte
     128: putfield      #4                  // Field buffer:[B
     131: return
    Exception table:
       from    to  target type
          89    98   101   Class java/security/NoSuchAlgorithmException

  protected com.mongodb.gridfs.GridFSInputFile(com.mongodb.gridfs.GridFS, java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #33                 // Method "<init>":(Lcom/mongodb/gridfs/GridFS;Ljava/io/InputStream;Ljava/lang/String;Z)V
       8: return

  protected com.mongodb.gridfs.GridFSInputFile(com.mongodb.gridfs.GridFS, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #34                 // Method "<init>":(Lcom/mongodb/gridfs/GridFS;Ljava/io/InputStream;Ljava/lang/String;)V
       7: return

  protected com.mongodb.gridfs.GridFSInputFile(com.mongodb.gridfs.GridFS);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #34                 // Method "<init>":(Lcom/mongodb/gridfs/GridFS;Ljava/io/InputStream;Ljava/lang/String;)V
       7: return

  public void setId(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field id:Ljava/lang/Object;
       5: return

  public void setFilename(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field filename:Ljava/lang/String;
       5: return

  public void setContentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field contentType:Ljava/lang/String;
       5: return

  public void setChunkSize(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field outputStream:Ljava/io/OutputStream;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #7                  // Field savedChunks:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: lload_1
      17: putfield      #22                 // Field chunkSize:J
      20: aload_0
      21: aload_0
      22: getfield      #22                 // Field chunkSize:J
      25: l2i
      26: newarray       byte
      28: putfield      #4                  // Field buffer:[B
      31: return

  public void save();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #22                 // Field chunkSize:J
       5: invokevirtual #36                 // Method save:(J)V
       8: return

  public void save(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field outputStream:Ljava/io/OutputStream;
       4: ifnull        17
       7: new           #37                 // class com/mongodb/MongoException
      10: dup
      11: ldc           #38                 // String cannot mix OutputStream and regular save()
      13: invokespecial #39                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field savedChunks:Z
      21: ifne          45
      24: aload_0
      25: lload_1
      26: invokevirtual #40                 // Method saveChunks:(J)I
      29: pop
      30: goto          45
      33: astore_3
      34: new           #37                 // class com/mongodb/MongoException
      37: dup
      38: ldc           #42                 // String couldn\'t save chunks
      40: aload_3
      41: invokespecial #43                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: aload_0
      46: invokespecial #1                  // Method com/mongodb/gridfs/GridFSFile.save:()V
      49: return
    Exception table:
       from    to  target type
          24    30    33   Class java/io/IOException

  public int saveChunks() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #22                 // Field chunkSize:J
       5: invokevirtual #40                 // Method saveChunks:(J)I
       8: ireturn

  public int saveChunks(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field outputStream:Ljava/io/OutputStream;
       4: ifnull        17
       7: new           #37                 // class com/mongodb/MongoException
      10: dup
      11: ldc           #44                 // String Cannot mix OutputStream and regular save()
      13: invokespecial #39                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field savedChunks:Z
      21: ifeq          34
      24: new           #37                 // class com/mongodb/MongoException
      27: dup
      28: ldc           #45                 // String Chunks already saved!
      30: invokespecial #39                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: lload_1
      35: lconst_0
      36: lcmp
      37: ifgt          50
      40: new           #37                 // class com/mongodb/MongoException
      43: dup
      44: ldc           #46                 // String chunkSize must be greater than zero
      46: invokespecial #39                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #22                 // Field chunkSize:J
      54: lload_1
      55: lcmp
      56: ifeq          75
      59: aload_0
      60: lload_1
      61: putfield      #22                 // Field chunkSize:J
      64: aload_0
      65: aload_0
      66: getfield      #22                 // Field chunkSize:J
      69: l2i
      70: newarray       byte
      72: putfield      #4                  // Field buffer:[B
      75: iconst_0
      76: istore_3
      77: iload_3
      78: iflt          99
      81: aload_0
      82: iconst_0
      83: putfield      #5                  // Field currentBufferPosition:I
      86: aload_0
      87: invokespecial #47                 // Method _readStream2Buffer:()I
      90: istore_3
      91: aload_0
      92: iconst_1
      93: invokespecial #3                  // Method dumpBuffer:(Z)V
      96: goto          77
      99: aload_0
     100: invokespecial #2                  // Method finishData:()V
     103: aload_0
     104: getfield      #8                  // Field currentChunkNumber:I
     107: ireturn

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #10                 // Field outputStream:Ljava/io/OutputStream;
       4: ifnonnull     20
       7: aload_0
       8: new           #48                 // class com/mongodb/gridfs/GridFSInputFile$GridFSOutputStream
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #49                 // Method com/mongodb/gridfs/GridFSInputFile$GridFSOutputStream."<init>":(Lcom/mongodb/gridfs/GridFSInputFile;Lcom/mongodb/gridfs/GridFSInputFile$1;)V
      17: putfield      #10                 // Field outputStream:Ljava/io/OutputStream;
      20: aload_0
      21: getfield      #10                 // Field outputStream:Ljava/io/OutputStream;
      24: areturn

  private void dumpBuffer(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentBufferPosition:I
       4: i2l
       5: aload_0
       6: getfield      #22                 // Field chunkSize:J
       9: lcmp
      10: ifge          18
      13: iload_1
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #5                  // Field currentBufferPosition:I
      22: ifne          26
      25: return
      26: aload_0
      27: getfield      #4                  // Field buffer:[B
      30: astore_2
      31: aload_0
      32: getfield      #5                  // Field currentBufferPosition:I
      35: i2l
      36: aload_0
      37: getfield      #22                 // Field chunkSize:J
      40: lcmp
      41: ifeq          65
      44: aload_0
      45: getfield      #5                  // Field currentBufferPosition:I
      48: newarray       byte
      50: astore_2
      51: aload_0
      52: getfield      #4                  // Field buffer:[B
      55: iconst_0
      56: aload_2
      57: iconst_0
      58: aload_0
      59: getfield      #5                  // Field currentBufferPosition:I
      62: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      65: aload_0
      66: aload_0
      67: getfield      #18                 // Field id:Ljava/lang/Object;
      70: aload_0
      71: getfield      #8                  // Field currentChunkNumber:I
      74: aload_2
      75: invokevirtual #51                 // Method createChunk:(Ljava/lang/Object;I[B)Lcom/mongodb/DBObject;
      78: astore_3
      79: aload_0
      80: getfield      #12                 // Field fs:Lcom/mongodb/gridfs/GridFS;
      83: invokevirtual #52                 // Method com/mongodb/gridfs/GridFS.getChunksCollection:()Lcom/mongodb/DBCollection;
      86: aload_3
      87: invokevirtual #53                 // Method com/mongodb/DBCollection.save:(Lcom/mongodb/DBObject;)Lcom/mongodb/WriteResult;
      90: pop
      91: aload_0
      92: dup
      93: getfield      #8                  // Field currentChunkNumber:I
      96: iconst_1
      97: iadd
      98: putfield      #8                  // Field currentChunkNumber:I
     101: aload_0
     102: dup
     103: getfield      #9                  // Field totalBytes:J
     106: aload_2
     107: arraylength
     108: i2l
     109: ladd
     110: putfield      #9                  // Field totalBytes:J
     113: aload_0
     114: getfield      #11                 // Field messageDigester:Ljava/security/MessageDigest;
     117: aload_2
     118: invokevirtual #54                 // Method java/security/MessageDigest.update:([B)V
     121: aload_0
     122: iconst_0
     123: putfield      #5                  // Field currentBufferPosition:I
     126: return

  protected com.mongodb.DBObject createChunk(java.lang.Object, int, byte[]);
    Code:
       0: new           #55                 // class com/mongodb/BasicDBObject
       3: dup
       4: ldc           #56                 // String files_id
       6: aload_1
       7: invokespecial #57                 // Method com/mongodb/BasicDBObject."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      10: ldc           #58                 // String n
      12: iload_2
      13: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokevirtual #60                 // Method com/mongodb/BasicDBObject.append:(Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/BasicDBObject;
      19: ldc           #61                 // String data
      21: aload_3
      22: invokevirtual #60                 // Method com/mongodb/BasicDBObject.append:(Ljava/lang/String;Ljava/lang/Object;)Lcom/mongodb/BasicDBObject;
      25: areturn

  private int _readStream2Buffer() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #5                  // Field currentBufferPosition:I
       6: i2l
       7: aload_0
       8: getfield      #22                 // Field chunkSize:J
      11: lcmp
      12: ifge          76
      15: iload_1
      16: iflt          76
      19: aload_0
      20: getfield      #13                 // Field inputStream:Ljava/io/InputStream;
      23: aload_0
      24: getfield      #4                  // Field buffer:[B
      27: aload_0
      28: getfield      #5                  // Field currentBufferPosition:I
      31: aload_0
      32: getfield      #22                 // Field chunkSize:J
      35: l2i
      36: aload_0
      37: getfield      #5                  // Field currentBufferPosition:I
      40: isub
      41: invokevirtual #62                 // Method java/io/InputStream.read:([BII)I
      44: istore_1
      45: iload_1
      46: ifle          62
      49: aload_0
      50: dup
      51: getfield      #5                  // Field currentBufferPosition:I
      54: iload_1
      55: iadd
      56: putfield      #5                  // Field currentBufferPosition:I
      59: goto          2
      62: iload_1
      63: ifne          2
      66: new           #29                 // class java/lang/RuntimeException
      69: dup
      70: ldc           #63                 // String i\'m doing something wrong
      72: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: iload_1
      77: ireturn

  private void finishData();
    Code:
       0: aload_0
       1: getfield      #7                  // Field savedChunks:Z
       4: ifne          64
       7: aload_0
       8: aload_0
       9: getfield      #11                 // Field messageDigester:Ljava/security/MessageDigest;
      12: invokevirtual #64                 // Method java/security/MessageDigest.digest:()[B
      15: invokestatic  #65                 // Method com/mongodb/util/Util.toHex:([B)Ljava/lang/String;
      18: putfield      #66                 // Field md5:Ljava/lang/String;
      21: aload_0
      22: aconst_null
      23: putfield      #11                 // Field messageDigester:Ljava/security/MessageDigest;
      26: aload_0
      27: aload_0
      28: getfield      #9                  // Field totalBytes:J
      31: putfield      #67                 // Field length:J
      34: aload_0
      35: iconst_1
      36: putfield      #7                  // Field savedChunks:Z
      39: aload_0
      40: getfield      #13                 // Field inputStream:Ljava/io/InputStream;
      43: ifnull        60
      46: aload_0
      47: getfield      #15                 // Field closeStreamOnPersist:Z
      50: ifeq          60
      53: aload_0
      54: getfield      #13                 // Field inputStream:Ljava/io/InputStream;
      57: invokevirtual #68                 // Method java/io/InputStream.close:()V
      60: goto          64
      63: astore_1
      64: return
    Exception table:
       from    to  target type
          39    60    63   Class java/io/IOException

  static int access$100(com.mongodb.gridfs.GridFSInputFile);
    Code:
       0: aload_0
       1: getfield      #5                  // Field currentBufferPosition:I
       4: ireturn

  static byte[] access$200(com.mongodb.gridfs.GridFSInputFile);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: areturn

  static int access$102(com.mongodb.gridfs.GridFSInputFile, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field currentBufferPosition:I
       6: ireturn

  static void access$300(com.mongodb.gridfs.GridFSInputFile, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method dumpBuffer:(Z)V
       5: return

  static void access$400(com.mongodb.gridfs.GridFSInputFile);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method finishData:()V
       4: return

  static void access$501(com.mongodb.gridfs.GridFSInputFile);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/mongodb/gridfs/GridFSFile.save:()V
       4: return
}
