Compiled from "ReflectionDBObject.java"
public abstract class com.mongodb.ReflectionDBObject implements com.mongodb.DBObject {
  com.mongodb.ReflectionDBObject$JavaWrapper _wrapper;

  java.lang.Object _id;

  private static final java.util.Map<java.lang.Class, com.mongodb.ReflectionDBObject$JavaWrapper> _wrappers;

  private static final java.util.Set<java.lang.String> IGNORE_FIELDS;

  public com.mongodb.ReflectionDBObject();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getWrapper:()Lcom/mongodb/ReflectionDBObject$JavaWrapper;
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method com/mongodb/ReflectionDBObject$JavaWrapper.get:(Lcom/mongodb/ReflectionDBObject;Ljava/lang/String;)Ljava/lang/Object;
       9: areturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getWrapper:()Lcom/mongodb/ReflectionDBObject$JavaWrapper;
       4: invokevirtual #5                  // Method com/mongodb/ReflectionDBObject$JavaWrapper.keySet:()Ljava/util/Set;
       7: areturn

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method containsField:(Ljava/lang/String;)Z
       5: ireturn

  public boolean containsField(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getWrapper:()Lcom/mongodb/ReflectionDBObject$JavaWrapper;
       4: aload_1
       5: invokevirtual #7                  // Method com/mongodb/ReflectionDBObject$JavaWrapper.containsKey:(Ljava/lang/String;)Z
       8: ireturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getWrapper:()Lcom/mongodb/ReflectionDBObject$JavaWrapper;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #8                  // Method com/mongodb/ReflectionDBObject$JavaWrapper.set:(Lcom/mongodb/ReflectionDBObject;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          54
      21: aload_2
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #13                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: invokevirtual #15                 // Method java/lang/Object.toString:()Ljava/lang/String;
      41: aload_3
      42: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokevirtual #17                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          12
      54: return

  public void putAll(org.bson.BSONObject);
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod org/bson/BSONObject.keySet:()Ljava/util/Set;
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          47
      21: aload_2
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #19                 // class java/lang/String
      30: astore_3
      31: aload_0
      32: aload_3
      33: aload_1
      34: aload_3
      35: invokeinterface #20,  2           // InterfaceMethod org/bson/BSONObject.get:(Ljava/lang/String;)Ljava/lang/Object;
      40: invokevirtual #17                 // Method put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: goto          12
      47: return

  public java.lang.Object get_id();
    Code:
       0: aload_0
       1: getfield      #21                 // Field _id:Ljava/lang/Object;
       4: areturn

  public void set_id(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field _id:Ljava/lang/Object;
       5: return

  public boolean isPartialObject();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Map toMap();
    Code:
       0: new           #22                 // class java/util/HashMap
       3: dup
       4: invokespecial #23                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #24                 // Method keySet:()Ljava/util/Set;
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          68
      27: aload_2
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore_3
      34: aload_1
      35: aload_3
      36: aload_0
      37: new           #25                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      44: aload_3
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #28                 // String
      50: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokevirtual #31                 // Method get:(Ljava/lang/String;)Ljava/lang/Object;
      59: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          18
      68: aload_1
      69: areturn

  public void markAsPartialObject();
    Code:
       0: new           #33                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #34                 // String ReflectionDBObjects can\'t be partial
       6: invokespecial #35                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object removeField(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #37                 // String can\'t remove from a ReflectionDBObject
       6: invokespecial #38                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  com.mongodb.ReflectionDBObject$JavaWrapper getWrapper();
    Code:
       0: aload_0
       1: getfield      #39                 // Field _wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
       4: ifnull        12
       7: aload_0
       8: getfield      #39                 // Field _wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      11: areturn
      12: aload_0
      13: aload_0
      14: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokestatic  #41                 // Method getWrapper:(Ljava/lang/Class;)Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      20: putfield      #39                 // Field _wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      23: aload_0
      24: getfield      #39                 // Field _wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      27: areturn

  public static com.mongodb.ReflectionDBObject$JavaWrapper getWrapperIfReflectionObject(java.lang.Class);
    Code:
       0: ldc           #42                 // class com/mongodb/ReflectionDBObject
       2: aload_0
       3: invokevirtual #43                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          14
       9: aload_0
      10: invokestatic  #41                 // Method getWrapper:(Ljava/lang/Class;)Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      13: areturn
      14: aconst_null
      15: areturn

  public static com.mongodb.ReflectionDBObject$JavaWrapper getWrapper(java.lang.Class);
    Code:
       0: getstatic     #44                 // Field _wrappers:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #45,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #46                 // class com/mongodb/ReflectionDBObject$JavaWrapper
      12: astore_1
      13: aload_1
      14: ifnonnull     37
      17: new           #46                 // class com/mongodb/ReflectionDBObject$JavaWrapper
      20: dup
      21: aload_0
      22: invokespecial #47                 // Method com/mongodb/ReflectionDBObject$JavaWrapper."<init>":(Ljava/lang/Class;)V
      25: astore_1
      26: getstatic     #44                 // Field _wrappers:Ljava/util/Map;
      29: aload_0
      30: aload_1
      31: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_1
      38: areturn

  static java.util.Set access$000();
    Code:
       0: getstatic     #1                  // Field IGNORE_FIELDS:Ljava/util/Set;
       3: areturn

  static {};
    Code:
       0: new           #22                 // class java/util/HashMap
       3: dup
       4: invokespecial #23                 // Method java/util/HashMap."<init>":()V
       7: invokestatic  #48                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #44                 // Field _wrappers:Ljava/util/Map;
      13: new           #49                 // class java/util/HashSet
      16: dup
      17: invokespecial #50                 // Method java/util/HashSet."<init>":()V
      20: putstatic     #1                  // Field IGNORE_FIELDS:Ljava/util/Set;
      23: getstatic     #1                  // Field IGNORE_FIELDS:Ljava/util/Set;
      26: ldc           #51                 // String Int
      28: invokeinterface #52,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      33: pop
      34: return
}
