Compiled from "MongoCollection.java"
public interface com.mongodb.client.MongoCollection<TDocument> {
  public abstract com.mongodb.MongoNamespace getNamespace();

  public abstract java.lang.Class<TDocument> getDocumentClass();

  public abstract org.bson.codecs.configuration.CodecRegistry getCodecRegistry();

  public abstract com.mongodb.ReadPreference getReadPreference();

  public abstract com.mongodb.WriteConcern getWriteConcern();

  public abstract com.mongodb.ReadConcern getReadConcern();

  public abstract <NewTDocument> com.mongodb.client.MongoCollection<NewTDocument> withDocumentClass(java.lang.Class<NewTDocument>);

  public abstract com.mongodb.client.MongoCollection<TDocument> withCodecRegistry(org.bson.codecs.configuration.CodecRegistry);

  public abstract com.mongodb.client.MongoCollection<TDocument> withReadPreference(com.mongodb.ReadPreference);

  public abstract com.mongodb.client.MongoCollection<TDocument> withWriteConcern(com.mongodb.WriteConcern);

  public abstract com.mongodb.client.MongoCollection<TDocument> withReadConcern(com.mongodb.ReadConcern);

  public abstract long count();

  public abstract long count(org.bson.conversions.Bson);

  public abstract long count(org.bson.conversions.Bson, com.mongodb.client.model.CountOptions);

  public abstract long count(com.mongodb.session.ClientSession);

  public abstract long count(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract long count(com.mongodb.session.ClientSession, org.bson.conversions.Bson, com.mongodb.client.model.CountOptions);

  public abstract <TResult> com.mongodb.client.DistinctIterable<TResult> distinct(java.lang.String, java.lang.Class<TResult>);

  public abstract <TResult> com.mongodb.client.DistinctIterable<TResult> distinct(java.lang.String, org.bson.conversions.Bson, java.lang.Class<TResult>);

  public abstract <TResult> com.mongodb.client.DistinctIterable<TResult> distinct(com.mongodb.session.ClientSession, java.lang.String, java.lang.Class<TResult>);

  public abstract <TResult> com.mongodb.client.DistinctIterable<TResult> distinct(com.mongodb.session.ClientSession, java.lang.String, org.bson.conversions.Bson, java.lang.Class<TResult>);

  public abstract com.mongodb.client.FindIterable<TDocument> find();

  public abstract <TResult> com.mongodb.client.FindIterable<TResult> find(java.lang.Class<TResult>);

  public abstract com.mongodb.client.FindIterable<TDocument> find(org.bson.conversions.Bson);

  public abstract <TResult> com.mongodb.client.FindIterable<TResult> find(org.bson.conversions.Bson, java.lang.Class<TResult>);

  public abstract com.mongodb.client.FindIterable<TDocument> find(com.mongodb.session.ClientSession);

  public abstract <TResult> com.mongodb.client.FindIterable<TResult> find(com.mongodb.session.ClientSession, java.lang.Class<TResult>);

  public abstract com.mongodb.client.FindIterable<TDocument> find(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract <TResult> com.mongodb.client.FindIterable<TResult> find(com.mongodb.session.ClientSession, org.bson.conversions.Bson, java.lang.Class<TResult>);

  public abstract com.mongodb.client.AggregateIterable<TDocument> aggregate(java.util.List<? extends org.bson.conversions.Bson>);

  public abstract <TResult> com.mongodb.client.AggregateIterable<TResult> aggregate(java.util.List<? extends org.bson.conversions.Bson>, java.lang.Class<TResult>);

  public abstract com.mongodb.client.AggregateIterable<TDocument> aggregate(com.mongodb.session.ClientSession, java.util.List<? extends org.bson.conversions.Bson>);

  public abstract <TResult> com.mongodb.client.AggregateIterable<TResult> aggregate(com.mongodb.session.ClientSession, java.util.List<? extends org.bson.conversions.Bson>, java.lang.Class<TResult>);

  public abstract com.mongodb.client.ChangeStreamIterable<TDocument> watch();

  public abstract <TResult> com.mongodb.client.ChangeStreamIterable<TResult> watch(java.lang.Class<TResult>);

  public abstract com.mongodb.client.ChangeStreamIterable<TDocument> watch(java.util.List<? extends org.bson.conversions.Bson>);

  public abstract <TResult> com.mongodb.client.ChangeStreamIterable<TResult> watch(java.util.List<? extends org.bson.conversions.Bson>, java.lang.Class<TResult>);

  public abstract com.mongodb.client.ChangeStreamIterable<TDocument> watch(com.mongodb.session.ClientSession);

  public abstract <TResult> com.mongodb.client.ChangeStreamIterable<TResult> watch(com.mongodb.session.ClientSession, java.lang.Class<TResult>);

  public abstract com.mongodb.client.ChangeStreamIterable<TDocument> watch(com.mongodb.session.ClientSession, java.util.List<? extends org.bson.conversions.Bson>);

  public abstract <TResult> com.mongodb.client.ChangeStreamIterable<TResult> watch(com.mongodb.session.ClientSession, java.util.List<? extends org.bson.conversions.Bson>, java.lang.Class<TResult>);

  public abstract com.mongodb.client.MapReduceIterable<TDocument> mapReduce(java.lang.String, java.lang.String);

  public abstract <TResult> com.mongodb.client.MapReduceIterable<TResult> mapReduce(java.lang.String, java.lang.String, java.lang.Class<TResult>);

  public abstract com.mongodb.client.MapReduceIterable<TDocument> mapReduce(com.mongodb.session.ClientSession, java.lang.String, java.lang.String);

  public abstract <TResult> com.mongodb.client.MapReduceIterable<TResult> mapReduce(com.mongodb.session.ClientSession, java.lang.String, java.lang.String, java.lang.Class<TResult>);

  public abstract com.mongodb.bulk.BulkWriteResult bulkWrite(java.util.List<? extends com.mongodb.client.model.WriteModel<? extends TDocument>>);

  public abstract com.mongodb.bulk.BulkWriteResult bulkWrite(java.util.List<? extends com.mongodb.client.model.WriteModel<? extends TDocument>>, com.mongodb.client.model.BulkWriteOptions);

  public abstract com.mongodb.bulk.BulkWriteResult bulkWrite(com.mongodb.session.ClientSession, java.util.List<? extends com.mongodb.client.model.WriteModel<? extends TDocument>>);

  public abstract com.mongodb.bulk.BulkWriteResult bulkWrite(com.mongodb.session.ClientSession, java.util.List<? extends com.mongodb.client.model.WriteModel<? extends TDocument>>, com.mongodb.client.model.BulkWriteOptions);

  public abstract void insertOne(TDocument);

  public abstract void insertOne(TDocument, com.mongodb.client.model.InsertOneOptions);

  public abstract void insertOne(com.mongodb.session.ClientSession, TDocument);

  public abstract void insertOne(com.mongodb.session.ClientSession, TDocument, com.mongodb.client.model.InsertOneOptions);

  public abstract void insertMany(java.util.List<? extends TDocument>);

  public abstract void insertMany(java.util.List<? extends TDocument>, com.mongodb.client.model.InsertManyOptions);

  public abstract void insertMany(com.mongodb.session.ClientSession, java.util.List<? extends TDocument>);

  public abstract void insertMany(com.mongodb.session.ClientSession, java.util.List<? extends TDocument>, com.mongodb.client.model.InsertManyOptions);

  public abstract com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson, com.mongodb.client.model.DeleteOptions);

  public abstract com.mongodb.client.result.DeleteResult deleteOne(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.DeleteResult deleteOne(com.mongodb.session.ClientSession, org.bson.conversions.Bson, com.mongodb.client.model.DeleteOptions);

  public abstract com.mongodb.client.result.DeleteResult deleteMany(org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.DeleteResult deleteMany(org.bson.conversions.Bson, com.mongodb.client.model.DeleteOptions);

  public abstract com.mongodb.client.result.DeleteResult deleteMany(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.DeleteResult deleteMany(com.mongodb.session.ClientSession, org.bson.conversions.Bson, com.mongodb.client.model.DeleteOptions);

  public abstract com.mongodb.client.result.UpdateResult replaceOne(org.bson.conversions.Bson, TDocument);

  public abstract com.mongodb.client.result.UpdateResult replaceOne(org.bson.conversions.Bson, TDocument, com.mongodb.client.model.UpdateOptions);

  public abstract com.mongodb.client.result.UpdateResult replaceOne(com.mongodb.session.ClientSession, org.bson.conversions.Bson, TDocument);

  public abstract com.mongodb.client.result.UpdateResult replaceOne(com.mongodb.session.ClientSession, org.bson.conversions.Bson, TDocument, com.mongodb.client.model.UpdateOptions);

  public abstract com.mongodb.client.result.UpdateResult updateOne(org.bson.conversions.Bson, org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.UpdateResult updateOne(org.bson.conversions.Bson, org.bson.conversions.Bson, com.mongodb.client.model.UpdateOptions);

  public abstract com.mongodb.client.result.UpdateResult updateOne(com.mongodb.session.ClientSession, org.bson.conversions.Bson, org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.UpdateResult updateOne(com.mongodb.session.ClientSession, org.bson.conversions.Bson, org.bson.conversions.Bson, com.mongodb.client.model.UpdateOptions);

  public abstract com.mongodb.client.result.UpdateResult updateMany(org.bson.conversions.Bson, org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.UpdateResult updateMany(org.bson.conversions.Bson, org.bson.conversions.Bson, com.mongodb.client.model.UpdateOptions);

  public abstract com.mongodb.client.result.UpdateResult updateMany(com.mongodb.session.ClientSession, org.bson.conversions.Bson, org.bson.conversions.Bson);

  public abstract com.mongodb.client.result.UpdateResult updateMany(com.mongodb.session.ClientSession, org.bson.conversions.Bson, org.bson.conversions.Bson, com.mongodb.client.model.UpdateOptions);

  public abstract TDocument findOneAndDelete(org.bson.conversions.Bson);

  public abstract TDocument findOneAndDelete(org.bson.conversions.Bson, com.mongodb.client.model.FindOneAndDeleteOptions);

  public abstract TDocument findOneAndDelete(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract TDocument findOneAndDelete(com.mongodb.session.ClientSession, org.bson.conversions.Bson, com.mongodb.client.model.FindOneAndDeleteOptions);

  public abstract TDocument findOneAndReplace(org.bson.conversions.Bson, TDocument);

  public abstract TDocument findOneAndReplace(org.bson.conversions.Bson, TDocument, com.mongodb.client.model.FindOneAndReplaceOptions);

  public abstract TDocument findOneAndReplace(com.mongodb.session.ClientSession, org.bson.conversions.Bson, TDocument);

  public abstract TDocument findOneAndReplace(com.mongodb.session.ClientSession, org.bson.conversions.Bson, TDocument, com.mongodb.client.model.FindOneAndReplaceOptions);

  public abstract TDocument findOneAndUpdate(org.bson.conversions.Bson, org.bson.conversions.Bson);

  public abstract TDocument findOneAndUpdate(org.bson.conversions.Bson, org.bson.conversions.Bson, com.mongodb.client.model.FindOneAndUpdateOptions);

  public abstract TDocument findOneAndUpdate(com.mongodb.session.ClientSession, org.bson.conversions.Bson, org.bson.conversions.Bson);

  public abstract TDocument findOneAndUpdate(com.mongodb.session.ClientSession, org.bson.conversions.Bson, org.bson.conversions.Bson, com.mongodb.client.model.FindOneAndUpdateOptions);

  public abstract void drop();

  public abstract void drop(com.mongodb.session.ClientSession);

  public abstract java.lang.String createIndex(org.bson.conversions.Bson);

  public abstract java.lang.String createIndex(org.bson.conversions.Bson, com.mongodb.client.model.IndexOptions);

  public abstract java.lang.String createIndex(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract java.lang.String createIndex(com.mongodb.session.ClientSession, org.bson.conversions.Bson, com.mongodb.client.model.IndexOptions);

  public abstract java.util.List<java.lang.String> createIndexes(java.util.List<com.mongodb.client.model.IndexModel>);

  public abstract java.util.List<java.lang.String> createIndexes(java.util.List<com.mongodb.client.model.IndexModel>, com.mongodb.client.model.CreateIndexOptions);

  public abstract java.util.List<java.lang.String> createIndexes(com.mongodb.session.ClientSession, java.util.List<com.mongodb.client.model.IndexModel>);

  public abstract java.util.List<java.lang.String> createIndexes(com.mongodb.session.ClientSession, java.util.List<com.mongodb.client.model.IndexModel>, com.mongodb.client.model.CreateIndexOptions);

  public abstract com.mongodb.client.ListIndexesIterable<org.bson.Document> listIndexes();

  public abstract <TResult> com.mongodb.client.ListIndexesIterable<TResult> listIndexes(java.lang.Class<TResult>);

  public abstract com.mongodb.client.ListIndexesIterable<org.bson.Document> listIndexes(com.mongodb.session.ClientSession);

  public abstract <TResult> com.mongodb.client.ListIndexesIterable<TResult> listIndexes(com.mongodb.session.ClientSession, java.lang.Class<TResult>);

  public abstract void dropIndex(java.lang.String);

  public abstract void dropIndex(java.lang.String, com.mongodb.client.model.DropIndexOptions);

  public abstract void dropIndex(org.bson.conversions.Bson);

  public abstract void dropIndex(org.bson.conversions.Bson, com.mongodb.client.model.DropIndexOptions);

  public abstract void dropIndex(com.mongodb.session.ClientSession, java.lang.String);

  public abstract void dropIndex(com.mongodb.session.ClientSession, org.bson.conversions.Bson);

  public abstract void dropIndex(com.mongodb.session.ClientSession, java.lang.String, com.mongodb.client.model.DropIndexOptions);

  public abstract void dropIndex(com.mongodb.session.ClientSession, org.bson.conversions.Bson, com.mongodb.client.model.DropIndexOptions);

  public abstract void dropIndexes();

  public abstract void dropIndexes(com.mongodb.session.ClientSession);

  public abstract void dropIndexes(com.mongodb.client.model.DropIndexOptions);

  public abstract void dropIndexes(com.mongodb.session.ClientSession, com.mongodb.client.model.DropIndexOptions);

  public abstract void renameCollection(com.mongodb.MongoNamespace);

  public abstract void renameCollection(com.mongodb.MongoNamespace, com.mongodb.client.model.RenameCollectionOptions);

  public abstract void renameCollection(com.mongodb.session.ClientSession, com.mongodb.MongoNamespace);

  public abstract void renameCollection(com.mongodb.session.ClientSession, com.mongodb.MongoNamespace, com.mongodb.client.model.RenameCollectionOptions);
}
