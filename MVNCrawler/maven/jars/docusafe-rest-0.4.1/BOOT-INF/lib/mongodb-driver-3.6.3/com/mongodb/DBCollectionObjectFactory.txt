Compiled from "DBCollectionObjectFactory.java"
final class com.mongodb.DBCollectionObjectFactory implements com.mongodb.DBObjectFactory {
  private final java.util.Map<java.util.List<java.lang.String>, java.lang.Class<? extends com.mongodb.DBObject>> pathToClassMap;

  private final com.mongodb.ReflectionDBObject$JavaWrapper wrapper;

  com.mongodb.DBCollectionObjectFactory();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Ljava/util/Map;Lcom/mongodb/ReflectionDBObject$JavaWrapper;)V
       8: return

  private com.mongodb.DBCollectionObjectFactory(java.util.Map<java.util.List<java.lang.String>, java.lang.Class<? extends com.mongodb.DBObject>>, com.mongodb.ReflectionDBObject$JavaWrapper);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field pathToClassMap:Ljava/util/Map;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      14: return

  public com.mongodb.DBObject getInstance();
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       4: invokevirtual #7                  // Method getInstance:(Ljava/util/List;)Lcom/mongodb/DBObject;
       7: areturn

  public com.mongodb.DBObject getInstance(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method getClassForPath:(Ljava/util/List;)Ljava/lang/Class;
       5: astore_2
       6: aload_2
       7: iconst_0
       8: anewarray     #9                  // class java/lang/Class
      11: invokevirtual #10                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      14: iconst_0
      15: anewarray     #11                 // class java/lang/Object
      18: invokevirtual #12                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #13                 // class com/mongodb/DBObject
      24: areturn
      25: astore_3
      26: aload_0
      27: aload_2
      28: aload_3
      29: invokespecial #15                 // Method createInternalException:(Ljava/lang/Class;Ljava/lang/Throwable;)Lcom/mongodb/MongoInternalException;
      32: athrow
      33: astore_3
      34: aload_0
      35: aload_2
      36: aload_3
      37: invokespecial #15                 // Method createInternalException:(Ljava/lang/Class;Ljava/lang/Throwable;)Lcom/mongodb/MongoInternalException;
      40: athrow
      41: astore_3
      42: aload_0
      43: aload_2
      44: aload_3
      45: invokespecial #15                 // Method createInternalException:(Ljava/lang/Class;Ljava/lang/Throwable;)Lcom/mongodb/MongoInternalException;
      48: athrow
      49: astore_3
      50: aload_0
      51: aload_2
      52: aload_3
      53: invokevirtual #19                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      56: invokespecial #15                 // Method createInternalException:(Ljava/lang/Class;Ljava/lang/Throwable;)Lcom/mongodb/MongoInternalException;
      59: athrow
    Exception table:
       from    to  target type
           6    24    25   Class java/lang/InstantiationException
           6    24    33   Class java/lang/IllegalAccessException
           6    24    41   Class java/lang/NoSuchMethodException
           6    24    49   Class java/lang/reflect/InvocationTargetException

  public com.mongodb.DBCollectionObjectFactory update(java.lang.Class<? extends com.mongodb.DBObject>);
    Code:
       0: new           #20                 // class com/mongodb/DBCollectionObjectFactory
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #6                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: invokespecial #21                 // Method updatePathToClassMap:(Ljava/lang/Class;Ljava/util/List;)Ljava/util/Map;
      12: aload_0
      13: aload_1
      14: invokespecial #22                 // Method isReflectionDBObject:(Ljava/lang/Class;)Z
      17: ifeq          27
      20: aload_1
      21: invokestatic  #23                 // Method com/mongodb/ReflectionDBObject.getWrapper:(Ljava/lang/Class;)Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      24: goto          31
      27: aload_0
      28: getfield      #5                  // Field wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      31: invokespecial #2                  // Method "<init>":(Ljava/util/Map;Lcom/mongodb/ReflectionDBObject$JavaWrapper;)V
      34: areturn

  public com.mongodb.DBCollectionObjectFactory update(java.lang.Class<? extends com.mongodb.DBObject>, java.util.List<java.lang.String>);
    Code:
       0: new           #20                 // class com/mongodb/DBCollectionObjectFactory
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #21                 // Method updatePathToClassMap:(Ljava/lang/Class;Ljava/util/List;)Ljava/util/Map;
      10: aload_0
      11: getfield      #5                  // Field wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      14: invokespecial #2                  // Method "<init>":(Ljava/util/Map;Lcom/mongodb/ReflectionDBObject$JavaWrapper;)V
      17: areturn

  private java.util.Map<java.util.List<java.lang.String>, java.lang.Class<? extends com.mongodb.DBObject>> updatePathToClassMap(java.lang.Class<? extends com.mongodb.DBObject>, java.util.List<java.lang.String>);
    Code:
       0: new           #24                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #4                  // Field pathToClassMap:Ljava/util/Map;
       8: invokespecial #25                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_3
      12: aload_1
      13: ifnull        28
      16: aload_3
      17: aload_2
      18: aload_1
      19: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: goto          36
      28: aload_3
      29: aload_2
      30: invokeinterface #27,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_3
      37: areturn

  java.lang.Class<? extends com.mongodb.DBObject> getClassForPath(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pathToClassMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #4                  // Field pathToClassMap:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #9                  // class java/lang/Class
      26: areturn
      27: aload_0
      28: getfield      #5                  // Field wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      31: ifnull        45
      34: aload_0
      35: getfield      #5                  // Field wrapper:Lcom/mongodb/ReflectionDBObject$JavaWrapper;
      38: aload_1
      39: invokevirtual #30                 // Method com/mongodb/ReflectionDBObject$JavaWrapper.getInternalClass:(Ljava/util/List;)Ljava/lang/Class;
      42: goto          46
      45: aconst_null
      46: astore_2
      47: aload_2
      48: ifnull        55
      51: aload_2
      52: goto          57
      55: ldc           #31                 // class com/mongodb/BasicDBObject
      57: areturn

  private boolean isReflectionDBObject(java.lang.Class<? extends com.mongodb.DBObject>);
    Code:
       0: aload_1
       1: ifnull        17
       4: ldc           #32                 // class com/mongodb/ReflectionDBObject
       6: aload_1
       7: invokevirtual #33                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private com.mongodb.MongoInternalException createInternalException(java.lang.Class<? extends com.mongodb.DBObject>, java.lang.Throwable);
    Code:
       0: new           #34                 // class com/mongodb/MongoInternalException
       3: dup
       4: new           #35                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #37                 // String Can\'t instantiate class
      13: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: aload_2
      24: invokespecial #41                 // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
}
