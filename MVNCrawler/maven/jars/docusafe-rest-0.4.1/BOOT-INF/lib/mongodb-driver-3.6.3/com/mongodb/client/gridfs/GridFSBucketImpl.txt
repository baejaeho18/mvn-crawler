Compiled from "GridFSBucketImpl.java"
final class com.mongodb.client.gridfs.GridFSBucketImpl implements com.mongodb.client.gridfs.GridFSBucket {
  private static final int DEFAULT_CHUNKSIZE_BYTES;

  private final java.lang.String bucketName;

  private final int chunkSizeBytes;

  private final com.mongodb.client.MongoCollection<com.mongodb.client.gridfs.model.GridFSFile> filesCollection;

  private final com.mongodb.client.MongoCollection<org.bson.Document> chunksCollection;

  private volatile boolean checkedIndexes;

  com.mongodb.client.gridfs.GridFSBucketImpl(com.mongodb.client.MongoDatabase);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String fs
       4: invokespecial #2                  // Method "<init>":(Lcom/mongodb/client/MongoDatabase;Ljava/lang/String;)V
       7: return

  com.mongodb.client.gridfs.GridFSBucketImpl(com.mongodb.client.MongoDatabase, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #3                  // String bucketName
       3: aload_2
       4: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #5                  // class java/lang/String
      10: ldc           #7                  // int 261120
      12: ldc           #8                  // String database
      14: aload_1
      15: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #9                  // class com/mongodb/client/MongoDatabase
      21: aload_2
      22: invokestatic  #10                 // Method getFilesCollection:(Lcom/mongodb/client/MongoDatabase;Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
      25: aload_1
      26: aload_2
      27: invokestatic  #11                 // Method getChunksCollection:(Lcom/mongodb/client/MongoDatabase;Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
      30: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILcom/mongodb/client/MongoCollection;Lcom/mongodb/client/MongoCollection;)V
      33: return

  com.mongodb.client.gridfs.GridFSBucketImpl(java.lang.String, int, com.mongodb.client.MongoCollection<com.mongodb.client.gridfs.model.GridFSFile>, com.mongodb.client.MongoCollection<org.bson.Document>);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #3                  // String bucketName
       7: aload_1
       8: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #5                  // class java/lang/String
      14: putfield      #14                 // Field bucketName:Ljava/lang/String;
      17: aload_0
      18: iload_2
      19: putfield      #15                 // Field chunkSizeBytes:I
      22: aload_0
      23: ldc           #16                 // String filesCollection
      25: aload_3
      26: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #17                 // class com/mongodb/client/MongoCollection
      32: putfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      35: aload_0
      36: ldc           #19                 // String chunksCollection
      38: aload         4
      40: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #17                 // class com/mongodb/client/MongoCollection
      46: putfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      49: return

  public java.lang.String getBucketName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bucketName:Ljava/lang/String;
       4: areturn

  public int getChunkSizeBytes();
    Code:
       0: aload_0
       1: getfield      #15                 // Field chunkSizeBytes:I
       4: ireturn

  public com.mongodb.ReadPreference getReadPreference();
    Code:
       0: aload_0
       1: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       4: invokeinterface #21,  1           // InterfaceMethod com/mongodb/client/MongoCollection.getReadPreference:()Lcom/mongodb/ReadPreference;
       9: areturn

  public com.mongodb.WriteConcern getWriteConcern();
    Code:
       0: aload_0
       1: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       4: invokeinterface #22,  1           // InterfaceMethod com/mongodb/client/MongoCollection.getWriteConcern:()Lcom/mongodb/WriteConcern;
       9: areturn

  public com.mongodb.ReadConcern getReadConcern();
    Code:
       0: aload_0
       1: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       4: invokeinterface #23,  1           // InterfaceMethod com/mongodb/client/MongoCollection.getReadConcern:()Lcom/mongodb/ReadConcern;
       9: areturn

  public com.mongodb.client.gridfs.GridFSBucket withChunkSizeBytes(int);
    Code:
       0: new           #6                  // class com/mongodb/client/gridfs/GridFSBucketImpl
       3: dup
       4: aload_0
       5: getfield      #14                 // Field bucketName:Ljava/lang/String;
       8: iload_1
       9: aload_0
      10: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      13: aload_0
      14: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      17: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILcom/mongodb/client/MongoCollection;Lcom/mongodb/client/MongoCollection;)V
      20: areturn

  public com.mongodb.client.gridfs.GridFSBucket withReadPreference(com.mongodb.ReadPreference);
    Code:
       0: new           #6                  // class com/mongodb/client/gridfs/GridFSBucketImpl
       3: dup
       4: aload_0
       5: getfield      #14                 // Field bucketName:Ljava/lang/String;
       8: aload_0
       9: getfield      #15                 // Field chunkSizeBytes:I
      12: aload_0
      13: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      16: aload_1
      17: invokeinterface #24,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadPreference:(Lcom/mongodb/ReadPreference;)Lcom/mongodb/client/MongoCollection;
      22: aload_0
      23: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      26: aload_1
      27: invokeinterface #24,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadPreference:(Lcom/mongodb/ReadPreference;)Lcom/mongodb/client/MongoCollection;
      32: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILcom/mongodb/client/MongoCollection;Lcom/mongodb/client/MongoCollection;)V
      35: areturn

  public com.mongodb.client.gridfs.GridFSBucket withWriteConcern(com.mongodb.WriteConcern);
    Code:
       0: new           #6                  // class com/mongodb/client/gridfs/GridFSBucketImpl
       3: dup
       4: aload_0
       5: getfield      #14                 // Field bucketName:Ljava/lang/String;
       8: aload_0
       9: getfield      #15                 // Field chunkSizeBytes:I
      12: aload_0
      13: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      16: aload_1
      17: invokeinterface #25,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withWriteConcern:(Lcom/mongodb/WriteConcern;)Lcom/mongodb/client/MongoCollection;
      22: aload_0
      23: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      26: aload_1
      27: invokeinterface #25,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withWriteConcern:(Lcom/mongodb/WriteConcern;)Lcom/mongodb/client/MongoCollection;
      32: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILcom/mongodb/client/MongoCollection;Lcom/mongodb/client/MongoCollection;)V
      35: areturn

  public com.mongodb.client.gridfs.GridFSBucket withReadConcern(com.mongodb.ReadConcern);
    Code:
       0: new           #6                  // class com/mongodb/client/gridfs/GridFSBucketImpl
       3: dup
       4: aload_0
       5: getfield      #14                 // Field bucketName:Ljava/lang/String;
       8: aload_0
       9: getfield      #15                 // Field chunkSizeBytes:I
      12: aload_0
      13: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      16: aload_1
      17: invokeinterface #26,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadConcern:(Lcom/mongodb/ReadConcern;)Lcom/mongodb/client/MongoCollection;
      22: aload_0
      23: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      26: aload_1
      27: invokeinterface #26,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadConcern:(Lcom/mongodb/ReadConcern;)Lcom/mongodb/client/MongoCollection;
      32: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILcom/mongodb/client/MongoCollection;Lcom/mongodb/client/MongoCollection;)V
      35: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(java.lang.String);
    Code:
       0: aload_0
       1: new           #27                 // class org/bson/BsonObjectId
       4: dup
       5: invokespecial #28                 // Method org/bson/BsonObjectId."<init>":()V
       8: aload_1
       9: invokevirtual #29                 // Method openUploadStream:(Lorg/bson/BsonValue;Ljava/lang/String;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      12: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(java.lang.String, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: aload_0
       1: new           #27                 // class org/bson/BsonObjectId
       4: dup
       5: invokespecial #28                 // Method org/bson/BsonObjectId."<init>":()V
       8: aload_1
       9: aload_2
      10: invokevirtual #30                 // Method openUploadStream:(Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      13: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(org.bson.BsonValue, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #31                 // class com/mongodb/client/gridfs/model/GridFSUploadOptions
       6: dup
       7: invokespecial #32                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions."<init>":()V
      10: invokevirtual #30                 // Method openUploadStream:(Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      13: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(org.bson.BsonValue, java.lang.String, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokespecial #33                 // Method createGridFSUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
       8: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(com.mongodb.session.ClientSession, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: invokespecial #28                 // Method org/bson/BsonObjectId."<init>":()V
       9: aload_2
      10: invokevirtual #34                 // Method openUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      13: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(com.mongodb.session.ClientSession, java.lang.String, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: invokespecial #28                 // Method org/bson/BsonObjectId."<init>":()V
       9: aload_2
      10: aload_3
      11: invokevirtual #35                 // Method openUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      14: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(com.mongodb.session.ClientSession, org.bson.types.ObjectId, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: aload_2
       7: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      10: aload_3
      11: invokevirtual #34                 // Method openUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      14: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #31                 // class com/mongodb/client/gridfs/model/GridFSUploadOptions
       7: dup
       8: invokespecial #32                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions."<init>":()V
      11: invokevirtual #35                 // Method openUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      14: areturn

  public com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: invokespecial #33                 // Method createGridFSUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
      16: areturn

  private com.mongodb.client.gridfs.GridFSUploadStream createGridFSUploadStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: ldc           #38                 // String options
       2: aload         4
       4: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: aload         4
      10: invokevirtual #39                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions.getChunkSizeBytes:()Ljava/lang/Integer;
      13: ifnonnull     23
      16: aload_0
      17: getfield      #15                 // Field chunkSizeBytes:I
      20: goto          31
      23: aload         4
      25: invokevirtual #39                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions.getChunkSizeBytes:()Ljava/lang/Integer;
      28: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      31: istore        5
      33: aload_0
      34: aload_1
      35: invokespecial #41                 // Method checkCreateIndex:(Lcom/mongodb/session/ClientSession;)V
      38: new           #42                 // class com/mongodb/client/gridfs/GridFSUploadStreamImpl
      41: dup
      42: aload_1
      43: aload_0
      44: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      47: aload_0
      48: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      51: aload_2
      52: aload_3
      53: iload         5
      55: aload         4
      57: invokevirtual #43                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions.getMetadata:()Lorg/bson/Document;
      60: invokespecial #44                 // Method com/mongodb/client/gridfs/GridFSUploadStreamImpl."<init>":(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/MongoCollection;Lcom/mongodb/client/MongoCollection;Lorg/bson/BsonValue;Ljava/lang/String;ILorg/bson/Document;)V
      63: areturn

  public org.bson.types.ObjectId uploadFromStream(java.lang.String, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #31                 // class com/mongodb/client/gridfs/model/GridFSUploadOptions
       6: dup
       7: invokespecial #32                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions."<init>":()V
      10: invokevirtual #45                 // Method uploadFromStream:(Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lorg/bson/types/ObjectId;
      13: areturn

  public org.bson.types.ObjectId uploadFromStream(java.lang.String, java.io.InputStream, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: new           #46                 // class org/bson/types/ObjectId
       3: dup
       4: invokespecial #47                 // Method org/bson/types/ObjectId."<init>":()V
       7: astore        4
       9: aload_0
      10: new           #27                 // class org/bson/BsonObjectId
      13: dup
      14: aload         4
      16: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokevirtual #48                 // Method uploadFromStream:(Lorg/bson/BsonValue;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)V
      25: aload         4
      27: areturn

  public void uploadFromStream(org.bson.BsonValue, java.lang.String, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #31                 // class com/mongodb/client/gridfs/model/GridFSUploadOptions
       7: dup
       8: invokespecial #32                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions."<init>":()V
      11: invokevirtual #48                 // Method uploadFromStream:(Lorg/bson/BsonValue;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)V
      14: return

  public void uploadFromStream(org.bson.BsonValue, java.lang.String, java.io.InputStream, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokespecial #49                 // Method executeUploadFromStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)V
      10: return

  public org.bson.types.ObjectId uploadFromStream(com.mongodb.session.ClientSession, java.lang.String, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #31                 // class com/mongodb/client/gridfs/model/GridFSUploadOptions
       7: dup
       8: invokespecial #32                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions."<init>":()V
      11: invokevirtual #50                 // Method uploadFromStream:(Lcom/mongodb/session/ClientSession;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lorg/bson/types/ObjectId;
      14: areturn

  public org.bson.types.ObjectId uploadFromStream(com.mongodb.session.ClientSession, java.lang.String, java.io.InputStream, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: new           #46                 // class org/bson/types/ObjectId
       3: dup
       4: invokespecial #47                 // Method org/bson/types/ObjectId."<init>":()V
       7: astore        5
       9: aload_0
      10: aload_1
      11: new           #27                 // class org/bson/BsonObjectId
      14: dup
      15: aload         5
      17: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      20: aload_2
      21: aload_3
      22: aload         4
      24: invokevirtual #51                 // Method uploadFromStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)V
      27: aload         5
      29: areturn

  public void uploadFromStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: new           #31                 // class com/mongodb/client/gridfs/model/GridFSUploadOptions
       9: dup
      10: invokespecial #32                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions."<init>":()V
      13: invokevirtual #51                 // Method uploadFromStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)V
      16: return

  public void uploadFromStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String, java.io.InputStream, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: invokespecial #49                 // Method executeUploadFromStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Ljava/io/InputStream;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)V
      18: return

  private void executeUploadFromStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String, java.io.InputStream, com.mongodb.client.gridfs.model.GridFSUploadOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         5
       6: invokespecial #33                 // Method createGridFSUploadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSUploadOptions;)Lcom/mongodb/client/gridfs/GridFSUploadStream;
       9: astore        6
      11: aload         5
      13: invokevirtual #39                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions.getChunkSizeBytes:()Ljava/lang/Integer;
      16: ifnonnull     26
      19: aload_0
      20: getfield      #15                 // Field chunkSizeBytes:I
      23: goto          34
      26: aload         5
      28: invokevirtual #39                 // Method com/mongodb/client/gridfs/model/GridFSUploadOptions.getChunkSizeBytes:()Ljava/lang/Integer;
      31: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      34: istore        7
      36: iload         7
      38: newarray       byte
      40: astore        8
      42: aload         4
      44: aload         8
      46: invokevirtual #52                 // Method java/io/InputStream.read:([B)I
      49: dup
      50: istore        9
      52: iconst_m1
      53: if_icmpeq     69
      56: aload         6
      58: aload         8
      60: iconst_0
      61: iload         9
      63: invokevirtual #53                 // Method com/mongodb/client/gridfs/GridFSUploadStream.write:([BII)V
      66: goto          42
      69: aload         6
      71: invokevirtual #54                 // Method com/mongodb/client/gridfs/GridFSUploadStream.close:()V
      74: goto          96
      77: astore        10
      79: aload         6
      81: invokevirtual #56                 // Method com/mongodb/client/gridfs/GridFSUploadStream.abort:()V
      84: new           #57                 // class com/mongodb/MongoGridFSException
      87: dup
      88: ldc           #58                 // String IOException when reading from the InputStream
      90: aload         10
      92: invokespecial #59                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      95: athrow
      96: return
    Exception table:
       from    to  target type
          42    74    77   Class java/io/IOException

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: new           #27                 // class org/bson/BsonObjectId
       4: dup
       5: aload_1
       6: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
       9: invokevirtual #60                 // Method openDownloadStream:(Lorg/bson/BsonValue;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      12: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(org.bson.BsonValue);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_0
       3: aconst_null
       4: aload_1
       5: invokespecial #61                 // Method getFileInfoById:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)Lcom/mongodb/client/gridfs/model/GridFSFile;
       8: invokespecial #62                 // Method createGridFSDownloadStream:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/gridfs/model/GridFSFile;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      11: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #63                 // class com/mongodb/client/gridfs/model/GridFSDownloadOptions
       5: dup
       6: invokespecial #64                 // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions."<init>":()V
       9: invokevirtual #65                 // Method openDownloadStream:(Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      12: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(java.lang.String, com.mongodb.client.gridfs.model.GridFSDownloadOptions);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_0
       3: aconst_null
       4: aload_1
       5: aload_2
       6: invokespecial #66                 // Method getFileByName:(Lcom/mongodb/session/ClientSession;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/model/GridFSFile;
       9: invokespecial #62                 // Method createGridFSDownloadStream:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/gridfs/model/GridFSFile;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      12: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(com.mongodb.session.ClientSession, org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: aload_2
       7: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      10: invokevirtual #67                 // Method openDownloadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      13: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(com.mongodb.session.ClientSession, org.bson.BsonValue);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokespecial #61                 // Method getFileInfoById:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)Lcom/mongodb/client/gridfs/model/GridFSFile;
      15: invokespecial #62                 // Method createGridFSDownloadStream:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/gridfs/model/GridFSFile;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      18: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(com.mongodb.session.ClientSession, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #63                 // class com/mongodb/client/gridfs/model/GridFSDownloadOptions
       6: dup
       7: invokespecial #64                 // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions."<init>":()V
      10: invokevirtual #68                 // Method openDownloadStream:(Lcom/mongodb/session/ClientSession;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      13: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStream(com.mongodb.session.ClientSession, java.lang.String, com.mongodb.client.gridfs.model.GridFSDownloadOptions);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokespecial #66                 // Method getFileByName:(Lcom/mongodb/session/ClientSession;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/model/GridFSFile;
      16: invokespecial #62                 // Method createGridFSDownloadStream:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/gridfs/model/GridFSFile;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      19: areturn

  private com.mongodb.client.gridfs.GridFSDownloadStream createGridFSDownloadStream(com.mongodb.session.ClientSession, com.mongodb.client.gridfs.model.GridFSFile);
    Code:
       0: new           #69                 // class com/mongodb/client/gridfs/GridFSDownloadStreamImpl
       3: dup
       4: aload_1
       5: aload_2
       6: aload_0
       7: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      10: invokespecial #70                 // Method com/mongodb/client/gridfs/GridFSDownloadStreamImpl."<init>":(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/gridfs/model/GridFSFile;Lcom/mongodb/client/MongoCollection;)V
      13: areturn

  public void downloadToStream(org.bson.types.ObjectId, java.io.OutputStream);
    Code:
       0: aload_0
       1: new           #27                 // class org/bson/BsonObjectId
       4: dup
       5: aload_1
       6: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
       9: aload_2
      10: invokevirtual #71                 // Method downloadToStream:(Lorg/bson/BsonValue;Ljava/io/OutputStream;)V
      13: return

  public void downloadToStream(org.bson.BsonValue, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #60                 // Method openDownloadStream:(Lorg/bson/BsonValue;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
       6: aload_2
       7: invokespecial #72                 // Method downloadToStream:(Lcom/mongodb/client/gridfs/GridFSDownloadStream;Ljava/io/OutputStream;)V
      10: return

  public void downloadToStream(java.lang.String, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #63                 // class com/mongodb/client/gridfs/model/GridFSDownloadOptions
       6: dup
       7: invokespecial #64                 // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions."<init>":()V
      10: invokevirtual #73                 // Method downloadToStream:(Ljava/lang/String;Ljava/io/OutputStream;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)V
      13: return

  public void downloadToStream(java.lang.String, java.io.OutputStream, com.mongodb.client.gridfs.model.GridFSDownloadOptions);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_3
       4: invokevirtual #65                 // Method openDownloadStream:(Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
       7: aload_2
       8: invokespecial #72                 // Method downloadToStream:(Lcom/mongodb/client/gridfs/GridFSDownloadStream;Ljava/io/OutputStream;)V
      11: return

  public void downloadToStream(com.mongodb.session.ClientSession, org.bson.types.ObjectId, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: aload_2
       7: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      10: aload_3
      11: invokevirtual #74                 // Method downloadToStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/io/OutputStream;)V
      14: return

  public void downloadToStream(com.mongodb.session.ClientSession, org.bson.BsonValue, java.io.OutputStream);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #67                 // Method openDownloadStream:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      14: aload_3
      15: invokespecial #72                 // Method downloadToStream:(Lcom/mongodb/client/gridfs/GridFSDownloadStream;Ljava/io/OutputStream;)V
      18: return

  public void downloadToStream(com.mongodb.session.ClientSession, java.lang.String, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #63                 // class com/mongodb/client/gridfs/model/GridFSDownloadOptions
       7: dup
       8: invokespecial #64                 // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions."<init>":()V
      11: invokevirtual #75                 // Method downloadToStream:(Lcom/mongodb/session/ClientSession;Ljava/lang/String;Ljava/io/OutputStream;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)V
      14: return

  public void downloadToStream(com.mongodb.session.ClientSession, java.lang.String, java.io.OutputStream, com.mongodb.client.gridfs.model.GridFSDownloadOptions);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload         4
      13: invokevirtual #68                 // Method openDownloadStream:(Lcom/mongodb/session/ClientSession;Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      16: aload_3
      17: invokespecial #72                 // Method downloadToStream:(Lcom/mongodb/client/gridfs/GridFSDownloadStream;Ljava/io/OutputStream;)V
      20: return

  public com.mongodb.client.gridfs.GridFSFindIterable find();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokespecial #76                 // Method createGridFSFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
       6: areturn

  public com.mongodb.client.gridfs.GridFSFindIterable find(org.bson.conversions.Bson);
    Code:
       0: ldc           #77                 // String filter
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aconst_null
       9: aload_1
      10: invokespecial #76                 // Method createGridFSFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
      13: areturn

  public com.mongodb.client.gridfs.GridFSFindIterable find(com.mongodb.session.ClientSession);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aconst_null
      10: invokespecial #76                 // Method createGridFSFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
      13: areturn

  public com.mongodb.client.gridfs.GridFSFindIterable find(com.mongodb.session.ClientSession, org.bson.conversions.Bson);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #77                 // String filter
       9: aload_2
      10: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #76                 // Method createGridFSFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
      20: areturn

  private com.mongodb.client.gridfs.GridFSFindIterable createGridFSFindIterable(com.mongodb.session.ClientSession, org.bson.conversions.Bson);
    Code:
       0: new           #78                 // class com/mongodb/client/gridfs/GridFSFindIterableImpl
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #79                 // Method createFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
      10: invokespecial #80                 // Method com/mongodb/client/gridfs/GridFSFindIterableImpl."<init>":(Lcom/mongodb/client/FindIterable;)V
      13: areturn

  public void delete(org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: new           #27                 // class org/bson/BsonObjectId
       4: dup
       5: aload_1
       6: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
       9: invokevirtual #81                 // Method delete:(Lorg/bson/BsonValue;)V
      12: return

  public void delete(org.bson.BsonValue);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #82                 // Method executeDelete:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)V
       6: return

  public void delete(com.mongodb.session.ClientSession, org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: aload_2
       7: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      10: invokevirtual #83                 // Method delete:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)V
      13: return

  public void delete(com.mongodb.session.ClientSession, org.bson.BsonValue);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #82                 // Method executeDelete:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;)V
      13: return

  private void executeDelete(com.mongodb.session.ClientSession, org.bson.BsonValue);
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_0
       5: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       8: aload_1
       9: new           #84                 // class org/bson/BsonDocument
      12: dup
      13: ldc           #85                 // String _id
      15: aload_2
      16: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      19: invokeinterface #87,  3           // InterfaceMethod com/mongodb/client/MongoCollection.deleteOne:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/DeleteResult;
      24: astore_3
      25: aload_0
      26: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      29: aload_1
      30: new           #84                 // class org/bson/BsonDocument
      33: dup
      34: ldc           #88                 // String files_id
      36: aload_2
      37: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      40: invokeinterface #89,  3           // InterfaceMethod com/mongodb/client/MongoCollection.deleteMany:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/DeleteResult;
      45: pop
      46: goto          89
      49: aload_0
      50: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      53: new           #84                 // class org/bson/BsonDocument
      56: dup
      57: ldc           #85                 // String _id
      59: aload_2
      60: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      63: invokeinterface #90,  2           // InterfaceMethod com/mongodb/client/MongoCollection.deleteOne:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/DeleteResult;
      68: astore_3
      69: aload_0
      70: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      73: new           #84                 // class org/bson/BsonDocument
      76: dup
      77: ldc           #88                 // String files_id
      79: aload_2
      80: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      83: invokeinterface #91,  2           // InterfaceMethod com/mongodb/client/MongoCollection.deleteMany:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/DeleteResult;
      88: pop
      89: aload_3
      90: invokevirtual #92                 // Method com/mongodb/client/result/DeleteResult.wasAcknowledged:()Z
      93: ifeq          126
      96: aload_3
      97: invokevirtual #93                 // Method com/mongodb/client/result/DeleteResult.getDeletedCount:()J
     100: lconst_0
     101: lcmp
     102: ifne          126
     105: new           #57                 // class com/mongodb/MongoGridFSException
     108: dup
     109: ldc           #94                 // String No file found with the id: %s
     111: iconst_1
     112: anewarray     #95                 // class java/lang/Object
     115: dup
     116: iconst_0
     117: aload_2
     118: aastore
     119: invokestatic  #96                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     122: invokespecial #97                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: return

  public void rename(org.bson.types.ObjectId, java.lang.String);
    Code:
       0: aload_0
       1: new           #27                 // class org/bson/BsonObjectId
       4: dup
       5: aload_1
       6: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
       9: aload_2
      10: invokevirtual #98                 // Method rename:(Lorg/bson/BsonValue;Ljava/lang/String;)V
      13: return

  public void rename(org.bson.BsonValue, java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokespecial #99                 // Method executeRename:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;)V
       7: return

  public void rename(com.mongodb.session.ClientSession, org.bson.types.ObjectId, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #27                 // class org/bson/BsonObjectId
       5: dup
       6: aload_2
       7: invokespecial #36                 // Method org/bson/BsonObjectId."<init>":(Lorg/bson/types/ObjectId;)V
      10: aload_3
      11: invokevirtual #100                // Method rename:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;)V
      14: return

  public void rename(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokespecial #99                 // Method executeRename:(Lcom/mongodb/session/ClientSession;Lorg/bson/BsonValue;Ljava/lang/String;)V
      14: return

  private void executeRename(com.mongodb.session.ClientSession, org.bson.BsonValue, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        55
       4: aload_0
       5: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       8: aload_1
       9: new           #84                 // class org/bson/BsonDocument
      12: dup
      13: ldc           #85                 // String _id
      15: aload_2
      16: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      19: new           #84                 // class org/bson/BsonDocument
      22: dup
      23: ldc           #101                // String $set
      25: new           #84                 // class org/bson/BsonDocument
      28: dup
      29: ldc           #102                // String filename
      31: new           #103                // class org/bson/BsonString
      34: dup
      35: aload_3
      36: invokespecial #104                // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      39: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      42: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      45: invokeinterface #105,  4          // InterfaceMethod com/mongodb/client/MongoCollection.updateOne:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/UpdateResult;
      50: astore        4
      52: goto          102
      55: aload_0
      56: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      59: new           #84                 // class org/bson/BsonDocument
      62: dup
      63: ldc           #85                 // String _id
      65: aload_2
      66: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      69: new           #84                 // class org/bson/BsonDocument
      72: dup
      73: ldc           #101                // String $set
      75: new           #84                 // class org/bson/BsonDocument
      78: dup
      79: ldc           #102                // String filename
      81: new           #103                // class org/bson/BsonString
      84: dup
      85: aload_3
      86: invokespecial #104                // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      89: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      92: invokespecial #86                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      95: invokeinterface #106,  3          // InterfaceMethod com/mongodb/client/MongoCollection.updateOne:(Lorg/bson/conversions/Bson;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/UpdateResult;
     100: astore        4
     102: aload         4
     104: invokevirtual #107                // Method com/mongodb/client/result/UpdateResult.wasAcknowledged:()Z
     107: ifeq          141
     110: aload         4
     112: invokevirtual #108                // Method com/mongodb/client/result/UpdateResult.getMatchedCount:()J
     115: lconst_0
     116: lcmp
     117: ifne          141
     120: new           #57                 // class com/mongodb/MongoGridFSException
     123: dup
     124: ldc           #94                 // String No file found with the id: %s
     126: iconst_1
     127: anewarray     #95                 // class java/lang/Object
     130: dup
     131: iconst_0
     132: aload_2
     133: aastore
     134: invokestatic  #96                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     137: invokespecial #97                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: return

  public void drop();
    Code:
       0: aload_0
       1: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       4: invokeinterface #109,  1          // InterfaceMethod com/mongodb/client/MongoCollection.drop:()V
       9: aload_0
      10: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      13: invokeinterface #109,  1          // InterfaceMethod com/mongodb/client/MongoCollection.drop:()V
      18: return

  public void drop(com.mongodb.session.ClientSession);
    Code:
       0: ldc           #37                 // String clientSession
       2: aload_1
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      11: aload_1
      12: invokeinterface #110,  2          // InterfaceMethod com/mongodb/client/MongoCollection.drop:(Lcom/mongodb/session/ClientSession;)V
      17: aload_0
      18: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      21: aload_1
      22: invokeinterface #110,  2          // InterfaceMethod com/mongodb/client/MongoCollection.drop:(Lcom/mongodb/session/ClientSession;)V
      27: return

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStreamByName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #111                // class com/mongodb/client/gridfs/model/GridFSDownloadByNameOptions
       5: dup
       6: invokespecial #112                // Method com/mongodb/client/gridfs/model/GridFSDownloadByNameOptions."<init>":()V
       9: invokevirtual #113                // Method openDownloadStreamByName:(Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadByNameOptions;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      12: areturn

  public com.mongodb.client.gridfs.GridFSDownloadStream openDownloadStreamByName(java.lang.String, com.mongodb.client.gridfs.model.GridFSDownloadByNameOptions);
    Code:
       0: aload_0
       1: aload_1
       2: new           #63                 // class com/mongodb/client/gridfs/model/GridFSDownloadOptions
       5: dup
       6: invokespecial #64                 // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions."<init>":()V
       9: aload_2
      10: invokevirtual #114                // Method com/mongodb/client/gridfs/model/GridFSDownloadByNameOptions.getRevision:()I
      13: invokevirtual #115                // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions.revision:(I)Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;
      16: invokevirtual #65                 // Method openDownloadStream:(Ljava/lang/String;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)Lcom/mongodb/client/gridfs/GridFSDownloadStream;
      19: areturn

  public void downloadToStreamByName(java.lang.String, java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #111                // class com/mongodb/client/gridfs/model/GridFSDownloadByNameOptions
       6: dup
       7: invokespecial #112                // Method com/mongodb/client/gridfs/model/GridFSDownloadByNameOptions."<init>":()V
      10: invokevirtual #116                // Method downloadToStreamByName:(Ljava/lang/String;Ljava/io/OutputStream;Lcom/mongodb/client/gridfs/model/GridFSDownloadByNameOptions;)V
      13: return

  public void downloadToStreamByName(java.lang.String, java.io.OutputStream, com.mongodb.client.gridfs.model.GridFSDownloadByNameOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #63                 // class com/mongodb/client/gridfs/model/GridFSDownloadOptions
       6: dup
       7: invokespecial #64                 // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions."<init>":()V
      10: aload_3
      11: invokevirtual #114                // Method com/mongodb/client/gridfs/model/GridFSDownloadByNameOptions.getRevision:()I
      14: invokevirtual #115                // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions.revision:(I)Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;
      17: invokevirtual #73                 // Method downloadToStream:(Ljava/lang/String;Ljava/io/OutputStream;Lcom/mongodb/client/gridfs/model/GridFSDownloadOptions;)V
      20: return

  private static com.mongodb.client.MongoCollection<com.mongodb.client.gridfs.model.GridFSFile> getFilesCollection(com.mongodb.client.MongoDatabase, java.lang.String);
    Code:
       0: aload_0
       1: new           #117                // class java/lang/StringBuilder
       4: dup
       5: invokespecial #118                // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #120                // String .files
      14: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: ldc           #122                // class com/mongodb/client/gridfs/model/GridFSFile
      22: invokeinterface #123,  3          // InterfaceMethod com/mongodb/client/MongoDatabase.getCollection:(Ljava/lang/String;Ljava/lang/Class;)Lcom/mongodb/client/MongoCollection;
      27: iconst_2
      28: anewarray     #124                // class org/bson/codecs/configuration/CodecRegistry
      31: dup
      32: iconst_0
      33: aload_0
      34: invokeinterface #125,  1          // InterfaceMethod com/mongodb/client/MongoDatabase.getCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
      39: aastore
      40: dup
      41: iconst_1
      42: invokestatic  #126                // Method com/mongodb/MongoClient.getDefaultCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
      45: aastore
      46: invokestatic  #127                // Method org/bson/codecs/configuration/CodecRegistries.fromRegistries:([Lorg/bson/codecs/configuration/CodecRegistry;)Lorg/bson/codecs/configuration/CodecRegistry;
      49: invokeinterface #128,  2          // InterfaceMethod com/mongodb/client/MongoCollection.withCodecRegistry:(Lorg/bson/codecs/configuration/CodecRegistry;)Lcom/mongodb/client/MongoCollection;
      54: areturn

  private static com.mongodb.client.MongoCollection<org.bson.Document> getChunksCollection(com.mongodb.client.MongoDatabase, java.lang.String);
    Code:
       0: aload_0
       1: new           #117                // class java/lang/StringBuilder
       4: dup
       5: invokespecial #118                // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #129                // String .chunks
      14: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokeinterface #130,  2          // InterfaceMethod com/mongodb/client/MongoDatabase.getCollection:(Ljava/lang/String;)Lcom/mongodb/client/MongoCollection;
      25: invokestatic  #126                // Method com/mongodb/MongoClient.getDefaultCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
      28: invokeinterface #128,  2          // InterfaceMethod com/mongodb/client/MongoCollection.withCodecRegistry:(Lorg/bson/codecs/configuration/CodecRegistry;)Lcom/mongodb/client/MongoCollection;
      33: areturn

  private void checkCreateIndex(com.mongodb.session.ClientSession);
    Code:
       0: aload_0
       1: getfield      #131                // Field checkedIndexes:Z
       4: ifne          165
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      13: ldc           #132                // class org/bson/Document
      15: invokeinterface #133,  2          // InterfaceMethod com/mongodb/client/MongoCollection.withDocumentClass:(Ljava/lang/Class;)Lcom/mongodb/client/MongoCollection;
      20: invokestatic  #134                // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      23: invokeinterface #24,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadPreference:(Lcom/mongodb/ReadPreference;)Lcom/mongodb/client/MongoCollection;
      28: invokespecial #135                // Method collectionIsEmpty:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/MongoCollection;)Z
      31: ifeq          160
      34: new           #132                // class org/bson/Document
      37: dup
      38: ldc           #102                // String filename
      40: iconst_1
      41: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      47: ldc           #138                // String uploadDate
      49: iconst_1
      50: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: invokevirtual #139                // Method org/bson/Document.append:(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
      56: astore_2
      57: aload_0
      58: aload_1
      59: aload_0
      60: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      63: invokestatic  #134                // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      66: invokeinterface #24,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadPreference:(Lcom/mongodb/ReadPreference;)Lcom/mongodb/client/MongoCollection;
      71: aload_2
      72: invokespecial #140                // Method hasIndex:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/MongoCollection;Lorg/bson/Document;)Z
      75: ifne          95
      78: aload_0
      79: aload_1
      80: aload_0
      81: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      84: aload_2
      85: new           #141                // class com/mongodb/client/model/IndexOptions
      88: dup
      89: invokespecial #142                // Method com/mongodb/client/model/IndexOptions."<init>":()V
      92: invokespecial #143                // Method createIndex:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/MongoCollection;Lorg/bson/Document;Lcom/mongodb/client/model/IndexOptions;)V
      95: new           #132                // class org/bson/Document
      98: dup
      99: ldc           #88                 // String files_id
     101: iconst_1
     102: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     105: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     108: ldc           #144                // String n
     110: iconst_1
     111: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     114: invokevirtual #139                // Method org/bson/Document.append:(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
     117: astore_3
     118: aload_0
     119: aload_1
     120: aload_0
     121: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
     124: invokestatic  #134                // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
     127: invokeinterface #24,  2           // InterfaceMethod com/mongodb/client/MongoCollection.withReadPreference:(Lcom/mongodb/ReadPreference;)Lcom/mongodb/client/MongoCollection;
     132: aload_3
     133: invokespecial #140                // Method hasIndex:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/MongoCollection;Lorg/bson/Document;)Z
     136: ifne          160
     139: aload_0
     140: aload_1
     141: aload_0
     142: getfield      #20                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
     145: aload_3
     146: new           #141                // class com/mongodb/client/model/IndexOptions
     149: dup
     150: invokespecial #142                // Method com/mongodb/client/model/IndexOptions."<init>":()V
     153: iconst_1
     154: invokevirtual #145                // Method com/mongodb/client/model/IndexOptions.unique:(Z)Lcom/mongodb/client/model/IndexOptions;
     157: invokespecial #143                // Method createIndex:(Lcom/mongodb/session/ClientSession;Lcom/mongodb/client/MongoCollection;Lorg/bson/Document;Lcom/mongodb/client/model/IndexOptions;)V
     160: aload_0
     161: iconst_1
     162: putfield      #131                // Field checkedIndexes:Z
     165: return

  private <T> boolean collectionIsEmpty(com.mongodb.session.ClientSession, com.mongodb.client.MongoCollection<T>);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_2
       5: aload_1
       6: invokeinterface #146,  2          // InterfaceMethod com/mongodb/client/MongoCollection.find:(Lcom/mongodb/session/ClientSession;)Lcom/mongodb/client/FindIterable;
      11: new           #132                // class org/bson/Document
      14: dup
      15: ldc           #85                 // String _id
      17: iconst_1
      18: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      24: invokeinterface #147,  2          // InterfaceMethod com/mongodb/client/FindIterable.projection:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
      29: invokeinterface #148,  1          // InterfaceMethod com/mongodb/client/FindIterable.first:()Ljava/lang/Object;
      34: ifnonnull     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn
      43: aload_2
      44: invokeinterface #149,  1          // InterfaceMethod com/mongodb/client/MongoCollection.find:()Lcom/mongodb/client/FindIterable;
      49: new           #132                // class org/bson/Document
      52: dup
      53: ldc           #85                 // String _id
      55: iconst_1
      56: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      59: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      62: invokeinterface #147,  2          // InterfaceMethod com/mongodb/client/FindIterable.projection:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
      67: invokeinterface #148,  1          // InterfaceMethod com/mongodb/client/FindIterable.first:()Ljava/lang/Object;
      72: ifnonnull     79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  private <T> boolean hasIndex(com.mongodb.session.ClientSession, com.mongodb.client.MongoCollection<T>, org.bson.Document);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_1
       4: ifnull        19
       7: aload_2
       8: aload_1
       9: invokeinterface #150,  2          // InterfaceMethod com/mongodb/client/MongoCollection.listIndexes:(Lcom/mongodb/session/ClientSession;)Lcom/mongodb/client/ListIndexesIterable;
      14: astore        5
      16: goto          27
      19: aload_2
      20: invokeinterface #151,  1          // InterfaceMethod com/mongodb/client/MongoCollection.listIndexes:()Lcom/mongodb/client/ListIndexesIterable;
      25: astore        5
      27: aload         5
      29: new           #152                // class java/util/ArrayList
      32: dup
      33: invokespecial #153                // Method java/util/ArrayList."<init>":()V
      36: invokeinterface #154,  2          // InterfaceMethod com/mongodb/client/ListIndexesIterable.into:(Ljava/util/Collection;)Ljava/util/Collection;
      41: checkcast     #152                // class java/util/ArrayList
      44: astore        6
      46: aload         6
      48: invokevirtual #155                // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      51: astore        7
      53: aload         7
      55: invokeinterface #156,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          103
      63: aload         7
      65: invokeinterface #157,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #132                // class org/bson/Document
      73: astore        8
      75: aload         8
      77: ldc           #158                // String key
      79: ldc           #132                // class org/bson/Document
      81: invokevirtual #159                // Method org/bson/Document.get:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      84: checkcast     #132                // class org/bson/Document
      87: aload_3
      88: invokevirtual #160                // Method org/bson/Document.equals:(Ljava/lang/Object;)Z
      91: ifeq          100
      94: iconst_1
      95: istore        4
      97: goto          103
     100: goto          53
     103: iload         4
     105: ireturn

  private <T> void createIndex(com.mongodb.session.ClientSession, com.mongodb.client.MongoCollection<T>, org.bson.Document, com.mongodb.client.model.IndexOptions);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_2
       5: aload_1
       6: aload_3
       7: aload         4
       9: invokeinterface #161,  4          // InterfaceMethod com/mongodb/client/MongoCollection.createIndex:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;Lcom/mongodb/client/model/IndexOptions;)Ljava/lang/String;
      14: pop
      15: goto          28
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokeinterface #162,  3          // InterfaceMethod com/mongodb/client/MongoCollection.createIndex:(Lorg/bson/conversions/Bson;Lcom/mongodb/client/model/IndexOptions;)Ljava/lang/String;
      27: pop
      28: return

  private com.mongodb.client.gridfs.model.GridFSFile getFileByName(com.mongodb.session.ClientSession, java.lang.String, com.mongodb.client.gridfs.model.GridFSDownloadOptions);
    Code:
       0: aload_3
       1: invokevirtual #163                // Method com/mongodb/client/gridfs/model/GridFSDownloadOptions.getRevision:()I
       4: istore        4
       6: iload         4
       8: iflt          21
      11: iload         4
      13: istore        5
      15: iconst_1
      16: istore        6
      18: goto          31
      21: iload         4
      23: ineg
      24: iconst_1
      25: isub
      26: istore        5
      28: iconst_m1
      29: istore        6
      31: aload_0
      32: aload_1
      33: new           #132                // class org/bson/Document
      36: dup
      37: ldc           #102                // String filename
      39: aload_2
      40: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      43: invokespecial #76                 // Method createGridFSFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
      46: iload         5
      48: invokeinterface #164,  2          // InterfaceMethod com/mongodb/client/gridfs/GridFSFindIterable.skip:(I)Lcom/mongodb/client/gridfs/GridFSFindIterable;
      53: new           #132                // class org/bson/Document
      56: dup
      57: ldc           #138                // String uploadDate
      59: iload         6
      61: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      67: invokeinterface #165,  2          // InterfaceMethod com/mongodb/client/gridfs/GridFSFindIterable.sort:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/gridfs/GridFSFindIterable;
      72: invokeinterface #166,  1          // InterfaceMethod com/mongodb/client/gridfs/GridFSFindIterable.first:()Ljava/lang/Object;
      77: checkcast     #122                // class com/mongodb/client/gridfs/model/GridFSFile
      80: astore        7
      82: aload         7
      84: ifnonnull     116
      87: new           #57                 // class com/mongodb/MongoGridFSException
      90: dup
      91: ldc           #167                // String No file found with the filename: %s and revision: %s
      93: iconst_2
      94: anewarray     #95                 // class java/lang/Object
      97: dup
      98: iconst_0
      99: aload_2
     100: aastore
     101: dup
     102: iconst_1
     103: iload         4
     105: invokestatic  #136                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: aastore
     109: invokestatic  #96                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     112: invokespecial #97                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload         7
     118: areturn

  private com.mongodb.client.gridfs.model.GridFSFile getFileInfoById(com.mongodb.session.ClientSession, org.bson.BsonValue);
    Code:
       0: ldc           #168                // String id
       2: aload_2
       3: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: new           #132                // class org/bson/Document
      12: dup
      13: ldc           #85                 // String _id
      15: aload_2
      16: invokespecial #137                // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      19: invokespecial #79                 // Method createFindIterable:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
      22: invokeinterface #148,  1          // InterfaceMethod com/mongodb/client/FindIterable.first:()Ljava/lang/Object;
      27: checkcast     #122                // class com/mongodb/client/gridfs/model/GridFSFile
      30: astore_3
      31: aload_3
      32: ifnonnull     56
      35: new           #57                 // class com/mongodb/MongoGridFSException
      38: dup
      39: ldc           #94                 // String No file found with the id: %s
      41: iconst_1
      42: anewarray     #95                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_2
      48: aastore
      49: invokestatic  #96                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: invokespecial #97                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_3
      57: areturn

  private com.mongodb.client.FindIterable<com.mongodb.client.gridfs.model.GridFSFile> createFindIterable(com.mongodb.session.ClientSession, org.bson.conversions.Bson);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
       8: aload_1
       9: invokeinterface #146,  2          // InterfaceMethod com/mongodb/client/MongoCollection.find:(Lcom/mongodb/session/ClientSession;)Lcom/mongodb/client/FindIterable;
      14: astore_3
      15: goto          28
      18: aload_0
      19: getfield      #18                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      22: invokeinterface #149,  1          // InterfaceMethod com/mongodb/client/MongoCollection.find:()Lcom/mongodb/client/FindIterable;
      27: astore_3
      28: aload_2
      29: ifnull        40
      32: aload_3
      33: aload_2
      34: invokeinterface #169,  2          // InterfaceMethod com/mongodb/client/FindIterable.filter:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/FindIterable;
      39: astore_3
      40: aload_3
      41: areturn

  private void downloadToStream(com.mongodb.client.gridfs.GridFSDownloadStream, java.io.OutputStream);
    Code:
       0: aload_1
       1: invokevirtual #170                // Method com/mongodb/client/gridfs/GridFSDownloadStream.getGridFSFile:()Lcom/mongodb/client/gridfs/model/GridFSFile;
       4: invokevirtual #171                // Method com/mongodb/client/gridfs/model/GridFSFile.getChunkSize:()I
       7: newarray       byte
       9: astore_3
      10: aconst_null
      11: astore        5
      13: aload_1
      14: aload_3
      15: invokevirtual #172                // Method com/mongodb/client/gridfs/GridFSDownloadStream.read:([B)I
      18: dup
      19: istore        4
      21: iconst_m1
      22: if_icmpeq     36
      25: aload_2
      26: aload_3
      27: iconst_0
      28: iload         4
      30: invokevirtual #173                // Method java/io/OutputStream.write:([BII)V
      33: goto          13
      36: aload_1
      37: invokevirtual #174                // Method com/mongodb/client/gridfs/GridFSDownloadStream.close:()V
      40: goto          45
      43: astore        6
      45: aload         5
      47: ifnull        139
      50: aload         5
      52: athrow
      53: astore        6
      55: new           #57                 // class com/mongodb/MongoGridFSException
      58: dup
      59: ldc           #176                // String IOException when reading from the OutputStream
      61: aload         6
      63: invokespecial #59                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      66: astore        5
      68: aload_1
      69: invokevirtual #174                // Method com/mongodb/client/gridfs/GridFSDownloadStream.close:()V
      72: goto          77
      75: astore        6
      77: aload         5
      79: ifnull        139
      82: aload         5
      84: athrow
      85: astore        6
      87: new           #57                 // class com/mongodb/MongoGridFSException
      90: dup
      91: ldc           #177                // String Unexpected Exception when reading GridFS and writing to the Stream
      93: aload         6
      95: invokespecial #59                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: astore        5
     100: aload_1
     101: invokevirtual #174                // Method com/mongodb/client/gridfs/GridFSDownloadStream.close:()V
     104: goto          109
     107: astore        6
     109: aload         5
     111: ifnull        139
     114: aload         5
     116: athrow
     117: astore        7
     119: aload_1
     120: invokevirtual #174                // Method com/mongodb/client/gridfs/GridFSDownloadStream.close:()V
     123: goto          128
     126: astore        8
     128: aload         5
     130: ifnull        136
     133: aload         5
     135: athrow
     136: aload         7
     138: athrow
     139: return
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/Exception
          13    36    53   Class java/io/IOException
          68    72    75   Class java/lang/Exception
          13    36    85   Class java/lang/Exception
         100   104   107   Class java/lang/Exception
          13    36   117   any
          53    68   117   any
          85   100   117   any
         119   123   126   Class java/lang/Exception
         117   119   117   any
}
