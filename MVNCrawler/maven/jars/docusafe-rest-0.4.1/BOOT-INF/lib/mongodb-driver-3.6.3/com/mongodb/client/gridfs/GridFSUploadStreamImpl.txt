Compiled from "GridFSUploadStreamImpl.java"
final class com.mongodb.client.gridfs.GridFSUploadStreamImpl extends com.mongodb.client.gridfs.GridFSUploadStream {
  private final com.mongodb.session.ClientSession clientSession;

  private final com.mongodb.client.MongoCollection<com.mongodb.client.gridfs.model.GridFSFile> filesCollection;

  private final com.mongodb.client.MongoCollection<org.bson.Document> chunksCollection;

  private final org.bson.BsonValue fileId;

  private final java.lang.String filename;

  private final int chunkSizeBytes;

  private final org.bson.Document metadata;

  private final java.security.MessageDigest md5;

  private byte[] buffer;

  private long lengthInBytes;

  private int bufferOffset;

  private int chunkIndex;

  private final java.lang.Object closeLock;

  private boolean closed;

  com.mongodb.client.gridfs.GridFSUploadStreamImpl(com.mongodb.session.ClientSession, com.mongodb.client.MongoCollection<com.mongodb.client.gridfs.model.GridFSFile>, com.mongodb.client.MongoCollection<org.bson.Document>, org.bson.BsonValue, java.lang.String, int, org.bson.Document);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/mongodb/client/gridfs/GridFSUploadStream."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #3                  // Method java/lang/Object."<init>":()V
      12: putfield      #4                  // Field closeLock:Ljava/lang/Object;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field closed:Z
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      25: aload_0
      26: ldc           #7                  // String files collection
      28: aload_2
      29: invokestatic  #8                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #9                  // class com/mongodb/client/MongoCollection
      35: putfield      #10                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      38: aload_0
      39: ldc           #11                 // String chunks collection
      41: aload_3
      42: invokestatic  #8                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #9                  // class com/mongodb/client/MongoCollection
      48: putfield      #12                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      51: aload_0
      52: ldc           #13                 // String File Id
      54: aload         4
      56: invokestatic  #8                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #14                 // class org/bson/BsonValue
      62: putfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      65: aload_0
      66: ldc           #16                 // String filename
      68: aload         5
      70: invokestatic  #8                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #17                 // class java/lang/String
      76: putfield      #18                 // Field filename:Ljava/lang/String;
      79: aload_0
      80: iload         6
      82: putfield      #19                 // Field chunkSizeBytes:I
      85: aload_0
      86: aload         7
      88: putfield      #20                 // Field metadata:Lorg/bson/Document;
      91: aload_0
      92: ldc           #21                 // String MD5
      94: invokestatic  #22                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      97: putfield      #23                 // Field md5:Ljava/security/MessageDigest;
     100: goto          117
     103: astore        8
     105: new           #25                 // class com/mongodb/MongoGridFSException
     108: dup
     109: ldc           #26                 // String No MD5 message digest available, cannot upload file
     111: aload         8
     113: invokespecial #27                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     116: athrow
     117: aload_0
     118: iconst_0
     119: putfield      #28                 // Field chunkIndex:I
     122: aload_0
     123: iconst_0
     124: putfield      #29                 // Field bufferOffset:I
     127: aload_0
     128: iload         6
     130: newarray       byte
     132: putfield      #30                 // Field buffer:[B
     135: return
    Exception table:
       from    to  target type
          91   100   103   Class java/security/NoSuchAlgorithmException

  public org.bson.types.ObjectId getFileId();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getObjectId:()Lorg/bson/types/ObjectId;
       4: areturn

  public org.bson.types.ObjectId getObjectId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
       4: invokevirtual #32                 // Method org/bson/BsonValue.isObjectId:()Z
       7: ifne          20
      10: new           #25                 // class com/mongodb/MongoGridFSException
      13: dup
      14: ldc           #33                 // String Custom id type used for this GridFS upload stream
      16: invokespecial #34                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      24: invokevirtual #35                 // Method org/bson/BsonValue.asObjectId:()Lorg/bson/BsonObjectId;
      27: invokevirtual #36                 // Method org/bson/BsonObjectId.getValue:()Lorg/bson/types/ObjectId;
      30: areturn

  public org.bson.BsonValue getId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
       4: areturn

  public void abort();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: invokespecial #37                 // Method checkClosed:()V
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field closed:Z
      16: aload_1
      17: monitorexit
      18: goto          26
      21: astore_2
      22: aload_1
      23: monitorexit
      24: aload_2
      25: athrow
      26: aload_0
      27: getfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      30: ifnull        63
      33: aload_0
      34: getfield      #12                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      37: aload_0
      38: getfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      41: new           #38                 // class org/bson/Document
      44: dup
      45: ldc           #39                 // String files_id
      47: aload_0
      48: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      51: invokespecial #40                 // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      54: invokeinterface #41,  3           // InterfaceMethod com/mongodb/client/MongoCollection.deleteMany:(Lcom/mongodb/session/ClientSession;Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/DeleteResult;
      59: pop
      60: goto          86
      63: aload_0
      64: getfield      #12                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      67: new           #38                 // class org/bson/Document
      70: dup
      71: ldc           #39                 // String files_id
      73: aload_0
      74: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      77: invokespecial #40                 // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      80: invokeinterface #42,  2           // InterfaceMethod com/mongodb/client/MongoCollection.deleteMany:(Lorg/bson/conversions/Bson;)Lcom/mongodb/client/result/DeleteResult;
      85: pop
      86: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  public void write(int);
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_2
       4: aload_2
       5: iconst_0
       6: sipush        255
       9: iload_1
      10: iand
      11: i2b
      12: bastore
      13: aload_0
      14: aload_2
      15: iconst_0
      16: iconst_1
      17: invokevirtual #43                 // Method write:([BII)V
      20: return

  public void write(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #43                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkClosed:()V
       4: aload_1
       5: ifnonnull     16
       8: new           #44                 // class java/lang/NullPointerException
      11: dup
      12: invokespecial #45                 // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: iload_2
      17: iflt          44
      20: iload_2
      21: aload_1
      22: arraylength
      23: if_icmpgt     44
      26: iload_3
      27: iflt          44
      30: iload_2
      31: iload_3
      32: iadd
      33: aload_1
      34: arraylength
      35: if_icmpgt     44
      38: iload_2
      39: iload_3
      40: iadd
      41: ifge          52
      44: new           #46                 // class java/lang/IndexOutOfBoundsException
      47: dup
      48: invokespecial #47                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      51: athrow
      52: iload_3
      53: ifne          57
      56: return
      57: iload_2
      58: istore        4
      60: iload_3
      61: istore        5
      63: iconst_0
      64: istore        6
      66: iload         5
      68: ifle          171
      71: iload         5
      73: istore        6
      75: iload         6
      77: aload_0
      78: getfield      #19                 // Field chunkSizeBytes:I
      81: aload_0
      82: getfield      #29                 // Field bufferOffset:I
      85: isub
      86: if_icmple     100
      89: aload_0
      90: getfield      #19                 // Field chunkSizeBytes:I
      93: aload_0
      94: getfield      #29                 // Field bufferOffset:I
      97: isub
      98: istore        6
     100: aload_1
     101: iload         4
     103: aload_0
     104: getfield      #30                 // Field buffer:[B
     107: aload_0
     108: getfield      #29                 // Field bufferOffset:I
     111: iload         6
     113: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     116: aload_0
     117: dup
     118: getfield      #29                 // Field bufferOffset:I
     121: iload         6
     123: iadd
     124: putfield      #29                 // Field bufferOffset:I
     127: iload         4
     129: iload         6
     131: iadd
     132: istore        4
     134: iload         5
     136: iload         6
     138: isub
     139: istore        5
     141: aload_0
     142: dup
     143: getfield      #49                 // Field lengthInBytes:J
     146: iload         6
     148: i2l
     149: ladd
     150: putfield      #49                 // Field lengthInBytes:J
     153: aload_0
     154: getfield      #29                 // Field bufferOffset:I
     157: aload_0
     158: getfield      #19                 // Field chunkSizeBytes:I
     161: if_icmpne     66
     164: aload_0
     165: invokespecial #50                 // Method writeChunk:()V
     168: goto          66
     171: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field closed:Z
      11: ifeq          17
      14: aload_1
      15: monitorexit
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field closed:Z
      22: aload_1
      23: monitorexit
      24: goto          32
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
      32: aload_0
      33: invokespecial #50                 // Method writeChunk:()V
      36: new           #51                 // class com/mongodb/client/gridfs/model/GridFSFile
      39: dup
      40: aload_0
      41: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      44: aload_0
      45: getfield      #18                 // Field filename:Ljava/lang/String;
      48: aload_0
      49: getfield      #49                 // Field lengthInBytes:J
      52: aload_0
      53: getfield      #19                 // Field chunkSizeBytes:I
      56: new           #52                 // class java/util/Date
      59: dup
      60: invokespecial #53                 // Method java/util/Date."<init>":()V
      63: aload_0
      64: getfield      #23                 // Field md5:Ljava/security/MessageDigest;
      67: invokevirtual #54                 // Method java/security/MessageDigest.digest:()[B
      70: invokestatic  #55                 // Method com/mongodb/util/Util.toHex:([B)Ljava/lang/String;
      73: aload_0
      74: getfield      #20                 // Field metadata:Lorg/bson/Document;
      77: invokespecial #56                 // Method com/mongodb/client/gridfs/model/GridFSFile."<init>":(Lorg/bson/BsonValue;Ljava/lang/String;JILjava/util/Date;Ljava/lang/String;Lorg/bson/Document;)V
      80: astore_1
      81: aload_0
      82: getfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      85: ifnull        105
      88: aload_0
      89: getfield      #10                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
      92: aload_0
      93: getfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      96: aload_1
      97: invokeinterface #57,  3           // InterfaceMethod com/mongodb/client/MongoCollection.insertOne:(Lcom/mongodb/session/ClientSession;Ljava/lang/Object;)V
     102: goto          115
     105: aload_0
     106: getfield      #10                 // Field filesCollection:Lcom/mongodb/client/MongoCollection;
     109: aload_1
     110: invokeinterface #58,  2           // InterfaceMethod com/mongodb/client/MongoCollection.insertOne:(Ljava/lang/Object;)V
     115: aload_0
     116: aconst_null
     117: putfield      #30                 // Field buffer:[B
     120: return
    Exception table:
       from    to  target type
           7    16    27   any
          17    24    27   any
          27    30    27   any

  private void writeChunk();
    Code:
       0: aload_0
       1: getfield      #29                 // Field bufferOffset:I
       4: ifle          133
       7: aload_0
       8: getfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      11: ifnull        64
      14: aload_0
      15: getfield      #12                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      18: aload_0
      19: getfield      #6                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      22: new           #38                 // class org/bson/Document
      25: dup
      26: ldc           #39                 // String files_id
      28: aload_0
      29: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      32: invokespecial #40                 // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      35: ldc           #59                 // String n
      37: aload_0
      38: getfield      #28                 // Field chunkIndex:I
      41: invokestatic  #60                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: invokevirtual #61                 // Method org/bson/Document.append:(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
      47: ldc           #62                 // String data
      49: aload_0
      50: invokespecial #63                 // Method getData:()Lorg/bson/types/Binary;
      53: invokevirtual #61                 // Method org/bson/Document.append:(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
      56: invokeinterface #57,  3           // InterfaceMethod com/mongodb/client/MongoCollection.insertOne:(Lcom/mongodb/session/ClientSession;Ljava/lang/Object;)V
      61: goto          107
      64: aload_0
      65: getfield      #12                 // Field chunksCollection:Lcom/mongodb/client/MongoCollection;
      68: new           #38                 // class org/bson/Document
      71: dup
      72: ldc           #39                 // String files_id
      74: aload_0
      75: getfield      #15                 // Field fileId:Lorg/bson/BsonValue;
      78: invokespecial #40                 // Method org/bson/Document."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      81: ldc           #59                 // String n
      83: aload_0
      84: getfield      #28                 // Field chunkIndex:I
      87: invokestatic  #60                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: invokevirtual #61                 // Method org/bson/Document.append:(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
      93: ldc           #62                 // String data
      95: aload_0
      96: invokespecial #63                 // Method getData:()Lorg/bson/types/Binary;
      99: invokevirtual #61                 // Method org/bson/Document.append:(Ljava/lang/String;Ljava/lang/Object;)Lorg/bson/Document;
     102: invokeinterface #58,  2           // InterfaceMethod com/mongodb/client/MongoCollection.insertOne:(Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #23                 // Field md5:Ljava/security/MessageDigest;
     111: aload_0
     112: getfield      #30                 // Field buffer:[B
     115: invokevirtual #64                 // Method java/security/MessageDigest.update:([B)V
     118: aload_0
     119: dup
     120: getfield      #28                 // Field chunkIndex:I
     123: iconst_1
     124: iadd
     125: putfield      #28                 // Field chunkIndex:I
     128: aload_0
     129: iconst_0
     130: putfield      #29                 // Field bufferOffset:I
     133: return

  private org.bson.types.Binary getData();
    Code:
       0: aload_0
       1: getfield      #29                 // Field bufferOffset:I
       4: aload_0
       5: getfield      #19                 // Field chunkSizeBytes:I
       8: if_icmpge     37
      11: aload_0
      12: getfield      #29                 // Field bufferOffset:I
      15: newarray       byte
      17: astore_1
      18: aload_0
      19: getfield      #30                 // Field buffer:[B
      22: iconst_0
      23: aload_1
      24: iconst_0
      25: aload_0
      26: getfield      #29                 // Field bufferOffset:I
      29: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_0
      33: aload_1
      34: putfield      #30                 // Field buffer:[B
      37: new           #65                 // class org/bson/types/Binary
      40: dup
      41: aload_0
      42: getfield      #30                 // Field buffer:[B
      45: invokespecial #66                 // Method org/bson/types/Binary."<init>":([B)V
      48: areturn

  private void checkClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeLock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #5                  // Field closed:Z
      11: ifeq          24
      14: new           #25                 // class com/mongodb/MongoGridFSException
      17: dup
      18: ldc           #67                 // String The OutputStream has been closed
      20: invokespecial #34                 // Method com/mongodb/MongoGridFSException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: monitorexit
      26: goto          34
      29: astore_2
      30: aload_1
      31: monitorexit
      32: aload_2
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    26    29   any
          29    32    29   any
}
