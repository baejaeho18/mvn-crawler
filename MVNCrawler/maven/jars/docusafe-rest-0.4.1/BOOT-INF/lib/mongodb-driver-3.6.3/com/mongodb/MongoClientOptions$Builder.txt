Compiled from "MongoClientOptions.java"
public class com.mongodb.MongoClientOptions$Builder {
  private final java.util.List<com.mongodb.event.ClusterListener> clusterListeners;

  private final java.util.List<com.mongodb.event.CommandListener> commandListeners;

  private final java.util.List<com.mongodb.event.ConnectionPoolListener> connectionPoolListeners;

  private final java.util.List<com.mongodb.event.ServerListener> serverListeners;

  private final java.util.List<com.mongodb.event.ServerMonitorListener> serverMonitorListeners;

  private java.lang.String description;

  private java.lang.String applicationName;

  private java.util.List<com.mongodb.MongoCompressor> compressorList;

  private com.mongodb.ReadPreference readPreference;

  private com.mongodb.WriteConcern writeConcern;

  private boolean retryWrites;

  private com.mongodb.ReadConcern readConcern;

  private org.bson.codecs.configuration.CodecRegistry codecRegistry;

  private com.mongodb.selector.ServerSelector serverSelector;

  private int minConnectionsPerHost;

  private int maxConnectionsPerHost;

  private int threadsAllowedToBlockForConnectionMultiplier;

  private int serverSelectionTimeout;

  private int maxWaitTime;

  private int maxConnectionIdleTime;

  private int maxConnectionLifeTime;

  private int connectTimeout;

  private int socketTimeout;

  private boolean socketKeepAlive;

  private boolean sslEnabled;

  private boolean sslInvalidHostNameAllowed;

  private javax.net.ssl.SSLContext sslContext;

  private boolean alwaysUseMBeans;

  private int heartbeatFrequency;

  private int minHeartbeatFrequency;

  private int heartbeatConnectTimeout;

  private int heartbeatSocketTimeout;

  private int localThreshold;

  private java.lang.String requiredReplicaSetName;

  private com.mongodb.DBDecoderFactory dbDecoderFactory;

  private com.mongodb.DBEncoderFactory dbEncoderFactory;

  private javax.net.SocketFactory socketFactory;

  private boolean cursorFinalizerEnabled;

  public com.mongodb.MongoClientOptions$Builder();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #40                 // class java/util/ArrayList
       8: dup
       9: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field clusterListeners:Ljava/util/List;
      15: aload_0
      16: new           #40                 // class java/util/ArrayList
      19: dup
      20: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #4                  // Field commandListeners:Ljava/util/List;
      26: aload_0
      27: new           #40                 // class java/util/ArrayList
      30: dup
      31: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #3                  // Field connectionPoolListeners:Ljava/util/List;
      37: aload_0
      38: new           #40                 // class java/util/ArrayList
      41: dup
      42: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #2                  // Field serverListeners:Ljava/util/List;
      48: aload_0
      49: new           #40                 // class java/util/ArrayList
      52: dup
      53: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #1                  // Field serverMonitorListeners:Ljava/util/List;
      59: aload_0
      60: invokestatic  #42                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      63: putfield      #36                 // Field compressorList:Ljava/util/List;
      66: aload_0
      67: invokestatic  #43                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      70: putfield      #25                 // Field readPreference:Lcom/mongodb/ReadPreference;
      73: aload_0
      74: getstatic     #44                 // Field com/mongodb/WriteConcern.ACKNOWLEDGED:Lcom/mongodb/WriteConcern;
      77: putfield      #24                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      80: aload_0
      81: iconst_0
      82: putfield      #23                 // Field retryWrites:Z
      85: aload_0
      86: getstatic     #45                 // Field com/mongodb/ReadConcern.DEFAULT:Lcom/mongodb/ReadConcern;
      89: putfield      #22                 // Field readConcern:Lcom/mongodb/ReadConcern;
      92: aload_0
      93: invokestatic  #46                 // Method com/mongodb/MongoClient.getDefaultCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
      96: putfield      #21                 // Field codecRegistry:Lorg/bson/codecs/configuration/CodecRegistry;
      99: aload_0
     100: bipush        100
     102: putfield      #34                 // Field maxConnectionsPerHost:I
     105: aload_0
     106: iconst_5
     107: putfield      #33                 // Field threadsAllowedToBlockForConnectionMultiplier:I
     110: aload_0
     111: sipush        30000
     114: putfield      #32                 // Field serverSelectionTimeout:I
     117: aload_0
     118: ldc           #47                 // int 120000
     120: putfield      #31                 // Field maxWaitTime:I
     123: aload_0
     124: sipush        10000
     127: putfield      #28                 // Field connectTimeout:I
     130: aload_0
     131: iconst_0
     132: putfield      #27                 // Field socketTimeout:I
     135: aload_0
     136: iconst_1
     137: putfield      #26                 // Field socketKeepAlive:Z
     140: aload_0
     141: iconst_0
     142: putfield      #19                 // Field sslEnabled:Z
     145: aload_0
     146: iconst_0
     147: putfield      #18                 // Field sslInvalidHostNameAllowed:Z
     150: aload_0
     151: iconst_0
     152: putfield      #16                 // Field alwaysUseMBeans:Z
     155: aload_0
     156: sipush        10000
     159: putfield      #15                 // Field heartbeatFrequency:I
     162: aload_0
     163: sipush        500
     166: putfield      #14                 // Field minHeartbeatFrequency:I
     169: aload_0
     170: sipush        20000
     173: putfield      #13                 // Field heartbeatConnectTimeout:I
     176: aload_0
     177: sipush        20000
     180: putfield      #12                 // Field heartbeatSocketTimeout:I
     183: aload_0
     184: bipush        15
     186: putfield      #11                 // Field localThreshold:I
     189: aload_0
     190: getstatic     #48                 // Field com/mongodb/DefaultDBDecoder.FACTORY:Lcom/mongodb/DBDecoderFactory;
     193: putfield      #9                  // Field dbDecoderFactory:Lcom/mongodb/DBDecoderFactory;
     196: aload_0
     197: getstatic     #49                 // Field com/mongodb/DefaultDBEncoder.FACTORY:Lcom/mongodb/DBEncoderFactory;
     200: putfield      #8                  // Field dbEncoderFactory:Lcom/mongodb/DBEncoderFactory;
     203: aload_0
     204: iconst_1
     205: putfield      #6                  // Field cursorFinalizerEnabled:Z
     208: aload_0
     209: ldc           #50                 // String com.mongodb.updaterIntervalMS
     211: ldc           #51                 // String 10000
     213: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     216: invokestatic  #53                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     219: invokevirtual #54                 // Method heartbeatFrequency:(I)Lcom/mongodb/MongoClientOptions$Builder;
     222: pop
     223: aload_0
     224: ldc           #55                 // String com.mongodb.updaterIntervalNoMasterMS
     226: ldc           #56                 // String 500
     228: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     231: invokestatic  #53                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     234: invokevirtual #57                 // Method minHeartbeatFrequency:(I)Lcom/mongodb/MongoClientOptions$Builder;
     237: pop
     238: aload_0
     239: ldc           #58                 // String com.mongodb.updaterConnectTimeoutMS
     241: ldc           #59                 // String 20000
     243: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     246: invokestatic  #53                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     249: invokevirtual #60                 // Method heartbeatConnectTimeout:(I)Lcom/mongodb/MongoClientOptions$Builder;
     252: pop
     253: aload_0
     254: ldc           #61                 // String com.mongodb.updaterSocketTimeoutMS
     256: ldc           #59                 // String 20000
     258: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     261: invokestatic  #53                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     264: invokevirtual #62                 // Method heartbeatSocketTimeout:(I)Lcom/mongodb/MongoClientOptions$Builder;
     267: pop
     268: aload_0
     269: ldc           #63                 // String com.mongodb.slaveAcceptableLatencyMS
     271: ldc           #64                 // String 15
     273: invokestatic  #52                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     276: invokestatic  #53                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     279: invokevirtual #65                 // Method localThreshold:(I)Lcom/mongodb/MongoClientOptions$Builder;
     282: pop
     283: return

  public com.mongodb.MongoClientOptions$Builder(com.mongodb.MongoClientOptions);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #40                 // class java/util/ArrayList
       8: dup
       9: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field clusterListeners:Ljava/util/List;
      15: aload_0
      16: new           #40                 // class java/util/ArrayList
      19: dup
      20: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #4                  // Field commandListeners:Ljava/util/List;
      26: aload_0
      27: new           #40                 // class java/util/ArrayList
      30: dup
      31: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #3                  // Field connectionPoolListeners:Ljava/util/List;
      37: aload_0
      38: new           #40                 // class java/util/ArrayList
      41: dup
      42: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #2                  // Field serverListeners:Ljava/util/List;
      48: aload_0
      49: new           #40                 // class java/util/ArrayList
      52: dup
      53: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #1                  // Field serverMonitorListeners:Ljava/util/List;
      59: aload_0
      60: invokestatic  #42                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      63: putfield      #36                 // Field compressorList:Ljava/util/List;
      66: aload_0
      67: invokestatic  #43                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      70: putfield      #25                 // Field readPreference:Lcom/mongodb/ReadPreference;
      73: aload_0
      74: getstatic     #44                 // Field com/mongodb/WriteConcern.ACKNOWLEDGED:Lcom/mongodb/WriteConcern;
      77: putfield      #24                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      80: aload_0
      81: iconst_0
      82: putfield      #23                 // Field retryWrites:Z
      85: aload_0
      86: getstatic     #45                 // Field com/mongodb/ReadConcern.DEFAULT:Lcom/mongodb/ReadConcern;
      89: putfield      #22                 // Field readConcern:Lcom/mongodb/ReadConcern;
      92: aload_0
      93: invokestatic  #46                 // Method com/mongodb/MongoClient.getDefaultCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
      96: putfield      #21                 // Field codecRegistry:Lorg/bson/codecs/configuration/CodecRegistry;
      99: aload_0
     100: bipush        100
     102: putfield      #34                 // Field maxConnectionsPerHost:I
     105: aload_0
     106: iconst_5
     107: putfield      #33                 // Field threadsAllowedToBlockForConnectionMultiplier:I
     110: aload_0
     111: sipush        30000
     114: putfield      #32                 // Field serverSelectionTimeout:I
     117: aload_0
     118: ldc           #47                 // int 120000
     120: putfield      #31                 // Field maxWaitTime:I
     123: aload_0
     124: sipush        10000
     127: putfield      #28                 // Field connectTimeout:I
     130: aload_0
     131: iconst_0
     132: putfield      #27                 // Field socketTimeout:I
     135: aload_0
     136: iconst_1
     137: putfield      #26                 // Field socketKeepAlive:Z
     140: aload_0
     141: iconst_0
     142: putfield      #19                 // Field sslEnabled:Z
     145: aload_0
     146: iconst_0
     147: putfield      #18                 // Field sslInvalidHostNameAllowed:Z
     150: aload_0
     151: iconst_0
     152: putfield      #16                 // Field alwaysUseMBeans:Z
     155: aload_0
     156: sipush        10000
     159: putfield      #15                 // Field heartbeatFrequency:I
     162: aload_0
     163: sipush        500
     166: putfield      #14                 // Field minHeartbeatFrequency:I
     169: aload_0
     170: sipush        20000
     173: putfield      #13                 // Field heartbeatConnectTimeout:I
     176: aload_0
     177: sipush        20000
     180: putfield      #12                 // Field heartbeatSocketTimeout:I
     183: aload_0
     184: bipush        15
     186: putfield      #11                 // Field localThreshold:I
     189: aload_0
     190: getstatic     #48                 // Field com/mongodb/DefaultDBDecoder.FACTORY:Lcom/mongodb/DBDecoderFactory;
     193: putfield      #9                  // Field dbDecoderFactory:Lcom/mongodb/DBDecoderFactory;
     196: aload_0
     197: getstatic     #49                 // Field com/mongodb/DefaultDBEncoder.FACTORY:Lcom/mongodb/DBEncoderFactory;
     200: putfield      #8                  // Field dbEncoderFactory:Lcom/mongodb/DBEncoderFactory;
     203: aload_0
     204: iconst_1
     205: putfield      #6                  // Field cursorFinalizerEnabled:Z
     208: aload_0
     209: aload_1
     210: invokevirtual #66                 // Method com/mongodb/MongoClientOptions.getDescription:()Ljava/lang/String;
     213: putfield      #38                 // Field description:Ljava/lang/String;
     216: aload_0
     217: aload_1
     218: invokevirtual #67                 // Method com/mongodb/MongoClientOptions.getApplicationName:()Ljava/lang/String;
     221: putfield      #37                 // Field applicationName:Ljava/lang/String;
     224: aload_0
     225: aload_1
     226: invokevirtual #68                 // Method com/mongodb/MongoClientOptions.getCompressorList:()Ljava/util/List;
     229: putfield      #36                 // Field compressorList:Ljava/util/List;
     232: aload_0
     233: aload_1
     234: invokevirtual #69                 // Method com/mongodb/MongoClientOptions.getMinConnectionsPerHost:()I
     237: putfield      #35                 // Field minConnectionsPerHost:I
     240: aload_0
     241: aload_1
     242: invokevirtual #70                 // Method com/mongodb/MongoClientOptions.getConnectionsPerHost:()I
     245: putfield      #34                 // Field maxConnectionsPerHost:I
     248: aload_0
     249: aload_1
     250: invokevirtual #71                 // Method com/mongodb/MongoClientOptions.getThreadsAllowedToBlockForConnectionMultiplier:()I
     253: putfield      #33                 // Field threadsAllowedToBlockForConnectionMultiplier:I
     256: aload_0
     257: aload_1
     258: invokevirtual #72                 // Method com/mongodb/MongoClientOptions.getServerSelectionTimeout:()I
     261: putfield      #32                 // Field serverSelectionTimeout:I
     264: aload_0
     265: aload_1
     266: invokevirtual #73                 // Method com/mongodb/MongoClientOptions.getMaxWaitTime:()I
     269: putfield      #31                 // Field maxWaitTime:I
     272: aload_0
     273: aload_1
     274: invokevirtual #74                 // Method com/mongodb/MongoClientOptions.getMaxConnectionIdleTime:()I
     277: putfield      #30                 // Field maxConnectionIdleTime:I
     280: aload_0
     281: aload_1
     282: invokevirtual #75                 // Method com/mongodb/MongoClientOptions.getMaxConnectionLifeTime:()I
     285: putfield      #29                 // Field maxConnectionLifeTime:I
     288: aload_0
     289: aload_1
     290: invokevirtual #76                 // Method com/mongodb/MongoClientOptions.getConnectTimeout:()I
     293: putfield      #28                 // Field connectTimeout:I
     296: aload_0
     297: aload_1
     298: invokevirtual #77                 // Method com/mongodb/MongoClientOptions.getSocketTimeout:()I
     301: putfield      #27                 // Field socketTimeout:I
     304: aload_0
     305: aload_1
     306: invokevirtual #78                 // Method com/mongodb/MongoClientOptions.isSocketKeepAlive:()Z
     309: putfield      #26                 // Field socketKeepAlive:Z
     312: aload_0
     313: aload_1
     314: invokevirtual #79                 // Method com/mongodb/MongoClientOptions.getReadPreference:()Lcom/mongodb/ReadPreference;
     317: putfield      #25                 // Field readPreference:Lcom/mongodb/ReadPreference;
     320: aload_0
     321: aload_1
     322: invokevirtual #80                 // Method com/mongodb/MongoClientOptions.getWriteConcern:()Lcom/mongodb/WriteConcern;
     325: putfield      #24                 // Field writeConcern:Lcom/mongodb/WriteConcern;
     328: aload_0
     329: aload_1
     330: invokevirtual #81                 // Method com/mongodb/MongoClientOptions.getRetryWrites:()Z
     333: putfield      #23                 // Field retryWrites:Z
     336: aload_0
     337: aload_1
     338: invokevirtual #82                 // Method com/mongodb/MongoClientOptions.getReadConcern:()Lcom/mongodb/ReadConcern;
     341: putfield      #22                 // Field readConcern:Lcom/mongodb/ReadConcern;
     344: aload_0
     345: aload_1
     346: invokevirtual #83                 // Method com/mongodb/MongoClientOptions.getCodecRegistry:()Lorg/bson/codecs/configuration/CodecRegistry;
     349: putfield      #21                 // Field codecRegistry:Lorg/bson/codecs/configuration/CodecRegistry;
     352: aload_0
     353: aload_1
     354: invokevirtual #84                 // Method com/mongodb/MongoClientOptions.getServerSelector:()Lcom/mongodb/selector/ServerSelector;
     357: putfield      #20                 // Field serverSelector:Lcom/mongodb/selector/ServerSelector;
     360: aload_0
     361: aload_1
     362: invokevirtual #85                 // Method com/mongodb/MongoClientOptions.isSslEnabled:()Z
     365: putfield      #19                 // Field sslEnabled:Z
     368: aload_0
     369: aload_1
     370: invokevirtual #86                 // Method com/mongodb/MongoClientOptions.isSslInvalidHostNameAllowed:()Z
     373: putfield      #18                 // Field sslInvalidHostNameAllowed:Z
     376: aload_0
     377: aload_1
     378: invokevirtual #87                 // Method com/mongodb/MongoClientOptions.getSslContext:()Ljavax/net/ssl/SSLContext;
     381: putfield      #17                 // Field sslContext:Ljavax/net/ssl/SSLContext;
     384: aload_0
     385: aload_1
     386: invokevirtual #88                 // Method com/mongodb/MongoClientOptions.isAlwaysUseMBeans:()Z
     389: putfield      #16                 // Field alwaysUseMBeans:Z
     392: aload_0
     393: aload_1
     394: invokevirtual #89                 // Method com/mongodb/MongoClientOptions.getHeartbeatFrequency:()I
     397: putfield      #15                 // Field heartbeatFrequency:I
     400: aload_0
     401: aload_1
     402: invokevirtual #90                 // Method com/mongodb/MongoClientOptions.getMinHeartbeatFrequency:()I
     405: putfield      #14                 // Field minHeartbeatFrequency:I
     408: aload_0
     409: aload_1
     410: invokevirtual #91                 // Method com/mongodb/MongoClientOptions.getHeartbeatConnectTimeout:()I
     413: putfield      #13                 // Field heartbeatConnectTimeout:I
     416: aload_0
     417: aload_1
     418: invokevirtual #92                 // Method com/mongodb/MongoClientOptions.getHeartbeatSocketTimeout:()I
     421: putfield      #12                 // Field heartbeatSocketTimeout:I
     424: aload_0
     425: aload_1
     426: invokevirtual #93                 // Method com/mongodb/MongoClientOptions.getLocalThreshold:()I
     429: putfield      #11                 // Field localThreshold:I
     432: aload_0
     433: aload_1
     434: invokevirtual #94                 // Method com/mongodb/MongoClientOptions.getRequiredReplicaSetName:()Ljava/lang/String;
     437: putfield      #10                 // Field requiredReplicaSetName:Ljava/lang/String;
     440: aload_0
     441: aload_1
     442: invokevirtual #95                 // Method com/mongodb/MongoClientOptions.getDbDecoderFactory:()Lcom/mongodb/DBDecoderFactory;
     445: putfield      #9                  // Field dbDecoderFactory:Lcom/mongodb/DBDecoderFactory;
     448: aload_0
     449: aload_1
     450: invokevirtual #96                 // Method com/mongodb/MongoClientOptions.getDbEncoderFactory:()Lcom/mongodb/DBEncoderFactory;
     453: putfield      #8                  // Field dbEncoderFactory:Lcom/mongodb/DBEncoderFactory;
     456: aload_0
     457: aload_1
     458: invokestatic  #97                 // Method com/mongodb/MongoClientOptions.access$3800:(Lcom/mongodb/MongoClientOptions;)Ljavax/net/SocketFactory;
     461: putfield      #7                  // Field socketFactory:Ljavax/net/SocketFactory;
     464: aload_0
     465: aload_1
     466: invokevirtual #98                 // Method com/mongodb/MongoClientOptions.isCursorFinalizerEnabled:()Z
     469: putfield      #6                  // Field cursorFinalizerEnabled:Z
     472: aload_0
     473: getfield      #5                  // Field clusterListeners:Ljava/util/List;
     476: aload_1
     477: invokevirtual #99                 // Method com/mongodb/MongoClientOptions.getClusterListeners:()Ljava/util/List;
     480: invokeinterface #100,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     485: pop
     486: aload_0
     487: getfield      #4                  // Field commandListeners:Ljava/util/List;
     490: aload_1
     491: invokevirtual #101                // Method com/mongodb/MongoClientOptions.getCommandListeners:()Ljava/util/List;
     494: invokeinterface #100,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     499: pop
     500: aload_0
     501: getfield      #3                  // Field connectionPoolListeners:Ljava/util/List;
     504: aload_1
     505: invokevirtual #102                // Method com/mongodb/MongoClientOptions.getConnectionPoolListeners:()Ljava/util/List;
     508: invokeinterface #100,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     513: pop
     514: aload_0
     515: getfield      #2                  // Field serverListeners:Ljava/util/List;
     518: aload_1
     519: invokevirtual #103                // Method com/mongodb/MongoClientOptions.getServerListeners:()Ljava/util/List;
     522: invokeinterface #100,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     527: pop
     528: aload_0
     529: getfield      #1                  // Field serverMonitorListeners:Ljava/util/List;
     532: aload_1
     533: invokevirtual #104                // Method com/mongodb/MongoClientOptions.getServerMonitorListeners:()Ljava/util/List;
     536: invokeinterface #100,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     541: pop
     542: return

  public com.mongodb.MongoClientOptions$Builder description(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder applicationName(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        30
       4: ldc           #105                // String applicationName UTF-8 encoding length <= 128
       6: aload_1
       7: ldc           #106                // String UTF-8
       9: invokestatic  #107                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      12: invokevirtual #108                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      15: arraylength
      16: sipush        128
      19: if_icmpgt     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      30: aload_0
      31: aload_1
      32: putfield      #37                 // Field applicationName:Ljava/lang/String;
      35: aload_0
      36: areturn

  public com.mongodb.MongoClientOptions$Builder compressorList(java.util.List<com.mongodb.MongoCompressor>);
    Code:
       0: ldc           #110                // String compressorList
       2: aload_1
       3: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: new           #40                 // class java/util/ArrayList
      11: dup
      12: aload_1
      13: invokespecial #112                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: invokestatic  #113                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      19: putfield      #36                 // Field compressorList:Ljava/util/List;
      22: aload_0
      23: areturn

  public com.mongodb.MongoClientOptions$Builder minConnectionsPerHost(int);
    Code:
       0: ldc           #114                // String minConnectionsPerHost must be >= 0
       2: iload_1
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #35                 // Field minConnectionsPerHost:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder connectionsPerHost(int);
    Code:
       0: ldc           #115                // String connectionPerHost must be > 0
       2: iload_1
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #34                 // Field maxConnectionsPerHost:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder threadsAllowedToBlockForConnectionMultiplier(int);
    Code:
       0: ldc           #116                // String threadsAllowedToBlockForConnectionMultiplier must be > 0
       2: iload_1
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #33                 // Field threadsAllowedToBlockForConnectionMultiplier:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder serverSelectionTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field serverSelectionTimeout:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder maxWaitTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field maxWaitTime:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder maxConnectionIdleTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field maxConnectionIdleTime:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder maxConnectionLifeTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field maxConnectionLifeTime:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder connectTimeout(int);
    Code:
       0: ldc           #117                // String connectTimeout must be >= 0
       2: iload_1
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #28                 // Field connectTimeout:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder socketTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field socketTimeout:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder socketKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field socketKeepAlive:Z
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder sslEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field sslEnabled:Z
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder sslInvalidHostNameAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field sslInvalidHostNameAllowed:Z
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder sslContext(javax.net.ssl.SSLContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder readPreference(com.mongodb.ReadPreference);
    Code:
       0: aload_0
       1: ldc           #118                // String readPreference
       3: aload_1
       4: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #119                // class com/mongodb/ReadPreference
      10: putfield      #25                 // Field readPreference:Lcom/mongodb/ReadPreference;
      13: aload_0
      14: areturn

  public com.mongodb.MongoClientOptions$Builder writeConcern(com.mongodb.WriteConcern);
    Code:
       0: aload_0
       1: ldc           #120                // String writeConcern
       3: aload_1
       4: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #121                // class com/mongodb/WriteConcern
      10: putfield      #24                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      13: aload_0
      14: areturn

  public com.mongodb.MongoClientOptions$Builder retryWrites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field retryWrites:Z
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder readConcern(com.mongodb.ReadConcern);
    Code:
       0: aload_0
       1: ldc           #122                // String readConcern
       3: aload_1
       4: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #123                // class com/mongodb/ReadConcern
      10: putfield      #22                 // Field readConcern:Lcom/mongodb/ReadConcern;
      13: aload_0
      14: areturn

  public com.mongodb.MongoClientOptions$Builder codecRegistry(org.bson.codecs.configuration.CodecRegistry);
    Code:
       0: aload_0
       1: ldc           #124                // String codecRegistry
       3: aload_1
       4: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #125                // class org/bson/codecs/configuration/CodecRegistry
      10: putfield      #21                 // Field codecRegistry:Lorg/bson/codecs/configuration/CodecRegistry;
      13: aload_0
      14: areturn

  public com.mongodb.MongoClientOptions$Builder serverSelector(com.mongodb.selector.ServerSelector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field serverSelector:Lcom/mongodb/selector/ServerSelector;
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder addCommandListener(com.mongodb.event.CommandListener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field commandListeners:Ljava/util/List;
       4: ldc           #126                // String commandListener
       6: aload_1
       7: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: areturn

  public com.mongodb.MongoClientOptions$Builder addConnectionPoolListener(com.mongodb.event.ConnectionPoolListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionPoolListeners:Ljava/util/List;
       4: ldc           #128                // String connectionPoolListener
       6: aload_1
       7: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: areturn

  public com.mongodb.MongoClientOptions$Builder addClusterListener(com.mongodb.event.ClusterListener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field clusterListeners:Ljava/util/List;
       4: ldc           #129                // String clusterListener
       6: aload_1
       7: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: areturn

  public com.mongodb.MongoClientOptions$Builder addServerListener(com.mongodb.event.ServerListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverListeners:Ljava/util/List;
       4: ldc           #130                // String serverListener
       6: aload_1
       7: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: areturn

  public com.mongodb.MongoClientOptions$Builder addServerMonitorListener(com.mongodb.event.ServerMonitorListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverMonitorListeners:Ljava/util/List;
       4: ldc           #131                // String serverMonitorListener
       6: aload_1
       7: invokestatic  #111                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokeinterface #127,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: areturn

  public com.mongodb.MongoClientOptions$Builder socketFactory(javax.net.SocketFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field socketFactory:Ljavax/net/SocketFactory;
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder cursorFinalizerEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field cursorFinalizerEnabled:Z
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder alwaysUseMBeans(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field alwaysUseMBeans:Z
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder dbDecoderFactory(com.mongodb.DBDecoderFactory);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #132                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #133                // String null is not a legal value
      10: invokespecial #134                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #9                  // Field dbDecoderFactory:Lcom/mongodb/DBDecoderFactory;
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder dbEncoderFactory(com.mongodb.DBEncoderFactory);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #132                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #133                // String null is not a legal value
      10: invokespecial #134                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #8                  // Field dbEncoderFactory:Lcom/mongodb/DBEncoderFactory;
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder heartbeatFrequency(int);
    Code:
       0: ldc           #135                // String heartbeatFrequency must be > 0
       2: iload_1
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #15                 // Field heartbeatFrequency:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder minHeartbeatFrequency(int);
    Code:
       0: ldc           #136                // String minHeartbeatFrequency must be > 0
       2: iload_1
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #14                 // Field minHeartbeatFrequency:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder heartbeatConnectTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field heartbeatConnectTimeout:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder heartbeatSocketTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field heartbeatSocketTimeout:I
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder localThreshold(int);
    Code:
       0: ldc           #137                // String localThreshold must be >= 0
       2: iload_1
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokestatic  #109                // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      14: aload_0
      15: iload_1
      16: putfield      #11                 // Field localThreshold:I
      19: aload_0
      20: areturn

  public com.mongodb.MongoClientOptions$Builder requiredReplicaSetName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field requiredReplicaSetName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.mongodb.MongoClientOptions$Builder legacyDefaults();
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #138                // Method connectionsPerHost:(I)Lcom/mongodb/MongoClientOptions$Builder;
       6: getstatic     #139                // Field com/mongodb/WriteConcern.UNACKNOWLEDGED:Lcom/mongodb/WriteConcern;
       9: invokevirtual #140                // Method writeConcern:(Lcom/mongodb/WriteConcern;)Lcom/mongodb/MongoClientOptions$Builder;
      12: pop
      13: aload_0
      14: areturn

  public com.mongodb.MongoClientOptions build();
    Code:
       0: new           #141                // class com/mongodb/MongoClientOptions
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #142                // Method com/mongodb/MongoClientOptions."<init>":(Lcom/mongodb/MongoClientOptions$Builder;Lcom/mongodb/MongoClientOptions$1;)V
       9: areturn

  static java.lang.String access$000(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #38                 // Field description:Ljava/lang/String;
       4: areturn

  static java.lang.String access$100(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #37                 // Field applicationName:Ljava/lang/String;
       4: areturn

  static java.util.List access$200(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #36                 // Field compressorList:Ljava/util/List;
       4: areturn

  static int access$300(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #35                 // Field minConnectionsPerHost:I
       4: ireturn

  static int access$400(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #34                 // Field maxConnectionsPerHost:I
       4: ireturn

  static int access$500(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #33                 // Field threadsAllowedToBlockForConnectionMultiplier:I
       4: ireturn

  static int access$600(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #32                 // Field serverSelectionTimeout:I
       4: ireturn

  static int access$700(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #31                 // Field maxWaitTime:I
       4: ireturn

  static int access$800(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #30                 // Field maxConnectionIdleTime:I
       4: ireturn

  static int access$900(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #29                 // Field maxConnectionLifeTime:I
       4: ireturn

  static int access$1000(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #28                 // Field connectTimeout:I
       4: ireturn

  static int access$1100(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #27                 // Field socketTimeout:I
       4: ireturn

  static boolean access$1200(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #26                 // Field socketKeepAlive:Z
       4: ireturn

  static com.mongodb.ReadPreference access$1300(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #25                 // Field readPreference:Lcom/mongodb/ReadPreference;
       4: areturn

  static com.mongodb.WriteConcern access$1400(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #24                 // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  static boolean access$1500(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #23                 // Field retryWrites:Z
       4: ireturn

  static com.mongodb.ReadConcern access$1600(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #22                 // Field readConcern:Lcom/mongodb/ReadConcern;
       4: areturn

  static org.bson.codecs.configuration.CodecRegistry access$1700(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #21                 // Field codecRegistry:Lorg/bson/codecs/configuration/CodecRegistry;
       4: areturn

  static com.mongodb.selector.ServerSelector access$1800(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #20                 // Field serverSelector:Lcom/mongodb/selector/ServerSelector;
       4: areturn

  static boolean access$1900(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #19                 // Field sslEnabled:Z
       4: ireturn

  static boolean access$2000(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #18                 // Field sslInvalidHostNameAllowed:Z
       4: ireturn

  static javax.net.ssl.SSLContext access$2100(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #17                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  static boolean access$2200(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #16                 // Field alwaysUseMBeans:Z
       4: ireturn

  static int access$2300(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #15                 // Field heartbeatFrequency:I
       4: ireturn

  static int access$2400(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #14                 // Field minHeartbeatFrequency:I
       4: ireturn

  static int access$2500(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #13                 // Field heartbeatConnectTimeout:I
       4: ireturn

  static int access$2600(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #12                 // Field heartbeatSocketTimeout:I
       4: ireturn

  static int access$2700(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #11                 // Field localThreshold:I
       4: ireturn

  static java.lang.String access$2800(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field requiredReplicaSetName:Ljava/lang/String;
       4: areturn

  static com.mongodb.DBDecoderFactory access$2900(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field dbDecoderFactory:Lcom/mongodb/DBDecoderFactory;
       4: areturn

  static com.mongodb.DBEncoderFactory access$3000(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field dbEncoderFactory:Lcom/mongodb/DBEncoderFactory;
       4: areturn

  static javax.net.SocketFactory access$3100(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field socketFactory:Ljavax/net/SocketFactory;
       4: areturn

  static boolean access$3200(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field cursorFinalizerEnabled:Z
       4: ireturn

  static java.util.List access$3300(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field clusterListeners:Ljava/util/List;
       4: areturn

  static java.util.List access$3400(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field commandListeners:Ljava/util/List;
       4: areturn

  static java.util.List access$3500(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionPoolListeners:Ljava/util/List;
       4: areturn

  static java.util.List access$3600(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverListeners:Ljava/util/List;
       4: areturn

  static java.util.List access$3700(com.mongodb.MongoClientOptions$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serverMonitorListeners:Ljava/util/List;
       4: areturn
}
