Compiled from "MongoIterableImpl.java"
abstract class com.mongodb.MongoIterableImpl<TResult> implements com.mongodb.client.MongoIterable<TResult> {
  private final com.mongodb.session.ClientSession clientSession;

  private final com.mongodb.ReadConcern readConcern;

  private com.mongodb.OperationExecutor executor;

  private com.mongodb.ReadPreference readPreference;

  private java.lang.Integer batchSize;

  com.mongodb.MongoIterableImpl(com.mongodb.session.ClientSession, com.mongodb.OperationExecutor, com.mongodb.ReadConcern, com.mongodb.ReadPreference);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field clientSession:Lcom/mongodb/session/ClientSession;
       9: aload_0
      10: ldc           #3                  // String executor
      12: aload_2
      13: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #5                  // class com/mongodb/OperationExecutor
      19: putfield      #6                  // Field executor:Lcom/mongodb/OperationExecutor;
      22: aload_0
      23: ldc           #7                  // String readConcern
      25: aload_3
      26: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #8                  // class com/mongodb/ReadConcern
      32: putfield      #9                  // Field readConcern:Lcom/mongodb/ReadConcern;
      35: aload_0
      36: ldc           #10                 // String readPreference
      38: aload         4
      40: invokestatic  #4                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #11                 // class com/mongodb/ReadPreference
      46: putfield      #12                 // Field readPreference:Lcom/mongodb/ReadPreference;
      49: return

  abstract com.mongodb.operation.ReadOperation<com.mongodb.operation.BatchCursor<TResult>> asReadOperation();

  com.mongodb.session.ClientSession getClientSession();
    Code:
       0: aload_0
       1: getfield      #2                  // Field clientSession:Lcom/mongodb/session/ClientSession;
       4: areturn

  com.mongodb.OperationExecutor getExecutor();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Lcom/mongodb/OperationExecutor;
       4: areturn

  com.mongodb.ReadPreference getReadPreference();
    Code:
       0: aload_0
       1: getfield      #12                 // Field readPreference:Lcom/mongodb/ReadPreference;
       4: areturn

  com.mongodb.ReadConcern getReadConcern();
    Code:
       0: aload_0
       1: getfield      #9                  // Field readConcern:Lcom/mongodb/ReadConcern;
       4: areturn

  public java.lang.Integer getBatchSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field batchSize:Ljava/lang/Integer;
       4: areturn

  public com.mongodb.client.MongoIterable<TResult> batchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #13                 // Field batchSize:Ljava/lang/Integer;
       8: aload_0
       9: areturn

  public com.mongodb.client.MongoCursor<TResult> iterator();
    Code:
       0: new           #15                 // class com/mongodb/MongoBatchCursorAdapter
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method execute:()Lcom/mongodb/operation/BatchCursor;
       8: invokespecial #17                 // Method com/mongodb/MongoBatchCursorAdapter."<init>":(Lcom/mongodb/operation/BatchCursor;)V
      11: areturn

  public TResult first();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method iterator:()Lcom/mongodb/client/MongoCursor;
       4: astore_1
       5: aload_1
       6: invokeinterface #19,  1           // InterfaceMethod com/mongodb/client/MongoCursor.hasNext:()Z
      11: ifne          24
      14: aconst_null
      15: astore_2
      16: aload_1
      17: invokeinterface #20,  1           // InterfaceMethod com/mongodb/client/MongoCursor.close:()V
      22: aload_2
      23: areturn
      24: aload_1
      25: invokeinterface #21,  1           // InterfaceMethod com/mongodb/client/MongoCursor.next:()Ljava/lang/Object;
      30: astore_2
      31: aload_1
      32: invokeinterface #20,  1           // InterfaceMethod com/mongodb/client/MongoCursor.close:()V
      37: aload_2
      38: areturn
      39: astore_3
      40: aload_1
      41: invokeinterface #20,  1           // InterfaceMethod com/mongodb/client/MongoCursor.close:()V
      46: aload_3
      47: athrow
    Exception table:
       from    to  target type
           5    16    39   any
          24    31    39   any

  public <U> com.mongodb.client.MongoIterable<U> map(com.mongodb.Function<TResult, U>);
    Code:
       0: new           #22                 // class com/mongodb/MappingIterable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #23                 // Method com/mongodb/MappingIterable."<init>":(Lcom/mongodb/client/MongoIterable;Lcom/mongodb/Function;)V
       9: areturn

  public void forEach(com.mongodb.Block<? super TResult>);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method iterator:()Lcom/mongodb/client/MongoCursor;
       4: astore_2
       5: aload_2
       6: invokeinterface #19,  1           // InterfaceMethod com/mongodb/client/MongoCursor.hasNext:()Z
      11: ifeq          29
      14: aload_1
      15: aload_2
      16: invokeinterface #21,  1           // InterfaceMethod com/mongodb/client/MongoCursor.next:()Ljava/lang/Object;
      21: invokeinterface #24,  2           // InterfaceMethod com/mongodb/Block.apply:(Ljava/lang/Object;)V
      26: goto          5
      29: aload_2
      30: invokeinterface #20,  1           // InterfaceMethod com/mongodb/client/MongoCursor.close:()V
      35: goto          47
      38: astore_3
      39: aload_2
      40: invokeinterface #20,  1           // InterfaceMethod com/mongodb/client/MongoCursor.close:()V
      45: aload_3
      46: athrow
      47: return
    Exception table:
       from    to  target type
           5    29    38   any

  public <A extends java.util.Collection<? super TResult>> A into(A);
    Code:
       0: aload_0
       1: new           #25                 // class com/mongodb/MongoIterableImpl$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #26                 // Method com/mongodb/MongoIterableImpl$1."<init>":(Lcom/mongodb/MongoIterableImpl;Ljava/util/Collection;)V
      10: invokevirtual #27                 // Method forEach:(Lcom/mongodb/Block;)V
      13: aload_1
      14: areturn

  org.bson.BsonDocument toBsonDocumentOrNull(org.bson.conversions.Bson, org.bson.codecs.configuration.CodecRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #28                 // class org/bson/BsonDocument
       4: aload_2
       5: invokevirtual #29                 // Method toBsonDocumentOrNull:(Lorg/bson/conversions/Bson;Ljava/lang/Class;Lorg/bson/codecs/configuration/CodecRegistry;)Lorg/bson/BsonDocument;
       8: areturn

  <T> org.bson.BsonDocument toBsonDocumentOrNull(org.bson.conversions.Bson, java.lang.Class<T>, org.bson.codecs.configuration.CodecRegistry);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aconst_null
       5: goto          16
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #30,  3           // InterfaceMethod org/bson/conversions/Bson.toBsonDocument:(Ljava/lang/Class;Lorg/bson/codecs/configuration/CodecRegistry;)Lorg/bson/BsonDocument;
      16: areturn

  private com.mongodb.operation.BatchCursor<TResult> execute();
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Lcom/mongodb/OperationExecutor;
       4: aload_0
       5: invokevirtual #31                 // Method asReadOperation:()Lcom/mongodb/operation/ReadOperation;
       8: aload_0
       9: getfield      #12                 // Field readPreference:Lcom/mongodb/ReadPreference;
      12: aload_0
      13: getfield      #2                  // Field clientSession:Lcom/mongodb/session/ClientSession;
      16: invokeinterface #32,  4           // InterfaceMethod com/mongodb/OperationExecutor.execute:(Lcom/mongodb/operation/ReadOperation;Lcom/mongodb/ReadPreference;Lcom/mongodb/session/ClientSession;)Ljava/lang/Object;
      21: checkcast     #33                 // class com/mongodb/operation/BatchCursor
      24: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method iterator:()Lcom/mongodb/client/MongoCursor;
       4: areturn
}
