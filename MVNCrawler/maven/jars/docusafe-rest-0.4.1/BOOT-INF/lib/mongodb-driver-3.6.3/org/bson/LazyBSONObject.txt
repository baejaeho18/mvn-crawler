Compiled from "LazyBSONObject.java"
public class org.bson.LazyBSONObject implements org.bson.BSONObject {
  private final byte[] bytes;

  private final int offset;

  private final org.bson.LazyBSONCallback callback;

  public org.bson.LazyBSONObject(byte[], org.bson.LazyBSONCallback);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #1                  // Method "<init>":([BILorg/bson/LazyBSONCallback;)V
       7: return

  public org.bson.LazyBSONObject(byte[], int, org.bson.LazyBSONCallback);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field bytes:[B
       9: aload_0
      10: aload_3
      11: putfield      #4                  // Field callback:Lorg/bson/LazyBSONCallback;
      14: aload_0
      15: iload_2
      16: putfield      #5                  // Field offset:I
      19: return

  protected int getOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field offset:I
       4: ireturn

  protected byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: areturn

  public java.lang.Object get(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getBsonReader:()Lorg/bson/BsonBinaryReader;
       4: astore_2
       5: aload_2
       6: invokevirtual #7                  // Method org/bson/BsonBinaryReader.readStartDocument:()V
       9: aconst_null
      10: astore_3
      11: aload_2
      12: invokevirtual #8                  // Method org/bson/BsonBinaryReader.readBsonType:()Lorg/bson/BsonType;
      15: getstatic     #9                  // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      18: if_acmpeq     48
      21: aload_1
      22: aload_2
      23: invokevirtual #10                 // Method org/bson/BsonBinaryReader.readName:()Ljava/lang/String;
      26: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          41
      32: aload_0
      33: aload_2
      34: invokevirtual #12                 // Method readValue:(Lorg/bson/BsonBinaryReader;)Ljava/lang/Object;
      37: astore_3
      38: goto          48
      41: aload_2
      42: invokevirtual #13                 // Method org/bson/BsonBinaryReader.skipValue:()V
      45: goto          11
      48: aload_2
      49: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      52: goto          64
      55: astore        4
      57: aload_2
      58: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      61: aload         4
      63: athrow
      64: aload_3
      65: areturn
    Exception table:
       from    to  target type
           5    48    55   any
          55    57    55   any

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method containsField:(Ljava/lang/String;)Z
       5: ireturn

  public boolean containsField(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getBsonReader:()Lorg/bson/BsonBinaryReader;
       4: astore_2
       5: aload_2
       6: invokevirtual #7                  // Method org/bson/BsonBinaryReader.readStartDocument:()V
       9: aload_2
      10: invokevirtual #8                  // Method org/bson/BsonBinaryReader.readBsonType:()Lorg/bson/BsonType;
      13: getstatic     #9                  // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      16: if_acmpeq     45
      19: aload_2
      20: invokevirtual #10                 // Method org/bson/BsonBinaryReader.readName:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          38
      30: iconst_1
      31: istore_3
      32: aload_2
      33: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      36: iload_3
      37: ireturn
      38: aload_2
      39: invokevirtual #13                 // Method org/bson/BsonBinaryReader.skipValue:()V
      42: goto          9
      45: aload_2
      46: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      49: goto          61
      52: astore        4
      54: aload_2
      55: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      58: aload         4
      60: athrow
      61: iconst_0
      62: ireturn
    Exception table:
       from    to  target type
           5    32    52   any
          38    45    52   any
          52    54    52   any

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: new           #16                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #17                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #6                  // Method getBsonReader:()Lorg/bson/BsonBinaryReader;
      12: astore_2
      13: aload_2
      14: invokevirtual #7                  // Method org/bson/BsonBinaryReader.readStartDocument:()V
      17: aload_2
      18: invokevirtual #8                  // Method org/bson/BsonBinaryReader.readBsonType:()Lorg/bson/BsonType;
      21: getstatic     #9                  // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      24: if_acmpeq     45
      27: aload_1
      28: aload_2
      29: invokevirtual #10                 // Method org/bson/BsonBinaryReader.readName:()Ljava/lang/String;
      32: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_2
      39: invokevirtual #13                 // Method org/bson/BsonBinaryReader.skipValue:()V
      42: goto          17
      45: aload_2
      46: invokevirtual #19                 // Method org/bson/BsonBinaryReader.readEndDocument:()V
      49: aload_2
      50: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      53: goto          63
      56: astore_3
      57: aload_2
      58: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      61: aload_3
      62: athrow
      63: aload_1
      64: invokestatic  #20                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      67: areturn
    Exception table:
       from    to  target type
          13    49    56   any

  java.lang.Object readValue(org.bson.BsonBinaryReader);
    Code:
       0: getstatic     #21                 // Field org/bson/LazyBSONObject$2.$SwitchMap$org$bson$BsonType:[I
       3: aload_1
       4: invokevirtual #22                 // Method org/bson/BsonBinaryReader.getCurrentBsonType:()Lorg/bson/BsonType;
       7: invokevirtual #23                 // Method org/bson/BsonType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 21
                     1: 108
                     2: 114
                     3: 120
                     4: 128
                     5: 133
                     6: 218
                     7: 224
                     8: 230
                     9: 235
                    10: 243
                    11: 255
                    12: 278
                    13: 302
                    14: 314
                    15: 326
                    16: 346
                    17: 354
                    18: 378
                    19: 386
                    20: 391
                    21: 403
               default: 415
          }
     108: aload_0
     109: aload_1
     110: invokespecial #24                 // Method readDocument:(Lorg/bson/BsonBinaryReader;)Ljava/lang/Object;
     113: areturn
     114: aload_0
     115: aload_1
     116: invokespecial #25                 // Method readArray:(Lorg/bson/BsonBinaryReader;)Ljava/lang/Object;
     119: areturn
     120: aload_1
     121: invokevirtual #26                 // Method org/bson/BsonBinaryReader.readDouble:()D
     124: invokestatic  #27                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     127: areturn
     128: aload_1
     129: invokevirtual #28                 // Method org/bson/BsonBinaryReader.readString:()Ljava/lang/String;
     132: areturn
     133: aload_1
     134: invokevirtual #29                 // Method org/bson/BsonBinaryReader.peekBinarySubType:()B
     137: istore_2
     138: iload_2
     139: invokestatic  #30                 // Method org/bson/BsonBinarySubType.isUuid:(B)Z
     142: ifeq          172
     145: aload_1
     146: invokevirtual #31                 // Method org/bson/BsonBinaryReader.peekBinarySize:()I
     149: bipush        16
     151: if_icmpne     172
     154: new           #32                 // class org/bson/codecs/UuidCodec
     157: dup
     158: invokespecial #33                 // Method org/bson/codecs/UuidCodec."<init>":()V
     161: aload_1
     162: invokestatic  #34                 // Method org/bson/codecs/DecoderContext.builder:()Lorg/bson/codecs/DecoderContext$Builder;
     165: invokevirtual #35                 // Method org/bson/codecs/DecoderContext$Builder.build:()Lorg/bson/codecs/DecoderContext;
     168: invokevirtual #36                 // Method org/bson/codecs/UuidCodec.decode:(Lorg/bson/BsonReader;Lorg/bson/codecs/DecoderContext;)Ljava/util/UUID;
     171: areturn
     172: aload_1
     173: invokevirtual #37                 // Method org/bson/BsonBinaryReader.readBinaryData:()Lorg/bson/BsonBinary;
     176: astore_3
     177: iload_2
     178: getstatic     #38                 // Field org/bson/BsonBinarySubType.BINARY:Lorg/bson/BsonBinarySubType;
     181: invokevirtual #39                 // Method org/bson/BsonBinarySubType.getValue:()B
     184: if_icmpeq     197
     187: iload_2
     188: getstatic     #40                 // Field org/bson/BsonBinarySubType.OLD_BINARY:Lorg/bson/BsonBinarySubType;
     191: invokevirtual #39                 // Method org/bson/BsonBinarySubType.getValue:()B
     194: if_icmpne     202
     197: aload_3
     198: invokevirtual #41                 // Method org/bson/BsonBinary.getData:()[B
     201: areturn
     202: new           #42                 // class org/bson/types/Binary
     205: dup
     206: aload_3
     207: invokevirtual #43                 // Method org/bson/BsonBinary.getType:()B
     210: aload_3
     211: invokevirtual #41                 // Method org/bson/BsonBinary.getData:()[B
     214: invokespecial #44                 // Method org/bson/types/Binary."<init>":(B[B)V
     217: areturn
     218: aload_1
     219: invokevirtual #45                 // Method org/bson/BsonBinaryReader.readNull:()V
     222: aconst_null
     223: areturn
     224: aload_1
     225: invokevirtual #46                 // Method org/bson/BsonBinaryReader.readUndefined:()V
     228: aconst_null
     229: areturn
     230: aload_1
     231: invokevirtual #47                 // Method org/bson/BsonBinaryReader.readObjectId:()Lorg/bson/types/ObjectId;
     234: areturn
     235: aload_1
     236: invokevirtual #48                 // Method org/bson/BsonBinaryReader.readBoolean:()Z
     239: invokestatic  #49                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     242: areturn
     243: new           #50                 // class java/util/Date
     246: dup
     247: aload_1
     248: invokevirtual #51                 // Method org/bson/BsonBinaryReader.readDateTime:()J
     251: invokespecial #52                 // Method java/util/Date."<init>":(J)V
     254: areturn
     255: aload_1
     256: invokevirtual #53                 // Method org/bson/BsonBinaryReader.readRegularExpression:()Lorg/bson/BsonRegularExpression;
     259: astore        4
     261: aload         4
     263: invokevirtual #54                 // Method org/bson/BsonRegularExpression.getPattern:()Ljava/lang/String;
     266: aload         4
     268: invokevirtual #55                 // Method org/bson/BsonRegularExpression.getOptions:()Ljava/lang/String;
     271: invokestatic  #56                 // Method org/bson/BSON.regexFlags:(Ljava/lang/String;)I
     274: invokestatic  #57                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
     277: areturn
     278: aload_1
     279: invokevirtual #58                 // Method org/bson/BsonBinaryReader.readDBPointer:()Lorg/bson/BsonDbPointer;
     282: astore        5
     284: aload_0
     285: getfield      #4                  // Field callback:Lorg/bson/LazyBSONCallback;
     288: aload         5
     290: invokevirtual #59                 // Method org/bson/BsonDbPointer.getNamespace:()Ljava/lang/String;
     293: aload         5
     295: invokevirtual #60                 // Method org/bson/BsonDbPointer.getId:()Lorg/bson/types/ObjectId;
     298: invokevirtual #61                 // Method org/bson/LazyBSONCallback.createDBRef:(Ljava/lang/String;Lorg/bson/types/ObjectId;)Ljava/lang/Object;
     301: areturn
     302: new           #62                 // class org/bson/types/Code
     305: dup
     306: aload_1
     307: invokevirtual #63                 // Method org/bson/BsonBinaryReader.readJavaScript:()Ljava/lang/String;
     310: invokespecial #64                 // Method org/bson/types/Code."<init>":(Ljava/lang/String;)V
     313: areturn
     314: new           #65                 // class org/bson/types/Symbol
     317: dup
     318: aload_1
     319: invokevirtual #66                 // Method org/bson/BsonBinaryReader.readSymbol:()Ljava/lang/String;
     322: invokespecial #67                 // Method org/bson/types/Symbol."<init>":(Ljava/lang/String;)V
     325: areturn
     326: new           #68                 // class org/bson/types/CodeWScope
     329: dup
     330: aload_1
     331: invokevirtual #69                 // Method org/bson/BsonBinaryReader.readJavaScriptWithScope:()Ljava/lang/String;
     334: aload_0
     335: aload_1
     336: invokespecial #70                 // Method readJavaScriptWithScopeDocument:(Lorg/bson/BsonBinaryReader;)Ljava/lang/Object;
     339: checkcast     #71                 // class org/bson/BSONObject
     342: invokespecial #72                 // Method org/bson/types/CodeWScope."<init>":(Ljava/lang/String;Lorg/bson/BSONObject;)V
     345: areturn
     346: aload_1
     347: invokevirtual #73                 // Method org/bson/BsonBinaryReader.readInt32:()I
     350: invokestatic  #74                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     353: areturn
     354: aload_1
     355: invokevirtual #75                 // Method org/bson/BsonBinaryReader.readTimestamp:()Lorg/bson/BsonTimestamp;
     358: astore        6
     360: new           #76                 // class org/bson/types/BSONTimestamp
     363: dup
     364: aload         6
     366: invokevirtual #77                 // Method org/bson/BsonTimestamp.getTime:()I
     369: aload         6
     371: invokevirtual #78                 // Method org/bson/BsonTimestamp.getInc:()I
     374: invokespecial #79                 // Method org/bson/types/BSONTimestamp."<init>":(II)V
     377: areturn
     378: aload_1
     379: invokevirtual #80                 // Method org/bson/BsonBinaryReader.readInt64:()J
     382: invokestatic  #81                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     385: areturn
     386: aload_1
     387: invokevirtual #82                 // Method org/bson/BsonBinaryReader.readDecimal128:()Lorg/bson/types/Decimal128;
     390: areturn
     391: aload_1
     392: invokevirtual #83                 // Method org/bson/BsonBinaryReader.readMinKey:()V
     395: new           #84                 // class org/bson/types/MinKey
     398: dup
     399: invokespecial #85                 // Method org/bson/types/MinKey."<init>":()V
     402: areturn
     403: aload_1
     404: invokevirtual #86                 // Method org/bson/BsonBinaryReader.readMaxKey:()V
     407: new           #87                 // class org/bson/types/MaxKey
     410: dup
     411: invokespecial #88                 // Method org/bson/types/MaxKey."<init>":()V
     414: areturn
     415: new           #89                 // class java/lang/IllegalArgumentException
     418: dup
     419: new           #90                 // class java/lang/StringBuilder
     422: dup
     423: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
     426: ldc           #92                 // String unhandled BSON type:
     428: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     431: aload_1
     432: invokevirtual #22                 // Method org/bson/BsonBinaryReader.getCurrentBsonType:()Lorg/bson/BsonType;
     435: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     438: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     441: invokespecial #96                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     444: athrow

  private java.lang.Object readArray(org.bson.BsonBinaryReader);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method org/bson/BsonBinaryReader.getBsonInput:()Lorg/bson/io/BsonInput;
       4: invokeinterface #98,  1           // InterfaceMethod org/bson/io/BsonInput.getPosition:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #13                 // Method org/bson/BsonBinaryReader.skipValue:()V
      14: aload_0
      15: getfield      #4                  // Field callback:Lorg/bson/LazyBSONCallback;
      18: aload_0
      19: getfield      #3                  // Field bytes:[B
      22: aload_0
      23: getfield      #5                  // Field offset:I
      26: iload_2
      27: iadd
      28: invokevirtual #99                 // Method org/bson/LazyBSONCallback.createArray:([BI)Ljava/util/List;
      31: areturn

  private java.lang.Object readDocument(org.bson.BsonBinaryReader);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method org/bson/BsonBinaryReader.getBsonInput:()Lorg/bson/io/BsonInput;
       4: invokeinterface #98,  1           // InterfaceMethod org/bson/io/BsonInput.getPosition:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #13                 // Method org/bson/BsonBinaryReader.skipValue:()V
      14: aload_0
      15: getfield      #4                  // Field callback:Lorg/bson/LazyBSONCallback;
      18: aload_0
      19: getfield      #3                  // Field bytes:[B
      22: aload_0
      23: getfield      #5                  // Field offset:I
      26: iload_2
      27: iadd
      28: invokevirtual #100                // Method org/bson/LazyBSONCallback.createObject:([BI)Ljava/lang/Object;
      31: areturn

  private java.lang.Object readJavaScriptWithScopeDocument(org.bson.BsonBinaryReader);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method org/bson/BsonBinaryReader.getBsonInput:()Lorg/bson/io/BsonInput;
       4: invokeinterface #98,  1           // InterfaceMethod org/bson/io/BsonInput.getPosition:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #7                  // Method org/bson/BsonBinaryReader.readStartDocument:()V
      14: aload_1
      15: invokevirtual #8                  // Method org/bson/BsonBinaryReader.readBsonType:()Lorg/bson/BsonType;
      18: getstatic     #9                  // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      21: if_acmpeq     35
      24: aload_1
      25: invokevirtual #101                // Method org/bson/BsonBinaryReader.skipName:()V
      28: aload_1
      29: invokevirtual #13                 // Method org/bson/BsonBinaryReader.skipValue:()V
      32: goto          14
      35: aload_1
      36: invokevirtual #19                 // Method org/bson/BsonBinaryReader.readEndDocument:()V
      39: aload_0
      40: getfield      #4                  // Field callback:Lorg/bson/LazyBSONCallback;
      43: aload_0
      44: getfield      #3                  // Field bytes:[B
      47: aload_0
      48: getfield      #5                  // Field offset:I
      51: iload_2
      52: iadd
      53: invokevirtual #100                // Method org/bson/LazyBSONCallback.createObject:([BI)Ljava/lang/Object;
      56: areturn

  org.bson.BsonBinaryReader getBsonReader();
    Code:
       0: aload_0
       1: invokespecial #102                // Method getBufferForInternalBytes:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: new           #103                // class org/bson/BsonBinaryReader
       8: dup
       9: new           #104                // class org/bson/io/ByteBufferBsonInput
      12: dup
      13: new           #105                // class org/bson/ByteBufNIO
      16: dup
      17: aload_1
      18: invokespecial #106                // Method org/bson/ByteBufNIO."<init>":(Ljava/nio/ByteBuffer;)V
      21: invokespecial #107                // Method org/bson/io/ByteBufferBsonInput."<init>":(Lorg/bson/ByteBuf;)V
      24: invokespecial #108                // Method org/bson/BsonBinaryReader."<init>":(Lorg/bson/io/BsonInput;)V
      27: areturn

  private java.nio.ByteBuffer getBufferForInternalBytes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bytes:[B
       4: aload_0
       5: getfield      #5                  // Field offset:I
       8: aload_0
       9: getfield      #3                  // Field bytes:[B
      12: arraylength
      13: aload_0
      14: getfield      #5                  // Field offset:I
      17: isub
      18: invokestatic  #109                // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      21: invokevirtual #110                // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      24: astore_1
      25: aload_1
      26: getstatic     #111                // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      29: invokevirtual #112                // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      32: pop
      33: aload_1
      34: aload_1
      35: invokevirtual #113                // Method java/nio/ByteBuffer.getInt:()I
      38: invokevirtual #114                // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      41: pop
      42: aload_1
      43: invokevirtual #115                // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
      46: pop
      47: aload_1
      48: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method keySet:()Ljava/util/Set;
       4: invokeinterface #117,  1          // InterfaceMethod java/util/Set.size:()I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public int getBSONSize();
    Code:
       0: aload_0
       1: invokespecial #102                // Method getBufferForInternalBytes:()Ljava/nio/ByteBuffer;
       4: invokevirtual #113                // Method java/nio/ByteBuffer.getInt:()I
       7: ireturn

  public int pipe(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #118                // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokespecial #102                // Method getBufferForInternalBytes:()Ljava/nio/ByteBuffer;
      10: invokeinterface #119,  2          // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      15: ireturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.Object>> entrySet();
    Code:
       0: new           #120                // class java/util/ArrayList
       3: dup
       4: invokespecial #121                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #6                  // Method getBsonReader:()Lorg/bson/BsonBinaryReader;
      12: astore_2
      13: aload_2
      14: invokevirtual #7                  // Method org/bson/BsonBinaryReader.readStartDocument:()V
      17: aload_2
      18: invokevirtual #8                  // Method org/bson/BsonBinaryReader.readBsonType:()Lorg/bson/BsonType;
      21: getstatic     #9                  // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      24: if_acmpeq     53
      27: aload_1
      28: new           #122                // class java/util/AbstractMap$SimpleImmutableEntry
      31: dup
      32: aload_2
      33: invokevirtual #10                 // Method org/bson/BsonBinaryReader.readName:()Ljava/lang/String;
      36: aload_0
      37: aload_2
      38: invokevirtual #12                 // Method readValue:(Lorg/bson/BsonBinaryReader;)Ljava/lang/Object;
      41: invokespecial #123                // Method java/util/AbstractMap$SimpleImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      44: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          17
      53: aload_2
      54: invokevirtual #19                 // Method org/bson/BsonBinaryReader.readEndDocument:()V
      57: aload_2
      58: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      61: goto          71
      64: astore_3
      65: aload_2
      66: invokevirtual #14                 // Method org/bson/BsonBinaryReader.close:()V
      69: aload_3
      70: athrow
      71: new           #125                // class org/bson/LazyBSONObject$1
      74: dup
      75: aload_0
      76: aload_1
      77: invokespecial #126                // Method org/bson/LazyBSONObject$1."<init>":(Lorg/bson/LazyBSONObject;Ljava/util/List;)V
      80: areturn
    Exception table:
       from    to  target type
          13    57    64   any

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: invokevirtual #127                // Method getBSONSize:()I
       6: istore_2
       7: aload_0
       8: getfield      #5                  // Field offset:I
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #5                  // Field offset:I
      17: iload_2
      18: iadd
      19: if_icmpge     40
      22: bipush        31
      24: iload_1
      25: imul
      26: aload_0
      27: getfield      #3                  // Field bytes:[B
      30: iload_3
      31: baload
      32: iadd
      33: istore_1
      34: iinc          3, 1
      37: goto          12
      40: iload_1
      41: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #128                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #128                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #129                // class org/bson/LazyBSONObject
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field bytes:[B
      33: aload_2
      34: getfield      #3                  // Field bytes:[B
      37: if_acmpne     53
      40: aload_0
      41: getfield      #5                  // Field offset:I
      44: aload_2
      45: getfield      #5                  // Field offset:I
      48: if_icmpne     53
      51: iconst_1
      52: ireturn
      53: aload_0
      54: getfield      #3                  // Field bytes:[B
      57: ifnull        67
      60: aload_2
      61: getfield      #3                  // Field bytes:[B
      64: ifnonnull     69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: getfield      #3                  // Field bytes:[B
      73: arraylength
      74: ifeq          85
      77: aload_2
      78: getfield      #3                  // Field bytes:[B
      81: arraylength
      82: ifne          87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: getfield      #3                  // Field bytes:[B
      91: aload_0
      92: getfield      #5                  // Field offset:I
      95: baload
      96: istore_3
      97: aload_2
      98: getfield      #3                  // Field bytes:[B
     101: aload_2
     102: getfield      #5                  // Field offset:I
     105: baload
     106: iload_3
     107: if_icmpeq     112
     110: iconst_0
     111: ireturn
     112: iconst_0
     113: istore        4
     115: iload         4
     117: iload_3
     118: if_icmpge     156
     121: aload_0
     122: getfield      #3                  // Field bytes:[B
     125: aload_0
     126: getfield      #5                  // Field offset:I
     129: iload         4
     131: iadd
     132: baload
     133: aload_2
     134: getfield      #3                  // Field bytes:[B
     137: aload_2
     138: getfield      #5                  // Field offset:I
     141: iload         4
     143: iadd
     144: baload
     145: if_icmpeq     150
     148: iconst_0
     149: ireturn
     150: iinc          4, 1
     153: goto          115
     156: iconst_1
     157: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #130                // Method com/mongodb/util/JSON.serialize:(Ljava/lang/Object;)Ljava/lang/String;
       4: areturn

  public java.lang.Object put(java.lang.String, java.lang.Object);
    Code:
       0: new           #131                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #132                // String Object is read only
       6: invokespecial #133                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void putAll(org.bson.BSONObject);
    Code:
       0: new           #131                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #132                // String Object is read only
       6: invokespecial #133                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void putAll(java.util.Map);
    Code:
       0: new           #131                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #132                // String Object is read only
       6: invokespecial #133                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object removeField(java.lang.String);
    Code:
       0: new           #131                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #132                // String Object is read only
       6: invokespecial #133                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.util.Map toMap();
    Code:
       0: new           #134                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #135                // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #136                // Method entrySet:()Ljava/util/Set;
      12: invokeinterface #137,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #138,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          59
      27: aload_2
      28: invokeinterface #139,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #140                // class java/util/Map$Entry
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokeinterface #141,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      44: aload_3
      45: invokeinterface #142,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: invokeinterface #143,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          18
      59: aload_1
      60: invokestatic  #144                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      63: areturn
}
