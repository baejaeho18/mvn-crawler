Compiled from "ClassAncestry.java"
class org.bson.util.ClassAncestry {
  private static final java.util.concurrent.ConcurrentMap<java.lang.Class<?>, java.util.List<java.lang.Class<?>>> _ancestryCache;

  org.bson.util.ClassAncestry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.util.List<java.lang.Class<?>> getAncestry(java.lang.Class<T>);
    Code:
       0: invokestatic  #2                  // Method getClassAncestryCache:()Ljava/util/concurrent/ConcurrentMap;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokeinterface #3,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/List
      14: astore_2
      15: aload_2
      16: ifnull        21
      19: aload_2
      20: areturn
      21: aload_1
      22: aload_0
      23: aload_0
      24: invokestatic  #5                  // Method computeAncestry:(Ljava/lang/Class;)Ljava/util/List;
      27: invokeinterface #6,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: goto          4

  private static java.util.List<java.lang.Class<?>> computeAncestry(java.lang.Class<?>);
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #9                  // class java/lang/Object
      11: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: aload_1
      19: invokestatic  #11                 // Method computeAncestry:(Ljava/lang/Class;Ljava/util/List;)V
      22: aload_1
      23: invokestatic  #12                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      26: new           #7                  // class java/util/ArrayList
      29: dup
      30: aload_1
      31: invokespecial #13                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      34: invokestatic  #14                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      37: areturn

  private static <T> void computeAncestry(java.lang.Class<T>, java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: ifnull        10
       4: aload_0
       5: ldc           #9                  // class java/lang/Object
       7: if_acmpne     11
      10: return
      11: aload_0
      12: invokevirtual #15                 // Method java/lang/Class.getInterfaces:()[Ljava/lang/Class;
      15: astore_2
      16: aload_2
      17: arraylength
      18: iconst_1
      19: isub
      20: istore_3
      21: iload_3
      22: iflt          38
      25: aload_2
      26: iload_3
      27: aaload
      28: aload_1
      29: invokestatic  #11                 // Method computeAncestry:(Ljava/lang/Class;Ljava/util/List;)V
      32: iinc          3, -1
      35: goto          21
      38: aload_0
      39: invokevirtual #16                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      42: aload_1
      43: invokestatic  #11                 // Method computeAncestry:(Ljava/lang/Class;Ljava/util/List;)V
      46: aload_1
      47: aload_0
      48: invokeinterface #17,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      53: ifne          64
      56: aload_1
      57: aload_0
      58: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: return

  private static java.util.concurrent.ConcurrentMap<java.lang.Class<?>, java.util.List<java.lang.Class<?>>> getClassAncestryCache();
    Code:
       0: getstatic     #18                 // Field _ancestryCache:Ljava/util/concurrent/ConcurrentMap;
       3: areturn

  static {};
    Code:
       0: invokestatic  #19                 // Method org/bson/util/CopyOnWriteMap.newHashMap:()Lorg/bson/util/CopyOnWriteMap;
       3: putstatic     #18                 // Field _ancestryCache:Ljava/util/concurrent/ConcurrentMap;
       6: return
}
