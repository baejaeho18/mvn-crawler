Compiled from "ComputingMap.java"
final class org.bson.util.ComputingMap<K, V> implements java.util.Map<K, V>, org.bson.util.Function<K, V> {
  private final java.util.concurrent.ConcurrentMap<K, V> map;

  private final org.bson.util.Function<K, V> function;

  public static <K, V> java.util.Map<K, V> create(org.bson.util.Function<K, V>);
    Code:
       0: new           #1                  // class org/bson/util/ComputingMap
       3: dup
       4: invokestatic  #2                  // Method org/bson/util/CopyOnWriteMap.newHashMap:()Lorg/bson/util/CopyOnWriteMap;
       7: aload_0
       8: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/ConcurrentMap;Lorg/bson/util/Function;)V
      11: areturn

  org.bson.util.ComputingMap(java.util.concurrent.ConcurrentMap<K, V>, org.bson.util.Function<K, V>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #5                  // String map
       7: aload_1
       8: invokestatic  #6                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #7                  // class java/util/concurrent/ConcurrentMap
      14: putfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: ldc           #9                  // String function
      20: aload_2
      21: invokestatic  #6                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #10                 // class org/bson/util/Function
      27: putfield      #11                 // Field function:Lorg/bson/util/Function;
      30: return

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_2
      11: aload_2
      12: ifnull        17
      15: aload_2
      16: areturn
      17: aload_1
      18: astore_3
      19: aload_0
      20: getfield      #11                 // Field function:Lorg/bson/util/Function;
      23: aload_3
      24: invokeinterface #13,  2           // InterfaceMethod org/bson/util/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore        4
      31: aload         4
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload_0
      39: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      42: aload_3
      43: aload         4
      45: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          0

  public V apply(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #16,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      11: ireturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #17,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public V put(K, V);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #30                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: invokevirtual #31                 // Method java/lang/Object.hashCode:()I
       7: ireturn
}
