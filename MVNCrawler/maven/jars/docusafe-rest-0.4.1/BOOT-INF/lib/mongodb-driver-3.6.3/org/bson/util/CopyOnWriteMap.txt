Compiled from "CopyOnWriteMap.java"
abstract class org.bson.util.CopyOnWriteMap<K, V> extends org.bson.util.AbstractCopyOnWriteMap<K, V, java.util.Map<K, V>> {
  private static final long serialVersionUID;

  public static <K, V> org.bson.util.CopyOnWriteMap$Builder<K, V> builder();
    Code:
       0: new           #1                  // class org/bson/util/CopyOnWriteMap$Builder
       3: dup
       4: invokespecial #2                  // Method org/bson/util/CopyOnWriteMap$Builder."<init>":()V
       7: areturn

  public static <K, V> org.bson.util.CopyOnWriteMap<K, V> newHashMap();
    Code:
       0: invokestatic  #3                  // Method builder:()Lorg/bson/util/CopyOnWriteMap$Builder;
       3: astore_0
       4: aload_0
       5: invokevirtual #4                  // Method org/bson/util/CopyOnWriteMap$Builder.newHashMap:()Lorg/bson/util/CopyOnWriteMap;
       8: areturn

  public static <K, V> org.bson.util.CopyOnWriteMap<K, V> newHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: invokestatic  #3                  // Method builder:()Lorg/bson/util/CopyOnWriteMap$Builder;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #5                  // Method org/bson/util/CopyOnWriteMap$Builder.addAll:(Ljava/util/Map;)Lorg/bson/util/CopyOnWriteMap$Builder;
       9: invokevirtual #4                  // Method org/bson/util/CopyOnWriteMap$Builder.newHashMap:()Lorg/bson/util/CopyOnWriteMap;
      12: areturn

  public static <K, V> org.bson.util.CopyOnWriteMap<K, V> newLinkedMap();
    Code:
       0: invokestatic  #3                  // Method builder:()Lorg/bson/util/CopyOnWriteMap$Builder;
       3: astore_0
       4: aload_0
       5: invokevirtual #6                  // Method org/bson/util/CopyOnWriteMap$Builder.newLinkedMap:()Lorg/bson/util/CopyOnWriteMap;
       8: areturn

  public static <K, V> org.bson.util.CopyOnWriteMap<K, V> newLinkedMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: invokestatic  #3                  // Method builder:()Lorg/bson/util/CopyOnWriteMap$Builder;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #5                  // Method org/bson/util/CopyOnWriteMap$Builder.addAll:(Ljava/util/Map;)Lorg/bson/util/CopyOnWriteMap$Builder;
       9: invokevirtual #6                  // Method org/bson/util/CopyOnWriteMap$Builder.newLinkedMap:()Lorg/bson/util/CopyOnWriteMap;
      12: areturn

  protected org.bson.util.CopyOnWriteMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #7                  // Field org/bson/util/AbstractCopyOnWriteMap$View$Type.LIVE:Lorg/bson/util/AbstractCopyOnWriteMap$View$Type;
       5: invokespecial #8                  // Method "<init>":(Ljava/util/Map;Lorg/bson/util/AbstractCopyOnWriteMap$View$Type;)V
       8: return

  protected org.bson.util.CopyOnWriteMap();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       4: getstatic     #7                  // Field org/bson/util/AbstractCopyOnWriteMap$View$Type.LIVE:Lorg/bson/util/AbstractCopyOnWriteMap$View$Type;
       7: invokespecial #8                  // Method "<init>":(Ljava/util/Map;Lorg/bson/util/AbstractCopyOnWriteMap$View$Type;)V
      10: return

  protected org.bson.util.CopyOnWriteMap(java.util.Map<? extends K, ? extends V>, org.bson.util.AbstractCopyOnWriteMap$View$Type);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method org/bson/util/AbstractCopyOnWriteMap."<init>":(Ljava/util/Map;Lorg/bson/util/AbstractCopyOnWriteMap$View$Type;)V
       6: return

  protected org.bson.util.CopyOnWriteMap(org.bson.util.AbstractCopyOnWriteMap$View$Type);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       4: aload_1
       5: invokespecial #10                 // Method org/bson/util/AbstractCopyOnWriteMap."<init>":(Ljava/util/Map;Lorg/bson/util/AbstractCopyOnWriteMap$View$Type;)V
       8: return

  protected abstract <N extends java.util.Map<? extends K, ? extends V>> java.util.Map<K, V> copy(N);
}
