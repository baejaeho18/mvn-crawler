Compiled from "DocumentationContextBuilder.java"
class springfox.documentation.spi.service.contexts.DocumentationContextBuilder$1 implements com.google.common.base.Function<com.google.common.base.Function<com.fasterxml.classmate.TypeResolver, springfox.documentation.schema.AlternateTypeRule>, springfox.documentation.schema.AlternateTypeRule> {
  final com.fasterxml.classmate.TypeResolver val$typeResolver;

  final springfox.documentation.spi.service.contexts.DocumentationContextBuilder this$0;

  springfox.documentation.spi.service.contexts.DocumentationContextBuilder$1(springfox.documentation.spi.service.contexts.DocumentationContextBuilder, com.fasterxml.classmate.TypeResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lspringfox/documentation/spi/service/contexts/DocumentationContextBuilder;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$typeResolver:Lcom/fasterxml/classmate/TypeResolver;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public springfox.documentation.schema.AlternateTypeRule apply(com.google.common.base.Function<com.fasterxml.classmate.TypeResolver, springfox.documentation.schema.AlternateTypeRule>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field val$typeResolver:Lcom/fasterxml/classmate/TypeResolver;
       5: invokeinterface #4,  2            // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #5                  // class springfox/documentation/schema/AlternateTypeRule
      13: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class com/google/common/base/Function
       5: invokevirtual #7                  // Method apply:(Lcom/google/common/base/Function;)Lspringfox/documentation/schema/AlternateTypeRule;
       8: areturn
}
