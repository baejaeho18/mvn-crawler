Compiled from "Optional.java"
public class org.apache.el.stream.Optional {
  private final java.lang.Object obj;

  static final org.apache.el.stream.Optional EMPTY;

  org.apache.el.stream.Optional(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field obj:Ljava/lang/Object;
       9: return

  public java.lang.Object get() throws javax.el.ELException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field obj:Ljava/lang/Object;
       4: ifnonnull     20
       7: new           #3                  // class javax/el/ELException
      10: dup
      11: ldc           #4                  // String stream.optional.empty
      13: invokestatic  #5                  // Method org/apache/el/util/MessageFactory.get:(Ljava/lang/String;)Ljava/lang/String;
      16: invokespecial #6                  // Method javax/el/ELException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #2                  // Field obj:Ljava/lang/Object;
      24: areturn

  public void ifPresent(javax.el.LambdaExpression);
    Code:
       0: aload_0
       1: getfield      #2                  // Field obj:Ljava/lang/Object;
       4: ifnull        23
       7: aload_1
       8: iconst_1
       9: anewarray     #7                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #2                  // Field obj:Ljava/lang/Object;
      18: aastore
      19: invokevirtual #8                  // Method javax/el/LambdaExpression.invoke:([Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return

  public java.lang.Object orElse(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field obj:Ljava/lang/Object;
       4: ifnonnull     9
       7: aload_1
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field obj:Ljava/lang/Object;
      13: areturn

  public java.lang.Object orElseGet(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field obj:Ljava/lang/Object;
       4: ifnonnull     28
       7: aload_1
       8: instanceof    #9                  // class javax/el/LambdaExpression
      11: ifeq          26
      14: aload_1
      15: checkcast     #9                  // class javax/el/LambdaExpression
      18: aconst_null
      19: checkcast     #10                 // class "[Ljava/lang/Object;"
      22: invokevirtual #8                  // Method javax/el/LambdaExpression.invoke:([Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn
      26: aload_1
      27: areturn
      28: aload_0
      29: getfield      #2                  // Field obj:Ljava/lang/Object;
      32: areturn

  static {};
    Code:
       0: new           #11                 // class org/apache/el/stream/Optional
       3: dup
       4: aconst_null
       5: invokespecial #12                 // Method "<init>":(Ljava/lang/Object;)V
       8: putstatic     #13                 // Field EMPTY:Lorg/apache/el/stream/Optional;
      11: return
}
