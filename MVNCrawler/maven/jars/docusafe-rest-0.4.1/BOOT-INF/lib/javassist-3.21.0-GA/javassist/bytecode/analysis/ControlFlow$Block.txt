Compiled from "ControlFlow.java"
public class javassist.bytecode.analysis.ControlFlow$Block extends javassist.bytecode.stackmap.BasicBlock {
  public java.lang.Object clientData;

  int index;

  javassist.bytecode.MethodInfo method;

  javassist.bytecode.analysis.ControlFlow$Block[] entrances;

  javassist.bytecode.analysis.ControlFlow$Block(int, javassist.bytecode.MethodInfo);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method javassist/bytecode/stackmap/BasicBlock."<init>":(I)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field clientData:Ljava/lang/Object;
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field method:Ljavassist/bytecode/MethodInfo;
      15: return

  protected void toString2(java.lang.StringBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method javassist/bytecode/stackmap/BasicBlock.toString2:(Ljava/lang/StringBuffer;)V
       5: aload_1
       6: ldc           #5                  // String , incoming{
       8: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      11: pop
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: getfield      #7                  // Field entrances:[Ljavassist/bytecode/analysis/ControlFlow$Block;
      19: arraylength
      20: if_icmpge     48
      23: aload_1
      24: aload_0
      25: getfield      #7                  // Field entrances:[Ljavassist/bytecode/analysis/ControlFlow$Block;
      28: iload_2
      29: aaload
      30: getfield      #8                  // Field position:I
      33: invokevirtual #9                  // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      36: ldc           #10                 // String ,
      38: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: pop
      42: iinc          2, 1
      45: goto          14
      48: aload_1
      49: ldc           #11                 // String }
      51: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      54: pop
      55: return

  javassist.bytecode.stackmap.BasicBlock[] getExit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field exit:[Ljavassist/bytecode/stackmap/BasicBlock;
       4: areturn

  public int index();
    Code:
       0: aload_0
       1: getfield      #13                 // Field index:I
       4: ireturn

  public int position();
    Code:
       0: aload_0
       1: getfield      #8                  // Field position:I
       4: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #14                 // Field length:I
       4: ireturn

  public int incomings();
    Code:
       0: aload_0
       1: getfield      #15                 // Field incoming:I
       4: ireturn

  public javassist.bytecode.analysis.ControlFlow$Block incoming(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field entrances:[Ljavassist/bytecode/analysis/ControlFlow$Block;
       4: iload_1
       5: aaload
       6: areturn

  public int exits();
    Code:
       0: aload_0
       1: getfield      #12                 // Field exit:[Ljavassist/bytecode/stackmap/BasicBlock;
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #12                 // Field exit:[Ljavassist/bytecode/stackmap/BasicBlock;
      15: arraylength
      16: ireturn

  public javassist.bytecode.analysis.ControlFlow$Block exit(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field exit:[Ljavassist/bytecode/stackmap/BasicBlock;
       4: iload_1
       5: aaload
       6: checkcast     #16                 // class javassist/bytecode/analysis/ControlFlow$Block
       9: areturn

  public javassist.bytecode.analysis.ControlFlow$Catcher[] catchers();
    Code:
       0: new           #17                 // class java/util/ArrayList
       3: dup
       4: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #19                 // Field toCatch:Ljavassist/bytecode/stackmap/BasicBlock$Catch;
      12: astore_2
      13: aload_2
      14: ifnull        38
      17: aload_1
      18: new           #20                 // class javassist/bytecode/analysis/ControlFlow$Catcher
      21: dup
      22: aload_2
      23: invokespecial #21                 // Method javassist/bytecode/analysis/ControlFlow$Catcher."<init>":(Ljavassist/bytecode/stackmap/BasicBlock$Catch;)V
      26: invokevirtual #22                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_2
      31: getfield      #23                 // Field javassist/bytecode/stackmap/BasicBlock$Catch.next:Ljavassist/bytecode/stackmap/BasicBlock$Catch;
      34: astore_2
      35: goto          13
      38: aload_1
      39: aload_1
      40: invokevirtual #24                 // Method java/util/ArrayList.size:()I
      43: anewarray     #20                 // class javassist/bytecode/analysis/ControlFlow$Catcher
      46: invokevirtual #25                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      49: checkcast     #26                 // class "[Ljavassist/bytecode/analysis/ControlFlow$Catcher;"
      52: checkcast     #26                 // class "[Ljavassist/bytecode/analysis/ControlFlow$Catcher;"
      55: areturn
}
