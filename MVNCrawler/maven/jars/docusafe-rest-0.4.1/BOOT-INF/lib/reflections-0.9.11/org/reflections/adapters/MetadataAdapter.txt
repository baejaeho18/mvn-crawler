Compiled from "MetadataAdapter.java"
public interface org.reflections.adapters.MetadataAdapter<C, F, M> {
  public abstract java.lang.String getClassName(C);

  public abstract java.lang.String getSuperclassName(C);

  public abstract java.util.List<java.lang.String> getInterfacesNames(C);

  public abstract java.util.List<F> getFields(C);

  public abstract java.util.List<M> getMethods(C);

  public abstract java.lang.String getMethodName(M);

  public abstract java.util.List<java.lang.String> getParameterNames(M);

  public abstract java.util.List<java.lang.String> getClassAnnotationNames(C);

  public abstract java.util.List<java.lang.String> getFieldAnnotationNames(F);

  public abstract java.util.List<java.lang.String> getMethodAnnotationNames(M);

  public abstract java.util.List<java.lang.String> getParameterAnnotationNames(M, int);

  public abstract java.lang.String getReturnTypeName(M);

  public abstract java.lang.String getFieldName(F);

  public abstract C getOfCreateClassObject(org.reflections.vfs.Vfs$File) throws java.lang.Exception;

  public abstract java.lang.String getMethodModifier(M);

  public abstract java.lang.String getMethodKey(C, M);

  public abstract java.lang.String getMethodFullKey(C, M);

  public abstract boolean isPublic(java.lang.Object);

  public abstract boolean acceptsInput(java.lang.String);
}
