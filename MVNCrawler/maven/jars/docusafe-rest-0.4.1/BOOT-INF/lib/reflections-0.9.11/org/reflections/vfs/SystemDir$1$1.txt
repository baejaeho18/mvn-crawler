Compiled from "SystemDir.java"
class org.reflections.vfs.SystemDir$1$1 extends com.google.common.collect.AbstractIterator<org.reflections.vfs.Vfs$File> {
  final java.util.Stack<java.io.File> stack;

  final org.reflections.vfs.SystemDir$1 this$1;

  org.reflections.vfs.SystemDir$1$1(org.reflections.vfs.SystemDir$1);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/reflections/vfs/SystemDir$1;
       5: aload_0
       6: invokespecial #2                  // Method com/google/common/collect/AbstractIterator."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/Stack
      13: dup
      14: invokespecial #4                  // Method java/util/Stack."<init>":()V
      17: putfield      #5                  // Field stack:Ljava/util/Stack;
      20: aload_0
      21: getfield      #5                  // Field stack:Ljava/util/Stack;
      24: aload_0
      25: getfield      #1                  // Field this$1:Lorg/reflections/vfs/SystemDir$1;
      28: getfield      #6                  // Field org/reflections/vfs/SystemDir$1.this$0:Lorg/reflections/vfs/SystemDir;
      31: invokestatic  #7                  // Method org/reflections/vfs/SystemDir.access$000:(Lorg/reflections/vfs/SystemDir;)Ljava/io/File;
      34: invokestatic  #8                  // Method org/reflections/vfs/SystemDir.access$100:(Ljava/io/File;)Ljava/util/List;
      37: invokevirtual #9                  // Method java/util/Stack.addAll:(Ljava/util/Collection;)Z
      40: pop
      41: return

  protected org.reflections.vfs.Vfs$File computeNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stack:Ljava/util/Stack;
       4: invokevirtual #10                 // Method java/util/Stack.isEmpty:()Z
       7: ifne          62
      10: aload_0
      11: getfield      #5                  // Field stack:Ljava/util/Stack;
      14: invokevirtual #11                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      17: checkcast     #12                 // class java/io/File
      20: astore_1
      21: aload_1
      22: invokevirtual #13                 // Method java/io/File.isDirectory:()Z
      25: ifeq          43
      28: aload_0
      29: getfield      #5                  // Field stack:Ljava/util/Stack;
      32: aload_1
      33: invokestatic  #8                  // Method org/reflections/vfs/SystemDir.access$100:(Ljava/io/File;)Ljava/util/List;
      36: invokevirtual #9                  // Method java/util/Stack.addAll:(Ljava/util/Collection;)Z
      39: pop
      40: goto          59
      43: new           #14                 // class org/reflections/vfs/SystemFile
      46: dup
      47: aload_0
      48: getfield      #1                  // Field this$1:Lorg/reflections/vfs/SystemDir$1;
      51: getfield      #6                  // Field org/reflections/vfs/SystemDir$1.this$0:Lorg/reflections/vfs/SystemDir;
      54: aload_1
      55: invokespecial #15                 // Method org/reflections/vfs/SystemFile."<init>":(Lorg/reflections/vfs/SystemDir;Ljava/io/File;)V
      58: areturn
      59: goto          0
      62: aload_0
      63: invokevirtual #16                 // Method endOfData:()Ljava/lang/Object;
      66: checkcast     #17                 // class org/reflections/vfs/Vfs$File
      69: areturn

  protected java.lang.Object computeNext();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method computeNext:()Lorg/reflections/vfs/Vfs$File;
       4: areturn
}
