Compiled from "IslamicChronology.java"
public final class org.joda.time.chrono.IslamicChronology extends org.joda.time.chrono.BasicChronology {
  private static final long serialVersionUID;

  public static final int AH;

  private static final org.joda.time.DateTimeField ERA_FIELD;

  public static final org.joda.time.chrono.IslamicChronology$LeapYearPatternType LEAP_YEAR_15_BASED;

  public static final org.joda.time.chrono.IslamicChronology$LeapYearPatternType LEAP_YEAR_16_BASED;

  public static final org.joda.time.chrono.IslamicChronology$LeapYearPatternType LEAP_YEAR_INDIAN;

  public static final org.joda.time.chrono.IslamicChronology$LeapYearPatternType LEAP_YEAR_HABASH_AL_HASIB;

  private static final int MIN_YEAR;

  private static final int MAX_YEAR;

  private static final int MONTH_PAIR_LENGTH;

  private static final int LONG_MONTH_LENGTH;

  private static final int SHORT_MONTH_LENGTH;

  private static final long MILLIS_PER_MONTH_PAIR;

  private static final long MILLIS_PER_MONTH;

  private static final long MILLIS_PER_LONG_MONTH;

  private static final long MILLIS_PER_YEAR;

  private static final long MILLIS_PER_SHORT_YEAR;

  private static final long MILLIS_PER_LONG_YEAR;

  private static final long MILLIS_YEAR_1;

  private static final int CYCLE;

  private static final long MILLIS_PER_CYCLE;

  private static final java.util.concurrent.ConcurrentHashMap<org.joda.time.DateTimeZone, org.joda.time.chrono.IslamicChronology[]> cCache;

  private static final org.joda.time.chrono.IslamicChronology INSTANCE_UTC;

  private final org.joda.time.chrono.IslamicChronology$LeapYearPatternType iLeapYears;

  public static org.joda.time.chrono.IslamicChronology getInstanceUTC();
    Code:
       0: getstatic     #1                  // Field INSTANCE_UTC:Lorg/joda/time/chrono/IslamicChronology;
       3: areturn

  public static org.joda.time.chrono.IslamicChronology getInstance();
    Code:
       0: invokestatic  #2                  // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       3: getstatic     #3                  // Field LEAP_YEAR_16_BASED:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
       6: invokestatic  #4                  // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;)Lorg/joda/time/chrono/IslamicChronology;
       9: areturn

  public static org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field LEAP_YEAR_16_BASED:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
       4: invokestatic  #4                  // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;)Lorg/joda/time/chrono/IslamicChronology;
       7: areturn

  public static org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone, org.joda.time.chrono.IslamicChronology$LeapYearPatternType);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #2                  // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       7: astore_0
       8: getstatic     #5                  // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload_0
      12: invokevirtual #6                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #7                  // class "[Lorg/joda/time/chrono/IslamicChronology;"
      18: astore_3
      19: aload_3
      20: ifnonnull     49
      23: iconst_4
      24: anewarray     #8                  // class org/joda/time/chrono/IslamicChronology
      27: astore_3
      28: getstatic     #5                  // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      31: aload_0
      32: aload_3
      33: invokevirtual #9                  // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #7                  // class "[Lorg/joda/time/chrono/IslamicChronology;"
      39: astore        4
      41: aload         4
      43: ifnull        49
      46: aload         4
      48: astore_3
      49: aload_3
      50: aload_1
      51: getfield      #10                 // Field org/joda/time/chrono/IslamicChronology$LeapYearPatternType.index:B
      54: aaload
      55: astore_2
      56: aload_2
      57: ifnonnull     175
      60: aload_3
      61: dup
      62: astore        4
      64: monitorenter
      65: aload_3
      66: aload_1
      67: getfield      #10                 // Field org/joda/time/chrono/IslamicChronology$LeapYearPatternType.index:B
      70: aaload
      71: astore_2
      72: aload_2
      73: ifnonnull     161
      76: aload_0
      77: getstatic     #11                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
      80: if_acmpne     131
      83: new           #8                  // class org/joda/time/chrono/IslamicChronology
      86: dup
      87: aconst_null
      88: aconst_null
      89: aload_1
      90: invokespecial #12                 // Method "<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;)V
      93: astore_2
      94: new           #13                 // class org/joda/time/DateTime
      97: dup
      98: iconst_1
      99: iconst_1
     100: iconst_1
     101: iconst_0
     102: iconst_0
     103: iconst_0
     104: iconst_0
     105: aload_2
     106: invokespecial #14                 // Method org/joda/time/DateTime."<init>":(IIIIIIILorg/joda/time/Chronology;)V
     109: astore        5
     111: new           #8                  // class org/joda/time/chrono/IslamicChronology
     114: dup
     115: aload_2
     116: aload         5
     118: aconst_null
     119: invokestatic  #15                 // Method org/joda/time/chrono/LimitChronology.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/ReadableDateTime;Lorg/joda/time/ReadableDateTime;)Lorg/joda/time/chrono/LimitChronology;
     122: aconst_null
     123: aload_1
     124: invokespecial #12                 // Method "<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;)V
     127: astore_2
     128: goto          154
     131: getstatic     #11                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
     134: aload_1
     135: invokestatic  #4                  // Method getInstance:(Lorg/joda/time/DateTimeZone;Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;)Lorg/joda/time/chrono/IslamicChronology;
     138: astore_2
     139: new           #8                  // class org/joda/time/chrono/IslamicChronology
     142: dup
     143: aload_2
     144: aload_0
     145: invokestatic  #16                 // Method org/joda/time/chrono/ZonedChronology.getInstance:(Lorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/ZonedChronology;
     148: aconst_null
     149: aload_1
     150: invokespecial #12                 // Method "<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;)V
     153: astore_2
     154: aload_3
     155: aload_1
     156: getfield      #10                 // Field org/joda/time/chrono/IslamicChronology$LeapYearPatternType.index:B
     159: aload_2
     160: aastore
     161: aload         4
     163: monitorexit
     164: goto          175
     167: astore        6
     169: aload         4
     171: monitorexit
     172: aload         6
     174: athrow
     175: aload_2
     176: areturn
    Exception table:
       from    to  target type
          65   164   167   any
         167   172   167   any

  org.joda.time.chrono.IslamicChronology(org.joda.time.Chronology, java.lang.Object, org.joda.time.chrono.IslamicChronology$LeapYearPatternType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_4
       4: invokespecial #17                 // Method org/joda/time/chrono/BasicChronology."<init>":(Lorg/joda/time/Chronology;Ljava/lang/Object;I)V
       7: aload_0
       8: aload_3
       9: putfield      #18                 // Field iLeapYears:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      12: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getBase:()Lorg/joda/time/Chronology;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #20                 // Method getInstanceUTC:()Lorg/joda/time/chrono/IslamicChronology;
      12: goto          22
      15: aload_1
      16: invokevirtual #21                 // Method org/joda/time/Chronology.getZone:()Lorg/joda/time/DateTimeZone;
      19: invokestatic  #22                 // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/IslamicChronology;
      22: areturn

  public org.joda.time.chrono.IslamicChronology$LeapYearPatternType getLeapYearPatternType();
    Code:
       0: aload_0
       1: getfield      #18                 // Field iLeapYears:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
       4: areturn

  public org.joda.time.Chronology withUTC();
    Code:
       0: getstatic     #1                  // Field INSTANCE_UTC:Lorg/joda/time/chrono/IslamicChronology;
       3: areturn

  public org.joda.time.Chronology withZone(org.joda.time.DateTimeZone);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #2                  // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #23                 // Method getZone:()Lorg/joda/time/DateTimeZone;
      13: if_acmpne     18
      16: aload_0
      17: areturn
      18: aload_1
      19: invokestatic  #22                 // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/IslamicChronology;
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #8                  // class org/joda/time/chrono/IslamicChronology
      11: ifeq          50
      14: aload_1
      15: checkcast     #8                  // class org/joda/time/chrono/IslamicChronology
      18: astore_2
      19: aload_0
      20: invokevirtual #24                 // Method getLeapYearPatternType:()Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      23: getfield      #10                 // Field org/joda/time/chrono/IslamicChronology$LeapYearPatternType.index:B
      26: aload_2
      27: invokevirtual #24                 // Method getLeapYearPatternType:()Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      30: getfield      #10                 // Field org/joda/time/chrono/IslamicChronology$LeapYearPatternType.index:B
      33: if_icmpne     48
      36: aload_0
      37: aload_1
      38: invokespecial #25                 // Method org/joda/time/chrono/BasicChronology.equals:(Ljava/lang/Object;)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/joda/time/chrono/BasicChronology.hashCode:()I
       4: bipush        13
       6: imul
       7: aload_0
       8: invokevirtual #24                 // Method getLeapYearPatternType:()Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      11: invokevirtual #27                 // Method org/joda/time/chrono/IslamicChronology$LeapYearPatternType.hashCode:()I
      14: iadd
      15: ireturn

  int getYear(long);
    Code:
       0: lload_1
       1: ldc2_w        #28                 // long -42521587200000l
       4: lsub
       5: lstore_3
       6: lload_3
       7: ldc2_w        #30                 // long 918518400000l
      10: ldiv
      11: lstore        5
      13: lload_3
      14: ldc2_w        #30                 // long 918518400000l
      17: lrem
      18: lstore        7
      20: lload         5
      22: ldc2_w        #32                 // long 30l
      25: lmul
      26: lconst_1
      27: ladd
      28: l2i
      29: istore        9
      31: aload_0
      32: iload         9
      34: invokevirtual #34                 // Method isLeapYear:(I)Z
      37: ifeq          46
      40: ldc2_w        #35                 // long 30672000000l
      43: goto          49
      46: ldc2_w        #37                 // long 30585600000l
      49: lstore        10
      51: lload         7
      53: lload         10
      55: lcmp
      56: iflt          92
      59: lload         7
      61: lload         10
      63: lsub
      64: lstore        7
      66: aload_0
      67: iinc          9, 1
      70: iload         9
      72: invokevirtual #34                 // Method isLeapYear:(I)Z
      75: ifeq          84
      78: ldc2_w        #35                 // long 30672000000l
      81: goto          87
      84: ldc2_w        #37                 // long 30585600000l
      87: lstore        10
      89: goto          51
      92: iload         9
      94: ireturn

  long setYear(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #39                 // Method getYear:(J)I
       5: istore        4
       7: aload_0
       8: lload_1
       9: iload         4
      11: invokevirtual #40                 // Method getDayOfYear:(JI)I
      14: istore        5
      16: aload_0
      17: lload_1
      18: invokevirtual #41                 // Method getMillisOfDay:(J)I
      21: istore        6
      23: iload         5
      25: sipush        354
      28: if_icmple     42
      31: aload_0
      32: iload_3
      33: invokevirtual #34                 // Method isLeapYear:(I)Z
      36: ifne          42
      39: iinc          5, -1
      42: aload_0
      43: iload_3
      44: iconst_1
      45: iload         5
      47: invokevirtual #42                 // Method getYearMonthDayMillis:(III)J
      50: lstore_1
      51: lload_1
      52: iload         6
      54: i2l
      55: ladd
      56: lstore_1
      57: lload_1
      58: lreturn

  long getYearDifference(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #39                 // Method getYear:(J)I
       5: istore        5
       7: aload_0
       8: lload_3
       9: invokevirtual #39                 // Method getYear:(J)I
      12: istore        6
      14: lload_1
      15: aload_0
      16: iload         5
      18: invokevirtual #43                 // Method getYearMillis:(I)J
      21: lsub
      22: lstore        7
      24: lload_3
      25: aload_0
      26: iload         6
      28: invokevirtual #43                 // Method getYearMillis:(I)J
      31: lsub
      32: lstore        9
      34: iload         5
      36: iload         6
      38: isub
      39: istore        11
      41: lload         7
      43: lload         9
      45: lcmp
      46: ifge          52
      49: iinc          11, -1
      52: iload         11
      54: i2l
      55: lreturn

  long getTotalMillisByYearMonth(int, int);
    Code:
       0: iinc          2, -1
       3: iload_2
       4: iconst_2
       5: irem
       6: iconst_1
       7: if_icmpne     25
      10: iload_2
      11: iconst_2
      12: idiv
      13: istore_2
      14: iload_2
      15: i2l
      16: ldc2_w        #44                 // long 5097600000l
      19: lmul
      20: ldc2_w        #46                 // long 2592000000l
      23: ladd
      24: lreturn
      25: iload_2
      26: iconst_2
      27: idiv
      28: istore_2
      29: iload_2
      30: i2l
      31: ldc2_w        #44                 // long 5097600000l
      34: lmul
      35: lreturn

  int getDayOfMonth(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #48                 // Method getDayOfYear:(J)I
       5: iconst_1
       6: isub
       7: istore_3
       8: iload_3
       9: sipush        354
      12: if_icmpne     18
      15: bipush        30
      17: ireturn
      18: iload_3
      19: bipush        59
      21: irem
      22: bipush        30
      24: irem
      25: iconst_1
      26: iadd
      27: ireturn

  boolean isLeapYear(int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field iLeapYears:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
       4: iload_1
       5: invokevirtual #49                 // Method org/joda/time/chrono/IslamicChronology$LeapYearPatternType.isLeapYear:(I)Z
       8: ireturn

  int getDaysInYearMax();
    Code:
       0: sipush        355
       3: ireturn

  int getDaysInYear(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #34                 // Method isLeapYear:(I)Z
       5: ifeq          14
       8: sipush        355
      11: goto          17
      14: sipush        354
      17: ireturn

  int getDaysInYearMonth(int, int);
    Code:
       0: iload_2
       1: bipush        12
       3: if_icmpne     17
       6: aload_0
       7: iload_1
       8: invokevirtual #34                 // Method isLeapYear:(I)Z
      11: ifeq          17
      14: bipush        30
      16: ireturn
      17: iinc          2, -1
      20: iload_2
      21: iconst_2
      22: irem
      23: ifne          31
      26: bipush        30
      28: goto          33
      31: bipush        29
      33: ireturn

  int getDaysInMonthMax();
    Code:
       0: bipush        30
       2: ireturn

  int getDaysInMonthMax(int);
    Code:
       0: iload_1
       1: bipush        12
       3: if_icmpne     9
       6: bipush        30
       8: ireturn
       9: iinc          1, -1
      12: iload_1
      13: iconst_2
      14: irem
      15: ifne          23
      18: bipush        30
      20: goto          25
      23: bipush        29
      25: ireturn

  int getMonthOfYear(long, int);
    Code:
       0: lload_1
       1: aload_0
       2: iload_3
       3: invokevirtual #43                 // Method getYearMillis:(I)J
       6: lsub
       7: ldc2_w        #50                 // long 86400000l
      10: ldiv
      11: l2i
      12: istore        4
      14: iload         4
      16: sipush        354
      19: if_icmpne     25
      22: bipush        12
      24: ireturn
      25: iload         4
      27: iconst_2
      28: imul
      29: bipush        59
      31: idiv
      32: iconst_1
      33: iadd
      34: ireturn

  long getAverageMillisPerYear();
    Code:
       0: ldc2_w        #52                 // long 30617280288l
       3: lreturn

  long getAverageMillisPerYearDividedByTwo();
    Code:
       0: ldc2_w        #54                 // long 15308640144l
       3: lreturn

  long getAverageMillisPerMonth();
    Code:
       0: ldc2_w        #56                 // long 2551440384l
       3: lreturn

  long calculateFirstDayOfYearMillis(int);
    Code:
       0: iload_1
       1: ldc           #58                 // int 292271022
       3: if_icmple     43
       6: new           #59                 // class java/lang/ArithmeticException
       9: dup
      10: new           #60                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #62                 // String Year is too large:
      19: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_1
      23: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #65                 // String  >
      28: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #58                 // int 292271022
      33: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #67                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_1
      44: ldc           #68                 // int -292269337
      46: if_icmpge     86
      49: new           #59                 // class java/lang/ArithmeticException
      52: dup
      53: new           #60                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #69                 // String Year is too small:
      62: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: iload_1
      66: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc           #70                 // String  <
      71: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #68                 // int -292269337
      76: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #67                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: iinc          1, -1
      89: iload_1
      90: bipush        30
      92: idiv
      93: i2l
      94: lstore_2
      95: ldc2_w        #28                 // long -42521587200000l
      98: lload_2
      99: ldc2_w        #30                 // long 918518400000l
     102: lmul
     103: ladd
     104: lstore        4
     106: iload_1
     107: bipush        30
     109: irem
     110: iconst_1
     111: iadd
     112: istore        6
     114: iconst_1
     115: istore        7
     117: iload         7
     119: iload         6
     121: if_icmpge     153
     124: lload         4
     126: aload_0
     127: iload         7
     129: invokevirtual #34                 // Method isLeapYear:(I)Z
     132: ifeq          141
     135: ldc2_w        #35                 // long 30672000000l
     138: goto          144
     141: ldc2_w        #37                 // long 30585600000l
     144: ladd
     145: lstore        4
     147: iinc          7, 1
     150: goto          117
     153: lload         4
     155: lreturn

  int getMinYear();
    Code:
       0: iconst_1
       1: ireturn

  int getMaxYear();
    Code:
       0: ldc           #58                 // int 292271022
       2: ireturn

  long getApproxMillisAtEpochDividedByTwo();
    Code:
       0: ldc2_w        #71                 // long 21260793600000l
       3: lreturn

  protected void assemble(org.joda.time.chrono.AssembledChronology$Fields);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getBase:()Lorg/joda/time/Chronology;
       4: ifnonnull     44
       7: aload_0
       8: aload_1
       9: invokespecial #73                 // Method org/joda/time/chrono/BasicChronology.assemble:(Lorg/joda/time/chrono/AssembledChronology$Fields;)V
      12: aload_1
      13: getstatic     #74                 // Field ERA_FIELD:Lorg/joda/time/DateTimeField;
      16: putfield      #75                 // Field org/joda/time/chrono/AssembledChronology$Fields.era:Lorg/joda/time/DateTimeField;
      19: aload_1
      20: new           #76                 // class org/joda/time/chrono/BasicMonthOfYearDateTimeField
      23: dup
      24: aload_0
      25: bipush        12
      27: invokespecial #77                 // Method org/joda/time/chrono/BasicMonthOfYearDateTimeField."<init>":(Lorg/joda/time/chrono/BasicChronology;I)V
      30: putfield      #78                 // Field org/joda/time/chrono/AssembledChronology$Fields.monthOfYear:Lorg/joda/time/DateTimeField;
      33: aload_1
      34: aload_1
      35: getfield      #78                 // Field org/joda/time/chrono/AssembledChronology$Fields.monthOfYear:Lorg/joda/time/DateTimeField;
      38: invokevirtual #79                 // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
      41: putfield      #80                 // Field org/joda/time/chrono/AssembledChronology$Fields.months:Lorg/joda/time/DurationField;
      44: return

  static {};
    Code:
       0: new           #81                 // class org/joda/time/chrono/BasicSingleEraDateTimeField
       3: dup
       4: ldc           #82                 // String AH
       6: invokespecial #83                 // Method org/joda/time/chrono/BasicSingleEraDateTimeField."<init>":(Ljava/lang/String;)V
       9: putstatic     #74                 // Field ERA_FIELD:Lorg/joda/time/DateTimeField;
      12: new           #84                 // class org/joda/time/chrono/IslamicChronology$LeapYearPatternType
      15: dup
      16: iconst_0
      17: ldc           #85                 // int 623158436
      19: invokespecial #86                 // Method org/joda/time/chrono/IslamicChronology$LeapYearPatternType."<init>":(II)V
      22: putstatic     #87                 // Field LEAP_YEAR_15_BASED:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      25: new           #84                 // class org/joda/time/chrono/IslamicChronology$LeapYearPatternType
      28: dup
      29: iconst_1
      30: ldc           #88                 // int 623191204
      32: invokespecial #86                 // Method org/joda/time/chrono/IslamicChronology$LeapYearPatternType."<init>":(II)V
      35: putstatic     #3                  // Field LEAP_YEAR_16_BASED:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      38: new           #84                 // class org/joda/time/chrono/IslamicChronology$LeapYearPatternType
      41: dup
      42: iconst_2
      43: ldc           #89                 // int 690562340
      45: invokespecial #86                 // Method org/joda/time/chrono/IslamicChronology$LeapYearPatternType."<init>":(II)V
      48: putstatic     #90                 // Field LEAP_YEAR_INDIAN:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      51: new           #84                 // class org/joda/time/chrono/IslamicChronology$LeapYearPatternType
      54: dup
      55: iconst_3
      56: ldc           #91                 // int 153692453
      58: invokespecial #86                 // Method org/joda/time/chrono/IslamicChronology$LeapYearPatternType."<init>":(II)V
      61: putstatic     #92                 // Field LEAP_YEAR_HABASH_AL_HASIB:Lorg/joda/time/chrono/IslamicChronology$LeapYearPatternType;
      64: new           #93                 // class java/util/concurrent/ConcurrentHashMap
      67: dup
      68: invokespecial #94                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      71: putstatic     #5                  // Field cCache:Ljava/util/concurrent/ConcurrentHashMap;
      74: getstatic     #11                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
      77: invokestatic  #22                 // Method getInstance:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/chrono/IslamicChronology;
      80: putstatic     #1                  // Field INSTANCE_UTC:Lorg/joda/time/chrono/IslamicChronology;
      83: return
}
