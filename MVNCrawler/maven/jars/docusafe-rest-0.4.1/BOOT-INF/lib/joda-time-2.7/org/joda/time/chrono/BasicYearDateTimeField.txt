Compiled from "BasicYearDateTimeField.java"
class org.joda.time.chrono.BasicYearDateTimeField extends org.joda.time.field.ImpreciseDateTimeField {
  private static final long serialVersionUID;

  protected final org.joda.time.chrono.BasicChronology iChronology;

  org.joda.time.chrono.BasicYearDateTimeField(org.joda.time.chrono.BasicChronology);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/joda/time/DateTimeFieldType.year:()Lorg/joda/time/DateTimeFieldType;
       4: aload_1
       5: invokevirtual #2                  // Method org/joda/time/chrono/BasicChronology.getAverageMillisPerYear:()J
       8: invokespecial #3                  // Method org/joda/time/field/ImpreciseDateTimeField."<init>":(Lorg/joda/time/DateTimeFieldType;J)V
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      16: return

  public boolean isLenient();
    Code:
       0: iconst_0
       1: ireturn

  public int get(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: lload_1
       5: invokevirtual #5                  // Method org/joda/time/chrono/BasicChronology.getYear:(J)I
       8: ireturn

  public long add(long, int);
    Code:
       0: iload_3
       1: ifne          6
       4: lload_1
       5: lreturn
       6: aload_0
       7: lload_1
       8: invokevirtual #6                  // Method get:(J)I
      11: istore        4
      13: iload         4
      15: iload_3
      16: invokestatic  #7                  // Method org/joda/time/field/FieldUtils.safeAdd:(II)I
      19: istore        5
      21: aload_0
      22: lload_1
      23: iload         5
      25: invokevirtual #8                  // Method set:(JI)J
      28: lreturn

  public long add(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokestatic  #9                  // Method org/joda/time/field/FieldUtils.safeToInt:(J)I
       6: invokevirtual #10                 // Method add:(JI)J
       9: lreturn

  public long addWrapField(long, int);
    Code:
       0: iload_3
       1: ifne          6
       4: lload_1
       5: lreturn
       6: aload_0
       7: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      10: lload_1
      11: invokevirtual #5                  // Method org/joda/time/chrono/BasicChronology.getYear:(J)I
      14: istore        4
      16: iload         4
      18: iload_3
      19: aload_0
      20: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      23: invokevirtual #11                 // Method org/joda/time/chrono/BasicChronology.getMinYear:()I
      26: aload_0
      27: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      30: invokevirtual #12                 // Method org/joda/time/chrono/BasicChronology.getMaxYear:()I
      33: invokestatic  #13                 // Method org/joda/time/field/FieldUtils.getWrappedValue:(IIII)I
      36: istore        5
      38: aload_0
      39: lload_1
      40: iload         5
      42: invokevirtual #8                  // Method set:(JI)J
      45: lreturn

  public long set(long, int);
    Code:
       0: aload_0
       1: iload_3
       2: aload_0
       3: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       6: invokevirtual #11                 // Method org/joda/time/chrono/BasicChronology.getMinYear:()I
       9: aload_0
      10: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      13: invokevirtual #12                 // Method org/joda/time/chrono/BasicChronology.getMaxYear:()I
      16: invokestatic  #14                 // Method org/joda/time/field/FieldUtils.verifyValueBounds:(Lorg/joda/time/DateTimeField;III)V
      19: aload_0
      20: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      23: lload_1
      24: iload_3
      25: invokevirtual #15                 // Method org/joda/time/chrono/BasicChronology.setYear:(JI)J
      28: lreturn

  public long getDifferenceAsLong(long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lcmp
       3: ifge          17
       6: aload_0
       7: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      10: lload_3
      11: lload_1
      12: invokevirtual #16                 // Method org/joda/time/chrono/BasicChronology.getYearDifference:(JJ)J
      15: lneg
      16: lreturn
      17: aload_0
      18: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      21: lload_1
      22: lload_3
      23: invokevirtual #16                 // Method org/joda/time/chrono/BasicChronology.getYearDifference:(JJ)J
      26: lreturn

  public org.joda.time.DurationField getRangeDurationField();
    Code:
       0: aconst_null
       1: areturn

  public boolean isLeap(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: aload_0
       5: lload_1
       6: invokevirtual #6                  // Method get:(J)I
       9: invokevirtual #17                 // Method org/joda/time/chrono/BasicChronology.isLeapYear:(I)Z
      12: ireturn

  public int getLeapAmount(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: aload_0
       5: lload_1
       6: invokevirtual #6                  // Method get:(J)I
       9: invokevirtual #17                 // Method org/joda/time/chrono/BasicChronology.isLeapYear:(I)Z
      12: ifeq          17
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: ireturn

  public org.joda.time.DurationField getLeapDurationField();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #18                 // Method org/joda/time/chrono/BasicChronology.days:()Lorg/joda/time/DurationField;
       7: areturn

  public int getMinimumValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #11                 // Method org/joda/time/chrono/BasicChronology.getMinYear:()I
       7: ireturn

  public int getMaximumValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #12                 // Method org/joda/time/chrono/BasicChronology.getMaxYear:()I
       7: ireturn

  public long roundFloor(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: aload_0
       5: lload_1
       6: invokevirtual #6                  // Method get:(J)I
       9: invokevirtual #19                 // Method org/joda/time/chrono/BasicChronology.getYearMillis:(I)J
      12: lreturn

  public long roundCeiling(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #6                  // Method get:(J)I
       5: istore_3
       6: aload_0
       7: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      10: iload_3
      11: invokevirtual #19                 // Method org/joda/time/chrono/BasicChronology.getYearMillis:(I)J
      14: lstore        4
      16: lload_1
      17: lload         4
      19: lcmp
      20: ifeq          34
      23: aload_0
      24: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
      27: iload_3
      28: iconst_1
      29: iadd
      30: invokevirtual #19                 // Method org/joda/time/chrono/BasicChronology.getYearMillis:(I)J
      33: lstore_1
      34: lload_1
      35: lreturn

  public long remainder(long);
    Code:
       0: lload_1
       1: aload_0
       2: lload_1
       3: invokevirtual #20                 // Method roundFloor:(J)J
       6: lsub
       7: lreturn

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iChronology:Lorg/joda/time/chrono/BasicChronology;
       4: invokevirtual #21                 // Method org/joda/time/chrono/BasicChronology.year:()Lorg/joda/time/DateTimeField;
       7: areturn
}
