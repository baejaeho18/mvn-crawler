Compiled from "CompressionConfig.java"
public class org.apache.coyote.CompressionConfig {
  private int compressionLevel;

  private java.util.regex.Pattern noCompressionUserAgents;

  private java.lang.String compressibleMimeType;

  private java.lang.String[] compressibleMimeTypes;

  private int compressionMinSize;

  public org.apache.coyote.CompressionConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field compressionLevel:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
      14: aload_0
      15: ldc           #4                  // String text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
      17: putfield      #5                  // Field compressibleMimeType:Ljava/lang/String;
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field compressibleMimeTypes:[Ljava/lang/String;
      25: aload_0
      26: sipush        2048
      29: putfield      #7                  // Field compressionMinSize:I
      32: return

  public void setCompression(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String on
       3: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          17
       9: aload_0
      10: iconst_1
      11: putfield      #2                  // Field compressionLevel:I
      14: goto          73
      17: aload_1
      18: ldc           #10                 // String force
      20: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          34
      26: aload_0
      27: iconst_2
      28: putfield      #2                  // Field compressionLevel:I
      31: goto          73
      34: aload_1
      35: ldc           #11                 // String off
      37: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          51
      43: aload_0
      44: iconst_0
      45: putfield      #2                  // Field compressionLevel:I
      48: goto          73
      51: aload_0
      52: aload_1
      53: invokestatic  #12                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      56: invokevirtual #13                 // Method setCompressionMinSize:(I)V
      59: aload_0
      60: iconst_1
      61: putfield      #2                  // Field compressionLevel:I
      64: goto          73
      67: astore_2
      68: aload_0
      69: iconst_0
      70: putfield      #2                  // Field compressionLevel:I
      73: return
    Exception table:
       from    to  target type
          51    64    67   Class java/lang/Exception

  public java.lang.String getCompression();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionLevel:I
       4: tableswitch   { // 0 to 2
                     0: 32
                     1: 35
                     2: 38
               default: 41
          }
      32: ldc           #11                 // String off
      34: areturn
      35: ldc           #8                  // String on
      37: areturn
      38: ldc           #10                 // String force
      40: areturn
      41: ldc           #11                 // String off
      43: areturn

  public int getCompressionLevel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionLevel:I
       4: ireturn

  public java.lang.String getNoCompressionUserAgents();
    Code:
       0: aload_0
       1: getfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
      13: invokevirtual #15                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;
      16: areturn

  public java.util.regex.Pattern getNoCompressionUserAgentsPattern();
    Code:
       0: aload_0
       1: getfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
       4: areturn

  public void setNoCompressionUserAgents(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #16                 // Method java/lang/String.length:()I
       8: ifne          19
      11: aload_0
      12: aconst_null
      13: putfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
      16: goto          27
      19: aload_0
      20: aload_1
      21: invokestatic  #17                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      24: putfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
      27: return

  public java.lang.String getCompressibleMimeType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field compressibleMimeType:Ljava/lang/String;
       4: areturn

  public void setCompressibleMimeType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field compressibleMimeType:Ljava/lang/String;
       5: aload_0
       6: aconst_null
       7: putfield      #6                  // Field compressibleMimeTypes:[Ljava/lang/String;
      10: return

  public java.lang.String[] getCompressibleMimeTypes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field compressibleMimeTypes:[Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: new           #18                 // class java/util/ArrayList
      14: dup
      15: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      18: astore_2
      19: new           #20                 // class java/util/StringTokenizer
      22: dup
      23: aload_0
      24: getfield      #5                  // Field compressibleMimeType:Ljava/lang/String;
      27: ldc           #21                 // String ,
      29: invokespecial #22                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      32: astore_3
      33: aload_3
      34: invokevirtual #23                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      37: ifeq          69
      40: aload_3
      41: invokevirtual #24                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      44: invokevirtual #25                 // Method java/lang/String.trim:()Ljava/lang/String;
      47: astore        4
      49: aload         4
      51: invokevirtual #16                 // Method java/lang/String.length:()I
      54: ifle          66
      57: aload_2
      58: aload         4
      60: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          33
      69: aload_2
      70: aload_2
      71: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      76: anewarray     #28                 // class java/lang/String
      79: invokeinterface #29,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      84: checkcast     #30                 // class "[Ljava/lang/String;"
      87: astore_1
      88: aload_0
      89: aload_1
      90: putfield      #6                  // Field compressibleMimeTypes:[Ljava/lang/String;
      93: aload_1
      94: areturn

  public int getCompressionMinSize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field compressionMinSize:I
       4: ireturn

  public void setCompressionMinSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field compressionMinSize:I
       5: return

  public boolean useCompression(org.apache.coyote.Request, org.apache.coyote.Response);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compressionLevel:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_2
      10: invokevirtual #31                 // Method org/apache/coyote/Response.getMimeHeaders:()Lorg/apache/tomcat/util/http/MimeHeaders;
      13: astore_3
      14: aload_3
      15: ldc           #32                 // String Content-Encoding
      17: invokevirtual #33                 // Method org/apache/tomcat/util/http/MimeHeaders.getValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
      20: astore        4
      22: aload         4
      24: ifnull        51
      27: aload         4
      29: ldc           #34                 // String gzip
      31: invokevirtual #35                 // Method org/apache/tomcat/util/buf/MessageBytes.indexOf:(Ljava/lang/String;)I
      34: iconst_m1
      35: if_icmpne     49
      38: aload         4
      40: ldc           #36                 // String br
      42: invokevirtual #35                 // Method org/apache/tomcat/util/buf/MessageBytes.indexOf:(Ljava/lang/String;)I
      45: iconst_m1
      46: if_icmpeq     51
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #2                  // Field compressionLevel:I
      55: iconst_2
      56: if_icmpeq     112
      59: aload_2
      60: invokevirtual #37                 // Method org/apache/coyote/Response.getContentLengthLong:()J
      63: lstore        5
      65: lload         5
      67: ldc2_w        #38                 // long -1l
      70: lcmp
      71: ifeq          87
      74: lload         5
      76: aload_0
      77: getfield      #7                  // Field compressionMinSize:I
      80: i2l
      81: lcmp
      82: ifge          87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: invokevirtual #40                 // Method getCompressibleMimeTypes:()[Ljava/lang/String;
      91: astore        7
      93: aload         7
      95: ifnull        112
      98: aload         7
     100: aload_2
     101: invokevirtual #41                 // Method org/apache/coyote/Response.getContentType:()Ljava/lang/String;
     104: invokestatic  #42                 // Method startsWithStringArray:([Ljava/lang/String;Ljava/lang/String;)Z
     107: ifne          112
     110: iconst_0
     111: ireturn
     112: aload_3
     113: ldc           #43                 // String Vary
     115: invokevirtual #33                 // Method org/apache/tomcat/util/http/MimeHeaders.getValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
     118: astore        5
     120: aload         5
     122: ifnonnull     139
     125: aload_3
     126: ldc           #43                 // String Vary
     128: invokevirtual #44                 // Method org/apache/tomcat/util/http/MimeHeaders.setValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
     131: ldc           #45                 // String Accept-Encoding
     133: invokevirtual #46                 // Method org/apache/tomcat/util/buf/MessageBytes.setString:(Ljava/lang/String;)V
     136: goto          184
     139: aload         5
     141: ldc           #47                 // String *
     143: invokevirtual #48                 // Method org/apache/tomcat/util/buf/MessageBytes.equals:(Ljava/lang/String;)Z
     146: ifeq          152
     149: goto          184
     152: aload_3
     153: ldc           #43                 // String Vary
     155: invokevirtual #44                 // Method org/apache/tomcat/util/http/MimeHeaders.setValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
     158: new           #49                 // class java/lang/StringBuilder
     161: dup
     162: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     165: aload         5
     167: invokevirtual #51                 // Method org/apache/tomcat/util/buf/MessageBytes.getString:()Ljava/lang/String;
     170: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: ldc           #53                 // String ,Accept-Encoding
     175: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokevirtual #46                 // Method org/apache/tomcat/util/buf/MessageBytes.setString:(Ljava/lang/String;)V
     184: aload_1
     185: invokevirtual #55                 // Method org/apache/coyote/Request.getMimeHeaders:()Lorg/apache/tomcat/util/http/MimeHeaders;
     188: ldc           #56                 // String accept-encoding
     190: invokevirtual #33                 // Method org/apache/tomcat/util/http/MimeHeaders.getValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
     193: astore        6
     195: aload         6
     197: ifnull        211
     200: aload         6
     202: ldc           #34                 // String gzip
     204: invokevirtual #35                 // Method org/apache/tomcat/util/buf/MessageBytes.indexOf:(Ljava/lang/String;)I
     207: iconst_m1
     208: if_icmpne     213
     211: iconst_0
     212: ireturn
     213: aload_0
     214: getfield      #2                  // Field compressionLevel:I
     217: iconst_2
     218: if_icmpeq     270
     221: aload_0
     222: getfield      #3                  // Field noCompressionUserAgents:Ljava/util/regex/Pattern;
     225: astore        7
     227: aload         7
     229: ifnull        270
     232: aload_1
     233: invokevirtual #55                 // Method org/apache/coyote/Request.getMimeHeaders:()Lorg/apache/tomcat/util/http/MimeHeaders;
     236: ldc           #57                 // String user-agent
     238: invokevirtual #33                 // Method org/apache/tomcat/util/http/MimeHeaders.getValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
     241: astore        8
     243: aload         8
     245: ifnull        270
     248: aload         8
     250: invokevirtual #58                 // Method org/apache/tomcat/util/buf/MessageBytes.toString:()Ljava/lang/String;
     253: astore        9
     255: aload         7
     257: aload         9
     259: invokevirtual #59                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     262: invokevirtual #60                 // Method java/util/regex/Matcher.matches:()Z
     265: ifeq          270
     268: iconst_0
     269: ireturn
     270: aload_2
     271: ldc2_w        #38                 // long -1l
     274: invokevirtual #61                 // Method org/apache/coyote/Response.setContentLength:(J)V
     277: aload_3
     278: ldc           #32                 // String Content-Encoding
     280: invokevirtual #44                 // Method org/apache/tomcat/util/http/MimeHeaders.setValue:(Ljava/lang/String;)Lorg/apache/tomcat/util/buf/MessageBytes;
     283: ldc           #34                 // String gzip
     285: invokevirtual #46                 // Method org/apache/tomcat/util/buf/MessageBytes.setString:(Ljava/lang/String;)V
     288: iconst_1
     289: ireturn

  private static boolean startsWithStringArray(java.lang.String[], java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: arraylength
      11: if_icmpge     32
      14: aload_1
      15: aload_0
      16: iload_2
      17: aaload
      18: invokevirtual #62                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: iinc          2, 1
      29: goto          8
      32: iconst_0
      33: ireturn
}
