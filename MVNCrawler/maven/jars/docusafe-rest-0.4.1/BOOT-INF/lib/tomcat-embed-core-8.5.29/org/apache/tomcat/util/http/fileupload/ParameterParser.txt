Compiled from "ParameterParser.java"
public class org.apache.tomcat.util.http.fileupload.ParameterParser {
  private char[] chars;

  private int pos;

  private int len;

  private int i1;

  private int i2;

  private boolean lowerCaseNames;

  public org.apache.tomcat.util.http.fileupload.ParameterParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field chars:[C
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field pos:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field len:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field i1:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field i2:I
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field lowerCaseNames:Z
      34: return

  private boolean hasChar();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pos:I
       4: aload_0
       5: getfield      #4                  // Field len:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private java.lang.String getToken(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field i1:I
       4: aload_0
       5: getfield      #6                  // Field i2:I
       8: if_icmpge     39
      11: aload_0
      12: getfield      #2                  // Field chars:[C
      15: aload_0
      16: getfield      #5                  // Field i1:I
      19: caload
      20: invokestatic  #8                  // Method java/lang/Character.isWhitespace:(C)Z
      23: ifeq          39
      26: aload_0
      27: dup
      28: getfield      #5                  // Field i1:I
      31: iconst_1
      32: iadd
      33: putfield      #5                  // Field i1:I
      36: goto          0
      39: aload_0
      40: getfield      #6                  // Field i2:I
      43: aload_0
      44: getfield      #5                  // Field i1:I
      47: if_icmple     80
      50: aload_0
      51: getfield      #2                  // Field chars:[C
      54: aload_0
      55: getfield      #6                  // Field i2:I
      58: iconst_1
      59: isub
      60: caload
      61: invokestatic  #8                  // Method java/lang/Character.isWhitespace:(C)Z
      64: ifeq          80
      67: aload_0
      68: dup
      69: getfield      #6                  // Field i2:I
      72: iconst_1
      73: isub
      74: putfield      #6                  // Field i2:I
      77: goto          39
      80: iload_1
      81: ifeq          147
      84: aload_0
      85: getfield      #6                  // Field i2:I
      88: aload_0
      89: getfield      #5                  // Field i1:I
      92: isub
      93: iconst_2
      94: if_icmplt     147
      97: aload_0
      98: getfield      #2                  // Field chars:[C
     101: aload_0
     102: getfield      #5                  // Field i1:I
     105: caload
     106: bipush        34
     108: if_icmpne     147
     111: aload_0
     112: getfield      #2                  // Field chars:[C
     115: aload_0
     116: getfield      #6                  // Field i2:I
     119: iconst_1
     120: isub
     121: caload
     122: bipush        34
     124: if_icmpne     147
     127: aload_0
     128: dup
     129: getfield      #5                  // Field i1:I
     132: iconst_1
     133: iadd
     134: putfield      #5                  // Field i1:I
     137: aload_0
     138: dup
     139: getfield      #6                  // Field i2:I
     142: iconst_1
     143: isub
     144: putfield      #6                  // Field i2:I
     147: aconst_null
     148: astore_2
     149: aload_0
     150: getfield      #6                  // Field i2:I
     153: aload_0
     154: getfield      #5                  // Field i1:I
     157: if_icmple     185
     160: new           #9                  // class java/lang/String
     163: dup
     164: aload_0
     165: getfield      #2                  // Field chars:[C
     168: aload_0
     169: getfield      #5                  // Field i1:I
     172: aload_0
     173: getfield      #6                  // Field i2:I
     176: aload_0
     177: getfield      #5                  // Field i1:I
     180: isub
     181: invokespecial #10                 // Method java/lang/String."<init>":([CII)V
     184: astore_2
     185: aload_2
     186: areturn

  private boolean isOneOf(char, char[]);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: astore        4
       5: aload         4
       7: arraylength
       8: istore        5
      10: iconst_0
      11: istore        6
      13: iload         6
      15: iload         5
      17: if_icmpge     44
      20: aload         4
      22: iload         6
      24: caload
      25: istore        7
      27: iload_1
      28: iload         7
      30: if_icmpne     38
      33: iconst_1
      34: istore_3
      35: goto          44
      38: iinc          6, 1
      41: goto          13
      44: iload_3
      45: ireturn

  private java.lang.String parseToken(char[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field pos:I
       5: putfield      #5                  // Field i1:I
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field pos:I
      13: putfield      #6                  // Field i2:I
      16: aload_0
      17: invokespecial #11                 // Method hasChar:()Z
      20: ifeq          68
      23: aload_0
      24: getfield      #2                  // Field chars:[C
      27: aload_0
      28: getfield      #3                  // Field pos:I
      31: caload
      32: istore_2
      33: aload_0
      34: iload_2
      35: aload_1
      36: invokespecial #12                 // Method isOneOf:(C[C)Z
      39: ifeq          45
      42: goto          68
      45: aload_0
      46: dup
      47: getfield      #6                  // Field i2:I
      50: iconst_1
      51: iadd
      52: putfield      #6                  // Field i2:I
      55: aload_0
      56: dup
      57: getfield      #3                  // Field pos:I
      60: iconst_1
      61: iadd
      62: putfield      #3                  // Field pos:I
      65: goto          16
      68: aload_0
      69: iconst_0
      70: invokespecial #13                 // Method getToken:(Z)Ljava/lang/String;
      73: areturn

  private java.lang.String parseQuotedToken(char[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field pos:I
       5: putfield      #5                  // Field i1:I
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field pos:I
      13: putfield      #6                  // Field i2:I
      16: iconst_0
      17: istore_3
      18: iconst_0
      19: istore        4
      21: aload_0
      22: invokespecial #11                 // Method hasChar:()Z
      25: ifeq          116
      28: aload_0
      29: getfield      #2                  // Field chars:[C
      32: aload_0
      33: getfield      #3                  // Field pos:I
      36: caload
      37: istore_2
      38: iload_3
      39: ifne          54
      42: aload_0
      43: iload_2
      44: aload_1
      45: invokespecial #12                 // Method isOneOf:(C[C)Z
      48: ifeq          54
      51: goto          116
      54: iload         4
      56: ifne          75
      59: iload_2
      60: bipush        34
      62: if_icmpne     75
      65: iload_3
      66: ifne          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: istore_3
      75: iload         4
      77: ifne          90
      80: iload_2
      81: bipush        92
      83: if_icmpne     90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: istore        4
      93: aload_0
      94: dup
      95: getfield      #6                  // Field i2:I
      98: iconst_1
      99: iadd
     100: putfield      #6                  // Field i2:I
     103: aload_0
     104: dup
     105: getfield      #3                  // Field pos:I
     108: iconst_1
     109: iadd
     110: putfield      #3                  // Field pos:I
     113: goto          21
     116: aload_0
     117: iconst_1
     118: invokespecial #13                 // Method getToken:(Z)Ljava/lang/String;
     121: areturn

  public boolean isLowerCaseNames();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lowerCaseNames:Z
       4: ireturn

  public void setLowerCaseNames(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field lowerCaseNames:Z
       5: return

  public java.util.Map<java.lang.String, java.lang.String> parse(java.lang.String, char[]);
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          17
       9: new           #14                 // class java/util/HashMap
      12: dup
      13: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      16: areturn
      17: aload_2
      18: iconst_0
      19: caload
      20: istore_3
      21: aload_1
      22: ifnull        90
      25: aload_1
      26: invokevirtual #16                 // Method java/lang/String.length:()I
      29: istore        4
      31: aload_2
      32: astore        5
      34: aload         5
      36: arraylength
      37: istore        6
      39: iconst_0
      40: istore        7
      42: iload         7
      44: iload         6
      46: if_icmpge     90
      49: aload         5
      51: iload         7
      53: caload
      54: istore        8
      56: aload_1
      57: iload         8
      59: invokevirtual #17                 // Method java/lang/String.indexOf:(I)I
      62: istore        9
      64: iload         9
      66: iconst_m1
      67: if_icmpeq     84
      70: iload         9
      72: iload         4
      74: if_icmpge     84
      77: iload         9
      79: istore        4
      81: iload         8
      83: istore_3
      84: iinc          7, 1
      87: goto          42
      90: aload_0
      91: aload_1
      92: iload_3
      93: invokevirtual #18                 // Method parse:(Ljava/lang/String;C)Ljava/util/Map;
      96: areturn

  public java.util.Map<java.lang.String, java.lang.String> parse(java.lang.String, char);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #14                 // class java/util/HashMap
       7: dup
       8: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      11: areturn
      12: aload_0
      13: aload_1
      14: invokevirtual #19                 // Method java/lang/String.toCharArray:()[C
      17: iload_2
      18: invokevirtual #20                 // Method parse:([CC)Ljava/util/Map;
      21: areturn

  public java.util.Map<java.lang.String, java.lang.String> parse(char[], char);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #14                 // class java/util/HashMap
       7: dup
       8: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      11: areturn
      12: aload_0
      13: aload_1
      14: iconst_0
      15: aload_1
      16: arraylength
      17: iload_2
      18: invokevirtual #21                 // Method parse:([CIIC)Ljava/util/Map;
      21: areturn

  public java.util.Map<java.lang.String, java.lang.String> parse(char[], int, int, char);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #14                 // class java/util/HashMap
       7: dup
       8: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      11: areturn
      12: new           #14                 // class java/util/HashMap
      15: dup
      16: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      19: astore        5
      21: aload_0
      22: aload_1
      23: putfield      #2                  // Field chars:[C
      26: aload_0
      27: iload_2
      28: putfield      #3                  // Field pos:I
      31: aload_0
      32: iload_3
      33: putfield      #4                  // Field len:I
      36: aconst_null
      37: astore        6
      39: aconst_null
      40: astore        7
      42: aload_0
      43: invokespecial #11                 // Method hasChar:()Z
      46: ifeq          201
      49: aload_0
      50: iconst_2
      51: newarray       char
      53: dup
      54: iconst_0
      55: bipush        61
      57: castore
      58: dup
      59: iconst_1
      60: iload         4
      62: castore
      63: invokespecial #22                 // Method parseToken:([C)Ljava/lang/String;
      66: astore        6
      68: aconst_null
      69: astore        7
      71: aload_0
      72: invokespecial #11                 // Method hasChar:()Z
      75: ifeq          130
      78: aload_1
      79: aload_0
      80: getfield      #3                  // Field pos:I
      83: caload
      84: bipush        61
      86: if_icmpne     130
      89: aload_0
      90: dup
      91: getfield      #3                  // Field pos:I
      94: iconst_1
      95: iadd
      96: putfield      #3                  // Field pos:I
      99: aload_0
     100: iconst_1
     101: newarray       char
     103: dup
     104: iconst_0
     105: iload         4
     107: castore
     108: invokespecial #23                 // Method parseQuotedToken:([C)Ljava/lang/String;
     111: astore        7
     113: aload         7
     115: ifnull        130
     118: aload         7
     120: invokestatic  #24                 // Method org/apache/tomcat/util/http/fileupload/util/mime/MimeUtility.decodeText:(Ljava/lang/String;)Ljava/lang/String;
     123: astore        7
     125: goto          130
     128: astore        8
     130: aload_0
     131: invokespecial #11                 // Method hasChar:()Z
     134: ifeq          158
     137: aload_1
     138: aload_0
     139: getfield      #3                  // Field pos:I
     142: caload
     143: iload         4
     145: if_icmpne     158
     148: aload_0
     149: dup
     150: getfield      #3                  // Field pos:I
     153: iconst_1
     154: iadd
     155: putfield      #3                  // Field pos:I
     158: aload         6
     160: ifnull        42
     163: aload         6
     165: invokevirtual #16                 // Method java/lang/String.length:()I
     168: ifle          42
     171: aload_0
     172: getfield      #7                  // Field lowerCaseNames:Z
     175: ifeq          188
     178: aload         6
     180: getstatic     #26                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     183: invokevirtual #27                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     186: astore        6
     188: aload         5
     190: aload         6
     192: aload         7
     194: invokevirtual #28                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     197: pop
     198: goto          42
     201: aload         5
     203: areturn
    Exception table:
       from    to  target type
         118   125   128   Class java/io/UnsupportedEncodingException
}
