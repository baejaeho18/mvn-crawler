Compiled from "SemaphoreValve.java"
public class org.apache.catalina.valves.SemaphoreValve extends org.apache.catalina.valves.ValveBase {
  protected java.util.concurrent.Semaphore semaphore;

  protected int concurrency;

  protected boolean fairness;

  protected boolean block;

  protected boolean interruptible;

  public org.apache.catalina.valves.SemaphoreValve();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method org/apache/catalina/valves/ValveBase."<init>":(Z)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      10: aload_0
      11: bipush        10
      13: putfield      #3                  // Field concurrency:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field fairness:Z
      21: aload_0
      22: iconst_1
      23: putfield      #5                  // Field block:Z
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field interruptible:Z
      31: return

  public int getConcurrency();
    Code:
       0: aload_0
       1: getfield      #3                  // Field concurrency:I
       4: ireturn

  public void setConcurrency(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field concurrency:I
       5: return

  public boolean getFairness();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fairness:Z
       4: ireturn

  public void setFairness(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field fairness:Z
       5: return

  public boolean getBlock();
    Code:
       0: aload_0
       1: getfield      #5                  // Field block:Z
       4: ireturn

  public void setBlock(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field block:Z
       5: return

  public boolean getInterruptible();
    Code:
       0: aload_0
       1: getfield      #6                  // Field interruptible:Z
       4: ireturn

  public void setInterruptible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field interruptible:Z
       5: return

  protected synchronized void startInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: new           #7                  // class java/util/concurrent/Semaphore
       4: dup
       5: aload_0
       6: getfield      #3                  // Field concurrency:I
       9: aload_0
      10: getfield      #4                  // Field fairness:Z
      13: invokespecial #8                  // Method java/util/concurrent/Semaphore."<init>":(IZ)V
      16: putfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      19: aload_0
      20: getstatic     #9                  // Field org/apache/catalina/LifecycleState.STARTING:Lorg/apache/catalina/LifecycleState;
      23: invokevirtual #10                 // Method setState:(Lorg/apache/catalina/LifecycleState;)V
      26: return

  protected synchronized void stopInternal() throws org.apache.catalina.LifecycleException;
    Code:
       0: aload_0
       1: getstatic     #11                 // Field org/apache/catalina/LifecycleState.STOPPING:Lorg/apache/catalina/LifecycleState;
       4: invokevirtual #10                 // Method setState:(Lorg/apache/catalina/LifecycleState;)V
       7: aload_0
       8: aconst_null
       9: putfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      12: return

  public void invoke(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method controlConcurrency:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)Z
       6: ifeq          141
       9: iconst_1
      10: istore_3
      11: aload_0
      12: getfield      #5                  // Field block:Z
      15: ifeq          67
      18: aload_0
      19: getfield      #6                  // Field interruptible:Z
      22: ifeq          57
      25: aload_0
      26: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      29: invokevirtual #13                 // Method java/util/concurrent/Semaphore.acquire:()V
      32: goto          97
      35: astore        4
      37: iconst_0
      38: istore_3
      39: aload_0
      40: aload_1
      41: aload_2
      42: invokevirtual #15                 // Method permitDenied:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
      45: iload_3
      46: ifeq          56
      49: aload_0
      50: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      53: invokevirtual #16                 // Method java/util/concurrent/Semaphore.release:()V
      56: return
      57: aload_0
      58: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      61: invokevirtual #17                 // Method java/util/concurrent/Semaphore.acquireUninterruptibly:()V
      64: goto          97
      67: aload_0
      68: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      71: invokevirtual #18                 // Method java/util/concurrent/Semaphore.tryAcquire:()Z
      74: ifne          97
      77: iconst_0
      78: istore_3
      79: aload_0
      80: aload_1
      81: aload_2
      82: invokevirtual #15                 // Method permitDenied:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
      85: iload_3
      86: ifeq          96
      89: aload_0
      90: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
      93: invokevirtual #16                 // Method java/util/concurrent/Semaphore.release:()V
      96: return
      97: aload_0
      98: invokevirtual #19                 // Method getNext:()Lorg/apache/catalina/Valve;
     101: aload_1
     102: aload_2
     103: invokeinterface #20,  3           // InterfaceMethod org/apache/catalina/Valve.invoke:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
     108: iload_3
     109: ifeq          138
     112: aload_0
     113: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
     116: invokevirtual #16                 // Method java/util/concurrent/Semaphore.release:()V
     119: goto          138
     122: astore        5
     124: iload_3
     125: ifeq          135
     128: aload_0
     129: getfield      #2                  // Field semaphore:Ljava/util/concurrent/Semaphore;
     132: invokevirtual #16                 // Method java/util/concurrent/Semaphore.release:()V
     135: aload         5
     137: athrow
     138: goto          152
     141: aload_0
     142: invokevirtual #19                 // Method getNext:()Lorg/apache/catalina/Valve;
     145: aload_1
     146: aload_2
     147: invokeinterface #20,  3           // InterfaceMethod org/apache/catalina/Valve.invoke:(Lorg/apache/catalina/connector/Request;Lorg/apache/catalina/connector/Response;)V
     152: return
    Exception table:
       from    to  target type
          25    32    35   Class java/lang/InterruptedException
          11    45   122   any
          57    85   122   any
          97   108   122   any
         122   124   122   any

  public boolean controlConcurrency(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response);
    Code:
       0: iconst_1
       1: ireturn

  public void permitDenied(org.apache.catalina.connector.Request, org.apache.catalina.connector.Response) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: return
}
