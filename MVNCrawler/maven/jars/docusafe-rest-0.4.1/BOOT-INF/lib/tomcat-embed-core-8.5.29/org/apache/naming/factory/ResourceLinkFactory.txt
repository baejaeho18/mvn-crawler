Compiled from "ResourceLinkFactory.java"
public class org.apache.naming.factory.ResourceLinkFactory implements javax.naming.spi.ObjectFactory {
  private static final org.apache.naming.StringManager sm;

  private static javax.naming.Context globalContext;

  private static java.util.Map<java.lang.ClassLoader, java.util.Map<java.lang.String, java.lang.String>> globalResourceRegistrations;

  public org.apache.naming.factory.ResourceLinkFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void setGlobalContext(javax.naming.Context);
    Code:
       0: invokestatic  #2                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        43
       8: aload_1
       9: new           #3                  // class java/lang/RuntimePermission
      12: dup
      13: new           #4                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc_w         #6                  // class org/apache/naming/factory/ResourceLinkFactory
      23: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
      26: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #9                  // String .setGlobalContext
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #11                 // Method java/lang/RuntimePermission."<init>":(Ljava/lang/String;)V
      40: invokevirtual #12                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      43: aload_0
      44: putstatic     #13                 // Field globalContext:Ljavax/naming/Context;
      47: return

  public static void registerGlobalResourceAccess(javax.naming.Context, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method validateGlobalContext:(Ljavax/naming/Context;)V
       4: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #16                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      10: astore_3
      11: getstatic     #17                 // Field globalResourceRegistrations:Ljava/util/Map;
      14: aload_3
      15: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #19                 // class java/util/Map
      23: astore        4
      25: aload         4
      27: ifnonnull     51
      30: new           #20                 // class java/util/HashMap
      33: dup
      34: invokespecial #21                 // Method java/util/HashMap."<init>":()V
      37: astore        4
      39: getstatic     #17                 // Field globalResourceRegistrations:Ljava/util/Map;
      42: aload_3
      43: aload         4
      45: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload         4
      53: aload_1
      54: aload_2
      55: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: return

  public static void deregisterGlobalResourceAccess(javax.naming.Context, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method validateGlobalContext:(Ljavax/naming/Context;)V
       4: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #16                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      10: astore_2
      11: getstatic     #17                 // Field globalResourceRegistrations:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #19                 // class java/util/Map
      23: astore_3
      24: aload_3
      25: ifnull        36
      28: aload_3
      29: aload_1
      30: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: return

  public static void deregisterGlobalResourceAccess(javax.naming.Context);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method validateGlobalContext:(Ljavax/naming/Context;)V
       4: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       7: invokevirtual #16                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      10: astore_1
      11: getstatic     #17                 // Field globalResourceRegistrations:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #23,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  private static void validateGlobalContext(javax.naming.Context);
    Code:
       0: getstatic     #13                 // Field globalContext:Ljavax/naming/Context;
       3: ifnull        23
       6: getstatic     #13                 // Field globalContext:Ljavax/naming/Context;
       9: aload_0
      10: if_acmpeq     23
      13: new           #24                 // class java/lang/SecurityException
      16: dup
      17: ldc           #25                 // String Caller provided invalid global context
      19: invokespecial #26                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  private static boolean validateGlobalResourceAccess(java.lang.String);
    Code:
       0: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #16                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_1
       7: aload_1
       8: ifnull        48
      11: getstatic     #17                 // Field globalResourceRegistrations:Ljava/util/Map;
      14: aload_1
      15: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #19                 // class java/util/Map
      23: astore_2
      24: aload_2
      25: ifnull        40
      28: aload_2
      29: aload_0
      30: invokeinterface #27,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: aload_1
      41: invokevirtual #28                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
      44: astore_1
      45: goto          7
      48: iconst_0
      49: ireturn

  public java.lang.Object getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>) throws javax.naming.NamingException;
    Code:
       0: aload_1
       1: instanceof    #29                 // class org/apache/naming/ResourceLinkRef
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: checkcast     #30                 // class javax/naming/Reference
      13: astore        5
      15: aconst_null
      16: astore        6
      18: aload         5
      20: ldc           #31                 // String globalName
      22: invokevirtual #32                 // Method javax/naming/Reference.get:(Ljava/lang/String;)Ljavax/naming/RefAddr;
      25: astore        7
      27: aload         7
      29: ifnull        224
      32: aload         7
      34: invokevirtual #33                 // Method javax/naming/RefAddr.getContent:()Ljava/lang/Object;
      37: invokevirtual #34                 // Method java/lang/Object.toString:()Ljava/lang/String;
      40: astore        6
      42: aload         6
      44: invokestatic  #35                 // Method validateGlobalResourceAccess:(Ljava/lang/String;)Z
      47: ifne          52
      50: aconst_null
      51: areturn
      52: aconst_null
      53: astore        8
      55: getstatic     #13                 // Field globalContext:Ljavax/naming/Context;
      58: aload         6
      60: invokeinterface #36,  2           // InterfaceMethod javax/naming/Context.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      65: astore        8
      67: aload         5
      69: invokevirtual #37                 // Method javax/naming/Reference.getClassName:()Ljava/lang/String;
      72: astore        9
      74: aload         9
      76: ifnonnull     108
      79: new           #38                 // class java/lang/IllegalArgumentException
      82: dup
      83: getstatic     #39                 // Field sm:Lorg/apache/naming/StringManager;
      86: ldc           #40                 // String resourceLinkFactory.nullType
      88: iconst_2
      89: anewarray     #41                 // class java/lang/Object
      92: dup
      93: iconst_0
      94: aload_2
      95: aastore
      96: dup
      97: iconst_1
      98: aload         6
     100: aastore
     101: invokevirtual #42                 // Method org/apache/naming/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     104: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload         9
     110: iconst_1
     111: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     114: invokevirtual #16                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
     117: invokestatic  #44                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
     120: astore        10
     122: aload         10
     124: aload         8
     126: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     129: invokevirtual #46                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     132: ifne          180
     135: new           #38                 // class java/lang/IllegalArgumentException
     138: dup
     139: getstatic     #39                 // Field sm:Lorg/apache/naming/StringManager;
     142: ldc           #47                 // String resourceLinkFactory.wrongType
     144: iconst_4
     145: anewarray     #41                 // class java/lang/Object
     148: dup
     149: iconst_0
     150: aload_2
     151: aastore
     152: dup
     153: iconst_1
     154: aload         6
     156: aastore
     157: dup
     158: iconst_2
     159: aload         9
     161: aastore
     162: dup
     163: iconst_3
     164: aload         8
     166: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     169: invokevirtual #7                  // Method java/lang/Class.getName:()Ljava/lang/String;
     172: aastore
     173: invokevirtual #42                 // Method org/apache/naming/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     176: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: goto          221
     183: astore        10
     185: new           #38                 // class java/lang/IllegalArgumentException
     188: dup
     189: getstatic     #39                 // Field sm:Lorg/apache/naming/StringManager;
     192: ldc           #49                 // String resourceLinkFactory.unknownType
     194: iconst_3
     195: anewarray     #41                 // class java/lang/Object
     198: dup
     199: iconst_0
     200: aload_2
     201: aastore
     202: dup
     203: iconst_1
     204: aload         6
     206: aastore
     207: dup
     208: iconst_2
     209: aload         9
     211: aastore
     212: invokevirtual #42                 // Method org/apache/naming/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     215: aload         10
     217: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     220: athrow
     221: aload         8
     223: areturn
     224: aconst_null
     225: areturn
    Exception table:
       from    to  target type
         108   180   183   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: ldc_w         #6                  // class org/apache/naming/factory/ResourceLinkFactory
       3: invokestatic  #51                 // Method org/apache/naming/StringManager.getManager:(Ljava/lang/Class;)Lorg/apache/naming/StringManager;
       6: putstatic     #39                 // Field sm:Lorg/apache/naming/StringManager;
       9: aconst_null
      10: putstatic     #13                 // Field globalContext:Ljavax/naming/Context;
      13: new           #52                 // class java/util/concurrent/ConcurrentHashMap
      16: dup
      17: invokespecial #53                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      20: putstatic     #17                 // Field globalResourceRegistrations:Ljava/util/Map;
      23: return
}
