Compiled from "Stream.java"
class org.apache.coyote.http2.Stream$StreamOutputBuffer implements org.apache.coyote.http11.HttpOutputBuffer {
  private final java.nio.ByteBuffer buffer;

  private volatile long written;

  private volatile boolean closed;

  private volatile boolean endOfStreamSent;

  private volatile boolean writeInterest;

  final org.apache.coyote.http2.Stream this$0;

  org.apache.coyote.http2.Stream$StreamOutputBuffer(org.apache.coyote.http2.Stream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: sipush        8192
      13: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      16: putfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      19: aload_0
      20: lconst_0
      21: putfield      #6                  // Field written:J
      24: aload_0
      25: iconst_0
      26: putfield      #7                  // Field closed:Z
      29: aload_0
      30: iconst_0
      31: putfield      #1                  // Field endOfStreamSent:Z
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field writeInterest:Z
      39: return

  public synchronized int doWrite(org.apache.tomcat.util.buf.ByteChunk) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Z
       4: ifeq          47
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #10                 // Method org/apache/coyote/http2/Stream.access$200:()Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #11                 // String stream.closed
      16: iconst_2
      17: anewarray     #12                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      26: invokevirtual #13                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_0
      33: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      36: invokevirtual #14                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      39: aastore
      40: invokevirtual #15                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_1
      48: invokevirtual #17                 // Method org/apache/tomcat/util/buf/ByteChunk.getLength:()I
      51: istore_2
      52: iconst_0
      53: istore_3
      54: iload_2
      55: ifle          147
      58: aload_0
      59: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      62: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      65: iload_2
      66: invokestatic  #19                 // Method java/lang/Math.min:(II)I
      69: istore        4
      71: aload_0
      72: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      75: aload_1
      76: invokevirtual #20                 // Method org/apache/tomcat/util/buf/ByteChunk.getBytes:()[B
      79: aload_1
      80: invokevirtual #21                 // Method org/apache/tomcat/util/buf/ByteChunk.getOffset:()I
      83: iload_3
      84: iadd
      85: iload         4
      87: invokevirtual #22                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      90: pop
      91: iload_3
      92: iload         4
      94: iadd
      95: istore_3
      96: iload_2
      97: iload         4
      99: isub
     100: istore_2
     101: iload_2
     102: ifle          144
     105: aload_0
     106: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     109: invokevirtual #23                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     112: ifne          144
     115: aload_0
     116: iconst_1
     117: aload_0
     118: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     121: invokestatic  #24                 // Method org/apache/coyote/http2/Stream.access$300:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     124: invokevirtual #25                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
     127: ifnonnull     134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: invokespecial #26                 // Method flush:(ZZ)Z
     138: ifeq          144
     141: goto          147
     144: goto          54
     147: aload_0
     148: dup
     149: getfield      #6                  // Field written:J
     152: iload_3
     153: i2l
     154: ladd
     155: putfield      #6                  // Field written:J
     158: iload_3
     159: ireturn

  public synchronized int doWrite(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Z
       4: ifeq          47
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: invokestatic  #10                 // Method org/apache/coyote/http2/Stream.access$200:()Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #11                 // String stream.closed
      16: iconst_2
      17: anewarray     #12                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      26: invokevirtual #13                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_1
      32: aload_0
      33: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      36: invokevirtual #14                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      39: aastore
      40: invokevirtual #15                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      51: invokestatic  #24                 // Method org/apache/coyote/http2/Stream.access$300:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
      54: invokevirtual #27                 // Method org/apache/coyote/Response.isCommitted:()Z
      57: ifne          70
      60: aload_0
      61: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      64: invokestatic  #24                 // Method org/apache/coyote/http2/Stream.access$300:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
      67: invokevirtual #28                 // Method org/apache/coyote/Response.sendHeaders:()V
      70: aload_1
      71: invokevirtual #29                 // Method java/nio/ByteBuffer.limit:()I
      74: istore_2
      75: iconst_0
      76: istore_3
      77: aload_1
      78: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      81: ifle          181
      84: aload_0
      85: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      88: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      91: aload_1
      92: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
      95: invokestatic  #19                 // Method java/lang/Math.min:(II)I
      98: istore        4
     100: aload_1
     101: aload_1
     102: invokevirtual #30                 // Method java/nio/ByteBuffer.position:()I
     105: iload         4
     107: iadd
     108: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     111: pop
     112: aload_0
     113: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     116: aload_1
     117: invokevirtual #32                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     120: pop
     121: aload_1
     122: iload_2
     123: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     126: pop
     127: iload_3
     128: iload         4
     130: iadd
     131: istore_3
     132: aload_1
     133: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     136: ifle          178
     139: aload_0
     140: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     143: invokevirtual #23                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     146: ifne          178
     149: aload_0
     150: iconst_1
     151: aload_0
     152: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     155: invokestatic  #24                 // Method org/apache/coyote/http2/Stream.access$300:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/Response;
     158: invokevirtual #25                 // Method org/apache/coyote/Response.getWriteListener:()Ljavax/servlet/WriteListener;
     161: ifnonnull     168
     164: iconst_1
     165: goto          169
     168: iconst_0
     169: invokespecial #26                 // Method flush:(ZZ)Z
     172: ifeq          178
     175: goto          181
     178: goto          77
     181: aload_0
     182: dup
     183: getfield      #6                  // Field written:J
     186: iload_3
     187: i2l
     188: ladd
     189: putfield      #6                  // Field written:J
     192: iload_3
     193: ireturn

  public synchronized boolean flush(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: invokespecial #26                 // Method flush:(ZZ)Z
       6: ireturn

  private synchronized boolean flush(boolean, boolean) throws java.io.IOException;
    Code:
       0: invokestatic  #33                 // Method org/apache/coyote/http2/Stream.access$400:()Lorg/apache/juli/logging/Log;
       3: invokeinterface #34,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
       8: ifeq          81
      11: invokestatic  #33                 // Method org/apache/coyote/http2/Stream.access$400:()Lorg/apache/juli/logging/Log;
      14: invokestatic  #10                 // Method org/apache/coyote/http2/Stream.access$200:()Lorg/apache/tomcat/util/res/StringManager;
      17: ldc           #35                 // String stream.outputBuffer.flush.debug
      19: iconst_5
      20: anewarray     #12                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      29: invokevirtual #13                 // Method org/apache/coyote/http2/Stream.getConnectionId:()Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      39: invokevirtual #14                 // Method org/apache/coyote/http2/Stream.getIdentifier:()Ljava/lang/Integer;
      42: aastore
      43: dup
      44: iconst_2
      45: aload_0
      46: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      49: invokevirtual #30                 // Method java/nio/ByteBuffer.position:()I
      52: invokestatic  #36                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      55: aastore
      56: dup
      57: iconst_3
      58: iload_1
      59: invokestatic  #37                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      62: aastore
      63: dup
      64: iconst_4
      65: aload_0
      66: getfield      #7                  // Field closed:Z
      69: invokestatic  #37                 // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      72: aastore
      73: invokevirtual #15                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokeinterface #38,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      81: aload_0
      82: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
      85: invokevirtual #30                 // Method java/nio/ByteBuffer.position:()I
      88: ifne          127
      91: aload_0
      92: getfield      #7                  // Field closed:Z
      95: ifeq          125
      98: aload_0
      99: getfield      #1                  // Field endOfStreamSent:Z
     102: ifne          125
     105: aload_0
     106: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     109: invokestatic  #39                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     112: aload_0
     113: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     116: aload_0
     117: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     120: iconst_0
     121: iconst_1
     122: invokevirtual #40                 // Method org/apache/coyote/http2/Http2UpgradeHandler.writeBody:(Lorg/apache/coyote/http2/Stream;Ljava/nio/ByteBuffer;IZ)V
     125: iconst_0
     126: ireturn
     127: aload_0
     128: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     131: invokevirtual #41                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     134: pop
     135: aload_0
     136: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     139: invokevirtual #18                 // Method java/nio/ByteBuffer.remaining:()I
     142: istore_3
     143: iload_3
     144: ifle          256
     147: aload_0
     148: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     151: iload_3
     152: iload_2
     153: invokestatic  #42                 // Method org/apache/coyote/http2/Stream.access$600:(Lorg/apache/coyote/http2/Stream;IZ)I
     156: istore        4
     158: iload         4
     160: ifne          173
     163: aload_0
     164: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     167: invokevirtual #43                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     170: pop
     171: iconst_1
     172: ireturn
     173: iload         4
     175: ifle          253
     178: aload_0
     179: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     182: invokestatic  #39                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     185: aload_0
     186: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     189: iload         4
     191: invokevirtual #44                 // Method org/apache/coyote/http2/Http2UpgradeHandler.reserveWindowSize:(Lorg/apache/coyote/http2/Stream;I)I
     194: istore        5
     196: aload_0
     197: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     200: invokestatic  #39                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
     203: aload_0
     204: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
     207: aload_0
     208: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     211: iload         5
     213: iload_1
     214: ifne          234
     217: aload_0
     218: getfield      #7                  // Field closed:Z
     221: ifeq          234
     224: iload_3
     225: iload         5
     227: if_icmpne     234
     230: iconst_1
     231: goto          235
     234: iconst_0
     235: invokevirtual #40                 // Method org/apache/coyote/http2/Http2UpgradeHandler.writeBody:(Lorg/apache/coyote/http2/Stream;Ljava/nio/ByteBuffer;IZ)V
     238: iload         4
     240: iload         5
     242: isub
     243: istore        4
     245: iload_3
     246: iload         5
     248: isub
     249: istore_3
     250: goto          173
     253: goto          143
     256: aload_0
     257: getfield      #5                  // Field buffer:Ljava/nio/ByteBuffer;
     260: invokevirtual #45                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     263: pop
     264: iconst_0
     265: ireturn

  synchronized boolean isReady();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
       4: invokevirtual #46                 // Method org/apache/coyote/http2/Stream.getWindowSize:()J
       7: lconst_0
       8: lcmp
       9: ifle          29
      12: aload_0
      13: getfield      #2                  // Field this$0:Lorg/apache/coyote/http2/Stream;
      16: invokestatic  #39                 // Method org/apache/coyote/http2/Stream.access$500:(Lorg/apache/coyote/http2/Stream;)Lorg/apache/coyote/http2/Http2UpgradeHandler;
      19: invokevirtual #47                 // Method org/apache/coyote/http2/Http2UpgradeHandler.getWindowSize:()J
      22: lconst_0
      23: lcmp
      24: ifle          29
      27: iconst_1
      28: ireturn
      29: aload_0
      30: iconst_1
      31: putfield      #8                  // Field writeInterest:Z
      34: iconst_0
      35: ireturn

  synchronized boolean isRegisteredForWrite();
    Code:
       0: aload_0
       1: getfield      #8                  // Field writeInterest:Z
       4: ifeq          14
       7: aload_0
       8: iconst_0
       9: putfield      #8                  // Field writeInterest:Z
      12: iconst_1
      13: ireturn
      14: iconst_0
      15: ireturn

  public long getBytesWritten();
    Code:
       0: aload_0
       1: getfield      #6                  // Field written:J
       4: lreturn

  public final void end() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field closed:Z
       5: aload_0
       6: iconst_1
       7: invokevirtual #48                 // Method flush:(Z)Z
      10: pop
      11: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field closed:Z
       4: ireturn

  public boolean hasNoBody();
    Code:
       0: aload_0
       1: getfield      #6                  // Field written:J
       4: lconst_0
       5: lcmp
       6: ifne          20
       9: aload_0
      10: getfield      #7                  // Field closed:Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #48                 // Method flush:(Z)Z
       5: pop
       6: return

  static boolean access$102(org.apache.coyote.http2.Stream$StreamOutputBuffer, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field endOfStreamSent:Z
       6: ireturn
}
