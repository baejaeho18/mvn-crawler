Compiled from "RemoteIpFilter.java"
public class org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest extends javax.servlet.http.HttpServletRequestWrapper {
  static final java.lang.ThreadLocal<java.text.SimpleDateFormat[]> threadLocalDateFormats;

  protected final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  protected int localPort;

  protected java.lang.String remoteAddr;

  protected java.lang.String remoteHost;

  protected java.lang.String scheme;

  protected boolean secure;

  protected int serverPort;

  public org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javax/servlet/http/HttpServletRequestWrapper."<init>":(Ljavax/servlet/http/HttpServletRequest;)V
       5: aload_0
       6: aload_1
       7: invokeinterface #2,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getLocalPort:()I
      12: putfield      #3                  // Field localPort:I
      15: aload_0
      16: aload_1
      17: invokeinterface #4,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteAddr:()Ljava/lang/String;
      22: putfield      #5                  // Field remoteAddr:Ljava/lang/String;
      25: aload_0
      26: aload_1
      27: invokeinterface #6,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteHost:()Ljava/lang/String;
      32: putfield      #7                  // Field remoteHost:Ljava/lang/String;
      35: aload_0
      36: aload_1
      37: invokeinterface #8,  1            // InterfaceMethod javax/servlet/http/HttpServletRequest.getScheme:()Ljava/lang/String;
      42: putfield      #9                  // Field scheme:Ljava/lang/String;
      45: aload_0
      46: aload_1
      47: invokeinterface #10,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.isSecure:()Z
      52: putfield      #11                 // Field secure:Z
      55: aload_0
      56: aload_1
      57: invokeinterface #12,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServerPort:()I
      62: putfield      #13                 // Field serverPort:I
      65: aload_0
      66: new           #14                 // class java/util/HashMap
      69: dup
      70: invokespecial #15                 // Method java/util/HashMap."<init>":()V
      73: putfield      #16                 // Field headers:Ljava/util/Map;
      76: aload_1
      77: invokeinterface #17,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
      82: astore_2
      83: aload_2
      84: invokeinterface #18,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      89: ifeq          126
      92: aload_2
      93: invokeinterface #19,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      98: checkcast     #20                 // class java/lang/String
     101: astore_3
     102: aload_0
     103: getfield      #16                 // Field headers:Ljava/util/Map;
     106: aload_3
     107: aload_1
     108: aload_3
     109: invokeinterface #21,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
     114: invokestatic  #22                 // Method java/util/Collections.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;
     117: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: goto          83
     126: return

  public long getDateHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: ldc2_w        #25                 // long -1l
      13: lreturn
      14: getstatic     #27                 // Field threadLocalDateFormats:Ljava/lang/ThreadLocal;
      17: invokevirtual #28                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      20: checkcast     #29                 // class "[Ljava/text/DateFormat;"
      23: astore_3
      24: aconst_null
      25: astore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload_3
      33: arraylength
      34: if_icmpge     67
      37: aload         4
      39: ifnonnull     67
      42: aload_3
      43: iload         5
      45: aaload
      46: astore        6
      48: aload         6
      50: aload_2
      51: invokevirtual #30                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      54: astore        4
      56: goto          61
      59: astore        7
      61: iinc          5, 1
      64: goto          30
      67: aload         4
      69: ifnonnull     81
      72: new           #32                 // class java/lang/IllegalArgumentException
      75: dup
      76: aload_2
      77: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload         4
      83: invokevirtual #34                 // Method java/util/Date.getTime:()J
      86: lreturn
    Exception table:
       from    to  target type
          48    56    59   Class java/text/ParseException

  public java.lang.String getHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        36
      10: aload_2
      11: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: ifnull        36
      19: aload_2
      20: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      25: checkcast     #37                 // class java/util/List
      28: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifeq          38
      36: aconst_null
      37: areturn
      38: aload_2
      39: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #37                 // class java/util/List
      47: iconst_0
      48: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      53: checkcast     #20                 // class java/lang/String
      56: areturn

  protected java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>> getHeaderEntry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field headers:Ljava/util/Map;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          55
      24: aload_2
      25: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #44                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #20                 // class java/lang/String
      43: aload_1
      44: invokevirtual #46                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      47: ifeq          52
      50: aload_3
      51: areturn
      52: goto          15
      55: aconst_null
      56: areturn

  public java.util.Enumeration<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: getfield      #16                 // Field headers:Ljava/util/Map;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #48                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      12: areturn

  public java.util.Enumeration<java.lang.String> getHeaders(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        19
      10: aload_2
      11: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      16: ifnonnull     26
      19: invokestatic  #49                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      22: invokestatic  #48                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      25: areturn
      26: aload_2
      27: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      32: checkcast     #50                 // class java/util/Collection
      35: invokestatic  #48                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      38: areturn

  public int getIntHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_m1
      11: ireturn
      12: aload_2
      13: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      16: ireturn

  public int getLocalPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field localPort:I
       4: ireturn

  public java.lang.String getRemoteAddr();
    Code:
       0: aload_0
       1: getfield      #5                  // Field remoteAddr:Ljava/lang/String;
       4: areturn

  public java.lang.String getRemoteHost();
    Code:
       0: aload_0
       1: getfield      #7                  // Field remoteHost:Ljava/lang/String;
       4: areturn

  public java.lang.String getScheme();
    Code:
       0: aload_0
       1: getfield      #9                  // Field scheme:Ljava/lang/String;
       4: areturn

  public int getServerPort();
    Code:
       0: aload_0
       1: getfield      #13                 // Field serverPort:I
       4: ireturn

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #11                 // Field secure:Z
       4: ireturn

  public void removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
       5: astore_2
       6: aload_2
       7: ifnull        26
      10: aload_0
      11: getfield      #16                 // Field headers:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: invokeinterface #52,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: return

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #20                 // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_2
       7: aastore
       8: invokestatic  #53                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: astore_3
      12: aload_0
      13: aload_1
      14: invokevirtual #35                 // Method getHeaderEntry:(Ljava/lang/String;)Ljava/util/Map$Entry;
      17: astore        4
      19: aload         4
      21: ifnonnull     39
      24: aload_0
      25: getfield      #16                 // Field headers:Ljava/util/Map;
      28: aload_1
      29: aload_3
      30: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: goto          48
      39: aload         4
      41: aload_3
      42: invokeinterface #54,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: return

  public void setLocalPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field localPort:I
       5: return

  public void setRemoteAddr(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field remoteAddr:Ljava/lang/String;
       5: return

  public void setRemoteHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field remoteHost:Ljava/lang/String;
       5: return

  public void setScheme(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field scheme:Ljava/lang/String;
       5: return

  public void setSecure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field secure:Z
       5: return

  public void setServerPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field serverPort:I
       5: return

  public java.lang.StringBuffer getRequestURL();
    Code:
       0: new           #55                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #56                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #57                 // Method getScheme:()Ljava/lang/String;
      12: astore_2
      13: aload_0
      14: invokevirtual #58                 // Method getServerPort:()I
      17: istore_3
      18: iload_3
      19: ifge          25
      22: bipush        80
      24: istore_3
      25: aload_1
      26: aload_2
      27: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: pop
      31: aload_1
      32: ldc           #60                 // String ://
      34: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: pop
      38: aload_1
      39: aload_0
      40: invokevirtual #61                 // Method getServerName:()Ljava/lang/String;
      43: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload_2
      48: ldc           #62                 // String http
      50: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          62
      56: iload_3
      57: bipush        80
      59: if_icmpne     78
      62: aload_2
      63: ldc           #64                 // String https
      65: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          91
      71: iload_3
      72: sipush        443
      75: if_icmpeq     91
      78: aload_1
      79: bipush        58
      81: invokevirtual #65                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      84: pop
      85: aload_1
      86: iload_3
      87: invokevirtual #66                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      90: pop
      91: aload_1
      92: aload_0
      93: invokevirtual #67                 // Method getRequestURI:()Ljava/lang/String;
      96: invokevirtual #59                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      99: pop
     100: aload_1
     101: areturn

  public org.apache.catalina.servlet4preview.http.PushBuilder getPushBuilder();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getRequest:()Ljavax/servlet/ServletRequest;
       4: astore_1
       5: aload_1
       6: instanceof    #69                 // class javax/servlet/ServletRequestWrapper
       9: ifeq          23
      12: aload_1
      13: checkcast     #69                 // class javax/servlet/ServletRequestWrapper
      16: invokevirtual #70                 // Method javax/servlet/ServletRequestWrapper.getRequest:()Ljavax/servlet/ServletRequest;
      19: astore_1
      20: goto          5
      23: aload_1
      24: instanceof    #71                 // class org/apache/catalina/connector/RequestFacade
      27: ifeq          39
      30: aload_1
      31: checkcast     #71                 // class org/apache/catalina/connector/RequestFacade
      34: aload_0
      35: invokevirtual #72                 // Method org/apache/catalina/connector/RequestFacade.newPushBuilder:(Ljavax/servlet/http/HttpServletRequest;)Lorg/apache/catalina/servlet4preview/http/PushBuilder;
      38: areturn
      39: aconst_null
      40: areturn

  static {};
    Code:
       0: new           #73                 // class org/apache/catalina/filters/RemoteIpFilter$XForwardedRequest$1
       3: dup
       4: invokespecial #74                 // Method org/apache/catalina/filters/RemoteIpFilter$XForwardedRequest$1."<init>":()V
       7: putstatic     #27                 // Field threadLocalDateFormats:Ljava/lang/ThreadLocal;
      10: return
}
