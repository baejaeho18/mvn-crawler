Compiled from "FileUploadBase.java"
public abstract class org.apache.tomcat.util.http.fileupload.FileUploadBase {
  public static final java.lang.String CONTENT_TYPE;

  public static final java.lang.String CONTENT_DISPOSITION;

  public static final java.lang.String CONTENT_LENGTH;

  public static final java.lang.String FORM_DATA;

  public static final java.lang.String ATTACHMENT;

  public static final java.lang.String MULTIPART;

  public static final java.lang.String MULTIPART_FORM_DATA;

  public static final java.lang.String MULTIPART_MIXED;

  private long sizeMax;

  private long fileSizeMax;

  private java.lang.String headerEncoding;

  private org.apache.tomcat.util.http.fileupload.ProgressListener listener;

  public org.apache.tomcat.util.http.fileupload.FileUploadBase();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #6                  // long -1l
       8: putfield      #3                  // Field sizeMax:J
      11: aload_0
      12: ldc2_w        #6                  // long -1l
      15: putfield      #4                  // Field fileSizeMax:J
      18: return

  public static final boolean isMultipartContent(org.apache.tomcat.util.http.fileupload.RequestContext);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod org/apache/tomcat/util/http/fileupload/RequestContext.getContentType:()Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: getstatic     #9                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #10                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: ldc           #11                 // String multipart/
      22: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iconst_0
      31: ireturn

  public abstract org.apache.tomcat.util.http.fileupload.FileItemFactory getFileItemFactory();

  public abstract void setFileItemFactory(org.apache.tomcat.util.http.fileupload.FileItemFactory);

  public long getSizeMax();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sizeMax:J
       4: lreturn

  public void setSizeMax(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field sizeMax:J
       5: return

  public long getFileSizeMax();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileSizeMax:J
       4: lreturn

  public void setFileSizeMax(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field fileSizeMax:J
       5: return

  public java.lang.String getHeaderEncoding();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerEncoding:Ljava/lang/String;
       4: areturn

  public void setHeaderEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field headerEncoding:Ljava/lang/String;
       5: return

  public org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext) throws org.apache.tomcat.util.http.fileupload.FileUploadException, java.io.IOException;
    Code:
       0: new           #13                 // class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileItemIteratorImpl
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method org/apache/tomcat/util/http/fileupload/FileUploadBase$FileItemIteratorImpl."<init>":(Lorg/apache/tomcat/util/http/fileupload/FileUploadBase;Lorg/apache/tomcat/util/http/fileupload/RequestContext;)V
       9: areturn
      10: astore_2
      11: aload_2
      12: invokevirtual #16                 // Method org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException.getCause:()Ljava/lang/Throwable;
      15: checkcast     #17                 // class org/apache/tomcat/util/http/fileupload/FileUploadException
      18: athrow
    Exception table:
       from    to  target type
           0     9    10   Class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException

  public java.util.List<org.apache.tomcat.util.http.fileupload.FileItem> parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext) throws org.apache.tomcat.util.http.fileupload.FileUploadException;
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_0
      11: aload_1
      12: invokevirtual #20                 // Method getItemIterator:(Lorg/apache/tomcat/util/http/fileupload/RequestContext;)Lorg/apache/tomcat/util/http/fileupload/FileItemIterator;
      15: astore        4
      17: aload_0
      18: invokevirtual #21                 // Method getFileItemFactory:()Lorg/apache/tomcat/util/http/fileupload/FileItemFactory;
      21: astore        5
      23: aload         5
      25: ifnonnull     38
      28: new           #22                 // class java/lang/NullPointerException
      31: dup
      32: ldc           #23                 // String No FileItemFactory has been set.
      34: invokespecial #24                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload         4
      40: invokeinterface #25,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemIterator.hasNext:()Z
      45: ifeq          196
      48: aload         4
      50: invokeinterface #26,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemIterator.next:()Lorg/apache/tomcat/util/http/fileupload/FileItemStream;
      55: astore        6
      57: aload         6
      59: checkcast     #27                 // class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl
      62: invokestatic  #28                 // Method org/apache/tomcat/util/http/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl.access$000:(Lorg/apache/tomcat/util/http/fileupload/FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl;)Ljava/lang/String;
      65: astore        7
      67: aload         5
      69: aload         6
      71: invokeinterface #29,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemStream.getFieldName:()Ljava/lang/String;
      76: aload         6
      78: invokeinterface #30,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemStream.getContentType:()Ljava/lang/String;
      83: aload         6
      85: invokeinterface #31,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemStream.isFormField:()Z
      90: aload         7
      92: invokeinterface #32,  5           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemFactory.createItem:(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/apache/tomcat/util/http/fileupload/FileItem;
      97: astore        8
      99: aload_2
     100: aload         8
     102: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     107: pop
     108: aload         6
     110: invokeinterface #34,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemStream.openStream:()Ljava/io/InputStream;
     115: aload         8
     117: invokeinterface #35,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItem.getOutputStream:()Ljava/io/OutputStream;
     122: iconst_1
     123: invokestatic  #36                 // Method org/apache/tomcat/util/http/fileupload/util/Streams.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;Z)J
     126: pop2
     127: goto          175
     130: astore        9
     132: aload         9
     134: invokevirtual #16                 // Method org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException.getCause:()Ljava/lang/Throwable;
     137: checkcast     #17                 // class org/apache/tomcat/util/http/fileupload/FileUploadException
     140: athrow
     141: astore        9
     143: new           #38                 // class org/apache/tomcat/util/http/fileupload/FileUploadBase$IOFileUploadException
     146: dup
     147: ldc           #39                 // String Processing of %s request failed. %s
     149: iconst_2
     150: anewarray     #40                 // class java/lang/Object
     153: dup
     154: iconst_0
     155: ldc           #41                 // String multipart/form-data
     157: aastore
     158: dup
     159: iconst_1
     160: aload         9
     162: invokevirtual #42                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     165: aastore
     166: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     169: aload         9
     171: invokespecial #44                 // Method org/apache/tomcat/util/http/fileupload/FileUploadBase$IOFileUploadException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     174: athrow
     175: aload         6
     177: invokeinterface #45,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemStream.getHeaders:()Lorg/apache/tomcat/util/http/fileupload/FileItemHeaders;
     182: astore        9
     184: aload         8
     186: aload         9
     188: invokeinterface #46,  2           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItem.setHeaders:(Lorg/apache/tomcat/util/http/fileupload/FileItemHeaders;)V
     193: goto          38
     196: iconst_1
     197: istore_3
     198: aload_2
     199: astore        6
     201: iload_3
     202: ifne          250
     205: aload_2
     206: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     211: astore        7
     213: aload         7
     215: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          250
     223: aload         7
     225: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #50                 // class org/apache/tomcat/util/http/fileupload/FileItem
     233: astore        8
     235: aload         8
     237: invokeinterface #51,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItem.delete:()V
     242: goto          247
     245: astore        9
     247: goto          213
     250: aload         6
     252: areturn
     253: astore        4
     255: aload         4
     257: invokevirtual #16                 // Method org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException.getCause:()Ljava/lang/Throwable;
     260: checkcast     #17                 // class org/apache/tomcat/util/http/fileupload/FileUploadException
     263: athrow
     264: astore        4
     266: new           #17                 // class org/apache/tomcat/util/http/fileupload/FileUploadException
     269: dup
     270: aload         4
     272: invokevirtual #42                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     275: aload         4
     277: invokespecial #53                 // Method org/apache/tomcat/util/http/fileupload/FileUploadException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     280: athrow
     281: astore        10
     283: iload_3
     284: ifne          332
     287: aload_2
     288: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     293: astore        11
     295: aload         11
     297: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     302: ifeq          332
     305: aload         11
     307: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     312: checkcast     #50                 // class org/apache/tomcat/util/http/fileupload/FileItem
     315: astore        12
     317: aload         12
     319: invokeinterface #51,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItem.delete:()V
     324: goto          329
     327: astore        13
     329: goto          295
     332: aload         10
     334: athrow
    Exception table:
       from    to  target type
         108   127   130   Class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException
         108   127   141   Class java/io/IOException
         235   242   245   Class java/lang/Exception
          10   201   253   Class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException
          10   201   264   Class java/io/IOException
          10   201   281   any
         317   324   327   Class java/lang/Exception
         253   283   281   any

  public java.util.Map<java.lang.String, java.util.List<org.apache.tomcat.util.http.fileupload.FileItem>> parseParameterMap(org.apache.tomcat.util.http.fileupload.RequestContext) throws org.apache.tomcat.util.http.fileupload.FileUploadException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method parseRequest:(Lorg/apache/tomcat/util/http/fileupload/RequestContext;)Ljava/util/List;
       5: astore_2
       6: new           #55                 // class java/util/HashMap
       9: dup
      10: aload_2
      11: invokeinterface #56,  1           // InterfaceMethod java/util/List.size:()I
      16: invokespecial #57                 // Method java/util/HashMap."<init>":(I)V
      19: astore_3
      20: aload_2
      21: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          110
      38: aload         4
      40: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #50                 // class org/apache/tomcat/util/http/fileupload/FileItem
      48: astore        5
      50: aload         5
      52: invokeinterface #58,  1           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItem.getFieldName:()Ljava/lang/String;
      57: astore        6
      59: aload_3
      60: aload         6
      62: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #60                 // class java/util/List
      70: astore        7
      72: aload         7
      74: ifnonnull     97
      77: new           #18                 // class java/util/ArrayList
      80: dup
      81: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
      84: astore        7
      86: aload_3
      87: aload         6
      89: aload         7
      91: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: aload         7
      99: aload         5
     101: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     106: pop
     107: goto          28
     110: aload_3
     111: areturn

  protected byte[] getBoundary(java.lang.String);
    Code:
       0: new           #62                 // class org/apache/tomcat/util/http/fileupload/ParameterParser
       3: dup
       4: invokespecial #63                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser."<init>":()V
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #64                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser.setLowerCaseNames:(Z)V
      13: aload_2
      14: aload_1
      15: iconst_2
      16: newarray       char
      18: dup
      19: iconst_0
      20: bipush        59
      22: castore
      23: dup
      24: iconst_1
      25: bipush        44
      27: castore
      28: invokevirtual #65                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser.parse:(Ljava/lang/String;[C)Ljava/util/Map;
      31: astore_3
      32: aload_3
      33: ldc           #66                 // String boundary
      35: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #67                 // class java/lang/String
      43: astore        4
      45: aload         4
      47: ifnonnull     52
      50: aconst_null
      51: areturn
      52: aload         4
      54: getstatic     #68                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      57: invokevirtual #69                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      60: astore        5
      62: aload         5
      64: areturn

  protected java.lang.String getFileName(org.apache.tomcat.util.http.fileupload.FileItemHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #70                 // String Content-disposition
       4: invokeinterface #71,  2           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemHeaders.getHeader:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #72                 // Method getFileName:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  private java.lang.String getFileName(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        97
       6: aload_1
       7: getstatic     #9                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      10: invokevirtual #10                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      13: astore_3
      14: aload_3
      15: ldc           #73                 // String form-data
      17: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      20: ifne          32
      23: aload_3
      24: ldc           #74                 // String attachment
      26: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      29: ifeq          97
      32: new           #62                 // class org/apache/tomcat/util/http/fileupload/ParameterParser
      35: dup
      36: invokespecial #63                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser."<init>":()V
      39: astore        4
      41: aload         4
      43: iconst_1
      44: invokevirtual #64                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser.setLowerCaseNames:(Z)V
      47: aload         4
      49: aload_1
      50: bipush        59
      52: invokevirtual #75                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser.parse:(Ljava/lang/String;C)Ljava/util/Map;
      55: astore        5
      57: aload         5
      59: ldc           #76                 // String filename
      61: invokeinterface #77,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      66: ifeq          97
      69: aload         5
      71: ldc           #76                 // String filename
      73: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #67                 // class java/lang/String
      81: astore_2
      82: aload_2
      83: ifnull        94
      86: aload_2
      87: invokevirtual #78                 // Method java/lang/String.trim:()Ljava/lang/String;
      90: astore_2
      91: goto          97
      94: ldc           #79                 // String
      96: astore_2
      97: aload_2
      98: areturn

  protected java.lang.String getFieldName(org.apache.tomcat.util.http.fileupload.FileItemHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #70                 // String Content-disposition
       4: invokeinterface #71,  2           // InterfaceMethod org/apache/tomcat/util/http/fileupload/FileItemHeaders.getHeader:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #80                 // Method getFieldName:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  private java.lang.String getFieldName(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        65
       6: aload_1
       7: getstatic     #9                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      10: invokevirtual #10                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      13: ldc           #73                 // String form-data
      15: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      18: ifeq          65
      21: new           #62                 // class org/apache/tomcat/util/http/fileupload/ParameterParser
      24: dup
      25: invokespecial #63                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser."<init>":()V
      28: astore_3
      29: aload_3
      30: iconst_1
      31: invokevirtual #64                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser.setLowerCaseNames:(Z)V
      34: aload_3
      35: aload_1
      36: bipush        59
      38: invokevirtual #75                 // Method org/apache/tomcat/util/http/fileupload/ParameterParser.parse:(Ljava/lang/String;C)Ljava/util/Map;
      41: astore        4
      43: aload         4
      45: ldc           #81                 // String name
      47: invokeinterface #59,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #67                 // class java/lang/String
      55: astore_2
      56: aload_2
      57: ifnull        65
      60: aload_2
      61: invokevirtual #78                 // Method java/lang/String.trim:()Ljava/lang/String;
      64: astore_2
      65: aload_2
      66: areturn

  protected org.apache.tomcat.util.http.fileupload.FileItemHeaders getParsedHeaders(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #82                 // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #83                 // Method newFileItemHeaders:()Lorg/apache/tomcat/util/http/fileupload/util/FileItemHeadersImpl;
       9: astore_3
      10: iconst_0
      11: istore        4
      13: aload_0
      14: aload_1
      15: iload         4
      17: invokespecial #84                 // Method parseEndOfLine:(Ljava/lang/String;I)I
      20: istore        5
      22: iload         4
      24: iload         5
      26: if_icmpne     32
      29: goto          162
      32: new           #85                 // class java/lang/StringBuilder
      35: dup
      36: aload_1
      37: iload         4
      39: iload         5
      41: invokevirtual #86                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      44: invokespecial #87                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      47: astore        6
      49: iload         5
      51: iconst_2
      52: iadd
      53: istore        4
      55: iload         4
      57: iload_2
      58: if_icmpge     149
      61: iload         4
      63: istore        7
      65: iload         7
      67: iload_2
      68: if_icmpge     102
      71: aload_1
      72: iload         7
      74: invokevirtual #88                 // Method java/lang/String.charAt:(I)C
      77: istore        8
      79: iload         8
      81: bipush        32
      83: if_icmpeq     96
      86: iload         8
      88: bipush        9
      90: if_icmpeq     96
      93: goto          102
      96: iinc          7, 1
      99: goto          65
     102: iload         7
     104: iload         4
     106: if_icmpne     112
     109: goto          149
     112: aload_0
     113: aload_1
     114: iload         7
     116: invokespecial #84                 // Method parseEndOfLine:(Ljava/lang/String;I)I
     119: istore        5
     121: aload         6
     123: ldc           #89                 // String
     125: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_1
     129: iload         7
     131: iload         5
     133: invokevirtual #86                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     136: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: pop
     140: iload         5
     142: iconst_2
     143: iadd
     144: istore        4
     146: goto          55
     149: aload_0
     150: aload_3
     151: aload         6
     153: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #92                 // Method parseHeaderLine:(Lorg/apache/tomcat/util/http/fileupload/util/FileItemHeadersImpl;Ljava/lang/String;)V
     159: goto          13
     162: aload_3
     163: areturn

  protected org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl newFileItemHeaders();
    Code:
       0: new           #93                 // class org/apache/tomcat/util/http/fileupload/util/FileItemHeadersImpl
       3: dup
       4: invokespecial #94                 // Method org/apache/tomcat/util/http/fileupload/util/FileItemHeadersImpl."<init>":()V
       7: areturn

  private int parseEndOfLine(java.lang.String, int);
    Code:
       0: iload_2
       1: istore_3
       2: aload_1
       3: bipush        13
       5: iload_3
       6: invokevirtual #95                 // Method java/lang/String.indexOf:(II)I
       9: istore        4
      11: iload         4
      13: iconst_m1
      14: if_icmpeq     28
      17: iload         4
      19: iconst_1
      20: iadd
      21: aload_1
      22: invokevirtual #82                 // Method java/lang/String.length:()I
      25: if_icmplt     38
      28: new           #96                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #97                 // String Expected headers to be terminated by an empty line.
      34: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: iload         4
      41: iconst_1
      42: iadd
      43: invokevirtual #88                 // Method java/lang/String.charAt:(I)C
      46: bipush        10
      48: if_icmpne     54
      51: iload         4
      53: ireturn
      54: iload         4
      56: iconst_1
      57: iadd
      58: istore_3
      59: goto          2

  private void parseHeaderLine(org.apache.tomcat.util.http.fileupload.util.FileItemHeadersImpl, java.lang.String);
    Code:
       0: aload_2
       1: bipush        58
       3: invokevirtual #99                 // Method java/lang/String.indexOf:(I)I
       6: istore_3
       7: iload_3
       8: iconst_m1
       9: if_icmpne     13
      12: return
      13: aload_2
      14: iconst_0
      15: iload_3
      16: invokevirtual #86                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      19: invokevirtual #78                 // Method java/lang/String.trim:()Ljava/lang/String;
      22: astore        4
      24: aload_2
      25: aload_2
      26: bipush        58
      28: invokevirtual #99                 // Method java/lang/String.indexOf:(I)I
      31: iconst_1
      32: iadd
      33: invokevirtual #100                // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: invokevirtual #78                 // Method java/lang/String.trim:()Ljava/lang/String;
      39: astore        5
      41: aload_1
      42: aload         4
      44: aload         5
      46: invokevirtual #101                // Method org/apache/tomcat/util/http/fileupload/util/FileItemHeadersImpl.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      49: return

  public org.apache.tomcat.util.http.fileupload.ProgressListener getProgressListener();
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Lorg/apache/tomcat/util/http/fileupload/ProgressListener;
       4: areturn

  public void setProgressListener(org.apache.tomcat.util.http.fileupload.ProgressListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field listener:Lorg/apache/tomcat/util/http/fileupload/ProgressListener;
       5: return

  static long access$200(org.apache.tomcat.util.http.fileupload.FileUploadBase);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileSizeMax:J
       4: lreturn

  static long access$400(org.apache.tomcat.util.http.fileupload.FileUploadBase);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sizeMax:J
       4: lreturn

  static java.lang.String access$500(org.apache.tomcat.util.http.fileupload.FileUploadBase);
    Code:
       0: aload_0
       1: getfield      #2                  // Field headerEncoding:Ljava/lang/String;
       4: areturn

  static org.apache.tomcat.util.http.fileupload.ProgressListener access$600(org.apache.tomcat.util.http.fileupload.FileUploadBase);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Lorg/apache/tomcat/util/http/fileupload/ProgressListener;
       4: areturn
}
