Compiled from "TLSClientHelloExtractor.java"
public class org.apache.tomcat.util.net.TLSClientHelloExtractor {
  private static final org.apache.juli.logging.Log log;

  private static final org.apache.tomcat.util.res.StringManager sm;

  private final org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult result;

  private final java.util.List<org.apache.tomcat.util.net.openssl.ciphers.Cipher> clientRequestedCiphers;

  private final java.lang.String sniValue;

  private final java.util.List<java.lang.String> clientRequestedApplicationProtocols;

  private static final int TLS_RECORD_HEADER_LEN;

  private static final int TLS_EXTENSION_SERVER_NAME;

  private static final int TLS_EXTENSION_ALPN;

  public static byte[] USE_TLS_RESPONSE;

  public org.apache.tomcat.util.net.TLSClientHelloExtractor(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
       8: istore_2
       9: aload_1
      10: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
      13: istore_3
      14: getstatic     #4                  // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.NOT_PRESENT:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      17: astore        4
      19: new           #5                  // class java/util/ArrayList
      22: dup
      23: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      26: astore        5
      28: new           #5                  // class java/util/ArrayList
      31: dup
      32: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      35: astore        6
      37: aconst_null
      38: astore        7
      40: aload_1
      41: invokevirtual #7                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      44: pop
      45: aload_1
      46: iconst_5
      47: invokestatic  #8                  // Method isAvailable:(Ljava/nio/ByteBuffer;I)Z
      50: ifne          96
      53: aload_1
      54: invokestatic  #9                  // Method handleIncompleteRead:(Ljava/nio/ByteBuffer;)Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      57: astore        4
      59: aload_0
      60: aload         4
      62: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      65: aload_0
      66: aload         5
      68: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
      71: aload_0
      72: aload         6
      74: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
      77: aload_0
      78: aload         7
      80: putfield      #13                 // Field sniValue:Ljava/lang/String;
      83: aload_1
      84: iload_3
      85: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      88: pop
      89: aload_1
      90: iload_2
      91: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      94: pop
      95: return
      96: aload_1
      97: invokestatic  #16                 // Method isTLSHandshake:(Ljava/nio/ByteBuffer;)Z
     100: ifne          152
     103: aload_1
     104: invokestatic  #17                 // Method isHttp:(Ljava/nio/ByteBuffer;)Z
     107: ifeq          115
     110: getstatic     #18                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.NON_SECURE:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     113: astore        4
     115: aload_0
     116: aload         4
     118: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     121: aload_0
     122: aload         5
     124: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     127: aload_0
     128: aload         6
     130: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     133: aload_0
     134: aload         7
     136: putfield      #13                 // Field sniValue:Ljava/lang/String;
     139: aload_1
     140: iload_3
     141: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     144: pop
     145: aload_1
     146: iload_2
     147: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     150: pop
     151: return
     152: aload_1
     153: invokestatic  #19                 // Method isAllRecordAvailable:(Ljava/nio/ByteBuffer;)Z
     156: ifne          202
     159: aload_1
     160: invokestatic  #9                  // Method handleIncompleteRead:(Ljava/nio/ByteBuffer;)Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     163: astore        4
     165: aload_0
     166: aload         4
     168: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     171: aload_0
     172: aload         5
     174: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     177: aload_0
     178: aload         6
     180: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     183: aload_0
     184: aload         7
     186: putfield      #13                 // Field sniValue:Ljava/lang/String;
     189: aload_1
     190: iload_3
     191: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     194: pop
     195: aload_1
     196: iload_2
     197: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     200: pop
     201: return
     202: aload_1
     203: invokestatic  #20                 // Method isClientHello:(Ljava/nio/ByteBuffer;)Z
     206: ifne          246
     209: aload_0
     210: aload         4
     212: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     215: aload_0
     216: aload         5
     218: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     221: aload_0
     222: aload         6
     224: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     227: aload_0
     228: aload         7
     230: putfield      #13                 // Field sniValue:Ljava/lang/String;
     233: aload_1
     234: iload_3
     235: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     238: pop
     239: aload_1
     240: iload_2
     241: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     244: pop
     245: return
     246: aload_1
     247: invokestatic  #21                 // Method isAllClientHelloAvailable:(Ljava/nio/ByteBuffer;)Z
     250: ifne          306
     253: getstatic     #22                 // Field log:Lorg/apache/juli/logging/Log;
     256: getstatic     #23                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     259: ldc           #24                 // String sniExtractor.clientHelloTooBig
     261: invokevirtual #25                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
     264: invokeinterface #26,  2           // InterfaceMethod org/apache/juli/logging/Log.warn:(Ljava/lang/Object;)V
     269: aload_0
     270: aload         4
     272: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     275: aload_0
     276: aload         5
     278: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     281: aload_0
     282: aload         6
     284: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     287: aload_0
     288: aload         7
     290: putfield      #13                 // Field sniValue:Ljava/lang/String;
     293: aload_1
     294: iload_3
     295: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     298: pop
     299: aload_1
     300: iload_2
     301: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     304: pop
     305: return
     306: aload_1
     307: iconst_2
     308: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
     311: aload_1
     312: bipush        32
     314: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
     317: aload_1
     318: aload_1
     319: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
     322: sipush        255
     325: iand
     326: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
     329: aload_1
     330: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
     333: iconst_2
     334: idiv
     335: istore        8
     337: iconst_0
     338: istore        9
     340: iload         9
     342: iload         8
     344: if_icmpge     372
     347: aload_1
     348: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
     351: istore        10
     353: aload         5
     355: iload         10
     357: invokestatic  #30                 // Method org/apache/tomcat/util/net/openssl/ciphers/Cipher.valueOf:(I)Lorg/apache/tomcat/util/net/openssl/ciphers/Cipher;
     360: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     365: pop
     366: iinc          9, 1
     369: goto          340
     372: aload_1
     373: aload_1
     374: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
     377: sipush        255
     380: iand
     381: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
     384: aload_1
     385: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     388: ifne          428
     391: aload_0
     392: aload         4
     394: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     397: aload_0
     398: aload         5
     400: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     403: aload_0
     404: aload         6
     406: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     409: aload_0
     410: aload         7
     412: putfield      #13                 // Field sniValue:Ljava/lang/String;
     415: aload_1
     416: iload_3
     417: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     420: pop
     421: aload_1
     422: iload_2
     423: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     426: pop
     427: return
     428: aload_1
     429: iconst_2
     430: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
     433: aload_1
     434: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     437: ifeq          523
     440: aload         7
     442: ifnull        455
     445: aload         6
     447: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
     452: ifne          523
     455: aload_1
     456: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
     459: istore        9
     461: aload_1
     462: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
     465: istore        10
     467: iload         9
     469: lookupswitch  { // 2
                     0: 496
                    16: 505
               default: 514
          }
     496: aload_1
     497: invokestatic  #34                 // Method readSniExtension:(Ljava/nio/ByteBuffer;)Ljava/lang/String;
     500: astore        7
     502: goto          520
     505: aload_1
     506: aload         6
     508: invokestatic  #35                 // Method readAlpnExtension:(Ljava/nio/ByteBuffer;Ljava/util/List;)V
     511: goto          520
     514: aload_1
     515: iload         10
     517: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
     520: goto          433
     523: getstatic     #36                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.COMPLETE:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     526: astore        4
     528: aload_0
     529: aload         4
     531: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     534: aload_0
     535: aload         5
     537: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     540: aload_0
     541: aload         6
     543: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     546: aload_0
     547: aload         7
     549: putfield      #13                 // Field sniValue:Ljava/lang/String;
     552: aload_1
     553: iload_3
     554: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     557: pop
     558: aload_1
     559: iload_2
     560: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     563: pop
     564: goto          628
     567: astore        8
     569: new           #39                 // class java/io/IOException
     572: dup
     573: getstatic     #23                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
     576: ldc           #40                 // String sniExtractor.clientHelloInvalid
     578: invokevirtual #25                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
     581: aload         8
     583: invokespecial #41                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     586: athrow
     587: astore        11
     589: aload_0
     590: aload         4
     592: putfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
     595: aload_0
     596: aload         5
     598: putfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
     601: aload_0
     602: aload         6
     604: putfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
     607: aload_0
     608: aload         7
     610: putfield      #13                 // Field sniValue:Ljava/lang/String;
     613: aload_1
     614: iload_3
     615: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     618: pop
     619: aload_1
     620: iload_2
     621: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     624: pop
     625: aload         11
     627: athrow
     628: return
    Exception table:
       from    to  target type
          40    59   567   Class java/nio/BufferUnderflowException
          40    59   567   Class java/lang/IllegalArgumentException
          96   115   567   Class java/nio/BufferUnderflowException
          96   115   567   Class java/lang/IllegalArgumentException
         152   165   567   Class java/nio/BufferUnderflowException
         152   165   567   Class java/lang/IllegalArgumentException
         202   209   567   Class java/nio/BufferUnderflowException
         202   209   567   Class java/lang/IllegalArgumentException
         246   269   567   Class java/nio/BufferUnderflowException
         246   269   567   Class java/lang/IllegalArgumentException
         306   391   567   Class java/nio/BufferUnderflowException
         306   391   567   Class java/lang/IllegalArgumentException
         428   528   567   Class java/nio/BufferUnderflowException
         428   528   567   Class java/lang/IllegalArgumentException
          40    59   587   any
          96   115   587   any
         152   165   587   any
         202   209   587   any
         246   269   587   any
         306   391   587   any
         428   528   587   any
         567   589   587   any

  public org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult getResult();
    Code:
       0: aload_0
       1: getfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       4: areturn

  public java.lang.String getSNIValue();
    Code:
       0: aload_0
       1: getfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       4: getstatic     #36                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.COMPLETE:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       7: if_acmpne     15
      10: aload_0
      11: getfield      #13                 // Field sniValue:Ljava/lang/String;
      14: areturn
      15: new           #42                 // class java/lang/IllegalStateException
      18: dup
      19: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":()V
      22: athrow

  public java.util.List<org.apache.tomcat.util.net.openssl.ciphers.Cipher> getClientRequestedCiphers();
    Code:
       0: aload_0
       1: getfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       4: getstatic     #36                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.COMPLETE:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      14: getstatic     #4                  // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.NOT_PRESENT:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      17: if_acmpne     25
      20: aload_0
      21: getfield      #11                 // Field clientRequestedCiphers:Ljava/util/List;
      24: areturn
      25: new           #42                 // class java/lang/IllegalStateException
      28: dup
      29: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":()V
      32: athrow

  public java.util.List<java.lang.String> getClientRequestedApplicationProtocols();
    Code:
       0: aload_0
       1: getfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       4: getstatic     #36                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.COMPLETE:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #10                 // Field result:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      14: getstatic     #4                  // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.NOT_PRESENT:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      17: if_acmpne     25
      20: aload_0
      21: getfield      #12                 // Field clientRequestedApplicationProtocols:Ljava/util/List;
      24: areturn
      25: new           #42                 // class java/lang/IllegalStateException
      28: dup
      29: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":()V
      32: athrow

  private static org.apache.tomcat.util.net.TLSClientHelloExtractor$ExtractorResult handleIncompleteRead(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
       4: aload_0
       5: invokevirtual #44                 // Method java/nio/ByteBuffer.capacity:()I
       8: if_icmpne     15
      11: getstatic     #45                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.UNDERFLOW:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      14: areturn
      15: getstatic     #46                 // Field org/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult.NEED_READ:Lorg/apache/tomcat/util/net/TLSClientHelloExtractor$ExtractorResult;
      18: areturn

  private static boolean isAvailable(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method java/nio/ByteBuffer.remaining:()I
       4: iload_1
       5: if_icmpge     19
       8: aload_0
       9: aload_0
      10: invokevirtual #3                  // Method java/nio/ByteBuffer.limit:()I
      13: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      16: pop
      17: iconst_0
      18: ireturn
      19: iconst_1
      20: ireturn

  private static boolean isTLSHandshake(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
       4: bipush        22
       6: if_icmpeq     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      15: istore_1
      16: aload_0
      17: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      20: istore_2
      21: iload_1
      22: iconst_3
      23: if_icmplt     35
      26: iload_1
      27: iconst_3
      28: if_icmpne     37
      31: iload_2
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: iconst_1
      38: ireturn

  private static boolean isHttp(java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: iconst_0
       4: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      21: istore_1
      22: iload_1
      23: bipush        13
      25: if_icmpeq     8
      28: iload_1
      29: bipush        10
      31: if_icmpeq     8
      34: iload_1
      35: invokestatic  #48                 // Method org/apache/tomcat/util/http/parser/HttpParser.isToken:(I)Z
      38: ifeq          48
      41: aload_0
      42: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      54: istore_1
      55: iload_1
      56: bipush        32
      58: if_icmpeq     67
      61: iload_1
      62: bipush        9
      64: if_icmpne     34
      67: iload_1
      68: bipush        32
      70: if_icmpeq     79
      73: iload_1
      74: bipush        9
      76: if_icmpne     96
      79: aload_0
      80: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      83: ifne          88
      86: iconst_0
      87: ireturn
      88: aload_0
      89: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      92: istore_1
      93: goto          67
      96: iload_1
      97: bipush        32
      99: if_icmpeq     132
     102: iload_1
     103: bipush        9
     105: if_icmpeq     132
     108: iload_1
     109: invokestatic  #49                 // Method org/apache/tomcat/util/http/parser/HttpParser.isNotRequestTarget:(I)Z
     112: ifne          122
     115: aload_0
     116: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     119: ifne          124
     122: iconst_0
     123: ireturn
     124: aload_0
     125: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
     128: istore_1
     129: goto          96
     132: iload_1
     133: bipush        32
     135: if_icmpeq     144
     138: iload_1
     139: bipush        9
     141: if_icmpne     161
     144: aload_0
     145: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     148: ifne          153
     151: iconst_0
     152: ireturn
     153: aload_0
     154: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
     157: istore_1
     158: goto          132
     161: iload_1
     162: invokestatic  #50                 // Method org/apache/tomcat/util/http/parser/HttpParser.isHttpProtocol:(I)Z
     165: ifeq          175
     168: aload_0
     169: invokevirtual #32                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     172: ifne          177
     175: iconst_0
     176: ireturn
     177: aload_0
     178: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
     181: istore_1
     182: iload_1
     183: bipush        13
     185: if_icmpeq     194
     188: iload_1
     189: bipush        10
     191: if_icmpne     161
     194: iconst_1
     195: ireturn

  private static boolean isAllRecordAvailable(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokestatic  #8                  // Method isAvailable:(Ljava/nio/ByteBuffer;I)Z
      10: ireturn

  private static boolean isClientHello(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
       4: iconst_1
       5: if_icmpne     10
       8: iconst_1
       9: ireturn
      10: iconst_0
      11: ireturn

  private static boolean isAllClientHelloAvailable(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
       4: sipush        255
       7: iand
       8: bipush        16
      10: ishl
      11: aload_0
      12: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      15: sipush        255
      18: iand
      19: bipush        8
      21: ishl
      22: iadd
      23: aload_0
      24: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      27: sipush        255
      30: iand
      31: iadd
      32: istore_1
      33: aload_0
      34: iload_1
      35: invokestatic  #8                  // Method isAvailable:(Ljava/nio/ByteBuffer;I)Z
      38: ireturn

  private static void skipBytes(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #2                  // Method java/nio/ByteBuffer.position:()I
       5: iload_1
       6: iadd
       7: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      10: pop
      11: return

  private static java.lang.String readSniExtension(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iconst_3
       2: invokestatic  #27                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
       5: aload_0
       6: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
       9: istore_1
      10: iload_1
      11: newarray       byte
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #51                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      19: pop
      20: new           #52                 // class java/lang/String
      23: dup
      24: aload_2
      25: getstatic     #53                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      28: invokespecial #54                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      31: areturn

  private static void readAlpnExtension(java.nio.ByteBuffer, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method java/nio/ByteBuffer.getChar:()C
       4: istore_2
       5: sipush        255
       8: newarray       byte
      10: astore_3
      11: iload_2
      12: ifle          69
      15: aload_0
      16: invokevirtual #28                 // Method java/nio/ByteBuffer.get:()B
      19: sipush        255
      22: iand
      23: istore        4
      25: aload_0
      26: aload_3
      27: iconst_0
      28: iload         4
      30: invokevirtual #55                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      33: pop
      34: aload_1
      35: new           #52                 // class java/lang/String
      38: dup
      39: aload_3
      40: iconst_0
      41: iload         4
      43: getstatic     #53                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      46: invokespecial #56                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      49: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iload_2
      56: iconst_1
      57: isub
      58: i2c
      59: istore_2
      60: iload_2
      61: iload         4
      63: isub
      64: i2c
      65: istore_2
      66: goto          11
      69: return

  static {};
    Code:
       0: ldc_w         #57                 // class org/apache/tomcat/util/net/TLSClientHelloExtractor
       3: invokestatic  #58                 // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       6: putstatic     #22                 // Field log:Lorg/apache/juli/logging/Log;
       9: ldc_w         #57                 // class org/apache/tomcat/util/net/TLSClientHelloExtractor
      12: invokestatic  #59                 // Method org/apache/tomcat/util/res/StringManager.getManager:(Ljava/lang/Class;)Lorg/apache/tomcat/util/res/StringManager;
      15: putstatic     #23                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      18: ldc           #60                 // String HTTP/1.1 400 \r\nContent-Type: text/plain;charset=ISO-8859-1\r\nConnection: close\r\n\r\nBad Request\r\nThis combination of host and port requires TLS.\r\n
      20: getstatic     #61                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
      23: invokevirtual #62                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      26: putstatic     #63                 // Field USE_TLS_RESPONSE:[B
      29: return
}
