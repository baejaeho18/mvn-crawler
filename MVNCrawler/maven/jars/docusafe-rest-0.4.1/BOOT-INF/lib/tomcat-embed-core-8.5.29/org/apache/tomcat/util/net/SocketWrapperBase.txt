Compiled from "SocketWrapperBase.java"
public abstract class org.apache.tomcat.util.net.SocketWrapperBase<E> {
  private static final org.apache.juli.logging.Log log;

  protected static final org.apache.tomcat.util.res.StringManager sm;

  private final E socket;

  private final org.apache.tomcat.util.net.AbstractEndpoint<E> endpoint;

  private volatile long readTimeout;

  private volatile long writeTimeout;

  private volatile int keepAliveLeft;

  private volatile boolean upgraded;

  private boolean secure;

  private java.lang.String negotiatedProtocol;

  protected java.lang.String localAddr;

  protected java.lang.String localName;

  protected int localPort;

  protected java.lang.String remoteAddr;

  protected java.lang.String remoteHost;

  protected int remotePort;

  private volatile boolean blockingStatus;

  private final java.util.concurrent.locks.Lock blockingStatusReadLock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock blockingStatusWriteLock;

  private volatile java.io.IOException error;

  protected volatile org.apache.tomcat.util.net.SocketBufferHandler socketBufferHandler;

  protected final java.util.concurrent.LinkedBlockingDeque<org.apache.tomcat.util.buf.ByteBufferHolder> bufferedWrites;

  protected int bufferedWriteSize;

  public static final org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck COMPLETE_WRITE;

  public static final org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck READ_DATA;

  public org.apache.tomcat.util.net.SocketWrapperBase(E, org.apache.tomcat.util.net.AbstractEndpoint<E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #2                  // long -1l
       8: putfield      #4                  // Field readTimeout:J
      11: aload_0
      12: ldc2_w        #2                  // long -1l
      15: putfield      #5                  // Field writeTimeout:J
      18: aload_0
      19: bipush        100
      21: putfield      #6                  // Field keepAliveLeft:I
      24: aload_0
      25: iconst_0
      26: putfield      #7                  // Field upgraded:Z
      29: aload_0
      30: iconst_0
      31: putfield      #8                  // Field secure:Z
      34: aload_0
      35: aconst_null
      36: putfield      #9                  // Field negotiatedProtocol:Ljava/lang/String;
      39: aload_0
      40: aconst_null
      41: putfield      #10                 // Field localAddr:Ljava/lang/String;
      44: aload_0
      45: aconst_null
      46: putfield      #11                 // Field localName:Ljava/lang/String;
      49: aload_0
      50: iconst_m1
      51: putfield      #12                 // Field localPort:I
      54: aload_0
      55: aconst_null
      56: putfield      #13                 // Field remoteAddr:Ljava/lang/String;
      59: aload_0
      60: aconst_null
      61: putfield      #14                 // Field remoteHost:Ljava/lang/String;
      64: aload_0
      65: iconst_m1
      66: putfield      #15                 // Field remotePort:I
      69: aload_0
      70: iconst_1
      71: putfield      #16                 // Field blockingStatus:Z
      74: aload_0
      75: aconst_null
      76: putfield      #17                 // Field error:Ljava/io/IOException;
      79: aload_0
      80: aconst_null
      81: putfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      84: aload_0
      85: new           #19                 // class java/util/concurrent/LinkedBlockingDeque
      88: dup
      89: invokespecial #20                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      92: putfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      95: aload_0
      96: ldc           #22                 // int 65536
      98: putfield      #23                 // Field bufferedWriteSize:I
     101: aload_0
     102: aload_1
     103: putfield      #24                 // Field socket:Ljava/lang/Object;
     106: aload_0
     107: aload_2
     108: putfield      #25                 // Field endpoint:Lorg/apache/tomcat/util/net/AbstractEndpoint;
     111: new           #26                 // class java/util/concurrent/locks/ReentrantReadWriteLock
     114: dup
     115: invokespecial #27                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
     118: astore_3
     119: aload_0
     120: aload_3
     121: invokevirtual #28                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     124: putfield      #29                 // Field blockingStatusReadLock:Ljava/util/concurrent/locks/Lock;
     127: aload_0
     128: aload_3
     129: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     132: putfield      #31                 // Field blockingStatusWriteLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
     135: return

  public E getSocket();
    Code:
       0: aload_0
       1: getfield      #24                 // Field socket:Ljava/lang/Object;
       4: areturn

  public org.apache.tomcat.util.net.AbstractEndpoint<E> getEndpoint();
    Code:
       0: aload_0
       1: getfield      #25                 // Field endpoint:Lorg/apache/tomcat/util/net/AbstractEndpoint;
       4: areturn

  public java.io.IOException getError();
    Code:
       0: aload_0
       1: getfield      #17                 // Field error:Ljava/io/IOException;
       4: areturn

  public void setError(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #17                 // Field error:Ljava/io/IOException;
       4: ifnull        8
       7: return
       8: aload_0
       9: aload_1
      10: putfield      #17                 // Field error:Ljava/io/IOException;
      13: return

  public void checkError() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field error:Ljava/io/IOException;
       4: ifnull        12
       7: aload_0
       8: getfield      #17                 // Field error:Ljava/io/IOException;
      11: athrow
      12: return

  public boolean isUpgraded();
    Code:
       0: aload_0
       1: getfield      #7                  // Field upgraded:Z
       4: ireturn

  public void setUpgraded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field upgraded:Z
       5: return

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #8                  // Field secure:Z
       4: ireturn

  public void setSecure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field secure:Z
       5: return

  public java.lang.String getNegotiatedProtocol();
    Code:
       0: aload_0
       1: getfield      #9                  // Field negotiatedProtocol:Ljava/lang/String;
       4: areturn

  public void setNegotiatedProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field negotiatedProtocol:Ljava/lang/String;
       5: return

  public void setReadTimeout(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          14
       6: aload_0
       7: lload_1
       8: putfield      #4                  // Field readTimeout:J
      11: goto          21
      14: aload_0
      15: ldc2_w        #2                  // long -1l
      18: putfield      #4                  // Field readTimeout:J
      21: return

  public long getReadTimeout();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readTimeout:J
       4: lreturn

  public void setWriteTimeout(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          14
       6: aload_0
       7: lload_1
       8: putfield      #5                  // Field writeTimeout:J
      11: goto          21
      14: aload_0
      15: ldc2_w        #2                  // long -1l
      18: putfield      #5                  // Field writeTimeout:J
      21: return

  public long getWriteTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeTimeout:J
       4: lreturn

  public void setKeepAliveLeft(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field keepAliveLeft:I
       5: return

  public int decrementKeepAlive();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field keepAliveLeft:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #6                  // Field keepAliveLeft:I
      11: ireturn

  public java.lang.String getRemoteHost();
    Code:
       0: aload_0
       1: getfield      #14                 // Field remoteHost:Ljava/lang/String;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #32                 // Method populateRemoteHost:()V
      11: aload_0
      12: getfield      #14                 // Field remoteHost:Ljava/lang/String;
      15: areturn

  protected abstract void populateRemoteHost();

  public java.lang.String getRemoteAddr();
    Code:
       0: aload_0
       1: getfield      #13                 // Field remoteAddr:Ljava/lang/String;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #33                 // Method populateRemoteAddr:()V
      11: aload_0
      12: getfield      #13                 // Field remoteAddr:Ljava/lang/String;
      15: areturn

  protected abstract void populateRemoteAddr();

  public int getRemotePort();
    Code:
       0: aload_0
       1: getfield      #15                 // Field remotePort:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokevirtual #34                 // Method populateRemotePort:()V
      12: aload_0
      13: getfield      #15                 // Field remotePort:I
      16: ireturn

  protected abstract void populateRemotePort();

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field localName:Ljava/lang/String;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #35                 // Method populateLocalName:()V
      11: aload_0
      12: getfield      #11                 // Field localName:Ljava/lang/String;
      15: areturn

  protected abstract void populateLocalName();

  public java.lang.String getLocalAddr();
    Code:
       0: aload_0
       1: getfield      #10                 // Field localAddr:Ljava/lang/String;
       4: ifnonnull     11
       7: aload_0
       8: invokevirtual #36                 // Method populateLocalAddr:()V
      11: aload_0
      12: getfield      #10                 // Field localAddr:Ljava/lang/String;
      15: areturn

  protected abstract void populateLocalAddr();

  public int getLocalPort();
    Code:
       0: aload_0
       1: getfield      #12                 // Field localPort:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokevirtual #37                 // Method populateLocalPort:()V
      12: aload_0
      13: getfield      #12                 // Field localPort:I
      16: ireturn

  protected abstract void populateLocalPort();

  public boolean getBlockingStatus();
    Code:
       0: aload_0
       1: getfield      #16                 // Field blockingStatus:Z
       4: ireturn

  public void setBlockingStatus(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field blockingStatus:Z
       5: return

  public java.util.concurrent.locks.Lock getBlockingStatusReadLock();
    Code:
       0: aload_0
       1: getfield      #29                 // Field blockingStatusReadLock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  public java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock getBlockingStatusWriteLock();
    Code:
       0: aload_0
       1: getfield      #31                 // Field blockingStatusWriteLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       4: areturn

  public org.apache.tomcat.util.net.SocketBufferHandler getSocketBufferHandler();
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: areturn

  public boolean hasDataToWrite();
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
       7: ifeq          20
      10: aload_0
      11: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      14: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingDeque.size:()I
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isReadyForWrite();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method canWrite:()Z
       4: istore_1
       5: iload_1
       6: ifne          13
       9: aload_0
      10: invokevirtual #41                 // Method registerWriteInterest:()V
      13: iload_1
      14: ireturn

  public boolean canWrite();
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: ifnonnull     23
       7: new           #42                 // class java/lang/IllegalStateException
      10: dup
      11: getstatic     #43                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      14: ldc           #44                 // String socket.closed
      16: invokevirtual #45                 // Method org/apache/tomcat/util/res/StringManager.getString:(Ljava/lang/String;)Ljava/lang/String;
      19: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      27: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      30: ifeq          47
      33: aload_0
      34: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      37: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingDeque.size:()I
      40: ifne          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public java.lang.String toString();
    Code:
       0: new           #48                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #50                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #52                 // String :
      16: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #24                 // Field socket:Ljava/lang/Object;
      23: invokestatic  #53                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      26: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public abstract int read(boolean, byte[], int, int) throws java.io.IOException;

  public abstract int read(boolean, java.nio.ByteBuffer) throws java.io.IOException;

  public abstract boolean isReadyForRead() throws java.io.IOException;

  public abstract void setAppReadBufHandler(org.apache.tomcat.util.net.ApplicationBufferHandler);

  protected int populateReadBuffer(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #55                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureReadBufferForRead:()V
       7: aload_0
       8: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      11: invokevirtual #56                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getReadBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload         4
      18: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      21: istore        5
      23: iload         5
      25: ifle          99
      28: iload         5
      30: iload_3
      31: invokestatic  #58                 // Method java/lang/Math.min:(II)I
      34: istore        5
      36: aload         4
      38: aload_1
      39: iload_2
      40: iload         5
      42: invokevirtual #59                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      45: pop
      46: getstatic     #60                 // Field log:Lorg/apache/juli/logging/Log;
      49: invokeinterface #61,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      54: ifeq          99
      57: getstatic     #60                 // Field log:Lorg/apache/juli/logging/Log;
      60: new           #48                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #62                 // String Socket: [
      69: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: ldc           #64                 // String ], Read from buffer: [
      78: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload         5
      83: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: ldc           #66                 // String ]
      88: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokeinterface #67,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      99: iload         5
     101: ireturn

  protected int populateReadBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #55                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureReadBufferForRead:()V
       7: aload_0
       8: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      11: invokevirtual #56                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getReadBuffer:()Ljava/nio/ByteBuffer;
      14: aload_1
      15: invokestatic  #68                 // Method transfer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      18: istore_2
      19: getstatic     #60                 // Field log:Lorg/apache/juli/logging/Log;
      22: invokeinterface #61,  1           // InterfaceMethod org/apache/juli/logging/Log.isDebugEnabled:()Z
      27: ifeq          71
      30: getstatic     #60                 // Field log:Lorg/apache/juli/logging/Log;
      33: new           #48                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #62                 // String Socket: [
      42: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #64                 // String ], Read from buffer: [
      51: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_2
      55: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: ldc           #66                 // String ]
      60: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #67,  2           // InterfaceMethod org/apache/juli/logging/Log.debug:(Ljava/lang/Object;)V
      71: iload_2
      72: ireturn

  public void unRead(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ifnull        23
       4: aload_0
       5: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       8: invokevirtual #69                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureReadBufferForWrite:()V
      11: aload_0
      12: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      15: invokevirtual #56                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getReadBuffer:()Ljava/nio/ByteBuffer;
      18: aload_1
      19: invokevirtual #70                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      22: pop
      23: return

  public abstract void close() throws java.io.IOException;

  public abstract boolean isClosed();

  public final void write(boolean, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifeq          9
       5: aload_2
       6: ifnonnull     10
       9: return
      10: iload_1
      11: ifeq          25
      14: aload_0
      15: aload_2
      16: iload_3
      17: iload         4
      19: invokevirtual #71                 // Method writeBlocking:([BII)V
      22: goto          33
      25: aload_0
      26: aload_2
      27: iload_3
      28: iload         4
      30: invokevirtual #72                 // Method writeNonBlocking:([BII)V
      33: return

  public final void write(boolean, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
       8: ifne          12
      11: return
      12: iload_1
      13: ifeq          24
      16: aload_0
      17: aload_2
      18: invokevirtual #73                 // Method writeBlocking:(Ljava/nio/ByteBuffer;)V
      21: goto          29
      24: aload_0
      25: aload_2
      26: invokevirtual #74                 // Method writeNonBlocking:(Ljava/nio/ByteBuffer;)V
      29: return

  protected void writeBlocking(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
       7: aload_1
       8: iload_2
       9: iload_3
      10: aload_0
      11: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      14: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      17: invokestatic  #77                 // Method transfer:([BIILjava/nio/ByteBuffer;)I
      20: istore        4
      22: aload_0
      23: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      26: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      29: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      32: ifne          75
      35: iload_3
      36: iload         4
      38: isub
      39: istore_3
      40: iload_2
      41: iload         4
      43: iadd
      44: istore_2
      45: aload_0
      46: iconst_1
      47: invokevirtual #78                 // Method doWrite:(Z)V
      50: aload_0
      51: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      54: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      57: aload_1
      58: iload_2
      59: iload_3
      60: aload_0
      61: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      64: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      67: invokestatic  #77                 // Method transfer:([BIILjava/nio/ByteBuffer;)I
      70: istore        4
      72: goto          22
      75: return

  protected void writeBlocking(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
       7: ifeq          18
      10: aload_0
      11: aload_1
      12: invokevirtual #79                 // Method writeByteBufferBlocking:(Ljava/nio/ByteBuffer;)V
      15: goto          57
      18: aload_0
      19: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      22: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      25: aload_1
      26: aload_0
      27: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      30: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      33: invokestatic  #68                 // Method transfer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      36: pop
      37: aload_0
      38: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      41: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      44: ifne          57
      47: aload_0
      48: iconst_1
      49: invokevirtual #78                 // Method doWrite:(Z)V
      52: aload_0
      53: aload_1
      54: invokevirtual #79                 // Method writeByteBufferBlocking:(Ljava/nio/ByteBuffer;)V
      57: return

  protected void writeByteBufferBlocking(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
       7: invokevirtual #80                 // Method java/nio/ByteBuffer.capacity:()I
      10: istore_2
      11: aload_1
      12: invokevirtual #81                 // Method java/nio/ByteBuffer.limit:()I
      15: istore_3
      16: aload_1
      17: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      20: iload_2
      21: if_icmplt     50
      24: aload_1
      25: aload_1
      26: invokevirtual #82                 // Method java/nio/ByteBuffer.position:()I
      29: iload_2
      30: iadd
      31: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      34: pop
      35: aload_0
      36: iconst_1
      37: aload_1
      38: invokevirtual #84                 // Method doWrite:(ZLjava/nio/ByteBuffer;)V
      41: aload_1
      42: iload_3
      43: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      46: pop
      47: goto          16
      50: aload_1
      51: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      54: ifle          76
      57: aload_0
      58: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      61: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      64: aload_1
      65: aload_0
      66: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      69: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      72: invokestatic  #68                 // Method transfer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      75: pop
      76: return

  protected void writeNonBlocking(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
       4: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingDeque.size:()I
       7: ifne          111
      10: aload_0
      11: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      14: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      17: ifeq          111
      20: aload_0
      21: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      24: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      27: aload_1
      28: iload_2
      29: iload_3
      30: aload_0
      31: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      34: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      37: invokestatic  #77                 // Method transfer:([BIILjava/nio/ByteBuffer;)I
      40: istore        4
      42: iload_3
      43: iload         4
      45: isub
      46: istore_3
      47: aload_0
      48: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      51: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      54: ifne          111
      57: iload_2
      58: iload         4
      60: iadd
      61: istore_2
      62: aload_0
      63: iconst_0
      64: invokevirtual #78                 // Method doWrite:(Z)V
      67: iload_3
      68: ifle          111
      71: aload_0
      72: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      75: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      78: ifeq          111
      81: aload_0
      82: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      85: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      88: aload_1
      89: iload_2
      90: iload_3
      91: aload_0
      92: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      95: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      98: invokestatic  #77                 // Method transfer:([BIILjava/nio/ByteBuffer;)I
     101: istore        4
     103: iload_3
     104: iload         4
     106: isub
     107: istore_3
     108: goto          47
     111: iload_3
     112: ifle          122
     115: aload_0
     116: aload_1
     117: iload_2
     118: iload_3
     119: invokevirtual #85                 // Method addToBuffers:([BII)V
     122: return

  protected void writeNonBlocking(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
       4: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingDeque.size:()I
       7: ifne          26
      10: aload_0
      11: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      14: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      17: ifeq          26
      20: aload_0
      21: aload_1
      22: invokespecial #86                 // Method writeNonBlockingInternal:(Ljava/nio/ByteBuffer;)Z
      25: pop
      26: aload_1
      27: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      30: ifle          38
      33: aload_0
      34: aload_1
      35: invokevirtual #87                 // Method addToBuffers:(Ljava/nio/ByteBuffer;)V
      38: return

  private boolean writeNonBlockingInternal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
       7: ifeq          16
      10: aload_0
      11: aload_1
      12: invokevirtual #88                 // Method writeByteBufferNonBlocking:(Ljava/nio/ByteBuffer;)Z
      15: ireturn
      16: aload_0
      17: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      20: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      23: aload_1
      24: aload_0
      25: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      28: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      31: invokestatic  #68                 // Method transfer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      34: pop
      35: aload_0
      36: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      39: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      42: ifne          66
      45: aload_0
      46: iconst_0
      47: invokevirtual #78                 // Method doWrite:(Z)V
      50: aload_0
      51: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      54: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      57: ifeq          66
      60: aload_0
      61: aload_1
      62: invokevirtual #88                 // Method writeByteBufferNonBlocking:(Ljava/nio/ByteBuffer;)Z
      65: ireturn
      66: aload_0
      67: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      70: invokevirtual #47                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferWritable:()Z
      73: ifne          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  protected boolean writeByteBufferNonBlocking(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
       7: invokevirtual #80                 // Method java/nio/ByteBuffer.capacity:()I
      10: istore_2
      11: aload_1
      12: invokevirtual #81                 // Method java/nio/ByteBuffer.limit:()I
      15: istore_3
      16: aload_1
      17: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      20: iload_2
      21: if_icmplt     65
      24: aload_1
      25: invokevirtual #82                 // Method java/nio/ByteBuffer.position:()I
      28: iload_2
      29: iadd
      30: istore        4
      32: aload_1
      33: iload         4
      35: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      38: pop
      39: aload_0
      40: iconst_0
      41: aload_1
      42: invokevirtual #84                 // Method doWrite:(ZLjava/nio/ByteBuffer;)V
      45: aload_1
      46: iload_3
      47: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      50: pop
      51: aload_1
      52: invokevirtual #82                 // Method java/nio/ByteBuffer.position:()I
      55: iload         4
      57: if_icmpeq     62
      60: iconst_1
      61: ireturn
      62: goto          16
      65: aload_1
      66: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      69: ifle          91
      72: aload_0
      73: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      76: invokevirtual #75                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForWrite:()V
      79: aload_1
      80: aload_0
      81: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      84: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      87: invokestatic  #68                 // Method transfer:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
      90: pop
      91: iconst_0
      92: ireturn

  public boolean flush(boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_1
       3: ifeq          13
       6: aload_0
       7: invokevirtual #89                 // Method flushBlocking:()V
      10: goto          18
      13: aload_0
      14: invokevirtual #90                 // Method flushNonBlocking:()Z
      17: istore_2
      18: iload_2
      19: ireturn

  protected void flushBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #78                 // Method doWrite:(Z)V
       5: aload_0
       6: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
       9: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingDeque.size:()I
      12: ifle          89
      15: aload_0
      16: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      19: invokevirtual #91                 // Method java/util/concurrent/LinkedBlockingDeque.iterator:()Ljava/util/Iterator;
      22: astore_1
      23: aload_1
      24: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          74
      32: aload_1
      33: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #94                 // class org/apache/tomcat/util/buf/ByteBufferHolder
      41: astore_2
      42: aload_2
      43: invokevirtual #95                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.flip:()Z
      46: pop
      47: aload_0
      48: aload_2
      49: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
      52: invokevirtual #73                 // Method writeBlocking:(Ljava/nio/ByteBuffer;)V
      55: aload_2
      56: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
      59: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      62: ifne          71
      65: aload_1
      66: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.remove:()V
      71: goto          23
      74: aload_0
      75: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      78: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
      81: ifne          89
      84: aload_0
      85: iconst_1
      86: invokevirtual #78                 // Method doWrite:(Z)V
      89: return

  protected boolean flushNonBlocking() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: iload_1
      17: ifeq          41
      20: aload_0
      21: iconst_0
      22: invokevirtual #78                 // Method doWrite:(Z)V
      25: aload_0
      26: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      29: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_1
      41: iload_1
      42: ifne          154
      45: aload_0
      46: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      49: invokevirtual #39                 // Method java/util/concurrent/LinkedBlockingDeque.size:()I
      52: ifle          154
      55: aload_0
      56: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      59: invokevirtual #91                 // Method java/util/concurrent/LinkedBlockingDeque.iterator:()Ljava/util/Iterator;
      62: astore_2
      63: iload_1
      64: ifne          119
      67: aload_2
      68: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          119
      76: aload_2
      77: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #94                 // class org/apache/tomcat/util/buf/ByteBufferHolder
      85: astore_3
      86: aload_3
      87: invokevirtual #95                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.flip:()Z
      90: pop
      91: aload_0
      92: aload_3
      93: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
      96: invokespecial #86                 // Method writeNonBlockingInternal:(Ljava/nio/ByteBuffer;)Z
      99: istore_1
     100: aload_3
     101: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
     104: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
     107: ifne          116
     110: aload_2
     111: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.remove:()V
     116: goto          63
     119: iload_1
     120: ifne          154
     123: aload_0
     124: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
     127: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
     130: ifne          154
     133: aload_0
     134: iconst_0
     135: invokevirtual #78                 // Method doWrite:(Z)V
     138: aload_0
     139: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
     142: invokevirtual #38                 // Method org/apache/tomcat/util/net/SocketBufferHandler.isWriteBufferEmpty:()Z
     145: ifne          152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: istore_1
     154: iload_1
     155: ireturn

  protected void doWrite(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
       4: invokevirtual #98                 // Method org/apache/tomcat/util/net/SocketBufferHandler.configureWriteBufferForRead:()V
       7: aload_0
       8: iload_1
       9: aload_0
      10: getfield      #18                 // Field socketBufferHandler:Lorg/apache/tomcat/util/net/SocketBufferHandler;
      13: invokevirtual #76                 // Method org/apache/tomcat/util/net/SocketBufferHandler.getWriteBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #84                 // Method doWrite:(ZLjava/nio/ByteBuffer;)V
      19: return

  protected abstract void doWrite(boolean, java.nio.ByteBuffer) throws java.io.IOException;

  protected void addToBuffers(byte[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #99                 // Method getByteBufferHolder:(I)Lorg/apache/tomcat/util/buf/ByteBufferHolder;
       5: astore        4
       7: aload         4
       9: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokevirtual #100                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      18: pop
      19: return

  protected void addToBuffers(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #99                 // Method getByteBufferHolder:(I)Lorg/apache/tomcat/util/buf/ByteBufferHolder;
       8: astore_2
       9: aload_2
      10: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
      13: aload_1
      14: invokevirtual #70                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      17: pop
      18: return

  private org.apache.tomcat.util.buf.ByteBufferHolder getByteBufferHolder(int);
    Code:
       0: aload_0
       1: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
       4: invokevirtual #101                // Method java/util/concurrent/LinkedBlockingDeque.peekLast:()Ljava/lang/Object;
       7: checkcast     #94                 // class org/apache/tomcat/util/buf/ByteBufferHolder
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: invokevirtual #102                // Method org/apache/tomcat/util/buf/ByteBufferHolder.isFlipped:()Z
      19: ifne          33
      22: aload_2
      23: invokevirtual #96                 // Method org/apache/tomcat/util/buf/ByteBufferHolder.getBuf:()Ljava/nio/ByteBuffer;
      26: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
      29: iload_1
      30: if_icmpge     64
      33: aload_0
      34: getfield      #23                 // Field bufferedWriteSize:I
      37: iload_1
      38: invokestatic  #103                // Method java/lang/Math.max:(II)I
      41: invokestatic  #104                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      44: astore_3
      45: new           #94                 // class org/apache/tomcat/util/buf/ByteBufferHolder
      48: dup
      49: aload_3
      50: iconst_0
      51: invokespecial #105                // Method org/apache/tomcat/util/buf/ByteBufferHolder."<init>":(Ljava/nio/ByteBuffer;Z)V
      54: astore_2
      55: aload_0
      56: getfield      #21                 // Field bufferedWrites:Ljava/util/concurrent/LinkedBlockingDeque;
      59: aload_2
      60: invokevirtual #106                // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
      63: pop
      64: aload_2
      65: areturn

  public void processSocket(org.apache.tomcat.util.net.SocketEvent, boolean);
    Code:
       0: aload_0
       1: getfield      #25                 // Field endpoint:Lorg/apache/tomcat/util/net/AbstractEndpoint;
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokevirtual #107                // Method org/apache/tomcat/util/net/AbstractEndpoint.processSocket:(Lorg/apache/tomcat/util/net/SocketWrapperBase;Lorg/apache/tomcat/util/net/SocketEvent;Z)Z
      10: pop
      11: return

  public abstract void registerReadInterest();

  public abstract void registerWriteInterest();

  public abstract org.apache.tomcat.util.net.SendfileDataBase createSendfileData(java.lang.String, long, long);

  public abstract org.apache.tomcat.util.net.SendfileState processSendfile(org.apache.tomcat.util.net.SendfileDataBase);

  public abstract void doClientAuth(org.apache.tomcat.util.net.SSLSupport) throws java.io.IOException;

  public abstract org.apache.tomcat.util.net.SSLSupport getSslSupport(java.lang.String);

  public boolean hasAsyncIO();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isReadPending();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isWritePending();
    Code:
       0: iconst_0
       1: ireturn

  public boolean awaitReadComplete(long, java.util.concurrent.TimeUnit);
    Code:
       0: iconst_1
       1: ireturn

  public boolean awaitWriteComplete(long, java.util.concurrent.TimeUnit);
    Code:
       0: iconst_1
       1: ireturn

  public final <A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState read(boolean, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>, java.nio.ByteBuffer...);
    Code:
       0: aload         8
       2: ifnonnull     13
       5: new           #108                // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #109                // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: aload_0
      14: aload         8
      16: iconst_0
      17: aload         8
      19: arraylength
      20: iload_1
      21: lload_2
      22: aload         4
      24: aload         5
      26: aload         6
      28: aload         7
      30: invokevirtual #110                // Method read:([Ljava/nio/ByteBuffer;IIZJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Lorg/apache/tomcat/util/net/SocketWrapperBase$CompletionCheck;Ljava/nio/channels/CompletionHandler;)Lorg/apache/tomcat/util/net/SocketWrapperBase$CompletionState;
      33: areturn

  public <A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState read(java.nio.ByteBuffer[], int, int, boolean, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>);
    Code:
       0: new           #111                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final <A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState write(boolean, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>, java.nio.ByteBuffer...);
    Code:
       0: aload         8
       2: ifnonnull     13
       5: new           #108                // class java/lang/IllegalArgumentException
       8: dup
       9: invokespecial #109                // Method java/lang/IllegalArgumentException."<init>":()V
      12: athrow
      13: aload_0
      14: aload         8
      16: iconst_0
      17: aload         8
      19: arraylength
      20: iload_1
      21: lload_2
      22: aload         4
      24: aload         5
      26: aload         6
      28: aload         7
      30: invokevirtual #113                // Method write:([Ljava/nio/ByteBuffer;IIZJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Lorg/apache/tomcat/util/net/SocketWrapperBase$CompletionCheck;Ljava/nio/channels/CompletionHandler;)Lorg/apache/tomcat/util/net/SocketWrapperBase$CompletionState;
      33: areturn

  public <A> org.apache.tomcat.util.net.SocketWrapperBase$CompletionState write(java.nio.ByteBuffer[], int, int, boolean, long, java.util.concurrent.TimeUnit, A, org.apache.tomcat.util.net.SocketWrapperBase$CompletionCheck, java.nio.channels.CompletionHandler<java.lang.Long, ? super A>);
    Code:
       0: new           #111                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected static int transfer(byte[], int, int, java.nio.ByteBuffer);
    Code:
       0: iload_2
       1: aload_3
       2: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
       5: invokestatic  #58                 // Method java/lang/Math.min:(II)I
       8: istore        4
      10: iload         4
      12: ifle          24
      15: aload_3
      16: aload_0
      17: iload_1
      18: iload         4
      20: invokevirtual #100                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      23: pop
      24: iload         4
      26: ireturn

  protected static int transfer(java.nio.ByteBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
       4: aload_1
       5: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
       8: invokestatic  #58                 // Method java/lang/Math.min:(II)I
      11: istore_2
      12: iload_2
      13: ifle          44
      16: aload_0
      17: invokevirtual #81                 // Method java/nio/ByteBuffer.limit:()I
      20: istore_3
      21: aload_0
      22: aload_0
      23: invokevirtual #82                 // Method java/nio/ByteBuffer.position:()I
      26: iload_2
      27: iadd
      28: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_1
      33: aload_0
      34: invokevirtual #70                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      37: pop
      38: aload_0
      39: iload_3
      40: invokevirtual #83                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      43: pop
      44: iload_2
      45: ireturn

  static {};
    Code:
       0: ldc_w         #114                // class org/apache/tomcat/util/net/SocketWrapperBase
       3: invokestatic  #115                // Method org/apache/juli/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/juli/logging/Log;
       6: putstatic     #60                 // Field log:Lorg/apache/juli/logging/Log;
       9: ldc_w         #114                // class org/apache/tomcat/util/net/SocketWrapperBase
      12: invokestatic  #116                // Method org/apache/tomcat/util/res/StringManager.getManager:(Ljava/lang/Class;)Lorg/apache/tomcat/util/res/StringManager;
      15: putstatic     #43                 // Field sm:Lorg/apache/tomcat/util/res/StringManager;
      18: new           #117                // class org/apache/tomcat/util/net/SocketWrapperBase$1
      21: dup
      22: invokespecial #118                // Method org/apache/tomcat/util/net/SocketWrapperBase$1."<init>":()V
      25: putstatic     #119                // Field COMPLETE_WRITE:Lorg/apache/tomcat/util/net/SocketWrapperBase$CompletionCheck;
      28: new           #120                // class org/apache/tomcat/util/net/SocketWrapperBase$2
      31: dup
      32: invokespecial #121                // Method org/apache/tomcat/util/net/SocketWrapperBase$2."<init>":()V
      35: putstatic     #122                // Field READ_DATA:Lorg/apache/tomcat/util/net/SocketWrapperBase$CompletionCheck;
      38: return
}
