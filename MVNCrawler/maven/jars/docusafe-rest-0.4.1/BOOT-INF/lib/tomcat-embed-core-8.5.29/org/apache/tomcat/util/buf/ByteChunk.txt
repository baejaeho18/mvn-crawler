Compiled from "ByteChunk.java"
public final class org.apache.tomcat.util.buf.ByteChunk extends org.apache.tomcat.util.buf.AbstractChunk {
  private static final long serialVersionUID;

  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private transient java.nio.charset.Charset charset;

  private byte[] buff;

  private transient org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel in;

  private transient org.apache.tomcat.util.buf.ByteChunk$ByteOutputChannel out;

  public org.apache.tomcat.util.buf.ByteChunk();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/tomcat/util/buf/AbstractChunk."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/ByteChunk$ByteInputChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      14: return

  public org.apache.tomcat.util.buf.ByteChunk(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/tomcat/util/buf/AbstractChunk."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/ByteChunk$ByteInputChannel;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      14: aload_0
      15: iload_1
      16: iconst_m1
      17: invokevirtual #4                  // Method allocate:(II)V
      20: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #6                  // Method getCharset:()Ljava/nio/charset/Charset;
       9: invokevirtual #7                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      12: invokevirtual #8                  // Method java/io/ObjectOutputStream.writeUTF:(Ljava/lang/String;)V
      15: return

  private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #10                 // Method java/io/ObjectInputStream.readUTF:()Ljava/lang/String;
       9: invokestatic  #11                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      12: putfield      #12                 // Field charset:Ljava/nio/charset/Charset;
      15: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public void recycle();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/apache/tomcat/util/buf/AbstractChunk.recycle:()V
       4: aload_0
       5: aconst_null
       6: putfield      #12                 // Field charset:Ljava/nio/charset/Charset;
       9: return

  public void allocate(int, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: ifnull        16
       7: aload_0
       8: getfield      #15                 // Field buff:[B
      11: arraylength
      12: iload_1
      13: if_icmpge     23
      16: aload_0
      17: iload_1
      18: newarray       byte
      20: putfield      #15                 // Field buff:[B
      23: aload_0
      24: iload_2
      25: invokevirtual #16                 // Method setLimit:(I)V
      28: aload_0
      29: iconst_0
      30: putfield      #17                 // Field start:I
      33: aload_0
      34: iconst_0
      35: putfield      #18                 // Field end:I
      38: aload_0
      39: iconst_1
      40: putfield      #19                 // Field isSet:Z
      43: aload_0
      44: iconst_0
      45: putfield      #20                 // Field hasHashCode:Z
      48: return

  public void setBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field buff:[B
       5: aload_0
       6: iload_2
       7: putfield      #17                 // Field start:I
      10: aload_0
      11: aload_0
      12: getfield      #17                 // Field start:I
      15: iload_3
      16: iadd
      17: putfield      #18                 // Field end:I
      20: aload_0
      21: iconst_1
      22: putfield      #19                 // Field isSet:Z
      25: aload_0
      26: iconst_0
      27: putfield      #20                 // Field hasHashCode:Z
      30: return

  public void setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field charset:Ljava/nio/charset/Charset;
       5: return

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #12                 // Field charset:Ljava/nio/charset/Charset;
       4: ifnonnull     14
       7: aload_0
       8: getstatic     #21                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      11: putfield      #12                 // Field charset:Ljava/nio/charset/Charset;
      14: aload_0
      15: getfield      #12                 // Field charset:Ljava/nio/charset/Charset;
      18: areturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getBuffer:()[B
       4: areturn

  public byte[] getBuffer();
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: areturn

  public void setByteInputChannel(org.apache.tomcat.util.buf.ByteChunk$ByteInputChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/ByteChunk$ByteInputChannel;
       5: return

  public void setByteOutputChannel(org.apache.tomcat.util.buf.ByteChunk$ByteOutputChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
       5: return

  public void append(byte) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #23                 // Method makeSpace:(I)V
       5: aload_0
       6: invokevirtual #24                 // Method getLimitInternal:()I
       9: istore_2
      10: aload_0
      11: getfield      #18                 // Field end:I
      14: iload_2
      15: if_icmplt     22
      18: aload_0
      19: invokevirtual #25                 // Method flushBuffer:()V
      22: aload_0
      23: getfield      #15                 // Field buff:[B
      26: aload_0
      27: dup
      28: getfield      #18                 // Field end:I
      31: dup_x1
      32: iconst_1
      33: iadd
      34: putfield      #18                 // Field end:I
      37: iload_1
      38: bastore
      39: return

  public void append(org.apache.tomcat.util.buf.ByteChunk) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method getBytes:()[B
       5: aload_1
       6: invokevirtual #27                 // Method getStart:()I
       9: aload_1
      10: invokevirtual #28                 // Method getLength:()I
      13: invokevirtual #29                 // Method append:([BII)V
      16: return

  public void append(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #23                 // Method makeSpace:(I)V
       5: aload_0
       6: invokevirtual #24                 // Method getLimitInternal:()I
       9: istore        4
      11: iload_3
      12: iload         4
      14: if_icmpne     48
      17: aload_0
      18: getfield      #18                 // Field end:I
      21: aload_0
      22: getfield      #17                 // Field start:I
      25: if_icmpne     48
      28: aload_0
      29: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      32: ifnull        48
      35: aload_0
      36: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      39: aload_1
      40: iload_2
      41: iload_3
      42: invokeinterface #30,  4           // InterfaceMethod org/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel.realWriteBytes:([BII)V
      47: return
      48: iload_3
      49: iload         4
      51: aload_0
      52: getfield      #18                 // Field end:I
      55: isub
      56: if_icmpgt     84
      59: aload_1
      60: iload_2
      61: aload_0
      62: getfield      #15                 // Field buff:[B
      65: aload_0
      66: getfield      #18                 // Field end:I
      69: iload_3
      70: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: dup
      75: getfield      #18                 // Field end:I
      78: iload_3
      79: iadd
      80: putfield      #18                 // Field end:I
      83: return
      84: iload         4
      86: aload_0
      87: getfield      #18                 // Field end:I
      90: isub
      91: istore        5
      93: aload_1
      94: iload_2
      95: aload_0
      96: getfield      #15                 // Field buff:[B
      99: aload_0
     100: getfield      #18                 // Field end:I
     103: iload         5
     105: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     108: aload_0
     109: dup
     110: getfield      #18                 // Field end:I
     113: iload         5
     115: iadd
     116: putfield      #18                 // Field end:I
     119: aload_0
     120: invokevirtual #25                 // Method flushBuffer:()V
     123: iload_3
     124: iload         5
     126: isub
     127: istore        6
     129: iload         6
     131: iload         4
     133: aload_0
     134: getfield      #18                 // Field end:I
     137: isub
     138: if_icmple     179
     141: aload_0
     142: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
     145: aload_1
     146: iload_2
     147: iload_3
     148: iadd
     149: iload         6
     151: isub
     152: iload         4
     154: aload_0
     155: getfield      #18                 // Field end:I
     158: isub
     159: invokeinterface #30,  4           // InterfaceMethod org/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel.realWriteBytes:([BII)V
     164: iload         6
     166: iload         4
     168: aload_0
     169: getfield      #18                 // Field end:I
     172: isub
     173: isub
     174: istore        6
     176: goto          129
     179: aload_1
     180: iload_2
     181: iload_3
     182: iadd
     183: iload         6
     185: isub
     186: aload_0
     187: getfield      #15                 // Field buff:[B
     190: aload_0
     191: getfield      #18                 // Field end:I
     194: iload         6
     196: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     199: aload_0
     200: dup
     201: getfield      #18                 // Field end:I
     204: iload         6
     206: iadd
     207: putfield      #18                 // Field end:I
     210: return

  public void append(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokevirtual #23                 // Method makeSpace:(I)V
      10: aload_0
      11: invokevirtual #24                 // Method getLimitInternal:()I
      14: istore_3
      15: iload_2
      16: iload_3
      17: if_icmpne     58
      20: aload_0
      21: getfield      #18                 // Field end:I
      24: aload_0
      25: getfield      #17                 // Field start:I
      28: if_icmpne     58
      31: aload_0
      32: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      35: ifnull        58
      38: aload_0
      39: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      42: aload_1
      43: invokeinterface #33,  2           // InterfaceMethod org/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel.realWriteBytes:(Ljava/nio/ByteBuffer;)V
      48: aload_1
      49: aload_1
      50: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:()I
      53: invokevirtual #35                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      56: pop
      57: return
      58: iload_2
      59: iload_3
      60: aload_0
      61: getfield      #18                 // Field end:I
      64: isub
      65: if_icmpgt     93
      68: aload_1
      69: aload_0
      70: getfield      #15                 // Field buff:[B
      73: aload_0
      74: getfield      #18                 // Field end:I
      77: iload_2
      78: invokevirtual #36                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      81: pop
      82: aload_0
      83: dup
      84: getfield      #18                 // Field end:I
      87: iload_2
      88: iadd
      89: putfield      #18                 // Field end:I
      92: return
      93: iload_3
      94: aload_0
      95: getfield      #18                 // Field end:I
      98: isub
      99: istore        4
     101: aload_1
     102: aload_0
     103: getfield      #15                 // Field buff:[B
     106: aload_0
     107: getfield      #18                 // Field end:I
     110: iload         4
     112: invokevirtual #36                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     115: pop
     116: aload_0
     117: dup
     118: getfield      #18                 // Field end:I
     121: iload         4
     123: iadd
     124: putfield      #18                 // Field end:I
     127: aload_0
     128: invokevirtual #25                 // Method flushBuffer:()V
     131: aload_1
     132: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:()I
     135: istore        5
     137: iload_2
     138: iload         4
     140: isub
     141: istore        6
     143: iload_3
     144: aload_0
     145: getfield      #18                 // Field end:I
     148: isub
     149: istore        4
     151: iload         6
     153: iload         4
     155: if_icmplt     199
     158: aload_1
     159: aload_1
     160: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
     163: iload         4
     165: iadd
     166: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     169: pop
     170: aload_0
     171: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
     174: aload_1
     175: invokeinterface #33,  2           // InterfaceMethod org/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel.realWriteBytes:(Ljava/nio/ByteBuffer;)V
     180: aload_1
     181: aload_1
     182: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:()I
     185: invokevirtual #35                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     188: pop
     189: iload         6
     191: iload         4
     193: isub
     194: istore        6
     196: goto          151
     199: aload_1
     200: iload         5
     202: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     205: pop
     206: aload_1
     207: aload_0
     208: getfield      #15                 // Field buff:[B
     211: aload_0
     212: getfield      #18                 // Field end:I
     215: iload         6
     217: invokevirtual #36                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
     220: pop
     221: aload_0
     222: dup
     223: getfield      #18                 // Field end:I
     226: iload         6
     228: iadd
     229: putfield      #18                 // Field end:I
     232: return

  public int substract() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method checkEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #15                 // Field buff:[B
      13: aload_0
      14: dup
      15: getfield      #17                 // Field start:I
      18: dup_x1
      19: iconst_1
      20: iadd
      21: putfield      #17                 // Field start:I
      24: baload
      25: sipush        255
      28: iand
      29: ireturn

  public byte substractB() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method checkEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #15                 // Field buff:[B
      13: aload_0
      14: dup
      15: getfield      #17                 // Field start:I
      18: dup_x1
      19: iconst_1
      20: iadd
      21: putfield      #17                 // Field start:I
      24: baload
      25: ireturn

  public int substract(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method checkEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: iload_3
      10: istore        4
      12: iload_3
      13: aload_0
      14: invokevirtual #28                 // Method getLength:()I
      17: if_icmple     26
      20: aload_0
      21: invokevirtual #28                 // Method getLength:()I
      24: istore        4
      26: aload_0
      27: getfield      #15                 // Field buff:[B
      30: aload_0
      31: getfield      #17                 // Field start:I
      34: aload_1
      35: iload_2
      36: iload         4
      38: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_0
      42: dup
      43: getfield      #17                 // Field start:I
      46: iload         4
      48: iadd
      49: putfield      #17                 // Field start:I
      52: iload         4
      54: ireturn

  public int substract(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method checkEof:()Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_1
      10: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
      13: aload_0
      14: invokevirtual #28                 // Method getLength:()I
      17: invokestatic  #40                 // Method java/lang/Math.min:(II)I
      20: istore_2
      21: aload_1
      22: aload_0
      23: getfield      #15                 // Field buff:[B
      26: aload_0
      27: getfield      #17                 // Field start:I
      30: iload_2
      31: invokevirtual #41                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_1
      36: aload_1
      37: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      40: invokevirtual #38                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      43: pop
      44: aload_1
      45: aload_1
      46: invokevirtual #37                 // Method java/nio/ByteBuffer.position:()I
      49: iload_2
      50: isub
      51: invokevirtual #35                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      54: pop
      55: aload_0
      56: dup
      57: getfield      #17                 // Field start:I
      60: iload_2
      61: iadd
      62: putfield      #17                 // Field start:I
      65: iload_2
      66: ireturn

  private boolean checkEof() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field end:I
       4: aload_0
       5: getfield      #17                 // Field start:I
       8: isub
       9: ifne          37
      12: aload_0
      13: getfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/ByteChunk$ByteInputChannel;
      16: ifnonnull     21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: getfield      #2                  // Field in:Lorg/apache/tomcat/util/buf/ByteChunk$ByteInputChannel;
      25: invokeinterface #42,  1           // InterfaceMethod org/apache/tomcat/util/buf/ByteChunk$ByteInputChannel.realReadBytes:()I
      30: istore_1
      31: iload_1
      32: ifge          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
       4: ifnonnull     50
       7: new           #43                 // class java/io/IOException
      10: dup
      11: new           #44                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #46                 // String Buffer overflow, no sink
      20: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #48                 // Method getLimit:()I
      27: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #50                 // String
      32: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #15                 // Field buff:[B
      39: arraylength
      40: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #52                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #3                  // Field out:Lorg/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel;
      54: aload_0
      55: getfield      #15                 // Field buff:[B
      58: aload_0
      59: getfield      #17                 // Field start:I
      62: aload_0
      63: getfield      #18                 // Field end:I
      66: aload_0
      67: getfield      #17                 // Field start:I
      70: isub
      71: invokeinterface #30,  4           // InterfaceMethod org/apache/tomcat/util/buf/ByteChunk$ByteOutputChannel.realWriteBytes:([BII)V
      76: aload_0
      77: aload_0
      78: getfield      #17                 // Field start:I
      81: putfield      #18                 // Field end:I
      84: return

  public void makeSpace(int);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #24                 // Method getLimitInternal:()I
       6: istore_3
       7: aload_0
       8: getfield      #18                 // Field end:I
      11: iload_1
      12: iadd
      13: i2l
      14: lstore        6
      16: lload         6
      18: iload_3
      19: i2l
      20: lcmp
      21: ifle          28
      24: iload_3
      25: i2l
      26: lstore        6
      28: aload_0
      29: getfield      #15                 // Field buff:[B
      32: ifnonnull     58
      35: lload         6
      37: ldc2_w        #53                 // long 256l
      40: lcmp
      41: ifge          49
      44: ldc2_w        #53                 // long 256l
      47: lstore        6
      49: aload_0
      50: lload         6
      52: l2i
      53: newarray       byte
      55: putfield      #15                 // Field buff:[B
      58: lload         6
      60: aload_0
      61: getfield      #15                 // Field buff:[B
      64: arraylength
      65: i2l
      66: lcmp
      67: ifgt          71
      70: return
      71: lload         6
      73: ldc2_w        #55                 // long 2l
      76: aload_0
      77: getfield      #15                 // Field buff:[B
      80: arraylength
      81: i2l
      82: lmul
      83: lcmp
      84: ifge          102
      87: aload_0
      88: getfield      #15                 // Field buff:[B
      91: arraylength
      92: i2l
      93: ldc2_w        #55                 // long 2l
      96: lmul
      97: lstore        4
      99: goto          117
     102: aload_0
     103: getfield      #15                 // Field buff:[B
     106: arraylength
     107: i2l
     108: ldc2_w        #55                 // long 2l
     111: lmul
     112: iload_1
     113: i2l
     114: ladd
     115: lstore        4
     117: lload         4
     119: iload_3
     120: i2l
     121: lcmp
     122: ifle          129
     125: iload_3
     126: i2l
     127: lstore        4
     129: lload         4
     131: l2i
     132: newarray       byte
     134: astore_2
     135: aload_0
     136: getfield      #15                 // Field buff:[B
     139: aload_0
     140: getfield      #17                 // Field start:I
     143: aload_2
     144: iconst_0
     145: aload_0
     146: getfield      #18                 // Field end:I
     149: aload_0
     150: getfield      #17                 // Field start:I
     153: isub
     154: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     157: aload_0
     158: aload_2
     159: putfield      #15                 // Field buff:[B
     162: aconst_null
     163: astore_2
     164: aload_0
     165: aload_0
     166: getfield      #18                 // Field end:I
     169: aload_0
     170: getfield      #17                 // Field start:I
     173: isub
     174: putfield      #18                 // Field end:I
     177: aload_0
     178: iconst_0
     179: putfield      #17                 // Field start:I
     182: return

  public java.lang.String toString();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #15                 // Field buff:[B
       5: if_acmpne     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #18                 // Field end:I
      14: aload_0
      15: getfield      #17                 // Field start:I
      18: isub
      19: ifne          25
      22: ldc           #57                 // String
      24: areturn
      25: aload_0
      26: invokestatic  #58                 // Method org/apache/tomcat/util/buf/StringCache.toString:(Lorg/apache/tomcat/util/buf/ByteChunk;)Ljava/lang/String;
      29: areturn

  public java.lang.String toStringInternal();
    Code:
       0: aload_0
       1: getfield      #12                 // Field charset:Ljava/nio/charset/Charset;
       4: ifnonnull     14
       7: aload_0
       8: getstatic     #21                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      11: putfield      #12                 // Field charset:Ljava/nio/charset/Charset;
      14: aload_0
      15: getfield      #12                 // Field charset:Ljava/nio/charset/Charset;
      18: aload_0
      19: getfield      #15                 // Field buff:[B
      22: aload_0
      23: getfield      #17                 // Field start:I
      26: aload_0
      27: getfield      #18                 // Field end:I
      30: aload_0
      31: getfield      #17                 // Field start:I
      34: isub
      35: invokestatic  #59                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      38: invokevirtual #60                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      41: astore_1
      42: new           #61                 // class java/lang/String
      45: dup
      46: aload_1
      47: invokevirtual #62                 // Method java/nio/CharBuffer.array:()[C
      50: aload_1
      51: invokevirtual #63                 // Method java/nio/CharBuffer.arrayOffset:()I
      54: aload_1
      55: invokevirtual #64                 // Method java/nio/CharBuffer.length:()I
      58: invokespecial #65                 // Method java/lang/String."<init>":([CII)V
      61: areturn

  public long getLong();
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: aload_0
       5: getfield      #17                 // Field start:I
       8: aload_0
       9: getfield      #18                 // Field end:I
      12: aload_0
      13: getfield      #17                 // Field start:I
      16: isub
      17: invokestatic  #66                 // Method org/apache/tomcat/util/buf/Ascii.parseLong:([BII)J
      20: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #67                 // class org/apache/tomcat/util/buf/ByteChunk
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #67                 // class org/apache/tomcat/util/buf/ByteChunk
      12: invokevirtual #68                 // Method equals:(Lorg/apache/tomcat/util/buf/ByteChunk;)Z
      15: ireturn
      16: iconst_0
      17: ireturn

  public boolean equals(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: astore_2
       5: aload_0
       6: getfield      #18                 // Field end:I
       9: aload_0
      10: getfield      #17                 // Field start:I
      13: isub
      14: istore_3
      15: aload_2
      16: ifnull        27
      19: iload_3
      20: aload_1
      21: invokevirtual #69                 // Method java/lang/String.length:()I
      24: if_icmpeq     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #17                 // Field start:I
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     68
      44: aload_2
      45: iload         4
      47: iinc          4, 1
      50: baload
      51: aload_1
      52: iload         5
      54: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      57: if_icmpeq     62
      60: iconst_0
      61: ireturn
      62: iinc          5, 1
      65: goto          38
      68: iconst_1
      69: ireturn

  public boolean equalsIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: astore_2
       5: aload_0
       6: getfield      #18                 // Field end:I
       9: aload_0
      10: getfield      #17                 // Field start:I
      13: isub
      14: istore_3
      15: aload_2
      16: ifnull        27
      19: iload_3
      20: aload_1
      21: invokevirtual #69                 // Method java/lang/String.length:()I
      24: if_icmpeq     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: getfield      #17                 // Field start:I
      33: istore        4
      35: iconst_0
      36: istore        5
      38: iload         5
      40: iload_3
      41: if_icmpge     74
      44: aload_2
      45: iload         4
      47: iinc          4, 1
      50: baload
      51: invokestatic  #71                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      54: aload_1
      55: iload         5
      57: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      60: invokestatic  #71                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      63: if_icmpeq     68
      66: iconst_0
      67: ireturn
      68: iinc          5, 1
      71: goto          38
      74: iconst_1
      75: ireturn

  public boolean equals(org.apache.tomcat.util.buf.ByteChunk);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method getBytes:()[B
       5: aload_1
       6: invokevirtual #27                 // Method getStart:()I
       9: aload_1
      10: invokevirtual #28                 // Method getLength:()I
      13: invokevirtual #72                 // Method equals:([BII)Z
      16: ireturn

  public boolean equals(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: astore        4
       6: aload         4
       8: ifnonnull     17
      11: aload_1
      12: ifnonnull     17
      15: iconst_1
      16: ireturn
      17: aload_0
      18: getfield      #18                 // Field end:I
      21: aload_0
      22: getfield      #17                 // Field start:I
      25: isub
      26: istore        5
      28: iload         5
      30: iload_3
      31: if_icmpne     43
      34: aload         4
      36: ifnull        43
      39: aload_1
      40: ifnonnull     45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #17                 // Field start:I
      49: istore        6
      51: iload         5
      53: iinc          5, -1
      56: ifle          78
      59: aload         4
      61: iload         6
      63: iinc          6, 1
      66: baload
      67: aload_1
      68: iload_2
      69: iinc          2, 1
      72: baload
      73: if_icmpeq     51
      76: iconst_0
      77: ireturn
      78: iconst_1
      79: ireturn

  public boolean equals(org.apache.tomcat.util.buf.CharChunk);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method org/apache/tomcat/util/buf/CharChunk.getChars:()[C
       5: aload_1
       6: invokevirtual #74                 // Method org/apache/tomcat/util/buf/CharChunk.getStart:()I
       9: aload_1
      10: invokevirtual #75                 // Method org/apache/tomcat/util/buf/CharChunk.getLength:()I
      13: invokevirtual #76                 // Method equals:([CII)Z
      16: ireturn

  public boolean equals(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: astore        4
       6: aload_1
       7: ifnonnull     17
      10: aload         4
      12: ifnonnull     17
      15: iconst_1
      16: ireturn
      17: aload         4
      19: ifnull        39
      22: aload_1
      23: ifnull        39
      26: aload_0
      27: getfield      #18                 // Field end:I
      30: aload_0
      31: getfield      #17                 // Field start:I
      34: isub
      35: iload_3
      36: if_icmpeq     41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #17                 // Field start:I
      45: istore        5
      47: aload_0
      48: getfield      #18                 // Field end:I
      51: aload_0
      52: getfield      #17                 // Field start:I
      55: isub
      56: istore        6
      58: iload         6
      60: iinc          6, -1
      63: ifle          86
      66: aload         4
      68: iload         5
      70: iinc          5, 1
      73: baload
      74: i2c
      75: aload_1
      76: iload_2
      77: iinc          2, 1
      80: caload
      81: if_icmpeq     58
      84: iconst_0
      85: ireturn
      86: iconst_1
      87: ireturn

  public boolean startsWithIgnoreCase(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: astore_3
       5: aload_1
       6: invokevirtual #69                 // Method java/lang/String.length:()I
       9: istore        4
      11: aload_3
      12: ifnull        31
      15: iload         4
      17: iload_2
      18: iadd
      19: aload_0
      20: getfield      #18                 // Field end:I
      23: aload_0
      24: getfield      #17                 // Field start:I
      27: isub
      28: if_icmple     33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: getfield      #17                 // Field start:I
      37: iload_2
      38: iadd
      39: istore        5
      41: iconst_0
      42: istore        6
      44: iload         6
      46: iload         4
      48: if_icmpge     81
      51: aload_3
      52: iload         5
      54: iinc          5, 1
      57: baload
      58: invokestatic  #71                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      61: aload_1
      62: iload         6
      64: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      67: invokestatic  #71                 // Method org/apache/tomcat/util/buf/Ascii.toLower:(I)I
      70: if_icmpeq     75
      73: iconst_0
      74: ireturn
      75: iinc          6, 1
      78: goto          44
      81: iconst_1
      82: ireturn

  protected int getBufferElement(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: iload_1
       5: baload
       6: ireturn

  public int indexOf(char, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field buff:[B
       4: aload_0
       5: getfield      #17                 // Field start:I
       8: iload_2
       9: iadd
      10: aload_0
      11: getfield      #18                 // Field end:I
      14: iload_1
      15: invokestatic  #77                 // Method indexOf:([BIIC)I
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #17                 // Field start:I
      24: if_icmplt     36
      27: iload_3
      28: aload_0
      29: getfield      #17                 // Field start:I
      32: isub
      33: goto          37
      36: iconst_m1
      37: ireturn

  public static int indexOf(byte[], int, int, char);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: iload_2
       6: if_icmpge     30
       9: aload_0
      10: iload         4
      12: baload
      13: istore        5
      15: iload         5
      17: iload_3
      18: if_icmpne     24
      21: iload         4
      23: ireturn
      24: iinc          4, 1
      27: goto          3
      30: iconst_m1
      31: ireturn

  public static int findByte(byte[], int, int, byte);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: iload_2
       6: if_icmpge     26
       9: aload_0
      10: iload         4
      12: baload
      13: iload_3
      14: if_icmpne     20
      17: iload         4
      19: ireturn
      20: iinc          4, 1
      23: goto          3
      26: iconst_m1
      27: ireturn

  public static int findBytes(byte[], int, int, byte[]);
    Code:
       0: aload_3
       1: arraylength
       2: istore        4
       4: iload_1
       5: istore        5
       7: iload         5
       9: iload_2
      10: if_icmpge     49
      13: iconst_0
      14: istore        6
      16: iload         6
      18: iload         4
      20: if_icmpge     43
      23: aload_0
      24: iload         5
      26: baload
      27: aload_3
      28: iload         6
      30: baload
      31: if_icmpne     37
      34: iload         5
      36: ireturn
      37: iinc          6, 1
      40: goto          16
      43: iinc          5, 1
      46: goto          7
      49: iconst_m1
      50: ireturn

  public static final byte[] convertToBytes(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method java/lang/String.length:()I
       4: newarray       byte
       6: astore_1
       7: iconst_0
       8: istore_2
       9: iload_2
      10: aload_0
      11: invokevirtual #69                 // Method java/lang/String.length:()I
      14: if_icmpge     32
      17: aload_1
      18: iload_2
      19: aload_0
      20: iload_2
      21: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      24: i2b
      25: bastore
      26: iinc          2, 1
      29: goto          9
      32: aload_1
      33: areturn

  static {};
    Code:
       0: getstatic     #78                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       3: putstatic     #21                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: return
}
