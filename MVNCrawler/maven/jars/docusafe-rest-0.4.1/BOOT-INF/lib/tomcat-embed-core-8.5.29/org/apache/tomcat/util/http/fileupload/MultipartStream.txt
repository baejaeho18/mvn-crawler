Compiled from "MultipartStream.java"
public class org.apache.tomcat.util.http.fileupload.MultipartStream {
  public static final byte CR;

  public static final byte LF;

  public static final byte DASH;

  public static final int HEADER_PART_SIZE_MAX;

  protected static final int DEFAULT_BUFSIZE;

  protected static final byte[] HEADER_SEPARATOR;

  protected static final byte[] FIELD_SEPARATOR;

  protected static final byte[] STREAM_TERMINATOR;

  protected static final byte[] BOUNDARY_PREFIX;

  private final java.io.InputStream input;

  private int boundaryLength;

  private final int keepRegion;

  private final byte[] boundary;

  private int[] boundaryTable;

  private final int bufSize;

  private final byte[] buffer;

  private int head;

  private int tail;

  private java.lang.String headerEncoding;

  private final org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier notifier;

  public org.apache.tomcat.util.http.fileupload.MultipartStream(java.io.InputStream, byte[], int, org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: ifnonnull     18
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #10                 // String boundary may not be null
      14: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_2
      20: arraylength
      21: getstatic     #12                 // Field BOUNDARY_PREFIX:[B
      24: arraylength
      25: iadd
      26: putfield      #13                 // Field boundaryLength:I
      29: iload_3
      30: aload_0
      31: getfield      #13                 // Field boundaryLength:I
      34: iconst_1
      35: iadd
      36: if_icmpge     49
      39: new           #9                  // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #14                 // String The buffer size specified for the MultipartStream is too small
      45: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_1
      51: putfield      #3                  // Field input:Ljava/io/InputStream;
      54: aload_0
      55: iload_3
      56: aload_0
      57: getfield      #13                 // Field boundaryLength:I
      60: iconst_2
      61: imul
      62: invokestatic  #15                 // Method java/lang/Math.max:(II)I
      65: putfield      #2                  // Field bufSize:I
      68: aload_0
      69: aload_0
      70: getfield      #2                  // Field bufSize:I
      73: newarray       byte
      75: putfield      #4                  // Field buffer:[B
      78: aload_0
      79: aload         4
      81: putfield      #1                  // Field notifier:Lorg/apache/tomcat/util/http/fileupload/MultipartStream$ProgressNotifier;
      84: aload_0
      85: aload_0
      86: getfield      #13                 // Field boundaryLength:I
      89: newarray       byte
      91: putfield      #16                 // Field boundary:[B
      94: aload_0
      95: aload_0
      96: getfield      #13                 // Field boundaryLength:I
      99: iconst_1
     100: iadd
     101: newarray       int
     103: putfield      #17                 // Field boundaryTable:[I
     106: aload_0
     107: aload_0
     108: getfield      #16                 // Field boundary:[B
     111: arraylength
     112: putfield      #5                  // Field keepRegion:I
     115: getstatic     #12                 // Field BOUNDARY_PREFIX:[B
     118: iconst_0
     119: aload_0
     120: getfield      #16                 // Field boundary:[B
     123: iconst_0
     124: getstatic     #12                 // Field BOUNDARY_PREFIX:[B
     127: arraylength
     128: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     131: aload_2
     132: iconst_0
     133: aload_0
     134: getfield      #16                 // Field boundary:[B
     137: getstatic     #12                 // Field BOUNDARY_PREFIX:[B
     140: arraylength
     141: aload_2
     142: arraylength
     143: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     146: aload_0
     147: invokespecial #19                 // Method computeBoundaryTable:()V
     150: aload_0
     151: iconst_0
     152: putfield      #6                  // Field head:I
     155: aload_0
     156: iconst_0
     157: putfield      #7                  // Field tail:I
     160: return

  org.apache.tomcat.util.http.fileupload.MultipartStream(java.io.InputStream, byte[], org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        4096
       6: aload_3
       7: invokespecial #20                 // Method "<init>":(Ljava/io/InputStream;[BILorg/apache/tomcat/util/http/fileupload/MultipartStream$ProgressNotifier;)V
      10: return

  public java.lang.String getHeaderEncoding();
    Code:
       0: aload_0
       1: getfield      #21                 // Field headerEncoding:Ljava/lang/String;
       4: areturn

  public void setHeaderEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field headerEncoding:Ljava/lang/String;
       5: return

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:I
       4: aload_0
       5: getfield      #7                  // Field tail:I
       8: if_icmpne     75
      11: aload_0
      12: iconst_0
      13: putfield      #6                  // Field head:I
      16: aload_0
      17: aload_0
      18: getfield      #3                  // Field input:Ljava/io/InputStream;
      21: aload_0
      22: getfield      #4                  // Field buffer:[B
      25: aload_0
      26: getfield      #6                  // Field head:I
      29: aload_0
      30: getfield      #2                  // Field bufSize:I
      33: invokevirtual #22                 // Method java/io/InputStream.read:([BII)I
      36: putfield      #7                  // Field tail:I
      39: aload_0
      40: getfield      #7                  // Field tail:I
      43: iconst_m1
      44: if_icmpne     57
      47: new           #23                 // class java/io/IOException
      50: dup
      51: ldc           #24                 // String No more data is available
      53: invokespecial #25                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: getfield      #1                  // Field notifier:Lorg/apache/tomcat/util/http/fileupload/MultipartStream$ProgressNotifier;
      61: ifnull        75
      64: aload_0
      65: getfield      #1                  // Field notifier:Lorg/apache/tomcat/util/http/fileupload/MultipartStream$ProgressNotifier;
      68: aload_0
      69: getfield      #7                  // Field tail:I
      72: invokevirtual #26                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$ProgressNotifier.noteBytesRead:(I)V
      75: aload_0
      76: getfield      #4                  // Field buffer:[B
      79: aload_0
      80: dup
      81: getfield      #6                  // Field head:I
      84: dup_x1
      85: iconst_1
      86: iadd
      87: putfield      #6                  // Field head:I
      90: baload
      91: ireturn

  public boolean readBoundary() throws org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException, org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException;
    Code:
       0: iconst_2
       1: newarray       byte
       3: astore_1
       4: iconst_0
       5: istore_2
       6: aload_0
       7: dup
       8: getfield      #6                  // Field head:I
      11: aload_0
      12: getfield      #13                 // Field boundaryLength:I
      15: iadd
      16: putfield      #6                  // Field head:I
      19: aload_1
      20: iconst_0
      21: aload_0
      22: invokevirtual #27                 // Method readByte:()B
      25: bastore
      26: aload_1
      27: iconst_0
      28: baload
      29: bipush        10
      31: if_icmpne     36
      34: iconst_1
      35: ireturn
      36: aload_1
      37: iconst_1
      38: aload_0
      39: invokevirtual #27                 // Method readByte:()B
      42: bastore
      43: aload_1
      44: getstatic     #28                 // Field STREAM_TERMINATOR:[B
      47: iconst_2
      48: invokestatic  #29                 // Method arrayequals:([B[BI)Z
      51: ifeq          59
      54: iconst_0
      55: istore_2
      56: goto          85
      59: aload_1
      60: getstatic     #30                 // Field FIELD_SEPARATOR:[B
      63: iconst_2
      64: invokestatic  #29                 // Method arrayequals:([B[BI)Z
      67: ifeq          75
      70: iconst_1
      71: istore_2
      72: goto          85
      75: new           #31                 // class org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException
      78: dup
      79: ldc           #32                 // String Unexpected characters follow a boundary
      81: invokespecial #33                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: goto          102
      88: astore_3
      89: aload_3
      90: athrow
      91: astore_3
      92: new           #31                 // class org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException
      95: dup
      96: ldc           #35                 // String Stream ended unexpectedly
      98: invokespecial #33                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: iload_2
     103: ireturn
    Exception table:
       from    to  target type
          19    35    88   Class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException
          36    85    88   Class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException
          19    35    91   Class java/io/IOException
          36    85    91   Class java/io/IOException

  public void setBoundary(byte[]) throws org.apache.tomcat.util.http.fileupload.MultipartStream$IllegalBoundaryException;
    Code:
       0: aload_1
       1: arraylength
       2: aload_0
       3: getfield      #13                 // Field boundaryLength:I
       6: getstatic     #12                 // Field BOUNDARY_PREFIX:[B
       9: arraylength
      10: isub
      11: if_icmpeq     24
      14: new           #36                 // class org/apache/tomcat/util/http/fileupload/MultipartStream$IllegalBoundaryException
      17: dup
      18: ldc           #37                 // String The length of a boundary token cannot be changed
      20: invokespecial #38                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$IllegalBoundaryException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: iconst_0
      26: aload_0
      27: getfield      #16                 // Field boundary:[B
      30: getstatic     #12                 // Field BOUNDARY_PREFIX:[B
      33: arraylength
      34: aload_1
      35: arraylength
      36: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload_0
      40: invokespecial #19                 // Method computeBoundaryTable:()V
      43: return

  private void computeBoundaryTable();
    Code:
       0: iconst_2
       1: istore_1
       2: iconst_0
       3: istore_2
       4: aload_0
       5: getfield      #17                 // Field boundaryTable:[I
       8: iconst_0
       9: iconst_m1
      10: iastore
      11: aload_0
      12: getfield      #17                 // Field boundaryTable:[I
      15: iconst_1
      16: iconst_0
      17: iastore
      18: iload_1
      19: aload_0
      20: getfield      #13                 // Field boundaryLength:I
      23: if_icmpgt     88
      26: aload_0
      27: getfield      #16                 // Field boundary:[B
      30: iload_1
      31: iconst_1
      32: isub
      33: baload
      34: aload_0
      35: getfield      #16                 // Field boundary:[B
      38: iload_2
      39: baload
      40: if_icmpne     61
      43: aload_0
      44: getfield      #17                 // Field boundaryTable:[I
      47: iload_1
      48: iload_2
      49: iconst_1
      50: iadd
      51: iastore
      52: iinc          2, 1
      55: iinc          1, 1
      58: goto          18
      61: iload_2
      62: ifle          75
      65: aload_0
      66: getfield      #17                 // Field boundaryTable:[I
      69: iload_2
      70: iaload
      71: istore_2
      72: goto          18
      75: aload_0
      76: getfield      #17                 // Field boundaryTable:[I
      79: iload_1
      80: iconst_0
      81: iastore
      82: iinc          1, 1
      85: goto          18
      88: return

  public java.lang.String readHeaders() throws org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException, org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException;
    Code:
       0: iconst_0
       1: istore_1
       2: new           #39                 // class java/io/ByteArrayOutputStream
       5: dup
       6: invokespecial #40                 // Method java/io/ByteArrayOutputStream."<init>":()V
       9: astore_3
      10: iconst_0
      11: istore        4
      13: iload_1
      14: getstatic     #41                 // Field HEADER_SEPARATOR:[B
      17: arraylength
      18: if_icmpge     108
      21: aload_0
      22: invokevirtual #27                 // Method readByte:()B
      25: istore_2
      26: goto          46
      29: astore        5
      31: aload         5
      33: athrow
      34: astore        5
      36: new           #31                 // class org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException
      39: dup
      40: ldc           #35                 // String Stream ended unexpectedly
      42: invokespecial #33                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: iinc          4, 1
      49: iload         4
      51: sipush        10240
      54: if_icmple     83
      57: new           #31                 // class org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException
      60: dup
      61: ldc           #42                 // String Header section has more than %s bytes (maybe it is not properly terminated)
      63: iconst_1
      64: anewarray     #43                 // class java/lang/Object
      67: dup
      68: iconst_0
      69: sipush        10240
      72: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: aastore
      76: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      79: invokespecial #33                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: iload_2
      84: getstatic     #41                 // Field HEADER_SEPARATOR:[B
      87: iload_1
      88: baload
      89: if_icmpne     98
      92: iinc          1, 1
      95: goto          100
      98: iconst_0
      99: istore_1
     100: aload_3
     101: iload_2
     102: invokevirtual #46                 // Method java/io/ByteArrayOutputStream.write:(I)V
     105: goto          13
     108: aconst_null
     109: astore        5
     111: aload_0
     112: getfield      #21                 // Field headerEncoding:Ljava/lang/String;
     115: ifnull        142
     118: aload_3
     119: aload_0
     120: getfield      #21                 // Field headerEncoding:Ljava/lang/String;
     123: invokevirtual #47                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
     126: astore        5
     128: goto          148
     131: astore        6
     133: aload_3
     134: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
     137: astore        5
     139: goto          148
     142: aload_3
     143: invokevirtual #49                 // Method java/io/ByteArrayOutputStream.toString:()Ljava/lang/String;
     146: astore        5
     148: aload         5
     150: areturn
    Exception table:
       from    to  target type
          21    26    29   Class org/apache/tomcat/util/http/fileupload/FileUploadBase$FileUploadIOException
          21    26    34   Class java/io/IOException
         118   128   131   Class java/io/UnsupportedEncodingException

  public int readBodyData(java.io.OutputStream) throws org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method newInputStream:()Lorg/apache/tomcat/util/http/fileupload/MultipartStream$ItemInputStream;
       4: aload_1
       5: iconst_0
       6: invokestatic  #51                 // Method org/apache/tomcat/util/http/fileupload/util/Streams.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;Z)J
       9: l2i
      10: ireturn

  org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream newInputStream();
    Code:
       0: new           #52                 // class org/apache/tomcat/util/http/fileupload/MultipartStream$ItemInputStream
       3: dup
       4: aload_0
       5: invokespecial #53                 // Method org/apache/tomcat/util/http/fileupload/MultipartStream$ItemInputStream."<init>":(Lorg/apache/tomcat/util/http/fileupload/MultipartStream;)V
       8: areturn

  public int discardBodyData() throws org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException, java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #54                 // Method readBodyData:(Ljava/io/OutputStream;)I
       5: ireturn

  public boolean skipPreamble() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field boundary:[B
       4: iconst_2
       5: aload_0
       6: getfield      #16                 // Field boundary:[B
       9: iconst_0
      10: aload_0
      11: getfield      #16                 // Field boundary:[B
      14: arraylength
      15: iconst_2
      16: isub
      17: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_0
      21: aload_0
      22: getfield      #16                 // Field boundary:[B
      25: arraylength
      26: iconst_2
      27: isub
      28: putfield      #13                 // Field boundaryLength:I
      31: aload_0
      32: invokespecial #19                 // Method computeBoundaryTable:()V
      35: aload_0
      36: invokevirtual #55                 // Method discardBodyData:()I
      39: pop
      40: aload_0
      41: invokevirtual #56                 // Method readBoundary:()Z
      44: istore_1
      45: aload_0
      46: getfield      #16                 // Field boundary:[B
      49: iconst_0
      50: aload_0
      51: getfield      #16                 // Field boundary:[B
      54: iconst_2
      55: aload_0
      56: getfield      #16                 // Field boundary:[B
      59: arraylength
      60: iconst_2
      61: isub
      62: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      65: aload_0
      66: aload_0
      67: getfield      #16                 // Field boundary:[B
      70: arraylength
      71: putfield      #13                 // Field boundaryLength:I
      74: aload_0
      75: getfield      #16                 // Field boundary:[B
      78: iconst_0
      79: bipush        13
      81: bastore
      82: aload_0
      83: getfield      #16                 // Field boundary:[B
      86: iconst_1
      87: bipush        10
      89: bastore
      90: aload_0
      91: invokespecial #19                 // Method computeBoundaryTable:()V
      94: iload_1
      95: ireturn
      96: astore_1
      97: iconst_0
      98: istore_2
      99: aload_0
     100: getfield      #16                 // Field boundary:[B
     103: iconst_0
     104: aload_0
     105: getfield      #16                 // Field boundary:[B
     108: iconst_2
     109: aload_0
     110: getfield      #16                 // Field boundary:[B
     113: arraylength
     114: iconst_2
     115: isub
     116: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     119: aload_0
     120: aload_0
     121: getfield      #16                 // Field boundary:[B
     124: arraylength
     125: putfield      #13                 // Field boundaryLength:I
     128: aload_0
     129: getfield      #16                 // Field boundary:[B
     132: iconst_0
     133: bipush        13
     135: bastore
     136: aload_0
     137: getfield      #16                 // Field boundary:[B
     140: iconst_1
     141: bipush        10
     143: bastore
     144: aload_0
     145: invokespecial #19                 // Method computeBoundaryTable:()V
     148: iload_2
     149: ireturn
     150: astore_3
     151: aload_0
     152: getfield      #16                 // Field boundary:[B
     155: iconst_0
     156: aload_0
     157: getfield      #16                 // Field boundary:[B
     160: iconst_2
     161: aload_0
     162: getfield      #16                 // Field boundary:[B
     165: arraylength
     166: iconst_2
     167: isub
     168: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     171: aload_0
     172: aload_0
     173: getfield      #16                 // Field boundary:[B
     176: arraylength
     177: putfield      #13                 // Field boundaryLength:I
     180: aload_0
     181: getfield      #16                 // Field boundary:[B
     184: iconst_0
     185: bipush        13
     187: bastore
     188: aload_0
     189: getfield      #16                 // Field boundary:[B
     192: iconst_1
     193: bipush        10
     195: bastore
     196: aload_0
     197: invokespecial #19                 // Method computeBoundaryTable:()V
     200: aload_3
     201: athrow
    Exception table:
       from    to  target type
          35    45    96   Class org/apache/tomcat/util/http/fileupload/MultipartStream$MalformedStreamException
          35    45   150   any
          96    99   150   any
         150   151   150   any

  public static boolean arrayequals(byte[], byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     24
       7: aload_0
       8: iload_3
       9: baload
      10: aload_1
      11: iload_3
      12: baload
      13: if_icmpeq     18
      16: iconst_0
      17: ireturn
      18: iinc          3, 1
      21: goto          2
      24: iconst_1
      25: ireturn

  protected int findByte(byte, int);
    Code:
       0: iload_2
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #7                  // Field tail:I
       7: if_icmpge     28
      10: aload_0
      11: getfield      #4                  // Field buffer:[B
      14: iload_3
      15: baload
      16: iload_1
      17: if_icmpne     22
      20: iload_3
      21: ireturn
      22: iinc          3, 1
      25: goto          2
      28: iconst_m1
      29: ireturn

  protected int findSeparator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_1
       8: aload_0
       9: getfield      #7                  // Field tail:I
      12: if_icmpge     65
      15: iload_2
      16: iflt          44
      19: aload_0
      20: getfield      #4                  // Field buffer:[B
      23: iload_1
      24: baload
      25: aload_0
      26: getfield      #16                 // Field boundary:[B
      29: iload_2
      30: baload
      31: if_icmpeq     44
      34: aload_0
      35: getfield      #17                 // Field boundaryTable:[I
      38: iload_2
      39: iaload
      40: istore_2
      41: goto          15
      44: iinc          1, 1
      47: iinc          2, 1
      50: iload_2
      51: aload_0
      52: getfield      #13                 // Field boundaryLength:I
      55: if_icmpne     7
      58: iload_1
      59: aload_0
      60: getfield      #13                 // Field boundaryLength:I
      63: isub
      64: ireturn
      65: iconst_m1
      66: ireturn

  static int access$000(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #7                  // Field tail:I
       4: ireturn

  static int access$100(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #6                  // Field head:I
       4: ireturn

  static int access$200(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #5                  // Field keepRegion:I
       4: ireturn

  static byte[] access$300(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: areturn

  static int access$108(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field head:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #6                  // Field head:I
      11: ireturn

  static int access$112(org.apache.tomcat.util.http.fileupload.MultipartStream, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field head:I
       5: iload_1
       6: iadd
       7: dup_x1
       8: putfield      #6                  // Field head:I
      11: ireturn

  static java.io.InputStream access$400(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field input:Ljava/io/InputStream;
       4: areturn

  static int access$114(org.apache.tomcat.util.http.fileupload.MultipartStream, long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field head:I
       5: i2l
       6: lload_1
       7: ladd
       8: l2i
       9: dup_x1
      10: putfield      #6                  // Field head:I
      13: ireturn

  static int access$102(org.apache.tomcat.util.http.fileupload.MultipartStream, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field head:I
       6: ireturn

  static int access$002(org.apache.tomcat.util.http.fileupload.MultipartStream, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field tail:I
       6: ireturn

  static int access$500(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field bufSize:I
       4: ireturn

  static org.apache.tomcat.util.http.fileupload.MultipartStream$ProgressNotifier access$600(org.apache.tomcat.util.http.fileupload.MultipartStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field notifier:Lorg/apache/tomcat/util/http/fileupload/MultipartStream$ProgressNotifier;
       4: areturn

  static int access$012(org.apache.tomcat.util.http.fileupload.MultipartStream, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #7                  // Field tail:I
       5: iload_1
       6: iadd
       7: dup_x1
       8: putfield      #7                  // Field tail:I
      11: ireturn

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: bipush        13
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        10
      12: bastore
      13: dup
      14: iconst_2
      15: bipush        13
      17: bastore
      18: dup
      19: iconst_3
      20: bipush        10
      22: bastore
      23: putstatic     #41                 // Field HEADER_SEPARATOR:[B
      26: iconst_2
      27: newarray       byte
      29: dup
      30: iconst_0
      31: bipush        13
      33: bastore
      34: dup
      35: iconst_1
      36: bipush        10
      38: bastore
      39: putstatic     #30                 // Field FIELD_SEPARATOR:[B
      42: iconst_2
      43: newarray       byte
      45: dup
      46: iconst_0
      47: bipush        45
      49: bastore
      50: dup
      51: iconst_1
      52: bipush        45
      54: bastore
      55: putstatic     #28                 // Field STREAM_TERMINATOR:[B
      58: iconst_4
      59: newarray       byte
      61: dup
      62: iconst_0
      63: bipush        13
      65: bastore
      66: dup
      67: iconst_1
      68: bipush        10
      70: bastore
      71: dup
      72: iconst_2
      73: bipush        45
      75: bastore
      76: dup
      77: iconst_3
      78: bipush        45
      80: bastore
      81: putstatic     #12                 // Field BOUNDARY_PREFIX:[B
      84: return
}
