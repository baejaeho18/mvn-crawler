Compiled from "RequestDefaultHeaders.java"
public class org.apache.http.client.protocol.RequestDefaultHeaders implements org.apache.http.HttpRequestInterceptor {
  public org.apache.http.client.protocol.RequestDefaultHeaders();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String HTTP request may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokeinterface #5,  1            // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      20: invokeinterface #6,  1            // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: ldc           #7                  // String CONNECT
      29: invokevirtual #8                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      32: ifeq          36
      35: return
      36: aload_1
      37: invokeinterface #9,  1            // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
      42: ldc           #10                 // String http.default-headers
      44: invokeinterface #11,  2           // InterfaceMethod org/apache/http/params/HttpParams.getParameter:(Ljava/lang/String;)Ljava/lang/Object;
      49: checkcast     #12                 // class java/util/Collection
      52: astore        4
      54: aload         4
      56: ifnull        101
      59: aload         4
      61: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      66: astore        5
      68: aload         5
      70: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          101
      78: aload         5
      80: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #16                 // class org/apache/http/Header
      88: astore        6
      90: aload_1
      91: aload         6
      93: invokeinterface #17,  2           // InterfaceMethod org/apache/http/HttpRequest.addHeader:(Lorg/apache/http/Header;)V
      98: goto          68
     101: return
}
