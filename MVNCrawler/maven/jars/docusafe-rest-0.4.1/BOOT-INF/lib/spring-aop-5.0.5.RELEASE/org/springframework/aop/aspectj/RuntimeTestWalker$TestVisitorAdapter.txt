Compiled from "RuntimeTestWalker.java"
class org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter implements org.aspectj.weaver.ast.ITestVisitor {
  protected static final int THIS_VAR;

  protected static final int TARGET_VAR;

  protected static final int AT_THIS_VAR;

  protected static final int AT_TARGET_VAR;

  protected static final int AT_ANNOTATION_VAR;

  private org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void visit(org.aspectj.weaver.ast.And);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/aspectj/weaver/ast/And.getLeft:()Lorg/aspectj/weaver/ast/Test;
       4: aload_0
       5: invokevirtual #4                  // Method org/aspectj/weaver/ast/Test.accept:(Lorg/aspectj/weaver/ast/ITestVisitor;)V
       8: aload_1
       9: invokevirtual #5                  // Method org/aspectj/weaver/ast/And.getRight:()Lorg/aspectj/weaver/ast/Test;
      12: aload_0
      13: invokevirtual #4                  // Method org/aspectj/weaver/ast/Test.accept:(Lorg/aspectj/weaver/ast/ITestVisitor;)V
      16: return

  public void visit(org.aspectj.weaver.ast.Or);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method org/aspectj/weaver/ast/Or.getLeft:()Lorg/aspectj/weaver/ast/Test;
       4: aload_0
       5: invokevirtual #4                  // Method org/aspectj/weaver/ast/Test.accept:(Lorg/aspectj/weaver/ast/ITestVisitor;)V
       8: aload_1
       9: invokevirtual #7                  // Method org/aspectj/weaver/ast/Or.getRight:()Lorg/aspectj/weaver/ast/Test;
      12: aload_0
      13: invokevirtual #4                  // Method org/aspectj/weaver/ast/Test.accept:(Lorg/aspectj/weaver/ast/ITestVisitor;)V
      16: return

  public void visit(org.aspectj.weaver.ast.Not);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/aspectj/weaver/ast/Not.getBody:()Lorg/aspectj/weaver/ast/Test;
       4: aload_0
       5: invokevirtual #4                  // Method org/aspectj/weaver/ast/Test.accept:(Lorg/aspectj/weaver/ast/ITestVisitor;)V
       8: return

  public void visit(org.aspectj.weaver.ast.Instanceof);
    Code:
       0: return

  public void visit(org.aspectj.weaver.ast.Literal);
    Code:
       0: return

  public void visit(org.aspectj.weaver.ast.Call);
    Code:
       0: return

  public void visit(org.aspectj.weaver.ast.FieldGetCall);
    Code:
       0: return

  public void visit(org.aspectj.weaver.ast.HasAnnotation);
    Code:
       0: return

  public void visit(org.aspectj.weaver.internal.tools.MatchingContextBasedTest);
    Code:
       0: return

  protected int getVarType(org.aspectj.weaver.reflect.ReflectionVar);
    Code:
       0: invokestatic  #9                  // Method org/springframework/aop/aspectj/RuntimeTestWalker.access$100:()Ljava/lang/reflect/Field;
       3: invokestatic  #10                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
       6: invokestatic  #9                  // Method org/springframework/aop/aspectj/RuntimeTestWalker.access$100:()Ljava/lang/reflect/Field;
       9: aload_1
      10: invokevirtual #11                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #12                 // class java/lang/Integer
      16: invokevirtual #13                 // Method java/lang/Integer.intValue:()I
      19: ireturn
      20: astore_2
      21: new           #15                 // class java/lang/IllegalStateException
      24: dup
      25: aload_2
      26: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      29: athrow
    Exception table:
       from    to  target type
           0    19    20   Class java/lang/IllegalAccessException

  org.springframework.aop.aspectj.RuntimeTestWalker$TestVisitorAdapter(org.springframework.aop.aspectj.RuntimeTestWalker$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
