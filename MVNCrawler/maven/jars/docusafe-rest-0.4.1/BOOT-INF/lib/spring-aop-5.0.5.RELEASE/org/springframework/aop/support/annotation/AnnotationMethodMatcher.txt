Compiled from "AnnotationMethodMatcher.java"
public class org.springframework.aop.support.annotation.AnnotationMethodMatcher extends org.springframework.aop.support.StaticMethodMatcher {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  private final boolean checkInherited;

  public org.springframework.aop.support.annotation.AnnotationMethodMatcher(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;Z)V
       6: return

  public org.springframework.aop.support.annotation.AnnotationMethodMatcher(java.lang.Class<? extends java.lang.annotation.Annotation>, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/aop/support/StaticMethodMatcher."<init>":()V
       4: aload_1
       5: ldc           #3                  // String Annotation type must not be null
       7: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field annotationType:Ljava/lang/Class;
      15: aload_0
      16: iload_2
      17: putfield      #6                  // Field checkInherited:Z
      20: return

  public boolean matches(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method matchesMethod:(Ljava/lang/reflect/Method;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: aload_2
      12: invokestatic  #8                  // Method org/springframework/aop/support/AopUtils.getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      15: astore_3
      16: aload_3
      17: aload_1
      18: if_acmpeq     33
      21: aload_0
      22: aload_3
      23: invokespecial #7                  // Method matchesMethod:(Ljava/lang/reflect/Method;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private boolean matchesMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #6                  // Field checkInherited:Z
       4: ifeq          26
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field annotationType:Ljava/lang/Class;
      12: invokestatic  #9                  // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: ifnull        22
      18: iconst_1
      19: goto          34
      22: iconst_0
      23: goto          34
      26: aload_1
      27: aload_0
      28: getfield      #5                  // Field annotationType:Ljava/lang/Class;
      31: invokevirtual #10                 // Method java/lang/reflect/Method.isAnnotationPresent:(Ljava/lang/Class;)Z
      34: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #11                 // class org/springframework/aop/support/annotation/AnnotationMethodMatcher
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #11                 // class org/springframework/aop/support/annotation/AnnotationMethodMatcher
      20: astore_2
      21: aload_0
      22: getfield      #5                  // Field annotationType:Ljava/lang/Class;
      25: aload_2
      26: getfield      #5                  // Field annotationType:Ljava/lang/Class;
      29: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field annotationType:Ljava/lang/Class;
       4: invokevirtual #13                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #17                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #19                 // String :
      19: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #5                  // Field annotationType:Ljava/lang/Class;
      26: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn
}
