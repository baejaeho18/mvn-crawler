Compiled from "AdvisedSupport.java"
public class org.springframework.aop.framework.AdvisedSupport extends org.springframework.aop.framework.ProxyConfig implements org.springframework.aop.framework.Advised {
  private static final long serialVersionUID;

  public static final org.springframework.aop.TargetSource EMPTY_TARGET_SOURCE;

  org.springframework.aop.TargetSource targetSource;

  private boolean preFiltered;

  org.springframework.aop.framework.AdvisorChainFactory advisorChainFactory;

  private transient java.util.Map<org.springframework.aop.framework.AdvisedSupport$MethodCacheKey, java.util.List<java.lang.Object>> methodCache;

  private java.util.List<java.lang.Class<?>> interfaces;

  private java.util.List<org.springframework.aop.Advisor> advisors;

  private org.springframework.aop.Advisor[] advisorArray;

  public org.springframework.aop.framework.AdvisedSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyConfig."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field EMPTY_TARGET_SOURCE:Lorg/springframework/aop/TargetSource;
       8: putfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field preFiltered:Z
      16: aload_0
      17: new           #5                  // class org/springframework/aop/framework/DefaultAdvisorChainFactory
      20: dup
      21: invokespecial #6                  // Method org/springframework/aop/framework/DefaultAdvisorChainFactory."<init>":()V
      24: putfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      27: aload_0
      28: new           #8                  // class java/util/ArrayList
      31: dup
      32: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #10                 // Field interfaces:Ljava/util/List;
      38: aload_0
      39: new           #11                 // class java/util/LinkedList
      42: dup
      43: invokespecial #12                 // Method java/util/LinkedList."<init>":()V
      46: putfield      #13                 // Field advisors:Ljava/util/List;
      49: aload_0
      50: iconst_0
      51: anewarray     #14                 // class org/springframework/aop/Advisor
      54: putfield      #15                 // Field advisorArray:[Lorg/springframework/aop/Advisor;
      57: aload_0
      58: new           #16                 // class java/util/concurrent/ConcurrentHashMap
      61: dup
      62: bipush        32
      64: invokespecial #17                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      67: putfield      #18                 // Field methodCache:Ljava/util/Map;
      70: return

  public org.springframework.aop.framework.AdvisedSupport(java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #20                 // Method setInterfaces:([Ljava/lang/Class;)V
       9: return

  public void setTarget(java.lang.Object);
    Code:
       0: aload_0
       1: new           #21                 // class org/springframework/aop/target/SingletonTargetSource
       4: dup
       5: aload_1
       6: invokespecial #22                 // Method org/springframework/aop/target/SingletonTargetSource."<init>":(Ljava/lang/Object;)V
       9: invokevirtual #23                 // Method setTargetSource:(Lorg/springframework/aop/TargetSource;)V
      12: return

  public void setTargetSource(org.springframework.aop.TargetSource);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          12
       9: getstatic     #2                  // Field EMPTY_TARGET_SOURCE:Lorg/springframework/aop/TargetSource;
      12: putfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
      15: return

  public org.springframework.aop.TargetSource getTargetSource();
    Code:
       0: aload_0
       1: getfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
       4: areturn

  public void setTargetClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method org/springframework/aop/target/EmptyTargetSource.forClass:(Ljava/lang/Class;)Lorg/springframework/aop/target/EmptyTargetSource;
       5: putfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
       8: return

  public java.lang.Class<?> getTargetClass();
    Code:
       0: aload_0
       1: getfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
       4: invokeinterface #25,  1           // InterfaceMethod org/springframework/aop/TargetSource.getTargetClass:()Ljava/lang/Class;
       9: areturn

  public void setPreFiltered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field preFiltered:Z
       5: return

  public boolean isPreFiltered();
    Code:
       0: aload_0
       1: getfield      #4                  // Field preFiltered:Z
       4: ireturn

  public void setAdvisorChainFactory(org.springframework.aop.framework.AdvisorChainFactory);
    Code:
       0: aload_1
       1: ldc           #26                 // String AdvisorChainFactory must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      11: return

  public org.springframework.aop.framework.AdvisorChainFactory getAdvisorChainFactory();
    Code:
       0: aload_0
       1: getfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
       4: areturn

  public void setInterfaces(java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ldc           #28                 // String Interfaces must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #10                 // Field interfaces:Ljava/util/List;
      10: invokeinterface #29,  1           // InterfaceMethod java/util/List.clear:()V
      15: aload_1
      16: astore_2
      17: aload_2
      18: arraylength
      19: istore_3
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iload_3
      26: if_icmpge     47
      29: aload_2
      30: iload         4
      32: aaload
      33: astore        5
      35: aload_0
      36: aload         5
      38: invokevirtual #30                 // Method addInterface:(Ljava/lang/Class;)V
      41: iinc          4, 1
      44: goto          23
      47: return

  public void addInterface(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #31                 // String Interface must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #32                 // Method java/lang/Class.isInterface:()Z
      10: ifne          48
      13: new           #33                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #34                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #36                 // String [
      26: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #38                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #39                 // String ] is not an interface
      38: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #10                 // Field interfaces:Ljava/util/List;
      52: aload_1
      53: invokeinterface #42,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      58: ifne          76
      61: aload_0
      62: getfield      #10                 // Field interfaces:Ljava/util/List;
      65: aload_1
      66: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: invokevirtual #44                 // Method adviceChanged:()V
      76: return

  public boolean removeInterface(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field interfaces:Ljava/util/List;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.Class<?>[] getProxiedInterfaces();
    Code:
       0: aload_0
       1: getfield      #10                 // Field interfaces:Ljava/util/List;
       4: invokestatic  #46                 // Method org/springframework/util/ClassUtils.toClassArray:(Ljava/util/Collection;)[Ljava/lang/Class;
       7: areturn

  public boolean isInterfaceProxied(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field interfaces:Ljava/util/List;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #50                 // class java/lang/Class
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #51                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: goto          10
      42: iconst_0
      43: ireturn

  public final org.springframework.aop.Advisor[] getAdvisors();
    Code:
       0: aload_0
       1: getfield      #15                 // Field advisorArray:[Lorg/springframework/aop/Advisor;
       4: areturn

  public void addAdvisor(org.springframework.aop.Advisor);
    Code:
       0: aload_0
       1: getfield      #13                 // Field advisors:Ljava/util/List;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_2
      10: aload_0
      11: iload_2
      12: aload_1
      13: invokevirtual #53                 // Method addAdvisor:(ILorg/springframework/aop/Advisor;)V
      16: return

  public void addAdvisor(int, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_2
       1: instanceof    #54                 // class org/springframework/aop/IntroductionAdvisor
       4: ifeq          15
       7: aload_0
       8: aload_2
       9: checkcast     #54                 // class org/springframework/aop/IntroductionAdvisor
      12: invokespecial #55                 // Method validateIntroductionAdvisor:(Lorg/springframework/aop/IntroductionAdvisor;)V
      15: aload_0
      16: iload_1
      17: aload_2
      18: invokespecial #56                 // Method addAdvisorInternal:(ILorg/springframework/aop/Advisor;)V
      21: return

  public boolean removeAdvisor(org.springframework.aop.Advisor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method indexOf:(Lorg/springframework/aop/Advisor;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iload_2
      15: invokevirtual #58                 // Method removeAdvisor:(I)V
      18: iconst_1
      19: ireturn

  public void removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isFrozen:()Z
       4: ifeq          17
       7: new           #60                 // class org/springframework/aop/framework/AopConfigException
      10: dup
      11: ldc           #61                 // String Cannot remove Advisor: Configuration is frozen.
      13: invokespecial #62                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: iflt          36
      21: iload_1
      22: aload_0
      23: getfield      #13                 // Field advisors:Ljava/util/List;
      26: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      31: iconst_1
      32: isub
      33: if_icmple     85
      36: new           #60                 // class org/springframework/aop/framework/AopConfigException
      39: dup
      40: new           #34                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #63                 // String Advisor index
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_1
      53: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #65                 // String  is out of bounds: This configuration only has
      58: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #13                 // Field advisors:Ljava/util/List;
      65: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      70: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: ldc           #66                 // String  advisors.
      75: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #62                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #13                 // Field advisors:Ljava/util/List;
      89: iload_1
      90: invokeinterface #67,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      95: checkcast     #14                 // class org/springframework/aop/Advisor
      98: astore_2
      99: aload_2
     100: instanceof    #54                 // class org/springframework/aop/IntroductionAdvisor
     103: ifeq          146
     106: aload_2
     107: checkcast     #54                 // class org/springframework/aop/IntroductionAdvisor
     110: astore_3
     111: iconst_0
     112: istore        4
     114: iload         4
     116: aload_3
     117: invokeinterface #68,  1           // InterfaceMethod org/springframework/aop/IntroductionAdvisor.getInterfaces:()[Ljava/lang/Class;
     122: arraylength
     123: if_icmpge     146
     126: aload_0
     127: aload_3
     128: invokeinterface #68,  1           // InterfaceMethod org/springframework/aop/IntroductionAdvisor.getInterfaces:()[Ljava/lang/Class;
     133: iload         4
     135: aaload
     136: invokevirtual #69                 // Method removeInterface:(Ljava/lang/Class;)Z
     139: pop
     140: iinc          4, 1
     143: goto          114
     146: aload_0
     147: getfield      #13                 // Field advisors:Ljava/util/List;
     150: iload_1
     151: invokeinterface #70,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     156: pop
     157: aload_0
     158: invokevirtual #71                 // Method updateAdvisorArray:()V
     161: aload_0
     162: invokevirtual #44                 // Method adviceChanged:()V
     165: return

  public int indexOf(org.springframework.aop.Advisor);
    Code:
       0: aload_1
       1: ldc           #72                 // String Advisor must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #13                 // Field advisors:Ljava/util/List;
      10: aload_1
      11: invokeinterface #73,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      16: ireturn

  public boolean replaceAdvisor(org.springframework.aop.Advisor, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_1
       1: ldc           #74                 // String Advisor a must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #75                 // String Advisor b must not be null
       9: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: invokevirtual #57                 // Method indexOf:(Lorg/springframework/aop/Advisor;)I
      17: istore_3
      18: iload_3
      19: iconst_m1
      20: if_icmpne     25
      23: iconst_0
      24: ireturn
      25: aload_0
      26: iload_3
      27: invokevirtual #58                 // Method removeAdvisor:(I)V
      30: aload_0
      31: iload_3
      32: aload_2
      33: invokevirtual #53                 // Method addAdvisor:(ILorg/springframework/aop/Advisor;)V
      36: iconst_1
      37: ireturn

  public void addAdvisors(org.springframework.aop.Advisor...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #77                 // Method addAdvisors:(Ljava/util/Collection;)V
       8: return

  public void addAdvisors(java.util.Collection<org.springframework.aop.Advisor>);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isFrozen:()Z
       4: ifeq          17
       7: new           #60                 // class org/springframework/aop/framework/AopConfigException
      10: dup
      11: ldc           #78                 // String Cannot add advisor: Configuration is frozen.
      13: invokespecial #62                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokestatic  #79                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      21: ifne          93
      24: aload_1
      25: invokeinterface #80,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          85
      40: aload_2
      41: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #14                 // class org/springframework/aop/Advisor
      49: astore_3
      50: aload_3
      51: instanceof    #54                 // class org/springframework/aop/IntroductionAdvisor
      54: ifeq          65
      57: aload_0
      58: aload_3
      59: checkcast     #54                 // class org/springframework/aop/IntroductionAdvisor
      62: invokespecial #55                 // Method validateIntroductionAdvisor:(Lorg/springframework/aop/IntroductionAdvisor;)V
      65: aload_3
      66: ldc           #72                 // String Advisor must not be null
      68: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      71: aload_0
      72: getfield      #13                 // Field advisors:Ljava/util/List;
      75: aload_3
      76: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          31
      85: aload_0
      86: invokevirtual #71                 // Method updateAdvisorArray:()V
      89: aload_0
      90: invokevirtual #44                 // Method adviceChanged:()V
      93: return

  private void validateIntroductionAdvisor(org.springframework.aop.IntroductionAdvisor);
    Code:
       0: aload_1
       1: invokeinterface #81,  1           // InterfaceMethod org/springframework/aop/IntroductionAdvisor.validateInterfaces:()V
       6: aload_1
       7: invokeinterface #68,  1           // InterfaceMethod org/springframework/aop/IntroductionAdvisor.getInterfaces:()[Ljava/lang/Class;
      12: astore_2
      13: aload_2
      14: astore_3
      15: aload_3
      16: arraylength
      17: istore        4
      19: iconst_0
      20: istore        5
      22: iload         5
      24: iload         4
      26: if_icmpge     47
      29: aload_3
      30: iload         5
      32: aaload
      33: astore        6
      35: aload_0
      36: aload         6
      38: invokevirtual #30                 // Method addInterface:(Ljava/lang/Class;)V
      41: iinc          5, 1
      44: goto          22
      47: return

  private void addAdvisorInternal(int, org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_2
       1: ldc           #72                 // String Advisor must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #59                 // Method isFrozen:()Z
      10: ifeq          23
      13: new           #60                 // class org/springframework/aop/framework/AopConfigException
      16: dup
      17: ldc           #78                 // String Cannot add advisor: Configuration is frozen.
      19: invokespecial #62                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: iload_1
      24: aload_0
      25: getfield      #13                 // Field advisors:Ljava/util/List;
      28: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      33: if_icmple     80
      36: new           #33                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #34                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #82                 // String Illegal position
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: iload_1
      53: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #83                 // String  in advisor list with size
      58: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #13                 // Field advisors:Ljava/util/List;
      65: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      70: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      73: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: getfield      #13                 // Field advisors:Ljava/util/List;
      84: iload_1
      85: aload_2
      86: invokeinterface #84,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      91: aload_0
      92: invokevirtual #71                 // Method updateAdvisorArray:()V
      95: aload_0
      96: invokevirtual #44                 // Method adviceChanged:()V
      99: return

  protected final void updateAdvisorArray();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field advisors:Ljava/util/List;
       5: iconst_0
       6: anewarray     #14                 // class org/springframework/aop/Advisor
       9: invokeinterface #85,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      14: checkcast     #86                 // class "[Lorg/springframework/aop/Advisor;"
      17: putfield      #15                 // Field advisorArray:[Lorg/springframework/aop/Advisor;
      20: return

  protected final java.util.List<org.springframework.aop.Advisor> getAdvisorsInternal();
    Code:
       0: aload_0
       1: getfield      #13                 // Field advisors:Ljava/util/List;
       4: areturn

  public void addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field advisors:Ljava/util/List;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_2
      10: aload_0
      11: iload_2
      12: aload_1
      13: invokevirtual #87                 // Method addAdvice:(ILorg/aopalliance/aop/Advice;)V
      16: return

  public void addAdvice(int, org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_2
       1: ldc           #88                 // String Advice must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: instanceof    #89                 // class org/springframework/aop/IntroductionInfo
      10: ifeq          33
      13: aload_0
      14: iload_1
      15: new           #90                 // class org/springframework/aop/support/DefaultIntroductionAdvisor
      18: dup
      19: aload_2
      20: aload_2
      21: checkcast     #89                 // class org/springframework/aop/IntroductionInfo
      24: invokespecial #91                 // Method org/springframework/aop/support/DefaultIntroductionAdvisor."<init>":(Lorg/aopalliance/aop/Advice;Lorg/springframework/aop/IntroductionInfo;)V
      27: invokevirtual #53                 // Method addAdvisor:(ILorg/springframework/aop/Advisor;)V
      30: goto          63
      33: aload_2
      34: instanceof    #92                 // class org/springframework/aop/DynamicIntroductionAdvice
      37: ifeq          50
      40: new           #60                 // class org/springframework/aop/framework/AopConfigException
      43: dup
      44: ldc           #93                 // String DynamicIntroductionAdvice may only be added as part of IntroductionAdvisor
      46: invokespecial #62                 // Method org/springframework/aop/framework/AopConfigException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: iload_1
      52: new           #94                 // class org/springframework/aop/support/DefaultPointcutAdvisor
      55: dup
      56: aload_2
      57: invokespecial #95                 // Method org/springframework/aop/support/DefaultPointcutAdvisor."<init>":(Lorg/aopalliance/aop/Advice;)V
      60: invokevirtual #53                 // Method addAdvisor:(ILorg/springframework/aop/Advisor;)V
      63: return

  public boolean removeAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #96                 // Method indexOf:(Lorg/aopalliance/aop/Advice;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iload_2
      15: invokevirtual #58                 // Method removeAdvisor:(I)V
      18: iconst_1
      19: ireturn

  public int indexOf(org.aopalliance.aop.Advice);
    Code:
       0: aload_1
       1: ldc           #88                 // String Advice must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: getfield      #13                 // Field advisors:Ljava/util/List;
      13: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      18: if_icmpge     53
      21: aload_0
      22: getfield      #13                 // Field advisors:Ljava/util/List;
      25: iload_2
      26: invokeinterface #67,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #14                 // class org/springframework/aop/Advisor
      34: astore_3
      35: aload_3
      36: invokeinterface #97,  1           // InterfaceMethod org/springframework/aop/Advisor.getAdvice:()Lorg/aopalliance/aop/Advice;
      41: aload_1
      42: if_acmpne     47
      45: iload_2
      46: ireturn
      47: iinc          2, 1
      50: goto          8
      53: iconst_m1
      54: ireturn

  public boolean adviceIncluded(org.aopalliance.aop.Advice);
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_0
       5: getfield      #13                 // Field advisors:Ljava/util/List;
       8: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          48
      23: aload_2
      24: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #14                 // class org/springframework/aop/Advisor
      32: astore_3
      33: aload_3
      34: invokeinterface #97,  1           // InterfaceMethod org/springframework/aop/Advisor.getAdvice:()Lorg/aopalliance/aop/Advice;
      39: aload_1
      40: if_acmpne     45
      43: iconst_1
      44: ireturn
      45: goto          14
      48: iconst_0
      49: ireturn

  public int countAdvicesOfType(java.lang.Class<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnull        56
       6: aload_0
       7: getfield      #13                 // Field advisors:Ljava/util/List;
      10: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          56
      25: aload_3
      26: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #14                 // class org/springframework/aop/Advisor
      34: astore        4
      36: aload_1
      37: aload         4
      39: invokeinterface #97,  1           // InterfaceMethod org/springframework/aop/Advisor.getAdvice:()Lorg/aopalliance/aop/Advice;
      44: invokevirtual #98                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      47: ifeq          53
      50: iinc          2, 1
      53: goto          16
      56: iload_2
      57: ireturn

  public java.util.List<java.lang.Object> getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: new           #99                 // class org/springframework/aop/framework/AdvisedSupport$MethodCacheKey
       3: dup
       4: aload_1
       5: invokespecial #100                // Method org/springframework/aop/framework/AdvisedSupport$MethodCacheKey."<init>":(Ljava/lang/reflect/Method;)V
       8: astore_3
       9: aload_0
      10: getfield      #18                 // Field methodCache:Ljava/util/Map;
      13: aload_3
      14: invokeinterface #101,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #102                // class java/util/List
      22: astore        4
      24: aload         4
      26: ifnonnull     56
      29: aload_0
      30: getfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      33: aload_0
      34: aload_1
      35: aload_2
      36: invokeinterface #103,  4          // InterfaceMethod org/springframework/aop/framework/AdvisorChainFactory.getInterceptorsAndDynamicInterceptionAdvice:(Lorg/springframework/aop/framework/Advised;Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/List;
      41: astore        4
      43: aload_0
      44: getfield      #18                 // Field methodCache:Ljava/util/Map;
      47: aload_3
      48: aload         4
      50: invokeinterface #104,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload         4
      58: areturn

  protected void adviceChanged();
    Code:
       0: aload_0
       1: getfield      #18                 // Field methodCache:Ljava/util/Map;
       4: invokeinterface #105,  1          // InterfaceMethod java/util/Map.clear:()V
       9: return

  protected void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: getfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
       6: new           #8                  // class java/util/ArrayList
       9: dup
      10: aload_1
      11: getfield      #13                 // Field advisors:Ljava/util/List;
      14: invokespecial #106                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      17: invokevirtual #107                // Method copyConfigurationFrom:(Lorg/springframework/aop/framework/AdvisedSupport;Lorg/springframework/aop/TargetSource;Ljava/util/List;)V
      20: return

  protected void copyConfigurationFrom(org.springframework.aop.framework.AdvisedSupport, org.springframework.aop.TargetSource, java.util.List<org.springframework.aop.Advisor>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method copyFrom:(Lorg/springframework/aop/framework/ProxyConfig;)V
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
      10: aload_0
      11: aload_1
      12: getfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      15: putfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      18: aload_0
      19: new           #8                  // class java/util/ArrayList
      22: dup
      23: aload_1
      24: getfield      #10                 // Field interfaces:Ljava/util/List;
      27: invokespecial #106                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      30: putfield      #10                 // Field interfaces:Ljava/util/List;
      33: aload_3
      34: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore        4
      41: aload         4
      43: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          102
      51: aload         4
      53: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #14                 // class org/springframework/aop/Advisor
      61: astore        5
      63: aload         5
      65: instanceof    #54                 // class org/springframework/aop/IntroductionAdvisor
      68: ifeq          80
      71: aload_0
      72: aload         5
      74: checkcast     #54                 // class org/springframework/aop/IntroductionAdvisor
      77: invokespecial #55                 // Method validateIntroductionAdvisor:(Lorg/springframework/aop/IntroductionAdvisor;)V
      80: aload         5
      82: ldc           #72                 // String Advisor must not be null
      84: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      87: aload_0
      88: getfield      #13                 // Field advisors:Ljava/util/List;
      91: aload         5
      93: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: goto          41
     102: aload_0
     103: invokevirtual #71                 // Method updateAdvisorArray:()V
     106: aload_0
     107: invokevirtual #44                 // Method adviceChanged:()V
     110: return

  org.springframework.aop.framework.AdvisedSupport getConfigurationOnlyCopy();
    Code:
       0: new           #109                // class org/springframework/aop/framework/AdvisedSupport
       3: dup
       4: invokespecial #19                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #108                // Method copyFrom:(Lorg/springframework/aop/framework/ProxyConfig;)V
      13: aload_1
      14: aload_0
      15: invokevirtual #110                // Method getTargetClass:()Ljava/lang/Class;
      18: aload_0
      19: invokevirtual #111                // Method getTargetSource:()Lorg/springframework/aop/TargetSource;
      22: invokeinterface #112,  1          // InterfaceMethod org/springframework/aop/TargetSource.isStatic:()Z
      27: invokestatic  #113                // Method org/springframework/aop/target/EmptyTargetSource.forClass:(Ljava/lang/Class;Z)Lorg/springframework/aop/target/EmptyTargetSource;
      30: putfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
      33: aload_1
      34: aload_0
      35: getfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      38: putfield      #7                  // Field advisorChainFactory:Lorg/springframework/aop/framework/AdvisorChainFactory;
      41: aload_1
      42: aload_0
      43: getfield      #10                 // Field interfaces:Ljava/util/List;
      46: putfield      #10                 // Field interfaces:Ljava/util/List;
      49: aload_1
      50: aload_0
      51: getfield      #13                 // Field advisors:Ljava/util/List;
      54: putfield      #13                 // Field advisors:Ljava/util/List;
      57: aload_1
      58: invokevirtual #71                 // Method updateAdvisorArray:()V
      61: aload_1
      62: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #114                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: new           #16                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        32
      11: invokespecial #17                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #18                 // Field methodCache:Ljava/util/Map;
      17: return

  public java.lang.String toProxyConfigString();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method toString:()Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #38                 // Method java/lang/Class.getName:()Ljava/lang/String;
      11: invokespecial #117                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: astore_1
      15: aload_1
      16: ldc           #118                // String :
      18: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #10                 // Field interfaces:Ljava/util/List;
      25: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      30: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #119                // String  interfaces
      35: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_1
      40: aload_0
      41: getfield      #10                 // Field interfaces:Ljava/util/List;
      44: invokestatic  #120                // Method org/springframework/util/ClassUtils.classNamesToString:(Ljava/util/Collection;)Ljava/lang/String;
      47: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #121                // String ;
      52: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: aload_0
      58: getfield      #13                 // Field advisors:Ljava/util/List;
      61: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      66: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: ldc           #122                // String  advisors
      71: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_1
      76: aload_0
      77: getfield      #13                 // Field advisors:Ljava/util/List;
      80: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #121                // String ;
      85: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: aload_1
      90: ldc           #124                // String targetSource [
      92: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #3                  // Field targetSource:Lorg/springframework/aop/TargetSource;
      99: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: ldc           #125                // String ];
     104: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: pop
     108: aload_1
     109: aload_0
     110: invokespecial #126                // Method org/springframework/aop/framework/ProxyConfig.toString:()Ljava/lang/String;
     113: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: pop
     117: aload_1
     118: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: areturn

  static {};
    Code:
       0: getstatic     #127                // Field org/springframework/aop/target/EmptyTargetSource.INSTANCE:Lorg/springframework/aop/target/EmptyTargetSource;
       3: putstatic     #2                  // Field EMPTY_TARGET_SOURCE:Lorg/springframework/aop/TargetSource;
       6: return
}
