Compiled from "ScopedProxyFactoryBean.java"
public class org.springframework.aop.scope.ScopedProxyFactoryBean extends org.springframework.aop.framework.ProxyConfig implements org.springframework.beans.factory.FactoryBean<java.lang.Object>, org.springframework.beans.factory.BeanFactoryAware {
  private final org.springframework.aop.target.SimpleBeanTargetSource scopedTargetSource;

  private java.lang.String targetBeanName;

  private java.lang.Object proxy;

  public org.springframework.aop.scope.ScopedProxyFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/aop/framework/ProxyConfig."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/aop/target/SimpleBeanTargetSource
       8: dup
       9: invokespecial #3                  // Method org/springframework/aop/target/SimpleBeanTargetSource."<init>":()V
      12: putfield      #4                  // Field scopedTargetSource:Lorg/springframework/aop/target/SimpleBeanTargetSource;
      15: aload_0
      16: iconst_1
      17: invokevirtual #5                  // Method setProxyTargetClass:(Z)V
      20: return

  public void setTargetBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field targetBeanName:Ljava/lang/String;
       5: aload_0
       6: getfield      #4                  // Field scopedTargetSource:Lorg/springframework/aop/target/SimpleBeanTargetSource;
       9: aload_1
      10: invokevirtual #7                  // Method org/springframework/aop/target/SimpleBeanTargetSource.setTargetBeanName:(Ljava/lang/String;)V
      13: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/springframework/beans/factory/config/ConfigurableBeanFactory
       4: ifne          34
       7: new           #9                  // class java/lang/IllegalStateException
      10: dup
      11: new           #10                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #12                 // String Not running in a ConfigurableBeanFactory:
      20: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_1
      35: checkcast     #8                  // class org/springframework/beans/factory/config/ConfigurableBeanFactory
      38: astore_2
      39: aload_0
      40: getfield      #4                  // Field scopedTargetSource:Lorg/springframework/aop/target/SimpleBeanTargetSource;
      43: aload_1
      44: invokevirtual #17                 // Method org/springframework/aop/target/SimpleBeanTargetSource.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      47: new           #18                 // class org/springframework/aop/framework/ProxyFactory
      50: dup
      51: invokespecial #19                 // Method org/springframework/aop/framework/ProxyFactory."<init>":()V
      54: astore_3
      55: aload_3
      56: aload_0
      57: invokevirtual #20                 // Method org/springframework/aop/framework/ProxyFactory.copyFrom:(Lorg/springframework/aop/framework/ProxyConfig;)V
      60: aload_3
      61: aload_0
      62: getfield      #4                  // Field scopedTargetSource:Lorg/springframework/aop/target/SimpleBeanTargetSource;
      65: invokevirtual #21                 // Method org/springframework/aop/framework/ProxyFactory.setTargetSource:(Lorg/springframework/aop/TargetSource;)V
      68: aload_0
      69: getfield      #6                  // Field targetBeanName:Ljava/lang/String;
      72: ldc           #22                 // String Property \'targetBeanName\' is required
      74: invokestatic  #23                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      77: aload_1
      78: aload_0
      79: getfield      #6                  // Field targetBeanName:Ljava/lang/String;
      82: invokeinterface #24,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getType:(Ljava/lang/String;)Ljava/lang/Class;
      87: astore        4
      89: aload         4
      91: ifnonnull     129
      94: new           #9                  // class java/lang/IllegalStateException
      97: dup
      98: new           #10                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #25                 // String Cannot create scoped proxy for bean \'
     107: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: getfield      #6                  // Field targetBeanName:Ljava/lang/String;
     114: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #26                 // String \': Target type could not be determined at the time of proxy creation.
     119: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: aload_0
     130: invokevirtual #27                 // Method isProxyTargetClass:()Z
     133: ifeq          155
     136: aload         4
     138: invokevirtual #28                 // Method java/lang/Class.isInterface:()Z
     141: ifne          155
     144: aload         4
     146: invokevirtual #29                 // Method java/lang/Class.getModifiers:()I
     149: invokestatic  #30                 // Method java/lang/reflect/Modifier.isPrivate:(I)Z
     152: ifeq          170
     155: aload_3
     156: aload         4
     158: aload_2
     159: invokeinterface #31,  1           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableBeanFactory.getBeanClassLoader:()Ljava/lang/ClassLoader;
     164: invokestatic  #32                 // Method org/springframework/util/ClassUtils.getAllInterfacesForClass:(Ljava/lang/Class;Ljava/lang/ClassLoader;)[Ljava/lang/Class;
     167: invokevirtual #33                 // Method org/springframework/aop/framework/ProxyFactory.setInterfaces:([Ljava/lang/Class;)V
     170: new           #34                 // class org/springframework/aop/scope/DefaultScopedObject
     173: dup
     174: aload_2
     175: aload_0
     176: getfield      #4                  // Field scopedTargetSource:Lorg/springframework/aop/target/SimpleBeanTargetSource;
     179: invokevirtual #35                 // Method org/springframework/aop/target/SimpleBeanTargetSource.getTargetBeanName:()Ljava/lang/String;
     182: invokespecial #36                 // Method org/springframework/aop/scope/DefaultScopedObject."<init>":(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Ljava/lang/String;)V
     185: astore        5
     187: aload_3
     188: new           #37                 // class org/springframework/aop/support/DelegatingIntroductionInterceptor
     191: dup
     192: aload         5
     194: invokespecial #38                 // Method org/springframework/aop/support/DelegatingIntroductionInterceptor."<init>":(Ljava/lang/Object;)V
     197: invokevirtual #39                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     200: aload_3
     201: ldc           #40                 // class org/springframework/aop/framework/AopInfrastructureBean
     203: invokevirtual #41                 // Method org/springframework/aop/framework/ProxyFactory.addInterface:(Ljava/lang/Class;)V
     206: aload_0
     207: aload_3
     208: aload_2
     209: invokeinterface #31,  1           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableBeanFactory.getBeanClassLoader:()Ljava/lang/ClassLoader;
     214: invokevirtual #42                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     217: putfield      #43                 // Field proxy:Ljava/lang/Object;
     220: return

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #43                 // Field proxy:Ljava/lang/Object;
       4: ifnonnull     15
       7: new           #44                 // class org/springframework/beans/factory/FactoryBeanNotInitializedException
      10: dup
      11: invokespecial #45                 // Method org/springframework/beans/factory/FactoryBeanNotInitializedException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #43                 // Field proxy:Ljava/lang/Object;
      19: areturn

  public java.lang.Class<?> getObjectType();
    Code:
       0: aload_0
       1: getfield      #43                 // Field proxy:Ljava/lang/Object;
       4: ifnull        15
       7: aload_0
       8: getfield      #43                 // Field proxy:Ljava/lang/Object;
      11: invokevirtual #46                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field scopedTargetSource:Lorg/springframework/aop/target/SimpleBeanTargetSource;
      19: invokevirtual #47                 // Method org/springframework/aop/target/SimpleBeanTargetSource.getTargetClass:()Ljava/lang/Class;
      22: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn
}
