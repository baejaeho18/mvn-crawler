Compiled from "ReversedLinesFileReader.java"
public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable {
  private final int blockSize;

  private final java.nio.charset.Charset encoding;

  private final java.io.RandomAccessFile randomAccessFile;

  private final long totalByteLength;

  private final long totalBlockCount;

  private final byte[][] newLineSequences;

  private final int avoidNewlineSplitBufferSize;

  private final int byteDecrement;

  private org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart;

  private boolean trailingNewlineOfFileSkipped;

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        4096
       5: invokestatic  #7                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       8: invokespecial #8                  // Method "<init>":(Ljava/io/File;ILjava/nio/charset/Charset;)V
      11: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        4096
       5: aload_2
       6: invokespecial #8                  // Method "<init>":(Ljava/io/File;ILjava/nio/charset/Charset;)V
       9: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #10                 // Field trailingNewlineOfFileSkipped:Z
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field blockSize:I
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field encoding:Ljava/nio/charset/Charset;
      19: aload_3
      20: invokestatic  #11                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      23: astore        4
      25: aload         4
      27: invokevirtual #12                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      30: astore        5
      32: aload         5
      34: invokevirtual #13                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
      37: fstore        6
      39: fload         6
      41: fconst_1
      42: fcmpl
      43: ifne          54
      46: aload_0
      47: iconst_1
      48: putfield      #2                  // Field byteDecrement:I
      51: goto          207
      54: aload         4
      56: getstatic     #14                 // Field org/apache/commons/io/Charsets.UTF_8:Ljava/nio/charset/Charset;
      59: if_acmpne     70
      62: aload_0
      63: iconst_1
      64: putfield      #2                  // Field byteDecrement:I
      67: goto          207
      70: aload         4
      72: ldc           #15                 // String Shift_JIS
      74: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      77: if_acmpeq     120
      80: aload         4
      82: ldc           #17                 // String windows-31j
      84: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      87: if_acmpeq     120
      90: aload         4
      92: ldc           #18                 // String x-windows-949
      94: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      97: if_acmpeq     120
     100: aload         4
     102: ldc           #19                 // String gbk
     104: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     107: if_acmpeq     120
     110: aload         4
     112: ldc           #20                 // String x-windows-950
     114: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     117: if_acmpne     128
     120: aload_0
     121: iconst_1
     122: putfield      #2                  // Field byteDecrement:I
     125: goto          207
     128: aload         4
     130: getstatic     #21                 // Field org/apache/commons/io/Charsets.UTF_16BE:Ljava/nio/charset/Charset;
     133: if_acmpeq     144
     136: aload         4
     138: getstatic     #22                 // Field org/apache/commons/io/Charsets.UTF_16LE:Ljava/nio/charset/Charset;
     141: if_acmpne     152
     144: aload_0
     145: iconst_2
     146: putfield      #2                  // Field byteDecrement:I
     149: goto          207
     152: aload         4
     154: getstatic     #23                 // Field org/apache/commons/io/Charsets.UTF_16:Ljava/nio/charset/Charset;
     157: if_acmpne     170
     160: new           #24                 // class java/io/UnsupportedEncodingException
     163: dup
     164: ldc           #25                 // String For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)
     166: invokespecial #26                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: new           #24                 // class java/io/UnsupportedEncodingException
     173: dup
     174: new           #27                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #29                 // String Encoding
     183: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_3
     187: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     190: ldc           #32                 // String  is not supported yet (feel free to
     192: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: ldc           #33                 // String submit a patch)
     197: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     203: invokespecial #26                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
     206: athrow
     207: aload_0
     208: iconst_3
     209: anewarray     #35                 // class "[B"
     212: dup
     213: iconst_0
     214: ldc           #36                 // String \r\n
     216: aload_3
     217: invokevirtual #37                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     220: aastore
     221: dup
     222: iconst_1
     223: ldc           #38                 // String \n
     225: aload_3
     226: invokevirtual #37                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     229: aastore
     230: dup
     231: iconst_2
     232: ldc           #39                 // String \r
     234: aload_3
     235: invokevirtual #37                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
     238: aastore
     239: putfield      #1                  // Field newLineSequences:[[B
     242: aload_0
     243: aload_0
     244: getfield      #1                  // Field newLineSequences:[[B
     247: iconst_0
     248: aaload
     249: arraylength
     250: putfield      #3                  // Field avoidNewlineSplitBufferSize:I
     253: aload_0
     254: new           #40                 // class java/io/RandomAccessFile
     257: dup
     258: aload_1
     259: ldc           #41                 // String r
     261: invokespecial #42                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
     264: putfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
     267: aload_0
     268: aload_0
     269: getfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
     272: invokevirtual #43                 // Method java/io/RandomAccessFile.length:()J
     275: putfield      #44                 // Field totalByteLength:J
     278: aload_0
     279: getfield      #44                 // Field totalByteLength:J
     282: iload_2
     283: i2l
     284: lrem
     285: l2i
     286: istore        7
     288: iload         7
     290: ifle          309
     293: aload_0
     294: aload_0
     295: getfield      #44                 // Field totalByteLength:J
     298: iload_2
     299: i2l
     300: ldiv
     301: lconst_1
     302: ladd
     303: putfield      #45                 // Field totalBlockCount:J
     306: goto          332
     309: aload_0
     310: aload_0
     311: getfield      #44                 // Field totalByteLength:J
     314: iload_2
     315: i2l
     316: ldiv
     317: putfield      #45                 // Field totalBlockCount:J
     320: aload_0
     321: getfield      #44                 // Field totalByteLength:J
     324: lconst_0
     325: lcmp
     326: ifle          332
     329: iload_2
     330: istore        7
     332: aload_0
     333: new           #46                 // class org/apache/commons/io/input/ReversedLinesFileReader$FilePart
     336: dup
     337: aload_0
     338: aload_0
     339: getfield      #45                 // Field totalBlockCount:J
     342: iload         7
     344: aconst_null
     345: aconst_null
     346: invokespecial #47                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart."<init>":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V
     349: putfield      #48                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
     352: return

  public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #49                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: invokespecial #8                  // Method "<init>":(Ljava/io/File;ILjava/nio/charset/Charset;)V
      10: return

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
       4: invokestatic  #50                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$100:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnonnull     41
      12: aload_0
      13: aload_0
      14: getfield      #48                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      17: invokestatic  #51                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$200:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      20: putfield      #48                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      23: aload_0
      24: getfield      #48                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      27: ifnull        41
      30: aload_0
      31: getfield      #48                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;
      34: invokestatic  #50                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$100:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;
      37: astore_1
      38: goto          8
      41: ldc           #52                 // String
      43: aload_1
      44: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          67
      50: aload_0
      51: getfield      #10                 // Field trailingNewlineOfFileSkipped:Z
      54: ifne          67
      57: aload_0
      58: iconst_1
      59: putfield      #10                 // Field trailingNewlineOfFileSkipped:Z
      62: aload_0
      63: invokevirtual #54                 // Method readLine:()Ljava/lang/String;
      66: astore_1
      67: aload_1
      68: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
       4: invokevirtual #55                 // Method java/io/RandomAccessFile.close:()V
       7: return

  static int access$300(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #6                  // Field blockSize:I
       4: ireturn

  static java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #5                  // Field randomAccessFile:Ljava/io/RandomAccessFile;
       4: areturn

  static java.nio.charset.Charset access$500(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encoding:Ljava/nio/charset/Charset;
       4: areturn

  static int access$600(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #3                  // Field avoidNewlineSplitBufferSize:I
       4: ireturn

  static int access$700(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field byteDecrement:I
       4: ireturn

  static byte[][] access$800(org.apache.commons.io.input.ReversedLinesFileReader);
    Code:
       0: aload_0
       1: getfield      #1                  // Field newLineSequences:[[B
       4: areturn
}
