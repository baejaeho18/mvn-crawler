Compiled from "ChunkedWriter.java"
public class org.apache.commons.io.output.ChunkedWriter extends java.io.FilterWriter {
  private static final int DEFAULT_CHUNK_SIZE;

  private final int chunkSize;

  public org.apache.commons.io.output.ChunkedWriter(java.io.Writer, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
       5: iload_2
       6: ifgt          17
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":()V
      16: athrow
      17: aload_0
      18: iload_2
      19: putfield      #4                  // Field chunkSize:I
      22: return

  public org.apache.commons.io.output.ChunkedWriter(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        4096
       5: invokespecial #5                  // Method "<init>":(Ljava/io/Writer;I)V
       8: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: istore        4
       3: iload_2
       4: istore        5
       6: iload         4
       8: ifle          51
      11: iload         4
      13: aload_0
      14: getfield      #4                  // Field chunkSize:I
      17: invokestatic  #6                  // Method java/lang/Math.min:(II)I
      20: istore        6
      22: aload_0
      23: getfield      #7                  // Field out:Ljava/io/Writer;
      26: aload_1
      27: iload         5
      29: iload         6
      31: invokevirtual #8                  // Method java/io/Writer.write:([CII)V
      34: iload         4
      36: iload         6
      38: isub
      39: istore        4
      41: iload         5
      43: iload         6
      45: iadd
      46: istore        5
      48: goto          6
      51: return
}
