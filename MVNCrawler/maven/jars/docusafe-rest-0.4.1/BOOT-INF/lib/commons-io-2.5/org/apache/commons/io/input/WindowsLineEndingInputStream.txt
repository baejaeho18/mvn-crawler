Compiled from "WindowsLineEndingInputStream.java"
public class org.apache.commons.io.input.WindowsLineEndingInputStream extends java.io.InputStream {
  private boolean slashRSeen;

  private boolean slashNSeen;

  private boolean injectSlashN;

  private boolean eofSeen;

  private final java.io.InputStream target;

  private final boolean ensureLineFeedAtEndOfFile;

  public org.apache.commons.io.input.WindowsLineEndingInputStream(java.io.InputStream, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field slashRSeen:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field slashNSeen:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field injectSlashN:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field eofSeen:Z
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field target:Ljava/io/InputStream;
      29: aload_0
      30: iload_2
      31: putfield      #7                  // Field ensureLineFeedAtEndOfFile:Z
      34: return

  private int readWithUpdate() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field target:Ljava/io/InputStream;
       4: invokevirtual #8                  // Method java/io/InputStream.read:()I
       7: istore_1
       8: aload_0
       9: iload_1
      10: iconst_m1
      11: if_icmpne     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: putfield      #5                  // Field eofSeen:Z
      22: aload_0
      23: getfield      #5                  // Field eofSeen:Z
      26: ifeq          31
      29: iload_1
      30: ireturn
      31: aload_0
      32: iload_1
      33: bipush        13
      35: if_icmpne     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: putfield      #2                  // Field slashRSeen:Z
      46: aload_0
      47: iload_1
      48: bipush        10
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: putfield      #3                  // Field slashNSeen:Z
      61: iload_1
      62: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field eofSeen:Z
       4: ifeq          12
       7: aload_0
       8: invokespecial #9                  // Method eofGame:()I
      11: ireturn
      12: aload_0
      13: getfield      #4                  // Field injectSlashN:Z
      16: ifeq          27
      19: aload_0
      20: iconst_0
      21: putfield      #4                  // Field injectSlashN:Z
      24: bipush        10
      26: ireturn
      27: aload_0
      28: getfield      #2                  // Field slashRSeen:Z
      31: istore_1
      32: aload_0
      33: invokespecial #10                 // Method readWithUpdate:()I
      36: istore_2
      37: aload_0
      38: getfield      #5                  // Field eofSeen:Z
      41: ifeq          49
      44: aload_0
      45: invokespecial #9                  // Method eofGame:()I
      48: ireturn
      49: iload_2
      50: bipush        10
      52: if_icmpne     67
      55: iload_1
      56: ifne          67
      59: aload_0
      60: iconst_1
      61: putfield      #4                  // Field injectSlashN:Z
      64: bipush        13
      66: ireturn
      67: iload_2
      68: ireturn

  private int eofGame();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ensureLineFeedAtEndOfFile:Z
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field slashNSeen:Z
      13: ifne          31
      16: aload_0
      17: getfield      #2                  // Field slashRSeen:Z
      20: ifne          31
      23: aload_0
      24: iconst_1
      25: putfield      #2                  // Field slashRSeen:Z
      28: bipush        13
      30: ireturn
      31: aload_0
      32: getfield      #3                  // Field slashNSeen:Z
      35: ifne          51
      38: aload_0
      39: iconst_0
      40: putfield      #2                  // Field slashRSeen:Z
      43: aload_0
      44: iconst_1
      45: putfield      #3                  // Field slashNSeen:Z
      48: bipush        10
      50: ireturn
      51: iconst_m1
      52: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/io/InputStream.close:()V
       4: aload_0
       5: getfield      #6                  // Field target:Ljava/io/InputStream;
       8: invokevirtual #11                 // Method java/io/InputStream.close:()V
      11: return

  public synchronized void mark(int);
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String Mark not supported
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
