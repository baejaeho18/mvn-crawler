Compiled from "WeakHashtable.java"
public final class org.apache.commons.logging.impl.WeakHashtable extends java.util.Hashtable {
  private static final int MAX_CHANGES_BEFORE_PURGE;

  private static final int PARTIAL_PURGE_COUNT;

  private java.lang.ref.ReferenceQueue queue;

  private int changeCount;

  public org.apache.commons.logging.impl.WeakHashtable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/Hashtable."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field changeCount:I
      20: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: new           #6                  // class org/apache/commons/logging/impl/WeakHashtable$Referenced
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #7                  // Method org/apache/commons/logging/impl/WeakHashtable$Referenced."<init>":(Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #8                  // Method java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public java.util.Enumeration elements();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #10                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
       8: areturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #11                 // Method java/util/Hashtable.entrySet:()Ljava/util/Set;
       8: astore_1
       9: new           #12                 // class java/util/HashSet
      12: dup
      13: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      16: astore_2
      17: aload_1
      18: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          103
      33: aload_3
      34: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #17                 // class java/util/Map$Entry
      42: astore        4
      44: aload         4
      46: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #6                  // class org/apache/commons/logging/impl/WeakHashtable$Referenced
      54: astore        5
      56: aload         5
      58: invokestatic  #19                 // Method org/apache/commons/logging/impl/WeakHashtable$Referenced.access$100:(Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;)Ljava/lang/Object;
      61: astore        6
      63: aload         4
      65: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      70: astore        7
      72: aload         6
      74: ifnull        100
      77: new           #21                 // class org/apache/commons/logging/impl/WeakHashtable$Entry
      80: dup
      81: aload         6
      83: aload         7
      85: aconst_null
      86: invokespecial #22                 // Method org/apache/commons/logging/impl/WeakHashtable$Entry."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
      89: astore        8
      91: aload_2
      92: aload         8
      94: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          24
     103: aload_2
     104: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: new           #6                  // class org/apache/commons/logging/impl/WeakHashtable$Referenced
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #7                  // Method org/apache/commons/logging/impl/WeakHashtable$Referenced."<init>":(Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #24                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public java.util.Enumeration keys();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #25                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       8: astore_1
       9: new           #26                 // class org/apache/commons/logging/impl/WeakHashtable$1
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #27                 // Method org/apache/commons/logging/impl/WeakHashtable$1."<init>":(Lorg/apache/commons/logging/impl/WeakHashtable;Ljava/util/Enumeration;)V
      18: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #28                 // Method java/util/Hashtable.keySet:()Ljava/util/Set;
       8: astore_1
       9: new           #12                 // class java/util/HashSet
      12: dup
      13: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      16: astore_2
      17: aload_1
      18: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          68
      33: aload_3
      34: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #6                  // class org/apache/commons/logging/impl/WeakHashtable$Referenced
      42: astore        4
      44: aload         4
      46: invokestatic  #19                 // Method org/apache/commons/logging/impl/WeakHashtable$Referenced.access$100:(Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;)Ljava/lang/Object;
      49: astore        5
      51: aload         5
      53: ifnull        65
      56: aload_2
      57: aload         5
      59: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          24
      68: aload_2
      69: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #29                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #30                 // String Null keys are not allowed
      10: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #29                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #32                 // String Null values are not allowed
      24: invokespecial #31                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: dup
      30: getfield      #5                  // Field changeCount:I
      33: dup_x1
      34: iconst_1
      35: iadd
      36: putfield      #5                  // Field changeCount:I
      39: bipush        100
      41: if_icmple     56
      44: aload_0
      45: invokespecial #9                  // Method purge:()V
      48: aload_0
      49: iconst_0
      50: putfield      #5                  // Field changeCount:I
      53: goto          70
      56: aload_0
      57: getfield      #5                  // Field changeCount:I
      60: bipush        10
      62: irem
      63: ifne          70
      66: aload_0
      67: invokespecial #33                 // Method purgeOne:()V
      70: new           #6                  // class org/apache/commons/logging/impl/WeakHashtable$Referenced
      73: dup
      74: aload_1
      75: aload_0
      76: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      79: aconst_null
      80: invokespecial #34                 // Method org/apache/commons/logging/impl/WeakHashtable$Referenced."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
      83: astore_3
      84: aload_0
      85: aload_3
      86: aload_2
      87: invokespecial #35                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_1
       1: ifnull        60
       4: aload_1
       5: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: astore_2
      11: aload_2
      12: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          60
      27: aload_3
      28: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #17                 // class java/util/Map$Entry
      36: astore        4
      38: aload_0
      39: aload         4
      41: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: aload         4
      48: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      53: invokevirtual #37                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: goto          18
      60: return

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #38                 // Method java/util/Hashtable.values:()Ljava/util/Collection;
       8: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field changeCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #5                  // Field changeCount:I
      11: bipush        100
      13: if_icmple     28
      16: aload_0
      17: invokespecial #9                  // Method purge:()V
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field changeCount:I
      25: goto          42
      28: aload_0
      29: getfield      #5                  // Field changeCount:I
      32: bipush        10
      34: irem
      35: ifne          42
      38: aload_0
      39: invokespecial #33                 // Method purgeOne:()V
      42: aload_0
      43: new           #6                  // class org/apache/commons/logging/impl/WeakHashtable$Referenced
      46: dup
      47: aload_1
      48: aconst_null
      49: invokespecial #7                  // Method org/apache/commons/logging/impl/WeakHashtable$Referenced."<init>":(Ljava/lang/Object;Lorg/apache/commons/logging/impl/WeakHashtable$1;)V
      52: invokespecial #39                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      55: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #40                 // Method java/util/Hashtable.isEmpty:()Z
       8: ireturn

  public int size();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #41                 // Method java/util/Hashtable.size:()I
       8: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #42                 // Method java/util/Hashtable.toString:()Ljava/lang/String;
       8: areturn

  protected void rehash();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method purge:()V
       4: aload_0
       5: invokespecial #43                 // Method java/util/Hashtable.rehash:()V
       8: return

  private void purge();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      11: invokevirtual #44                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      14: checkcast     #45                 // class org/apache/commons/logging/impl/WeakHashtable$WeakKey
      17: dup
      18: astore_2
      19: ifnull        34
      22: aload_0
      23: aload_2
      24: invokestatic  #46                 // Method org/apache/commons/logging/impl/WeakHashtable$WeakKey.access$400:(Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey;)Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;
      27: invokespecial #39                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: goto          7
      34: aload_1
      35: monitorexit
      36: goto          44
      39: astore_3
      40: aload_1
      41: monitorexit
      42: aload_3
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    42    39   any

  private void purgeOne();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      11: invokevirtual #44                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      14: checkcast     #45                 // class org/apache/commons/logging/impl/WeakHashtable$WeakKey
      17: astore_2
      18: aload_2
      19: ifnull        31
      22: aload_0
      23: aload_2
      24: invokestatic  #46                 // Method org/apache/commons/logging/impl/WeakHashtable$WeakKey.access$400:(Lorg/apache/commons/logging/impl/WeakHashtable$WeakKey;)Lorg/apache/commons/logging/impl/WeakHashtable$Referenced;
      27: invokespecial #39                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_1
      38: monitorexit
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    33    36   any
          36    39    36   any
}
