Compiled from "CompositeByteBuf.java"
class com.mongodb.connection.CompositeByteBuf implements org.bson.ByteBuf {
  private final java.util.List<com.mongodb.connection.CompositeByteBuf$Component> components;

  private final java.util.concurrent.atomic.AtomicInteger referenceCount;

  private int position;

  private int limit;

  com.mongodb.connection.CompositeByteBuf(java.util.List<org.bson.ByteBuf>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: ldc           #5                  // String buffers
      18: aload_1
      19: invokestatic  #6                  // Method org/bson/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: ldc           #7                  // String buffer list not empty
      25: aload_1
      26: invokeinterface #8,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: invokestatic  #9                  // Method org/bson/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      42: aload_0
      43: new           #10                 // class java/util/ArrayList
      46: dup
      47: aload_1
      48: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      53: invokespecial #12                 // Method java/util/ArrayList."<init>":(I)V
      56: putfield      #13                 // Field components:Ljava/util/List;
      59: iconst_0
      60: istore_2
      61: aload_1
      62: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      67: astore_3
      68: aload_3
      69: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          134
      77: aload_3
      78: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #17                 // class org/bson/ByteBuf
      86: astore        4
      88: new           #18                 // class com/mongodb/connection/CompositeByteBuf$Component
      91: dup
      92: aload         4
      94: invokeinterface #19,  1           // InterfaceMethod org/bson/ByteBuf.asReadOnly:()Lorg/bson/ByteBuf;
      99: getstatic     #20                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     102: invokeinterface #21,  2           // InterfaceMethod org/bson/ByteBuf.order:(Ljava/nio/ByteOrder;)Lorg/bson/ByteBuf;
     107: iload_2
     108: invokespecial #22                 // Method com/mongodb/connection/CompositeByteBuf$Component."<init>":(Lorg/bson/ByteBuf;I)V
     111: astore        5
     113: aload_0
     114: getfield      #13                 // Field components:Ljava/util/List;
     117: aload         5
     119: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload         5
     127: invokestatic  #24                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$000:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
     130: istore_2
     131: goto          68
     134: aload_0
     135: aload_0
     136: getfield      #13                 // Field components:Ljava/util/List;
     139: aload_0
     140: getfield      #13                 // Field components:Ljava/util/List;
     143: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
     148: iconst_1
     149: isub
     150: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     155: checkcast     #18                 // class com/mongodb/connection/CompositeByteBuf$Component
     158: invokestatic  #24                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$000:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
     161: putfield      #26                 // Field limit:I
     164: return

  com.mongodb.connection.CompositeByteBuf(com.mongodb.connection.CompositeByteBuf);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: aload_1
      18: getfield      #13                 // Field components:Ljava/util/List;
      21: putfield      #13                 // Field components:Ljava/util/List;
      24: aload_0
      25: aload_1
      26: invokevirtual #27                 // Method position:()I
      29: putfield      #28                 // Field position:I
      32: aload_0
      33: aload_1
      34: invokevirtual #29                 // Method limit:()I
      37: putfield      #26                 // Field limit:I
      40: return

  public org.bson.ByteBuf order(java.nio.ByteOrder);
    Code:
       0: aload_1
       1: getstatic     #30                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       4: if_acmpne     30
       7: new           #31                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #32                 // String Only %s is supported
      13: iconst_1
      14: anewarray     #33                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: getstatic     #30                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      22: aastore
      23: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #13                 // Field components:Ljava/util/List;
       4: aload_0
       5: getfield      #13                 // Field components:Ljava/util/List;
       8: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
      13: iconst_1
      14: isub
      15: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #18                 // class com/mongodb/connection/CompositeByteBuf$Component
      23: invokestatic  #24                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$000:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      26: ireturn

  public int remaining();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method limit:()I
       4: aload_0
       5: invokevirtual #27                 // Method position:()I
       8: isub
       9: ireturn

  public boolean hasRemaining();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method remaining:()I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int position();
    Code:
       0: aload_0
       1: getfield      #28                 // Field position:I
       4: ireturn

  public org.bson.ByteBuf position(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #26                 // Field limit:I
       9: if_icmple     36
      12: new           #37                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: ldc           #38                 // String %d is out of bounds
      18: iconst_1
      19: anewarray     #33                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: iload_1
      25: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #28                 // Field position:I
      41: aload_0
      42: areturn

  public org.bson.ByteBuf clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #28                 // Field position:I
       5: aload_0
       6: aload_0
       7: invokevirtual #41                 // Method capacity:()I
      10: putfield      #26                 // Field limit:I
      13: aload_0
      14: areturn

  public int limit();
    Code:
       0: aload_0
       1: getfield      #26                 // Field limit:I
       4: ireturn

  public byte get();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #28                 // Field position:I
       5: invokespecial #42                 // Method checkIndex:(I)V
       8: aload_0
       9: dup
      10: getfield      #28                 // Field position:I
      13: iconst_1
      14: iadd
      15: putfield      #28                 // Field position:I
      18: aload_0
      19: aload_0
      20: getfield      #28                 // Field position:I
      23: iconst_1
      24: isub
      25: invokevirtual #43                 // Method get:(I)B
      28: ireturn

  public byte get(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #42                 // Method checkIndex:(I)V
       5: aload_0
       6: iload_1
       7: invokespecial #44                 // Method findComponent:(I)Lcom/mongodb/connection/CompositeByteBuf$Component;
      10: astore_2
      11: aload_2
      12: invokestatic  #45                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$200:(Lcom/mongodb/connection/CompositeByteBuf$Component;)Lorg/bson/ByteBuf;
      15: iload_1
      16: aload_2
      17: invokestatic  #46                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$100:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      20: isub
      21: invokeinterface #47,  2           // InterfaceMethod org/bson/ByteBuf.get:(I)B
      26: ireturn

  public org.bson.ByteBuf get(byte[]);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #28                 // Field position:I
       5: aload_1
       6: arraylength
       7: invokespecial #48                 // Method checkIndex:(II)V
      10: aload_0
      11: dup
      12: getfield      #28                 // Field position:I
      15: aload_1
      16: arraylength
      17: iadd
      18: putfield      #28                 // Field position:I
      21: aload_0
      22: aload_0
      23: getfield      #28                 // Field position:I
      26: aload_1
      27: arraylength
      28: isub
      29: aload_1
      30: invokevirtual #49                 // Method get:(I[B)Lorg/bson/ByteBuf;
      33: areturn

  public org.bson.ByteBuf get(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #50                 // Method get:(I[BII)Lorg/bson/ByteBuf;
       9: areturn

  public org.bson.ByteBuf get(byte[], int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #28                 // Field position:I
       5: iload_3
       6: invokespecial #48                 // Method checkIndex:(II)V
       9: aload_0
      10: dup
      11: getfield      #28                 // Field position:I
      14: iload_3
      15: iadd
      16: putfield      #28                 // Field position:I
      19: aload_0
      20: aload_0
      21: getfield      #28                 // Field position:I
      24: iload_3
      25: isub
      26: aload_1
      27: iload_2
      28: iload_3
      29: invokevirtual #50                 // Method get:(I[BII)Lorg/bson/ByteBuf;
      32: areturn

  public org.bson.ByteBuf get(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: arraylength
       7: invokespecial #51                 // Method checkDstIndex:(IIII)V
      10: aload_0
      11: iload_1
      12: invokespecial #52                 // Method findComponentIndex:(I)I
      15: istore        5
      17: iload_1
      18: istore        6
      20: iload_3
      21: istore        7
      23: iload         4
      25: istore        8
      27: iload         8
      29: ifle          125
      32: aload_0
      33: getfield      #13                 // Field components:Ljava/util/List;
      36: iload         5
      38: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #18                 // class com/mongodb/connection/CompositeByteBuf$Component
      46: astore        9
      48: iload         8
      50: aload         9
      52: invokestatic  #45                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$200:(Lcom/mongodb/connection/CompositeByteBuf$Component;)Lorg/bson/ByteBuf;
      55: invokeinterface #53,  1           // InterfaceMethod org/bson/ByteBuf.capacity:()I
      60: iload         6
      62: aload         9
      64: invokestatic  #46                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$100:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      67: isub
      68: isub
      69: invokestatic  #54                 // Method java/lang/Math.min:(II)I
      72: istore        10
      74: aload         9
      76: invokestatic  #45                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$200:(Lcom/mongodb/connection/CompositeByteBuf$Component;)Lorg/bson/ByteBuf;
      79: iload         6
      81: aload         9
      83: invokestatic  #46                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$100:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      86: isub
      87: aload_2
      88: iload         7
      90: iload         10
      92: invokeinterface #55,  5           // InterfaceMethod org/bson/ByteBuf.get:(I[BII)Lorg/bson/ByteBuf;
      97: pop
      98: iload         6
     100: iload         10
     102: iadd
     103: istore        6
     105: iload         7
     107: iload         10
     109: iadd
     110: istore        7
     112: iload         8
     114: iload         10
     116: isub
     117: istore        8
     119: iinc          5, 1
     122: goto          27
     125: aload_0
     126: areturn

  public long getLong();
    Code:
       0: aload_0
       1: dup
       2: getfield      #28                 // Field position:I
       5: bipush        8
       7: iadd
       8: putfield      #28                 // Field position:I
      11: aload_0
      12: aload_0
      13: getfield      #28                 // Field position:I
      16: bipush        8
      18: isub
      19: invokevirtual #56                 // Method getLong:(I)J
      22: lreturn

  public long getLong(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #48                 // Method checkIndex:(II)V
       7: aload_0
       8: iload_1
       9: invokespecial #44                 // Method findComponent:(I)Lcom/mongodb/connection/CompositeByteBuf$Component;
      12: astore_2
      13: iload_1
      14: bipush        8
      16: iadd
      17: aload_2
      18: invokestatic  #24                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$000:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      21: if_icmpgt     40
      24: aload_2
      25: invokestatic  #45                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$200:(Lcom/mongodb/connection/CompositeByteBuf$Component;)Lorg/bson/ByteBuf;
      28: iload_1
      29: aload_2
      30: invokestatic  #46                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$100:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      33: isub
      34: invokeinterface #57,  2           // InterfaceMethod org/bson/ByteBuf.getLong:(I)J
      39: lreturn
      40: aload_0
      41: iload_1
      42: invokevirtual #58                 // Method getInt:(I)I
      45: i2l
      46: ldc2_w        #59                 // long 4294967295l
      49: land
      50: aload_0
      51: iload_1
      52: iconst_4
      53: iadd
      54: invokevirtual #58                 // Method getInt:(I)I
      57: i2l
      58: ldc2_w        #59                 // long 4294967295l
      61: land
      62: bipush        32
      64: lshl
      65: lor
      66: lreturn

  public double getDouble();
    Code:
       0: aload_0
       1: dup
       2: getfield      #28                 // Field position:I
       5: bipush        8
       7: iadd
       8: putfield      #28                 // Field position:I
      11: aload_0
      12: aload_0
      13: getfield      #28                 // Field position:I
      16: bipush        8
      18: isub
      19: invokevirtual #61                 // Method getDouble:(I)D
      22: dreturn

  public double getDouble(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method getLong:(I)J
       5: invokestatic  #62                 // Method java/lang/Double.longBitsToDouble:(J)D
       8: dreturn

  public int getInt();
    Code:
       0: aload_0
       1: dup
       2: getfield      #28                 // Field position:I
       5: iconst_4
       6: iadd
       7: putfield      #28                 // Field position:I
      10: aload_0
      11: aload_0
      12: getfield      #28                 // Field position:I
      15: iconst_4
      16: isub
      17: invokevirtual #58                 // Method getInt:(I)I
      20: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #48                 // Method checkIndex:(II)V
       6: aload_0
       7: iload_1
       8: invokespecial #44                 // Method findComponent:(I)Lcom/mongodb/connection/CompositeByteBuf$Component;
      11: astore_2
      12: iload_1
      13: iconst_4
      14: iadd
      15: aload_2
      16: invokestatic  #24                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$000:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      19: if_icmpgt     38
      22: aload_2
      23: invokestatic  #45                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$200:(Lcom/mongodb/connection/CompositeByteBuf$Component;)Lorg/bson/ByteBuf;
      26: iload_1
      27: aload_2
      28: invokestatic  #46                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$100:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      31: isub
      32: invokeinterface #63,  2           // InterfaceMethod org/bson/ByteBuf.getInt:(I)I
      37: ireturn
      38: aload_0
      39: iload_1
      40: invokespecial #64                 // Method getShort:(I)I
      43: ldc           #65                 // int 65535
      45: iand
      46: aload_0
      47: iload_1
      48: iconst_2
      49: iadd
      50: invokespecial #64                 // Method getShort:(I)I
      53: ldc           #65                 // int 65535
      55: iand
      56: bipush        16
      58: ishl
      59: ior
      60: ireturn

  private int getShort(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #48                 // Method checkIndex:(II)V
       6: aload_0
       7: iload_1
       8: invokevirtual #43                 // Method get:(I)B
      11: sipush        255
      14: iand
      15: aload_0
      16: iload_1
      17: iconst_1
      18: iadd
      19: invokevirtual #43                 // Method get:(I)B
      22: sipush        255
      25: iand
      26: bipush        8
      28: ishl
      29: ior
      30: i2s
      31: ireturn

  public byte[] array();
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #66                 // String Not implemented yet!
       6: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.bson.ByteBuf limit(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: invokevirtual #41                 // Method capacity:()I
       9: if_icmple     36
      12: new           #37                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: ldc           #38                 // String %d is out of bounds
      18: iconst_1
      19: anewarray     #33                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: iload_1
      25: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #26                 // Field limit:I
      41: aload_0
      42: areturn

  public org.bson.ByteBuf put(int, byte);
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #67                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.bson.ByteBuf put(byte[], int, int);
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #67                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.bson.ByteBuf put(byte);
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #67                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.bson.ByteBuf flip();
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #67                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.bson.ByteBuf asReadOnly();
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #67                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public org.bson.ByteBuf duplicate();
    Code:
       0: new           #68                 // class com/mongodb/connection/CompositeByteBuf
       3: dup
       4: aload_0
       5: invokespecial #69                 // Method "<init>":(Lcom/mongodb/connection/CompositeByteBuf;)V
       8: areturn

  public java.nio.ByteBuffer asNIO();
    Code:
       0: aload_0
       1: getfield      #13                 // Field components:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: if_icmpne     56
      13: aload_0
      14: getfield      #13                 // Field components:Ljava/util/List;
      17: iconst_0
      18: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #18                 // class com/mongodb/connection/CompositeByteBuf$Component
      26: invokestatic  #45                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$200:(Lcom/mongodb/connection/CompositeByteBuf$Component;)Lorg/bson/ByteBuf;
      29: invokeinterface #70,  1           // InterfaceMethod org/bson/ByteBuf.asNIO:()Ljava/nio/ByteBuffer;
      34: invokevirtual #71                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      37: astore_1
      38: aload_1
      39: aload_0
      40: getfield      #28                 // Field position:I
      43: invokevirtual #72                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      46: aload_0
      47: getfield      #26                 // Field limit:I
      50: invokevirtual #73                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_1
      55: areturn
      56: aload_0
      57: invokevirtual #36                 // Method remaining:()I
      60: newarray       byte
      62: astore_1
      63: aload_0
      64: aload_0
      65: getfield      #28                 // Field position:I
      68: aload_1
      69: iconst_0
      70: aload_1
      71: arraylength
      72: invokevirtual #50                 // Method get:(I[BII)Lorg/bson/ByteBuf;
      75: pop
      76: aload_1
      77: invokestatic  #74                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      80: areturn

  public int getReferenceCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public org.bson.ByteBuf retain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: iconst_1
       8: if_icmpne     29
      11: aload_0
      12: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
      15: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      18: pop
      19: new           #78                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #79                 // String Attempted to increment the reference count when it is already 0
      25: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: areturn

  public void release();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #77                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifge          28
      10: aload_0
      11: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
      14: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      17: pop
      18: new           #78                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #81                 // String Attempted to decrement the reference count below 0
      24: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  private com.mongodb.connection.CompositeByteBuf$Component findComponent(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field components:Ljava/util/List;
       4: aload_0
       5: iload_1
       6: invokespecial #52                 // Method findComponentIndex:(I)I
       9: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      14: checkcast     #18                 // class com/mongodb/connection/CompositeByteBuf$Component
      17: areturn

  private int findComponentIndex(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field components:Ljava/util/List;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: isub
      11: istore_2
      12: iload_2
      13: iflt          46
      16: aload_0
      17: getfield      #13                 // Field components:Ljava/util/List;
      20: iload_2
      21: invokeinterface #25,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      26: checkcast     #18                 // class com/mongodb/connection/CompositeByteBuf$Component
      29: astore_3
      30: iload_1
      31: aload_3
      32: invokestatic  #46                 // Method com/mongodb/connection/CompositeByteBuf$Component.access$100:(Lcom/mongodb/connection/CompositeByteBuf$Component;)I
      35: if_icmplt     40
      38: iload_2
      39: ireturn
      40: iinc          2, -1
      43: goto          12
      46: new           #37                 // class java/lang/IndexOutOfBoundsException
      49: dup
      50: ldc           #38                 // String %d is out of bounds
      52: iconst_1
      53: anewarray     #33                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: iload_1
      59: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: aastore
      63: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      69: athrow

  private void checkIndex(int);
    Code:
       0: aload_0
       1: invokespecial #82                 // Method ensureAccessible:()V
       4: iload_1
       5: iflt          16
       8: iload_1
       9: aload_0
      10: invokevirtual #41                 // Method capacity:()I
      13: if_icmplt     50
      16: new           #37                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: ldc           #83                 // String index: %d (expected: range(0, %d))
      22: iconst_2
      23: anewarray     #33                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: iload_1
      29: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: invokevirtual #41                 // Method capacity:()I
      39: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: aastore
      43: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: return

  private void checkIndex(int, int);
    Code:
       0: aload_0
       1: invokespecial #82                 // Method ensureAccessible:()V
       4: iload_1
       5: iflt          18
       8: iload_1
       9: aload_0
      10: invokevirtual #41                 // Method capacity:()I
      13: iload_2
      14: isub
      15: if_icmple     59
      18: new           #37                 // class java/lang/IndexOutOfBoundsException
      21: dup
      22: ldc           #84                 // String index: %d, length: %d (expected: range(0, %d))
      24: iconst_3
      25: anewarray     #33                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: iload_1
      31: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: dup
      36: iconst_1
      37: iload_2
      38: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: dup
      43: iconst_2
      44: aload_0
      45: invokevirtual #41                 // Method capacity:()I
      48: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      55: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: return

  private void checkDstIndex(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #48                 // Method checkIndex:(II)V
       6: iload_3
       7: iflt          18
      10: iload_3
      11: iload         4
      13: iload_2
      14: isub
      15: if_icmple     57
      18: new           #37                 // class java/lang/IndexOutOfBoundsException
      21: dup
      22: ldc           #85                 // String dstIndex: %d, length: %d (expected: range(0, %d))
      24: iconst_3
      25: anewarray     #33                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: iload_3
      31: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: dup
      36: iconst_1
      37: iload_2
      38: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: dup
      43: iconst_2
      44: iload         4
      46: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: aastore
      50: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      53: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: return

  private void ensureAccessible();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifne          20
      10: new           #78                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #86                 // String Reference count is 0
      16: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return
}
