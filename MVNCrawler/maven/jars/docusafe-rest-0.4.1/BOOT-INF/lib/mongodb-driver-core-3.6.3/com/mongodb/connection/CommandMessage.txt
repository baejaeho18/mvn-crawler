Compiled from "CommandMessage.java"
final class com.mongodb.connection.CommandMessage extends com.mongodb.connection.RequestMessage {
  private final com.mongodb.MongoNamespace namespace;

  private final org.bson.BsonDocument command;

  private final org.bson.FieldNameValidator commandFieldNameValidator;

  private final com.mongodb.ReadPreference readPreference;

  private final com.mongodb.connection.SplittablePayload payload;

  private final org.bson.FieldNameValidator payloadFieldNameValidator;

  private final boolean responseExpected;

  private final com.mongodb.connection.ClusterConnectionMode clusterConnectionMode;

  com.mongodb.connection.CommandMessage(com.mongodb.MongoNamespace, org.bson.BsonDocument, org.bson.FieldNameValidator, com.mongodb.ReadPreference, com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iconst_1
       9: aconst_null
      10: aconst_null
      11: getstatic     #1                  // Field com/mongodb/connection/ClusterConnectionMode.MULTIPLE:Lcom/mongodb/connection/ClusterConnectionMode;
      14: invokespecial #2                  // Method "<init>":(Lcom/mongodb/MongoNamespace;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lcom/mongodb/connection/MessageSettings;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;Lcom/mongodb/connection/ClusterConnectionMode;)V
      17: return

  com.mongodb.connection.CommandMessage(com.mongodb.MongoNamespace, org.bson.BsonDocument, org.bson.FieldNameValidator, com.mongodb.ReadPreference, com.mongodb.connection.MessageSettings, boolean, com.mongodb.connection.SplittablePayload, org.bson.FieldNameValidator, com.mongodb.connection.ClusterConnectionMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method com/mongodb/MongoNamespace.getFullName:()Ljava/lang/String;
       5: aload         5
       7: invokestatic  #4                  // Method getOpCode:(Lcom/mongodb/connection/MessageSettings;)Lcom/mongodb/connection/OpCode;
      10: aload         5
      12: invokespecial #5                  // Method com/mongodb/connection/RequestMessage."<init>":(Ljava/lang/String;Lcom/mongodb/connection/OpCode;Lcom/mongodb/connection/MessageSettings;)V
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field namespace:Lcom/mongodb/MongoNamespace;
      20: aload_0
      21: aload_2
      22: putfield      #7                  // Field command:Lorg/bson/BsonDocument;
      25: aload_0
      26: aload_3
      27: putfield      #8                  // Field commandFieldNameValidator:Lorg/bson/FieldNameValidator;
      30: aload_0
      31: aload         4
      33: putfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
      36: aload_0
      37: iload         6
      39: putfield      #10                 // Field responseExpected:Z
      42: aload_0
      43: aload         7
      45: putfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      48: aload_0
      49: aload         8
      51: putfield      #12                 // Field payloadFieldNameValidator:Lorg/bson/FieldNameValidator;
      54: aload_0
      55: aload         9
      57: putfield      #13                 // Field clusterConnectionMode:Lcom/mongodb/connection/ClusterConnectionMode;
      60: return

  org.bson.BsonDocument getCommandDocument(com.mongodb.connection.ByteBufferBsonOutput);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #14                 // Method getEncodingMetadata:()Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
       5: invokevirtual #15                 // Method com/mongodb/connection/RequestMessage$EncodingMetadata.getFirstDocumentPosition:()I
       8: invokestatic  #16                 // Method com/mongodb/connection/ByteBufBsonDocument.createOne:(Lcom/mongodb/connection/ByteBufferBsonOutput;I)Lcom/mongodb/connection/ByteBufBsonDocument;
      11: astore_2
      12: aload_0
      13: invokespecial #17                 // Method useOpMsg:()Z
      16: ifeq          96
      19: aload_0
      20: invokevirtual #18                 // Method containsPayload:()Z
      23: ifeq          96
      26: aload_2
      27: invokevirtual #19                 // Method com/mongodb/connection/ByteBufBsonDocument.toBsonDocument:()Lorg/bson/BsonDocument;
      30: astore_3
      31: aload_0
      32: invokevirtual #14                 // Method getEncodingMetadata:()Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
      35: invokevirtual #15                 // Method com/mongodb/connection/RequestMessage$EncodingMetadata.getFirstDocumentPosition:()I
      38: aload_2
      39: invokevirtual #20                 // Method com/mongodb/connection/ByteBufBsonDocument.getSizeInBytes:()I
      42: iadd
      43: iconst_1
      44: iadd
      45: iconst_4
      46: iadd
      47: aload_0
      48: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      51: invokevirtual #21                 // Method com/mongodb/connection/SplittablePayload.getPayloadName:()Ljava/lang/String;
      54: ldc           #22                 // String UTF-8
      56: invokestatic  #23                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      59: invokevirtual #24                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      62: arraylength
      63: iadd
      64: iconst_1
      65: iadd
      66: istore        4
      68: aload_3
      69: aload_0
      70: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      73: invokevirtual #21                 // Method com/mongodb/connection/SplittablePayload.getPayloadName:()Ljava/lang/String;
      76: new           #25                 // class org/bson/BsonArray
      79: dup
      80: aload_1
      81: iload         4
      83: invokestatic  #26                 // Method com/mongodb/connection/ByteBufBsonDocument.createList:(Lcom/mongodb/connection/ByteBufferBsonOutput;I)Ljava/util/List;
      86: invokespecial #27                 // Method org/bson/BsonArray."<init>":(Ljava/util/List;)V
      89: invokevirtual #28                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      92: pop
      93: goto          98
      96: aload_2
      97: astore_3
      98: aload_3
      99: ldc           #29                 // String $query
     101: invokevirtual #30                 // Method org/bson/BsonDocument.containsKey:(Ljava/lang/Object;)Z
     104: ifeq          114
     107: aload_3
     108: ldc           #29                 // String $query
     110: invokevirtual #31                 // Method org/bson/BsonDocument.getDocument:(Ljava/lang/Object;)Lorg/bson/BsonDocument;
     113: astore_3
     114: aload_3
     115: areturn

  boolean containsPayload();
    Code:
       0: aload_0
       1: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isResponseExpected();
    Code:
       0: ldc           #32                 // String The message must be encoded before determining if a response is expected
       2: aload_0
       3: invokevirtual #14                 // Method getEncodingMetadata:()Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #33                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: invokespecial #17                 // Method useOpMsg:()Z
      21: ifeq          31
      24: aload_0
      25: invokespecial #34                 // Method requireOpMsgResponse:()Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  protected com.mongodb.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput, com.mongodb.session.SessionContext);
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
       6: bipush        16
       8: isub
       9: istore_3
      10: aload_0
      11: invokespecial #17                 // Method useOpMsg:()Z
      14: ifeq          168
      17: aload_1
      18: invokeinterface #35,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      23: istore        5
      25: aload_1
      26: iconst_0
      27: invokeinterface #37,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      32: aload_1
      33: iconst_0
      34: invokeinterface #38,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      39: aload_1
      40: invokeinterface #35,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      45: istore        4
      47: aload_0
      48: aload_0
      49: invokespecial #39                 // Method getCommandToEncode:()Lorg/bson/BsonDocument;
      52: aload_1
      53: aload_0
      54: getfield      #8                  // Field commandFieldNameValidator:Lorg/bson/FieldNameValidator;
      57: aload_0
      58: aload_2
      59: invokespecial #40                 // Method getExtraElements:(Lcom/mongodb/session/SessionContext;)Ljava/util/List;
      62: invokevirtual #41                 // Method addDocument:(Lorg/bson/BsonDocument;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;Ljava/util/List;)V
      65: aload_0
      66: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      69: ifnull        153
      72: aload_1
      73: iconst_1
      74: invokeinterface #38,  2           // InterfaceMethod org/bson/io/BsonOutput.writeByte:(I)V
      79: aload_1
      80: invokeinterface #35,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      85: istore        6
      87: aload_1
      88: iconst_0
      89: invokeinterface #37,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      94: aload_1
      95: aload_0
      96: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      99: invokevirtual #21                 // Method com/mongodb/connection/SplittablePayload.getPayloadName:()Ljava/lang/String;
     102: invokeinterface #42,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
     107: new           #43                 // class org/bson/BsonBinaryWriter
     110: dup
     111: aload_1
     112: aload_0
     113: getfield      #12                 // Field payloadFieldNameValidator:Lorg/bson/FieldNameValidator;
     116: invokespecial #44                 // Method org/bson/BsonBinaryWriter."<init>":(Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;)V
     119: aload_1
     120: aload_0
     121: invokevirtual #45                 // Method getSettings:()Lcom/mongodb/connection/MessageSettings;
     124: iload_3
     125: aload_0
     126: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
     129: invokestatic  #46                 // Method com/mongodb/connection/BsonWriterHelper.writePayload:(Lorg/bson/BsonWriter;Lorg/bson/io/BsonOutput;Lcom/mongodb/connection/MessageSettings;ILcom/mongodb/connection/SplittablePayload;)V
     132: aload_1
     133: invokeinterface #35,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
     138: iload         6
     140: isub
     141: istore        7
     143: aload_1
     144: iload         6
     146: iload         7
     148: invokeinterface #47,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(II)V
     153: aload_1
     154: iload         5
     156: aload_0
     157: invokespecial #48                 // Method getOpMsgFlagBits:()I
     160: invokeinterface #47,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(II)V
     165: goto          243
     168: aload_1
     169: aload_0
     170: invokespecial #49                 // Method getOpQueryFlagBits:()I
     173: invokeinterface #37,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
     178: aload_1
     179: aload_0
     180: getfield      #6                  // Field namespace:Lcom/mongodb/MongoNamespace;
     183: invokevirtual #3                  // Method com/mongodb/MongoNamespace.getFullName:()Ljava/lang/String;
     186: invokeinterface #42,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
     191: aload_1
     192: iconst_0
     193: invokeinterface #37,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
     198: aload_1
     199: iconst_m1
     200: invokeinterface #37,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
     205: aload_1
     206: invokeinterface #35,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
     211: istore        4
     213: aload_0
     214: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
     217: ifnonnull     237
     220: aload_0
     221: aload_0
     222: invokespecial #39                 // Method getCommandToEncode:()Lorg/bson/BsonDocument;
     225: aload_1
     226: aload_0
     227: getfield      #8                  // Field commandFieldNameValidator:Lorg/bson/FieldNameValidator;
     230: aconst_null
     231: invokevirtual #41                 // Method addDocument:(Lorg/bson/BsonDocument;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;Ljava/util/List;)V
     234: goto          243
     237: aload_0
     238: aload_1
     239: iload_3
     240: invokespecial #50                 // Method addDocumentWithPayload:(Lorg/bson/io/BsonOutput;I)V
     243: new           #51                 // class com/mongodb/connection/RequestMessage$EncodingMetadata
     246: dup
     247: iload         4
     249: invokespecial #52                 // Method com/mongodb/connection/RequestMessage$EncodingMetadata."<init>":(I)V
     252: areturn

  private org.bson.FieldNameValidator getPayloadArrayFieldNameValidator();
    Code:
       0: new           #53                 // class java/util/HashMap
       3: dup
       4: invokespecial #54                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      13: invokevirtual #21                 // Method com/mongodb/connection/SplittablePayload.getPayloadName:()Ljava/lang/String;
      16: aload_0
      17: getfield      #12                 // Field payloadFieldNameValidator:Lorg/bson/FieldNameValidator;
      20: invokeinterface #55,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: new           #56                 // class com/mongodb/internal/validator/MappedFieldNameValidator
      29: dup
      30: aload_0
      31: getfield      #8                  // Field commandFieldNameValidator:Lorg/bson/FieldNameValidator;
      34: aload_1
      35: invokespecial #57                 // Method com/mongodb/internal/validator/MappedFieldNameValidator."<init>":(Lorg/bson/FieldNameValidator;Ljava/util/Map;)V
      38: areturn

  private void addDocumentWithPayload(org.bson.io.BsonOutput, int);
    Code:
       0: new           #43                 // class org/bson/BsonBinaryWriter
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #58                 // Method getPayloadArrayFieldNameValidator:()Lorg/bson/FieldNameValidator;
       9: invokespecial #44                 // Method org/bson/BsonBinaryWriter."<init>":(Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;)V
      12: astore_3
      13: aload_0
      14: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      17: ifnonnull     24
      20: aload_3
      21: goto          42
      24: new           #59                 // class com/mongodb/connection/SplittablePayloadBsonWriter
      27: dup
      28: aload_3
      29: aload_1
      30: iload_2
      31: aload_0
      32: invokevirtual #45                 // Method getSettings:()Lcom/mongodb/connection/MessageSettings;
      35: aload_0
      36: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      39: invokespecial #60                 // Method com/mongodb/connection/SplittablePayloadBsonWriter."<init>":(Lorg/bson/BsonBinaryWriter;Lorg/bson/io/BsonOutput;ILcom/mongodb/connection/MessageSettings;Lcom/mongodb/connection/SplittablePayload;)V
      42: astore        4
      44: aload_0
      45: invokespecial #39                 // Method getCommandToEncode:()Lorg/bson/BsonDocument;
      48: astore        5
      50: aload_0
      51: aload         5
      53: invokevirtual #61                 // Method getCodec:(Lorg/bson/BsonDocument;)Lorg/bson/codecs/Codec;
      56: aload         4
      58: aload         5
      60: invokestatic  #62                 // Method org/bson/codecs/EncoderContext.builder:()Lorg/bson/codecs/EncoderContext$Builder;
      63: invokevirtual #63                 // Method org/bson/codecs/EncoderContext$Builder.build:()Lorg/bson/codecs/EncoderContext;
      66: invokeinterface #64,  4           // InterfaceMethod org/bson/codecs/Codec.encode:(Lorg/bson/BsonWriter;Ljava/lang/Object;Lorg/bson/codecs/EncoderContext;)V
      71: return

  private int getOpMsgFlagBits();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method getOpMsgResponseExpectedFlagBit:()I
       4: ireturn

  private int getOpMsgResponseExpectedFlagBit();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method requireOpMsgResponse:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: iconst_2
      10: ireturn

  private boolean requireOpMsgResponse();
    Code:
       0: aload_0
       1: getfield      #10                 // Field responseExpected:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      13: ifnull        30
      16: aload_0
      17: getfield      #11                 // Field payload:Lcom/mongodb/connection/SplittablePayload;
      20: invokevirtual #66                 // Method com/mongodb/connection/SplittablePayload.hasAnotherSplit:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private int getOpQueryFlagBits();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method getOpQuerySlaveOkFlagBit:()I
       4: ireturn

  private int getOpQuerySlaveOkFlagBit();
    Code:
       0: aload_0
       1: invokespecial #68                 // Method isSlaveOk:()Z
       4: ifeq          9
       7: iconst_4
       8: ireturn
       9: iconst_0
      10: ireturn

  private boolean isSlaveOk();
    Code:
       0: aload_0
       1: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
       4: ifnull        17
       7: aload_0
       8: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
      11: invokevirtual #69                 // Method com/mongodb/ReadPreference.isSlaveOk:()Z
      14: ifne          24
      17: aload_0
      18: invokespecial #70                 // Method isDirectConnectionToNonShardRouter:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private boolean isDirectConnectionToNonShardRouter();
    Code:
       0: aload_0
       1: getfield      #13                 // Field clusterConnectionMode:Lcom/mongodb/connection/ClusterConnectionMode;
       4: getstatic     #71                 // Field com/mongodb/connection/ClusterConnectionMode.SINGLE:Lcom/mongodb/connection/ClusterConnectionMode;
       7: if_acmpne     27
      10: aload_0
      11: invokevirtual #45                 // Method getSettings:()Lcom/mongodb/connection/MessageSettings;
      14: invokevirtual #72                 // Method com/mongodb/connection/MessageSettings.getServerType:()Lcom/mongodb/connection/ServerType;
      17: getstatic     #73                 // Field com/mongodb/connection/ServerType.SHARD_ROUTER:Lcom/mongodb/connection/ServerType;
      20: if_acmpeq     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  private boolean useOpMsg();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getOpCode:()Lcom/mongodb/connection/OpCode;
       4: getstatic     #75                 // Field com/mongodb/connection/OpCode.OP_MSG:Lcom/mongodb/connection/OpCode;
       7: invokevirtual #76                 // Method com/mongodb/connection/OpCode.equals:(Ljava/lang/Object;)Z
      10: ireturn

  private org.bson.BsonDocument getCommandToEncode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field command:Lorg/bson/BsonDocument;
       4: astore_1
       5: aload_0
       6: invokespecial #17                 // Method useOpMsg:()Z
       9: ifne          58
      12: aload_0
      13: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
      16: ifnull        58
      19: aload_0
      20: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
      23: invokestatic  #77                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      26: invokevirtual #78                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      29: ifne          58
      32: new           #79                 // class org/bson/BsonDocument
      35: dup
      36: ldc           #29                 // String $query
      38: aload_0
      39: getfield      #7                  // Field command:Lorg/bson/BsonDocument;
      42: invokespecial #80                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      45: ldc           #81                 // String $readPreference
      47: aload_0
      48: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
      51: invokevirtual #82                 // Method com/mongodb/ReadPreference.toDocument:()Lorg/bson/BsonDocument;
      54: invokevirtual #28                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      57: astore_1
      58: aload_1
      59: areturn

  private java.util.List<org.bson.BsonElement> getExtraElements(com.mongodb.session.SessionContext);
    Code:
       0: new           #83                 // class java/util/ArrayList
       3: dup
       4: invokespecial #84                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_2
       9: new           #85                 // class org/bson/BsonElement
      12: dup
      13: ldc           #86                 // String $db
      15: new           #87                 // class org/bson/BsonString
      18: dup
      19: new           #88                 // class com/mongodb/MongoNamespace
      22: dup
      23: aload_0
      24: invokevirtual #89                 // Method getCollectionName:()Ljava/lang/String;
      27: invokespecial #90                 // Method com/mongodb/MongoNamespace."<init>":(Ljava/lang/String;)V
      30: invokevirtual #91                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
      33: invokespecial #92                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      36: invokespecial #93                 // Method org/bson/BsonElement."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      39: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_1
      46: invokeinterface #95,  1           // InterfaceMethod com/mongodb/session/SessionContext.getClusterTime:()Lorg/bson/BsonDocument;
      51: ifnull        76
      54: aload_2
      55: new           #85                 // class org/bson/BsonElement
      58: dup
      59: ldc           #96                 // String $clusterTime
      61: aload_1
      62: invokeinterface #95,  1           // InterfaceMethod com/mongodb/session/SessionContext.getClusterTime:()Lorg/bson/BsonDocument;
      67: invokespecial #93                 // Method org/bson/BsonElement."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      70: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      75: pop
      76: aload_1
      77: invokeinterface #97,  1           // InterfaceMethod com/mongodb/session/SessionContext.hasSession:()Z
      82: ifeq          114
      85: aload_0
      86: getfield      #10                 // Field responseExpected:Z
      89: ifeq          114
      92: aload_2
      93: new           #85                 // class org/bson/BsonElement
      96: dup
      97: ldc           #98                 // String lsid
      99: aload_1
     100: invokeinterface #99,  1           // InterfaceMethod com/mongodb/session/SessionContext.getSessionId:()Lorg/bson/BsonDocument;
     105: invokespecial #93                 // Method org/bson/BsonElement."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
     108: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     113: pop
     114: aload_0
     115: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
     118: ifnull        189
     121: aload_0
     122: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
     125: invokestatic  #77                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
     128: invokevirtual #78                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     131: ifne          160
     134: aload_2
     135: new           #85                 // class org/bson/BsonElement
     138: dup
     139: ldc           #81                 // String $readPreference
     141: aload_0
     142: getfield      #9                  // Field readPreference:Lcom/mongodb/ReadPreference;
     145: invokevirtual #82                 // Method com/mongodb/ReadPreference.toDocument:()Lorg/bson/BsonDocument;
     148: invokespecial #93                 // Method org/bson/BsonElement."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
     151: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     156: pop
     157: goto          189
     160: aload_0
     161: invokespecial #70                 // Method isDirectConnectionToNonShardRouter:()Z
     164: ifeq          189
     167: aload_2
     168: new           #85                 // class org/bson/BsonElement
     171: dup
     172: ldc           #81                 // String $readPreference
     174: invokestatic  #100                // Method com/mongodb/ReadPreference.primaryPreferred:()Lcom/mongodb/ReadPreference;
     177: invokevirtual #82                 // Method com/mongodb/ReadPreference.toDocument:()Lorg/bson/BsonDocument;
     180: invokespecial #93                 // Method org/bson/BsonElement."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
     183: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     188: pop
     189: aload_2
     190: areturn

  private static com.mongodb.connection.OpCode getOpCode(com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: invokestatic  #101                // Method isServerVersionAtLeastThreeDotSix:(Lcom/mongodb/connection/MessageSettings;)Z
       4: ifeq          13
       7: getstatic     #75                 // Field com/mongodb/connection/OpCode.OP_MSG:Lcom/mongodb/connection/OpCode;
      10: goto          16
      13: getstatic     #102                // Field com/mongodb/connection/OpCode.OP_QUERY:Lcom/mongodb/connection/OpCode;
      16: areturn

  private static boolean isServerVersionAtLeastThreeDotSix(com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: invokevirtual #103                // Method com/mongodb/connection/MessageSettings.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
       4: new           #104                // class com/mongodb/connection/ServerVersion
       7: dup
       8: iconst_3
       9: bipush        6
      11: invokespecial #105                // Method com/mongodb/connection/ServerVersion."<init>":(II)V
      14: invokevirtual #106                // Method com/mongodb/connection/ServerVersion.compareTo:(Lcom/mongodb/connection/ServerVersion;)I
      17: iflt          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
}
