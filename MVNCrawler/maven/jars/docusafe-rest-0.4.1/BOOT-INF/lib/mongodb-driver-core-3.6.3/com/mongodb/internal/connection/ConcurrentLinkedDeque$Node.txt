Compiled from "ConcurrentLinkedDeque.java"
final class com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> extends java.util.concurrent.atomic.AtomicReference<com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>> {
  private volatile com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> prev;

  final E element;

  private static final long serialVersionUID;

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node(E, com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>, com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field prev:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      10: aload_0
      11: aload_1
      12: putfield      #3                  // Field element:Ljava/lang/Object;
      15: return

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node(com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: aload_0
       7: putfield      #2                  // Field prev:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field element:Ljava/lang/Object;
      15: return

  private com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> getNext();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method get:()Ljava/lang/Object;
       4: checkcast     #5                  // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
       7: areturn

  void setNext(com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method set:(Ljava/lang/Object;)V
       5: return

  private boolean casNext(com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>, com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #7                  // Method compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  private com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> getPrev();
    Code:
       0: aload_0
       1: getfield      #2                  // Field prev:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: areturn

  void setPrev(com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field prev:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       5: return

  boolean isSpecial();
    Code:
       0: aload_0
       1: getfield      #3                  // Field element:Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isTrailer();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isHeader();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getPrev:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  boolean isMarker();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getPrev:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  boolean isDeleted();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #10                 // Method isMarker:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> nextNonmarker();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #10                 // Method isMarker:()Z
      13: ifne          20
      16: aload_1
      17: goto          24
      20: aload_1
      21: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      24: areturn

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> successor();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method nextNonmarker:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #12                 // Method isDeleted:()Z
      15: ifne          40
      18: aload_1
      19: invokespecial #9                  // Method getPrev:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      22: aload_0
      23: if_acmpeq     38
      26: aload_0
      27: invokevirtual #12                 // Method isDeleted:()Z
      30: ifne          38
      33: aload_1
      34: aload_0
      35: invokevirtual #13                 // Method setPrev:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      38: aload_1
      39: areturn
      40: aload_1
      41: invokespecial #11                 // Method nextNonmarker:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      44: astore_2
      45: aload_1
      46: aload_0
      47: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      50: if_acmpne     60
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokespecial #14                 // Method casNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      59: pop
      60: aload_2
      61: astore_1
      62: goto          5

  private com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> findPredecessorOf(com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E>);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: invokevirtual #15                 // Method successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       6: astore_3
       7: aload_3
       8: aload_1
       9: if_acmpne     14
      12: aload_2
      13: areturn
      14: aload_3
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_3
      21: astore_2
      22: goto          2

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> predecessor();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokespecial #9                  // Method getPrev:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       6: astore_2
       7: aload_2
       8: ifnonnull     17
      11: aload_1
      12: aload_0
      13: invokespecial #16                 // Method findPredecessorOf:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      16: areturn
      17: aload_2
      18: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      21: astore_3
      22: aload_3
      23: aload_0
      24: if_acmpne     29
      27: aload_2
      28: areturn
      29: aload_3
      30: ifnull        40
      33: aload_3
      34: invokevirtual #10                 // Method isMarker:()Z
      37: ifne          55
      40: aload_2
      41: aload_0
      42: invokespecial #16                 // Method findPredecessorOf:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      45: astore        4
      47: aload         4
      49: ifnull        55
      52: aload         4
      54: areturn
      55: aload_2
      56: astore_1
      57: goto          2

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> forward();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #17                 // Method isSpecial:()Z
      13: ifeq          20
      16: aconst_null
      17: goto          21
      20: aload_1
      21: areturn

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> back();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method predecessor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #17                 // Method isSpecial:()Z
      13: ifeq          20
      16: aconst_null
      17: goto          21
      20: aload_1
      21: areturn

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> append(E);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: invokevirtual #10                 // Method isMarker:()Z
      13: ifeq          18
      16: aconst_null
      17: areturn
      18: new           #5                  // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
      21: dup
      22: aload_1
      23: aload_2
      24: aload_0
      25: invokespecial #19                 // Method "<init>":(Ljava/lang/Object;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      28: astore_3
      29: aload_0
      30: aload_2
      31: aload_3
      32: invokespecial #14                 // Method casNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      35: ifeq          45
      38: aload_2
      39: aload_3
      40: invokevirtual #13                 // Method setPrev:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      43: aload_3
      44: areturn
      45: goto          0

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> prepend(E);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method predecessor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: new           #5                  // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
      14: dup
      15: aload_1
      16: aload_0
      17: aload_2
      18: invokespecial #19                 // Method "<init>":(Ljava/lang/Object;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      21: astore_3
      22: aload_2
      23: aload_0
      24: aload_3
      25: invokespecial #14                 // Method casNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      28: ifeq          38
      31: aload_0
      32: aload_3
      33: invokevirtual #13                 // Method setPrev:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      36: aload_3
      37: areturn
      38: goto          0

  boolean delete();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getPrev:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_1
       5: aload_0
       6: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       9: astore_2
      10: aload_1
      11: ifnull        57
      14: aload_2
      15: ifnull        57
      18: aload_2
      19: invokevirtual #10                 // Method isMarker:()Z
      22: ifne          57
      25: aload_0
      26: aload_2
      27: new           #5                  // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
      30: dup
      31: aload_2
      32: invokespecial #20                 // Method "<init>":(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      35: invokespecial #14                 // Method casNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      38: ifeq          57
      41: aload_1
      42: aload_0
      43: aload_2
      44: invokespecial #14                 // Method casNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      47: ifeq          55
      50: aload_2
      51: aload_1
      52: invokevirtual #13                 // Method setPrev:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      55: iconst_1
      56: ireturn
      57: iconst_0
      58: ireturn

  com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> replace(E);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getPrev:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: astore_2
       5: aload_0
       6: invokespecial #8                  // Method getNext:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       9: astore_3
      10: aload_2
      11: ifnull        25
      14: aload_3
      15: ifnull        25
      18: aload_3
      19: invokevirtual #10                 // Method isMarker:()Z
      22: ifeq          27
      25: aconst_null
      26: areturn
      27: new           #5                  // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
      30: dup
      31: aload_1
      32: aload_3
      33: aload_2
      34: invokespecial #19                 // Method "<init>":(Ljava/lang/Object;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      37: astore        4
      39: aload_0
      40: aload_3
      41: new           #5                  // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
      44: dup
      45: aload         4
      47: invokespecial #20                 // Method "<init>":(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      50: invokespecial #14                 // Method casNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      53: ifeq          70
      56: aload_2
      57: invokevirtual #15                 // Method successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      60: pop
      61: aload         4
      63: invokevirtual #15                 // Method successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      66: pop
      67: aload         4
      69: areturn
      70: goto          0
}
