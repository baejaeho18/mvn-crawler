Compiled from "FindAndDeleteOperation.java"
public class com.mongodb.operation.FindAndDeleteOperation<T> extends com.mongodb.operation.BaseFindAndModifyOperation<T> {
  private final com.mongodb.MongoNamespace namespace;

  private final com.mongodb.WriteConcern writeConcern;

  private final boolean retryWrites;

  private final org.bson.codecs.Decoder<T> decoder;

  private org.bson.BsonDocument filter;

  private org.bson.BsonDocument projection;

  private org.bson.BsonDocument sort;

  private long maxTimeMS;

  private com.mongodb.client.model.Collation collation;

  public com.mongodb.operation.FindAndDeleteOperation(com.mongodb.MongoNamespace, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #5                  // Field com/mongodb/WriteConcern.ACKNOWLEDGED:Lcom/mongodb/WriteConcern;
       5: iconst_0
       6: aload_2
       7: invokespecial #6                  // Method "<init>":(Lcom/mongodb/MongoNamespace;Lcom/mongodb/WriteConcern;ZLorg/bson/codecs/Decoder;)V
      10: return

  public com.mongodb.operation.FindAndDeleteOperation(com.mongodb.MongoNamespace, com.mongodb.WriteConcern, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_3
       5: invokespecial #6                  // Method "<init>":(Lcom/mongodb/MongoNamespace;Lcom/mongodb/WriteConcern;ZLorg/bson/codecs/Decoder;)V
       8: return

  public com.mongodb.operation.FindAndDeleteOperation(com.mongodb.MongoNamespace, com.mongodb.WriteConcern, boolean, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method com/mongodb/operation/BaseFindAndModifyOperation."<init>":()V
       4: aload_0
       5: ldc           #8                  // String namespace
       7: aload_1
       8: invokestatic  #9                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #10                 // class com/mongodb/MongoNamespace
      14: putfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
      17: aload_0
      18: ldc           #11                 // String writeConcern
      20: aload_2
      21: invokestatic  #9                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #12                 // class com/mongodb/WriteConcern
      27: putfield      #2                  // Field writeConcern:Lcom/mongodb/WriteConcern;
      30: aload_0
      31: iload_3
      32: putfield      #1                  // Field retryWrites:Z
      35: aload_0
      36: ldc           #13                 // String decoder
      38: aload         4
      40: invokestatic  #9                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #14                 // class org/bson/codecs/Decoder
      46: putfield      #15                 // Field decoder:Lorg/bson/codecs/Decoder;
      49: return

  public com.mongodb.MongoNamespace getNamespace();
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  public com.mongodb.WriteConcern getWriteConcern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  public org.bson.codecs.Decoder<T> getDecoder();
    Code:
       0: aload_0
       1: getfield      #15                 // Field decoder:Lorg/bson/codecs/Decoder;
       4: areturn

  public org.bson.BsonDocument getFilter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field filter:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.FindAndDeleteOperation<T> filter(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field filter:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getProjection();
    Code:
       0: aload_0
       1: getfield      #17                 // Field projection:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.FindAndDeleteOperation<T> projection(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field projection:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public long getMaxTime(java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #18                 // String timeUnit
       2: aload_1
       3: invokestatic  #9                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_0
       9: getfield      #19                 // Field maxTimeMS:J
      12: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      18: lreturn

  public com.mongodb.operation.FindAndDeleteOperation<T> maxTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #18                 // String timeUnit
       2: aload_3
       3: invokestatic  #9                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getstatic     #20                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: lload_1
      12: aload_3
      13: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      16: putfield      #19                 // Field maxTimeMS:J
      19: aload_0
      20: areturn

  public org.bson.BsonDocument getSort();
    Code:
       0: aload_0
       1: getfield      #22                 // Field sort:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.FindAndDeleteOperation<T> sort(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field sort:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.Collation getCollation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  public com.mongodb.operation.FindAndDeleteOperation<T> collation(com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
       5: aload_0
       6: areturn

  protected java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: invokevirtual #23                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
       7: areturn

  protected com.mongodb.operation.CommandOperationHelper$CommandCreator getCommandCreator(com.mongodb.session.SessionContext);
    Code:
       0: new           #24                 // class com/mongodb/operation/FindAndDeleteOperation$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #25                 // Method com/mongodb/operation/FindAndDeleteOperation$1."<init>":(Lcom/mongodb/operation/FindAndDeleteOperation;Lcom/mongodb/session/SessionContext;)V
       9: areturn

  protected org.bson.FieldNameValidator getFieldNameValidator();
    Code:
       0: new           #26                 // class com/mongodb/internal/validator/NoOpFieldNameValidator
       3: dup
       4: invokespecial #27                 // Method com/mongodb/internal/validator/NoOpFieldNameValidator."<init>":()V
       7: areturn

  public void executeAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #28                 // Method com/mongodb/operation/BaseFindAndModifyOperation.executeAsync:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/async/SingleResultCallback;)V
       6: return

  public java.lang.Object execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method com/mongodb/operation/BaseFindAndModifyOperation.execute:(Lcom/mongodb/binding/WriteBinding;)Ljava/lang/Object;
       5: areturn

  static com.mongodb.client.model.Collation access$000(com.mongodb.operation.FindAndDeleteOperation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  static com.mongodb.MongoNamespace access$100(com.mongodb.operation.FindAndDeleteOperation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  static com.mongodb.WriteConcern access$200(com.mongodb.operation.FindAndDeleteOperation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  static boolean access$300(com.mongodb.operation.FindAndDeleteOperation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field retryWrites:Z
       4: ireturn
}
