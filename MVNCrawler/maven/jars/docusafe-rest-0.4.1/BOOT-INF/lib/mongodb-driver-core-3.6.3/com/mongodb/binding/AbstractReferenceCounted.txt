Compiled from "AbstractReferenceCounted.java"
abstract class com.mongodb.binding.AbstractReferenceCounted implements com.mongodb.binding.ReferenceCounted {
  private final java.util.concurrent.atomic.AtomicInteger referenceCount;

  com.mongodb.binding.AbstractReferenceCounted();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
      16: return

  public int getCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public com.mongodb.binding.ReferenceCounted retain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: iconst_1
       8: if_icmpne     21
      11: new           #7                  // class java/lang/IllegalStateException
      14: dup
      15: ldc           #8                  // String Attempted to increment the reference count when it is already 0
      17: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: areturn

  public void release();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifge          20
      10: new           #7                  // class java/lang/IllegalStateException
      13: dup
      14: ldc           #11                 // String Attempted to decrement the reference count below 0
      16: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return
}
