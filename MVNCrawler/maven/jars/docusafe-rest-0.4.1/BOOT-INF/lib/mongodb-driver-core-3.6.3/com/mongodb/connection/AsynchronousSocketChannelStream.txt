Compiled from "AsynchronousSocketChannelStream.java"
final class com.mongodb.connection.AsynchronousSocketChannelStream implements com.mongodb.connection.Stream {
  private final com.mongodb.ServerAddress serverAddress;

  private final com.mongodb.connection.SocketSettings settings;

  private final com.mongodb.connection.BufferProvider bufferProvider;

  private final java.nio.channels.AsynchronousChannelGroup group;

  private volatile java.nio.channels.AsynchronousSocketChannel channel;

  private volatile boolean isClosed;

  com.mongodb.connection.AsynchronousSocketChannelStream(com.mongodb.ServerAddress, com.mongodb.connection.SocketSettings, com.mongodb.connection.BufferProvider, java.nio.channels.AsynchronousChannelGroup);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field serverAddress:Lcom/mongodb/ServerAddress;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field bufferProvider:Lcom/mongodb/connection/BufferProvider;
      19: aload_0
      20: aload         4
      22: putfield      #7                  // Field group:Ljava/nio/channels/AsynchronousChannelGroup;
      25: return

  public org.bson.ByteBuf getBuffer(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferProvider:Lcom/mongodb/connection/BufferProvider;
       4: iload_1
       5: invokeinterface #8,  2            // InterfaceMethod com/mongodb/connection/BufferProvider.getBuffer:(I)Lorg/bson/ByteBuf;
      10: areturn

  public void open() throws java.io.IOException;
    Code:
       0: new           #9                  // class com/mongodb/connection/FutureAsyncCompletionHandler
       3: dup
       4: invokespecial #10                 // Method com/mongodb/connection/FutureAsyncCompletionHandler."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #11                 // Method openAsync:(Lcom/mongodb/connection/AsyncCompletionHandler;)V
      13: aload_1
      14: invokevirtual #12                 // Method com/mongodb/connection/FutureAsyncCompletionHandler.getOpen:()V
      17: return

  public void openAsync(com.mongodb.connection.AsyncCompletionHandler<java.lang.Void>);
    Code:
       0: ldc           #13                 // String unopened
       2: aload_0
       3: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #14                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: aload_0
      19: getfield      #7                  // Field group:Ljava/nio/channels/AsynchronousChannelGroup;
      22: invokestatic  #15                 // Method java/nio/channels/AsynchronousSocketChannel.open:(Ljava/nio/channels/AsynchronousChannelGroup;)Ljava/nio/channels/AsynchronousSocketChannel;
      25: putfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      28: aload_0
      29: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      32: getstatic     #16                 // Field java/net/StandardSocketOptions.TCP_NODELAY:Ljava/net/SocketOption;
      35: iconst_1
      36: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      39: invokevirtual #18                 // Method java/nio/channels/AsynchronousSocketChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;
      42: pop
      43: aload_0
      44: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      47: getstatic     #19                 // Field java/net/StandardSocketOptions.SO_KEEPALIVE:Ljava/net/SocketOption;
      50: aload_0
      51: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      54: invokevirtual #20                 // Method com/mongodb/connection/SocketSettings.isKeepAlive:()Z
      57: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      60: invokevirtual #18                 // Method java/nio/channels/AsynchronousSocketChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;
      63: pop
      64: aload_0
      65: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      68: invokevirtual #21                 // Method com/mongodb/connection/SocketSettings.getReceiveBufferSize:()I
      71: ifle          95
      74: aload_0
      75: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      78: getstatic     #22                 // Field java/net/StandardSocketOptions.SO_RCVBUF:Ljava/net/SocketOption;
      81: aload_0
      82: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      85: invokevirtual #21                 // Method com/mongodb/connection/SocketSettings.getReceiveBufferSize:()I
      88: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      91: invokevirtual #18                 // Method java/nio/channels/AsynchronousSocketChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;
      94: pop
      95: aload_0
      96: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      99: invokevirtual #24                 // Method com/mongodb/connection/SocketSettings.getSendBufferSize:()I
     102: ifle          126
     105: aload_0
     106: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
     109: getstatic     #25                 // Field java/net/StandardSocketOptions.SO_SNDBUF:Ljava/net/SocketOption;
     112: aload_0
     113: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
     116: invokevirtual #24                 // Method com/mongodb/connection/SocketSettings.getSendBufferSize:()I
     119: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     122: invokevirtual #18                 // Method java/nio/channels/AsynchronousSocketChannel.setOption:(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;
     125: pop
     126: aload_0
     127: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
     130: aload_0
     131: getfield      #2                  // Field serverAddress:Lcom/mongodb/ServerAddress;
     134: invokevirtual #26                 // Method com/mongodb/ServerAddress.getSocketAddress:()Ljava/net/InetSocketAddress;
     137: aconst_null
     138: new           #27                 // class com/mongodb/connection/AsynchronousSocketChannelStream$OpenCompletionHandler
     141: dup
     142: aload_0
     143: aload_1
     144: invokespecial #28                 // Method com/mongodb/connection/AsynchronousSocketChannelStream$OpenCompletionHandler."<init>":(Lcom/mongodb/connection/AsynchronousSocketChannelStream;Lcom/mongodb/connection/AsyncCompletionHandler;)V
     147: invokevirtual #29                 // Method java/nio/channels/AsynchronousSocketChannel.connect:(Ljava/net/SocketAddress;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
     150: goto          185
     153: astore_2
     154: aload_1
     155: new           #31                 // class com/mongodb/MongoSocketOpenException
     158: dup
     159: ldc           #32                 // String Exception opening socket
     161: aload_0
     162: getfield      #2                  // Field serverAddress:Lcom/mongodb/ServerAddress;
     165: aload_2
     166: invokespecial #33                 // Method com/mongodb/MongoSocketOpenException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;Ljava/lang/Throwable;)V
     169: invokeinterface #34,  2           // InterfaceMethod com/mongodb/connection/AsyncCompletionHandler.failed:(Ljava/lang/Throwable;)V
     174: goto          185
     177: astore_2
     178: aload_1
     179: aload_2
     180: invokeinterface #34,  2           // InterfaceMethod com/mongodb/connection/AsyncCompletionHandler.failed:(Ljava/lang/Throwable;)V
     185: return
    Exception table:
       from    to  target type
          17   150   153   Class java/io/IOException
          17   150   177   Class java/lang/Throwable

  public void write(java.util.List<org.bson.ByteBuf>) throws java.io.IOException;
    Code:
       0: new           #9                  // class com/mongodb/connection/FutureAsyncCompletionHandler
       3: dup
       4: invokespecial #10                 // Method com/mongodb/connection/FutureAsyncCompletionHandler."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #36                 // Method writeAsync:(Ljava/util/List;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      14: aload_2
      15: invokevirtual #37                 // Method com/mongodb/connection/FutureAsyncCompletionHandler.getWrite:()V
      18: return

  public org.bson.ByteBuf read(int) throws java.io.IOException;
    Code:
       0: new           #9                  // class com/mongodb/connection/FutureAsyncCompletionHandler
       3: dup
       4: invokespecial #10                 // Method com/mongodb/connection/FutureAsyncCompletionHandler."<init>":()V
       7: astore_2
       8: aload_0
       9: iload_1
      10: aload_2
      11: invokevirtual #38                 // Method readAsync:(ILcom/mongodb/connection/AsyncCompletionHandler;)V
      14: aload_2
      15: invokevirtual #39                 // Method com/mongodb/connection/FutureAsyncCompletionHandler.getRead:()Ljava/lang/Object;
      18: checkcast     #40                 // class org/bson/ByteBuf
      21: areturn

  public void writeAsync(java.util.List<org.bson.ByteBuf>, com.mongodb.connection.AsyncCompletionHandler<java.lang.Void>);
    Code:
       0: new           #41                 // class com/mongodb/connection/AsynchronousSocketChannelStream$AsyncWritableByteChannelAdapter
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #42                 // Method com/mongodb/connection/AsynchronousSocketChannelStream$AsyncWritableByteChannelAdapter."<init>":(Lcom/mongodb/connection/AsynchronousSocketChannelStream;Lcom/mongodb/connection/AsynchronousSocketChannelStream$1;)V
       9: astore_3
      10: aload_1
      11: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload_0
      19: aload_3
      20: aload         4
      22: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #40                 // class org/bson/ByteBuf
      30: new           #45                 // class com/mongodb/connection/AsynchronousSocketChannelStream$1
      33: dup
      34: aload_0
      35: aload         4
      37: aload_3
      38: aload_2
      39: invokespecial #46                 // Method com/mongodb/connection/AsynchronousSocketChannelStream$1."<init>":(Lcom/mongodb/connection/AsynchronousSocketChannelStream;Ljava/util/Iterator;Lcom/mongodb/connection/AsyncWritableByteChannel;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      42: invokespecial #4                  // Method pipeOneBuffer:(Lcom/mongodb/connection/AsyncWritableByteChannel;Lorg/bson/ByteBuf;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      45: return

  public void readAsync(int, com.mongodb.connection.AsyncCompletionHandler<org.bson.ByteBuf>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferProvider:Lcom/mongodb/connection/BufferProvider;
       4: iload_1
       5: invokeinterface #8,  2            // InterfaceMethod com/mongodb/connection/BufferProvider.getBuffer:(I)Lorg/bson/ByteBuf;
      10: astore_3
      11: aload_0
      12: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      15: aload_3
      16: invokeinterface #47,  1           // InterfaceMethod org/bson/ByteBuf.asNIO:()Ljava/nio/ByteBuffer;
      21: aload_0
      22: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      25: getstatic     #48                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      28: invokevirtual #49                 // Method com/mongodb/connection/SocketSettings.getReadTimeout:(Ljava/util/concurrent/TimeUnit;)I
      31: i2l
      32: getstatic     #48                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      35: aconst_null
      36: new           #50                 // class com/mongodb/connection/AsynchronousSocketChannelStream$BasicCompletionHandler
      39: dup
      40: aload_0
      41: aload_3
      42: aload_2
      43: aconst_null
      44: invokespecial #51                 // Method com/mongodb/connection/AsynchronousSocketChannelStream$BasicCompletionHandler."<init>":(Lcom/mongodb/connection/AsynchronousSocketChannelStream;Lorg/bson/ByteBuf;Lcom/mongodb/connection/AsyncCompletionHandler;Lcom/mongodb/connection/AsynchronousSocketChannelStream$1;)V
      47: invokevirtual #52                 // Method java/nio/channels/AsynchronousSocketChannel.read:(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
      50: return

  public com.mongodb.ServerAddress getAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverAddress:Lcom/mongodb/ServerAddress;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
       4: ifnull        14
       7: aload_0
       8: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      11: invokevirtual #53                 // Method java/nio/channels/AsynchronousSocketChannel.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      19: aload_0
      20: iconst_1
      21: putfield      #54                 // Field isClosed:Z
      24: goto          54
      27: astore_1
      28: aload_0
      29: aconst_null
      30: putfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      33: aload_0
      34: iconst_1
      35: putfield      #54                 // Field isClosed:Z
      38: goto          54
      41: astore_2
      42: aload_0
      43: aconst_null
      44: putfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
      47: aload_0
      48: iconst_1
      49: putfield      #54                 // Field isClosed:Z
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    14    27   Class java/io/IOException
           0    14    41   any

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #54                 // Field isClosed:Z
       4: ireturn

  public com.mongodb.ServerAddress getServerAddress();
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverAddress:Lcom/mongodb/ServerAddress;
       4: areturn

  public com.mongodb.connection.SocketSettings getSettings();
    Code:
       0: aload_0
       1: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
       4: areturn

  public java.nio.channels.AsynchronousChannelGroup getGroup();
    Code:
       0: aload_0
       1: getfield      #7                  // Field group:Ljava/nio/channels/AsynchronousChannelGroup;
       4: areturn

  private void pipeOneBuffer(com.mongodb.connection.AsyncWritableByteChannel, org.bson.ByteBuf, com.mongodb.connection.AsyncCompletionHandler<java.lang.Void>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #47,  1           // InterfaceMethod org/bson/ByteBuf.asNIO:()Ljava/nio/ByteBuffer;
       7: new           #55                 // class com/mongodb/connection/AsynchronousSocketChannelStream$2
      10: dup
      11: aload_0
      12: aload_2
      13: aload_1
      14: aload_3
      15: invokespecial #56                 // Method com/mongodb/connection/AsynchronousSocketChannelStream$2."<init>":(Lcom/mongodb/connection/AsynchronousSocketChannelStream;Lorg/bson/ByteBuf;Lcom/mongodb/connection/AsyncWritableByteChannel;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      18: invokeinterface #57,  3           // InterfaceMethod com/mongodb/connection/AsyncWritableByteChannel.write:(Ljava/nio/ByteBuffer;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      23: return

  static void access$100(com.mongodb.connection.AsynchronousSocketChannelStream, com.mongodb.connection.AsyncWritableByteChannel, org.bson.ByteBuf, com.mongodb.connection.AsyncCompletionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method pipeOneBuffer:(Lcom/mongodb/connection/AsyncWritableByteChannel;Lorg/bson/ByteBuf;Lcom/mongodb/connection/AsyncCompletionHandler;)V
       7: return

  static java.nio.channels.AsynchronousSocketChannel access$300(com.mongodb.connection.AsynchronousSocketChannelStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Ljava/nio/channels/AsynchronousSocketChannel;
       4: areturn

  static com.mongodb.ServerAddress access$400(com.mongodb.connection.AsynchronousSocketChannelStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serverAddress:Lcom/mongodb/ServerAddress;
       4: areturn

  static com.mongodb.connection.SocketSettings access$500(com.mongodb.connection.AsynchronousSocketChannelStream);
    Code:
       0: aload_0
       1: getfield      #1                  // Field settings:Lcom/mongodb/connection/SocketSettings;
       4: areturn
}
