Compiled from "RequestMessage.java"
abstract class com.mongodb.connection.RequestMessage {
  static final java.util.concurrent.atomic.AtomicInteger REQUEST_ID;

  static final int MESSAGE_PROLOGUE_LENGTH;

  private static final int DOCUMENT_HEADROOM;

  private static final org.bson.codecs.configuration.CodecRegistry REGISTRY;

  private final java.lang.String collectionName;

  private final com.mongodb.connection.MessageSettings settings;

  private final int id;

  private final com.mongodb.connection.OpCode opCode;

  private com.mongodb.connection.RequestMessage$EncodingMetadata encodingMetadata;

  public static int getCurrentGlobalId();
    Code:
       0: getstatic     #1                  // Field REQUEST_ID:Ljava/util/concurrent/atomic/AtomicInteger;
       3: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       6: ireturn

  com.mongodb.connection.RequestMessage(com.mongodb.connection.OpCode, com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lcom/mongodb/connection/OpCode;Lcom/mongodb/connection/MessageSettings;)V
       7: return

  com.mongodb.connection.RequestMessage(com.mongodb.connection.OpCode, int, com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: iload_2
       4: aload_3
       5: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Lcom/mongodb/connection/OpCode;ILcom/mongodb/connection/MessageSettings;)V
       8: return

  com.mongodb.connection.RequestMessage(java.lang.String, com.mongodb.connection.OpCode, com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #1                  // Field REQUEST_ID:Ljava/util/concurrent/atomic/AtomicInteger;
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       9: aload_3
      10: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Lcom/mongodb/connection/OpCode;ILcom/mongodb/connection/MessageSettings;)V
      13: return

  private com.mongodb.connection.RequestMessage(java.lang.String, com.mongodb.connection.OpCode, int, com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field collectionName:Ljava/lang/String;
       9: aload_0
      10: aload         4
      12: putfield      #8                  // Field settings:Lcom/mongodb/connection/MessageSettings;
      15: aload_0
      16: iload_3
      17: putfield      #9                  // Field id:I
      20: aload_0
      21: aload_2
      22: putfield      #10                 // Field opCode:Lcom/mongodb/connection/OpCode;
      25: return

  public int getId();
    Code:
       0: aload_0
       1: getfield      #9                  // Field id:I
       4: ireturn

  public com.mongodb.connection.OpCode getOpCode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field opCode:Lcom/mongodb/connection/OpCode;
       4: areturn

  public java.lang.String getNamespace();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getCollectionName:()Ljava/lang/String;
       4: areturn

  public com.mongodb.connection.MessageSettings getSettings();
    Code:
       0: aload_0
       1: getfield      #8                  // Field settings:Lcom/mongodb/connection/MessageSettings;
       4: areturn

  public void encode(org.bson.io.BsonOutput, com.mongodb.session.SessionContext);
    Code:
       0: ldc           #12                 // String sessionContext
       2: aload_2
       3: invokestatic  #13                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #14,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      13: istore_3
      14: aload_0
      15: aload_1
      16: invokevirtual #15                 // Method writeMessagePrologue:(Lorg/bson/io/BsonOutput;)V
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #16                 // Method encodeMessageBodyWithMetadata:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
      25: astore        4
      27: aload_0
      28: iload_3
      29: aload_1
      30: invokevirtual #17                 // Method backpatchMessageLength:(ILorg/bson/io/BsonOutput;)V
      33: aload_0
      34: aload         4
      36: putfield      #18                 // Field encodingMetadata:Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
      39: return

  public com.mongodb.connection.RequestMessage$EncodingMetadata getEncodingMetadata();
    Code:
       0: aload_0
       1: getfield      #18                 // Field encodingMetadata:Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
       4: areturn

  protected void writeMessagePrologue(org.bson.io.BsonOutput);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #19,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field id:I
      12: invokeinterface #19,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      17: aload_1
      18: iconst_0
      19: invokeinterface #19,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      24: aload_1
      25: aload_0
      26: getfield      #10                 // Field opCode:Lcom/mongodb/connection/OpCode;
      29: invokevirtual #20                 // Method com/mongodb/connection/OpCode.getValue:()I
      32: invokeinterface #19,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      37: return

  protected abstract com.mongodb.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput, com.mongodb.session.SessionContext);

  protected void addDocument(org.bson.BsonDocument, org.bson.io.BsonOutput, org.bson.FieldNameValidator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #21                 // Method getCodec:(Lorg/bson/BsonDocument;)Lorg/bson/codecs/Codec;
       7: invokestatic  #22                 // Method org/bson/codecs/EncoderContext.builder:()Lorg/bson/codecs/EncoderContext$Builder;
      10: invokevirtual #23                 // Method org/bson/codecs/EncoderContext$Builder.build:()Lorg/bson/codecs/EncoderContext;
      13: aload_2
      14: aload_3
      15: aload_0
      16: getfield      #8                  // Field settings:Lcom/mongodb/connection/MessageSettings;
      19: invokevirtual #24                 // Method com/mongodb/connection/MessageSettings.getMaxDocumentSize:()I
      22: sipush        16384
      25: iadd
      26: aconst_null
      27: invokespecial #26                 // Method addDocument:(Ljava/lang/Object;Lorg/bson/codecs/Encoder;Lorg/bson/codecs/EncoderContext;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;ILjava/util/List;)V
      30: return

  protected void addDocument(org.bson.BsonDocument, org.bson.io.BsonOutput, org.bson.FieldNameValidator, java.util.List<org.bson.BsonElement>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #21                 // Method getCodec:(Lorg/bson/BsonDocument;)Lorg/bson/codecs/Codec;
       7: invokestatic  #22                 // Method org/bson/codecs/EncoderContext.builder:()Lorg/bson/codecs/EncoderContext$Builder;
      10: invokevirtual #23                 // Method org/bson/codecs/EncoderContext$Builder.build:()Lorg/bson/codecs/EncoderContext;
      13: aload_2
      14: aload_3
      15: aload_0
      16: getfield      #8                  // Field settings:Lcom/mongodb/connection/MessageSettings;
      19: invokevirtual #24                 // Method com/mongodb/connection/MessageSettings.getMaxDocumentSize:()I
      22: sipush        16384
      25: iadd
      26: aload         4
      28: invokespecial #26                 // Method addDocument:(Ljava/lang/Object;Lorg/bson/codecs/Encoder;Lorg/bson/codecs/EncoderContext;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;ILjava/util/List;)V
      31: return

  protected void addCollectibleDocument(org.bson.BsonDocument, org.bson.io.BsonOutput, org.bson.FieldNameValidator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokevirtual #21                 // Method getCodec:(Lorg/bson/BsonDocument;)Lorg/bson/codecs/Codec;
       7: invokestatic  #22                 // Method org/bson/codecs/EncoderContext.builder:()Lorg/bson/codecs/EncoderContext$Builder;
      10: iconst_1
      11: invokevirtual #27                 // Method org/bson/codecs/EncoderContext$Builder.isEncodingCollectibleDocument:(Z)Lorg/bson/codecs/EncoderContext$Builder;
      14: invokevirtual #23                 // Method org/bson/codecs/EncoderContext$Builder.build:()Lorg/bson/codecs/EncoderContext;
      17: aload_2
      18: aload_3
      19: aload_0
      20: getfield      #8                  // Field settings:Lcom/mongodb/connection/MessageSettings;
      23: invokevirtual #24                 // Method com/mongodb/connection/MessageSettings.getMaxDocumentSize:()I
      26: aconst_null
      27: invokespecial #26                 // Method addDocument:(Ljava/lang/Object;Lorg/bson/codecs/Encoder;Lorg/bson/codecs/EncoderContext;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;ILjava/util/List;)V
      30: return

  protected void backpatchMessageLength(int, org.bson.io.BsonOutput);
    Code:
       0: aload_2
       1: invokeinterface #14,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
       6: iload_1
       7: isub
       8: istore_3
       9: aload_2
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod org/bson/io/BsonOutput.getPosition:()I
      16: iload_3
      17: isub
      18: iload_3
      19: invokeinterface #28,  3           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(II)V
      24: return

  protected java.lang.String getCollectionName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field collectionName:Ljava/lang/String;
       4: areturn

  org.bson.codecs.Codec<org.bson.BsonDocument> getCodec(org.bson.BsonDocument);
    Code:
       0: getstatic     #29                 // Field REGISTRY:Lorg/bson/codecs/configuration/CodecRegistry;
       3: aload_1
       4: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokeinterface #31,  2           // InterfaceMethod org/bson/codecs/configuration/CodecRegistry.get:(Ljava/lang/Class;)Lorg/bson/codecs/Codec;
      12: areturn

  private <T> void addDocument(T, org.bson.codecs.Encoder<T>, org.bson.codecs.EncoderContext, org.bson.io.BsonOutput, org.bson.FieldNameValidator, int, java.util.List<org.bson.BsonElement>);
    Code:
       0: new           #32                 // class org/bson/BsonBinaryWriter
       3: dup
       4: new           #33                 // class org/bson/BsonWriterSettings
       7: dup
       8: invokespecial #34                 // Method org/bson/BsonWriterSettings."<init>":()V
      11: new           #35                 // class org/bson/BsonBinaryWriterSettings
      14: dup
      15: iload         6
      17: invokespecial #36                 // Method org/bson/BsonBinaryWriterSettings."<init>":(I)V
      20: aload         4
      22: aload         5
      24: invokespecial #37                 // Method org/bson/BsonBinaryWriter."<init>":(Lorg/bson/BsonWriterSettings;Lorg/bson/BsonBinaryWriterSettings;Lorg/bson/io/BsonOutput;Lorg/bson/FieldNameValidator;)V
      27: astore        8
      29: aload         7
      31: ifnonnull     39
      34: aload         8
      36: goto          50
      39: new           #38                 // class com/mongodb/connection/ElementExtendingBsonWriter
      42: dup
      43: aload         8
      45: aload         7
      47: invokespecial #39                 // Method com/mongodb/connection/ElementExtendingBsonWriter."<init>":(Lorg/bson/BsonBinaryWriter;Ljava/util/List;)V
      50: astore        9
      52: aload_2
      53: aload         9
      55: aload_1
      56: aload_3
      57: invokeinterface #40,  4           // InterfaceMethod org/bson/codecs/Encoder.encode:(Lorg/bson/BsonWriter;Ljava/lang/Object;Lorg/bson/codecs/EncoderContext;)V
      62: return

  static {};
    Code:
       0: new           #41                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: iconst_1
       5: invokespecial #42                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
       8: putstatic     #1                  // Field REQUEST_ID:Ljava/util/concurrent/atomic/AtomicInteger;
      11: iconst_1
      12: anewarray     #43                 // class org/bson/codecs/configuration/CodecProvider
      15: dup
      16: iconst_0
      17: new           #44                 // class org/bson/codecs/BsonValueCodecProvider
      20: dup
      21: invokespecial #45                 // Method org/bson/codecs/BsonValueCodecProvider."<init>":()V
      24: aastore
      25: invokestatic  #46                 // Method org/bson/codecs/configuration/CodecRegistries.fromProviders:([Lorg/bson/codecs/configuration/CodecProvider;)Lorg/bson/codecs/configuration/CodecRegistry;
      28: putstatic     #29                 // Field REGISTRY:Lorg/bson/codecs/configuration/CodecRegistry;
      31: return
}
