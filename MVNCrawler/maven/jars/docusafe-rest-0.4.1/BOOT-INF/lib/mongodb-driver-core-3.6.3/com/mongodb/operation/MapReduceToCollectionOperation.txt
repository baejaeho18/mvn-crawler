Compiled from "MapReduceToCollectionOperation.java"
public class com.mongodb.operation.MapReduceToCollectionOperation implements com.mongodb.operation.AsyncWriteOperation<com.mongodb.operation.MapReduceStatistics>, com.mongodb.operation.WriteOperation<com.mongodb.operation.MapReduceStatistics> {
  private final com.mongodb.MongoNamespace namespace;

  private final org.bson.BsonJavaScript mapFunction;

  private final org.bson.BsonJavaScript reduceFunction;

  private final java.lang.String collectionName;

  private final com.mongodb.WriteConcern writeConcern;

  private org.bson.BsonJavaScript finalizeFunction;

  private org.bson.BsonDocument scope;

  private org.bson.BsonDocument filter;

  private org.bson.BsonDocument sort;

  private int limit;

  private boolean jsMode;

  private boolean verbose;

  private long maxTimeMS;

  private java.lang.String action;

  private java.lang.String databaseName;

  private boolean sharded;

  private boolean nonAtomic;

  private java.lang.Boolean bypassDocumentValidation;

  private com.mongodb.client.model.Collation collation;

  private static final java.util.List<java.lang.String> VALID_ACTIONS;

  public com.mongodb.operation.MapReduceToCollectionOperation(com.mongodb.MongoNamespace, org.bson.BsonJavaScript, org.bson.BsonJavaScript, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #5                  // Method "<init>":(Lcom/mongodb/MongoNamespace;Lorg/bson/BsonJavaScript;Lorg/bson/BsonJavaScript;Ljava/lang/String;Lcom/mongodb/WriteConcern;)V
      10: return

  public com.mongodb.operation.MapReduceToCollectionOperation(com.mongodb.MongoNamespace, org.bson.BsonJavaScript, org.bson.BsonJavaScript, java.lang.String, com.mongodb.WriteConcern);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #7                  // String replace
       7: putfield      #8                  // Field action:Ljava/lang/String;
      10: aload_0
      11: ldc           #9                  // String namespace
      13: aload_1
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #11                 // class com/mongodb/MongoNamespace
      20: putfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
      23: aload_0
      24: ldc           #12                 // String mapFunction
      26: aload_2
      27: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #13                 // class org/bson/BsonJavaScript
      33: putfield      #14                 // Field mapFunction:Lorg/bson/BsonJavaScript;
      36: aload_0
      37: ldc           #15                 // String reduceFunction
      39: aload_3
      40: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #13                 // class org/bson/BsonJavaScript
      46: putfield      #16                 // Field reduceFunction:Lorg/bson/BsonJavaScript;
      49: aload_0
      50: ldc           #17                 // String collectionName
      52: aload         4
      54: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      57: checkcast     #18                 // class java/lang/String
      60: putfield      #19                 // Field collectionName:Ljava/lang/String;
      63: aload_0
      64: aload         5
      66: putfield      #20                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      69: return

  public com.mongodb.MongoNamespace getNamespace();
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  public org.bson.BsonJavaScript getMapFunction();
    Code:
       0: aload_0
       1: getfield      #14                 // Field mapFunction:Lorg/bson/BsonJavaScript;
       4: areturn

  public org.bson.BsonJavaScript getReduceFunction();
    Code:
       0: aload_0
       1: getfield      #16                 // Field reduceFunction:Lorg/bson/BsonJavaScript;
       4: areturn

  public java.lang.String getCollectionName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field collectionName:Ljava/lang/String;
       4: areturn

  public com.mongodb.WriteConcern getWriteConcern();
    Code:
       0: aload_0
       1: getfield      #20                 // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  public org.bson.BsonJavaScript getFinalizeFunction();
    Code:
       0: aload_0
       1: getfield      #21                 // Field finalizeFunction:Lorg/bson/BsonJavaScript;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation finalizeFunction(org.bson.BsonJavaScript);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field finalizeFunction:Lorg/bson/BsonJavaScript;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getScope();
    Code:
       0: aload_0
       1: getfield      #22                 // Field scope:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation scope(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field scope:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getFilter();
    Code:
       0: aload_0
       1: getfield      #23                 // Field filter:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation filter(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field filter:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getSort();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sort:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation sort(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field sort:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public int getLimit();
    Code:
       0: aload_0
       1: getfield      #25                 // Field limit:I
       4: ireturn

  public com.mongodb.operation.MapReduceToCollectionOperation limit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field limit:I
       5: aload_0
       6: areturn

  public boolean isJsMode();
    Code:
       0: aload_0
       1: getfield      #26                 // Field jsMode:Z
       4: ireturn

  public com.mongodb.operation.MapReduceToCollectionOperation jsMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field jsMode:Z
       5: aload_0
       6: areturn

  public boolean isVerbose();
    Code:
       0: aload_0
       1: getfield      #27                 // Field verbose:Z
       4: ireturn

  public com.mongodb.operation.MapReduceToCollectionOperation verbose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field verbose:Z
       5: aload_0
       6: areturn

  public long getMaxTime(java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #28                 // String timeUnit
       2: aload_1
       3: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_0
       9: getfield      #29                 // Field maxTimeMS:J
      12: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: invokevirtual #31                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      18: lreturn

  public com.mongodb.operation.MapReduceToCollectionOperation maxTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #28                 // String timeUnit
       2: aload_3
       3: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: lload_1
      12: aload_3
      13: invokevirtual #31                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      16: putfield      #29                 // Field maxTimeMS:J
      19: aload_0
      20: areturn

  public java.lang.String getAction();
    Code:
       0: aload_0
       1: getfield      #8                  // Field action:Ljava/lang/String;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation action(java.lang.String);
    Code:
       0: ldc           #32                 // String action
       2: aload_1
       3: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: ldc           #33                 // String action must be one of: \"replace\", \"merge\", \"reduce\"
       9: getstatic     #34                 // Field VALID_ACTIONS:Ljava/util/List;
      12: aload_1
      13: invokeinterface #35,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      18: invokestatic  #36                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field action:Ljava/lang/String;
      26: aload_0
      27: areturn

  public java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #37                 // Field databaseName:Ljava/lang/String;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation databaseName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field databaseName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public boolean isSharded();
    Code:
       0: aload_0
       1: getfield      #38                 // Field sharded:Z
       4: ireturn

  public com.mongodb.operation.MapReduceToCollectionOperation sharded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field sharded:Z
       5: aload_0
       6: areturn

  public boolean isNonAtomic();
    Code:
       0: aload_0
       1: getfield      #39                 // Field nonAtomic:Z
       4: ireturn

  public com.mongodb.operation.MapReduceToCollectionOperation nonAtomic(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field nonAtomic:Z
       5: aload_0
       6: areturn

  public java.lang.Boolean getBypassDocumentValidation();
    Code:
       0: aload_0
       1: getfield      #40                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation bypassDocumentValidation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.Collation getCollation();
    Code:
       0: aload_0
       1: getfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  public com.mongodb.operation.MapReduceToCollectionOperation collation(com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
       5: aload_0
       6: areturn

  public com.mongodb.operation.MapReduceStatistics execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_1
       1: new           #41                 // class com/mongodb/operation/MapReduceToCollectionOperation$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #42                 // Method com/mongodb/operation/MapReduceToCollectionOperation$1."<init>":(Lcom/mongodb/operation/MapReduceToCollectionOperation;Lcom/mongodb/binding/WriteBinding;)V
      10: invokestatic  #43                 // Method com/mongodb/operation/OperationHelper.withConnection:(Lcom/mongodb/binding/WriteBinding;Lcom/mongodb/operation/OperationHelper$CallableWithConnection;)Ljava/lang/Object;
      13: checkcast     #44                 // class com/mongodb/operation/MapReduceStatistics
      16: areturn

  public void executeAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.async.SingleResultCallback<com.mongodb.operation.MapReduceStatistics>);
    Code:
       0: aload_1
       1: new           #45                 // class com/mongodb/operation/MapReduceToCollectionOperation$2
       4: dup
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokespecial #46                 // Method com/mongodb/operation/MapReduceToCollectionOperation$2."<init>":(Lcom/mongodb/operation/MapReduceToCollectionOperation;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/binding/AsyncWriteBinding;)V
      11: invokestatic  #47                 // Method com/mongodb/operation/OperationHelper.withConnection:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      14: return

  public com.mongodb.operation.ReadOperation<org.bson.BsonDocument> asExplainableOperation(com.mongodb.ExplainVerbosity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method createExplainableOperation:(Lcom/mongodb/ExplainVerbosity;)Lcom/mongodb/operation/CommandReadOperation;
       5: areturn

  public com.mongodb.operation.AsyncReadOperation<org.bson.BsonDocument> asExplainableOperationAsync(com.mongodb.ExplainVerbosity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method createExplainableOperation:(Lcom/mongodb/ExplainVerbosity;)Lcom/mongodb/operation/CommandReadOperation;
       5: areturn

  private com.mongodb.operation.CommandReadOperation<org.bson.BsonDocument> createExplainableOperation(com.mongodb.ExplainVerbosity);
    Code:
       0: new           #49                 // class com/mongodb/operation/CommandReadOperation
       3: dup
       4: aload_0
       5: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
       8: invokevirtual #50                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
      11: aload_0
      12: aconst_null
      13: invokespecial #2                  // Method getCommand:(Lcom/mongodb/connection/ConnectionDescription;)Lorg/bson/BsonDocument;
      16: aload_1
      17: invokestatic  #51                 // Method com/mongodb/operation/ExplainHelper.asExplainCommand:(Lorg/bson/BsonDocument;Lcom/mongodb/ExplainVerbosity;)Lorg/bson/BsonDocument;
      20: new           #52                 // class org/bson/codecs/BsonDocumentCodec
      23: dup
      24: invokespecial #53                 // Method org/bson/codecs/BsonDocumentCodec."<init>":()V
      27: invokespecial #54                 // Method com/mongodb/operation/CommandReadOperation."<init>":(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/codecs/Decoder;)V
      30: areturn

  private com.mongodb.operation.CommandOperationHelper$CommandTransformer<org.bson.BsonDocument, com.mongodb.operation.MapReduceStatistics> transformer();
    Code:
       0: new           #55                 // class com/mongodb/operation/MapReduceToCollectionOperation$3
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method com/mongodb/operation/MapReduceToCollectionOperation$3."<init>":(Lcom/mongodb/operation/MapReduceToCollectionOperation;)V
       8: areturn

  private org.bson.BsonDocument getCommand(com.mongodb.connection.ConnectionDescription);
    Code:
       0: new           #57                 // class org/bson/BsonDocument
       3: dup
       4: aload_0
       5: invokevirtual #58                 // Method getAction:()Ljava/lang/String;
       8: new           #59                 // class org/bson/BsonString
      11: dup
      12: aload_0
      13: invokevirtual #60                 // Method getCollectionName:()Ljava/lang/String;
      16: invokespecial #61                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      19: invokespecial #62                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      22: astore_2
      23: aload_2
      24: ldc           #63                 // String sharded
      26: aload_0
      27: invokevirtual #64                 // Method isSharded:()Z
      30: invokestatic  #65                 // Method org/bson/BsonBoolean.valueOf:(Z)Lorg/bson/BsonBoolean;
      33: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      36: pop
      37: aload_2
      38: ldc           #67                 // String nonAtomic
      40: aload_0
      41: invokevirtual #68                 // Method isNonAtomic:()Z
      44: invokestatic  #65                 // Method org/bson/BsonBoolean.valueOf:(Z)Lorg/bson/BsonBoolean;
      47: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      50: pop
      51: aload_0
      52: invokevirtual #69                 // Method getDatabaseName:()Ljava/lang/String;
      55: ifnull        76
      58: aload_2
      59: ldc           #70                 // String db
      61: new           #59                 // class org/bson/BsonString
      64: dup
      65: aload_0
      66: invokevirtual #69                 // Method getDatabaseName:()Ljava/lang/String;
      69: invokespecial #61                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      72: invokevirtual #71                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
      75: pop
      76: new           #57                 // class org/bson/BsonDocument
      79: dup
      80: ldc           #72                 // String mapreduce
      82: new           #59                 // class org/bson/BsonString
      85: dup
      86: aload_0
      87: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
      90: invokevirtual #73                 // Method com/mongodb/MongoNamespace.getCollectionName:()Ljava/lang/String;
      93: invokespecial #61                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      96: invokespecial #62                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      99: ldc           #74                 // String map
     101: aload_0
     102: invokevirtual #75                 // Method getMapFunction:()Lorg/bson/BsonJavaScript;
     105: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     108: ldc           #76                 // String reduce
     110: aload_0
     111: invokevirtual #77                 // Method getReduceFunction:()Lorg/bson/BsonJavaScript;
     114: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     117: ldc           #78                 // String out
     119: aload_2
     120: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     123: ldc           #79                 // String query
     125: aload_0
     126: invokevirtual #80                 // Method getFilter:()Lorg/bson/BsonDocument;
     129: invokestatic  #81                 // Method asValueOrNull:(Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     132: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     135: ldc           #82                 // String sort
     137: aload_0
     138: invokevirtual #83                 // Method getSort:()Lorg/bson/BsonDocument;
     141: invokestatic  #81                 // Method asValueOrNull:(Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     144: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     147: ldc           #84                 // String finalize
     149: aload_0
     150: invokevirtual #85                 // Method getFinalizeFunction:()Lorg/bson/BsonJavaScript;
     153: invokestatic  #81                 // Method asValueOrNull:(Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     156: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     159: ldc           #86                 // String scope
     161: aload_0
     162: invokevirtual #87                 // Method getScope:()Lorg/bson/BsonDocument;
     165: invokestatic  #81                 // Method asValueOrNull:(Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     168: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     171: ldc           #88                 // String verbose
     173: aload_0
     174: invokevirtual #89                 // Method isVerbose:()Z
     177: invokestatic  #65                 // Method org/bson/BsonBoolean.valueOf:(Z)Lorg/bson/BsonBoolean;
     180: invokevirtual #66                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     183: astore_3
     184: aload_3
     185: ldc           #90                 // String limit
     187: aload_0
     188: invokevirtual #91                 // Method getLimit:()I
     191: invokestatic  #92                 // Method com/mongodb/operation/DocumentHelper.putIfNotZero:(Lorg/bson/BsonDocument;Ljava/lang/String;I)V
     194: aload_3
     195: ldc           #93                 // String maxTimeMS
     197: aload_0
     198: getstatic     #30                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     201: invokevirtual #94                 // Method getMaxTime:(Ljava/util/concurrent/TimeUnit;)J
     204: invokestatic  #95                 // Method com/mongodb/operation/DocumentHelper.putIfNotZero:(Lorg/bson/BsonDocument;Ljava/lang/String;J)V
     207: aload_3
     208: ldc           #96                 // String jsMode
     210: aload_0
     211: invokevirtual #97                 // Method isJsMode:()Z
     214: invokestatic  #98                 // Method com/mongodb/operation/DocumentHelper.putIfTrue:(Lorg/bson/BsonDocument;Ljava/lang/String;Z)V
     217: aload_0
     218: getfield      #40                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
     221: ifnull        252
     224: aload_1
     225: ifnull        252
     228: aload_1
     229: invokestatic  #99                 // Method com/mongodb/operation/OperationHelper.serverIsAtLeastVersionThreeDotTwo:(Lcom/mongodb/connection/ConnectionDescription;)Z
     232: ifeq          252
     235: aload_3
     236: ldc           #100                // String bypassDocumentValidation
     238: aload_0
     239: getfield      #40                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
     242: invokevirtual #101                // Method java/lang/Boolean.booleanValue:()Z
     245: invokestatic  #65                 // Method org/bson/BsonBoolean.valueOf:(Z)Lorg/bson/BsonBoolean;
     248: invokevirtual #71                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     251: pop
     252: aload_1
     253: ifnull        265
     256: aload_0
     257: getfield      #20                 // Field writeConcern:Lcom/mongodb/WriteConcern;
     260: aload_3
     261: aload_1
     262: invokestatic  #102                // Method com/mongodb/operation/WriteConcernHelper.appendWriteConcernToCommand:(Lcom/mongodb/WriteConcern;Lorg/bson/BsonDocument;Lcom/mongodb/connection/ConnectionDescription;)V
     265: aload_0
     266: getfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
     269: ifnull        286
     272: aload_3
     273: ldc           #103                // String collation
     275: aload_0
     276: getfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
     279: invokevirtual #104                // Method com/mongodb/client/model/Collation.asDocument:()Lorg/bson/BsonDocument;
     282: invokevirtual #71                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     285: pop
     286: aload_3
     287: areturn

  private static org.bson.BsonValue asValueOrNull(org.bson.BsonValue);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: getstatic     #105                // Field org/bson/BsonNull.VALUE:Lorg/bson/BsonNull;
       7: goto          11
      10: aload_0
      11: areturn

  public java.lang.Object execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method execute:(Lcom/mongodb/binding/WriteBinding;)Lcom/mongodb/operation/MapReduceStatistics;
       5: areturn

  static com.mongodb.client.model.Collation access$000(com.mongodb.operation.MapReduceToCollectionOperation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  static com.mongodb.MongoNamespace access$100(com.mongodb.operation.MapReduceToCollectionOperation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  static org.bson.BsonDocument access$200(com.mongodb.operation.MapReduceToCollectionOperation, com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method getCommand:(Lcom/mongodb/connection/ConnectionDescription;)Lorg/bson/BsonDocument;
       5: areturn

  static com.mongodb.operation.CommandOperationHelper$CommandTransformer access$300(com.mongodb.operation.MapReduceToCollectionOperation);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method transformer:()Lcom/mongodb/operation/CommandOperationHelper$CommandTransformer;
       4: areturn

  static {};
    Code:
       0: iconst_3
       1: anewarray     #18                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #7                  // String replace
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #107                // String merge
      13: aastore
      14: dup
      15: iconst_2
      16: ldc           #76                 // String reduce
      18: aastore
      19: invokestatic  #108                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: putstatic     #34                 // Field VALID_ACTIONS:Ljava/util/List;
      25: return
}
