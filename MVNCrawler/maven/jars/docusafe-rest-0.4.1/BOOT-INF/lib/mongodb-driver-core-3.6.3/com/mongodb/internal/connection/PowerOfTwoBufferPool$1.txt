Compiled from "PowerOfTwoBufferPool.java"
class com.mongodb.internal.connection.PowerOfTwoBufferPool$1 implements com.mongodb.internal.connection.ConcurrentPool$ItemFactory<java.nio.ByteBuffer> {
  final int val$size;

  final com.mongodb.internal.connection.PowerOfTwoBufferPool this$0;

  com.mongodb.internal.connection.PowerOfTwoBufferPool$1(com.mongodb.internal.connection.PowerOfTwoBufferPool, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/mongodb/internal/connection/PowerOfTwoBufferPool;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$size:I
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public java.nio.ByteBuffer create(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mongodb/internal/connection/PowerOfTwoBufferPool;
       4: aload_0
       5: getfield      #2                  // Field val$size:I
       8: invokestatic  #4                  // Method com/mongodb/internal/connection/PowerOfTwoBufferPool.access$000:(Lcom/mongodb/internal/connection/PowerOfTwoBufferPool;I)Ljava/nio/ByteBuffer;
      11: areturn

  public void close(java.nio.ByteBuffer);
    Code:
       0: return

  public com.mongodb.internal.connection.ConcurrentPool$Prune shouldPrune(java.nio.ByteBuffer);
    Code:
       0: getstatic     #5                  // Field com/mongodb/internal/connection/ConcurrentPool$Prune.STOP:Lcom/mongodb/internal/connection/ConcurrentPool$Prune;
       3: areturn

  public com.mongodb.internal.connection.ConcurrentPool$Prune shouldPrune(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class java/nio/ByteBuffer
       5: invokevirtual #7                  // Method shouldPrune:(Ljava/nio/ByteBuffer;)Lcom/mongodb/internal/connection/ConcurrentPool$Prune;
       8: areturn

  public void close(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class java/nio/ByteBuffer
       5: invokevirtual #8                  // Method close:(Ljava/nio/ByteBuffer;)V
       8: return

  public java.lang.Object create(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #9                  // Method create:(Z)Ljava/nio/ByteBuffer;
       5: areturn
}
