Compiled from "Filters.java"
final class com.mongodb.client.model.Filters$OperatorFilter<TItem> implements org.bson.conversions.Bson {
  private final java.lang.String operatorName;

  private final java.lang.String fieldName;

  private final TItem value;

  com.mongodb.client.model.Filters$OperatorFilter(java.lang.String, java.lang.String, TItem);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String operatorName
       7: aload_1
       8: invokestatic  #3                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/lang/String
      14: putfield      #5                  // Field operatorName:Ljava/lang/String;
      17: aload_0
      18: ldc           #6                  // String fieldName
      20: aload_2
      21: invokestatic  #3                  // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #4                  // class java/lang/String
      27: putfield      #7                  // Field fieldName:Ljava/lang/String;
      30: aload_0
      31: aload_3
      32: putfield      #8                  // Field value:Ljava/lang/Object;
      35: return

  public <TDocument> org.bson.BsonDocument toBsonDocument(java.lang.Class<TDocument>, org.bson.codecs.configuration.CodecRegistry);
    Code:
       0: new           #9                  // class org/bson/BsonDocumentWriter
       3: dup
       4: new           #10                 // class org/bson/BsonDocument
       7: dup
       8: invokespecial #11                 // Method org/bson/BsonDocument."<init>":()V
      11: invokespecial #12                 // Method org/bson/BsonDocumentWriter."<init>":(Lorg/bson/BsonDocument;)V
      14: astore_3
      15: aload_3
      16: invokevirtual #13                 // Method org/bson/BsonDocumentWriter.writeStartDocument:()V
      19: aload_3
      20: aload_0
      21: getfield      #7                  // Field fieldName:Ljava/lang/String;
      24: invokevirtual #14                 // Method org/bson/BsonDocumentWriter.writeName:(Ljava/lang/String;)V
      27: aload_3
      28: invokevirtual #13                 // Method org/bson/BsonDocumentWriter.writeStartDocument:()V
      31: aload_3
      32: aload_0
      33: getfield      #5                  // Field operatorName:Ljava/lang/String;
      36: invokevirtual #14                 // Method org/bson/BsonDocumentWriter.writeName:(Ljava/lang/String;)V
      39: aload_3
      40: aload_0
      41: getfield      #8                  // Field value:Ljava/lang/Object;
      44: aload_2
      45: invokestatic  #15                 // Method com/mongodb/client/model/BuildersHelper.encodeValue:(Lorg/bson/BsonDocumentWriter;Ljava/lang/Object;Lorg/bson/codecs/configuration/CodecRegistry;)V
      48: aload_3
      49: invokevirtual #16                 // Method org/bson/BsonDocumentWriter.writeEndDocument:()V
      52: aload_3
      53: invokevirtual #16                 // Method org/bson/BsonDocumentWriter.writeEndDocument:()V
      56: aload_3
      57: invokevirtual #17                 // Method org/bson/BsonDocumentWriter.getDocument:()Lorg/bson/BsonDocument;
      60: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fieldName:Ljava/lang/String;
       4: aload_0
       5: getfield      #5                  // Field operatorName:Ljava/lang/String;
       8: aload_0
       9: getfield      #8                  // Field value:Ljava/lang/Object;
      12: invokestatic  #18                 // Method com/mongodb/client/model/Filters.access$100:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
      15: areturn
}
