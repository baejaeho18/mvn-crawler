Compiled from "AsyncSingleBatchQueryCursor.java"
class com.mongodb.operation.AsyncSingleBatchQueryCursor<T> implements com.mongodb.async.AsyncBatchCursor<T> {
  private volatile com.mongodb.connection.QueryResult<T> firstBatch;

  private volatile boolean closed;

  com.mongodb.operation.AsyncSingleBatchQueryCursor(com.mongodb.connection.QueryResult<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field firstBatch:Lcom/mongodb/connection/QueryResult;
       9: ldc           #3                  // String Empty Cursor
      11: aload_1
      12: invokevirtual #4                  // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
      15: ifnonnull     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: invokestatic  #5                  // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      26: return

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field closed:Z
       5: return

  public void next(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ifeq          26
       7: aload_1
       8: aconst_null
       9: new           #7                  // class com/mongodb/MongoException
      12: dup
      13: ldc           #8                  // String next() called after the cursor was closed.
      15: invokespecial #9                  // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      18: invokeinterface #10,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      23: goto          85
      26: aload_0
      27: getfield      #2                  // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      30: ifnull        72
      33: aload_0
      34: getfield      #2                  // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      37: invokevirtual #11                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
      40: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      45: ifne          72
      48: aload_0
      49: getfield      #2                  // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      52: invokevirtual #11                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
      55: astore_2
      56: aload_0
      57: aconst_null
      58: putfield      #2                  // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      61: aload_1
      62: aload_2
      63: aconst_null
      64: invokeinterface #10,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      69: goto          85
      72: aload_0
      73: iconst_1
      74: putfield      #6                  // Field closed:Z
      77: aload_1
      78: aconst_null
      79: aconst_null
      80: invokeinterface #10,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      85: return

  public void tryNext(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method next:(Lcom/mongodb/async/SingleResultCallback;)V
       5: return

  public void setBatchSize(int);
    Code:
       0: return

  public int getBatchSize();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ireturn
}
