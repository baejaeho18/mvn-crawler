Compiled from "OperationHelper.java"
final class com.mongodb.operation.OperationHelper {
  public static final com.mongodb.diagnostics.logging.Logger LOGGER;

  static void validateReadConcern(com.mongodb.connection.Connection, com.mongodb.ReadConcern);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod com/mongodb/connection/Connection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       6: invokestatic  #4                  // Method serverIsAtLeastVersionThreeDotTwo:(Lcom/mongodb/connection/ConnectionDescription;)Z
       9: ifne          48
      12: aload_1
      13: invokevirtual #5                  // Method com/mongodb/ReadConcern.isServerDefault:()Z
      16: ifne          48
      19: new           #6                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #7                  // String ReadConcern not supported by server version: %s
      25: iconst_1
      26: anewarray     #8                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: invokeinterface #3,  1            // InterfaceMethod com/mongodb/connection/Connection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
      37: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
      40: aastore
      41: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  static void validateReadConcern(com.mongodb.connection.AsyncConnection, com.mongodb.ReadConcern, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: invokeinterface #12,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       8: invokestatic  #4                  // Method serverIsAtLeastVersionThreeDotTwo:(Lcom/mongodb/connection/ConnectionDescription;)Z
      11: ifne          50
      14: aload_1
      15: invokevirtual #5                  // Method com/mongodb/ReadConcern.isServerDefault:()Z
      18: ifne          50
      21: new           #6                  // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #7                  // String ReadConcern not supported by server version: %s
      27: iconst_1
      28: anewarray     #8                  // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_0
      34: invokeinterface #12,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
      39: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
      42: aastore
      43: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: astore_3
      50: aload_2
      51: aload_0
      52: aload_3
      53: invokeinterface #13,  3           // InterfaceMethod com/mongodb/operation/OperationHelper$AsyncCallableWithConnection.call:(Lcom/mongodb/connection/AsyncConnection;Ljava/lang/Throwable;)V
      58: return

  static void validateReadConcern(com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection, com.mongodb.ReadConcern, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_1
       1: aload_2
       2: new           #14                 // class com/mongodb/operation/OperationHelper$1
       5: dup
       6: aload_3
       7: aload_0
       8: invokespecial #15                 // Method com/mongodb/operation/OperationHelper$1."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;Lcom/mongodb/binding/AsyncConnectionSource;)V
      11: invokestatic  #16                 // Method validateReadConcern:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ReadConcern;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      14: return

  static void validateCollation(com.mongodb.connection.Connection, com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod com/mongodb/connection/Connection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       6: aload_1
       7: invokestatic  #17                 // Method validateCollation:(Lcom/mongodb/connection/ConnectionDescription;Lcom/mongodb/client/model/Collation;)V
      10: return

  static void validateCollation(com.mongodb.connection.ConnectionDescription, com.mongodb.client.model.Collation);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_0
       5: invokestatic  #18                 // Method serverIsAtLeastVersionThreeDotFour:(Lcom/mongodb/connection/ConnectionDescription;)Z
       8: ifne          35
      11: new           #6                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #19                 // String Collation not supported by server version: %s
      17: iconst_1
      18: anewarray     #8                  // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_0
      24: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
      27: aastore
      28: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: return

  static void validateCollationAndWriteConcern(com.mongodb.connection.ConnectionDescription, com.mongodb.client.model.Collation, com.mongodb.WriteConcern);
    Code:
       0: aload_1
       1: ifnull        35
       4: aload_0
       5: invokestatic  #18                 // Method serverIsAtLeastVersionThreeDotFour:(Lcom/mongodb/connection/ConnectionDescription;)Z
       8: ifne          35
      11: new           #6                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #19                 // String Collation not supported by server version: %s
      17: iconst_1
      18: anewarray     #8                  // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_0
      24: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
      27: aastore
      28: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_1
      36: ifnull        56
      39: aload_2
      40: invokevirtual #20                 // Method com/mongodb/WriteConcern.isAcknowledged:()Z
      43: ifne          56
      46: new           #21                 // class com/mongodb/MongoClientException
      49: dup
      50: ldc           #22                 // String Specifying collation with an unacknowledged WriteConcern is not supported
      52: invokespecial #23                 // Method com/mongodb/MongoClientException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: return

  static void validateCollation(com.mongodb.connection.AsyncConnection, com.mongodb.client.model.Collation, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: invokeinterface #12,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       8: invokestatic  #18                 // Method serverIsAtLeastVersionThreeDotFour:(Lcom/mongodb/connection/ConnectionDescription;)Z
      11: ifne          47
      14: aload_1
      15: ifnull        47
      18: new           #6                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #19                 // String Collation not supported by server version: %s
      24: iconst_1
      25: anewarray     #8                  // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_0
      31: invokeinterface #12,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
      36: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
      39: aastore
      40: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: astore_3
      47: aload_2
      48: aload_0
      49: aload_3
      50: invokeinterface #13,  3           // InterfaceMethod com/mongodb/operation/OperationHelper$AsyncCallableWithConnection.call:(Lcom/mongodb/connection/AsyncConnection;Ljava/lang/Throwable;)V
      55: return

  static void validateCollation(com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection, com.mongodb.client.model.Collation, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_1
       1: aload_2
       2: new           #24                 // class com/mongodb/operation/OperationHelper$2
       5: dup
       6: aload_3
       7: aload_0
       8: invokespecial #25                 // Method com/mongodb/operation/OperationHelper$2."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;Lcom/mongodb/binding/AsyncConnectionSource;)V
      11: invokestatic  #26                 // Method validateCollation:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/client/model/Collation;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      14: return

  static void validateWriteRequestCollations(com.mongodb.connection.ConnectionDescription, java.util.List<? extends com.mongodb.bulk.WriteRequest>, com.mongodb.WriteConcern);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          79
      20: aload         4
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #30                 // class com/mongodb/bulk/WriteRequest
      30: astore        5
      32: aload         5
      34: instanceof    #31                 // class com/mongodb/bulk/UpdateRequest
      37: ifeq          52
      40: aload         5
      42: checkcast     #31                 // class com/mongodb/bulk/UpdateRequest
      45: invokevirtual #32                 // Method com/mongodb/bulk/UpdateRequest.getCollation:()Lcom/mongodb/client/model/Collation;
      48: astore_3
      49: goto          69
      52: aload         5
      54: instanceof    #33                 // class com/mongodb/bulk/DeleteRequest
      57: ifeq          69
      60: aload         5
      62: checkcast     #33                 // class com/mongodb/bulk/DeleteRequest
      65: invokevirtual #34                 // Method com/mongodb/bulk/DeleteRequest.getCollation:()Lcom/mongodb/client/model/Collation;
      68: astore_3
      69: aload_3
      70: ifnull        76
      73: goto          79
      76: goto          10
      79: aload_0
      80: aload_3
      81: aload_2
      82: invokestatic  #35                 // Method validateCollationAndWriteConcern:(Lcom/mongodb/connection/ConnectionDescription;Lcom/mongodb/client/model/Collation;Lcom/mongodb/WriteConcern;)V
      85: return

  static void validateWriteRequests(com.mongodb.connection.ConnectionDescription, java.lang.Boolean, java.util.List<? extends com.mongodb.bulk.WriteRequest>, com.mongodb.WriteConcern);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokestatic  #36                 // Method checkBypassDocumentValidationIsSupported:(Lcom/mongodb/connection/ConnectionDescription;Ljava/lang/Boolean;Lcom/mongodb/WriteConcern;)V
       6: aload_0
       7: aload_2
       8: aload_3
       9: invokestatic  #37                 // Method validateWriteRequestCollations:(Lcom/mongodb/connection/ConnectionDescription;Ljava/util/List;Lcom/mongodb/WriteConcern;)V
      12: return

  static void validateWriteRequests(com.mongodb.connection.AsyncConnection, java.lang.Boolean, java.util.List<? extends com.mongodb.bulk.WriteRequest>, com.mongodb.WriteConcern, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aload_0
       1: invokeinterface #12,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokestatic  #38                 // Method validateWriteRequests:(Lcom/mongodb/connection/ConnectionDescription;Ljava/lang/Boolean;Ljava/util/List;Lcom/mongodb/WriteConcern;)V
      12: aload         4
      14: aload_0
      15: aconst_null
      16: invokeinterface #13,  3           // InterfaceMethod com/mongodb/operation/OperationHelper$AsyncCallableWithConnection.call:(Lcom/mongodb/connection/AsyncConnection;Ljava/lang/Throwable;)V
      21: goto          36
      24: astore        5
      26: aload         4
      28: aload_0
      29: aload         5
      31: invokeinterface #13,  3           // InterfaceMethod com/mongodb/operation/OperationHelper$AsyncCallableWithConnection.call:(Lcom/mongodb/connection/AsyncConnection;Ljava/lang/Throwable;)V
      36: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/Throwable

  static void validateIndexRequestCollations(com.mongodb.connection.Connection, java.util.List<com.mongodb.bulk.IndexRequest>);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #40                 // class com/mongodb/bulk/IndexRequest
      25: astore_3
      26: aload_3
      27: invokevirtual #41                 // Method com/mongodb/bulk/IndexRequest.getCollation:()Lcom/mongodb/client/model/Collation;
      30: ifnull        44
      33: aload_0
      34: aload_3
      35: invokevirtual #41                 // Method com/mongodb/bulk/IndexRequest.getCollation:()Lcom/mongodb/client/model/Collation;
      38: invokestatic  #42                 // Method validateCollation:(Lcom/mongodb/connection/Connection;Lcom/mongodb/client/model/Collation;)V
      41: goto          47
      44: goto          7
      47: return

  static void validateIndexRequestCollations(com.mongodb.connection.AsyncConnection, java.util.List<com.mongodb.bulk.IndexRequest>, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          65
      20: aload         4
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #40                 // class com/mongodb/bulk/IndexRequest
      30: astore        5
      32: aload         5
      34: invokevirtual #41                 // Method com/mongodb/bulk/IndexRequest.getCollation:()Lcom/mongodb/client/model/Collation;
      37: ifnull        62
      40: iconst_1
      41: istore_3
      42: aload_0
      43: aload         5
      45: invokevirtual #41                 // Method com/mongodb/bulk/IndexRequest.getCollation:()Lcom/mongodb/client/model/Collation;
      48: new           #43                 // class com/mongodb/operation/OperationHelper$3
      51: dup
      52: aload_2
      53: invokespecial #44                 // Method com/mongodb/operation/OperationHelper$3."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      56: invokestatic  #26                 // Method validateCollation:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/client/model/Collation;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      59: goto          65
      62: goto          10
      65: iload_3
      66: ifne          77
      69: aload_2
      70: aload_0
      71: aconst_null
      72: invokeinterface #13,  3           // InterfaceMethod com/mongodb/operation/OperationHelper$AsyncCallableWithConnection.call:(Lcom/mongodb/connection/AsyncConnection;Ljava/lang/Throwable;)V
      77: return

  static void validateReadConcernAndCollation(com.mongodb.connection.Connection, com.mongodb.ReadConcern, com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // Method validateReadConcern:(Lcom/mongodb/connection/Connection;Lcom/mongodb/ReadConcern;)V
       5: aload_0
       6: aload_2
       7: invokestatic  #42                 // Method validateCollation:(Lcom/mongodb/connection/Connection;Lcom/mongodb/client/model/Collation;)V
      10: return

  static void validateReadConcernAndCollation(com.mongodb.connection.AsyncConnection, com.mongodb.ReadConcern, com.mongodb.client.model.Collation, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aload_0
       1: aload_1
       2: new           #46                 // class com/mongodb/operation/OperationHelper$4
       5: dup
       6: aload_3
       7: aload_2
       8: invokespecial #47                 // Method com/mongodb/operation/OperationHelper$4."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;Lcom/mongodb/client/model/Collation;)V
      11: invokestatic  #16                 // Method validateReadConcern:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ReadConcern;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      14: return

  static void validateReadConcernAndCollation(com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection, com.mongodb.ReadConcern, com.mongodb.client.model.Collation, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: new           #48                 // class com/mongodb/operation/OperationHelper$5
       6: dup
       7: aload         4
       9: aload_0
      10: invokespecial #49                 // Method com/mongodb/operation/OperationHelper$5."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;Lcom/mongodb/binding/AsyncConnectionSource;)V
      13: invokestatic  #50                 // Method validateReadConcernAndCollation:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ReadConcern;Lcom/mongodb/client/model/Collation;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      16: return

  static void checkBypassDocumentValidationIsSupported(com.mongodb.connection.ConnectionDescription, java.lang.Boolean, com.mongodb.WriteConcern);
    Code:
       0: aload_1
       1: ifnull        28
       4: aload_0
       5: invokestatic  #4                  // Method serverIsAtLeastVersionThreeDotTwo:(Lcom/mongodb/connection/ConnectionDescription;)Z
       8: ifeq          28
      11: aload_2
      12: invokevirtual #20                 // Method com/mongodb/WriteConcern.isAcknowledged:()Z
      15: ifne          28
      18: new           #21                 // class com/mongodb/MongoClientException
      21: dup
      22: ldc           #51                 // String Specifying bypassDocumentValidation with an unacknowledged WriteConcern is not supported
      24: invokespecial #23                 // Method com/mongodb/MongoClientException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  static boolean isRetryableWrite(boolean, com.mongodb.WriteConcern, com.mongodb.connection.ServerDescription, com.mongodb.connection.ConnectionDescription);
    Code:
       0: iload_0
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #20                 // Method com/mongodb/WriteConcern.isAcknowledged:()Z
      10: ifne          25
      13: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      16: ldc           #53                 // String retryWrites set to true but the writeConcern is unacknowledged.
      18: invokeinterface #54,  2           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.debug:(Ljava/lang/String;)V
      23: iconst_0
      24: ireturn
      25: aload_2
      26: aload_3
      27: invokestatic  #55                 // Method canRetryWrite:(Lcom/mongodb/connection/ServerDescription;Lcom/mongodb/connection/ConnectionDescription;)Z
      30: ireturn

  static boolean canRetryWrite(com.mongodb.connection.ServerDescription, com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
       4: new           #56                 // class com/mongodb/connection/ServerVersion
       7: dup
       8: iconst_3
       9: bipush        6
      11: invokespecial #57                 // Method com/mongodb/connection/ServerVersion."<init>":(II)V
      14: invokevirtual #58                 // Method com/mongodb/connection/ServerVersion.compareTo:(Lcom/mongodb/connection/ServerVersion;)I
      17: ifge          32
      20: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      23: ldc           #59                 // String retryWrites set to true but the server does not support retryable writes.
      25: invokeinterface #54,  2           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.debug:(Ljava/lang/String;)V
      30: iconst_0
      31: ireturn
      32: aload_0
      33: invokevirtual #60                 // Method com/mongodb/connection/ServerDescription.getLogicalSessionTimeoutMinutes:()Ljava/lang/Integer;
      36: ifnonnull     51
      39: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      42: ldc           #61                 // String retryWrites set to true but the server does not have 3.6 feature compatibility enabled.
      44: invokeinterface #54,  2           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.debug:(Ljava/lang/String;)V
      49: iconst_0
      50: ireturn
      51: aload_1
      52: invokevirtual #62                 // Method com/mongodb/connection/ConnectionDescription.getServerType:()Lcom/mongodb/connection/ServerType;
      55: getstatic     #63                 // Field com/mongodb/connection/ServerType.STANDALONE:Lcom/mongodb/connection/ServerType;
      58: invokevirtual #64                 // Method com/mongodb/connection/ServerType.equals:(Ljava/lang/Object;)Z
      61: ifeq          76
      64: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      67: ldc           #65                 // String retryWrites set to true but the server is a standalone server.
      69: invokeinterface #54,  2           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.debug:(Ljava/lang/String;)V
      74: iconst_0
      75: ireturn
      76: iconst_1
      77: ireturn

  static <T> com.mongodb.operation.QueryBatchCursor<T> createEmptyBatchCursor(com.mongodb.MongoNamespace, org.bson.codecs.Decoder<T>, com.mongodb.ServerAddress, int);
    Code:
       0: new           #66                 // class com/mongodb/operation/QueryBatchCursor
       3: dup
       4: new           #67                 // class com/mongodb/connection/QueryResult
       7: dup
       8: aload_0
       9: invokestatic  #68                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: lconst_0
      13: aload_2
      14: invokespecial #69                 // Method com/mongodb/connection/QueryResult."<init>":(Lcom/mongodb/MongoNamespace;Ljava/util/List;JLcom/mongodb/ServerAddress;)V
      17: iconst_0
      18: iload_3
      19: aload_1
      20: invokespecial #70                 // Method com/mongodb/operation/QueryBatchCursor."<init>":(Lcom/mongodb/connection/QueryResult;IILorg/bson/codecs/Decoder;)V
      23: areturn

  static <T> com.mongodb.async.AsyncBatchCursor<T> createEmptyAsyncBatchCursor(com.mongodb.MongoNamespace, com.mongodb.ServerAddress);
    Code:
       0: new           #71                 // class com/mongodb/operation/AsyncSingleBatchQueryCursor
       3: dup
       4: new           #67                 // class com/mongodb/connection/QueryResult
       7: dup
       8: aload_0
       9: invokestatic  #68                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: lconst_0
      13: aload_1
      14: invokespecial #69                 // Method com/mongodb/connection/QueryResult."<init>":(Lcom/mongodb/MongoNamespace;Ljava/util/List;JLcom/mongodb/ServerAddress;)V
      17: invokespecial #72                 // Method com/mongodb/operation/AsyncSingleBatchQueryCursor."<init>":(Lcom/mongodb/connection/QueryResult;)V
      20: areturn

  static <T> com.mongodb.operation.BatchCursor<T> cursorDocumentToBatchCursor(org.bson.BsonDocument, org.bson.codecs.Decoder<T>, com.mongodb.binding.ConnectionSource, int);
    Code:
       0: new           #66                 // class com/mongodb/operation/QueryBatchCursor
       3: dup
       4: aload_0
       5: aload_2
       6: invokeinterface #73,  1           // InterfaceMethod com/mongodb/binding/ConnectionSource.getServerDescription:()Lcom/mongodb/connection/ServerDescription;
      11: invokevirtual #74                 // Method com/mongodb/connection/ServerDescription.getAddress:()Lcom/mongodb/ServerAddress;
      14: invokestatic  #75                 // Method cursorDocumentToQueryResult:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;)Lcom/mongodb/connection/QueryResult;
      17: iconst_0
      18: iload_3
      19: aload_1
      20: aload_2
      21: invokespecial #76                 // Method com/mongodb/operation/QueryBatchCursor."<init>":(Lcom/mongodb/connection/QueryResult;IILorg/bson/codecs/Decoder;Lcom/mongodb/binding/ConnectionSource;)V
      24: areturn

  static <T> com.mongodb.async.AsyncBatchCursor<T> cursorDocumentToAsyncBatchCursor(org.bson.BsonDocument, org.bson.codecs.Decoder<T>, com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection, int);
    Code:
       0: new           #77                 // class com/mongodb/operation/AsyncQueryBatchCursor
       3: dup
       4: aload_0
       5: aload_2
       6: invokeinterface #78,  1           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getServerDescription:()Lcom/mongodb/connection/ServerDescription;
      11: invokevirtual #74                 // Method com/mongodb/connection/ServerDescription.getAddress:()Lcom/mongodb/ServerAddress;
      14: invokestatic  #75                 // Method cursorDocumentToQueryResult:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;)Lcom/mongodb/connection/QueryResult;
      17: iconst_0
      18: iload         4
      20: lconst_0
      21: aload_1
      22: aload_2
      23: aload_3
      24: invokespecial #79                 // Method com/mongodb/operation/AsyncQueryBatchCursor."<init>":(Lcom/mongodb/connection/QueryResult;IIJLorg/bson/codecs/Decoder;Lcom/mongodb/binding/AsyncConnectionSource;Lcom/mongodb/connection/AsyncConnection;)V
      27: areturn

  static <T> com.mongodb.connection.QueryResult<T> cursorDocumentToQueryResult(org.bson.BsonDocument, com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #80                 // String firstBatch
       4: invokestatic  #81                 // Method cursorDocumentToQueryResult:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Ljava/lang/String;)Lcom/mongodb/connection/QueryResult;
       7: areturn

  static <T> com.mongodb.connection.QueryResult<T> getMoreCursorDocumentToQueryResult(org.bson.BsonDocument, com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #82                 // String nextBatch
       4: invokestatic  #81                 // Method cursorDocumentToQueryResult:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Ljava/lang/String;)Lcom/mongodb/connection/QueryResult;
       7: areturn

  private static <T> com.mongodb.connection.QueryResult<T> cursorDocumentToQueryResult(org.bson.BsonDocument, com.mongodb.ServerAddress, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #83                 // String id
       3: invokevirtual #84                 // Method org/bson/BsonDocument.get:(Ljava/lang/Object;)Lorg/bson/BsonValue;
       6: checkcast     #85                 // class org/bson/BsonInt64
       9: invokevirtual #86                 // Method org/bson/BsonInt64.getValue:()J
      12: lstore_3
      13: new           #87                 // class com/mongodb/MongoNamespace
      16: dup
      17: aload_0
      18: ldc           #88                 // String ns
      20: invokevirtual #89                 // Method org/bson/BsonDocument.getString:(Ljava/lang/Object;)Lorg/bson/BsonString;
      23: invokevirtual #90                 // Method org/bson/BsonString.getValue:()Ljava/lang/String;
      26: invokespecial #91                 // Method com/mongodb/MongoNamespace."<init>":(Ljava/lang/String;)V
      29: astore        5
      31: new           #67                 // class com/mongodb/connection/QueryResult
      34: dup
      35: aload         5
      37: aload_0
      38: aload_2
      39: invokestatic  #92                 // Method com/mongodb/operation/BsonDocumentWrapperHelper.toList:(Lorg/bson/BsonDocument;Ljava/lang/String;)Ljava/util/List;
      42: lload_3
      43: aload_1
      44: invokespecial #69                 // Method com/mongodb/connection/QueryResult."<init>":(Lcom/mongodb/MongoNamespace;Ljava/util/List;JLcom/mongodb/ServerAddress;)V
      47: areturn

  static <T> com.mongodb.async.SingleResultCallback<T> releasingCallback(com.mongodb.async.SingleResultCallback<T>, com.mongodb.binding.AsyncConnectionSource);
    Code:
       0: new           #93                 // class com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #94                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       9: invokespecial #95                 // Method com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback."<init>":(Lcom/mongodb/async/SingleResultCallback;Ljava/util/List;)V
      12: areturn

  static <T> com.mongodb.async.SingleResultCallback<T> releasingCallback(com.mongodb.async.SingleResultCallback<T>, com.mongodb.connection.AsyncConnection);
    Code:
       0: new           #93                 // class com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback
       3: dup
       4: aload_0
       5: aload_1
       6: invokestatic  #94                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       9: invokespecial #95                 // Method com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback."<init>":(Lcom/mongodb/async/SingleResultCallback;Ljava/util/List;)V
      12: areturn

  static <T> com.mongodb.async.SingleResultCallback<T> releasingCallback(com.mongodb.async.SingleResultCallback<T>, com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection);
    Code:
       0: new           #93                 // class com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback
       3: dup
       4: aload_0
       5: iconst_2
       6: anewarray     #96                 // class com/mongodb/binding/ReferenceCounted
       9: dup
      10: iconst_0
      11: aload_2
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: aastore
      17: invokestatic  #97                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: invokespecial #95                 // Method com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback."<init>":(Lcom/mongodb/async/SingleResultCallback;Ljava/util/List;)V
      23: areturn

  static <T> com.mongodb.async.SingleResultCallback<T> releasingCallback(com.mongodb.async.SingleResultCallback<T>, com.mongodb.binding.AsyncReadBinding, com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection);
    Code:
       0: new           #93                 // class com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback
       3: dup
       4: aload_0
       5: iconst_3
       6: anewarray     #96                 // class com/mongodb/binding/ReferenceCounted
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: dup
      14: iconst_1
      15: aload_3
      16: aastore
      17: dup
      18: iconst_2
      19: aload_2
      20: aastore
      21: invokestatic  #97                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: invokespecial #95                 // Method com/mongodb/operation/OperationHelper$ReferenceCountedReleasingWrappedCallback."<init>":(Lcom/mongodb/async/SingleResultCallback;Ljava/util/List;)V
      27: areturn

  static boolean serverIsAtLeastVersionThreeDotZero(com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: new           #56                 // class com/mongodb/connection/ServerVersion
       4: dup
       5: iconst_3
       6: iconst_0
       7: invokespecial #57                 // Method com/mongodb/connection/ServerVersion."<init>":(II)V
      10: invokestatic  #98                 // Method serverIsAtLeastVersion:(Lcom/mongodb/connection/ConnectionDescription;Lcom/mongodb/connection/ServerVersion;)Z
      13: ireturn

  static boolean serverIsAtLeastVersionThreeDotTwo(com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: new           #56                 // class com/mongodb/connection/ServerVersion
       4: dup
       5: iconst_3
       6: iconst_2
       7: invokespecial #57                 // Method com/mongodb/connection/ServerVersion."<init>":(II)V
      10: invokestatic  #98                 // Method serverIsAtLeastVersion:(Lcom/mongodb/connection/ConnectionDescription;Lcom/mongodb/connection/ServerVersion;)Z
      13: ireturn

  static boolean serverIsAtLeastVersionThreeDotFour(com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: new           #56                 // class com/mongodb/connection/ServerVersion
       4: dup
       5: iconst_3
       6: iconst_4
       7: invokespecial #57                 // Method com/mongodb/connection/ServerVersion."<init>":(II)V
      10: invokestatic  #98                 // Method serverIsAtLeastVersion:(Lcom/mongodb/connection/ConnectionDescription;Lcom/mongodb/connection/ServerVersion;)Z
      13: ireturn

  static boolean serverIsAtLeastVersionThreeDotSix(com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: new           #56                 // class com/mongodb/connection/ServerVersion
       4: dup
       5: iconst_3
       6: bipush        6
       8: invokespecial #57                 // Method com/mongodb/connection/ServerVersion."<init>":(II)V
      11: invokestatic  #98                 // Method serverIsAtLeastVersion:(Lcom/mongodb/connection/ConnectionDescription;Lcom/mongodb/connection/ServerVersion;)Z
      14: ireturn

  static boolean serverIsAtLeastVersion(com.mongodb.connection.ConnectionDescription, com.mongodb.connection.ServerVersion);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
       4: aload_1
       5: invokevirtual #58                 // Method com/mongodb/connection/ServerVersion.compareTo:(Lcom/mongodb/connection/ServerVersion;)I
       8: iflt          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  static <T> T withConnection(com.mongodb.binding.ReadBinding, com.mongodb.operation.OperationHelper$CallableWithConnection<T>);
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod com/mongodb/binding/ReadBinding.getReadConnectionSource:()Lcom/mongodb/binding/ConnectionSource;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokestatic  #100                // Method withConnectionSource:(Lcom/mongodb/binding/ConnectionSource;Lcom/mongodb/operation/OperationHelper$CallableWithConnection;)Ljava/lang/Object;
      12: astore_3
      13: aload_2
      14: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      19: aload_3
      20: areturn
      21: astore        4
      23: aload_2
      24: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      29: aload         4
      31: athrow
    Exception table:
       from    to  target type
           7    13    21   any
          21    23    21   any

  static <T> T withConnection(com.mongodb.binding.ReadBinding, com.mongodb.operation.OperationHelper$CallableWithConnectionAndSource<T>);
    Code:
       0: aload_0
       1: invokeinterface #99,  1           // InterfaceMethod com/mongodb/binding/ReadBinding.getReadConnectionSource:()Lcom/mongodb/binding/ConnectionSource;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokestatic  #102                // Method withConnectionSource:(Lcom/mongodb/binding/ConnectionSource;Lcom/mongodb/operation/OperationHelper$CallableWithConnectionAndSource;)Ljava/lang/Object;
      12: astore_3
      13: aload_2
      14: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      19: aload_3
      20: areturn
      21: astore        4
      23: aload_2
      24: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      29: aload         4
      31: athrow
    Exception table:
       from    to  target type
           7    13    21   any
          21    23    21   any

  static <T> T withConnection(com.mongodb.binding.WriteBinding, com.mongodb.operation.OperationHelper$CallableWithConnection<T>);
    Code:
       0: aload_0
       1: invokeinterface #103,  1          // InterfaceMethod com/mongodb/binding/WriteBinding.getWriteConnectionSource:()Lcom/mongodb/binding/ConnectionSource;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokestatic  #100                // Method withConnectionSource:(Lcom/mongodb/binding/ConnectionSource;Lcom/mongodb/operation/OperationHelper$CallableWithConnection;)Ljava/lang/Object;
      12: astore_3
      13: aload_2
      14: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      19: aload_3
      20: areturn
      21: astore        4
      23: aload_2
      24: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      29: aload         4
      31: athrow
    Exception table:
       from    to  target type
           7    13    21   any
          21    23    21   any

  static <T> T withReleasableConnection(com.mongodb.binding.WriteBinding, com.mongodb.operation.OperationHelper$CallableWithConnectionAndSource<T>);
    Code:
       0: aload_0
       1: invokeinterface #103,  1          // InterfaceMethod com/mongodb/binding/WriteBinding.getWriteConnectionSource:()Lcom/mongodb/binding/ConnectionSource;
       6: astore_2
       7: aload_1
       8: aload_2
       9: aload_2
      10: invokeinterface #104,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.getConnection:()Lcom/mongodb/connection/Connection;
      15: invokeinterface #105,  3          // InterfaceMethod com/mongodb/operation/OperationHelper$CallableWithConnectionAndSource.call:(Lcom/mongodb/binding/ConnectionSource;Lcom/mongodb/connection/Connection;)Ljava/lang/Object;
      20: astore_3
      21: aload_2
      22: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      27: aload_3
      28: areturn
      29: astore        4
      31: aload_2
      32: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      37: aload         4
      39: athrow
    Exception table:
       from    to  target type
           7    21    29   any
          29    31    29   any

  static <T> T withReleasableConnection(com.mongodb.binding.WriteBinding, com.mongodb.MongoException, com.mongodb.operation.OperationHelper$CallableWithConnectionAndSource<T>);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: invokeinterface #103,  1          // InterfaceMethod com/mongodb/binding/WriteBinding.getWriteConnectionSource:()Lcom/mongodb/binding/ConnectionSource;
       8: astore_3
       9: aload_3
      10: invokeinterface #104,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.getConnection:()Lcom/mongodb/connection/Connection;
      15: astore        4
      17: goto          34
      20: astore        5
      22: aload_3
      23: ifnull        32
      26: aload_3
      27: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      32: aload_1
      33: athrow
      34: aload_2
      35: aload_3
      36: aload         4
      38: invokeinterface #105,  3          // InterfaceMethod com/mongodb/operation/OperationHelper$CallableWithConnectionAndSource.call:(Lcom/mongodb/binding/ConnectionSource;Lcom/mongodb/connection/Connection;)Ljava/lang/Object;
      43: astore        5
      45: aload_3
      46: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      51: aload         5
      53: areturn
      54: astore        6
      56: aload_3
      57: invokeinterface #101,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.release:()V
      62: aload         6
      64: athrow
    Exception table:
       from    to  target type
           2    17    20   Class java/lang/Throwable
          34    45    54   any
          54    56    54   any

  static <T> T withConnectionSource(com.mongodb.binding.ConnectionSource, com.mongodb.operation.OperationHelper$CallableWithConnection<T>);
    Code:
       0: aload_0
       1: invokeinterface #104,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.getConnection:()Lcom/mongodb/connection/Connection;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokeinterface #106,  2          // InterfaceMethod com/mongodb/operation/OperationHelper$CallableWithConnection.call:(Lcom/mongodb/connection/Connection;)Ljava/lang/Object;
      14: astore_3
      15: aload_2
      16: invokeinterface #107,  1          // InterfaceMethod com/mongodb/connection/Connection.release:()V
      21: aload_3
      22: areturn
      23: astore        4
      25: aload_2
      26: invokeinterface #107,  1          // InterfaceMethod com/mongodb/connection/Connection.release:()V
      31: aload         4
      33: athrow
    Exception table:
       from    to  target type
           7    15    23   any
          23    25    23   any

  static <T> T withConnectionSource(com.mongodb.binding.ConnectionSource, com.mongodb.operation.OperationHelper$CallableWithConnectionAndSource<T>);
    Code:
       0: aload_0
       1: invokeinterface #104,  1          // InterfaceMethod com/mongodb/binding/ConnectionSource.getConnection:()Lcom/mongodb/connection/Connection;
       6: astore_2
       7: aload_1
       8: aload_0
       9: aload_2
      10: invokeinterface #105,  3          // InterfaceMethod com/mongodb/operation/OperationHelper$CallableWithConnectionAndSource.call:(Lcom/mongodb/binding/ConnectionSource;Lcom/mongodb/connection/Connection;)Ljava/lang/Object;
      15: astore_3
      16: aload_2
      17: invokeinterface #107,  1          // InterfaceMethod com/mongodb/connection/Connection.release:()V
      22: aload_3
      23: areturn
      24: astore        4
      26: aload_2
      27: invokeinterface #107,  1          // InterfaceMethod com/mongodb/connection/Connection.release:()V
      32: aload         4
      34: athrow
    Exception table:
       from    to  target type
           7    16    24   any
          24    26    24   any

  static void withConnection(com.mongodb.binding.AsyncWriteBinding, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aload_0
       1: new           #108                // class com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionCallback
       4: dup
       5: aload_1
       6: invokespecial #109                // Method com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionCallback."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
       9: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      12: invokestatic  #110                // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
      15: invokeinterface #111,  2          // InterfaceMethod com/mongodb/binding/AsyncWriteBinding.getWriteConnectionSource:(Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  static void withConnection(com.mongodb.binding.AsyncWriteBinding, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_0
       1: new           #112                // class com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSourceCallback
       4: dup
       5: aload_1
       6: invokespecial #113                // Method com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSourceCallback."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;)V
       9: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      12: invokestatic  #110                // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
      15: invokeinterface #111,  2          // InterfaceMethod com/mongodb/binding/AsyncWriteBinding.getWriteConnectionSource:(Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  static void withConnection(com.mongodb.binding.AsyncReadBinding, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aload_0
       1: new           #108                // class com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionCallback
       4: dup
       5: aload_1
       6: invokespecial #109                // Method com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionCallback."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
       9: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      12: invokestatic  #110                // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
      15: invokeinterface #114,  2          // InterfaceMethod com/mongodb/binding/AsyncReadBinding.getReadConnectionSource:(Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  static void withConnection(com.mongodb.binding.AsyncReadBinding, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_0
       1: new           #112                // class com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSourceCallback
       4: dup
       5: aload_1
       6: invokespecial #113                // Method com/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSourceCallback."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;)V
       9: getstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      12: invokestatic  #110                // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
      15: invokeinterface #114,  2          // InterfaceMethod com/mongodb/binding/AsyncReadBinding.getReadConnectionSource:(Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  private static void withConnectionSource(com.mongodb.binding.AsyncConnectionSource, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aload_0
       1: new           #115                // class com/mongodb/operation/OperationHelper$6
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #116                // Method com/mongodb/operation/OperationHelper$6."<init>":(Lcom/mongodb/binding/AsyncConnectionSource;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      10: invokeinterface #117,  2          // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getConnection:(Lcom/mongodb/async/SingleResultCallback;)V
      15: return

  private static void withConnectionSource(com.mongodb.binding.AsyncConnectionSource, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_0
       1: new           #118                // class com/mongodb/operation/OperationHelper$7
       4: dup
       5: aload_1
       6: aload_0
       7: invokespecial #119                // Method com/mongodb/operation/OperationHelper$7."<init>":(Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;Lcom/mongodb/binding/AsyncConnectionSource;)V
      10: invokeinterface #117,  2          // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getConnection:(Lcom/mongodb/async/SingleResultCallback;)V
      15: return

  private com.mongodb.operation.OperationHelper();
    Code:
       0: aload_0
       1: invokespecial #120                // Method java/lang/Object."<init>":()V
       4: return

  static void access$000(com.mongodb.binding.AsyncConnectionSource, com.mongodb.operation.OperationHelper$AsyncCallableWithConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method withConnectionSource:(Lcom/mongodb/binding/AsyncConnectionSource;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
       5: return

  static void access$100(com.mongodb.binding.AsyncConnectionSource, com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionAndSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method withConnectionSource:(Lcom/mongodb/binding/AsyncConnectionSource;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;)V
       5: return

  static {};
    Code:
       0: ldc           #121                // String operation
       2: invokestatic  #122                // Method com/mongodb/diagnostics/logging/Loggers.getLogger:(Ljava/lang/String;)Lcom/mongodb/diagnostics/logging/Logger;
       5: putstatic     #52                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       8: return
}
