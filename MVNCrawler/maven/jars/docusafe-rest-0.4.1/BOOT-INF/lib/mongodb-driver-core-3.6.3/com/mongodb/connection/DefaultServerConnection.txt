Compiled from "DefaultServerConnection.java"
class com.mongodb.connection.DefaultServerConnection extends com.mongodb.connection.AbstractReferenceCounted implements com.mongodb.connection.Connection,com.mongodb.connection.AsyncConnection {
  private static final com.mongodb.diagnostics.logging.Logger LOGGER;

  private final com.mongodb.connection.InternalConnection wrapped;

  private final com.mongodb.connection.ProtocolExecutor protocolExecutor;

  private final com.mongodb.connection.ClusterConnectionMode clusterConnectionMode;

  com.mongodb.connection.DefaultServerConnection(com.mongodb.connection.InternalConnection, com.mongodb.connection.ProtocolExecutor, com.mongodb.connection.ClusterConnectionMode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/mongodb/connection/AbstractReferenceCounted."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field protocolExecutor:Lcom/mongodb/connection/ProtocolExecutor;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field clusterConnectionMode:Lcom/mongodb/connection/ClusterConnectionMode;
      19: return

  public com.mongodb.connection.DefaultServerConnection retain();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method com/mongodb/connection/AbstractReferenceCounted.retain:()Lcom/mongodb/binding/ReferenceCounted;
       4: pop
       5: aload_0
       6: areturn

  public void release();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method com/mongodb/connection/AbstractReferenceCounted.release:()V
       4: aload_0
       5: invokevirtual #7                  // Method getCount:()I
       8: ifne          20
      11: aload_0
      12: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
      15: invokeinterface #8,  1            // InterfaceMethod com/mongodb/connection/InternalConnection.close:()V
      20: return

  public com.mongodb.connection.ConnectionDescription getDescription();
    Code:
       0: ldc           #9                  // String open
       2: aload_0
       3: invokevirtual #7                  // Method getCount:()I
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
      21: invokeinterface #11,  1           // InterfaceMethod com/mongodb/connection/InternalConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
      26: areturn

  public com.mongodb.WriteConcernResult insert(com.mongodb.MongoNamespace, boolean, com.mongodb.bulk.InsertRequest);
    Code:
       0: aload_0
       1: new           #12                 // class com/mongodb/connection/InsertProtocol
       4: dup
       5: aload_1
       6: iload_2
       7: aload_3
       8: invokespecial #13                 // Method com/mongodb/connection/InsertProtocol."<init>":(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/InsertRequest;)V
      11: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      14: checkcast     #15                 // class com/mongodb/WriteConcernResult
      17: areturn

  public void insertAsync(com.mongodb.MongoNamespace, boolean, com.mongodb.bulk.InsertRequest, com.mongodb.async.SingleResultCallback<com.mongodb.WriteConcernResult>);
    Code:
       0: aload_0
       1: new           #12                 // class com/mongodb/connection/InsertProtocol
       4: dup
       5: aload_1
       6: iload_2
       7: aload_3
       8: invokespecial #13                 // Method com/mongodb/connection/InsertProtocol."<init>":(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/InsertRequest;)V
      11: aload         4
      13: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      16: return

  public com.mongodb.WriteConcernResult update(com.mongodb.MongoNamespace, boolean, com.mongodb.bulk.UpdateRequest);
    Code:
       0: aload_0
       1: new           #17                 // class com/mongodb/connection/UpdateProtocol
       4: dup
       5: aload_1
       6: iload_2
       7: aload_3
       8: invokespecial #18                 // Method com/mongodb/connection/UpdateProtocol."<init>":(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/UpdateRequest;)V
      11: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      14: checkcast     #15                 // class com/mongodb/WriteConcernResult
      17: areturn

  public void updateAsync(com.mongodb.MongoNamespace, boolean, com.mongodb.bulk.UpdateRequest, com.mongodb.async.SingleResultCallback<com.mongodb.WriteConcernResult>);
    Code:
       0: aload_0
       1: new           #17                 // class com/mongodb/connection/UpdateProtocol
       4: dup
       5: aload_1
       6: iload_2
       7: aload_3
       8: invokespecial #18                 // Method com/mongodb/connection/UpdateProtocol."<init>":(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/UpdateRequest;)V
      11: aload         4
      13: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      16: return

  public com.mongodb.WriteConcernResult delete(com.mongodb.MongoNamespace, boolean, com.mongodb.bulk.DeleteRequest);
    Code:
       0: aload_0
       1: new           #19                 // class com/mongodb/connection/DeleteProtocol
       4: dup
       5: aload_1
       6: iload_2
       7: aload_3
       8: invokespecial #20                 // Method com/mongodb/connection/DeleteProtocol."<init>":(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/DeleteRequest;)V
      11: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      14: checkcast     #15                 // class com/mongodb/WriteConcernResult
      17: areturn

  public void deleteAsync(com.mongodb.MongoNamespace, boolean, com.mongodb.bulk.DeleteRequest, com.mongodb.async.SingleResultCallback<com.mongodb.WriteConcernResult>);
    Code:
       0: aload_0
       1: new           #19                 // class com/mongodb/connection/DeleteProtocol
       4: dup
       5: aload_1
       6: iload_2
       7: aload_3
       8: invokespecial #20                 // Method com/mongodb/connection/DeleteProtocol."<init>":(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/DeleteRequest;)V
      11: aload         4
      13: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      16: return

  public <T> T command(java.lang.String, org.bson.BsonDocument, boolean, org.bson.FieldNameValidator, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload_0
       6: iload_3
       7: invokespecial #21                 // Method getReadPreferenceFromSlaveOk:(Z)Lcom/mongodb/ReadPreference;
      10: aload         5
      12: getstatic     #22                 // Field com/mongodb/internal/connection/NoOpSessionContext.INSTANCE:Lcom/mongodb/internal/connection/NoOpSessionContext;
      15: invokevirtual #23                 // Method command:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;)Ljava/lang/Object;
      18: areturn

  public <T> T command(java.lang.String, org.bson.BsonDocument, org.bson.FieldNameValidator, com.mongodb.ReadPreference, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iconst_1
      11: aconst_null
      12: aconst_null
      13: invokevirtual #24                 // Method command:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;)Ljava/lang/Object;
      16: areturn

  public <T> T command(java.lang.String, org.bson.BsonDocument, org.bson.FieldNameValidator, com.mongodb.ReadPreference, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext, boolean, com.mongodb.connection.SplittablePayload, org.bson.FieldNameValidator);
    Code:
       0: aload_0
       1: new           #25                 // class com/mongodb/connection/CommandProtocolImpl
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: iload         7
      14: aload         8
      16: aload         9
      18: aload_0
      19: getfield      #4                  // Field clusterConnectionMode:Lcom/mongodb/connection/ClusterConnectionMode;
      22: invokespecial #26                 // Method com/mongodb/connection/CommandProtocolImpl."<init>":(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;Lcom/mongodb/connection/ClusterConnectionMode;)V
      25: aload         6
      27: invokespecial #27                 // Method executeProtocol:(Lcom/mongodb/connection/CommandProtocol;Lcom/mongodb/session/SessionContext;)Ljava/lang/Object;
      30: areturn

  public <T> void commandAsync(java.lang.String, org.bson.BsonDocument, boolean, org.bson.FieldNameValidator, org.bson.codecs.Decoder<T>, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: aload_0
       6: iload_3
       7: invokespecial #21                 // Method getReadPreferenceFromSlaveOk:(Z)Lcom/mongodb/ReadPreference;
      10: aload         5
      12: getstatic     #22                 // Field com/mongodb/internal/connection/NoOpSessionContext.INSTANCE:Lcom/mongodb/internal/connection/NoOpSessionContext;
      15: aload         6
      17: invokevirtual #28                 // Method commandAsync:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  public <T> void commandAsync(java.lang.String, org.bson.BsonDocument, org.bson.FieldNameValidator, com.mongodb.ReadPreference, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iconst_1
      11: aconst_null
      12: aconst_null
      13: aload         7
      15: invokevirtual #29                 // Method commandAsync:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;Lcom/mongodb/async/SingleResultCallback;)V
      18: return

  public <T> void commandAsync(java.lang.String, org.bson.BsonDocument, org.bson.FieldNameValidator, com.mongodb.ReadPreference, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext, boolean, com.mongodb.connection.SplittablePayload, org.bson.FieldNameValidator, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: aload_0
       1: new           #25                 // class com/mongodb/connection/CommandProtocolImpl
       4: dup
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: iload         7
      14: aload         8
      16: aload         9
      18: aload_0
      19: getfield      #4                  // Field clusterConnectionMode:Lcom/mongodb/connection/ClusterConnectionMode;
      22: invokespecial #26                 // Method com/mongodb/connection/CommandProtocolImpl."<init>":(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;Lcom/mongodb/connection/ClusterConnectionMode;)V
      25: aload         6
      27: aload         10
      29: invokespecial #30                 // Method executeProtocolAsync:(Lcom/mongodb/connection/CommandProtocol;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;)V
      32: return

  public <T> com.mongodb.connection.QueryResult<T> query(com.mongodb.MongoNamespace, org.bson.BsonDocument, org.bson.BsonDocument, int, int, boolean, boolean, boolean, boolean, boolean, boolean, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: new           #31                 // class com/mongodb/connection/QueryProtocol
       4: dup
       5: aload_1
       6: iload         5
       8: iload         4
      10: aload_2
      11: aload_3
      12: aload         12
      14: invokespecial #32                 // Method com/mongodb/connection/QueryProtocol."<init>":(Lcom/mongodb/MongoNamespace;IILorg/bson/BsonDocument;Lorg/bson/BsonDocument;Lorg/bson/codecs/Decoder;)V
      17: iload         7
      19: invokevirtual #33                 // Method com/mongodb/connection/QueryProtocol.tailableCursor:(Z)Lcom/mongodb/connection/QueryProtocol;
      22: aload_0
      23: iload         6
      25: invokespecial #34                 // Method getSlaveOk:(Z)Z
      28: invokevirtual #35                 // Method com/mongodb/connection/QueryProtocol.slaveOk:(Z)Lcom/mongodb/connection/QueryProtocol;
      31: iload         11
      33: invokevirtual #36                 // Method com/mongodb/connection/QueryProtocol.oplogReplay:(Z)Lcom/mongodb/connection/QueryProtocol;
      36: iload         9
      38: invokevirtual #37                 // Method com/mongodb/connection/QueryProtocol.noCursorTimeout:(Z)Lcom/mongodb/connection/QueryProtocol;
      41: iload         8
      43: invokevirtual #38                 // Method com/mongodb/connection/QueryProtocol.awaitData:(Z)Lcom/mongodb/connection/QueryProtocol;
      46: iload         10
      48: invokevirtual #39                 // Method com/mongodb/connection/QueryProtocol.partial:(Z)Lcom/mongodb/connection/QueryProtocol;
      51: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      54: checkcast     #40                 // class com/mongodb/connection/QueryResult
      57: areturn

  public <T> com.mongodb.connection.QueryResult<T> query(com.mongodb.MongoNamespace, org.bson.BsonDocument, org.bson.BsonDocument, int, int, int, boolean, boolean, boolean, boolean, boolean, boolean, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: new           #31                 // class com/mongodb/connection/QueryProtocol
       4: dup
       5: aload_1
       6: iload         4
       8: iload         5
      10: iload         6
      12: aload_2
      13: aload_3
      14: aload         13
      16: invokespecial #41                 // Method com/mongodb/connection/QueryProtocol."<init>":(Lcom/mongodb/MongoNamespace;IIILorg/bson/BsonDocument;Lorg/bson/BsonDocument;Lorg/bson/codecs/Decoder;)V
      19: iload         8
      21: invokevirtual #33                 // Method com/mongodb/connection/QueryProtocol.tailableCursor:(Z)Lcom/mongodb/connection/QueryProtocol;
      24: aload_0
      25: iload         7
      27: invokespecial #34                 // Method getSlaveOk:(Z)Z
      30: invokevirtual #35                 // Method com/mongodb/connection/QueryProtocol.slaveOk:(Z)Lcom/mongodb/connection/QueryProtocol;
      33: iload         12
      35: invokevirtual #36                 // Method com/mongodb/connection/QueryProtocol.oplogReplay:(Z)Lcom/mongodb/connection/QueryProtocol;
      38: iload         10
      40: invokevirtual #37                 // Method com/mongodb/connection/QueryProtocol.noCursorTimeout:(Z)Lcom/mongodb/connection/QueryProtocol;
      43: iload         9
      45: invokevirtual #38                 // Method com/mongodb/connection/QueryProtocol.awaitData:(Z)Lcom/mongodb/connection/QueryProtocol;
      48: iload         11
      50: invokevirtual #39                 // Method com/mongodb/connection/QueryProtocol.partial:(Z)Lcom/mongodb/connection/QueryProtocol;
      53: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      56: checkcast     #40                 // class com/mongodb/connection/QueryResult
      59: areturn

  public <T> void queryAsync(com.mongodb.MongoNamespace, org.bson.BsonDocument, org.bson.BsonDocument, int, int, boolean, boolean, boolean, boolean, boolean, boolean, org.bson.codecs.Decoder<T>, com.mongodb.async.SingleResultCallback<com.mongodb.connection.QueryResult<T>>);
    Code:
       0: aload_0
       1: new           #31                 // class com/mongodb/connection/QueryProtocol
       4: dup
       5: aload_1
       6: iload         5
       8: iload         4
      10: aload_2
      11: aload_3
      12: aload         12
      14: invokespecial #32                 // Method com/mongodb/connection/QueryProtocol."<init>":(Lcom/mongodb/MongoNamespace;IILorg/bson/BsonDocument;Lorg/bson/BsonDocument;Lorg/bson/codecs/Decoder;)V
      17: iload         7
      19: invokevirtual #33                 // Method com/mongodb/connection/QueryProtocol.tailableCursor:(Z)Lcom/mongodb/connection/QueryProtocol;
      22: aload_0
      23: iload         6
      25: invokespecial #34                 // Method getSlaveOk:(Z)Z
      28: invokevirtual #35                 // Method com/mongodb/connection/QueryProtocol.slaveOk:(Z)Lcom/mongodb/connection/QueryProtocol;
      31: iload         11
      33: invokevirtual #36                 // Method com/mongodb/connection/QueryProtocol.oplogReplay:(Z)Lcom/mongodb/connection/QueryProtocol;
      36: iload         9
      38: invokevirtual #37                 // Method com/mongodb/connection/QueryProtocol.noCursorTimeout:(Z)Lcom/mongodb/connection/QueryProtocol;
      41: iload         8
      43: invokevirtual #38                 // Method com/mongodb/connection/QueryProtocol.awaitData:(Z)Lcom/mongodb/connection/QueryProtocol;
      46: iload         10
      48: invokevirtual #39                 // Method com/mongodb/connection/QueryProtocol.partial:(Z)Lcom/mongodb/connection/QueryProtocol;
      51: aload         13
      53: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      56: return

  public <T> void queryAsync(com.mongodb.MongoNamespace, org.bson.BsonDocument, org.bson.BsonDocument, int, int, int, boolean, boolean, boolean, boolean, boolean, boolean, org.bson.codecs.Decoder<T>, com.mongodb.async.SingleResultCallback<com.mongodb.connection.QueryResult<T>>);
    Code:
       0: aload_0
       1: new           #31                 // class com/mongodb/connection/QueryProtocol
       4: dup
       5: aload_1
       6: iload         4
       8: iload         5
      10: iload         6
      12: aload_2
      13: aload_3
      14: aload         13
      16: invokespecial #41                 // Method com/mongodb/connection/QueryProtocol."<init>":(Lcom/mongodb/MongoNamespace;IIILorg/bson/BsonDocument;Lorg/bson/BsonDocument;Lorg/bson/codecs/Decoder;)V
      19: iload         8
      21: invokevirtual #33                 // Method com/mongodb/connection/QueryProtocol.tailableCursor:(Z)Lcom/mongodb/connection/QueryProtocol;
      24: aload_0
      25: iload         7
      27: invokespecial #34                 // Method getSlaveOk:(Z)Z
      30: invokevirtual #35                 // Method com/mongodb/connection/QueryProtocol.slaveOk:(Z)Lcom/mongodb/connection/QueryProtocol;
      33: iload         12
      35: invokevirtual #36                 // Method com/mongodb/connection/QueryProtocol.oplogReplay:(Z)Lcom/mongodb/connection/QueryProtocol;
      38: iload         10
      40: invokevirtual #37                 // Method com/mongodb/connection/QueryProtocol.noCursorTimeout:(Z)Lcom/mongodb/connection/QueryProtocol;
      43: iload         9
      45: invokevirtual #38                 // Method com/mongodb/connection/QueryProtocol.awaitData:(Z)Lcom/mongodb/connection/QueryProtocol;
      48: iload         11
      50: invokevirtual #39                 // Method com/mongodb/connection/QueryProtocol.partial:(Z)Lcom/mongodb/connection/QueryProtocol;
      53: aload         14
      55: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      58: return

  public <T> com.mongodb.connection.QueryResult<T> getMore(com.mongodb.MongoNamespace, long, int, org.bson.codecs.Decoder<T>);
    Code:
       0: aload_0
       1: new           #42                 // class com/mongodb/connection/GetMoreProtocol
       4: dup
       5: aload_1
       6: lload_2
       7: iload         4
       9: aload         5
      11: invokespecial #43                 // Method com/mongodb/connection/GetMoreProtocol."<init>":(Lcom/mongodb/MongoNamespace;JILorg/bson/codecs/Decoder;)V
      14: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      17: checkcast     #40                 // class com/mongodb/connection/QueryResult
      20: areturn

  public <T> void getMoreAsync(com.mongodb.MongoNamespace, long, int, org.bson.codecs.Decoder<T>, com.mongodb.async.SingleResultCallback<com.mongodb.connection.QueryResult<T>>);
    Code:
       0: aload_0
       1: new           #42                 // class com/mongodb/connection/GetMoreProtocol
       4: dup
       5: aload_1
       6: lload_2
       7: iload         4
       9: aload         5
      11: invokespecial #43                 // Method com/mongodb/connection/GetMoreProtocol."<init>":(Lcom/mongodb/MongoNamespace;JILorg/bson/codecs/Decoder;)V
      14: aload         6
      16: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      19: return

  public void killCursor(java.util.List<java.lang.Long>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #44                 // Method killCursor:(Lcom/mongodb/MongoNamespace;Ljava/util/List;)V
       6: return

  public void killCursor(com.mongodb.MongoNamespace, java.util.List<java.lang.Long>);
    Code:
       0: aload_0
       1: new           #45                 // class com/mongodb/connection/KillCursorProtocol
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #46                 // Method com/mongodb/connection/KillCursorProtocol."<init>":(Lcom/mongodb/MongoNamespace;Ljava/util/List;)V
      10: invokespecial #14                 // Method executeProtocol:(Lcom/mongodb/connection/LegacyProtocol;)Ljava/lang/Object;
      13: pop
      14: return

  public void killCursorAsync(java.util.List<java.lang.Long>, com.mongodb.async.SingleResultCallback<java.lang.Void>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokevirtual #47                 // Method killCursorAsync:(Lcom/mongodb/MongoNamespace;Ljava/util/List;Lcom/mongodb/async/SingleResultCallback;)V
       7: return

  public void killCursorAsync(com.mongodb.MongoNamespace, java.util.List<java.lang.Long>, com.mongodb.async.SingleResultCallback<java.lang.Void>);
    Code:
       0: aload_0
       1: new           #45                 // class com/mongodb/connection/KillCursorProtocol
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #46                 // Method com/mongodb/connection/KillCursorProtocol."<init>":(Lcom/mongodb/MongoNamespace;Ljava/util/List;)V
      10: aload_3
      11: invokespecial #16                 // Method executeProtocolAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/async/SingleResultCallback;)V
      14: return

  private com.mongodb.ReadPreference getReadPreferenceFromSlaveOk(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #34                 // Method getSlaveOk:(Z)Z
       5: ifeq          14
       8: invokestatic  #48                 // Method com/mongodb/ReadPreference.secondaryPreferred:()Lcom/mongodb/ReadPreference;
      11: goto          17
      14: invokestatic  #49                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      17: areturn

  private boolean getSlaveOk(boolean);
    Code:
       0: iload_1
       1: ifne          32
       4: aload_0
       5: getfield      #4                  // Field clusterConnectionMode:Lcom/mongodb/connection/ClusterConnectionMode;
       8: getstatic     #50                 // Field com/mongodb/connection/ClusterConnectionMode.SINGLE:Lcom/mongodb/connection/ClusterConnectionMode;
      11: if_acmpne     36
      14: aload_0
      15: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
      18: invokeinterface #11,  1           // InterfaceMethod com/mongodb/connection/InternalConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
      23: invokevirtual #51                 // Method com/mongodb/connection/ConnectionDescription.getServerType:()Lcom/mongodb/connection/ServerType;
      26: getstatic     #52                 // Field com/mongodb/connection/ServerType.SHARD_ROUTER:Lcom/mongodb/connection/ServerType;
      29: if_acmpeq     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  private <T> T executeProtocol(com.mongodb.connection.LegacyProtocol<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field protocolExecutor:Lcom/mongodb/connection/ProtocolExecutor;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
       9: invokeinterface #53,  3           // InterfaceMethod com/mongodb/connection/ProtocolExecutor.execute:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/connection/InternalConnection;)Ljava/lang/Object;
      14: areturn

  private <T> T executeProtocol(com.mongodb.connection.CommandProtocol<T>, com.mongodb.session.SessionContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field protocolExecutor:Lcom/mongodb/connection/ProtocolExecutor;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
       9: aload_2
      10: invokeinterface #54,  4           // InterfaceMethod com/mongodb/connection/ProtocolExecutor.execute:(Lcom/mongodb/connection/CommandProtocol;Lcom/mongodb/connection/InternalConnection;Lcom/mongodb/session/SessionContext;)Ljava/lang/Object;
      15: areturn

  private <T> void executeProtocolAsync(com.mongodb.connection.LegacyProtocol<T>, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: aload_2
       1: getstatic     #55                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       4: invokestatic  #56                 // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
       7: astore_3
       8: aload_0
       9: getfield      #3                  // Field protocolExecutor:Lcom/mongodb/connection/ProtocolExecutor;
      12: aload_1
      13: aload_0
      14: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
      17: aload_3
      18: invokeinterface #57,  4           // InterfaceMethod com/mongodb/connection/ProtocolExecutor.executeAsync:(Lcom/mongodb/connection/LegacyProtocol;Lcom/mongodb/connection/InternalConnection;Lcom/mongodb/async/SingleResultCallback;)V
      23: goto          37
      26: astore        4
      28: aload_3
      29: aconst_null
      30: aload         4
      32: invokeinterface #59,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      37: return
    Exception table:
       from    to  target type
           8    23    26   Class java/lang/Throwable

  private <T> void executeProtocolAsync(com.mongodb.connection.CommandProtocol<T>, com.mongodb.session.SessionContext, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: aload_3
       1: getstatic     #55                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       4: invokestatic  #56                 // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
       7: astore        4
       9: aload_0
      10: getfield      #3                  // Field protocolExecutor:Lcom/mongodb/connection/ProtocolExecutor;
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field wrapped:Lcom/mongodb/connection/InternalConnection;
      18: aload_2
      19: aload         4
      21: invokeinterface #60,  5           // InterfaceMethod com/mongodb/connection/ProtocolExecutor.executeAsync:(Lcom/mongodb/connection/CommandProtocol;Lcom/mongodb/connection/InternalConnection;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;)V
      26: goto          41
      29: astore        5
      31: aload         4
      33: aconst_null
      34: aload         5
      36: invokeinterface #59,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return
    Exception table:
       from    to  target type
           9    26    29   Class java/lang/Throwable

  public com.mongodb.binding.ReferenceCounted retain();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method retain:()Lcom/mongodb/connection/DefaultServerConnection;
       4: areturn

  public com.mongodb.connection.Connection retain();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method retain:()Lcom/mongodb/connection/DefaultServerConnection;
       4: areturn

  public com.mongodb.connection.AsyncConnection retain();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method retain:()Lcom/mongodb/connection/DefaultServerConnection;
       4: areturn

  static {};
    Code:
       0: ldc           #62                 // String connection
       2: invokestatic  #63                 // Method com/mongodb/diagnostics/logging/Loggers.getLogger:(Ljava/lang/String;)Lcom/mongodb/diagnostics/logging/Logger;
       5: putstatic     #55                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       8: return
}
