Compiled from "InternalStreamConnection.java"
class com.mongodb.connection.InternalStreamConnection implements com.mongodb.connection.InternalConnection {
  private static final java.util.Set<java.lang.String> SECURITY_SENSITIVE_COMMANDS;

  private static final com.mongodb.diagnostics.logging.Logger LOGGER;

  private final com.mongodb.connection.ServerId serverId;

  private final com.mongodb.connection.StreamFactory streamFactory;

  private final com.mongodb.connection.InternalConnectionInitializer connectionInitializer;

  private volatile com.mongodb.connection.ConnectionDescription description;

  private volatile com.mongodb.connection.Stream stream;

  private final java.util.concurrent.atomic.AtomicBoolean isClosed;

  private final java.util.concurrent.atomic.AtomicBoolean opened;

  private final java.util.List<com.mongodb.MongoCompressor> compressorList;

  private final com.mongodb.event.CommandListener commandListener;

  private volatile com.mongodb.connection.Compressor sendCompressor;

  private volatile java.util.Map<java.lang.Byte, com.mongodb.connection.Compressor> compressorMap;

  com.mongodb.connection.InternalStreamConnection(com.mongodb.connection.ServerId, com.mongodb.connection.StreamFactory, java.util.List<com.mongodb.MongoCompressor>, com.mongodb.event.CommandListener, com.mongodb.connection.InternalConnectionInitializer);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #21                 // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #19                 // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #16                 // Field opened:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: ldc           #22                 // String serverId
      29: aload_1
      30: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #24                 // class com/mongodb/connection/ServerId
      36: putfield      #11                 // Field serverId:Lcom/mongodb/connection/ServerId;
      39: aload_0
      40: ldc           #25                 // String streamFactory
      42: aload_2
      43: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #26                 // class com/mongodb/connection/StreamFactory
      49: putfield      #27                 // Field streamFactory:Lcom/mongodb/connection/StreamFactory;
      52: aload_0
      53: ldc           #28                 // String compressorList
      55: aload_3
      56: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #29                 // class java/util/List
      62: putfield      #30                 // Field compressorList:Ljava/util/List;
      65: aload_0
      66: aload_0
      67: aload_3
      68: invokespecial #31                 // Method createCompressorMap:(Ljava/util/List;)Ljava/util/Map;
      71: putfield      #32                 // Field compressorMap:Ljava/util/Map;
      74: aload_0
      75: aload         4
      77: putfield      #3                  // Field commandListener:Lcom/mongodb/event/CommandListener;
      80: aload_0
      81: ldc           #33                 // String connectionInitializer
      83: aload         5
      85: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      88: checkcast     #34                 // class com/mongodb/connection/InternalConnectionInitializer
      91: putfield      #10                 // Field connectionInitializer:Lcom/mongodb/connection/InternalConnectionInitializer;
      94: aload_0
      95: new           #35                 // class com/mongodb/connection/ConnectionDescription
      98: dup
      99: aload_1
     100: invokespecial #36                 // Method com/mongodb/connection/ConnectionDescription."<init>":(Lcom/mongodb/connection/ServerId;)V
     103: putfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
     106: return

  public com.mongodb.connection.ConnectionDescription getDescription();
    Code:
       0: aload_0
       1: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
       4: areturn

  public void open();
    Code:
       0: ldc           #37                 // String Open already called
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #39                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      17: aload_0
      18: aload_0
      19: getfield      #27                 // Field streamFactory:Lcom/mongodb/connection/StreamFactory;
      22: aload_0
      23: getfield      #11                 // Field serverId:Lcom/mongodb/connection/ServerId;
      26: invokevirtual #40                 // Method com/mongodb/connection/ServerId.getAddress:()Lcom/mongodb/ServerAddress;
      29: invokeinterface #41,  2           // InterfaceMethod com/mongodb/connection/StreamFactory.create:(Lcom/mongodb/ServerAddress;)Lcom/mongodb/connection/Stream;
      34: putfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      37: aload_0
      38: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      41: invokeinterface #42,  1           // InterfaceMethod com/mongodb/connection/Stream.open:()V
      46: aload_0
      47: aload_0
      48: getfield      #10                 // Field connectionInitializer:Lcom/mongodb/connection/InternalConnectionInitializer;
      51: aload_0
      52: invokeinterface #43,  2           // InterfaceMethod com/mongodb/connection/InternalConnectionInitializer.initialize:(Lcom/mongodb/connection/InternalConnection;)Lcom/mongodb/connection/ConnectionDescription;
      57: putfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
      60: aload_0
      61: getfield      #16                 // Field opened:Ljava/util/concurrent/atomic/AtomicBoolean;
      64: iconst_1
      65: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      68: aload_0
      69: aload_0
      70: aload_0
      71: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
      74: invokespecial #14                 // Method findSendCompressor:(Lcom/mongodb/connection/ConnectionDescription;)Lcom/mongodb/connection/Compressor;
      77: putfield      #15                 // Field sendCompressor:Lcom/mongodb/connection/Compressor;
      80: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      83: ldc           #45                 // String Opened connection [%s] to %s
      85: iconst_2
      86: anewarray     #46                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: invokespecial #12                 // Method getId:()Lcom/mongodb/connection/ConnectionId;
      95: aastore
      96: dup
      97: iconst_1
      98: aload_0
      99: getfield      #11                 // Field serverId:Lcom/mongodb/connection/ServerId;
     102: invokevirtual #40                 // Method com/mongodb/connection/ServerId.getAddress:()Lcom/mongodb/ServerAddress;
     105: aastore
     106: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     109: invokeinterface #48,  2           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.info:(Ljava/lang/String;)V
     114: goto          147
     117: astore_1
     118: aload_0
     119: invokevirtual #50                 // Method close:()V
     122: aload_1
     123: instanceof    #51                 // class com/mongodb/MongoException
     126: ifeq          134
     129: aload_1
     130: checkcast     #51                 // class com/mongodb/MongoException
     133: athrow
     134: new           #51                 // class com/mongodb/MongoException
     137: dup
     138: aload_1
     139: invokevirtual #52                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
     142: aload_1
     143: invokespecial #53                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     146: athrow
     147: return
    Exception table:
       from    to  target type
          37   114   117   Class java/lang/Throwable

  public void openAsync(com.mongodb.async.SingleResultCallback<java.lang.Void>);
    Code:
       0: ldc           #37                 // String Open already called
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: ifnonnull     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: aload_1
      15: invokestatic  #54                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;ZLcom/mongodb/async/SingleResultCallback;)V
      18: aload_0
      19: aload_0
      20: getfield      #27                 // Field streamFactory:Lcom/mongodb/connection/StreamFactory;
      23: aload_0
      24: getfield      #11                 // Field serverId:Lcom/mongodb/connection/ServerId;
      27: invokevirtual #40                 // Method com/mongodb/connection/ServerId.getAddress:()Lcom/mongodb/ServerAddress;
      30: invokeinterface #41,  2           // InterfaceMethod com/mongodb/connection/StreamFactory.create:(Lcom/mongodb/ServerAddress;)Lcom/mongodb/connection/Stream;
      35: putfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      38: goto          51
      41: astore_2
      42: aload_1
      43: aconst_null
      44: aload_2
      45: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      50: return
      51: aload_0
      52: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      55: new           #56                 // class com/mongodb/connection/InternalStreamConnection$1
      58: dup
      59: aload_0
      60: aload_1
      61: invokespecial #57                 // Method com/mongodb/connection/InternalStreamConnection$1."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/async/SingleResultCallback;)V
      64: invokeinterface #58,  2           // InterfaceMethod com/mongodb/connection/Stream.openAsync:(Lcom/mongodb/connection/AsyncCompletionHandler;)V
      69: return
    Exception table:
       from    to  target type
          18    38    41   Class java/lang/Throwable

  private java.util.Map<java.lang.Byte, com.mongodb.connection.Compressor> createCompressorMap(java.util.List<com.mongodb.MongoCompressor>);
    Code:
       0: new           #59                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #30                 // Field compressorList:Ljava/util/List;
       8: invokeinterface #60,  1           // InterfaceMethod java/util/List.size:()I
      13: invokespecial #61                 // Method java/util/HashMap."<init>":(I)V
      16: astore_2
      17: aload_1
      18: invokeinterface #62,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          72
      33: aload_3
      34: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #65                 // class com/mongodb/MongoCompressor
      42: astore        4
      44: aload_0
      45: aload         4
      47: invokespecial #66                 // Method createCompressor:(Lcom/mongodb/MongoCompressor;)Lcom/mongodb/connection/Compressor;
      50: astore        5
      52: aload_2
      53: aload         5
      55: invokevirtual #67                 // Method com/mongodb/connection/Compressor.getId:()B
      58: invokestatic  #68                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      61: aload         5
      63: invokeinterface #69,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          24
      72: aload_2
      73: areturn

  private com.mongodb.connection.Compressor findSendCompressor(com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_1
       1: invokevirtual #70                 // Method com/mongodb/connection/ConnectionDescription.getCompressors:()Ljava/util/List;
       4: invokeinterface #71,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_1
      15: invokevirtual #70                 // Method com/mongodb/connection/ConnectionDescription.getCompressors:()Ljava/util/List;
      18: iconst_0
      19: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      24: checkcast     #73                 // class java/lang/String
      27: astore_2
      28: aload_0
      29: getfield      #32                 // Field compressorMap:Ljava/util/Map;
      32: invokeinterface #74,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      37: invokeinterface #75,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      42: astore_3
      43: aload_3
      44: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          81
      52: aload_3
      53: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #76                 // class com/mongodb/connection/Compressor
      61: astore        4
      63: aload         4
      65: invokevirtual #77                 // Method com/mongodb/connection/Compressor.getName:()Ljava/lang/String;
      68: aload_2
      69: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          78
      75: aload         4
      77: areturn
      78: goto          43
      81: new           #79                 // class com/mongodb/MongoInternalException
      84: dup
      85: new           #80                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #82                 // String Unexpected compressor negotiated:
      94: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_2
      98: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #85                 // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;)V
     107: athrow

  private com.mongodb.connection.Compressor createCompressor(com.mongodb.MongoCompressor);
    Code:
       0: aload_1
       1: invokevirtual #86                 // Method com/mongodb/MongoCompressor.getName:()Ljava/lang/String;
       4: ldc           #87                 // String zlib
       6: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          21
      12: new           #88                 // class com/mongodb/connection/ZlibCompressor
      15: dup
      16: aload_1
      17: invokespecial #89                 // Method com/mongodb/connection/ZlibCompressor."<init>":(Lcom/mongodb/MongoCompressor;)V
      20: areturn
      21: aload_1
      22: invokevirtual #86                 // Method com/mongodb/MongoCompressor.getName:()Ljava/lang/String;
      25: ldc           #90                 // String snappy
      27: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          41
      33: new           #91                 // class com/mongodb/connection/SnappyCompressor
      36: dup
      37: invokespecial #92                 // Method com/mongodb/connection/SnappyCompressor."<init>":()V
      40: areturn
      41: new           #93                 // class com/mongodb/MongoClientException
      44: dup
      45: new           #80                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #94                 // String Unsupported compressor
      54: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokevirtual #86                 // Method com/mongodb/MongoCompressor.getName:()Ljava/lang/String;
      61: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #95                 // Method com/mongodb/MongoClientException."<init>":(Ljava/lang/String;)V
      70: athrow

  public void close();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #96                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifne          62
      11: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      14: invokeinterface #97,  1           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.isDebugEnabled:()Z
      19: ifeq          46
      22: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      25: ldc           #98                 // String Closing connection %s
      27: iconst_1
      28: anewarray     #46                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_0
      34: invokespecial #12                 // Method getId:()Lcom/mongodb/connection/ConnectionId;
      37: aastore
      38: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      41: invokeinterface #99,  2           // InterfaceMethod com/mongodb/diagnostics/logging/Logger.debug:(Ljava/lang/String;)V
      46: aload_0
      47: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      50: ifnull        62
      53: aload_0
      54: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      57: invokeinterface #100,  1          // InterfaceMethod com/mongodb/connection/Stream.close:()V
      62: return

  public boolean opened();
    Code:
       0: aload_0
       1: getfield      #16                 // Field opened:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #101                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #21                 // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #101                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public <T> T sendAndReceive(com.mongodb.connection.CommandMessage, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext);
    Code:
       0: new           #102                // class com/mongodb/connection/ByteBufferBsonOutput
       3: dup
       4: aload_0
       5: invokespecial #103                // Method com/mongodb/connection/ByteBufferBsonOutput."<init>":(Lcom/mongodb/connection/BufferProvider;)V
       8: astore        4
      10: new           #104                // class com/mongodb/connection/InternalStreamConnection$LazyCommandDocument
      13: dup
      14: aload_1
      15: aload         4
      17: aconst_null
      18: invokespecial #105                // Method com/mongodb/connection/InternalStreamConnection$LazyCommandDocument."<init>":(Lcom/mongodb/connection/CommandMessage;Lcom/mongodb/connection/ByteBufferBsonOutput;Lcom/mongodb/connection/InternalStreamConnection$1;)V
      21: astore        5
      23: new           #106                // class com/mongodb/connection/InternalStreamConnection$CommandEventSender
      26: dup
      27: aload_0
      28: aload_1
      29: aload         5
      31: invokespecial #107                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/connection/CommandMessage;Lcom/mongodb/connection/InternalStreamConnection$LazyCommandDocument;)V
      34: astore        6
      36: aload_1
      37: aload         4
      39: aload_3
      40: invokevirtual #108                // Method com/mongodb/connection/CommandMessage.encode:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)V
      43: aload         6
      45: invokevirtual #109                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender.sendStartedEvent:()V
      48: goto          61
      51: astore        7
      53: aload         4
      55: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
      58: aload         7
      60: athrow
      61: aload_0
      62: aload_1
      63: aload         5
      65: aload         4
      67: aload_3
      68: invokespecial #112                // Method sendCommandMessage:(Lcom/mongodb/connection/CommandMessage;Lcom/mongodb/connection/InternalStreamConnection$LazyCommandDocument;Lcom/mongodb/connection/ByteBufferBsonOutput;Lcom/mongodb/session/SessionContext;)V
      71: aload_1
      72: invokevirtual #113                // Method com/mongodb/connection/CommandMessage.isResponseExpected:()Z
      75: ifeq          88
      78: aload_0
      79: aload_1
      80: aload_2
      81: aload         6
      83: aload_3
      84: invokespecial #114                // Method receiveCommandMessageResponse:(Lcom/mongodb/connection/CommandMessage;Lorg/bson/codecs/Decoder;Lcom/mongodb/connection/InternalStreamConnection$CommandEventSender;Lcom/mongodb/session/SessionContext;)Ljava/lang/Object;
      87: areturn
      88: aload         6
      90: invokevirtual #115                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender.sendSucceededEventForOneWayCommand:()V
      93: aconst_null
      94: areturn
      95: astore        7
      97: aload         6
      99: aload         7
     101: invokevirtual #116                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender.sendFailedEvent:(Ljava/lang/Throwable;)V
     104: aload         7
     106: athrow
    Exception table:
       from    to  target type
          36    48    51   Class java/lang/RuntimeException
          61    87    95   Class java/lang/RuntimeException
          88    94    95   Class java/lang/RuntimeException

  private void sendCommandMessage(com.mongodb.connection.CommandMessage, com.mongodb.connection.InternalStreamConnection$LazyCommandDocument, com.mongodb.connection.ByteBufferBsonOutput, com.mongodb.session.SessionContext);
    Code:
       0: aload_0
       1: getfield      #15                 // Field sendCompressor:Lcom/mongodb/connection/Compressor;
       4: ifnull        22
       7: getstatic     #2                  // Field SECURITY_SENSITIVE_COMMANDS:Ljava/util/Set;
      10: aload_2
      11: invokevirtual #117                // Method com/mongodb/connection/InternalStreamConnection$LazyCommandDocument.getName:()Ljava/lang/String;
      14: invokeinterface #118,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      19: ifeq          37
      22: aload_0
      23: aload_3
      24: invokevirtual #119                // Method com/mongodb/connection/ByteBufferBsonOutput.getByteBuffers:()Ljava/util/List;
      27: aload_1
      28: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
      31: invokevirtual #121                // Method sendMessage:(Ljava/util/List;I)V
      34: goto          115
      37: new           #122                // class com/mongodb/connection/CompressedMessage
      40: dup
      41: aload_1
      42: invokevirtual #123                // Method com/mongodb/connection/CommandMessage.getOpCode:()Lcom/mongodb/connection/OpCode;
      45: aload_3
      46: invokevirtual #119                // Method com/mongodb/connection/ByteBufferBsonOutput.getByteBuffers:()Ljava/util/List;
      49: aload_0
      50: getfield      #15                 // Field sendCompressor:Lcom/mongodb/connection/Compressor;
      53: aload_0
      54: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
      57: invokestatic  #124                // Method com/mongodb/connection/ProtocolHelper.getMessageSettings:(Lcom/mongodb/connection/ConnectionDescription;)Lcom/mongodb/connection/MessageSettings;
      60: invokespecial #125                // Method com/mongodb/connection/CompressedMessage."<init>":(Lcom/mongodb/connection/OpCode;Ljava/util/List;Lcom/mongodb/connection/Compressor;Lcom/mongodb/connection/MessageSettings;)V
      63: astore        5
      65: new           #102                // class com/mongodb/connection/ByteBufferBsonOutput
      68: dup
      69: aload_0
      70: invokespecial #103                // Method com/mongodb/connection/ByteBufferBsonOutput."<init>":(Lcom/mongodb/connection/BufferProvider;)V
      73: astore        6
      75: aload         5
      77: aload         6
      79: aload         4
      81: invokevirtual #126                // Method com/mongodb/connection/CompressedMessage.encode:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)V
      84: aload_0
      85: aload         6
      87: invokevirtual #119                // Method com/mongodb/connection/ByteBufferBsonOutput.getByteBuffers:()Ljava/util/List;
      90: aload_1
      91: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
      94: invokevirtual #121                // Method sendMessage:(Ljava/util/List;I)V
      97: aload         6
      99: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     102: goto          115
     105: astore        7
     107: aload         6
     109: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     112: aload         7
     114: athrow
     115: aload_3
     116: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     119: goto          131
     122: astore        8
     124: aload_3
     125: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     128: aload         8
     130: athrow
     131: return
    Exception table:
       from    to  target type
          84    97   105   any
         105   107   105   any
           0   115   122   any
         122   124   122   any

  private <T> T receiveCommandMessageResponse(com.mongodb.connection.CommandMessage, org.bson.codecs.Decoder<T>, com.mongodb.connection.InternalStreamConnection$CommandEventSender, com.mongodb.session.SessionContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
       5: invokevirtual #127                // Method receiveMessage:(I)Lcom/mongodb/connection/ResponseBuffers;
       8: astore        5
      10: aload_0
      11: aload         4
      13: aload         5
      15: invokespecial #9                  // Method updateSessionContext:(Lcom/mongodb/session/SessionContext;Lcom/mongodb/connection/ResponseBuffers;)V
      18: aload         5
      20: invokestatic  #128                // Method com/mongodb/connection/ProtocolHelper.isCommandOk:(Lcom/mongodb/connection/ResponseBuffers;)Z
      23: ifne          53
      26: aload         5
      28: aload_1
      29: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
      32: new           #129                // class org/bson/codecs/BsonDocumentCodec
      35: dup
      36: invokespecial #130                // Method org/bson/codecs/BsonDocumentCodec."<init>":()V
      39: invokestatic  #8                  // Method getResponseDocument:(Lcom/mongodb/connection/ResponseBuffers;ILorg/bson/codecs/Decoder;)Lorg/bson/BsonDocument;
      42: aload_0
      43: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
      46: invokevirtual #131                // Method com/mongodb/connection/ConnectionDescription.getServerAddress:()Lcom/mongodb/ServerAddress;
      49: invokestatic  #132                // Method com/mongodb/connection/ProtocolHelper.getCommandFailureException:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;)Lcom/mongodb/MongoException;
      52: athrow
      53: aload_3
      54: aload         5
      56: invokevirtual #133                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender.sendSucceededEvent:(Lcom/mongodb/connection/ResponseBuffers;)V
      59: new           #134                // class com/mongodb/connection/ReplyMessage
      62: dup
      63: aload         5
      65: aload_2
      66: aload_1
      67: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
      70: i2l
      71: invokespecial #135                // Method com/mongodb/connection/ReplyMessage."<init>":(Lcom/mongodb/connection/ResponseBuffers;Lorg/bson/codecs/Decoder;J)V
      74: invokevirtual #136                // Method com/mongodb/connection/ReplyMessage.getDocuments:()Ljava/util/List;
      77: iconst_0
      78: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      83: astore        6
      85: aload         5
      87: invokevirtual #137                // Method com/mongodb/connection/ResponseBuffers.close:()V
      90: aload         6
      92: areturn
      93: astore        7
      95: aload         5
      97: invokevirtual #137                // Method com/mongodb/connection/ResponseBuffers.close:()V
     100: aload         7
     102: athrow
    Exception table:
       from    to  target type
          10    85    93   any
          93    95    93   any

  public <T> void sendAndReceiveAsync(com.mongodb.connection.CommandMessage, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: ldc           #138                // String stream is open
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: aload         4
       8: invokestatic  #139                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;Lcom/mongodb/async/SingleResultCallback;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: invokevirtual #140                // Method isClosed:()Z
      16: ifeq          41
      19: aload         4
      21: aconst_null
      22: new           #141                // class com/mongodb/MongoSocketClosedException
      25: dup
      26: ldc           #142                // String Can not read from a closed socket
      28: aload_0
      29: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      32: invokespecial #144                // Method com/mongodb/MongoSocketClosedException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;)V
      35: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      40: return
      41: new           #102                // class com/mongodb/connection/ByteBufferBsonOutput
      44: dup
      45: aload_0
      46: invokespecial #103                // Method com/mongodb/connection/ByteBufferBsonOutput."<init>":(Lcom/mongodb/connection/BufferProvider;)V
      49: astore        5
      51: new           #102                // class com/mongodb/connection/ByteBufferBsonOutput
      54: dup
      55: aload_0
      56: invokespecial #103                // Method com/mongodb/connection/ByteBufferBsonOutput."<init>":(Lcom/mongodb/connection/BufferProvider;)V
      59: astore        6
      61: aload_1
      62: aload         5
      64: aload_3
      65: invokevirtual #108                // Method com/mongodb/connection/CommandMessage.encode:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)V
      68: new           #104                // class com/mongodb/connection/InternalStreamConnection$LazyCommandDocument
      71: dup
      72: aload_1
      73: aload         5
      75: aconst_null
      76: invokespecial #105                // Method com/mongodb/connection/InternalStreamConnection$LazyCommandDocument."<init>":(Lcom/mongodb/connection/CommandMessage;Lcom/mongodb/connection/ByteBufferBsonOutput;Lcom/mongodb/connection/InternalStreamConnection$1;)V
      79: astore        7
      81: new           #106                // class com/mongodb/connection/InternalStreamConnection$CommandEventSender
      84: dup
      85: aload_0
      86: aload_1
      87: aload         7
      89: invokespecial #107                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/connection/CommandMessage;Lcom/mongodb/connection/InternalStreamConnection$LazyCommandDocument;)V
      92: astore        8
      94: aload         8
      96: invokevirtual #109                // Method com/mongodb/connection/InternalStreamConnection$CommandEventSender.sendStartedEvent:()V
      99: aload_0
     100: getfield      #15                 // Field sendCompressor:Lcom/mongodb/connection/Compressor;
     103: ifnull        122
     106: getstatic     #2                  // Field SECURITY_SENSITIVE_COMMANDS:Ljava/util/Set;
     109: aload         7
     111: invokevirtual #117                // Method com/mongodb/connection/InternalStreamConnection$LazyCommandDocument.getName:()Ljava/lang/String;
     114: invokeinterface #118,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     119: ifeq          145
     122: aload_0
     123: aload_1
     124: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
     127: aload_2
     128: aload_3
     129: aload         4
     131: aload         5
     133: aload         8
     135: aload_1
     136: invokevirtual #113                // Method com/mongodb/connection/CommandMessage.isResponseExpected:()Z
     139: invokespecial #145                // Method sendCommandMessageAsync:(ILorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/connection/ByteBufferBsonOutput;Lcom/mongodb/connection/InternalStreamConnection$CommandEventSender;Z)V
     142: goto          207
     145: new           #122                // class com/mongodb/connection/CompressedMessage
     148: dup
     149: aload_1
     150: invokevirtual #123                // Method com/mongodb/connection/CommandMessage.getOpCode:()Lcom/mongodb/connection/OpCode;
     153: aload         5
     155: invokevirtual #119                // Method com/mongodb/connection/ByteBufferBsonOutput.getByteBuffers:()Ljava/util/List;
     158: aload_0
     159: getfield      #15                 // Field sendCompressor:Lcom/mongodb/connection/Compressor;
     162: aload_0
     163: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
     166: invokestatic  #124                // Method com/mongodb/connection/ProtocolHelper.getMessageSettings:(Lcom/mongodb/connection/ConnectionDescription;)Lcom/mongodb/connection/MessageSettings;
     169: invokespecial #125                // Method com/mongodb/connection/CompressedMessage."<init>":(Lcom/mongodb/connection/OpCode;Ljava/util/List;Lcom/mongodb/connection/Compressor;Lcom/mongodb/connection/MessageSettings;)V
     172: astore        9
     174: aload         9
     176: aload         6
     178: aload_3
     179: invokevirtual #126                // Method com/mongodb/connection/CompressedMessage.encode:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)V
     182: aload         5
     184: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     187: aload_0
     188: aload_1
     189: invokevirtual #120                // Method com/mongodb/connection/CommandMessage.getId:()I
     192: aload_2
     193: aload_3
     194: aload         4
     196: aload         6
     198: aload         8
     200: aload_1
     201: invokevirtual #113                // Method com/mongodb/connection/CommandMessage.isResponseExpected:()Z
     204: invokespecial #145                // Method sendCommandMessageAsync:(ILorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/connection/ByteBufferBsonOutput;Lcom/mongodb/connection/InternalStreamConnection$CommandEventSender;Z)V
     207: goto          232
     210: astore        7
     212: aload         5
     214: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     217: aload         6
     219: invokevirtual #111                // Method com/mongodb/connection/ByteBufferBsonOutput.close:()V
     222: aload         4
     224: aconst_null
     225: aload         7
     227: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     232: return
    Exception table:
       from    to  target type
          61   207   210   Class java/lang/Throwable

  private <T> void sendCommandMessageAsync(int, org.bson.codecs.Decoder<T>, com.mongodb.session.SessionContext, com.mongodb.async.SingleResultCallback<T>, com.mongodb.connection.ByteBufferBsonOutput, com.mongodb.connection.InternalStreamConnection$CommandEventSender, boolean);
    Code:
       0: aload_0
       1: aload         5
       3: invokevirtual #119                // Method com/mongodb/connection/ByteBufferBsonOutput.getByteBuffers:()Ljava/util/List;
       6: iload_1
       7: new           #146                // class com/mongodb/connection/InternalStreamConnection$2
      10: dup
      11: aload_0
      12: aload         5
      14: aload         6
      16: aload         4
      18: iload         7
      20: aload_3
      21: iload_1
      22: aload_2
      23: invokespecial #147                // Method com/mongodb/connection/InternalStreamConnection$2."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/connection/ByteBufferBsonOutput;Lcom/mongodb/connection/InternalStreamConnection$CommandEventSender;Lcom/mongodb/async/SingleResultCallback;ZLcom/mongodb/session/SessionContext;ILorg/bson/codecs/Decoder;)V
      26: invokevirtual #148                // Method sendMessageAsync:(Ljava/util/List;ILcom/mongodb/async/SingleResultCallback;)V
      29: return

  public void sendMessage(java.util.List<org.bson.ByteBuf>, int);
    Code:
       0: ldc           #138                // String stream is open
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #140                // Method isClosed:()Z
      14: ifeq          31
      17: new           #141                // class com/mongodb/MongoSocketClosedException
      20: dup
      21: ldc           #149                // String Cannot write to a closed stream
      23: aload_0
      24: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      27: invokespecial #144                // Method com/mongodb/MongoSocketClosedException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;)V
      30: athrow
      31: aload_0
      32: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      35: aload_1
      36: invokeinterface #150,  2          // InterfaceMethod com/mongodb/connection/Stream.write:(Ljava/util/List;)V
      41: goto          55
      44: astore_3
      45: aload_0
      46: invokevirtual #50                 // Method close:()V
      49: aload_0
      50: aload_3
      51: invokespecial #6                  // Method translateWriteException:(Ljava/lang/Throwable;)Lcom/mongodb/MongoException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
          31    41    44   Class java/lang/Exception

  public com.mongodb.connection.ResponseBuffers receiveMessage(int);
    Code:
       0: ldc           #138                // String stream is open
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #140                // Method isClosed:()Z
      14: ifeq          31
      17: new           #141                // class com/mongodb/MongoSocketClosedException
      20: dup
      21: ldc           #152                // String Cannot read from a closed stream
      23: aload_0
      24: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      27: invokespecial #144                // Method com/mongodb/MongoSocketClosedException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;)V
      30: athrow
      31: aload_0
      32: invokespecial #153                // Method receiveResponseBuffers:()Lcom/mongodb/connection/ResponseBuffers;
      35: areturn
      36: astore_2
      37: aload_0
      38: invokevirtual #50                 // Method close:()V
      41: aload_0
      42: aload_2
      43: invokespecial #5                  // Method translateReadException:(Ljava/lang/Throwable;)Lcom/mongodb/MongoException;
      46: athrow
    Exception table:
       from    to  target type
          31    35    36   Class java/lang/Throwable

  public void sendMessageAsync(java.util.List<org.bson.ByteBuf>, int, com.mongodb.async.SingleResultCallback<java.lang.Void>);
    Code:
       0: ldc           #138                // String stream is open
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: aload_3
       7: invokestatic  #139                // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;Lcom/mongodb/async/SingleResultCallback;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: invokevirtual #140                // Method isClosed:()Z
      15: ifeq          39
      18: aload_3
      19: aconst_null
      20: new           #141                // class com/mongodb/MongoSocketClosedException
      23: dup
      24: ldc           #142                // String Can not read from a closed socket
      26: aload_0
      27: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      30: invokespecial #144                // Method com/mongodb/MongoSocketClosedException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;)V
      33: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      38: return
      39: aload_0
      40: aload_1
      41: aload_3
      42: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      45: invokestatic  #154                // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
      48: invokespecial #155                // Method writeAsync:(Ljava/util/List;Lcom/mongodb/async/SingleResultCallback;)V
      51: return

  private void writeAsync(java.util.List<org.bson.ByteBuf>, com.mongodb.async.SingleResultCallback<java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       4: aload_1
       5: new           #156                // class com/mongodb/connection/InternalStreamConnection$3
       8: dup
       9: aload_0
      10: aload_2
      11: invokespecial #157                // Method com/mongodb/connection/InternalStreamConnection$3."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/async/SingleResultCallback;)V
      14: invokeinterface #158,  3          // InterfaceMethod com/mongodb/connection/Stream.writeAsync:(Ljava/util/List;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      19: return

  public void receiveMessageAsync(int, com.mongodb.async.SingleResultCallback<com.mongodb.connection.ResponseBuffers>);
    Code:
       0: ldc           #138                // String stream is open
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: aload_2
      15: invokestatic  #54                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;ZLcom/mongodb/async/SingleResultCallback;)V
      18: aload_0
      19: invokevirtual #140                // Method isClosed:()Z
      22: ifeq          46
      25: aload_2
      26: aconst_null
      27: new           #141                // class com/mongodb/MongoSocketClosedException
      30: dup
      31: ldc           #142                // String Can not read from a closed socket
      33: aload_0
      34: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      37: invokespecial #144                // Method com/mongodb/MongoSocketClosedException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;)V
      40: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      45: return
      46: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      49: invokeinterface #159,  1          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.isTraceEnabled:()Z
      54: ifeq          81
      57: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      60: ldc           #160                // String Start receiving response on %s
      62: iconst_1
      63: anewarray     #46                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload_0
      69: invokespecial #12                 // Method getId:()Lcom/mongodb/connection/ConnectionId;
      72: aastore
      73: invokestatic  #47                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokeinterface #161,  2          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.trace:(Ljava/lang/String;)V
      81: aload_0
      82: bipush        16
      84: new           #162                // class com/mongodb/connection/InternalStreamConnection$MessageHeaderCallback
      87: dup
      88: aload_0
      89: new           #163                // class com/mongodb/connection/InternalStreamConnection$4
      92: dup
      93: aload_0
      94: aload_2
      95: invokespecial #164                // Method com/mongodb/connection/InternalStreamConnection$4."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/async/SingleResultCallback;)V
      98: invokespecial #165                // Method com/mongodb/connection/InternalStreamConnection$MessageHeaderCallback."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/async/SingleResultCallback;)V
     101: invokespecial #7                  // Method readAsync:(ILcom/mongodb/async/SingleResultCallback;)V
     104: return

  private void readAsync(int, com.mongodb.async.SingleResultCallback<org.bson.ByteBuf>);
    Code:
       0: aload_0
       1: invokevirtual #140                // Method isClosed:()Z
       4: ifeq          28
       7: aload_2
       8: aconst_null
       9: new           #141                // class com/mongodb/MongoSocketClosedException
      12: dup
      13: ldc           #152                // String Cannot read from a closed stream
      15: aload_0
      16: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      19: invokespecial #144                // Method com/mongodb/MongoSocketClosedException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;)V
      22: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      27: return
      28: aload_0
      29: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      32: iload_1
      33: new           #166                // class com/mongodb/connection/InternalStreamConnection$5
      36: dup
      37: aload_0
      38: aload_2
      39: invokespecial #167                // Method com/mongodb/connection/InternalStreamConnection$5."<init>":(Lcom/mongodb/connection/InternalStreamConnection;Lcom/mongodb/async/SingleResultCallback;)V
      42: invokeinterface #168,  3          // InterfaceMethod com/mongodb/connection/Stream.readAsync:(ILcom/mongodb/connection/AsyncCompletionHandler;)V
      47: goto          63
      50: astore_3
      51: aload_2
      52: aconst_null
      53: aload_0
      54: aload_3
      55: invokespecial #5                  // Method translateReadException:(Ljava/lang/Throwable;)Lcom/mongodb/MongoException;
      58: invokeinterface #55,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
          28    47    50   Class java/lang/Exception

  private com.mongodb.connection.ConnectionId getId();
    Code:
       0: aload_0
       1: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
       4: invokevirtual #169                // Method com/mongodb/connection/ConnectionDescription.getConnectionId:()Lcom/mongodb/connection/ConnectionId;
       7: areturn

  private com.mongodb.ServerAddress getServerAddress();
    Code:
       0: aload_0
       1: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
       4: invokevirtual #131                // Method com/mongodb/connection/ConnectionDescription.getServerAddress:()Lcom/mongodb/ServerAddress;
       7: areturn

  private void updateSessionContext(com.mongodb.session.SessionContext, com.mongodb.connection.ResponseBuffers);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #170                // Method com/mongodb/connection/ProtocolHelper.getOperationTime:(Lcom/mongodb/connection/ResponseBuffers;)Lorg/bson/BsonTimestamp;
       5: invokeinterface #171,  2          // InterfaceMethod com/mongodb/session/SessionContext.advanceOperationTime:(Lorg/bson/BsonTimestamp;)V
      10: aload_1
      11: aload_2
      12: invokestatic  #172                // Method com/mongodb/connection/ProtocolHelper.getClusterTime:(Lcom/mongodb/connection/ResponseBuffers;)Lorg/bson/BsonDocument;
      15: invokeinterface #173,  2          // InterfaceMethod com/mongodb/session/SessionContext.advanceClusterTime:(Lorg/bson/BsonDocument;)V
      20: return

  private com.mongodb.MongoException translateWriteException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #51                 // class com/mongodb/MongoException
       4: ifeq          12
       7: aload_1
       8: checkcast     #51                 // class com/mongodb/MongoException
      11: areturn
      12: aload_1
      13: instanceof    #174                // class java/io/IOException
      16: ifeq          34
      19: new           #175                // class com/mongodb/MongoSocketWriteException
      22: dup
      23: ldc           #176                // String Exception sending message
      25: aload_0
      26: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      29: aload_1
      30: invokespecial #177                // Method com/mongodb/MongoSocketWriteException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;Ljava/lang/Throwable;)V
      33: areturn
      34: aload_1
      35: instanceof    #178                // class java/lang/InterruptedException
      38: ifeq          52
      41: new           #79                 // class com/mongodb/MongoInternalException
      44: dup
      45: ldc           #179                // String Thread interrupted exception
      47: aload_1
      48: invokespecial #180                // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: areturn
      52: new           #79                 // class com/mongodb/MongoInternalException
      55: dup
      56: ldc           #181                // String Unexpected exception
      58: aload_1
      59: invokespecial #180                // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: areturn

  private com.mongodb.MongoException translateReadException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #51                 // class com/mongodb/MongoException
       4: ifeq          12
       7: aload_1
       8: checkcast     #51                 // class com/mongodb/MongoException
      11: areturn
      12: aload_1
      13: instanceof    #182                // class java/net/SocketTimeoutException
      16: ifeq          34
      19: new           #183                // class com/mongodb/MongoSocketReadTimeoutException
      22: dup
      23: ldc           #184                // String Timeout while receiving message
      25: aload_0
      26: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      29: aload_1
      30: invokespecial #185                // Method com/mongodb/MongoSocketReadTimeoutException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;Ljava/lang/Throwable;)V
      33: areturn
      34: aload_1
      35: instanceof    #186                // class java/io/InterruptedIOException
      38: ifeq          55
      41: new           #187                // class com/mongodb/MongoInterruptedException
      44: dup
      45: ldc           #188                // String Interrupted while receiving message
      47: aload_1
      48: checkcast     #186                // class java/io/InterruptedIOException
      51: invokespecial #189                // Method com/mongodb/MongoInterruptedException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      54: areturn
      55: aload_1
      56: instanceof    #190                // class java/nio/channels/ClosedByInterruptException
      59: ifeq          76
      62: new           #187                // class com/mongodb/MongoInterruptedException
      65: dup
      66: ldc           #188                // String Interrupted while receiving message
      68: aload_1
      69: checkcast     #190                // class java/nio/channels/ClosedByInterruptException
      72: invokespecial #189                // Method com/mongodb/MongoInterruptedException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      75: areturn
      76: aload_1
      77: instanceof    #174                // class java/io/IOException
      80: ifeq          98
      83: new           #191                // class com/mongodb/MongoSocketReadException
      86: dup
      87: ldc           #192                // String Exception receiving message
      89: aload_0
      90: invokespecial #143                // Method getServerAddress:()Lcom/mongodb/ServerAddress;
      93: aload_1
      94: invokespecial #193                // Method com/mongodb/MongoSocketReadException."<init>":(Ljava/lang/String;Lcom/mongodb/ServerAddress;Ljava/lang/Throwable;)V
      97: areturn
      98: aload_1
      99: instanceof    #110                // class java/lang/RuntimeException
     102: ifeq          116
     105: new           #79                 // class com/mongodb/MongoInternalException
     108: dup
     109: ldc           #194                // String Unexpected runtime exception
     111: aload_1
     112: invokespecial #180                // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     115: areturn
     116: aload_1
     117: instanceof    #178                // class java/lang/InterruptedException
     120: ifeq          134
     123: new           #79                 // class com/mongodb/MongoInternalException
     126: dup
     127: ldc           #195                // String Interrupted exception
     129: aload_1
     130: invokespecial #180                // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     133: areturn
     134: new           #79                 // class com/mongodb/MongoInternalException
     137: dup
     138: ldc           #181                // String Unexpected exception
     140: aload_1
     141: invokespecial #180                // Method com/mongodb/MongoInternalException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     144: areturn

  private com.mongodb.connection.ResponseBuffers receiveResponseBuffers() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       4: bipush        16
       6: invokeinterface #196,  2          // InterfaceMethod com/mongodb/connection/Stream.read:(I)Lorg/bson/ByteBuf;
      11: astore_1
      12: new           #1                  // class com/mongodb/connection/MessageHeader
      15: dup
      16: aload_1
      17: aload_0
      18: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
      21: invokevirtual #197                // Method com/mongodb/connection/ConnectionDescription.getMaxMessageSize:()I
      24: invokespecial #198                // Method com/mongodb/connection/MessageHeader."<init>":(Lorg/bson/ByteBuf;I)V
      27: astore_2
      28: aload_1
      29: invokeinterface #199,  1          // InterfaceMethod org/bson/ByteBuf.release:()V
      34: goto          46
      37: astore_3
      38: aload_1
      39: invokeinterface #199,  1          // InterfaceMethod org/bson/ByteBuf.release:()V
      44: aload_3
      45: athrow
      46: aload_0
      47: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      50: aload_2
      51: invokevirtual #200                // Method com/mongodb/connection/MessageHeader.getMessageLength:()I
      54: bipush        16
      56: isub
      57: invokeinterface #196,  2          // InterfaceMethod com/mongodb/connection/Stream.read:(I)Lorg/bson/ByteBuf;
      62: astore_3
      63: aload_2
      64: invokevirtual #201                // Method com/mongodb/connection/MessageHeader.getOpCode:()I
      67: getstatic     #202                // Field com/mongodb/connection/OpCode.OP_COMPRESSED:Lcom/mongodb/connection/OpCode;
      70: invokevirtual #203                // Method com/mongodb/connection/OpCode.getValue:()I
      73: if_icmpne     143
      76: new           #204                // class com/mongodb/connection/CompressedHeader
      79: dup
      80: aload_3
      81: aload_2
      82: invokespecial #205                // Method com/mongodb/connection/CompressedHeader."<init>":(Lorg/bson/ByteBuf;Lcom/mongodb/connection/MessageHeader;)V
      85: astore        4
      87: aload_0
      88: aload         4
      90: invokespecial #4                  // Method getCompressor:(Lcom/mongodb/connection/CompressedHeader;)Lcom/mongodb/connection/Compressor;
      93: astore        5
      95: aload_0
      96: aload         4
      98: invokevirtual #206                // Method com/mongodb/connection/CompressedHeader.getUncompressedSize:()I
     101: invokevirtual #207                // Method getBuffer:(I)Lorg/bson/ByteBuf;
     104: astore        6
     106: aload         5
     108: aload_3
     109: aload         6
     111: invokevirtual #208                // Method com/mongodb/connection/Compressor.uncompress:(Lorg/bson/ByteBuf;Lorg/bson/ByteBuf;)V
     114: aload         6
     116: invokeinterface #209,  1          // InterfaceMethod org/bson/ByteBuf.flip:()Lorg/bson/ByteBuf;
     121: pop
     122: new           #210                // class com/mongodb/connection/ResponseBuffers
     125: dup
     126: new           #211                // class com/mongodb/connection/ReplyHeader
     129: dup
     130: aload         6
     132: aload         4
     134: invokespecial #212                // Method com/mongodb/connection/ReplyHeader."<init>":(Lorg/bson/ByteBuf;Lcom/mongodb/connection/CompressedHeader;)V
     137: aload         6
     139: invokespecial #213                // Method com/mongodb/connection/ResponseBuffers."<init>":(Lcom/mongodb/connection/ReplyHeader;Lorg/bson/ByteBuf;)V
     142: areturn
     143: new           #210                // class com/mongodb/connection/ResponseBuffers
     146: dup
     147: new           #211                // class com/mongodb/connection/ReplyHeader
     150: dup
     151: aload_3
     152: aload_2
     153: invokespecial #214                // Method com/mongodb/connection/ReplyHeader."<init>":(Lorg/bson/ByteBuf;Lcom/mongodb/connection/MessageHeader;)V
     156: aload_3
     157: invokespecial #213                // Method com/mongodb/connection/ResponseBuffers."<init>":(Lcom/mongodb/connection/ReplyHeader;Lorg/bson/ByteBuf;)V
     160: areturn
    Exception table:
       from    to  target type
          12    28    37   any

  private com.mongodb.connection.Compressor getCompressor(com.mongodb.connection.CompressedHeader);
    Code:
       0: aload_0
       1: getfield      #32                 // Field compressorMap:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #215                // Method com/mongodb/connection/CompressedHeader.getCompressorId:()B
       8: invokestatic  #68                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      11: invokeinterface #216,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #76                 // class com/mongodb/connection/Compressor
      19: astore_2
      20: aload_2
      21: ifnonnull     54
      24: new           #93                 // class com/mongodb/MongoClientException
      27: dup
      28: new           #80                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #217                // String Unsupported compressor with identifier
      37: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #215                // Method com/mongodb/connection/CompressedHeader.getCompressorId:()B
      44: invokevirtual #218                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #95                 // Method com/mongodb/MongoClientException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_2
      55: areturn

  public org.bson.ByteBuf getBuffer(int);
    Code:
       0: ldc           #219                // String open
       2: aload_0
       3: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
       6: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #38                 // Field stream:Lcom/mongodb/connection/Stream;
      14: iload_1
      15: invokeinterface #220,  2          // InterfaceMethod com/mongodb/connection/Stream.getBuffer:(I)Lorg/bson/ByteBuf;
      20: areturn

  private static <T extends org.bson.BsonDocument> T getResponseDocument(com.mongodb.connection.ResponseBuffers, int, org.bson.codecs.Decoder<T>);
    Code:
       0: new           #134                // class com/mongodb/connection/ReplyMessage
       3: dup
       4: aload_0
       5: aload_2
       6: iload_1
       7: i2l
       8: invokespecial #135                // Method com/mongodb/connection/ReplyMessage."<init>":(Lcom/mongodb/connection/ResponseBuffers;Lorg/bson/codecs/Decoder;J)V
      11: astore_3
      12: aload_0
      13: invokevirtual #221                // Method com/mongodb/connection/ResponseBuffers.reset:()V
      16: aload_3
      17: invokevirtual #136                // Method com/mongodb/connection/ReplyMessage.getDocuments:()Ljava/util/List;
      20: iconst_0
      21: invokeinterface #72,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      26: checkcast     #222                // class org/bson/BsonDocument
      29: areturn

  static com.mongodb.connection.ConnectionDescription access$002(com.mongodb.connection.InternalStreamConnection, com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
       6: areturn

  static java.util.concurrent.atomic.AtomicBoolean access$100(com.mongodb.connection.InternalStreamConnection);
    Code:
       0: aload_0
       1: getfield      #16                 // Field opened:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: areturn

  static com.mongodb.connection.Compressor access$202(com.mongodb.connection.InternalStreamConnection, com.mongodb.connection.Compressor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #15                 // Field sendCompressor:Lcom/mongodb/connection/Compressor;
       6: areturn

  static com.mongodb.connection.ConnectionDescription access$000(com.mongodb.connection.InternalStreamConnection);
    Code:
       0: aload_0
       1: getfield      #17                 // Field description:Lcom/mongodb/connection/ConnectionDescription;
       4: areturn

  static com.mongodb.connection.Compressor access$300(com.mongodb.connection.InternalStreamConnection, com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method findSendCompressor:(Lcom/mongodb/connection/ConnectionDescription;)Lcom/mongodb/connection/Compressor;
       5: areturn

  static com.mongodb.diagnostics.logging.Logger access$400();
    Code:
       0: getstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       3: areturn

  static com.mongodb.connection.ConnectionId access$500(com.mongodb.connection.InternalStreamConnection);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method getId:()Lcom/mongodb/connection/ConnectionId;
       4: areturn

  static com.mongodb.connection.ServerId access$600(com.mongodb.connection.InternalStreamConnection);
    Code:
       0: aload_0
       1: getfield      #11                 // Field serverId:Lcom/mongodb/connection/ServerId;
       4: areturn

  static com.mongodb.connection.InternalConnectionInitializer access$700(com.mongodb.connection.InternalStreamConnection);
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionInitializer:Lcom/mongodb/connection/InternalConnectionInitializer;
       4: areturn

  static void access$900(com.mongodb.connection.InternalStreamConnection, com.mongodb.session.SessionContext, com.mongodb.connection.ResponseBuffers);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method updateSessionContext:(Lcom/mongodb/session/SessionContext;Lcom/mongodb/connection/ResponseBuffers;)V
       6: return

  static org.bson.BsonDocument access$1000(com.mongodb.connection.ResponseBuffers, int, org.bson.codecs.Decoder);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #8                  // Method getResponseDocument:(Lcom/mongodb/connection/ResponseBuffers;ILorg/bson/codecs/Decoder;)Lorg/bson/BsonDocument;
       6: areturn

  static void access$1100(com.mongodb.connection.InternalStreamConnection, int, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #7                  // Method readAsync:(ILcom/mongodb/async/SingleResultCallback;)V
       6: return

  static com.mongodb.MongoException access$1200(com.mongodb.connection.InternalStreamConnection, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method translateWriteException:(Ljava/lang/Throwable;)Lcom/mongodb/MongoException;
       5: areturn

  static com.mongodb.MongoException access$1300(com.mongodb.connection.InternalStreamConnection, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method translateReadException:(Ljava/lang/Throwable;)Lcom/mongodb/MongoException;
       5: areturn

  static com.mongodb.connection.Compressor access$1500(com.mongodb.connection.InternalStreamConnection, com.mongodb.connection.CompressedHeader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method getCompressor:(Lcom/mongodb/connection/CompressedHeader;)Lcom/mongodb/connection/Compressor;
       5: areturn

  static com.mongodb.event.CommandListener access$1600(com.mongodb.connection.InternalStreamConnection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field commandListener:Lcom/mongodb/event/CommandListener;
       4: areturn

  static java.util.Set access$1700();
    Code:
       0: getstatic     #2                  // Field SECURITY_SENSITIVE_COMMANDS:Ljava/util/Set;
       3: areturn

  static {};
    Code:
       0: new           #223                // class java/util/HashSet
       3: dup
       4: bipush        9
       6: anewarray     #73                 // class java/lang/String
       9: dup
      10: iconst_0
      11: ldc           #224                // String authenticate
      13: aastore
      14: dup
      15: iconst_1
      16: ldc           #225                // String saslStart
      18: aastore
      19: dup
      20: iconst_2
      21: ldc           #226                // String saslContinue
      23: aastore
      24: dup
      25: iconst_3
      26: ldc           #227                // String getnonce
      28: aastore
      29: dup
      30: iconst_4
      31: ldc           #228                // String createUser
      33: aastore
      34: dup
      35: iconst_5
      36: ldc           #229                // String updateUser
      38: aastore
      39: dup
      40: bipush        6
      42: ldc           #230                // String copydbgetnonce
      44: aastore
      45: dup
      46: bipush        7
      48: ldc           #231                // String copydbsaslstart
      50: aastore
      51: dup
      52: bipush        8
      54: ldc           #232                // String copydb
      56: aastore
      57: invokestatic  #233                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      60: invokespecial #234                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      63: putstatic     #2                  // Field SECURITY_SENSITIVE_COMMANDS:Ljava/util/Set;
      66: ldc           #235                // String connection
      68: invokestatic  #236                // Method com/mongodb/diagnostics/logging/Loggers.getLogger:(Ljava/lang/String;)Lcom/mongodb/diagnostics/logging/Logger;
      71: putstatic     #13                 // Field LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      74: return
}
