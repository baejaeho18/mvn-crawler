Compiled from "IndexOptions.java"
public class com.mongodb.client.model.IndexOptions {
  private boolean background;

  private boolean unique;

  private java.lang.String name;

  private boolean sparse;

  private java.lang.Long expireAfterSeconds;

  private java.lang.Integer version;

  private org.bson.conversions.Bson weights;

  private java.lang.String defaultLanguage;

  private java.lang.String languageOverride;

  private java.lang.Integer textVersion;

  private java.lang.Integer sphereVersion;

  private java.lang.Integer bits;

  private java.lang.Double min;

  private java.lang.Double max;

  private java.lang.Double bucketSize;

  private org.bson.conversions.Bson storageEngine;

  private org.bson.conversions.Bson partialFilterExpression;

  private com.mongodb.client.model.Collation collation;

  public com.mongodb.client.model.IndexOptions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean isBackground();
    Code:
       0: aload_0
       1: getfield      #2                  // Field background:Z
       4: ireturn

  public com.mongodb.client.model.IndexOptions background(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field background:Z
       5: aload_0
       6: areturn

  public boolean isUnique();
    Code:
       0: aload_0
       1: getfield      #3                  // Field unique:Z
       4: ireturn

  public com.mongodb.client.model.IndexOptions unique(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field unique:Z
       5: aload_0
       6: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  public com.mongodb.client.model.IndexOptions name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public boolean isSparse();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sparse:Z
       4: ireturn

  public com.mongodb.client.model.IndexOptions sparse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field sparse:Z
       5: aload_0
       6: areturn

  public java.lang.Long getExpireAfter(java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field expireAfterSeconds:Ljava/lang/Long;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_1
      10: aload_0
      11: getfield      #6                  // Field expireAfterSeconds:Ljava/lang/Long;
      14: invokevirtual #7                  // Method java/lang/Long.longValue:()J
      17: getstatic     #8                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      20: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      23: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: areturn

  public com.mongodb.client.model.IndexOptions expireAfter(java.lang.Long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field expireAfterSeconds:Ljava/lang/Long;
       9: goto          30
      12: aload_0
      13: getstatic     #8                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      16: aload_1
      17: invokevirtual #7                  // Method java/lang/Long.longValue:()J
      20: aload_2
      21: invokevirtual #9                  // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      24: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: putfield      #6                  // Field expireAfterSeconds:Ljava/lang/Long;
      30: aload_0
      31: areturn

  public java.lang.Integer getVersion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field version:Ljava/lang/Integer;
       4: areturn

  public com.mongodb.client.model.IndexOptions version(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field version:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.bson.conversions.Bson getWeights();
    Code:
       0: aload_0
       1: getfield      #12                 // Field weights:Lorg/bson/conversions/Bson;
       4: areturn

  public com.mongodb.client.model.IndexOptions weights(org.bson.conversions.Bson);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field weights:Lorg/bson/conversions/Bson;
       5: aload_0
       6: areturn

  public java.lang.String getDefaultLanguage();
    Code:
       0: aload_0
       1: getfield      #13                 // Field defaultLanguage:Ljava/lang/String;
       4: areturn

  public com.mongodb.client.model.IndexOptions defaultLanguage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field defaultLanguage:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getLanguageOverride();
    Code:
       0: aload_0
       1: getfield      #14                 // Field languageOverride:Ljava/lang/String;
       4: areturn

  public com.mongodb.client.model.IndexOptions languageOverride(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field languageOverride:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Integer getTextVersion();
    Code:
       0: aload_0
       1: getfield      #15                 // Field textVersion:Ljava/lang/Integer;
       4: areturn

  public com.mongodb.client.model.IndexOptions textVersion(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field textVersion:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public java.lang.Integer getSphereVersion();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sphereVersion:Ljava/lang/Integer;
       4: areturn

  public com.mongodb.client.model.IndexOptions sphereVersion(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field sphereVersion:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public java.lang.Integer getBits();
    Code:
       0: aload_0
       1: getfield      #17                 // Field bits:Ljava/lang/Integer;
       4: areturn

  public com.mongodb.client.model.IndexOptions bits(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field bits:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public java.lang.Double getMin();
    Code:
       0: aload_0
       1: getfield      #18                 // Field min:Ljava/lang/Double;
       4: areturn

  public com.mongodb.client.model.IndexOptions min(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field min:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public java.lang.Double getMax();
    Code:
       0: aload_0
       1: getfield      #19                 // Field max:Ljava/lang/Double;
       4: areturn

  public com.mongodb.client.model.IndexOptions max(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field max:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public java.lang.Double getBucketSize();
    Code:
       0: aload_0
       1: getfield      #20                 // Field bucketSize:Ljava/lang/Double;
       4: areturn

  public com.mongodb.client.model.IndexOptions bucketSize(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field bucketSize:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public org.bson.conversions.Bson getStorageEngine();
    Code:
       0: aload_0
       1: getfield      #21                 // Field storageEngine:Lorg/bson/conversions/Bson;
       4: areturn

  public com.mongodb.client.model.IndexOptions storageEngine(org.bson.conversions.Bson);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field storageEngine:Lorg/bson/conversions/Bson;
       5: aload_0
       6: areturn

  public org.bson.conversions.Bson getPartialFilterExpression();
    Code:
       0: aload_0
       1: getfield      #22                 // Field partialFilterExpression:Lorg/bson/conversions/Bson;
       4: areturn

  public com.mongodb.client.model.IndexOptions partialFilterExpression(org.bson.conversions.Bson);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field partialFilterExpression:Lorg/bson/conversions/Bson;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.Collation getCollation();
    Code:
       0: aload_0
       1: getfield      #23                 // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  public com.mongodb.client.model.IndexOptions collation(com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field collation:Lcom/mongodb/client/model/Collation;
       5: aload_0
       6: areturn
}
