Compiled from "CreateCollectionOperation.java"
public class com.mongodb.operation.CreateCollectionOperation implements com.mongodb.operation.AsyncWriteOperation<java.lang.Void>, com.mongodb.operation.WriteOperation<java.lang.Void> {
  private final java.lang.String databaseName;

  private final java.lang.String collectionName;

  private final com.mongodb.WriteConcern writeConcern;

  private boolean capped;

  private long sizeInBytes;

  private boolean autoIndex;

  private long maxDocuments;

  private java.lang.Boolean usePowerOf2Sizes;

  private org.bson.BsonDocument storageEngineOptions;

  private org.bson.BsonDocument indexOptionDefaults;

  private org.bson.BsonDocument validator;

  private com.mongodb.client.model.ValidationLevel validationLevel;

  private com.mongodb.client.model.ValidationAction validationAction;

  private com.mongodb.client.model.Collation collation;

  public com.mongodb.operation.CreateCollectionOperation(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lcom/mongodb/WriteConcern;)V
       7: return

  public com.mongodb.operation.CreateCollectionOperation(java.lang.String, java.lang.String, com.mongodb.WriteConcern);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field capped:Z
       9: aload_0
      10: lconst_0
      11: putfield      #7                  // Field sizeInBytes:J
      14: aload_0
      15: iconst_1
      16: putfield      #8                  // Field autoIndex:Z
      19: aload_0
      20: lconst_0
      21: putfield      #9                  // Field maxDocuments:J
      24: aload_0
      25: aconst_null
      26: putfield      #10                 // Field usePowerOf2Sizes:Ljava/lang/Boolean;
      29: aload_0
      30: aconst_null
      31: putfield      #11                 // Field validationLevel:Lcom/mongodb/client/model/ValidationLevel;
      34: aload_0
      35: aconst_null
      36: putfield      #12                 // Field validationAction:Lcom/mongodb/client/model/ValidationAction;
      39: aload_0
      40: aconst_null
      41: putfield      #3                  // Field collation:Lcom/mongodb/client/model/Collation;
      44: aload_0
      45: ldc           #13                 // String databaseName
      47: aload_1
      48: invokestatic  #14                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #15                 // class java/lang/String
      54: putfield      #2                  // Field databaseName:Ljava/lang/String;
      57: aload_0
      58: ldc           #16                 // String collectionName
      60: aload_2
      61: invokestatic  #14                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #15                 // class java/lang/String
      67: putfield      #17                 // Field collectionName:Ljava/lang/String;
      70: aload_0
      71: aload_3
      72: putfield      #18                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      75: return

  public java.lang.String getCollectionName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field collectionName:Ljava/lang/String;
       4: areturn

  public com.mongodb.WriteConcern getWriteConcern();
    Code:
       0: aload_0
       1: getfield      #18                 // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  public boolean isAutoIndex();
    Code:
       0: aload_0
       1: getfield      #8                  // Field autoIndex:Z
       4: ireturn

  public com.mongodb.operation.CreateCollectionOperation autoIndex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field autoIndex:Z
       5: aload_0
       6: areturn

  public long getMaxDocuments();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxDocuments:J
       4: lreturn

  public com.mongodb.operation.CreateCollectionOperation maxDocuments(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field maxDocuments:J
       5: aload_0
       6: areturn

  public boolean isCapped();
    Code:
       0: aload_0
       1: getfield      #6                  // Field capped:Z
       4: ireturn

  public com.mongodb.operation.CreateCollectionOperation capped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field capped:Z
       5: aload_0
       6: areturn

  public long getSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sizeInBytes:J
       4: lreturn

  public com.mongodb.operation.CreateCollectionOperation sizeInBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #7                  // Field sizeInBytes:J
       5: aload_0
       6: areturn

  public java.lang.Boolean isUsePowerOf2Sizes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field usePowerOf2Sizes:Ljava/lang/Boolean;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation usePowerOf2Sizes(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field usePowerOf2Sizes:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getStorageEngineOptions();
    Code:
       0: aload_0
       1: getfield      #19                 // Field storageEngineOptions:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation storageEngineOptions(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field storageEngineOptions:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getIndexOptionDefaults();
    Code:
       0: aload_0
       1: getfield      #20                 // Field indexOptionDefaults:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation indexOptionDefaults(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field indexOptionDefaults:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getValidator();
    Code:
       0: aload_0
       1: getfield      #21                 // Field validator:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation validator(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field validator:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.ValidationLevel getValidationLevel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field validationLevel:Lcom/mongodb/client/model/ValidationLevel;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation validationLevel(com.mongodb.client.model.ValidationLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field validationLevel:Lcom/mongodb/client/model/ValidationLevel;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.ValidationAction getValidationAction();
    Code:
       0: aload_0
       1: getfield      #12                 // Field validationAction:Lcom/mongodb/client/model/ValidationAction;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation validationAction(com.mongodb.client.model.ValidationAction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field validationAction:Lcom/mongodb/client/model/ValidationAction;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.Collation getCollation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  public com.mongodb.operation.CreateCollectionOperation collation(com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field collation:Lcom/mongodb/client/model/Collation;
       5: aload_0
       6: areturn

  public java.lang.Void execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_1
       1: new           #22                 // class com/mongodb/operation/CreateCollectionOperation$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #23                 // Method com/mongodb/operation/CreateCollectionOperation$1."<init>":(Lcom/mongodb/operation/CreateCollectionOperation;Lcom/mongodb/binding/WriteBinding;)V
      10: invokestatic  #24                 // Method com/mongodb/operation/OperationHelper.withConnection:(Lcom/mongodb/binding/WriteBinding;Lcom/mongodb/operation/OperationHelper$CallableWithConnection;)Ljava/lang/Object;
      13: checkcast     #25                 // class java/lang/Void
      16: areturn

  public void executeAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.async.SingleResultCallback<java.lang.Void>);
    Code:
       0: aload_1
       1: new           #26                 // class com/mongodb/operation/CreateCollectionOperation$2
       4: dup
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokespecial #27                 // Method com/mongodb/operation/CreateCollectionOperation$2."<init>":(Lcom/mongodb/operation/CreateCollectionOperation;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/binding/AsyncWriteBinding;)V
      11: invokestatic  #28                 // Method com/mongodb/operation/OperationHelper.withConnection:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnection;)V
      14: return

  private org.bson.BsonDocument getCommand(com.mongodb.connection.ConnectionDescription);
    Code:
       0: new           #29                 // class org/bson/BsonDocument
       3: dup
       4: ldc           #30                 // String create
       6: new           #31                 // class org/bson/BsonString
       9: dup
      10: aload_0
      11: getfield      #17                 // Field collectionName:Ljava/lang/String;
      14: invokespecial #32                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      17: invokespecial #33                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      20: astore_2
      21: aload_2
      22: ldc           #34                 // String autoIndexId
      24: aload_0
      25: getfield      #8                  // Field autoIndex:Z
      28: invokestatic  #35                 // Method org/bson/BsonBoolean.valueOf:(Z)Lorg/bson/BsonBoolean;
      31: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
      34: pop
      35: aload_2
      36: ldc           #37                 // String capped
      38: aload_0
      39: getfield      #6                  // Field capped:Z
      42: invokestatic  #35                 // Method org/bson/BsonBoolean.valueOf:(Z)Lorg/bson/BsonBoolean;
      45: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
      48: pop
      49: aload_0
      50: getfield      #6                  // Field capped:Z
      53: ifeq          76
      56: aload_2
      57: ldc           #38                 // String size
      59: aload_0
      60: getfield      #7                  // Field sizeInBytes:J
      63: invokestatic  #39                 // Method com/mongodb/operation/DocumentHelper.putIfNotZero:(Lorg/bson/BsonDocument;Ljava/lang/String;J)V
      66: aload_2
      67: ldc           #40                 // String max
      69: aload_0
      70: getfield      #9                  // Field maxDocuments:J
      73: invokestatic  #39                 // Method com/mongodb/operation/DocumentHelper.putIfNotZero:(Lorg/bson/BsonDocument;Ljava/lang/String;J)V
      76: aload_0
      77: getfield      #10                 // Field usePowerOf2Sizes:Ljava/lang/Boolean;
      80: ifnull        98
      83: aload_2
      84: ldc           #41                 // String flags
      86: new           #42                 // class org/bson/BsonInt32
      89: dup
      90: iconst_1
      91: invokespecial #43                 // Method org/bson/BsonInt32."<init>":(I)V
      94: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
      97: pop
      98: aload_0
      99: getfield      #19                 // Field storageEngineOptions:Lorg/bson/BsonDocument;
     102: ifnull        116
     105: aload_2
     106: ldc           #44                 // String storageEngine
     108: aload_0
     109: getfield      #19                 // Field storageEngineOptions:Lorg/bson/BsonDocument;
     112: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     115: pop
     116: aload_0
     117: getfield      #20                 // Field indexOptionDefaults:Lorg/bson/BsonDocument;
     120: ifnull        134
     123: aload_2
     124: ldc           #45                 // String indexOptionDefaults
     126: aload_0
     127: getfield      #20                 // Field indexOptionDefaults:Lorg/bson/BsonDocument;
     130: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     133: pop
     134: aload_0
     135: getfield      #21                 // Field validator:Lorg/bson/BsonDocument;
     138: ifnull        152
     141: aload_2
     142: ldc           #46                 // String validator
     144: aload_0
     145: getfield      #21                 // Field validator:Lorg/bson/BsonDocument;
     148: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     151: pop
     152: aload_0
     153: getfield      #11                 // Field validationLevel:Lcom/mongodb/client/model/ValidationLevel;
     156: ifnull        180
     159: aload_2
     160: ldc           #47                 // String validationLevel
     162: new           #31                 // class org/bson/BsonString
     165: dup
     166: aload_0
     167: getfield      #11                 // Field validationLevel:Lcom/mongodb/client/model/ValidationLevel;
     170: invokevirtual #48                 // Method com/mongodb/client/model/ValidationLevel.getValue:()Ljava/lang/String;
     173: invokespecial #32                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
     176: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     179: pop
     180: aload_0
     181: getfield      #12                 // Field validationAction:Lcom/mongodb/client/model/ValidationAction;
     184: ifnull        208
     187: aload_2
     188: ldc           #49                 // String validationAction
     190: new           #31                 // class org/bson/BsonString
     193: dup
     194: aload_0
     195: getfield      #12                 // Field validationAction:Lcom/mongodb/client/model/ValidationAction;
     198: invokevirtual #50                 // Method com/mongodb/client/model/ValidationAction.getValue:()Ljava/lang/String;
     201: invokespecial #32                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
     204: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     207: pop
     208: aload_0
     209: getfield      #18                 // Field writeConcern:Lcom/mongodb/WriteConcern;
     212: aload_2
     213: aload_1
     214: invokestatic  #51                 // Method com/mongodb/operation/WriteConcernHelper.appendWriteConcernToCommand:(Lcom/mongodb/WriteConcern;Lorg/bson/BsonDocument;Lcom/mongodb/connection/ConnectionDescription;)V
     217: aload_0
     218: getfield      #3                  // Field collation:Lcom/mongodb/client/model/Collation;
     221: ifnull        238
     224: aload_2
     225: ldc           #52                 // String collation
     227: aload_0
     228: getfield      #3                  // Field collation:Lcom/mongodb/client/model/Collation;
     231: invokevirtual #53                 // Method com/mongodb/client/model/Collation.asDocument:()Lorg/bson/BsonDocument;
     234: invokevirtual #36                 // Method org/bson/BsonDocument.put:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonValue;
     237: pop
     238: aload_2
     239: areturn

  public java.lang.Object execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method execute:(Lcom/mongodb/binding/WriteBinding;)Ljava/lang/Void;
       5: areturn

  static com.mongodb.client.model.Collation access$000(com.mongodb.operation.CreateCollectionOperation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  static java.lang.String access$100(com.mongodb.operation.CreateCollectionOperation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field databaseName:Ljava/lang/String;
       4: areturn

  static org.bson.BsonDocument access$200(com.mongodb.operation.CreateCollectionOperation, com.mongodb.connection.ConnectionDescription);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method getCommand:(Lcom/mongodb/connection/ConnectionDescription;)Lorg/bson/BsonDocument;
       5: areturn
}
