Compiled from "AsyncQueryBatchCursor.java"
class com.mongodb.operation.AsyncQueryBatchCursor<T> implements com.mongodb.async.AsyncBatchCursor<T> {
  private static final org.bson.FieldNameValidator NO_OP_FIELD_NAME_VALIDATOR;

  private final com.mongodb.MongoNamespace namespace;

  private final int limit;

  private final org.bson.codecs.Decoder<T> decoder;

  private final long maxTimeMS;

  private final com.mongodb.binding.AsyncConnectionSource connectionSource;

  private final java.util.concurrent.atomic.AtomicBoolean isClosed;

  private final java.util.concurrent.atomic.AtomicReference<com.mongodb.ServerCursor> cursor;

  private volatile com.mongodb.connection.QueryResult<T> firstBatch;

  private volatile int batchSize;

  private volatile int count;

  com.mongodb.operation.AsyncQueryBatchCursor(com.mongodb.connection.QueryResult<T>, int, int, long, org.bson.codecs.Decoder<T>, com.mongodb.binding.AsyncConnectionSource, com.mongodb.connection.AsyncConnection);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: ldc           #9                  // String maxTimeMS >= 0
      17: lload         4
      19: lconst_0
      20: lcmp
      21: iflt          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: invokestatic  #10                 // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      32: aload_0
      33: lload         4
      35: putfield      #11                 // Field maxTimeMS:J
      38: aload_0
      39: aload_1
      40: invokevirtual #12                 // Method com/mongodb/connection/QueryResult.getNamespace:()Lcom/mongodb/MongoNamespace;
      43: putfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      46: aload_0
      47: aload_1
      48: putfield      #14                 // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      51: aload_0
      52: iload_2
      53: putfield      #15                 // Field limit:I
      56: aload_0
      57: iload_3
      58: putfield      #16                 // Field batchSize:I
      61: aload_0
      62: aload         6
      64: putfield      #17                 // Field decoder:Lorg/bson/codecs/Decoder;
      67: aload_0
      68: new           #18                 // class java/util/concurrent/atomic/AtomicReference
      71: dup
      72: aload_1
      73: invokevirtual #19                 // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
      76: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      79: putfield      #21                 // Field cursor:Ljava/util/concurrent/atomic/AtomicReference;
      82: aload_0
      83: ldc           #22                 // String connectionSource
      85: aload         7
      87: invokestatic  #23                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #24                 // class com/mongodb/binding/AsyncConnectionSource
      93: putfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
      96: aload_0
      97: dup
      98: getfield      #25                 // Field count:I
     101: aload_1
     102: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
     105: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     110: iadd
     111: putfield      #25                 // Field count:I
     114: aload_1
     115: invokevirtual #19                 // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
     118: ifnull        142
     121: aload         7
     123: invokeinterface #28,  1           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.retain:()Lcom/mongodb/binding/AsyncConnectionSource;
     128: pop
     129: aload_0
     130: invokespecial #29                 // Method limitReached:()Z
     133: ifeq          142
     136: aload_0
     137: aload         8
     139: invokespecial #30                 // Method killCursor:(Lcom/mongodb/connection/AsyncConnection;)V
     142: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
       8: ifne          15
      11: aload_0
      12: invokespecial #32                 // Method killCursorOnClose:()V
      15: return

  public void next(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #33                 // Method next:(Lcom/mongodb/async/SingleResultCallback;Z)V
       6: return

  public void tryNext(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #33                 // Method next:(Lcom/mongodb/async/SingleResultCallback;Z)V
       6: return

  public void setBatchSize(int);
    Code:
       0: ldc           #34                 // String open
       2: aload_0
       3: getfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       6: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokestatic  #36                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      20: aload_0
      21: iload_1
      22: putfield      #16                 // Field batchSize:I
      25: return

  public int getBatchSize();
    Code:
       0: ldc           #34                 // String open
       2: aload_0
       3: getfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       6: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokestatic  #36                 // Method com/mongodb/assertions/Assertions.isTrue:(Ljava/lang/String;Z)V
      20: aload_0
      21: getfield      #16                 // Field batchSize:I
      24: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  private void next(com.mongodb.async.SingleResultCallback<java.util.List<T>>, boolean);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isClosed:()Z
       4: ifeq          47
       7: aload_1
       8: aconst_null
       9: new           #38                 // class com/mongodb/MongoException
      12: dup
      13: ldc           #39                 // String %s called after the cursor was closed.
      15: iconst_1
      16: anewarray     #40                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: iload_2
      22: ifeq          30
      25: ldc           #41                 // String tryNext()
      27: goto          32
      30: ldc           #42                 // String next()
      32: aastore
      33: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokespecial #44                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      39: invokeinterface #45,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      44: goto          147
      47: aload_0
      48: getfield      #14                 // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      51: ifnull        112
      54: iload_2
      55: ifne          73
      58: aload_0
      59: getfield      #14                 // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      62: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
      65: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      70: ifne          112
      73: aload_0
      74: getfield      #14                 // Field firstBatch:Lcom/mongodb/connection/QueryResult;
      77: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
      80: astore_3
      81: iload_2
      82: ifeq          96
      85: aload_3
      86: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      91: ifeq          96
      94: aconst_null
      95: astore_3
      96: aload_0
      97: aconst_null
      98: putfield      #14                 // Field firstBatch:Lcom/mongodb/connection/QueryResult;
     101: aload_1
     102: aload_3
     103: aconst_null
     104: invokeinterface #45,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     109: goto          147
     112: aload_0
     113: invokevirtual #47                 // Method getServerCursor:()Lcom/mongodb/ServerCursor;
     116: astore_3
     117: aload_3
     118: ifnonnull     140
     121: aload_0
     122: getfield      #8                  // Field isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;
     125: iconst_1
     126: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     129: aload_1
     130: aconst_null
     131: aconst_null
     132: invokeinterface #45,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     137: goto          147
     140: aload_0
     141: aload_3
     142: aload_1
     143: iload_2
     144: invokespecial #49                 // Method getMore:(Lcom/mongodb/ServerCursor;Lcom/mongodb/async/SingleResultCallback;Z)V
     147: return

  private boolean limitReached();
    Code:
       0: aload_0
       1: getfield      #15                 // Field limit:I
       4: invokestatic  #50                 // Method java/lang/Math.abs:(I)I
       7: ifeq          28
      10: aload_0
      11: getfield      #25                 // Field count:I
      14: aload_0
      15: getfield      #15                 // Field limit:I
      18: invokestatic  #50                 // Method java/lang/Math.abs:(I)I
      21: if_icmplt     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private void getMore(com.mongodb.ServerCursor, com.mongodb.async.SingleResultCallback<java.util.List<T>>, boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
       4: new           #51                 // class com/mongodb/operation/AsyncQueryBatchCursor$1
       7: dup
       8: aload_0
       9: aload_2
      10: aload_1
      11: iload_3
      12: invokespecial #52                 // Method com/mongodb/operation/AsyncQueryBatchCursor$1."<init>":(Lcom/mongodb/operation/AsyncQueryBatchCursor;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/ServerCursor;Z)V
      15: invokeinterface #53,  2           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getConnection:(Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  private void getMore(com.mongodb.connection.AsyncConnection, com.mongodb.ServerCursor, com.mongodb.async.SingleResultCallback<java.util.List<T>>, boolean);
    Code:
       0: aload_1
       1: invokeinterface #54,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       6: invokestatic  #55                 // Method com/mongodb/operation/OperationHelper.serverIsAtLeastVersionThreeDotTwo:(Lcom/mongodb/connection/ConnectionDescription;)Z
       9: ifeq          73
      12: aload_1
      13: aload_0
      14: getfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      17: invokevirtual #56                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: invokevirtual #57                 // Method com/mongodb/ServerCursor.getId:()J
      25: invokespecial #58                 // Method asGetMoreCommandDocument:(J)Lorg/bson/BsonDocument;
      28: getstatic     #59                 // Field NO_OP_FIELD_NAME_VALIDATOR:Lorg/bson/FieldNameValidator;
      31: invokestatic  #60                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      34: aload_0
      35: getfield      #17                 // Field decoder:Lorg/bson/codecs/Decoder;
      38: ldc           #61                 // String nextBatch
      40: invokestatic  #62                 // Method com/mongodb/operation/CommandResultDocumentCodec.create:(Lorg/bson/codecs/Decoder;Ljava/lang/String;)Lorg/bson/codecs/Codec;
      43: aload_0
      44: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
      47: invokeinterface #63,  1           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getSessionContext:()Lcom/mongodb/session/SessionContext;
      52: new           #64                 // class com/mongodb/operation/AsyncQueryBatchCursor$CommandResultSingleResultCallback
      55: dup
      56: aload_0
      57: aload_1
      58: aload_2
      59: aload_3
      60: iload         4
      62: invokespecial #65                 // Method com/mongodb/operation/AsyncQueryBatchCursor$CommandResultSingleResultCallback."<init>":(Lcom/mongodb/operation/AsyncQueryBatchCursor;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ServerCursor;Lcom/mongodb/async/SingleResultCallback;Z)V
      65: invokeinterface #66,  8           // InterfaceMethod com/mongodb/connection/AsyncConnection.commandAsync:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;)V
      70: goto          118
      73: aload_1
      74: aload_0
      75: getfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      78: aload_2
      79: invokevirtual #57                 // Method com/mongodb/ServerCursor.getId:()J
      82: aload_0
      83: getfield      #15                 // Field limit:I
      86: aload_0
      87: getfield      #16                 // Field batchSize:I
      90: aload_0
      91: getfield      #25                 // Field count:I
      94: invokestatic  #67                 // Method com/mongodb/operation/CursorHelper.getNumberToReturn:(III)I
      97: aload_0
      98: getfield      #17                 // Field decoder:Lorg/bson/codecs/Decoder;
     101: new           #68                 // class com/mongodb/operation/AsyncQueryBatchCursor$QueryResultSingleResultCallback
     104: dup
     105: aload_0
     106: aload_1
     107: aload_3
     108: iload         4
     110: invokespecial #69                 // Method com/mongodb/operation/AsyncQueryBatchCursor$QueryResultSingleResultCallback."<init>":(Lcom/mongodb/operation/AsyncQueryBatchCursor;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/async/SingleResultCallback;Z)V
     113: invokeinterface #70,  7           // InterfaceMethod com/mongodb/connection/AsyncConnection.getMoreAsync:(Lcom/mongodb/MongoNamespace;JILorg/bson/codecs/Decoder;Lcom/mongodb/async/SingleResultCallback;)V
     118: return

  private org.bson.BsonDocument asGetMoreCommandDocument(long);
    Code:
       0: new           #71                 // class org/bson/BsonDocument
       3: dup
       4: ldc           #72                 // String getMore
       6: new           #73                 // class org/bson/BsonInt64
       9: dup
      10: lload_1
      11: invokespecial #74                 // Method org/bson/BsonInt64."<init>":(J)V
      14: invokespecial #75                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      17: ldc           #76                 // String collection
      19: new           #77                 // class org/bson/BsonString
      22: dup
      23: aload_0
      24: getfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      27: invokevirtual #78                 // Method com/mongodb/MongoNamespace.getCollectionName:()Ljava/lang/String;
      30: invokespecial #79                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      33: invokevirtual #80                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      36: astore_3
      37: aload_0
      38: getfield      #15                 // Field limit:I
      41: aload_0
      42: getfield      #16                 // Field batchSize:I
      45: aload_0
      46: getfield      #25                 // Field count:I
      49: invokestatic  #67                 // Method com/mongodb/operation/CursorHelper.getNumberToReturn:(III)I
      52: invokestatic  #50                 // Method java/lang/Math.abs:(I)I
      55: istore        4
      57: iload         4
      59: ifeq          78
      62: aload_3
      63: ldc           #81                 // String batchSize
      65: new           #82                 // class org/bson/BsonInt32
      68: dup
      69: iload         4
      71: invokespecial #83                 // Method org/bson/BsonInt32."<init>":(I)V
      74: invokevirtual #80                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      77: pop
      78: aload_0
      79: getfield      #11                 // Field maxTimeMS:J
      82: lconst_0
      83: lcmp
      84: ifeq          105
      87: aload_3
      88: ldc           #84                 // String maxTimeMS
      90: new           #73                 // class org/bson/BsonInt64
      93: dup
      94: aload_0
      95: getfield      #11                 // Field maxTimeMS:J
      98: invokespecial #74                 // Method org/bson/BsonInt64."<init>":(J)V
     101: invokevirtual #80                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
     104: pop
     105: aload_3
     106: areturn

  private void killCursorOnClose();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getServerCursor:()Lcom/mongodb/ServerCursor;
       4: astore_1
       5: aload_1
       6: ifnull        27
       9: aload_0
      10: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
      13: new           #85                 // class com/mongodb/operation/AsyncQueryBatchCursor$2
      16: dup
      17: aload_0
      18: aload_1
      19: invokespecial #86                 // Method com/mongodb/operation/AsyncQueryBatchCursor$2."<init>":(Lcom/mongodb/operation/AsyncQueryBatchCursor;Lcom/mongodb/ServerCursor;)V
      22: invokeinterface #53,  2           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getConnection:(Lcom/mongodb/async/SingleResultCallback;)V
      27: return

  private void killCursor(com.mongodb.connection.AsyncConnection);
    Code:
       0: aload_0
       1: getfield      #21                 // Field cursor:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #87                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #88                 // class com/mongodb/ServerCursor
      11: astore_2
      12: aload_2
      13: ifnull        30
      16: aload_0
      17: aload_1
      18: invokeinterface #89,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.retain:()Lcom/mongodb/connection/AsyncConnection;
      23: aload_2
      24: invokespecial #2                  // Method killCursorAsynchronouslyAndReleaseConnectionAndSource:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ServerCursor;)V
      27: goto          39
      30: aload_0
      31: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
      34: invokeinterface #90,  1           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.release:()V
      39: return

  private void killCursorAsynchronouslyAndReleaseConnectionAndSource(com.mongodb.connection.AsyncConnection, com.mongodb.ServerCursor);
    Code:
       0: aload_1
       1: invokeinterface #54,  1           // InterfaceMethod com/mongodb/connection/AsyncConnection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       6: invokestatic  #55                 // Method com/mongodb/operation/OperationHelper.serverIsAtLeastVersionThreeDotTwo:(Lcom/mongodb/connection/ConnectionDescription;)Z
       9: ifeq          64
      12: aload_1
      13: aload_0
      14: getfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      17: invokevirtual #56                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: invokespecial #91                 // Method asKillCursorsCommandDocument:(Lcom/mongodb/ServerCursor;)Lorg/bson/BsonDocument;
      25: getstatic     #59                 // Field NO_OP_FIELD_NAME_VALIDATOR:Lorg/bson/FieldNameValidator;
      28: invokestatic  #60                 // Method com/mongodb/ReadPreference.primary:()Lcom/mongodb/ReadPreference;
      31: new           #92                 // class org/bson/codecs/BsonDocumentCodec
      34: dup
      35: invokespecial #93                 // Method org/bson/codecs/BsonDocumentCodec."<init>":()V
      38: aload_0
      39: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
      42: invokeinterface #63,  1           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.getSessionContext:()Lcom/mongodb/session/SessionContext;
      47: new           #94                 // class com/mongodb/operation/AsyncQueryBatchCursor$3
      50: dup
      51: aload_0
      52: aload_1
      53: invokespecial #95                 // Method com/mongodb/operation/AsyncQueryBatchCursor$3."<init>":(Lcom/mongodb/operation/AsyncQueryBatchCursor;Lcom/mongodb/connection/AsyncConnection;)V
      56: invokeinterface #66,  8           // InterfaceMethod com/mongodb/connection/AsyncConnection.commandAsync:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;Lcom/mongodb/async/SingleResultCallback;)V
      61: goto          93
      64: aload_1
      65: aload_0
      66: getfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      69: aload_2
      70: invokevirtual #57                 // Method com/mongodb/ServerCursor.getId:()J
      73: invokestatic  #96                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      76: invokestatic  #97                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      79: new           #98                 // class com/mongodb/operation/AsyncQueryBatchCursor$4
      82: dup
      83: aload_0
      84: aload_1
      85: invokespecial #99                 // Method com/mongodb/operation/AsyncQueryBatchCursor$4."<init>":(Lcom/mongodb/operation/AsyncQueryBatchCursor;Lcom/mongodb/connection/AsyncConnection;)V
      88: invokeinterface #100,  4          // InterfaceMethod com/mongodb/connection/AsyncConnection.killCursorAsync:(Lcom/mongodb/MongoNamespace;Ljava/util/List;Lcom/mongodb/async/SingleResultCallback;)V
      93: return

  private org.bson.BsonDocument asKillCursorsCommandDocument(com.mongodb.ServerCursor);
    Code:
       0: new           #71                 // class org/bson/BsonDocument
       3: dup
       4: ldc           #101                // String killCursors
       6: new           #77                 // class org/bson/BsonString
       9: dup
      10: aload_0
      11: getfield      #13                 // Field namespace:Lcom/mongodb/MongoNamespace;
      14: invokevirtual #78                 // Method com/mongodb/MongoNamespace.getCollectionName:()Ljava/lang/String;
      17: invokespecial #79                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      20: invokespecial #75                 // Method org/bson/BsonDocument."<init>":(Ljava/lang/String;Lorg/bson/BsonValue;)V
      23: ldc           #102                // String cursors
      25: new           #103                // class org/bson/BsonArray
      28: dup
      29: new           #73                 // class org/bson/BsonInt64
      32: dup
      33: aload_1
      34: invokevirtual #57                 // Method com/mongodb/ServerCursor.getId:()J
      37: invokespecial #74                 // Method org/bson/BsonInt64."<init>":(J)V
      40: invokestatic  #97                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      43: invokespecial #104                // Method org/bson/BsonArray."<init>":(Ljava/util/List;)V
      46: invokevirtual #80                 // Method org/bson/BsonDocument.append:(Ljava/lang/String;Lorg/bson/BsonValue;)Lorg/bson/BsonDocument;
      49: areturn

  private void handleGetMoreQueryResult(com.mongodb.connection.AsyncConnection, com.mongodb.async.SingleResultCallback<java.util.List<T>>, com.mongodb.connection.QueryResult<T>, boolean);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isClosed:()Z
       4: ifeq          52
       7: aload_1
       8: invokeinterface #105,  1          // InterfaceMethod com/mongodb/connection/AsyncConnection.release:()V
      13: aload_2
      14: aconst_null
      15: new           #38                 // class com/mongodb/MongoException
      18: dup
      19: ldc           #106                // String The cursor was closed before %s completed.
      21: iconst_1
      22: anewarray     #40                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload         4
      29: ifeq          37
      32: ldc           #41                 // String tryNext()
      34: goto          39
      37: ldc           #42                 // String next()
      39: aastore
      40: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: invokespecial #44                 // Method com/mongodb/MongoException."<init>":(Ljava/lang/String;)V
      46: invokeinterface #45,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: return
      52: aload_0
      53: getfield      #21                 // Field cursor:Ljava/util/concurrent/atomic/AtomicReference;
      56: aload_3
      57: invokevirtual #19                 // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
      60: invokevirtual #87                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: iload         4
      66: ifne          103
      69: aload_3
      70: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
      73: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      78: ifeq          103
      81: aload_3
      82: invokevirtual #19                 // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
      85: ifnull        103
      88: aload_0
      89: aload_1
      90: aload_3
      91: invokevirtual #19                 // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
      94: aload_2
      95: iload         4
      97: invokespecial #4                  // Method getMore:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ServerCursor;Lcom/mongodb/async/SingleResultCallback;Z)V
     100: goto          198
     103: aload_0
     104: dup
     105: getfield      #25                 // Field count:I
     108: aload_3
     109: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
     112: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
     117: iadd
     118: putfield      #25                 // Field count:I
     121: aload_0
     122: invokespecial #29                 // Method limitReached:()Z
     125: ifeq          142
     128: aload_0
     129: aload_1
     130: invokespecial #30                 // Method killCursor:(Lcom/mongodb/connection/AsyncConnection;)V
     133: aload_1
     134: invokeinterface #105,  1          // InterfaceMethod com/mongodb/connection/AsyncConnection.release:()V
     139: goto          164
     142: aload_1
     143: invokeinterface #105,  1          // InterfaceMethod com/mongodb/connection/AsyncConnection.release:()V
     148: aload_3
     149: invokevirtual #19                 // Method com/mongodb/connection/QueryResult.getCursor:()Lcom/mongodb/ServerCursor;
     152: ifnonnull     164
     155: aload_0
     156: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
     159: invokeinterface #90,  1           // InterfaceMethod com/mongodb/binding/AsyncConnectionSource.release:()V
     164: aload_3
     165: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
     168: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     173: ifeq          187
     176: aload_2
     177: aconst_null
     178: aconst_null
     179: invokeinterface #45,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     184: goto          198
     187: aload_2
     188: aload_3
     189: invokevirtual #26                 // Method com/mongodb/connection/QueryResult.getResults:()Ljava/util/List;
     192: aconst_null
     193: invokeinterface #45,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     198: return

  com.mongodb.ServerCursor getServerCursor();
    Code:
       0: aload_0
       1: getfield      #21                 // Field cursor:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #107                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #88                 // class com/mongodb/ServerCursor
      10: areturn

  static void access$000(com.mongodb.operation.AsyncQueryBatchCursor, com.mongodb.connection.AsyncConnection, com.mongodb.ServerCursor, com.mongodb.async.SingleResultCallback, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #4                  // Method getMore:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ServerCursor;Lcom/mongodb/async/SingleResultCallback;Z)V
       9: return

  static com.mongodb.binding.AsyncConnectionSource access$100(com.mongodb.operation.AsyncQueryBatchCursor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionSource:Lcom/mongodb/binding/AsyncConnectionSource;
       4: areturn

  static void access$200(com.mongodb.operation.AsyncQueryBatchCursor, com.mongodb.connection.AsyncConnection, com.mongodb.ServerCursor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method killCursorAsynchronouslyAndReleaseConnectionAndSource:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/ServerCursor;)V
       6: return

  static void access$300(com.mongodb.operation.AsyncQueryBatchCursor, com.mongodb.connection.AsyncConnection, com.mongodb.async.SingleResultCallback, com.mongodb.connection.QueryResult, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #1                  // Method handleGetMoreQueryResult:(Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/connection/QueryResult;Z)V
       9: return

  static {};
    Code:
       0: new           #108                // class com/mongodb/internal/validator/NoOpFieldNameValidator
       3: dup
       4: invokespecial #109                // Method com/mongodb/internal/validator/NoOpFieldNameValidator."<init>":()V
       7: putstatic     #59                 // Field NO_OP_FIELD_NAME_VALIDATOR:Lorg/bson/FieldNameValidator;
      10: return
}
