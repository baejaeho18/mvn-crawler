Compiled from "ConcurrentLinkedDeque.java"
public class com.mongodb.internal.connection.ConcurrentLinkedDeque<E> extends java.util.AbstractCollection<E> implements java.util.Deque<E>, java.io.Serializable {
  private static final long serialVersionUID;

  private final com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> header;

  private final com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<E> trailer;

  private static boolean usable(com.mongodb.internal.connection.ConcurrentLinkedDeque$Node<?>);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokevirtual #2                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.isSpecial:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static void checkNotNull(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     12
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #4                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: return

  private E screenNullResult(E);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #5                  // class java/util/NoSuchElementException
       7: dup
       8: invokespecial #6                  // Method java/util/NoSuchElementException."<init>":()V
      11: athrow
      12: aload_1
      13: areturn

  private java.util.ArrayList<E> toArrayList();
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      12: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      15: astore_2
      16: aload_2
      17: ifnull        37
      20: aload_1
      21: aload_2
      22: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      25: invokevirtual #11                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      28: pop
      29: aload_2
      30: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      33: astore_2
      34: goto          16
      37: aload_1
      38: areturn

  public com.mongodb.internal.connection.ConcurrentLinkedDeque();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/util/AbstractCollection."<init>":()V
       4: new           #13                 // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
       7: dup
       8: aconst_null
       9: aconst_null
      10: aconst_null
      11: invokespecial #14                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node."<init>":(Ljava/lang/Object;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      14: astore_1
      15: new           #13                 // class com/mongodb/internal/connection/ConcurrentLinkedDeque$Node
      18: dup
      19: aconst_null
      20: aconst_null
      21: aload_1
      22: invokespecial #14                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node."<init>":(Ljava/lang/Object;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      25: astore_2
      26: aload_1
      27: aload_2
      28: invokevirtual #15                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.setNext:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)V
      31: aload_0
      32: aload_1
      33: putfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      36: aload_0
      37: aload_2
      38: putfield      #16                 // Field trailer:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      41: return

  public com.mongodb.internal.connection.ConcurrentLinkedDeque(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #18                 // Method addAll:(Ljava/util/Collection;)Z
       9: pop
      10: return

  public void addFirst(E);
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       8: aload_1
       9: invokevirtual #20                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.append:(Ljava/lang/Object;)Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      12: ifnonnull     18
      15: goto          4
      18: return

  public void addLast(E);
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #16                 // Field trailer:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       8: aload_1
       9: invokevirtual #21                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.prepend:(Ljava/lang/Object;)Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      12: ifnonnull     18
      15: goto          4
      18: return

  public boolean offerFirst(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method addFirst:(Ljava/lang/Object;)V
       5: iconst_1
       6: ireturn

  public boolean offerLast(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method addLast:(Ljava/lang/Object;)V
       5: iconst_1
       6: ireturn

  public E peekFirst();
    Code:
       0: aload_0
       1: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: invokevirtual #24                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      20: areturn

  public E peekLast();
    Code:
       0: aload_0
       1: getfield      #16                 // Field trailer:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: invokevirtual #25                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.predecessor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       7: astore_1
       8: aload_1
       9: ifnonnull     16
      12: aconst_null
      13: goto          20
      16: aload_1
      17: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      20: areturn

  public E getFirst();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method peekFirst:()Ljava/lang/Object;
       5: invokespecial #27                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public E getLast();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #28                 // Method peekLast:()Ljava/lang/Object;
       5: invokespecial #27                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public E pollFirst();
    Code:
       0: aload_0
       1: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: invokevirtual #24                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       7: astore_1
       8: aload_1
       9: invokestatic  #29                 // Method usable:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokevirtual #30                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.delete:()Z
      21: ifeq          29
      24: aload_1
      25: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      28: areturn
      29: goto          0

  public E pollLast();
    Code:
       0: aload_0
       1: getfield      #16                 // Field trailer:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: invokevirtual #25                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.predecessor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       7: astore_1
       8: aload_1
       9: invokestatic  #29                 // Method usable:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokevirtual #30                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.delete:()Z
      21: ifeq          29
      24: aload_1
      25: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      28: areturn
      29: goto          0

  public E removeFirst();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #31                 // Method pollFirst:()Ljava/lang/Object;
       5: invokespecial #27                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public E removeLast();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #32                 // Method pollLast:()Ljava/lang/Object;
       5: invokespecial #27                 // Method screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean offer(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method offerLast:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean add(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method offerLast:(Ljava/lang/Object;)Z
       5: ireturn

  public E poll();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method pollFirst:()Ljava/lang/Object;
       4: areturn

  public E remove();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method removeFirst:()Ljava/lang/Object;
       4: areturn

  public E peek();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method peekFirst:()Ljava/lang/Object;
       4: areturn

  public E element();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getFirst:()Ljava/lang/Object;
       4: areturn

  public void push(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method addFirst:(Ljava/lang/Object;)V
       5: return

  public E pop();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method removeFirst:()Ljava/lang/Object;
       4: areturn

  public boolean removeFirstOccurrence(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       8: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: aload_2
      20: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      23: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          38
      29: aload_2
      30: invokevirtual #30                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.delete:()Z
      33: ifeq          46
      36: iconst_1
      37: ireturn
      38: aload_2
      39: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      42: astore_2
      43: goto          12
      46: goto          4

  public boolean removeLastOccurrence(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #19                 // Method checkNotNull:(Ljava/lang/Object;)V
       4: aload_0
       5: getfield      #16                 // Field trailer:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       8: astore_2
       9: aload_2
      10: invokevirtual #37                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.back:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      13: astore_3
      14: aload_2
      15: invokevirtual #38                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.isDeleted:()Z
      18: ifne          67
      21: aload_3
      22: ifnull        36
      25: aload_3
      26: invokevirtual #24                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      29: aload_2
      30: if_acmpeq     36
      33: goto          67
      36: aload_3
      37: ifnonnull     42
      40: iconst_0
      41: ireturn
      42: aload_1
      43: aload_3
      44: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      47: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          62
      53: aload_3
      54: invokevirtual #30                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.delete:()Z
      57: ifeq          67
      60: iconst_1
      61: ireturn
      62: aload_3
      63: astore_2
      64: goto          9
      67: goto          4

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      10: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      13: astore_2
      14: aload_2
      15: ifnull        39
      18: aload_1
      19: aload_2
      20: getfield      #10                 // Field com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.element:Ljava/lang/Object;
      23: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: aload_2
      32: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      35: astore_2
      36: goto          14
      39: iconst_0
      40: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: invokevirtual #24                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.successor:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       7: invokestatic  #29                 // Method usable:(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public int size();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       6: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       9: astore_3
      10: aload_3
      11: ifnull        26
      14: lload_1
      15: lconst_1
      16: ladd
      17: lstore_1
      18: aload_3
      19: invokevirtual #9                  // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$Node.forward:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
      22: astore_3
      23: goto          10
      26: lload_1
      27: ldc2_w        #40                 // long 2147483647l
      30: lcmp
      31: iflt          39
      34: ldc           #42                 // int 2147483647
      36: goto          41
      39: lload_1
      40: l2i
      41: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method removeFirstOccurrence:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_1
       1: invokeinterface #44,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: aload_2
      20: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: invokevirtual #23                 // Method addLast:(Ljava/lang/Object;)V
      28: aload_2
      29: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifne          18
      37: iconst_1
      38: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method pollFirst:()Ljava/lang/Object;
       4: ifnull        10
       7: goto          0
      10: return

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method toArrayList:()Ljava/util/ArrayList;
       4: invokevirtual #48                 // Method java/util/ArrayList.toArray:()[Ljava/lang/Object;
       7: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method toArrayList:()Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #49                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
       8: areturn

  public com.mongodb.internal.connection.ConcurrentLinkedDeque$RemovalReportingIterator<E> iterator();
    Code:
       0: new           #50                 // class com/mongodb/internal/connection/ConcurrentLinkedDeque$CLDIterator
       3: dup
       4: aload_0
       5: invokespecial #51                 // Method com/mongodb/internal/connection/ConcurrentLinkedDeque$CLDIterator."<init>":(Lcom/mongodb/internal/connection/ConcurrentLinkedDeque;)V
       8: areturn

  public java.util.Iterator<E> descendingIterator();
    Code:
       0: new           #52                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #53                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method iterator:()Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$RemovalReportingIterator;
       4: areturn

  static com.mongodb.internal.connection.ConcurrentLinkedDeque$Node access$000(com.mongodb.internal.connection.ConcurrentLinkedDeque);
    Code:
       0: aload_0
       1: getfield      #1                  // Field header:Lcom/mongodb/internal/connection/ConcurrentLinkedDeque$Node;
       4: areturn
}
