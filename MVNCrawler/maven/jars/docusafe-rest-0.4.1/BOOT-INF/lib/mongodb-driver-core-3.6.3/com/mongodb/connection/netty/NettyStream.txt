Compiled from "NettyStream.java"
final class com.mongodb.connection.netty.NettyStream implements com.mongodb.connection.Stream {
  private static final java.lang.String READ_HANDLER_NAME;

  private final com.mongodb.ServerAddress address;

  private final com.mongodb.connection.SocketSettings settings;

  private final com.mongodb.connection.SslSettings sslSettings;

  private final io.netty.channel.EventLoopGroup workerGroup;

  private final java.lang.Class<? extends io.netty.channel.socket.SocketChannel> socketChannelClass;

  private final io.netty.buffer.ByteBufAllocator allocator;

  private volatile boolean isClosed;

  private volatile io.netty.channel.Channel channel;

  private final java.util.LinkedList<io.netty.buffer.ByteBuf> pendingInboundBuffers;

  private volatile com.mongodb.connection.netty.NettyStream$PendingReader pendingReader;

  private volatile java.lang.Throwable pendingException;

  com.mongodb.connection.netty.NettyStream(com.mongodb.ServerAddress, com.mongodb.connection.SocketSettings, com.mongodb.connection.SslSettings, io.netty.channel.EventLoopGroup, java.lang.Class<? extends io.netty.channel.socket.SocketChannel>, io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/LinkedList
       8: dup
       9: invokespecial #9                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #10                 // Field pendingInboundBuffers:Ljava/util/LinkedList;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field address:Lcom/mongodb/ServerAddress;
      20: aload_0
      21: aload_2
      22: putfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      25: aload_0
      26: aload_3
      27: putfield      #6                  // Field sslSettings:Lcom/mongodb/connection/SslSettings;
      30: aload_0
      31: aload         4
      33: putfield      #11                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
      36: aload_0
      37: aload         5
      39: putfield      #12                 // Field socketChannelClass:Ljava/lang/Class;
      42: aload_0
      43: aload         6
      45: putfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
      48: return

  public org.bson.ByteBuf getBuffer(int);
    Code:
       0: new           #14                 // class com/mongodb/connection/netty/NettyByteBuf
       3: dup
       4: aload_0
       5: getfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
       8: iload_1
       9: iload_1
      10: invokeinterface #15,  3           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(II)Lio/netty/buffer/ByteBuf;
      15: invokespecial #16                 // Method com/mongodb/connection/netty/NettyByteBuf."<init>":(Lio/netty/buffer/ByteBuf;)V
      18: areturn

  public void open() throws java.io.IOException;
    Code:
       0: new           #17                 // class com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler
       3: dup
       4: invokespecial #18                 // Method com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #19                 // Method openAsync:(Lcom/mongodb/connection/AsyncCompletionHandler;)V
      13: aload_1
      14: invokevirtual #20                 // Method com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler.get:()Ljava/lang/Object;
      17: pop
      18: return

  public void openAsync(com.mongodb.connection.AsyncCompletionHandler<java.lang.Void>);
    Code:
       0: new           #21                 // class io/netty/bootstrap/Bootstrap
       3: dup
       4: invokespecial #22                 // Method io/netty/bootstrap/Bootstrap."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #11                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
      13: invokevirtual #23                 // Method io/netty/bootstrap/Bootstrap.group:(Lio/netty/channel/EventLoopGroup;)Lio/netty/bootstrap/AbstractBootstrap;
      16: pop
      17: aload_2
      18: aload_0
      19: getfield      #12                 // Field socketChannelClass:Ljava/lang/Class;
      22: invokevirtual #24                 // Method io/netty/bootstrap/Bootstrap.channel:(Ljava/lang/Class;)Lio/netty/bootstrap/AbstractBootstrap;
      25: pop
      26: aload_2
      27: getstatic     #25                 // Field io/netty/channel/ChannelOption.CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
      30: aload_0
      31: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      34: getstatic     #26                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      37: invokevirtual #27                 // Method com/mongodb/connection/SocketSettings.getConnectTimeout:(Ljava/util/concurrent/TimeUnit;)I
      40: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokevirtual #29                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      46: pop
      47: aload_2
      48: getstatic     #30                 // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      51: iconst_1
      52: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      55: invokevirtual #29                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      58: pop
      59: aload_2
      60: getstatic     #32                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      63: aload_0
      64: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      67: invokevirtual #33                 // Method com/mongodb/connection/SocketSettings.isKeepAlive:()Z
      70: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      73: invokevirtual #29                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
      76: pop
      77: aload_0
      78: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      81: invokevirtual #34                 // Method com/mongodb/connection/SocketSettings.getReceiveBufferSize:()I
      84: ifle          105
      87: aload_2
      88: getstatic     #35                 // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      91: aload_0
      92: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
      95: invokevirtual #34                 // Method com/mongodb/connection/SocketSettings.getReceiveBufferSize:()I
      98: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     101: invokevirtual #29                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     104: pop
     105: aload_0
     106: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
     109: invokevirtual #36                 // Method com/mongodb/connection/SocketSettings.getSendBufferSize:()I
     112: ifle          133
     115: aload_2
     116: getstatic     #37                 // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
     119: aload_0
     120: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
     123: invokevirtual #36                 // Method com/mongodb/connection/SocketSettings.getSendBufferSize:()I
     126: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     129: invokevirtual #29                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     132: pop
     133: aload_2
     134: getstatic     #38                 // Field io/netty/channel/ChannelOption.ALLOCATOR:Lio/netty/channel/ChannelOption;
     137: aload_0
     138: getfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
     141: invokevirtual #29                 // Method io/netty/bootstrap/Bootstrap.option:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Lio/netty/bootstrap/AbstractBootstrap;
     144: pop
     145: aload_2
     146: new           #39                 // class com/mongodb/connection/netty/NettyStream$1
     149: dup
     150: aload_0
     151: invokespecial #40                 // Method com/mongodb/connection/netty/NettyStream$1."<init>":(Lcom/mongodb/connection/netty/NettyStream;)V
     154: invokevirtual #41                 // Method io/netty/bootstrap/Bootstrap.handler:(Lio/netty/channel/ChannelHandler;)Lio/netty/bootstrap/AbstractBootstrap;
     157: pop
     158: aload_2
     159: aload_0
     160: getfield      #5                  // Field address:Lcom/mongodb/ServerAddress;
     163: invokevirtual #42                 // Method com/mongodb/ServerAddress.getHost:()Ljava/lang/String;
     166: aload_0
     167: getfield      #5                  // Field address:Lcom/mongodb/ServerAddress;
     170: invokevirtual #43                 // Method com/mongodb/ServerAddress.getPort:()I
     173: invokevirtual #44                 // Method io/netty/bootstrap/Bootstrap.connect:(Ljava/lang/String;I)Lio/netty/channel/ChannelFuture;
     176: astore_3
     177: aload_3
     178: new           #45                 // class com/mongodb/connection/netty/NettyStream$2
     181: dup
     182: aload_0
     183: aload_3
     184: aload_1
     185: invokespecial #46                 // Method com/mongodb/connection/netty/NettyStream$2."<init>":(Lcom/mongodb/connection/netty/NettyStream;Lio/netty/channel/ChannelFuture;Lcom/mongodb/connection/AsyncCompletionHandler;)V
     188: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     193: pop
     194: return

  public void write(java.util.List<org.bson.ByteBuf>) throws java.io.IOException;
    Code:
       0: new           #17                 // class com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler
       3: dup
       4: invokespecial #18                 // Method com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #48                 // Method writeAsync:(Ljava/util/List;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      14: aload_2
      15: invokevirtual #20                 // Method com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler.get:()Ljava/lang/Object;
      18: pop
      19: return

  public org.bson.ByteBuf read(int) throws java.io.IOException;
    Code:
       0: new           #17                 // class com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler
       3: dup
       4: invokespecial #18                 // Method com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler."<init>":()V
       7: astore_2
       8: aload_0
       9: iload_1
      10: aload_2
      11: invokevirtual #49                 // Method readAsync:(ILcom/mongodb/connection/AsyncCompletionHandler;)V
      14: aload_2
      15: invokevirtual #20                 // Method com/mongodb/connection/netty/NettyStream$FutureAsyncCompletionHandler.get:()Ljava/lang/Object;
      18: checkcast     #50                 // class org/bson/ByteBuf
      21: areturn

  public void writeAsync(java.util.List<org.bson.ByteBuf>, com.mongodb.connection.AsyncCompletionHandler<java.lang.Void>);
    Code:
       0: getstatic     #51                 // Field io/netty/buffer/PooledByteBufAllocator.DEFAULT:Lio/netty/buffer/PooledByteBufAllocator;
       3: invokevirtual #52                 // Method io/netty/buffer/PooledByteBufAllocator.compositeBuffer:()Lio/netty/buffer/CompositeByteBuf;
       6: astore_3
       7: aload_1
       8: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          54
      25: aload         4
      27: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #50                 // class org/bson/ByteBuf
      35: astore        5
      37: aload_3
      38: iconst_1
      39: aload         5
      41: checkcast     #14                 // class com/mongodb/connection/netty/NettyByteBuf
      44: invokevirtual #56                 // Method com/mongodb/connection/netty/NettyByteBuf.asByteBuf:()Lio/netty/buffer/ByteBuf;
      47: invokevirtual #57                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(ZLio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
      50: pop
      51: goto          15
      54: aload_0
      55: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      58: aload_3
      59: invokeinterface #58,  2           // InterfaceMethod io/netty/channel/Channel.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      64: new           #59                 // class com/mongodb/connection/netty/NettyStream$3
      67: dup
      68: aload_0
      69: aload_2
      70: invokespecial #60                 // Method com/mongodb/connection/netty/NettyStream$3."<init>":(Lcom/mongodb/connection/netty/NettyStream;Lcom/mongodb/connection/AsyncCompletionHandler;)V
      73: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      78: pop
      79: return

  public void readAsync(int, com.mongodb.connection.AsyncCompletionHandler<org.bson.ByteBuf>);
    Code:
       0: aload_0
       1: invokespecial #61                 // Method scheduleReadTimeout:()V
       4: aconst_null
       5: astore_3
       6: aconst_null
       7: astore        4
       9: aload_0
      10: dup
      11: astore        5
      13: monitorenter
      14: aload_0
      15: getfield      #62                 // Field pendingException:Ljava/lang/Throwable;
      18: astore        4
      20: aload         4
      22: ifnonnull     206
      25: aload_0
      26: iload_1
      27: invokespecial #63                 // Method hasBytesAvailable:(I)Z
      30: ifne          50
      33: aload_0
      34: new           #64                 // class com/mongodb/connection/netty/NettyStream$PendingReader
      37: dup
      38: iload_1
      39: aload_2
      40: aconst_null
      41: invokespecial #65                 // Method com/mongodb/connection/netty/NettyStream$PendingReader."<init>":(ILcom/mongodb/connection/AsyncCompletionHandler;Lcom/mongodb/connection/netty/NettyStream$1;)V
      44: putfield      #66                 // Field pendingReader:Lcom/mongodb/connection/netty/NettyStream$PendingReader;
      47: goto          206
      50: aload_0
      51: getfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
      54: aload_0
      55: getfield      #10                 // Field pendingInboundBuffers:Ljava/util/LinkedList;
      58: invokevirtual #67                 // Method java/util/LinkedList.size:()I
      61: invokeinterface #68,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.compositeBuffer:(I)Lio/netty/buffer/CompositeByteBuf;
      66: astore        6
      68: iload_1
      69: istore        7
      71: aload_0
      72: getfield      #10                 // Field pendingInboundBuffers:Ljava/util/LinkedList;
      75: invokevirtual #69                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      78: astore        8
      80: aload         8
      82: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          193
      90: aload         8
      92: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #70                 // class io/netty/buffer/ByteBuf
     100: astore        9
     102: aload         9
     104: invokevirtual #71                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     107: iload         7
     109: invokestatic  #72                 // Method java/lang/Math.min:(II)I
     112: istore        10
     114: iload         10
     116: aload         9
     118: invokevirtual #71                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     121: if_icmpne     142
     124: aload         6
     126: aload         9
     128: invokevirtual #73                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
     131: pop
     132: aload         8
     134: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.remove:()V
     139: goto          161
     142: aload         9
     144: invokevirtual #75                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
     147: pop
     148: aload         6
     150: aload         9
     152: iload         10
     154: invokevirtual #76                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
     157: invokevirtual #73                 // Method io/netty/buffer/CompositeByteBuf.addComponent:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/CompositeByteBuf;
     160: pop
     161: aload         6
     163: aload         6
     165: invokevirtual #77                 // Method io/netty/buffer/CompositeByteBuf.writerIndex:()I
     168: iload         10
     170: iadd
     171: invokevirtual #78                 // Method io/netty/buffer/CompositeByteBuf.writerIndex:(I)Lio/netty/buffer/CompositeByteBuf;
     174: pop
     175: iload         7
     177: iload         10
     179: isub
     180: istore        7
     182: iload         7
     184: ifne          190
     187: goto          193
     190: goto          80
     193: new           #14                 // class com/mongodb/connection/netty/NettyByteBuf
     196: dup
     197: aload         6
     199: invokespecial #16                 // Method com/mongodb/connection/netty/NettyByteBuf."<init>":(Lio/netty/buffer/ByteBuf;)V
     202: invokevirtual #79                 // Method com/mongodb/connection/netty/NettyByteBuf.flip:()Lorg/bson/ByteBuf;
     205: astore_3
     206: aload         5
     208: monitorexit
     209: goto          220
     212: astore        11
     214: aload         5
     216: monitorexit
     217: aload         11
     219: athrow
     220: aload         4
     222: ifnull        237
     225: aload_0
     226: invokespecial #80                 // Method disableReadTimeout:()V
     229: aload_2
     230: aload         4
     232: invokeinterface #81,  2           // InterfaceMethod com/mongodb/connection/AsyncCompletionHandler.failed:(Ljava/lang/Throwable;)V
     237: aload_3
     238: ifnull        252
     241: aload_0
     242: invokespecial #80                 // Method disableReadTimeout:()V
     245: aload_2
     246: aload_3
     247: invokeinterface #82,  2           // InterfaceMethod com/mongodb/connection/AsyncCompletionHandler.completed:(Ljava/lang/Object;)V
     252: return
    Exception table:
       from    to  target type
          14   209   212   any
         212   217   212   any

  private boolean hasBytesAvailable(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #10                 // Field pendingInboundBuffers:Ljava/util/LinkedList;
       6: invokevirtual #69                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          48
      19: aload_3
      20: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #70                 // class io/netty/buffer/ByteBuf
      28: astore        4
      30: iload_2
      31: aload         4
      33: invokevirtual #71                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      36: iadd
      37: istore_2
      38: iload_2
      39: iload_1
      40: if_icmplt     45
      43: iconst_1
      44: ireturn
      45: goto          10
      48: iconst_0
      49: ireturn

  private void handleReadResponse(io.netty.buffer.ByteBuf, java.lang.Throwable);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: dup
       4: astore        4
       6: monitorenter
       7: aload_1
       8: ifnull        26
      11: aload_0
      12: getfield      #10                 // Field pendingInboundBuffers:Ljava/util/LinkedList;
      15: aload_1
      16: invokevirtual #75                 // Method io/netty/buffer/ByteBuf.retain:()Lio/netty/buffer/ByteBuf;
      19: invokevirtual #83                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      22: pop
      23: goto          31
      26: aload_0
      27: aload_2
      28: putfield      #62                 // Field pendingException:Ljava/lang/Throwable;
      31: aload_0
      32: getfield      #66                 // Field pendingReader:Lcom/mongodb/connection/netty/NettyStream$PendingReader;
      35: ifnull        48
      38: aload_0
      39: getfield      #66                 // Field pendingReader:Lcom/mongodb/connection/netty/NettyStream$PendingReader;
      42: astore_3
      43: aload_0
      44: aconst_null
      45: putfield      #66                 // Field pendingReader:Lcom/mongodb/connection/netty/NettyStream$PendingReader;
      48: aload         4
      50: monitorexit
      51: goto          62
      54: astore        5
      56: aload         4
      58: monitorexit
      59: aload         5
      61: athrow
      62: aload_3
      63: ifnull        78
      66: aload_0
      67: aload_3
      68: invokestatic  #84                 // Method com/mongodb/connection/netty/NettyStream$PendingReader.access$800:(Lcom/mongodb/connection/netty/NettyStream$PendingReader;)I
      71: aload_3
      72: invokestatic  #85                 // Method com/mongodb/connection/netty/NettyStream$PendingReader.access$900:(Lcom/mongodb/connection/netty/NettyStream$PendingReader;)Lcom/mongodb/connection/AsyncCompletionHandler;
      75: invokevirtual #49                 // Method readAsync:(ILcom/mongodb/connection/AsyncCompletionHandler;)V
      78: return
    Exception table:
       from    to  target type
           7    51    54   any
          54    59    54   any

  public com.mongodb.ServerAddress getAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field address:Lcom/mongodb/ServerAddress;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #86                 // Field isClosed:Z
       5: aload_0
       6: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       9: ifnull        27
      12: aload_0
      13: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      16: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      21: pop
      22: aload_0
      23: aconst_null
      24: putfield      #2                  // Field channel:Lio/netty/channel/Channel;
      27: aload_0
      28: getfield      #10                 // Field pendingInboundBuffers:Ljava/util/LinkedList;
      31: invokevirtual #69                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      34: astore_1
      35: aload_1
      36: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          68
      44: aload_1
      45: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #70                 // class io/netty/buffer/ByteBuf
      53: astore_2
      54: aload_1
      55: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.remove:()V
      60: aload_2
      61: invokevirtual #88                 // Method io/netty/buffer/ByteBuf.release:()Z
      64: pop
      65: goto          35
      68: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #86                 // Field isClosed:Z
       4: ireturn

  public com.mongodb.connection.SocketSettings getSettings();
    Code:
       0: aload_0
       1: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
       4: areturn

  public com.mongodb.connection.SslSettings getSslSettings();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sslSettings:Lcom/mongodb/connection/SslSettings;
       4: areturn

  public io.netty.channel.EventLoopGroup getWorkerGroup();
    Code:
       0: aload_0
       1: getfield      #11                 // Field workerGroup:Lio/netty/channel/EventLoopGroup;
       4: areturn

  public java.lang.Class<? extends io.netty.channel.socket.SocketChannel> getSocketChannelClass();
    Code:
       0: aload_0
       1: getfield      #12                 // Field socketChannelClass:Ljava/lang/Class;
       4: areturn

  public io.netty.buffer.ByteBufAllocator getAllocator();
    Code:
       0: aload_0
       1: getfield      #13                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  private javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sslSettings:Lcom/mongodb/connection/SslSettings;
       4: invokevirtual #89                 // Method com/mongodb/connection/SslSettings.getContext:()Ljavax/net/ssl/SSLContext;
       7: ifnonnull     16
      10: invokestatic  #90                 // Method javax/net/ssl/SSLContext.getDefault:()Ljavax/net/ssl/SSLContext;
      13: goto          23
      16: aload_0
      17: getfield      #6                  // Field sslSettings:Lcom/mongodb/connection/SslSettings;
      20: invokevirtual #89                 // Method com/mongodb/connection/SslSettings.getContext:()Ljavax/net/ssl/SSLContext;
      23: areturn
      24: astore_1
      25: new           #92                 // class com/mongodb/MongoClientException
      28: dup
      29: ldc           #93                 // String Unable to create default SSLContext
      31: aload_1
      32: invokespecial #94                 // Method com/mongodb/MongoClientException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      35: athrow
    Exception table:
       from    to  target type
           0    23    24   Class java/security/NoSuchAlgorithmException

  private void scheduleReadTimeout();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #95                 // Method adjustTimeout:(Z)V
       5: return

  private void disableReadTimeout();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #95                 // Method adjustTimeout:(Z)V
       5: return

  private void adjustTimeout(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #96,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       9: ldc           #98                 // String ReadTimeoutHandler
      11: invokeinterface #99,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/String;)Lio/netty/channel/ChannelHandler;
      16: astore_2
      17: aload_2
      18: ifnull        135
      21: aload_2
      22: checkcast     #100                // class com/mongodb/connection/netty/ReadTimeoutHandler
      25: astore_3
      26: aload_0
      27: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      30: invokeinterface #96,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
      35: aload_2
      36: invokeinterface #101,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.context:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandlerContext;
      41: astore        4
      43: aload         4
      45: invokeinterface #102,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      50: astore        5
      52: iload_1
      53: ifeq          97
      56: aload         5
      58: invokeinterface #103,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      63: ifeq          75
      66: aload_3
      67: aload         4
      69: invokevirtual #104                // Method com/mongodb/connection/netty/ReadTimeoutHandler.removeTimeout:(Lio/netty/channel/ChannelHandlerContext;)V
      72: goto          135
      75: aload         5
      77: new           #105                // class com/mongodb/connection/netty/NettyStream$4
      80: dup
      81: aload_0
      82: aload_3
      83: aload         4
      85: invokespecial #106                // Method com/mongodb/connection/netty/NettyStream$4."<init>":(Lcom/mongodb/connection/netty/NettyStream;Lcom/mongodb/connection/netty/ReadTimeoutHandler;Lio/netty/channel/ChannelHandlerContext;)V
      88: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      93: pop
      94: goto          135
      97: aload         5
      99: invokeinterface #103,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
     104: ifeq          116
     107: aload_3
     108: aload         4
     110: invokevirtual #108                // Method com/mongodb/connection/netty/ReadTimeoutHandler.scheduleTimeout:(Lio/netty/channel/ChannelHandlerContext;)V
     113: goto          135
     116: aload         5
     118: new           #109                // class com/mongodb/connection/netty/NettyStream$5
     121: dup
     122: aload_0
     123: aload_3
     124: aload         4
     126: invokespecial #110                // Method com/mongodb/connection/netty/NettyStream$5."<init>":(Lcom/mongodb/connection/netty/NettyStream;Lcom/mongodb/connection/netty/ReadTimeoutHandler;Lio/netty/channel/ChannelHandlerContext;)V
     129: invokeinterface #107,  2          // InterfaceMethod io/netty/util/concurrent/EventExecutor.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
     134: pop
     135: return

  static com.mongodb.connection.SslSettings access$000(com.mongodb.connection.netty.NettyStream);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sslSettings:Lcom/mongodb/connection/SslSettings;
       4: areturn

  static com.mongodb.ServerAddress access$100(com.mongodb.connection.netty.NettyStream);
    Code:
       0: aload_0
       1: getfield      #5                  // Field address:Lcom/mongodb/ServerAddress;
       4: areturn

  static javax.net.ssl.SSLContext access$200(com.mongodb.connection.netty.NettyStream);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getSslContext:()Ljavax/net/ssl/SSLContext;
       4: areturn

  static com.mongodb.connection.SocketSettings access$300(com.mongodb.connection.netty.NettyStream);
    Code:
       0: aload_0
       1: getfield      #3                  // Field settings:Lcom/mongodb/connection/SocketSettings;
       4: areturn

  static io.netty.channel.Channel access$502(com.mongodb.connection.netty.NettyStream, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field channel:Lio/netty/channel/Channel;
       6: areturn

  static void access$600(com.mongodb.connection.netty.NettyStream, io.netty.buffer.ByteBuf, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method handleReadResponse:(Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;)V
       6: return

  static io.netty.channel.Channel access$500(com.mongodb.connection.netty.NettyStream);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: areturn
}
