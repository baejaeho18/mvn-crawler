Compiled from "BaseQueryMessage.java"
abstract class com.mongodb.connection.BaseQueryMessage extends com.mongodb.connection.LegacyMessage {
  private final int skip;

  private final int numberToReturn;

  private boolean tailableCursor;

  private boolean slaveOk;

  private boolean oplogReplay;

  private boolean noCursorTimeout;

  private boolean awaitData;

  private boolean partial;

  com.mongodb.connection.BaseQueryMessage(java.lang.String, int, int, com.mongodb.connection.MessageSettings);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field com/mongodb/connection/OpCode.OP_QUERY:Lcom/mongodb/connection/OpCode;
       5: aload         4
       7: invokespecial #2                  // Method com/mongodb/connection/LegacyMessage."<init>":(Ljava/lang/String;Lcom/mongodb/connection/OpCode;Lcom/mongodb/connection/MessageSettings;)V
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field skip:I
      15: aload_0
      16: iload_3
      17: putfield      #4                  // Field numberToReturn:I
      20: return

  public boolean isTailableCursor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field tailableCursor:Z
       4: ireturn

  public com.mongodb.connection.BaseQueryMessage tailableCursor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field tailableCursor:Z
       5: aload_0
       6: areturn

  public boolean isSlaveOk();
    Code:
       0: aload_0
       1: getfield      #6                  // Field slaveOk:Z
       4: ireturn

  public com.mongodb.connection.BaseQueryMessage slaveOk(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field slaveOk:Z
       5: aload_0
       6: areturn

  public boolean isOplogReplay();
    Code:
       0: aload_0
       1: getfield      #7                  // Field oplogReplay:Z
       4: ireturn

  public com.mongodb.connection.BaseQueryMessage oplogReplay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field oplogReplay:Z
       5: aload_0
       6: areturn

  public boolean isNoCursorTimeout();
    Code:
       0: aload_0
       1: getfield      #8                  // Field noCursorTimeout:Z
       4: ireturn

  public com.mongodb.connection.BaseQueryMessage noCursorTimeout(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field noCursorTimeout:Z
       5: aload_0
       6: areturn

  public boolean isAwaitData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field awaitData:Z
       4: ireturn

  public com.mongodb.connection.BaseQueryMessage awaitData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field awaitData:Z
       5: aload_0
       6: areturn

  public boolean isPartial();
    Code:
       0: aload_0
       1: getfield      #10                 // Field partial:Z
       4: ireturn

  public com.mongodb.connection.BaseQueryMessage partial(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field partial:Z
       5: aload_0
       6: areturn

  private int getCursorFlag();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #11                 // Method isTailableCursor:()Z
       6: ifeq          13
       9: iload_1
      10: iconst_2
      11: ior
      12: istore_1
      13: aload_0
      14: invokevirtual #12                 // Method isSlaveOk:()Z
      17: ifeq          24
      20: iload_1
      21: iconst_4
      22: ior
      23: istore_1
      24: aload_0
      25: invokevirtual #13                 // Method isOplogReplay:()Z
      28: ifeq          36
      31: iload_1
      32: bipush        8
      34: ior
      35: istore_1
      36: aload_0
      37: invokevirtual #14                 // Method isNoCursorTimeout:()Z
      40: ifeq          48
      43: iload_1
      44: bipush        16
      46: ior
      47: istore_1
      48: aload_0
      49: invokevirtual #15                 // Method isAwaitData:()Z
      52: ifeq          60
      55: iload_1
      56: bipush        32
      58: ior
      59: istore_1
      60: aload_0
      61: invokevirtual #16                 // Method isPartial:()Z
      64: ifeq          73
      67: iload_1
      68: sipush        128
      71: ior
      72: istore_1
      73: iload_1
      74: ireturn

  protected void writeQueryPrologue(org.bson.io.BsonOutput);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #17                 // Method getCursorFlag:()I
       5: invokeinterface #18,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      10: aload_1
      11: aload_0
      12: invokevirtual #19                 // Method getCollectionName:()Ljava/lang/String;
      15: invokeinterface #20,  2           // InterfaceMethod org/bson/io/BsonOutput.writeCString:(Ljava/lang/String;)V
      20: aload_1
      21: aload_0
      22: getfield      #3                  // Field skip:I
      25: invokeinterface #18,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      30: aload_1
      31: aload_0
      32: getfield      #4                  // Field numberToReturn:I
      35: invokeinterface #18,  2           // InterfaceMethod org/bson/io/BsonOutput.writeInt32:(I)V
      40: return
}
