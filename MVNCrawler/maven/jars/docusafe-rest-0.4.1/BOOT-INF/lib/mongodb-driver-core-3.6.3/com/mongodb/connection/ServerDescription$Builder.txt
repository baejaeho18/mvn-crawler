Compiled from "ServerDescription.java"
public class com.mongodb.connection.ServerDescription$Builder {
  private com.mongodb.ServerAddress address;

  private com.mongodb.connection.ServerType type;

  private java.lang.String canonicalAddress;

  private java.util.Set<java.lang.String> hosts;

  private java.util.Set<java.lang.String> passives;

  private java.util.Set<java.lang.String> arbiters;

  private java.lang.String primary;

  private int maxDocumentSize;

  private com.mongodb.TagSet tagSet;

  private java.lang.String setName;

  private long roundTripTimeNanos;

  private boolean ok;

  private com.mongodb.connection.ServerConnectionState state;

  private com.mongodb.connection.ServerVersion version;

  private int minWireVersion;

  private int maxWireVersion;

  private org.bson.types.ObjectId electionId;

  private java.lang.Integer setVersion;

  private java.util.Date lastWriteDate;

  private long lastUpdateTimeNanos;

  private java.lang.Integer logicalSessionTimeoutMinutes;

  private java.lang.Throwable exception;

  public com.mongodb.connection.ServerDescription$Builder();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #25                 // Field com/mongodb/connection/ServerType.UNKNOWN:Lcom/mongodb/connection/ServerType;
       8: putfield      #22                 // Field type:Lcom/mongodb/connection/ServerType;
      11: aload_0
      12: invokestatic  #26                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      15: putfield      #18                 // Field hosts:Ljava/util/Set;
      18: aload_0
      19: invokestatic  #26                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      22: putfield      #17                 // Field passives:Ljava/util/Set;
      25: aload_0
      26: invokestatic  #26                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      29: putfield      #16                 // Field arbiters:Ljava/util/Set;
      32: aload_0
      33: ldc           #27                 // int 16777216
      35: putfield      #14                 // Field maxDocumentSize:I
      38: aload_0
      39: new           #28                 // class com/mongodb/TagSet
      42: dup
      43: invokespecial #29                 // Method com/mongodb/TagSet."<init>":()V
      46: putfield      #13                 // Field tagSet:Lcom/mongodb/TagSet;
      49: aload_0
      50: new           #30                 // class com/mongodb/connection/ServerVersion
      53: dup
      54: invokespecial #31                 // Method com/mongodb/connection/ServerVersion."<init>":()V
      57: putfield      #20                 // Field version:Lcom/mongodb/connection/ServerVersion;
      60: aload_0
      61: iconst_0
      62: putfield      #9                  // Field minWireVersion:I
      65: aload_0
      66: iconst_0
      67: putfield      #8                  // Field maxWireVersion:I
      70: aload_0
      71: invokestatic  #32                 // Method com/mongodb/connection/Time.nanoTime:()J
      74: putfield      #4                  // Field lastUpdateTimeNanos:J
      77: return

  public com.mongodb.connection.ServerDescription$Builder address(com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field address:Lcom/mongodb/ServerAddress;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder canonicalAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field canonicalAddress:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder type(com.mongodb.connection.ServerType);
    Code:
       0: aload_0
       1: ldc           #33                 // String type
       3: aload_1
       4: invokestatic  #34                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class com/mongodb/connection/ServerType
      10: putfield      #22                 // Field type:Lcom/mongodb/connection/ServerType;
      13: aload_0
      14: areturn

  public com.mongodb.connection.ServerDescription$Builder hosts(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: invokestatic  #26                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: goto          22
      11: new           #36                 // class java/util/HashSet
      14: dup
      15: aload_1
      16: invokespecial #37                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: invokestatic  #38                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      22: putfield      #18                 // Field hosts:Ljava/util/Set;
      25: aload_0
      26: areturn

  public com.mongodb.connection.ServerDescription$Builder passives(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: invokestatic  #26                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: goto          22
      11: new           #36                 // class java/util/HashSet
      14: dup
      15: aload_1
      16: invokespecial #37                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: invokestatic  #38                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      22: putfield      #17                 // Field passives:Ljava/util/Set;
      25: aload_0
      26: areturn

  public com.mongodb.connection.ServerDescription$Builder arbiters(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: invokestatic  #26                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       8: goto          22
      11: new           #36                 // class java/util/HashSet
      14: dup
      15: aload_1
      16: invokespecial #37                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: invokestatic  #38                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      22: putfield      #16                 // Field arbiters:Ljava/util/Set;
      25: aload_0
      26: areturn

  public com.mongodb.connection.ServerDescription$Builder primary(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field primary:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder maxDocumentSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field maxDocumentSize:I
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder tagSet(com.mongodb.TagSet);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     15
       5: new           #28                 // class com/mongodb/TagSet
       8: dup
       9: invokespecial #29                 // Method com/mongodb/TagSet."<init>":()V
      12: goto          16
      15: aload_1
      16: putfield      #13                 // Field tagSet:Lcom/mongodb/TagSet;
      19: aload_0
      20: areturn

  public com.mongodb.connection.ServerDescription$Builder roundTripTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #39                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: putfield      #11                 // Field roundTripTimeNanos:J
       9: aload_0
      10: areturn

  public com.mongodb.connection.ServerDescription$Builder setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field setName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder ok(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field ok:Z
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder state(com.mongodb.connection.ServerConnectionState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field state:Lcom/mongodb/connection/ServerConnectionState;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder version(com.mongodb.connection.ServerVersion);
    Code:
       0: ldc           #40                 // String version
       2: aload_1
       3: invokestatic  #34                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #20                 // Field version:Lcom/mongodb/connection/ServerVersion;
      12: aload_0
      13: areturn

  public com.mongodb.connection.ServerDescription$Builder minWireVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field minWireVersion:I
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder maxWireVersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field maxWireVersion:I
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder electionId(org.bson.types.ObjectId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field electionId:Lorg/bson/types/ObjectId;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder setVersion(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field setVersion:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder lastWriteDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field lastWriteDate:Ljava/util/Date;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder lastUpdateTimeNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field lastUpdateTimeNanos:J
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder logicalSessionTimeoutMinutes(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field logicalSessionTimeoutMinutes:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription$Builder exception(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field exception:Ljava/lang/Throwable;
       5: aload_0
       6: areturn

  public com.mongodb.connection.ServerDescription build();
    Code:
       0: new           #1                  // class com/mongodb/connection/ServerDescription
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method com/mongodb/connection/ServerDescription."<init>":(Lcom/mongodb/connection/ServerDescription$Builder;)V
       8: areturn

  static com.mongodb.ServerAddress access$000(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #23                 // Field address:Lcom/mongodb/ServerAddress;
       4: areturn

  static com.mongodb.connection.ServerType access$100(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #22                 // Field type:Lcom/mongodb/connection/ServerType;
       4: areturn

  static com.mongodb.connection.ServerConnectionState access$200(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #21                 // Field state:Lcom/mongodb/connection/ServerConnectionState;
       4: areturn

  static com.mongodb.connection.ServerVersion access$300(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #20                 // Field version:Lcom/mongodb/connection/ServerVersion;
       4: areturn

  static java.lang.String access$400(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #19                 // Field canonicalAddress:Ljava/lang/String;
       4: areturn

  static java.util.Set access$500(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #18                 // Field hosts:Ljava/util/Set;
       4: areturn

  static java.util.Set access$600(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #17                 // Field passives:Ljava/util/Set;
       4: areturn

  static java.util.Set access$700(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #16                 // Field arbiters:Ljava/util/Set;
       4: areturn

  static java.lang.String access$800(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #15                 // Field primary:Ljava/lang/String;
       4: areturn

  static int access$900(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxDocumentSize:I
       4: ireturn

  static com.mongodb.TagSet access$1000(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #13                 // Field tagSet:Lcom/mongodb/TagSet;
       4: areturn

  static java.lang.String access$1100(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #12                 // Field setName:Ljava/lang/String;
       4: areturn

  static long access$1200(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #11                 // Field roundTripTimeNanos:J
       4: lreturn

  static boolean access$1300(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field ok:Z
       4: ireturn

  static int access$1400(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field minWireVersion:I
       4: ireturn

  static int access$1500(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxWireVersion:I
       4: ireturn

  static org.bson.types.ObjectId access$1600(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field electionId:Lorg/bson/types/ObjectId;
       4: areturn

  static java.lang.Integer access$1700(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field setVersion:Ljava/lang/Integer;
       4: areturn

  static java.util.Date access$1800(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lastWriteDate:Ljava/util/Date;
       4: areturn

  static long access$1900(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lastUpdateTimeNanos:J
       4: lreturn

  static java.lang.Integer access$2000(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logicalSessionTimeoutMinutes:Ljava/lang/Integer;
       4: areturn

  static java.lang.Throwable access$2100(com.mongodb.connection.ServerDescription$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exception:Ljava/lang/Throwable;
       4: areturn
}
