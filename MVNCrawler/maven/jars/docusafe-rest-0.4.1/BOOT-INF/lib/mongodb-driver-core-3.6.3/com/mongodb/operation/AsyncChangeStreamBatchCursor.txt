Compiled from "AsyncChangeStreamBatchCursor.java"
final class com.mongodb.operation.AsyncChangeStreamBatchCursor<T> implements com.mongodb.async.AsyncBatchCursor<T> {
  private final com.mongodb.binding.AsyncReadBinding binding;

  private final com.mongodb.operation.ChangeStreamOperation<T> changeStreamOperation;

  private volatile org.bson.BsonDocument resumeToken;

  private volatile com.mongodb.async.AsyncBatchCursor<org.bson.RawBsonDocument> wrapped;

  com.mongodb.operation.AsyncChangeStreamBatchCursor(com.mongodb.operation.ChangeStreamOperation<T>, com.mongodb.async.AsyncBatchCursor<org.bson.RawBsonDocument>, com.mongodb.binding.AsyncReadBinding);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field changeStreamOperation:Lcom/mongodb/operation/ChangeStreamOperation;
       9: aload_0
      10: aload_1
      11: invokevirtual #7                  // Method com/mongodb/operation/ChangeStreamOperation.getResumeToken:()Lorg/bson/BsonDocument;
      14: putfield      #2                  // Field resumeToken:Lorg/bson/BsonDocument;
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
      22: aload_0
      23: aload_3
      24: putfield      #3                  // Field binding:Lcom/mongodb/binding/AsyncReadBinding;
      27: aload_3
      28: invokeinterface #8,  1            // InterfaceMethod com/mongodb/binding/AsyncReadBinding.retain:()Lcom/mongodb/binding/AsyncReadBinding;
      33: pop
      34: return

  com.mongodb.async.AsyncBatchCursor<org.bson.RawBsonDocument> getWrapped();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       4: areturn

  public void next(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: new           #9                  // class com/mongodb/operation/AsyncChangeStreamBatchCursor$1
       4: dup
       5: aload_0
       6: invokespecial #10                 // Method com/mongodb/operation/AsyncChangeStreamBatchCursor$1."<init>":(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor;)V
       9: aload_0
      10: aload_1
      11: invokespecial #11                 // Method convertResultsCallback:(Lcom/mongodb/async/SingleResultCallback;)Lcom/mongodb/async/SingleResultCallback;
      14: invokespecial #12                 // Method resumeableOperation:(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor$AsyncBlock;Lcom/mongodb/async/SingleResultCallback;)V
      17: return

  public void tryNext(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: aload_0
       1: new           #13                 // class com/mongodb/operation/AsyncChangeStreamBatchCursor$2
       4: dup
       5: aload_0
       6: invokespecial #14                 // Method com/mongodb/operation/AsyncChangeStreamBatchCursor$2."<init>":(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor;)V
       9: aload_0
      10: aload_1
      11: invokespecial #11                 // Method convertResultsCallback:(Lcom/mongodb/async/SingleResultCallback;)Lcom/mongodb/async/SingleResultCallback;
      14: invokespecial #12                 // Method resumeableOperation:(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor$AsyncBlock;Lcom/mongodb/async/SingleResultCallback;)V
      17: return

  public void setBatchSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       4: iload_1
       5: invokeinterface #15,  2           // InterfaceMethod com/mongodb/async/AsyncBatchCursor.setBatchSize:(I)V
      10: return

  public int getBatchSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       4: invokeinterface #16,  1           // InterfaceMethod com/mongodb/async/AsyncBatchCursor.getBatchSize:()I
       9: ireturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       4: invokeinterface #17,  1           // InterfaceMethod com/mongodb/async/AsyncBatchCursor.isClosed:()Z
       9: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       4: invokeinterface #18,  1           // InterfaceMethod com/mongodb/async/AsyncBatchCursor.close:()V
       9: aload_0
      10: getfield      #3                  // Field binding:Lcom/mongodb/binding/AsyncReadBinding;
      13: invokeinterface #19,  1           // InterfaceMethod com/mongodb/binding/AsyncReadBinding.release:()V
      18: return

  private void resumeableOperation(com.mongodb.operation.AsyncChangeStreamBatchCursor$AsyncBlock, com.mongodb.async.SingleResultCallback<java.util.List<org.bson.RawBsonDocument>>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       5: new           #20                 // class com/mongodb/operation/AsyncChangeStreamBatchCursor$3
       8: dup
       9: aload_0
      10: aload_2
      11: aload_1
      12: invokespecial #21                 // Method com/mongodb/operation/AsyncChangeStreamBatchCursor$3."<init>":(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/operation/AsyncChangeStreamBatchCursor$AsyncBlock;)V
      15: invokeinterface #22,  3           // InterfaceMethod com/mongodb/operation/AsyncChangeStreamBatchCursor$AsyncBlock.apply:(Lcom/mongodb/async/AsyncBatchCursor;Lcom/mongodb/async/SingleResultCallback;)V
      20: return

  private void retryOperation(com.mongodb.operation.AsyncChangeStreamBatchCursor$AsyncBlock, com.mongodb.async.SingleResultCallback<java.util.List<org.bson.RawBsonDocument>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field changeStreamOperation:Lcom/mongodb/operation/ChangeStreamOperation;
       4: aload_0
       5: getfield      #2                  // Field resumeToken:Lorg/bson/BsonDocument;
       8: invokevirtual #23                 // Method com/mongodb/operation/ChangeStreamOperation.resumeAfter:(Lorg/bson/BsonDocument;)Lcom/mongodb/operation/ChangeStreamOperation;
      11: aload_0
      12: getfield      #3                  // Field binding:Lcom/mongodb/binding/AsyncReadBinding;
      15: new           #24                 // class com/mongodb/operation/AsyncChangeStreamBatchCursor$4
      18: dup
      19: aload_0
      20: aload_2
      21: aload_1
      22: invokespecial #25                 // Method com/mongodb/operation/AsyncChangeStreamBatchCursor$4."<init>":(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/operation/AsyncChangeStreamBatchCursor$AsyncBlock;)V
      25: invokevirtual #26                 // Method com/mongodb/operation/ChangeStreamOperation.executeAsync:(Lcom/mongodb/binding/AsyncReadBinding;Lcom/mongodb/async/SingleResultCallback;)V
      28: return

  private com.mongodb.async.SingleResultCallback<java.util.List<org.bson.RawBsonDocument>> convertResultsCallback(com.mongodb.async.SingleResultCallback<java.util.List<T>>);
    Code:
       0: new           #27                 // class com/mongodb/operation/AsyncChangeStreamBatchCursor$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #28                 // Method com/mongodb/operation/AsyncChangeStreamBatchCursor$5."<init>":(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor;Lcom/mongodb/async/SingleResultCallback;)V
       9: getstatic     #29                 // Field com/mongodb/operation/OperationHelper.LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      12: invokestatic  #30                 // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
      15: areturn

  static com.mongodb.async.AsyncBatchCursor access$000(com.mongodb.operation.AsyncChangeStreamBatchCursor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       4: areturn

  static void access$100(com.mongodb.operation.AsyncChangeStreamBatchCursor, com.mongodb.operation.AsyncChangeStreamBatchCursor$AsyncBlock, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method retryOperation:(Lcom/mongodb/operation/AsyncChangeStreamBatchCursor$AsyncBlock;Lcom/mongodb/async/SingleResultCallback;)V
       6: return

  static com.mongodb.async.AsyncBatchCursor access$002(com.mongodb.operation.AsyncChangeStreamBatchCursor, com.mongodb.async.AsyncBatchCursor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field wrapped:Lcom/mongodb/async/AsyncBatchCursor;
       6: areturn

  static com.mongodb.binding.AsyncReadBinding access$200(com.mongodb.operation.AsyncChangeStreamBatchCursor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field binding:Lcom/mongodb/binding/AsyncReadBinding;
       4: areturn

  static org.bson.BsonDocument access$302(com.mongodb.operation.AsyncChangeStreamBatchCursor, org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field resumeToken:Lorg/bson/BsonDocument;
       6: areturn

  static com.mongodb.operation.ChangeStreamOperation access$400(com.mongodb.operation.AsyncChangeStreamBatchCursor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field changeStreamOperation:Lcom/mongodb/operation/ChangeStreamOperation;
       4: areturn
}
