Compiled from "MixedBulkWriteOperation.java"
class com.mongodb.operation.MixedBulkWriteOperation$6 implements com.mongodb.async.SingleResultCallback<org.bson.BsonDocument> {
  final boolean val$canRetryIfError;

  final boolean val$retryWrites;

  final com.mongodb.binding.AsyncWriteBinding val$binding;

  final com.mongodb.operation.BulkWriteBatch val$batch;

  final com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback val$callback;

  final com.mongodb.connection.AsyncConnection val$connection;

  final com.mongodb.operation.MixedBulkWriteOperation this$0;

  com.mongodb.operation.MixedBulkWriteOperation$6(com.mongodb.operation.MixedBulkWriteOperation, boolean, boolean, com.mongodb.binding.AsyncWriteBinding, com.mongodb.operation.BulkWriteBatch, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback, com.mongodb.connection.AsyncConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/mongodb/operation/MixedBulkWriteOperation;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field val$canRetryIfError:Z
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$retryWrites:Z
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$binding:Lcom/mongodb/binding/AsyncWriteBinding;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$callback:Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field val$connection:Lcom/mongodb/connection/AsyncConnection;
      39: aload_0
      40: invokespecial #8                  // Method java/lang/Object."<init>":()V
      43: return

  public void onResult(org.bson.BsonDocument, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        63
       4: aload_0
       5: getfield      #2                  // Field val$canRetryIfError:Z
       8: ifeq          51
      11: aload_0
      12: getfield      #3                  // Field val$retryWrites:Z
      15: ifeq          51
      18: aload_2
      19: invokestatic  #9                  // Method com/mongodb/operation/CommandOperationHelper.isRetryableException:(Ljava/lang/Throwable;)Z
      22: ifeq          51
      25: aload_0
      26: getfield      #1                  // Field this$0:Lcom/mongodb/operation/MixedBulkWriteOperation;
      29: aload_0
      30: getfield      #4                  // Field val$binding:Lcom/mongodb/binding/AsyncWriteBinding;
      33: aload_0
      34: getfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
      37: aload_2
      38: aload_0
      39: getfield      #6                  // Field val$callback:Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;
      42: invokevirtual #10                 // Method com/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback.releaseConnectionAndGetWrapped:()Lcom/mongodb/async/SingleResultCallback;
      45: invokestatic  #11                 // Method com/mongodb/operation/MixedBulkWriteOperation.access$1400:(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/BulkWriteBatch;Ljava/lang/Throwable;Lcom/mongodb/async/SingleResultCallback;)V
      48: goto          156
      51: aload_0
      52: getfield      #6                  // Field val$callback:Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;
      55: aconst_null
      56: aload_2
      57: invokevirtual #12                 // Method com/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      60: goto          156
      63: aload_0
      64: getfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
      67: aload_1
      68: invokevirtual #13                 // Method com/mongodb/operation/BulkWriteBatch.addResult:(Lorg/bson/BsonDocument;)V
      71: aload_0
      72: getfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
      75: invokevirtual #14                 // Method com/mongodb/operation/BulkWriteBatch.getNextBatch:()Lcom/mongodb/operation/BulkWriteBatch;
      78: astore_3
      79: aload_3
      80: invokevirtual #15                 // Method com/mongodb/operation/BulkWriteBatch.shouldProcessBatch:()Z
      83: ifeq          113
      86: aload_0
      87: getfield      #1                  // Field this$0:Lcom/mongodb/operation/MixedBulkWriteOperation;
      90: aload_0
      91: getfield      #4                  // Field val$binding:Lcom/mongodb/binding/AsyncWriteBinding;
      94: aload_0
      95: getfield      #7                  // Field val$connection:Lcom/mongodb/connection/AsyncConnection;
      98: aload_3
      99: aload_0
     100: getfield      #3                  // Field val$retryWrites:Z
     103: aload_0
     104: getfield      #6                  // Field val$callback:Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;
     107: invokestatic  #16                 // Method com/mongodb/operation/MixedBulkWriteOperation.access$900:(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/operation/BulkWriteBatch;ZLcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;)V
     110: goto          156
     113: aload_0
     114: getfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
     117: invokevirtual #17                 // Method com/mongodb/operation/BulkWriteBatch.hasErrors:()Z
     120: ifeq          141
     123: aload_0
     124: getfield      #6                  // Field val$callback:Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;
     127: aconst_null
     128: aload_0
     129: getfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
     132: invokevirtual #18                 // Method com/mongodb/operation/BulkWriteBatch.getError:()Lcom/mongodb/MongoBulkWriteException;
     135: invokevirtual #12                 // Method com/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     138: goto          156
     141: aload_0
     142: getfield      #6                  // Field val$callback:Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;
     145: aload_0
     146: getfield      #5                  // Field val$batch:Lcom/mongodb/operation/BulkWriteBatch;
     149: invokevirtual #19                 // Method com/mongodb/operation/BulkWriteBatch.getResult:()Lcom/mongodb/bulk/BulkWriteResult;
     152: aconst_null
     153: invokevirtual #12                 // Method com/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     156: return

  public void onResult(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/bson/BsonDocument
       5: aload_2
       6: invokevirtual #21                 // Method onResult:(Lorg/bson/BsonDocument;Ljava/lang/Throwable;)V
       9: return
}
