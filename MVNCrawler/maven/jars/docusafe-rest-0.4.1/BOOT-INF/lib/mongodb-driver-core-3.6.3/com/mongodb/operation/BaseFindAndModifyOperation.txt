Compiled from "BaseFindAndModifyOperation.java"
abstract class com.mongodb.operation.BaseFindAndModifyOperation<T> implements com.mongodb.operation.AsyncWriteOperation<T>, com.mongodb.operation.WriteOperation<T> {
  com.mongodb.operation.BaseFindAndModifyOperation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public T execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2                  // Method getDatabaseName:()Ljava/lang/String;
       5: aconst_null
       6: aload_0
       7: invokevirtual #3                  // Method getFieldNameValidator:()Lorg/bson/FieldNameValidator;
      10: aload_0
      11: invokevirtual #4                  // Method getDecoder:()Lorg/bson/codecs/Decoder;
      14: ldc           #5                  // String value
      16: invokestatic  #6                  // Method com/mongodb/operation/CommandResultDocumentCodec.create:(Lorg/bson/codecs/Decoder;Ljava/lang/String;)Lorg/bson/codecs/Codec;
      19: aload_0
      20: aload_1
      21: invokeinterface #7,  1            // InterfaceMethod com/mongodb/binding/WriteBinding.getSessionContext:()Lcom/mongodb/session/SessionContext;
      26: invokevirtual #8                  // Method getCommandCreator:(Lcom/mongodb/session/SessionContext;)Lcom/mongodb/operation/CommandOperationHelper$CommandCreator;
      29: invokestatic  #9                  // Method com/mongodb/operation/FindAndModifyHelper.transformer:()Lcom/mongodb/operation/CommandOperationHelper$CommandTransformer;
      32: invokestatic  #10                 // Method com/mongodb/operation/CommandOperationHelper.executeRetryableCommand:(Lcom/mongodb/binding/WriteBinding;Ljava/lang/String;Lcom/mongodb/ReadPreference;Lorg/bson/FieldNameValidator;Lorg/bson/codecs/Decoder;Lcom/mongodb/operation/CommandOperationHelper$CommandCreator;Lcom/mongodb/operation/CommandOperationHelper$CommandTransformer;)Ljava/lang/Object;
      35: areturn

  public void executeAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.async.SingleResultCallback<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2                  // Method getDatabaseName:()Ljava/lang/String;
       5: aconst_null
       6: aload_0
       7: invokevirtual #3                  // Method getFieldNameValidator:()Lorg/bson/FieldNameValidator;
      10: aload_0
      11: invokevirtual #4                  // Method getDecoder:()Lorg/bson/codecs/Decoder;
      14: ldc           #5                  // String value
      16: invokestatic  #6                  // Method com/mongodb/operation/CommandResultDocumentCodec.create:(Lorg/bson/codecs/Decoder;Ljava/lang/String;)Lorg/bson/codecs/Codec;
      19: aload_0
      20: aload_1
      21: invokeinterface #11,  1           // InterfaceMethod com/mongodb/binding/AsyncWriteBinding.getSessionContext:()Lcom/mongodb/session/SessionContext;
      26: invokevirtual #8                  // Method getCommandCreator:(Lcom/mongodb/session/SessionContext;)Lcom/mongodb/operation/CommandOperationHelper$CommandCreator;
      29: invokestatic  #9                  // Method com/mongodb/operation/FindAndModifyHelper.transformer:()Lcom/mongodb/operation/CommandOperationHelper$CommandTransformer;
      32: aload_2
      33: invokestatic  #12                 // Method com/mongodb/operation/CommandOperationHelper.executeRetryableCommand:(Lcom/mongodb/binding/AsyncWriteBinding;Ljava/lang/String;Lcom/mongodb/ReadPreference;Lorg/bson/FieldNameValidator;Lorg/bson/codecs/Decoder;Lcom/mongodb/operation/CommandOperationHelper$CommandCreator;Lcom/mongodb/operation/CommandOperationHelper$CommandTransformer;Lcom/mongodb/async/SingleResultCallback;)V
      36: return

  protected abstract java.lang.String getDatabaseName();

  protected abstract org.bson.codecs.Decoder<T> getDecoder();

  protected abstract com.mongodb.operation.CommandOperationHelper$CommandCreator getCommandCreator(com.mongodb.session.SessionContext);

  protected abstract org.bson.FieldNameValidator getFieldNameValidator();
}
