Compiled from "MixedBulkWriteOperation.java"
public class com.mongodb.operation.MixedBulkWriteOperation implements com.mongodb.operation.AsyncWriteOperation<com.mongodb.bulk.BulkWriteResult>, com.mongodb.operation.WriteOperation<com.mongodb.bulk.BulkWriteResult> {
  private static final org.bson.FieldNameValidator NO_OP_FIELD_NAME_VALIDATOR;

  private final com.mongodb.MongoNamespace namespace;

  private final java.util.List<? extends com.mongodb.bulk.WriteRequest> writeRequests;

  private final boolean ordered;

  private final boolean retryWrites;

  private final com.mongodb.WriteConcern writeConcern;

  private java.lang.Boolean bypassDocumentValidation;

  public com.mongodb.operation.MixedBulkWriteOperation(com.mongodb.MongoNamespace, java.util.List<? extends com.mongodb.bulk.WriteRequest>, boolean, com.mongodb.WriteConcern);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: iconst_0
       7: invokespecial #16                 // Method "<init>":(Lcom/mongodb/MongoNamespace;Ljava/util/List;ZLcom/mongodb/WriteConcern;Z)V
      10: return

  public com.mongodb.operation.MixedBulkWriteOperation(com.mongodb.MongoNamespace, java.util.List<? extends com.mongodb.bulk.WriteRequest>, boolean, com.mongodb.WriteConcern, boolean);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_3
       6: putfield      #13                 // Field ordered:Z
       9: aload_0
      10: ldc           #18                 // String namespace
      12: aload_1
      13: invokestatic  #19                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #20                 // class com/mongodb/MongoNamespace
      19: putfield      #14                 // Field namespace:Lcom/mongodb/MongoNamespace;
      22: aload_0
      23: ldc           #21                 // String writes
      25: aload_2
      26: invokestatic  #19                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #22                 // class java/util/List
      32: putfield      #9                  // Field writeRequests:Ljava/util/List;
      35: aload_0
      36: ldc           #23                 // String writeConcern
      38: aload         4
      40: invokestatic  #19                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #24                 // class com/mongodb/WriteConcern
      46: putfield      #12                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      49: aload_0
      50: iload         5
      52: putfield      #10                 // Field retryWrites:Z
      55: ldc           #25                 // String writes is not an empty list
      57: aload_2
      58: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      63: ifne          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: invokestatic  #27                 // Method com/mongodb/assertions/Assertions.isTrueArgument:(Ljava/lang/String;Z)V
      74: return

  public com.mongodb.MongoNamespace getNamespace();
    Code:
       0: aload_0
       1: getfield      #14                 // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  public com.mongodb.WriteConcern getWriteConcern();
    Code:
       0: aload_0
       1: getfield      #12                 // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  public boolean isOrdered();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ordered:Z
       4: ireturn

  public java.util.List<? extends com.mongodb.bulk.WriteRequest> getWriteRequests();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeRequests:Ljava/util/List;
       4: areturn

  public java.lang.Boolean getBypassDocumentValidation();
    Code:
       0: aload_0
       1: getfield      #11                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
       4: areturn

  public com.mongodb.operation.MixedBulkWriteOperation bypassDocumentValidation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public java.lang.Boolean getRetryWrites();
    Code:
       0: aload_0
       1: getfield      #10                 // Field retryWrites:Z
       4: invokestatic  #28                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       7: areturn

  public com.mongodb.bulk.BulkWriteResult execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_1
       1: new           #29                 // class com/mongodb/operation/MixedBulkWriteOperation$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #30                 // Method com/mongodb/operation/MixedBulkWriteOperation$1."<init>":(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/binding/WriteBinding;)V
      10: invokestatic  #31                 // Method com/mongodb/operation/OperationHelper.withReleasableConnection:(Lcom/mongodb/binding/WriteBinding;Lcom/mongodb/operation/OperationHelper$CallableWithConnectionAndSource;)Ljava/lang/Object;
      13: checkcast     #32                 // class com/mongodb/bulk/BulkWriteResult
      16: areturn

  public void executeAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.async.SingleResultCallback<com.mongodb.bulk.BulkWriteResult>);
    Code:
       0: aload_2
       1: getstatic     #33                 // Field com/mongodb/operation/OperationHelper.LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       4: invokestatic  #34                 // Method com/mongodb/internal/async/ErrorHandlingResultCallback.errorHandlingCallback:(Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/diagnostics/logging/Logger;)Lcom/mongodb/async/SingleResultCallback;
       7: astore_3
       8: aload_1
       9: new           #35                 // class com/mongodb/operation/MixedBulkWriteOperation$2
      12: dup
      13: aload_0
      14: aload_3
      15: aload_1
      16: invokespecial #36                 // Method com/mongodb/operation/MixedBulkWriteOperation$2."<init>":(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/binding/AsyncWriteBinding;)V
      19: invokestatic  #37                 // Method com/mongodb/operation/OperationHelper.withConnection:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;)V
      22: return

  private com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.binding.WriteBinding, com.mongodb.connection.Connection, com.mongodb.operation.BulkWriteBatch);
    Code:
       0: aload_3
       1: astore        4
       3: aconst_null
       4: astore        5
       6: aload         4
       8: invokevirtual #38                 // Method com/mongodb/operation/BulkWriteBatch.shouldProcessBatch:()Z
      11: ifeq          41
      14: aload_0
      15: aload_2
      16: aload         4
      18: aload_1
      19: invokespecial #4                  // Method executeCommand:(Lcom/mongodb/connection/Connection;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/binding/WriteBinding;)Lorg/bson/BsonDocument;
      22: astore        6
      24: aload         4
      26: aload         6
      28: invokevirtual #39                 // Method com/mongodb/operation/BulkWriteBatch.addResult:(Lorg/bson/BsonDocument;)V
      31: aload         4
      33: invokevirtual #40                 // Method com/mongodb/operation/BulkWriteBatch.getNextBatch:()Lcom/mongodb/operation/BulkWriteBatch;
      36: astore        4
      38: goto          6
      41: aload_2
      42: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
      47: goto          76
      50: astore        6
      52: aload         6
      54: astore        5
      56: aload_2
      57: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
      62: goto          76
      65: astore        7
      67: aload_2
      68: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
      73: aload         7
      75: athrow
      76: aload         5
      78: ifnonnull     87
      81: aload         4
      83: invokevirtual #43                 // Method com/mongodb/operation/BulkWriteBatch.getResult:()Lcom/mongodb/bulk/BulkWriteResult;
      86: areturn
      87: aload_3
      88: invokevirtual #44                 // Method com/mongodb/operation/BulkWriteBatch.getRetryWrites:()Z
      91: ifeq          102
      94: aload         5
      96: invokestatic  #45                 // Method com/mongodb/operation/CommandOperationHelper.isRetryableException:(Ljava/lang/Throwable;)Z
      99: ifne          105
     102: aload         5
     104: athrow
     105: aload_0
     106: aload_1
     107: aload         4
     109: aload         5
     111: invokespecial #46                 // Method retryExecuteBatches:(Lcom/mongodb/binding/WriteBinding;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/MongoException;)Lcom/mongodb/bulk/BulkWriteResult;
     114: areturn
    Exception table:
       from    to  target type
           6    41    50   Class com/mongodb/MongoException
           6    41    65   any
          50    56    65   any
          65    67    65   any

  private com.mongodb.bulk.BulkWriteResult retryExecuteBatches(com.mongodb.binding.WriteBinding, com.mongodb.operation.BulkWriteBatch, com.mongodb.MongoException);
    Code:
       0: aload_1
       1: aload_3
       2: new           #47                 // class com/mongodb/operation/MixedBulkWriteOperation$3
       5: dup
       6: aload_0
       7: aload_3
       8: aload_2
       9: aload_1
      10: invokespecial #48                 // Method com/mongodb/operation/MixedBulkWriteOperation$3."<init>":(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/MongoException;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/binding/WriteBinding;)V
      13: invokestatic  #49                 // Method com/mongodb/operation/OperationHelper.withReleasableConnection:(Lcom/mongodb/binding/WriteBinding;Lcom/mongodb/MongoException;Lcom/mongodb/operation/OperationHelper$CallableWithConnectionAndSource;)Ljava/lang/Object;
      16: checkcast     #32                 // class com/mongodb/bulk/BulkWriteResult
      19: areturn

  private com.mongodb.bulk.BulkWriteResult executeLegacyBatches(com.mongodb.connection.Connection);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getWriteRequests:()Ljava/util/List;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          125
      19: aload_2
      20: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #54                 // class com/mongodb/bulk/WriteRequest
      28: astore_3
      29: aload_3
      30: invokevirtual #55                 // Method com/mongodb/bulk/WriteRequest.getType:()Lcom/mongodb/bulk/WriteRequest$Type;
      33: getstatic     #56                 // Field com/mongodb/bulk/WriteRequest$Type.INSERT:Lcom/mongodb/bulk/WriteRequest$Type;
      36: if_acmpne     61
      39: aload_1
      40: aload_0
      41: invokevirtual #57                 // Method getNamespace:()Lcom/mongodb/MongoNamespace;
      44: aload_0
      45: invokevirtual #58                 // Method isOrdered:()Z
      48: aload_3
      49: checkcast     #59                 // class com/mongodb/bulk/InsertRequest
      52: invokeinterface #60,  4           // InterfaceMethod com/mongodb/connection/Connection.insert:(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/InsertRequest;)Lcom/mongodb/WriteConcernResult;
      57: pop
      58: goto          122
      61: aload_3
      62: invokevirtual #55                 // Method com/mongodb/bulk/WriteRequest.getType:()Lcom/mongodb/bulk/WriteRequest$Type;
      65: getstatic     #61                 // Field com/mongodb/bulk/WriteRequest$Type.UPDATE:Lcom/mongodb/bulk/WriteRequest$Type;
      68: if_acmpeq     81
      71: aload_3
      72: invokevirtual #55                 // Method com/mongodb/bulk/WriteRequest.getType:()Lcom/mongodb/bulk/WriteRequest$Type;
      75: getstatic     #62                 // Field com/mongodb/bulk/WriteRequest$Type.REPLACE:Lcom/mongodb/bulk/WriteRequest$Type;
      78: if_acmpne     103
      81: aload_1
      82: aload_0
      83: invokevirtual #57                 // Method getNamespace:()Lcom/mongodb/MongoNamespace;
      86: aload_0
      87: invokevirtual #58                 // Method isOrdered:()Z
      90: aload_3
      91: checkcast     #63                 // class com/mongodb/bulk/UpdateRequest
      94: invokeinterface #64,  4           // InterfaceMethod com/mongodb/connection/Connection.update:(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/UpdateRequest;)Lcom/mongodb/WriteConcernResult;
      99: pop
     100: goto          122
     103: aload_1
     104: aload_0
     105: invokevirtual #57                 // Method getNamespace:()Lcom/mongodb/MongoNamespace;
     108: aload_0
     109: invokevirtual #58                 // Method isOrdered:()Z
     112: aload_3
     113: checkcast     #65                 // class com/mongodb/bulk/DeleteRequest
     116: invokeinterface #66,  4           // InterfaceMethod com/mongodb/connection/Connection.delete:(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/DeleteRequest;)Lcom/mongodb/WriteConcernResult;
     121: pop
     122: goto          10
     125: invokestatic  #67                 // Method com/mongodb/bulk/BulkWriteResult.unacknowledged:()Lcom/mongodb/bulk/BulkWriteResult;
     128: astore_2
     129: aload_1
     130: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
     135: aload_2
     136: areturn
     137: astore        4
     139: aload_1
     140: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
     145: aload         4
     147: athrow
    Exception table:
       from    to  target type
           0   129   137   any
         137   139   137   any

  private void executeBatchesAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.connection.AsyncConnection, com.mongodb.operation.BulkWriteBatch, boolean, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback<com.mongodb.bulk.BulkWriteResult>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         5
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: iload         4
      12: iconst_1
      13: aload         5
      15: invokespecial #3                  // Method getCommandCallback:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/operation/BulkWriteBatch;ZZLcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;)Lcom/mongodb/async/SingleResultCallback;
      18: invokespecial #2                  // Method executeCommandAsync:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;Lcom/mongodb/async/SingleResultCallback;)V
      21: return

  private void retryExecuteBatchesAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.operation.BulkWriteBatch, java.lang.Throwable, com.mongodb.async.SingleResultCallback<com.mongodb.bulk.BulkWriteResult>);
    Code:
       0: aload_1
       1: new           #68                 // class com/mongodb/operation/MixedBulkWriteOperation$4
       4: dup
       5: aload_0
       6: aload         4
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokespecial #69                 // Method com/mongodb/operation/MixedBulkWriteOperation$4."<init>":(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/async/SingleResultCallback;Ljava/lang/Throwable;Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/BulkWriteBatch;)V
      14: invokestatic  #37                 // Method com/mongodb/operation/OperationHelper.withConnection:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/OperationHelper$AsyncCallableWithConnectionAndSource;)V
      17: return

  private void executeLegacyBatchesAsync(com.mongodb.connection.AsyncConnection, java.util.List<? extends com.mongodb.bulk.WriteRequest>, int, com.mongodb.async.SingleResultCallback<com.mongodb.bulk.BulkWriteResult>);
    Code:
       0: aload_2
       1: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifne          157
       9: aload_2
      10: iconst_0
      11: invokeinterface #70,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      16: checkcast     #54                 // class com/mongodb/bulk/WriteRequest
      19: astore        5
      21: aload_2
      22: iconst_1
      23: aload_2
      24: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
      29: invokeinterface #72,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      34: astore        6
      36: new           #73                 // class com/mongodb/operation/MixedBulkWriteOperation$5
      39: dup
      40: aload_0
      41: aload         4
      43: aload_1
      44: aload         6
      46: iload_3
      47: invokespecial #74                 // Method com/mongodb/operation/MixedBulkWriteOperation$5."<init>":(Lcom/mongodb/operation/MixedBulkWriteOperation;Lcom/mongodb/async/SingleResultCallback;Lcom/mongodb/connection/AsyncConnection;Ljava/util/List;I)V
      50: astore        7
      52: aload         5
      54: invokevirtual #55                 // Method com/mongodb/bulk/WriteRequest.getType:()Lcom/mongodb/bulk/WriteRequest$Type;
      57: getstatic     #56                 // Field com/mongodb/bulk/WriteRequest$Type.INSERT:Lcom/mongodb/bulk/WriteRequest$Type;
      60: if_acmpne     87
      63: aload_1
      64: aload_0
      65: invokevirtual #57                 // Method getNamespace:()Lcom/mongodb/MongoNamespace;
      68: aload_0
      69: invokevirtual #58                 // Method isOrdered:()Z
      72: aload         5
      74: checkcast     #59                 // class com/mongodb/bulk/InsertRequest
      77: aload         7
      79: invokeinterface #75,  5           // InterfaceMethod com/mongodb/connection/AsyncConnection.insertAsync:(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/InsertRequest;Lcom/mongodb/async/SingleResultCallback;)V
      84: goto          154
      87: aload         5
      89: invokevirtual #55                 // Method com/mongodb/bulk/WriteRequest.getType:()Lcom/mongodb/bulk/WriteRequest$Type;
      92: getstatic     #61                 // Field com/mongodb/bulk/WriteRequest$Type.UPDATE:Lcom/mongodb/bulk/WriteRequest$Type;
      95: if_acmpeq     109
      98: aload         5
     100: invokevirtual #55                 // Method com/mongodb/bulk/WriteRequest.getType:()Lcom/mongodb/bulk/WriteRequest$Type;
     103: getstatic     #62                 // Field com/mongodb/bulk/WriteRequest$Type.REPLACE:Lcom/mongodb/bulk/WriteRequest$Type;
     106: if_acmpne     133
     109: aload_1
     110: aload_0
     111: invokevirtual #57                 // Method getNamespace:()Lcom/mongodb/MongoNamespace;
     114: aload_0
     115: invokevirtual #58                 // Method isOrdered:()Z
     118: aload         5
     120: checkcast     #63                 // class com/mongodb/bulk/UpdateRequest
     123: aload         7
     125: invokeinterface #76,  5           // InterfaceMethod com/mongodb/connection/AsyncConnection.updateAsync:(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/UpdateRequest;Lcom/mongodb/async/SingleResultCallback;)V
     130: goto          154
     133: aload_1
     134: aload_0
     135: invokevirtual #57                 // Method getNamespace:()Lcom/mongodb/MongoNamespace;
     138: aload_0
     139: invokevirtual #58                 // Method isOrdered:()Z
     142: aload         5
     144: checkcast     #65                 // class com/mongodb/bulk/DeleteRequest
     147: aload         7
     149: invokeinterface #77,  5           // InterfaceMethod com/mongodb/connection/AsyncConnection.deleteAsync:(Lcom/mongodb/MongoNamespace;ZLcom/mongodb/bulk/DeleteRequest;Lcom/mongodb/async/SingleResultCallback;)V
     154: goto          168
     157: aload         4
     159: invokestatic  #67                 // Method com/mongodb/bulk/BulkWriteResult.unacknowledged:()Lcom/mongodb/bulk/BulkWriteResult;
     162: aconst_null
     163: invokeinterface #78,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     168: goto          183
     171: astore        5
     173: aload         4
     175: aconst_null
     176: aload         5
     178: invokeinterface #78,  3           // InterfaceMethod com/mongodb/async/SingleResultCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     183: return
    Exception table:
       from    to  target type
           0   168   171   Class java/lang/Throwable

  private org.bson.BsonDocument executeCommand(com.mongodb.connection.Connection, com.mongodb.operation.BulkWriteBatch, com.mongodb.binding.WriteBinding);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #14                 // Field namespace:Lcom/mongodb/MongoNamespace;
       5: invokevirtual #80                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #81                 // Method com/mongodb/operation/BulkWriteBatch.getCommand:()Lorg/bson/BsonDocument;
      12: getstatic     #82                 // Field NO_OP_FIELD_NAME_VALIDATOR:Lorg/bson/FieldNameValidator;
      15: aconst_null
      16: aload_2
      17: invokevirtual #83                 // Method com/mongodb/operation/BulkWriteBatch.getDecoder:()Lorg/bson/codecs/Decoder;
      20: aload_3
      21: invokeinterface #84,  1           // InterfaceMethod com/mongodb/binding/WriteBinding.getSessionContext:()Lcom/mongodb/session/SessionContext;
      26: aload_0
      27: aload_2
      28: aload_0
      29: getfield      #12                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      32: invokespecial #85                 // Method shouldAcknowledge:(Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/WriteConcern;)Z
      35: aload_2
      36: invokevirtual #86                 // Method com/mongodb/operation/BulkWriteBatch.getPayload:()Lcom/mongodb/connection/SplittablePayload;
      39: aload_2
      40: invokevirtual #87                 // Method com/mongodb/operation/BulkWriteBatch.getFieldNameValidator:()Lorg/bson/FieldNameValidator;
      43: invokeinterface #88,  10          // InterfaceMethod com/mongodb/connection/Connection.command:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;)Ljava/lang/Object;
      48: checkcast     #89                 // class org/bson/BsonDocument
      51: areturn

  private void executeCommandAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.connection.AsyncConnection, com.mongodb.operation.BulkWriteBatch, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback<com.mongodb.bulk.BulkWriteResult>, com.mongodb.async.SingleResultCallback<org.bson.BsonDocument>);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #14                 // Field namespace:Lcom/mongodb/MongoNamespace;
       5: invokevirtual #80                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
       8: aload_3
       9: invokevirtual #81                 // Method com/mongodb/operation/BulkWriteBatch.getCommand:()Lorg/bson/BsonDocument;
      12: getstatic     #82                 // Field NO_OP_FIELD_NAME_VALIDATOR:Lorg/bson/FieldNameValidator;
      15: aconst_null
      16: aload_3
      17: invokevirtual #83                 // Method com/mongodb/operation/BulkWriteBatch.getDecoder:()Lorg/bson/codecs/Decoder;
      20: aload_1
      21: invokeinterface #90,  1           // InterfaceMethod com/mongodb/binding/AsyncWriteBinding.getSessionContext:()Lcom/mongodb/session/SessionContext;
      26: aload_0
      27: aload_3
      28: aload_0
      29: getfield      #12                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      32: invokespecial #85                 // Method shouldAcknowledge:(Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/WriteConcern;)Z
      35: aload_3
      36: invokevirtual #86                 // Method com/mongodb/operation/BulkWriteBatch.getPayload:()Lcom/mongodb/connection/SplittablePayload;
      39: aload_3
      40: invokevirtual #87                 // Method com/mongodb/operation/BulkWriteBatch.getFieldNameValidator:()Lorg/bson/FieldNameValidator;
      43: aload         5
      45: invokeinterface #91,  11          // InterfaceMethod com/mongodb/connection/AsyncConnection.commandAsync:(Ljava/lang/String;Lorg/bson/BsonDocument;Lorg/bson/FieldNameValidator;Lcom/mongodb/ReadPreference;Lorg/bson/codecs/Decoder;Lcom/mongodb/session/SessionContext;ZLcom/mongodb/connection/SplittablePayload;Lorg/bson/FieldNameValidator;Lcom/mongodb/async/SingleResultCallback;)V
      50: goto          63
      53: astore        6
      55: aload         4
      57: aconst_null
      58: aload         6
      60: invokevirtual #92                 // Method com/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback.onResult:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
           0    50    53   Class java/lang/Throwable

  private boolean shouldAcknowledge(com.mongodb.operation.BulkWriteBatch, com.mongodb.WriteConcern);
    Code:
       0: aload_0
       1: getfield      #13                 // Field ordered:Z
       4: ifeq          29
       7: aload_1
       8: invokevirtual #93                 // Method com/mongodb/operation/BulkWriteBatch.hasAnotherBatch:()Z
      11: ifne          21
      14: aload_2
      15: invokevirtual #94                 // Method com/mongodb/WriteConcern.isAcknowledged:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          33
      25: iconst_0
      26: goto          33
      29: aload_2
      30: invokevirtual #94                 // Method com/mongodb/WriteConcern.isAcknowledged:()Z
      33: ireturn

  private com.mongodb.async.SingleResultCallback<org.bson.BsonDocument> getCommandCallback(com.mongodb.binding.AsyncWriteBinding, com.mongodb.connection.AsyncConnection, com.mongodb.operation.BulkWriteBatch, boolean, boolean, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback<com.mongodb.bulk.BulkWriteResult>);
    Code:
       0: new           #95                 // class com/mongodb/operation/MixedBulkWriteOperation$6
       3: dup
       4: aload_0
       5: iload         5
       7: iload         4
       9: aload_1
      10: aload_3
      11: aload         6
      13: aload_2
      14: invokespecial #96                 // Method com/mongodb/operation/MixedBulkWriteOperation$6."<init>":(Lcom/mongodb/operation/MixedBulkWriteOperation;ZZLcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;Lcom/mongodb/connection/AsyncConnection;)V
      17: areturn

  private void validateWriteRequestsAndReleaseConnectionIfError(com.mongodb.connection.Connection);
    Code:
       0: aload_1
       1: invokeinterface #97,  1           // InterfaceMethod com/mongodb/connection/Connection.getDescription:()Lcom/mongodb/connection/ConnectionDescription;
       6: aload_0
       7: getfield      #11                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
      10: aload_0
      11: getfield      #9                  // Field writeRequests:Ljava/util/List;
      14: aload_0
      15: getfield      #12                 // Field writeConcern:Lcom/mongodb/WriteConcern;
      18: invokestatic  #98                 // Method com/mongodb/operation/OperationHelper.validateWriteRequests:(Lcom/mongodb/connection/ConnectionDescription;Ljava/lang/Boolean;Ljava/util/List;Lcom/mongodb/WriteConcern;)V
      21: goto          54
      24: astore_2
      25: aload_1
      26: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
      31: aload_2
      32: athrow
      33: astore_2
      34: aload_1
      35: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
      40: aload_2
      41: athrow
      42: astore_2
      43: aload_1
      44: invokeinterface #41,  1           // InterfaceMethod com/mongodb/connection/Connection.release:()V
      49: aload_2
      50: invokestatic  #100                // Method com/mongodb/MongoException.fromThrowable:(Ljava/lang/Throwable;)Lcom/mongodb/MongoException;
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/IllegalArgumentException
           0    21    33   Class com/mongodb/MongoException
           0    21    42   Class java/lang/Throwable

  public java.lang.Object execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #101                // Method execute:(Lcom/mongodb/binding/WriteBinding;)Lcom/mongodb/bulk/BulkWriteResult;
       5: areturn

  static void access$000(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.connection.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method validateWriteRequestsAndReleaseConnectionIfError:(Lcom/mongodb/connection/Connection;)V
       5: return

  static com.mongodb.MongoNamespace access$100(com.mongodb.operation.MixedBulkWriteOperation);
    Code:
       0: aload_0
       1: getfield      #14                 // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  static boolean access$200(com.mongodb.operation.MixedBulkWriteOperation);
    Code:
       0: aload_0
       1: getfield      #13                 // Field ordered:Z
       4: ireturn

  static com.mongodb.WriteConcern access$300(com.mongodb.operation.MixedBulkWriteOperation);
    Code:
       0: aload_0
       1: getfield      #12                 // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  static java.lang.Boolean access$400(com.mongodb.operation.MixedBulkWriteOperation);
    Code:
       0: aload_0
       1: getfield      #11                 // Field bypassDocumentValidation:Ljava/lang/Boolean;
       4: areturn

  static boolean access$500(com.mongodb.operation.MixedBulkWriteOperation);
    Code:
       0: aload_0
       1: getfield      #10                 // Field retryWrites:Z
       4: ireturn

  static java.util.List access$600(com.mongodb.operation.MixedBulkWriteOperation);
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeRequests:Ljava/util/List;
       4: areturn

  static com.mongodb.bulk.BulkWriteResult access$700(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.binding.WriteBinding, com.mongodb.connection.Connection, com.mongodb.operation.BulkWriteBatch);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #8                  // Method executeBulkWriteBatch:(Lcom/mongodb/binding/WriteBinding;Lcom/mongodb/connection/Connection;Lcom/mongodb/operation/BulkWriteBatch;)Lcom/mongodb/bulk/BulkWriteResult;
       7: areturn

  static com.mongodb.bulk.BulkWriteResult access$800(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.connection.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method executeLegacyBatches:(Lcom/mongodb/connection/Connection;)Lcom/mongodb/bulk/BulkWriteResult;
       5: areturn

  static void access$900(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.binding.AsyncWriteBinding, com.mongodb.connection.AsyncConnection, com.mongodb.operation.BulkWriteBatch, boolean, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: invokespecial #6                  // Method executeBatchesAsync:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/operation/BulkWriteBatch;ZLcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;)V
      11: return

  static void access$1000(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.connection.AsyncConnection, java.util.List, int, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokespecial #5                  // Method executeLegacyBatchesAsync:(Lcom/mongodb/connection/AsyncConnection;Ljava/util/List;ILcom/mongodb/async/SingleResultCallback;)V
       9: return

  static org.bson.BsonDocument access$1100(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.connection.Connection, com.mongodb.operation.BulkWriteBatch, com.mongodb.binding.WriteBinding);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method executeCommand:(Lcom/mongodb/connection/Connection;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/binding/WriteBinding;)Lorg/bson/BsonDocument;
       7: areturn

  static com.mongodb.async.SingleResultCallback access$1200(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.binding.AsyncWriteBinding, com.mongodb.connection.AsyncConnection, com.mongodb.operation.BulkWriteBatch, boolean, boolean, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: invokespecial #3                  // Method getCommandCallback:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/operation/BulkWriteBatch;ZZLcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;)Lcom/mongodb/async/SingleResultCallback;
      13: areturn

  static void access$1300(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.binding.AsyncWriteBinding, com.mongodb.connection.AsyncConnection, com.mongodb.operation.BulkWriteBatch, com.mongodb.operation.OperationHelper$ConnectionReleasingWrappedCallback, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #2                  // Method executeCommandAsync:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/connection/AsyncConnection;Lcom/mongodb/operation/BulkWriteBatch;Lcom/mongodb/operation/OperationHelper$ConnectionReleasingWrappedCallback;Lcom/mongodb/async/SingleResultCallback;)V
      11: return

  static void access$1400(com.mongodb.operation.MixedBulkWriteOperation, com.mongodb.binding.AsyncWriteBinding, com.mongodb.operation.BulkWriteBatch, java.lang.Throwable, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method retryExecuteBatchesAsync:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/operation/BulkWriteBatch;Ljava/lang/Throwable;Lcom/mongodb/async/SingleResultCallback;)V
       9: return

  static {};
    Code:
       0: new           #102                // class com/mongodb/internal/validator/NoOpFieldNameValidator
       3: dup
       4: invokespecial #103                // Method com/mongodb/internal/validator/NoOpFieldNameValidator."<init>":()V
       7: putstatic     #82                 // Field NO_OP_FIELD_NAME_VALIDATOR:Lorg/bson/FieldNameValidator;
      10: return
}
