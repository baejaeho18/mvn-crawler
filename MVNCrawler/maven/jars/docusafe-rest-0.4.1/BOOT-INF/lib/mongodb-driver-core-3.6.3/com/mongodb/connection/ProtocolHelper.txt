Compiled from "ProtocolHelper.java"
final class com.mongodb.connection.ProtocolHelper {
  private static final com.mongodb.diagnostics.logging.Logger PROTOCOL_EVENT_LOGGER;

  private static final org.bson.codecs.configuration.CodecRegistry REGISTRY;

  static com.mongodb.WriteConcernResult getWriteResult(org.bson.BsonDocument, com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method isCommandOk:(Lorg/bson/BsonDocument;)Z
       4: ifne          13
       7: aload_0
       8: aload_1
       9: invokestatic  #2                  // Method getCommandFailureException:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;)Lcom/mongodb/MongoException;
      12: athrow
      13: aload_0
      14: invokestatic  #3                  // Method hasWriteError:(Lorg/bson/BsonDocument;)Z
      17: ifeq          25
      20: aload_0
      21: aload_1
      22: invokestatic  #4                  // Method throwWriteException:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;)V
      25: aload_0
      26: invokestatic  #5                  // Method createWriteResult:(Lorg/bson/BsonDocument;)Lcom/mongodb/WriteConcernResult;
      29: areturn

  private static com.mongodb.WriteConcernResult createWriteResult(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: ldc           #6                  // String updatedExisting
       3: getstatic     #7                  // Field org/bson/BsonBoolean.FALSE:Lorg/bson/BsonBoolean;
       6: invokevirtual #8                  // Method org/bson/BsonDocument.getBoolean:(Ljava/lang/Object;Lorg/bson/BsonBoolean;)Lorg/bson/BsonBoolean;
       9: astore_1
      10: aload_0
      11: ldc           #9                  // String n
      13: new           #10                 // class org/bson/BsonInt32
      16: dup
      17: iconst_0
      18: invokespecial #11                 // Method org/bson/BsonInt32."<init>":(I)V
      21: invokevirtual #12                 // Method org/bson/BsonDocument.getNumber:(Ljava/lang/Object;Lorg/bson/BsonNumber;)Lorg/bson/BsonNumber;
      24: invokevirtual #13                 // Method org/bson/BsonNumber.intValue:()I
      27: aload_1
      28: invokevirtual #14                 // Method org/bson/BsonBoolean.getValue:()Z
      31: aload_0
      32: ldc           #15                 // String upserted
      34: invokevirtual #16                 // Method org/bson/BsonDocument.get:(Ljava/lang/Object;)Lorg/bson/BsonValue;
      37: invokestatic  #17                 // Method com/mongodb/WriteConcernResult.acknowledged:(IZLorg/bson/BsonValue;)Lcom/mongodb/WriteConcernResult;
      40: areturn

  static boolean isCommandOk(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: ldc           #18                 // String ok
       3: invokevirtual #16                 // Method org/bson/BsonDocument.get:(Ljava/lang/Object;)Lorg/bson/BsonValue;
       6: astore_1
       7: aload_1
       8: invokestatic  #19                 // Method isCommandOk:(Lorg/bson/BsonValue;)Z
      11: ireturn

  static boolean isCommandOk(org.bson.BsonReader);
    Code:
       0: aload_0
       1: ldc           #18                 // String ok
       3: invokestatic  #20                 // Method getField:(Lorg/bson/BsonReader;Ljava/lang/String;)Lorg/bson/BsonValue;
       6: invokestatic  #19                 // Method isCommandOk:(Lorg/bson/BsonValue;)Z
       9: ireturn

  static boolean isCommandOk(com.mongodb.connection.ResponseBuffers);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method createBsonReader:(Lcom/mongodb/connection/ResponseBuffers;)Lorg/bson/BsonBinaryReader;
       4: invokestatic  #22                 // Method isCommandOk:(Lorg/bson/BsonReader;)Z
       7: istore_1
       8: aload_0
       9: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      12: iload_1
      13: ireturn
      14: astore_2
      15: aload_0
      16: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      19: aload_2
      20: athrow
    Exception table:
       from    to  target type
           0     8    14   any

  static org.bson.BsonTimestamp getOperationTime(com.mongodb.connection.ResponseBuffers);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method createBsonReader:(Lcom/mongodb/connection/ResponseBuffers;)Lorg/bson/BsonBinaryReader;
       4: ldc           #24                 // String operationTime
       6: invokestatic  #20                 // Method getField:(Lorg/bson/BsonReader;Ljava/lang/String;)Lorg/bson/BsonValue;
       9: astore_1
      10: aload_1
      11: ifnonnull     22
      14: aconst_null
      15: astore_2
      16: aload_0
      17: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      20: aload_2
      21: areturn
      22: aload_1
      23: invokevirtual #25                 // Method org/bson/BsonValue.asTimestamp:()Lorg/bson/BsonTimestamp;
      26: astore_2
      27: aload_0
      28: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      31: aload_2
      32: areturn
      33: astore_3
      34: aload_0
      35: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      38: aload_3
      39: athrow
    Exception table:
       from    to  target type
           0    16    33   any
          22    27    33   any

  static org.bson.BsonDocument getClusterTime(com.mongodb.connection.ResponseBuffers);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method createBsonReader:(Lcom/mongodb/connection/ResponseBuffers;)Lorg/bson/BsonBinaryReader;
       4: ldc           #26                 // String $clusterTime
       6: invokestatic  #20                 // Method getField:(Lorg/bson/BsonReader;Ljava/lang/String;)Lorg/bson/BsonValue;
       9: astore_1
      10: aload_1
      11: ifnonnull     22
      14: aconst_null
      15: astore_2
      16: aload_0
      17: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      20: aload_2
      21: areturn
      22: aload_1
      23: invokevirtual #27                 // Method org/bson/BsonValue.asDocument:()Lorg/bson/BsonDocument;
      26: astore_2
      27: aload_0
      28: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      31: aload_2
      32: areturn
      33: astore_3
      34: aload_0
      35: invokevirtual #23                 // Method com/mongodb/connection/ResponseBuffers.reset:()V
      38: aload_3
      39: athrow
    Exception table:
       from    to  target type
           0    16    33   any
          22    27    33   any

  static org.bson.BsonDocument getClusterTime(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: ldc           #26                 // String $clusterTime
       3: invokevirtual #16                 // Method org/bson/BsonDocument.get:(Ljava/lang/Object;)Lorg/bson/BsonValue;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: invokevirtual #27                 // Method org/bson/BsonValue.asDocument:()Lorg/bson/BsonDocument;
      17: areturn

  private static org.bson.BsonBinaryReader createBsonReader(com.mongodb.connection.ResponseBuffers);
    Code:
       0: new           #28                 // class org/bson/BsonBinaryReader
       3: dup
       4: new           #29                 // class org/bson/io/ByteBufferBsonInput
       7: dup
       8: aload_0
       9: invokevirtual #30                 // Method com/mongodb/connection/ResponseBuffers.getBodyByteBuffer:()Lorg/bson/ByteBuf;
      12: invokespecial #31                 // Method org/bson/io/ByteBufferBsonInput."<init>":(Lorg/bson/ByteBuf;)V
      15: invokespecial #32                 // Method org/bson/BsonBinaryReader."<init>":(Lorg/bson/io/BsonInput;)V
      18: areturn

  private static org.bson.BsonValue getField(org.bson.BsonReader, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod org/bson/BsonReader.readStartDocument:()V
       6: aload_0
       7: invokeinterface #34,  1           // InterfaceMethod org/bson/BsonReader.readBsonType:()Lorg/bson/BsonType;
      12: getstatic     #35                 // Field org/bson/BsonType.END_OF_DOCUMENT:Lorg/bson/BsonType;
      15: if_acmpeq     73
      18: aload_0
      19: invokeinterface #36,  1           // InterfaceMethod org/bson/BsonReader.readName:()Ljava/lang/String;
      24: aload_1
      25: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          64
      31: getstatic     #38                 // Field REGISTRY:Lorg/bson/codecs/configuration/CodecRegistry;
      34: aload_0
      35: invokeinterface #39,  1           // InterfaceMethod org/bson/BsonReader.getCurrentBsonType:()Lorg/bson/BsonType;
      40: invokestatic  #40                 // Method org/bson/codecs/BsonValueCodecProvider.getClassForBsonType:(Lorg/bson/BsonType;)Ljava/lang/Class;
      43: invokeinterface #41,  2           // InterfaceMethod org/bson/codecs/configuration/CodecRegistry.get:(Ljava/lang/Class;)Lorg/bson/codecs/Codec;
      48: aload_0
      49: invokestatic  #42                 // Method org/bson/codecs/DecoderContext.builder:()Lorg/bson/codecs/DecoderContext$Builder;
      52: invokevirtual #43                 // Method org/bson/codecs/DecoderContext$Builder.build:()Lorg/bson/codecs/DecoderContext;
      55: invokeinterface #44,  3           // InterfaceMethod org/bson/codecs/Codec.decode:(Lorg/bson/BsonReader;Lorg/bson/codecs/DecoderContext;)Ljava/lang/Object;
      60: checkcast     #45                 // class org/bson/BsonValue
      63: areturn
      64: aload_0
      65: invokeinterface #46,  1           // InterfaceMethod org/bson/BsonReader.skipValue:()V
      70: goto          6
      73: aload_0
      74: invokeinterface #47,  1           // InterfaceMethod org/bson/BsonReader.readEndDocument:()V
      79: aconst_null
      80: areturn

  private static boolean isCommandOk(org.bson.BsonValue);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #48                 // Method org/bson/BsonValue.isBoolean:()Z
      10: ifeq          21
      13: aload_0
      14: invokevirtual #49                 // Method org/bson/BsonValue.asBoolean:()Lorg/bson/BsonBoolean;
      17: invokevirtual #14                 // Method org/bson/BsonBoolean.getValue:()Z
      20: ireturn
      21: aload_0
      22: invokevirtual #50                 // Method org/bson/BsonValue.isNumber:()Z
      25: ifeq          45
      28: aload_0
      29: invokevirtual #51                 // Method org/bson/BsonValue.asNumber:()Lorg/bson/BsonNumber;
      32: invokevirtual #13                 // Method org/bson/BsonNumber.intValue:()I
      35: iconst_1
      36: if_icmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: iconst_0
      46: ireturn

  static com.mongodb.MongoException getCommandFailureException(org.bson.BsonDocument, com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #52                 // String errmsg
       4: invokestatic  #53                 // Method createSpecialException:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Ljava/lang/String;)Lcom/mongodb/MongoException;
       7: astore_2
       8: aload_2
       9: ifnull        14
      12: aload_2
      13: areturn
      14: new           #54                 // class com/mongodb/MongoCommandException
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #55                 // Method com/mongodb/MongoCommandException."<init>":(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;)V
      23: areturn

  static int getErrorCode(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: ldc           #56                 // String code
       3: new           #10                 // class org/bson/BsonInt32
       6: dup
       7: iconst_m1
       8: invokespecial #11                 // Method org/bson/BsonInt32."<init>":(I)V
      11: invokevirtual #12                 // Method org/bson/BsonDocument.getNumber:(Ljava/lang/Object;Lorg/bson/BsonNumber;)Lorg/bson/BsonNumber;
      14: invokevirtual #13                 // Method org/bson/BsonNumber.intValue:()I
      17: ireturn

  static java.lang.String getErrorMessage(org.bson.BsonDocument, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #57                 // class org/bson/BsonString
       5: dup
       6: ldc           #58                 // String
       8: invokespecial #59                 // Method org/bson/BsonString."<init>":(Ljava/lang/String;)V
      11: invokevirtual #60                 // Method org/bson/BsonDocument.getString:(Ljava/lang/Object;Lorg/bson/BsonString;)Lorg/bson/BsonString;
      14: invokevirtual #61                 // Method org/bson/BsonString.getValue:()Ljava/lang/String;
      17: areturn

  static com.mongodb.MongoException getQueryFailureException(org.bson.BsonDocument, com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #62                 // String $err
       4: invokestatic  #53                 // Method createSpecialException:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Ljava/lang/String;)Lcom/mongodb/MongoException;
       7: astore_2
       8: aload_2
       9: ifnull        14
      12: aload_2
      13: areturn
      14: new           #63                 // class com/mongodb/MongoQueryException
      17: dup
      18: aload_1
      19: aload_0
      20: invokestatic  #64                 // Method getErrorCode:(Lorg/bson/BsonDocument;)I
      23: aload_0
      24: ldc           #62                 // String $err
      26: invokestatic  #65                 // Method getErrorMessage:(Lorg/bson/BsonDocument;Ljava/lang/String;)Ljava/lang/String;
      29: invokespecial #66                 // Method com/mongodb/MongoQueryException."<init>":(Lcom/mongodb/ServerAddress;ILjava/lang/String;)V
      32: areturn

  static com.mongodb.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription);
    Code:
       0: invokestatic  #67                 // Method com/mongodb/connection/MessageSettings.builder:()Lcom/mongodb/connection/MessageSettings$Builder;
       3: aload_0
       4: invokevirtual #68                 // Method com/mongodb/connection/ConnectionDescription.getMaxDocumentSize:()I
       7: invokevirtual #69                 // Method com/mongodb/connection/MessageSettings$Builder.maxDocumentSize:(I)Lcom/mongodb/connection/MessageSettings$Builder;
      10: aload_0
      11: invokevirtual #70                 // Method com/mongodb/connection/ConnectionDescription.getMaxMessageSize:()I
      14: invokevirtual #71                 // Method com/mongodb/connection/MessageSettings$Builder.maxMessageSize:(I)Lcom/mongodb/connection/MessageSettings$Builder;
      17: aload_0
      18: invokevirtual #72                 // Method com/mongodb/connection/ConnectionDescription.getMaxBatchCount:()I
      21: invokevirtual #73                 // Method com/mongodb/connection/MessageSettings$Builder.maxBatchCount:(I)Lcom/mongodb/connection/MessageSettings$Builder;
      24: aload_0
      25: invokevirtual #74                 // Method com/mongodb/connection/ConnectionDescription.getServerVersion:()Lcom/mongodb/connection/ServerVersion;
      28: invokevirtual #75                 // Method com/mongodb/connection/MessageSettings$Builder.serverVersion:(Lcom/mongodb/connection/ServerVersion;)Lcom/mongodb/connection/MessageSettings$Builder;
      31: aload_0
      32: invokevirtual #76                 // Method com/mongodb/connection/ConnectionDescription.getServerType:()Lcom/mongodb/connection/ServerType;
      35: invokevirtual #77                 // Method com/mongodb/connection/MessageSettings$Builder.serverType:(Lcom/mongodb/connection/ServerType;)Lcom/mongodb/connection/MessageSettings$Builder;
      38: invokevirtual #78                 // Method com/mongodb/connection/MessageSettings$Builder.build:()Lcom/mongodb/connection/MessageSettings;
      41: areturn

  static void encodeMessage(com.mongodb.connection.RequestMessage, org.bson.io.BsonOutput);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #79                 // Field com/mongodb/internal/connection/NoOpSessionContext.INSTANCE:Lcom/mongodb/internal/connection/NoOpSessionContext;
       5: invokevirtual #80                 // Method com/mongodb/connection/RequestMessage.encode:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)V
       8: goto          29
      11: astore_2
      12: aload_1
      13: invokeinterface #82,  1           // InterfaceMethod org/bson/io/BsonOutput.close:()V
      18: aload_2
      19: athrow
      20: astore_2
      21: aload_1
      22: invokeinterface #82,  1           // InterfaceMethod org/bson/io/BsonOutput.close:()V
      27: aload_2
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/RuntimeException
           0     8    20   Class java/lang/Error

  static com.mongodb.connection.RequestMessage$EncodingMetadata encodeMessageWithMetadata(com.mongodb.connection.RequestMessage, org.bson.io.BsonOutput);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #79                 // Field com/mongodb/internal/connection/NoOpSessionContext.INSTANCE:Lcom/mongodb/internal/connection/NoOpSessionContext;
       5: invokevirtual #80                 // Method com/mongodb/connection/RequestMessage.encode:(Lorg/bson/io/BsonOutput;Lcom/mongodb/session/SessionContext;)V
       8: aload_0
       9: invokevirtual #84                 // Method com/mongodb/connection/RequestMessage.getEncodingMetadata:()Lcom/mongodb/connection/RequestMessage$EncodingMetadata;
      12: areturn
      13: astore_2
      14: aload_1
      15: invokeinterface #82,  1           // InterfaceMethod org/bson/io/BsonOutput.close:()V
      20: aload_2
      21: athrow
      22: astore_2
      23: aload_1
      24: invokeinterface #82,  1           // InterfaceMethod org/bson/io/BsonOutput.close:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/lang/RuntimeException
           0    12    22   Class java/lang/Error

  private static com.mongodb.MongoException createSpecialException(org.bson.BsonDocument, com.mongodb.ServerAddress, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method getErrorCode:(Lorg/bson/BsonDocument;)I
       4: invokestatic  #85                 // Method com/mongodb/ErrorCategory.fromErrorCode:(I)Lcom/mongodb/ErrorCategory;
       7: getstatic     #86                 // Field com/mongodb/ErrorCategory.EXECUTION_TIMEOUT:Lcom/mongodb/ErrorCategory;
      10: if_acmpne     30
      13: new           #87                 // class com/mongodb/MongoExecutionTimeoutException
      16: dup
      17: aload_0
      18: invokestatic  #64                 // Method getErrorCode:(Lorg/bson/BsonDocument;)I
      21: aload_0
      22: aload_2
      23: invokestatic  #65                 // Method getErrorMessage:(Lorg/bson/BsonDocument;Ljava/lang/String;)Ljava/lang/String;
      26: invokespecial #88                 // Method com/mongodb/MongoExecutionTimeoutException."<init>":(ILjava/lang/String;)V
      29: areturn
      30: aload_0
      31: aload_2
      32: invokestatic  #65                 // Method getErrorMessage:(Lorg/bson/BsonDocument;Ljava/lang/String;)Ljava/lang/String;
      35: ldc           #89                 // String not master
      37: invokevirtual #90                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      40: ifeq          52
      43: new           #91                 // class com/mongodb/MongoNotPrimaryException
      46: dup
      47: aload_1
      48: invokespecial #92                 // Method com/mongodb/MongoNotPrimaryException."<init>":(Lcom/mongodb/ServerAddress;)V
      51: areturn
      52: aload_0
      53: aload_2
      54: invokestatic  #65                 // Method getErrorMessage:(Lorg/bson/BsonDocument;Ljava/lang/String;)Ljava/lang/String;
      57: ldc           #93                 // String node is recovering
      59: invokevirtual #90                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      62: ifeq          74
      65: new           #94                 // class com/mongodb/MongoNodeIsRecoveringException
      68: dup
      69: aload_1
      70: invokespecial #95                 // Method com/mongodb/MongoNodeIsRecoveringException."<init>":(Lcom/mongodb/ServerAddress;)V
      73: areturn
      74: aconst_null
      75: areturn

  private static boolean hasWriteError(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: invokestatic  #96                 // Method com/mongodb/WriteConcernException.extractErrorMessage:(Lorg/bson/BsonDocument;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #97                 // Method java/lang/String.length:()I
      13: ifle          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static void throwWriteException(org.bson.BsonDocument, com.mongodb.ServerAddress);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #98                 // String err
       4: invokestatic  #53                 // Method createSpecialException:(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Ljava/lang/String;)Lcom/mongodb/MongoException;
       7: astore_2
       8: aload_2
       9: ifnull        14
      12: aload_2
      13: athrow
      14: aload_0
      15: invokestatic  #99                 // Method com/mongodb/WriteConcernException.extractErrorCode:(Lorg/bson/BsonDocument;)I
      18: istore_3
      19: iload_3
      20: invokestatic  #85                 // Method com/mongodb/ErrorCategory.fromErrorCode:(I)Lcom/mongodb/ErrorCategory;
      23: getstatic     #100                // Field com/mongodb/ErrorCategory.DUPLICATE_KEY:Lcom/mongodb/ErrorCategory;
      26: if_acmpne     43
      29: new           #101                // class com/mongodb/DuplicateKeyException
      32: dup
      33: aload_0
      34: aload_1
      35: aload_0
      36: invokestatic  #5                  // Method createWriteResult:(Lorg/bson/BsonDocument;)Lcom/mongodb/WriteConcernResult;
      39: invokespecial #102                // Method com/mongodb/DuplicateKeyException."<init>":(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Lcom/mongodb/WriteConcernResult;)V
      42: athrow
      43: new           #103                // class com/mongodb/WriteConcernException
      46: dup
      47: aload_0
      48: aload_1
      49: aload_0
      50: invokestatic  #5                  // Method createWriteResult:(Lorg/bson/BsonDocument;)Lcom/mongodb/WriteConcernResult;
      53: invokespecial #104                // Method com/mongodb/WriteConcernException."<init>":(Lorg/bson/BsonDocument;Lcom/mongodb/ServerAddress;Lcom/mongodb/WriteConcernResult;)V
      56: athrow

  static void sendCommandStartedEvent(com.mongodb.connection.RequestMessage, java.lang.String, java.lang.String, org.bson.BsonDocument, com.mongodb.connection.ConnectionDescription, com.mongodb.event.CommandListener);
    Code:
       0: aload         5
       2: new           #105                // class com/mongodb/event/CommandStartedEvent
       5: dup
       6: aload_0
       7: invokevirtual #106                // Method com/mongodb/connection/RequestMessage.getId:()I
      10: aload         4
      12: aload_1
      13: aload_2
      14: aload_3
      15: invokespecial #107                // Method com/mongodb/event/CommandStartedEvent."<init>":(ILcom/mongodb/connection/ConnectionDescription;Ljava/lang/String;Ljava/lang/String;Lorg/bson/BsonDocument;)V
      18: invokeinterface #108,  2          // InterfaceMethod com/mongodb/event/CommandListener.commandStarted:(Lcom/mongodb/event/CommandStartedEvent;)V
      23: goto          63
      26: astore        6
      28: getstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      31: invokeinterface #111,  1          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.isWarnEnabled:()Z
      36: ifeq          63
      39: getstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      42: ldc           #112                // String Exception thrown raising command started event to listener %s
      44: iconst_1
      45: anewarray     #113                // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload         5
      52: aastore
      53: invokestatic  #114                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      56: aload         6
      58: invokeinterface #115,  3          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Exception

  static void sendCommandSucceededEvent(com.mongodb.connection.RequestMessage, java.lang.String, org.bson.BsonDocument, com.mongodb.connection.ConnectionDescription, long, com.mongodb.event.CommandListener);
    Code:
       0: aload         6
       2: new           #116                // class com/mongodb/event/CommandSucceededEvent
       5: dup
       6: aload_0
       7: invokevirtual #106                // Method com/mongodb/connection/RequestMessage.getId:()I
      10: aload_3
      11: aload_1
      12: aload_2
      13: invokestatic  #117                // Method java/lang/System.nanoTime:()J
      16: lload         4
      18: lsub
      19: invokespecial #118                // Method com/mongodb/event/CommandSucceededEvent."<init>":(ILcom/mongodb/connection/ConnectionDescription;Ljava/lang/String;Lorg/bson/BsonDocument;J)V
      22: invokeinterface #119,  2          // InterfaceMethod com/mongodb/event/CommandListener.commandSucceeded:(Lcom/mongodb/event/CommandSucceededEvent;)V
      27: goto          67
      30: astore        7
      32: getstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      35: invokeinterface #111,  1          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.isWarnEnabled:()Z
      40: ifeq          67
      43: getstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      46: ldc           #120                // String Exception thrown raising command succeeded event to listener %s
      48: iconst_1
      49: anewarray     #113                // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload         6
      56: aastore
      57: invokestatic  #114                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: aload         7
      62: invokeinterface #115,  3          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: return
    Exception table:
       from    to  target type
           0    27    30   Class java/lang/Exception

  static void sendCommandFailedEvent(com.mongodb.connection.RequestMessage, java.lang.String, com.mongodb.connection.ConnectionDescription, long, java.lang.Throwable, com.mongodb.event.CommandListener);
    Code:
       0: aload         6
       2: new           #121                // class com/mongodb/event/CommandFailedEvent
       5: dup
       6: aload_0
       7: invokevirtual #106                // Method com/mongodb/connection/RequestMessage.getId:()I
      10: aload_2
      11: aload_1
      12: invokestatic  #117                // Method java/lang/System.nanoTime:()J
      15: lload_3
      16: lsub
      17: aload         5
      19: invokespecial #122                // Method com/mongodb/event/CommandFailedEvent."<init>":(ILcom/mongodb/connection/ConnectionDescription;Ljava/lang/String;JLjava/lang/Throwable;)V
      22: invokeinterface #123,  2          // InterfaceMethod com/mongodb/event/CommandListener.commandFailed:(Lcom/mongodb/event/CommandFailedEvent;)V
      27: goto          67
      30: astore        7
      32: getstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      35: invokeinterface #111,  1          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.isWarnEnabled:()Z
      40: ifeq          67
      43: getstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
      46: ldc           #124                // String Exception thrown raising command failed event to listener %s
      48: iconst_1
      49: anewarray     #113                // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload         6
      56: aastore
      57: invokestatic  #114                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: aload         7
      62: invokeinterface #115,  3          // InterfaceMethod com/mongodb/diagnostics/logging/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: return
    Exception table:
       from    to  target type
           0    27    30   Class java/lang/Exception

  private com.mongodb.connection.ProtocolHelper();
    Code:
       0: aload_0
       1: invokespecial #125                // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #126                // String protocol.event
       2: invokestatic  #127                // Method com/mongodb/diagnostics/logging/Loggers.getLogger:(Ljava/lang/String;)Lcom/mongodb/diagnostics/logging/Logger;
       5: putstatic     #110                // Field PROTOCOL_EVENT_LOGGER:Lcom/mongodb/diagnostics/logging/Logger;
       8: iconst_1
       9: anewarray     #128                // class org/bson/codecs/configuration/CodecProvider
      12: dup
      13: iconst_0
      14: new           #129                // class org/bson/codecs/BsonValueCodecProvider
      17: dup
      18: invokespecial #130                // Method org/bson/codecs/BsonValueCodecProvider."<init>":()V
      21: aastore
      22: invokestatic  #131                // Method org/bson/codecs/configuration/CodecRegistries.fromProviders:([Lorg/bson/codecs/configuration/CodecProvider;)Lorg/bson/codecs/configuration/CodecRegistry;
      25: putstatic     #38                 // Field REGISTRY:Lorg/bson/codecs/configuration/CodecRegistry;
      28: return
}
