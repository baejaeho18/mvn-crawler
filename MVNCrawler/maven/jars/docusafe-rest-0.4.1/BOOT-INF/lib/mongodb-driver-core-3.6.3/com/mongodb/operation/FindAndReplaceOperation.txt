Compiled from "FindAndReplaceOperation.java"
public class com.mongodb.operation.FindAndReplaceOperation<T> extends com.mongodb.operation.BaseFindAndModifyOperation<T> {
  private final com.mongodb.MongoNamespace namespace;

  private final org.bson.codecs.Decoder<T> decoder;

  private final org.bson.BsonDocument replacement;

  private final com.mongodb.WriteConcern writeConcern;

  private final boolean retryWrites;

  private org.bson.BsonDocument filter;

  private org.bson.BsonDocument projection;

  private org.bson.BsonDocument sort;

  private long maxTimeMS;

  private boolean returnOriginal;

  private boolean upsert;

  private java.lang.Boolean bypassDocumentValidation;

  private com.mongodb.client.model.Collation collation;

  public com.mongodb.operation.FindAndReplaceOperation(com.mongodb.MongoNamespace, org.bson.codecs.Decoder<T>, org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field com/mongodb/WriteConcern.ACKNOWLEDGED:Lcom/mongodb/WriteConcern;
       5: iconst_0
       6: aload_2
       7: aload_3
       8: invokespecial #7                  // Method "<init>":(Lcom/mongodb/MongoNamespace;Lcom/mongodb/WriteConcern;ZLorg/bson/codecs/Decoder;Lorg/bson/BsonDocument;)V
      11: return

  public com.mongodb.operation.FindAndReplaceOperation(com.mongodb.MongoNamespace, com.mongodb.WriteConcern, org.bson.codecs.Decoder<T>, org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_3
       5: aload         4
       7: invokespecial #7                  // Method "<init>":(Lcom/mongodb/MongoNamespace;Lcom/mongodb/WriteConcern;ZLorg/bson/codecs/Decoder;Lorg/bson/BsonDocument;)V
      10: return

  public com.mongodb.operation.FindAndReplaceOperation(com.mongodb.MongoNamespace, com.mongodb.WriteConcern, boolean, org.bson.codecs.Decoder<T>, org.bson.BsonDocument);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method com/mongodb/operation/BaseFindAndModifyOperation."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #9                  // Field returnOriginal:Z
       9: aload_0
      10: ldc           #10                 // String namespace
      12: aload_1
      13: invokestatic  #11                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #12                 // class com/mongodb/MongoNamespace
      19: putfield      #4                  // Field namespace:Lcom/mongodb/MongoNamespace;
      22: aload_0
      23: ldc           #13                 // String writeConcern
      25: aload_2
      26: invokestatic  #11                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #14                 // class com/mongodb/WriteConcern
      32: putfield      #2                  // Field writeConcern:Lcom/mongodb/WriteConcern;
      35: aload_0
      36: iload_3
      37: putfield      #1                  // Field retryWrites:Z
      40: aload_0
      41: ldc           #15                 // String decoder
      43: aload         4
      45: invokestatic  #11                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #16                 // class org/bson/codecs/Decoder
      51: putfield      #17                 // Field decoder:Lorg/bson/codecs/Decoder;
      54: aload_0
      55: ldc           #18                 // String replacement
      57: aload         5
      59: invokestatic  #11                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #19                 // class org/bson/BsonDocument
      65: putfield      #20                 // Field replacement:Lorg/bson/BsonDocument;
      68: return

  public com.mongodb.MongoNamespace getNamespace();
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  public com.mongodb.WriteConcern getWriteConcern();
    Code:
       0: aload_0
       1: getfield      #2                  // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  public org.bson.codecs.Decoder<T> getDecoder();
    Code:
       0: aload_0
       1: getfield      #17                 // Field decoder:Lorg/bson/codecs/Decoder;
       4: areturn

  public org.bson.BsonDocument getReplacement();
    Code:
       0: aload_0
       1: getfield      #20                 // Field replacement:Lorg/bson/BsonDocument;
       4: areturn

  public org.bson.BsonDocument getFilter();
    Code:
       0: aload_0
       1: getfield      #21                 // Field filter:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.FindAndReplaceOperation<T> filter(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field filter:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public org.bson.BsonDocument getProjection();
    Code:
       0: aload_0
       1: getfield      #22                 // Field projection:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.FindAndReplaceOperation<T> projection(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field projection:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public long getMaxTime(java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #23                 // String timeUnit
       2: aload_1
       3: invokestatic  #11                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_0
       9: getfield      #24                 // Field maxTimeMS:J
      12: getstatic     #25                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      15: invokevirtual #26                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      18: lreturn

  public com.mongodb.operation.FindAndReplaceOperation<T> maxTime(long, java.util.concurrent.TimeUnit);
    Code:
       0: ldc           #23                 // String timeUnit
       2: aload_3
       3: invokestatic  #11                 // Method com/mongodb/assertions/Assertions.notNull:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getstatic     #25                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      11: lload_1
      12: aload_3
      13: invokevirtual #26                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      16: putfield      #24                 // Field maxTimeMS:J
      19: aload_0
      20: areturn

  public org.bson.BsonDocument getSort();
    Code:
       0: aload_0
       1: getfield      #27                 // Field sort:Lorg/bson/BsonDocument;
       4: areturn

  public com.mongodb.operation.FindAndReplaceOperation<T> sort(org.bson.BsonDocument);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field sort:Lorg/bson/BsonDocument;
       5: aload_0
       6: areturn

  public boolean isReturnOriginal();
    Code:
       0: aload_0
       1: getfield      #9                  // Field returnOriginal:Z
       4: ireturn

  public com.mongodb.operation.FindAndReplaceOperation<T> returnOriginal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field returnOriginal:Z
       5: aload_0
       6: areturn

  public boolean isUpsert();
    Code:
       0: aload_0
       1: getfield      #28                 // Field upsert:Z
       4: ireturn

  public com.mongodb.operation.FindAndReplaceOperation<T> upsert(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field upsert:Z
       5: aload_0
       6: areturn

  public java.lang.Boolean getBypassDocumentValidation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
       4: areturn

  public com.mongodb.operation.FindAndReplaceOperation<T> bypassDocumentValidation(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public com.mongodb.client.model.Collation getCollation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  public com.mongodb.operation.FindAndReplaceOperation<T> collation(com.mongodb.client.model.Collation);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field collation:Lcom/mongodb/client/model/Collation;
       5: aload_0
       6: areturn

  protected java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: invokevirtual #29                 // Method com/mongodb/MongoNamespace.getDatabaseName:()Ljava/lang/String;
       7: areturn

  protected com.mongodb.operation.CommandOperationHelper$CommandCreator getCommandCreator(com.mongodb.session.SessionContext);
    Code:
       0: new           #30                 // class com/mongodb/operation/FindAndReplaceOperation$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #31                 // Method com/mongodb/operation/FindAndReplaceOperation$1."<init>":(Lcom/mongodb/operation/FindAndReplaceOperation;Lcom/mongodb/session/SessionContext;)V
       9: areturn

  protected org.bson.FieldNameValidator getFieldNameValidator();
    Code:
       0: new           #32                 // class java/util/HashMap
       3: dup
       4: invokespecial #33                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #34                 // String update
      11: new           #35                 // class com/mongodb/internal/validator/CollectibleDocumentFieldNameValidator
      14: dup
      15: invokespecial #36                 // Method com/mongodb/internal/validator/CollectibleDocumentFieldNameValidator."<init>":()V
      18: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: new           #38                 // class com/mongodb/internal/validator/MappedFieldNameValidator
      27: dup
      28: new           #39                 // class com/mongodb/internal/validator/NoOpFieldNameValidator
      31: dup
      32: invokespecial #40                 // Method com/mongodb/internal/validator/NoOpFieldNameValidator."<init>":()V
      35: aload_1
      36: invokespecial #41                 // Method com/mongodb/internal/validator/MappedFieldNameValidator."<init>":(Lorg/bson/FieldNameValidator;Ljava/util/Map;)V
      39: areturn

  public void executeAsync(com.mongodb.binding.AsyncWriteBinding, com.mongodb.async.SingleResultCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #42                 // Method com/mongodb/operation/BaseFindAndModifyOperation.executeAsync:(Lcom/mongodb/binding/AsyncWriteBinding;Lcom/mongodb/async/SingleResultCallback;)V
       6: return

  public java.lang.Object execute(com.mongodb.binding.WriteBinding);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method com/mongodb/operation/BaseFindAndModifyOperation.execute:(Lcom/mongodb/binding/WriteBinding;)Ljava/lang/Object;
       5: areturn

  static com.mongodb.client.model.Collation access$000(com.mongodb.operation.FindAndReplaceOperation);
    Code:
       0: aload_0
       1: getfield      #5                  // Field collation:Lcom/mongodb/client/model/Collation;
       4: areturn

  static com.mongodb.MongoNamespace access$100(com.mongodb.operation.FindAndReplaceOperation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field namespace:Lcom/mongodb/MongoNamespace;
       4: areturn

  static java.lang.Boolean access$200(com.mongodb.operation.FindAndReplaceOperation);
    Code:
       0: aload_0
       1: getfield      #3                  // Field bypassDocumentValidation:Ljava/lang/Boolean;
       4: areturn

  static com.mongodb.WriteConcern access$300(com.mongodb.operation.FindAndReplaceOperation);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writeConcern:Lcom/mongodb/WriteConcern;
       4: areturn

  static boolean access$400(com.mongodb.operation.FindAndReplaceOperation);
    Code:
       0: aload_0
       1: getfield      #1                  // Field retryWrites:Z
       4: ireturn
}
