Compiled from "ModelReferenceProvider.java"
class springfox.documentation.schema.ModelReferenceProvider implements com.google.common.base.Function<com.fasterxml.classmate.ResolvedType, springfox.documentation.schema.ModelReference> {
  private final springfox.documentation.schema.TypeNameExtractor typeNameExtractor;

  private final springfox.documentation.spi.schema.contexts.ModelContext parentContext;

  public springfox.documentation.schema.ModelReferenceProvider(springfox.documentation.schema.TypeNameExtractor, springfox.documentation.spi.schema.contexts.ModelContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field typeNameExtractor:Lspringfox/documentation/schema/TypeNameExtractor;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field parentContext:Lspringfox/documentation/spi/schema/contexts/ModelContext;
      14: return

  public springfox.documentation.schema.ModelReference apply(com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method collectionReference:(Lcom/fasterxml/classmate/ResolvedType;)Lcom/google/common/base/Optional;
       5: aload_0
       6: aload_1
       7: invokespecial #5                  // Method mapReference:(Lcom/fasterxml/classmate/ResolvedType;)Lcom/google/common/base/Optional;
      10: invokevirtual #6                  // Method com/google/common/base/Optional.or:(Lcom/google/common/base/Optional;)Lcom/google/common/base/Optional;
      13: aload_0
      14: aload_1
      15: invokespecial #7                  // Method modelReference:(Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/schema/ModelReference;
      18: invokevirtual #8                  // Method com/google/common/base/Optional.or:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #9                  // class springfox/documentation/schema/ModelReference
      24: areturn

  private springfox.documentation.schema.ModelReference modelReference(com.fasterxml.classmate.ResolvedType);
    Code:
       0: ldc_w         #10                 // class java/lang/Void
       3: aload_1
       4: invokevirtual #11                 // Method com/fasterxml/classmate/ResolvedType.getErasedType:()Ljava/lang/Class;
       7: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ifne          26
      13: getstatic     #13                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      16: aload_1
      17: invokevirtual #11                 // Method com/fasterxml/classmate/ResolvedType.getErasedType:()Ljava/lang/Class;
      20: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ifeq          36
      26: new           #14                 // class springfox/documentation/schema/ModelRef
      29: dup
      30: ldc           #15                 // String void
      32: invokespecial #16                 // Method springfox/documentation/schema/ModelRef."<init>":(Ljava/lang/String;)V
      35: areturn
      36: ldc_w         #17                 // class org/springframework/web/multipart/MultipartFile
      39: aload_1
      40: invokevirtual #11                 // Method com/fasterxml/classmate/ResolvedType.getErasedType:()Ljava/lang/Class;
      43: invokevirtual #18                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      46: ifeq          59
      49: new           #14                 // class springfox/documentation/schema/ModelRef
      52: dup
      53: ldc           #19                 // String __file
      55: invokespecial #16                 // Method springfox/documentation/schema/ModelRef."<init>":(Ljava/lang/String;)V
      58: areturn
      59: aload_0
      60: getfield      #2                  // Field typeNameExtractor:Lspringfox/documentation/schema/TypeNameExtractor;
      63: aload_0
      64: getfield      #3                  // Field parentContext:Lspringfox/documentation/spi/schema/contexts/ModelContext;
      67: aload_1
      68: invokestatic  #20                 // Method springfox/documentation/spi/schema/contexts/ModelContext.fromParent:(Lspringfox/documentation/spi/schema/contexts/ModelContext;Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/spi/schema/contexts/ModelContext;
      71: invokevirtual #21                 // Method springfox/documentation/schema/TypeNameExtractor.typeName:(Lspringfox/documentation/spi/schema/contexts/ModelContext;)Ljava/lang/String;
      74: astore_2
      75: new           #14                 // class springfox/documentation/schema/ModelRef
      78: dup
      79: aload_2
      80: aload_1
      81: invokestatic  #22                 // Method springfox/documentation/schema/ResolvedTypes.allowableValues:(Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/service/AllowableValues;
      84: invokespecial #23                 // Method springfox/documentation/schema/ModelRef."<init>":(Ljava/lang/String;Lspringfox/documentation/service/AllowableValues;)V
      87: areturn

  private com.google.common.base.Optional<springfox.documentation.schema.ModelReference> mapReference(com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method springfox/documentation/schema/Maps.isMapType:(Lcom/fasterxml/classmate/ResolvedType;)Z
       4: ifeq          46
       7: aload_1
       8: invokestatic  #25                 // Method springfox/documentation/schema/Maps.mapValueType:(Lcom/fasterxml/classmate/ResolvedType;)Lcom/fasterxml/classmate/ResolvedType;
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field typeNameExtractor:Lspringfox/documentation/schema/TypeNameExtractor;
      16: aload_0
      17: getfield      #3                  // Field parentContext:Lspringfox/documentation/spi/schema/contexts/ModelContext;
      20: aload_1
      21: invokestatic  #20                 // Method springfox/documentation/spi/schema/contexts/ModelContext.fromParent:(Lspringfox/documentation/spi/schema/contexts/ModelContext;Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/spi/schema/contexts/ModelContext;
      24: invokevirtual #21                 // Method springfox/documentation/schema/TypeNameExtractor.typeName:(Lspringfox/documentation/spi/schema/contexts/ModelContext;)Ljava/lang/String;
      27: astore_3
      28: new           #14                 // class springfox/documentation/schema/ModelRef
      31: dup
      32: aload_3
      33: aload_0
      34: aload_2
      35: invokevirtual #26                 // Method apply:(Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/schema/ModelReference;
      38: iconst_1
      39: invokespecial #27                 // Method springfox/documentation/schema/ModelRef."<init>":(Ljava/lang/String;Lspringfox/documentation/schema/ModelReference;Z)V
      42: invokestatic  #28                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      45: areturn
      46: invokestatic  #29                 // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      49: areturn

  private com.google.common.base.Optional<springfox.documentation.schema.ModelReference> collectionReference(com.fasterxml.classmate.ResolvedType);
    Code:
       0: aload_1
       1: invokestatic  #30                 // Method springfox/documentation/schema/Collections.isContainerType:(Lcom/fasterxml/classmate/ResolvedType;)Z
       4: ifeq          49
       7: aload_1
       8: invokestatic  #31                 // Method springfox/documentation/schema/Collections.collectionElementType:(Lcom/fasterxml/classmate/ResolvedType;)Lcom/fasterxml/classmate/ResolvedType;
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field typeNameExtractor:Lspringfox/documentation/schema/TypeNameExtractor;
      16: aload_0
      17: getfield      #3                  // Field parentContext:Lspringfox/documentation/spi/schema/contexts/ModelContext;
      20: aload_1
      21: invokestatic  #20                 // Method springfox/documentation/spi/schema/contexts/ModelContext.fromParent:(Lspringfox/documentation/spi/schema/contexts/ModelContext;Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/spi/schema/contexts/ModelContext;
      24: invokevirtual #21                 // Method springfox/documentation/schema/TypeNameExtractor.typeName:(Lspringfox/documentation/spi/schema/contexts/ModelContext;)Ljava/lang/String;
      27: astore_3
      28: new           #14                 // class springfox/documentation/schema/ModelRef
      31: dup
      32: aload_3
      33: aload_0
      34: aload_2
      35: invokevirtual #26                 // Method apply:(Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/schema/ModelReference;
      38: aload_2
      39: invokestatic  #22                 // Method springfox/documentation/schema/ResolvedTypes.allowableValues:(Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/service/AllowableValues;
      42: invokespecial #32                 // Method springfox/documentation/schema/ModelRef."<init>":(Ljava/lang/String;Lspringfox/documentation/schema/ModelReference;Lspringfox/documentation/service/AllowableValues;)V
      45: invokestatic  #28                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      48: areturn
      49: invokestatic  #29                 // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      52: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class com/fasterxml/classmate/ResolvedType
       5: invokevirtual #26                 // Method apply:(Lcom/fasterxml/classmate/ResolvedType;)Lspringfox/documentation/schema/ModelReference;
       8: areturn
}
