Compiled from "Striped.java"
public abstract class com.google.common.util.concurrent.Striped<L> {
  private static final int LARGE_LAZY_CUTOFF;

  private static final com.google.common.base.Supplier<java.util.concurrent.locks.ReadWriteLock> READ_WRITE_LOCK_SUPPLIER;

  private static final int ALL_SET;

  private com.google.common.util.concurrent.Striped();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract L get(java.lang.Object);

  public abstract L getAt(int);

  abstract int indexFor(java.lang.Object);

  public abstract int size();

  public java.lang.Iterable<L> bulkGet(java.lang.Iterable<?>);
    Code:
       0: aload_1
       1: ldc_w         #5                  // class java/lang/Object
       4: invokestatic  #6                  // Method com/google/common/collect/Iterables.toArray:(Ljava/lang/Iterable;Ljava/lang/Class;)[Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: arraylength
      10: ifne          17
      13: invokestatic  #7                  // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      16: areturn
      17: aload_2
      18: arraylength
      19: newarray       int
      21: astore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_2
      28: arraylength
      29: if_icmpge     50
      32: aload_3
      33: iload         4
      35: aload_0
      36: aload_2
      37: iload         4
      39: aaload
      40: invokevirtual #8                  // Method indexFor:(Ljava/lang/Object;)I
      43: iastore
      44: iinc          4, 1
      47: goto          25
      50: aload_3
      51: invokestatic  #9                  // Method java/util/Arrays.sort:([I)V
      54: aload_3
      55: iconst_0
      56: iaload
      57: istore        4
      59: aload_2
      60: iconst_0
      61: aload_0
      62: iload         4
      64: invokevirtual #10                 // Method getAt:(I)Ljava/lang/Object;
      67: aastore
      68: iconst_1
      69: istore        5
      71: iload         5
      73: aload_2
      74: arraylength
      75: if_icmpge     124
      78: aload_3
      79: iload         5
      81: iaload
      82: istore        6
      84: iload         6
      86: iload         4
      88: if_icmpne     104
      91: aload_2
      92: iload         5
      94: aload_2
      95: iload         5
      97: iconst_1
      98: isub
      99: aaload
     100: aastore
     101: goto          118
     104: aload_2
     105: iload         5
     107: aload_0
     108: iload         6
     110: invokevirtual #10                 // Method getAt:(I)Ljava/lang/Object;
     113: aastore
     114: iload         6
     116: istore        4
     118: iinc          5, 1
     121: goto          71
     124: aload_2
     125: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     128: astore        5
     130: aload         5
     132: invokestatic  #12                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     135: areturn

  public static com.google.common.util.concurrent.Striped<java.util.concurrent.locks.Lock> lock(int);
    Code:
       0: new           #13                 // class com/google/common/util/concurrent/Striped$CompactStriped
       3: dup
       4: iload_0
       5: new           #14                 // class com/google/common/util/concurrent/Striped$1
       8: dup
       9: invokespecial #15                 // Method com/google/common/util/concurrent/Striped$1."<init>":()V
      12: aconst_null
      13: invokespecial #16                 // Method com/google/common/util/concurrent/Striped$CompactStriped."<init>":(ILcom/google/common/base/Supplier;Lcom/google/common/util/concurrent/Striped$1;)V
      16: areturn

  public static com.google.common.util.concurrent.Striped<java.util.concurrent.locks.Lock> lazyWeakLock(int);
    Code:
       0: iload_0
       1: new           #17                 // class com/google/common/util/concurrent/Striped$2
       4: dup
       5: invokespecial #18                 // Method com/google/common/util/concurrent/Striped$2."<init>":()V
       8: invokestatic  #19                 // Method lazy:(ILcom/google/common/base/Supplier;)Lcom/google/common/util/concurrent/Striped;
      11: areturn

  private static <L> com.google.common.util.concurrent.Striped<L> lazy(int, com.google.common.base.Supplier<L>);
    Code:
       0: iload_0
       1: sipush        1024
       4: if_icmpge     19
       7: new           #20                 // class com/google/common/util/concurrent/Striped$SmallLazyStriped
      10: dup
      11: iload_0
      12: aload_1
      13: invokespecial #21                 // Method com/google/common/util/concurrent/Striped$SmallLazyStriped."<init>":(ILcom/google/common/base/Supplier;)V
      16: goto          28
      19: new           #22                 // class com/google/common/util/concurrent/Striped$LargeLazyStriped
      22: dup
      23: iload_0
      24: aload_1
      25: invokespecial #23                 // Method com/google/common/util/concurrent/Striped$LargeLazyStriped."<init>":(ILcom/google/common/base/Supplier;)V
      28: areturn

  public static com.google.common.util.concurrent.Striped<java.util.concurrent.Semaphore> semaphore(int, int);
    Code:
       0: new           #13                 // class com/google/common/util/concurrent/Striped$CompactStriped
       3: dup
       4: iload_0
       5: new           #24                 // class com/google/common/util/concurrent/Striped$3
       8: dup
       9: iload_1
      10: invokespecial #25                 // Method com/google/common/util/concurrent/Striped$3."<init>":(I)V
      13: aconst_null
      14: invokespecial #16                 // Method com/google/common/util/concurrent/Striped$CompactStriped."<init>":(ILcom/google/common/base/Supplier;Lcom/google/common/util/concurrent/Striped$1;)V
      17: areturn

  public static com.google.common.util.concurrent.Striped<java.util.concurrent.Semaphore> lazyWeakSemaphore(int, int);
    Code:
       0: iload_0
       1: new           #26                 // class com/google/common/util/concurrent/Striped$4
       4: dup
       5: iload_1
       6: invokespecial #27                 // Method com/google/common/util/concurrent/Striped$4."<init>":(I)V
       9: invokestatic  #19                 // Method lazy:(ILcom/google/common/base/Supplier;)Lcom/google/common/util/concurrent/Striped;
      12: areturn

  public static com.google.common.util.concurrent.Striped<java.util.concurrent.locks.ReadWriteLock> readWriteLock(int);
    Code:
       0: new           #13                 // class com/google/common/util/concurrent/Striped$CompactStriped
       3: dup
       4: iload_0
       5: getstatic     #28                 // Field READ_WRITE_LOCK_SUPPLIER:Lcom/google/common/base/Supplier;
       8: aconst_null
       9: invokespecial #16                 // Method com/google/common/util/concurrent/Striped$CompactStriped."<init>":(ILcom/google/common/base/Supplier;Lcom/google/common/util/concurrent/Striped$1;)V
      12: areturn

  public static com.google.common.util.concurrent.Striped<java.util.concurrent.locks.ReadWriteLock> lazyWeakReadWriteLock(int);
    Code:
       0: iload_0
       1: getstatic     #28                 // Field READ_WRITE_LOCK_SUPPLIER:Lcom/google/common/base/Supplier;
       4: invokestatic  #19                 // Method lazy:(ILcom/google/common/base/Supplier;)Lcom/google/common/util/concurrent/Striped;
       7: areturn

  private static int ceilToPowerOfTwo(int);
    Code:
       0: iconst_1
       1: iload_0
       2: getstatic     #29                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
       5: invokestatic  #30                 // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
       8: ishl
       9: ireturn

  private static int smear(int);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        20
       4: iushr
       5: iload_0
       6: bipush        12
       8: iushr
       9: ixor
      10: ixor
      11: istore_0
      12: iload_0
      13: iload_0
      14: bipush        7
      16: iushr
      17: ixor
      18: iload_0
      19: iconst_4
      20: iushr
      21: ixor
      22: ireturn

  com.google.common.util.concurrent.Striped(com.google.common.util.concurrent.Striped$1);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: return

  static int access$200(int);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method ceilToPowerOfTwo:(I)I
       4: ireturn

  static int access$300(int);
    Code:
       0: iload_0
       1: invokestatic  #1                  // Method smear:(I)I
       4: ireturn

  static {};
    Code:
       0: new           #31                 // class com/google/common/util/concurrent/Striped$5
       3: dup
       4: invokespecial #32                 // Method com/google/common/util/concurrent/Striped$5."<init>":()V
       7: putstatic     #28                 // Field READ_WRITE_LOCK_SUPPLIER:Lcom/google/common/base/Supplier;
      10: return
}
