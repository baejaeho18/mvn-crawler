Compiled from "CharStreams.java"
public final class com.google.common.io.CharStreams {
  private static final int BUF_SIZE;

  private com.google.common.io.CharStreams();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static long copy(java.lang.Readable, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: sipush        2048
      13: invokestatic  #3                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      16: astore_2
      17: lconst_0
      18: lstore_3
      19: aload_0
      20: aload_2
      21: invokeinterface #4,  2            // InterfaceMethod java/lang/Readable.read:(Ljava/nio/CharBuffer;)I
      26: iconst_m1
      27: if_icmpeq     59
      30: aload_2
      31: invokevirtual #5                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      34: pop
      35: aload_1
      36: aload_2
      37: invokeinterface #6,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      42: pop
      43: lload_3
      44: aload_2
      45: invokevirtual #7                  // Method java/nio/CharBuffer.remaining:()I
      48: i2l
      49: ladd
      50: lstore_3
      51: aload_2
      52: invokevirtual #8                  // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      55: pop
      56: goto          19
      59: lload_3
      60: lreturn

  public static java.lang.String toString(java.lang.Readable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method toStringBuilder:(Ljava/lang/Readable;)Ljava/lang/StringBuilder;
       4: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       7: areturn

  private static java.lang.StringBuilder toStringBuilder(java.lang.Readable) throws java.io.IOException;
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #13                 // Method copy:(Ljava/lang/Readable;Ljava/lang/Appendable;)J
      13: pop2
      14: aload_1
      15: areturn

  public static java.util.List<java.lang.String> readLines(java.lang.Readable) throws java.io.IOException;
    Code:
       0: new           #14                 // class java/util/ArrayList
       3: dup
       4: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: new           #16                 // class com/google/common/io/LineReader
      11: dup
      12: aload_0
      13: invokespecial #17                 // Method com/google/common/io/LineReader."<init>":(Ljava/lang/Readable;)V
      16: astore_2
      17: aload_2
      18: invokevirtual #18                 // Method com/google/common/io/LineReader.readLine:()Ljava/lang/String;
      21: dup
      22: astore_3
      23: ifnull        37
      26: aload_1
      27: aload_3
      28: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: goto          17
      37: aload_1
      38: areturn

  public static <T> T readLines(java.lang.Readable, com.google.common.io.LineProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #16                 // class com/google/common/io/LineReader
      13: dup
      14: aload_0
      15: invokespecial #17                 // Method com/google/common/io/LineReader."<init>":(Ljava/lang/Readable;)V
      18: astore_2
      19: aload_2
      20: invokevirtual #18                 // Method com/google/common/io/LineReader.readLine:()Ljava/lang/String;
      23: dup
      24: astore_3
      25: ifnull        41
      28: aload_1
      29: aload_3
      30: invokeinterface #20,  2           // InterfaceMethod com/google/common/io/LineProcessor.processLine:(Ljava/lang/String;)Z
      35: ifne          19
      38: goto          41
      41: aload_1
      42: invokeinterface #21,  1           // InterfaceMethod com/google/common/io/LineProcessor.getResult:()Ljava/lang/Object;
      47: areturn

  public static void skipFully(java.io.Reader, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          53
      11: aload_0
      12: lload_1
      13: invokevirtual #22                 // Method java/io/Reader.skip:(J)J
      16: lstore_3
      17: lload_3
      18: lconst_0
      19: lcmp
      20: ifne          46
      23: aload_0
      24: invokevirtual #23                 // Method java/io/Reader.read:()I
      27: iconst_m1
      28: if_icmpne     39
      31: new           #24                 // class java/io/EOFException
      34: dup
      35: invokespecial #25                 // Method java/io/EOFException."<init>":()V
      38: athrow
      39: lload_1
      40: lconst_1
      41: lsub
      42: lstore_1
      43: goto          50
      46: lload_1
      47: lload_3
      48: lsub
      49: lstore_1
      50: goto          5
      53: return

  public static java.io.Writer nullWriter();
    Code:
       0: invokestatic  #26                 // Method com/google/common/io/CharStreams$NullWriter.access$000:()Lcom/google/common/io/CharStreams$NullWriter;
       3: areturn

  public static java.io.Writer asWriter(java.lang.Appendable);
    Code:
       0: aload_0
       1: instanceof    #27                 // class java/io/Writer
       4: ifeq          12
       7: aload_0
       8: checkcast     #27                 // class java/io/Writer
      11: areturn
      12: new           #28                 // class com/google/common/io/AppendableWriter
      15: dup
      16: aload_0
      17: invokespecial #29                 // Method com/google/common/io/AppendableWriter."<init>":(Ljava/lang/Appendable;)V
      20: areturn

  static java.io.Reader asReader(java.lang.Readable);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #30                 // class java/io/Reader
       9: ifeq          17
      12: aload_0
      13: checkcast     #30                 // class java/io/Reader
      16: areturn
      17: new           #31                 // class com/google/common/io/CharStreams$1
      20: dup
      21: aload_0
      22: invokespecial #32                 // Method com/google/common/io/CharStreams$1."<init>":(Ljava/lang/Readable;)V
      25: areturn
}
