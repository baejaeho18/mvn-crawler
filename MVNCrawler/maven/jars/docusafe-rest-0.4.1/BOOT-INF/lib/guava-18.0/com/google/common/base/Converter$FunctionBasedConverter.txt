Compiled from "Converter.java"
final class com.google.common.base.Converter$FunctionBasedConverter<A, B> extends com.google.common.base.Converter<A, B> implements java.io.Serializable {
  private final com.google.common.base.Function<? super A, ? extends B> forwardFunction;

  private final com.google.common.base.Function<? super B, ? extends A> backwardFunction;

  private com.google.common.base.Converter$FunctionBasedConverter(com.google.common.base.Function<? super A, ? extends B>, com.google.common.base.Function<? super B, ? extends A>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/base/Converter."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class com/google/common/base/Function
      12: putfield      #5                  // Field forwardFunction:Lcom/google/common/base/Function;
      15: aload_0
      16: aload_2
      17: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #4                  // class com/google/common/base/Function
      23: putfield      #6                  // Field backwardFunction:Lcom/google/common/base/Function;
      26: return

  protected B doForward(A);
    Code:
       0: aload_0
       1: getfield      #5                  // Field forwardFunction:Lcom/google/common/base/Function;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  protected A doBackward(B);
    Code:
       0: aload_0
       1: getfield      #6                  // Field backwardFunction:Lcom/google/common/base/Function;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class com/google/common/base/Converter$FunctionBasedConverter
       4: ifeq          50
       7: aload_1
       8: checkcast     #8                  // class com/google/common/base/Converter$FunctionBasedConverter
      11: astore_2
      12: aload_0
      13: getfield      #5                  // Field forwardFunction:Lcom/google/common/base/Function;
      16: aload_2
      17: getfield      #5                  // Field forwardFunction:Lcom/google/common/base/Function;
      20: invokeinterface #9,  2            // InterfaceMethod com/google/common/base/Function.equals:(Ljava/lang/Object;)Z
      25: ifeq          48
      28: aload_0
      29: getfield      #6                  // Field backwardFunction:Lcom/google/common/base/Function;
      32: aload_2
      33: getfield      #6                  // Field backwardFunction:Lcom/google/common/base/Function;
      36: invokeinterface #9,  2            // InterfaceMethod com/google/common/base/Function.equals:(Ljava/lang/Object;)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field forwardFunction:Lcom/google/common/base/Function;
       4: invokevirtual #10                 // Method java/lang/Object.hashCode:()I
       7: bipush        31
       9: imul
      10: aload_0
      11: getfield      #6                  // Field backwardFunction:Lcom/google/common/base/Function;
      14: invokevirtual #10                 // Method java/lang/Object.hashCode:()I
      17: iadd
      18: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field forwardFunction:Lcom/google/common/base/Function;
       4: invokestatic  #11                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       7: invokestatic  #11                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      10: astore_1
      11: aload_0
      12: getfield      #6                  // Field backwardFunction:Lcom/google/common/base/Function;
      15: invokestatic  #11                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: invokestatic  #11                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      21: astore_2
      22: new           #12                 // class java/lang/StringBuilder
      25: dup
      26: bipush        18
      28: aload_1
      29: invokevirtual #13                 // Method java/lang/String.length:()I
      32: iadd
      33: aload_2
      34: invokevirtual #13                 // Method java/lang/String.length:()I
      37: iadd
      38: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
      41: ldc           #15                 // String Converter.from(
      43: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #17                 // String ,
      52: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #18                 // String )
      61: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: areturn

  com.google.common.base.Converter$FunctionBasedConverter(com.google.common.base.Function, com.google.common.base.Function, com.google.common.base.Converter$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lcom/google/common/base/Function;Lcom/google/common/base/Function;)V
       6: return
}
