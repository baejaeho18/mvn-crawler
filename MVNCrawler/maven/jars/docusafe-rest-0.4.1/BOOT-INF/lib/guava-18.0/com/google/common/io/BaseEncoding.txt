Compiled from "BaseEncoding.java"
public abstract class com.google.common.io.BaseEncoding {
  private static final com.google.common.io.BaseEncoding BASE64;

  private static final com.google.common.io.BaseEncoding BASE64_URL;

  private static final com.google.common.io.BaseEncoding BASE32;

  private static final com.google.common.io.BaseEncoding BASE32_HEX;

  private static final com.google.common.io.BaseEncoding BASE16;

  com.google.common.io.BaseEncoding();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String encode(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #3                  // class "[B"
       8: iconst_0
       9: aload_1
      10: arraylength
      11: invokevirtual #4                  // Method encode:([BII)Ljava/lang/String;
      14: areturn

  public final java.lang.String encode(byte[], int, int);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_2
       6: iload_2
       7: iload_3
       8: iadd
       9: aload_1
      10: arraylength
      11: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkPositionIndexes:(III)V
      14: aload_0
      15: iload_3
      16: invokevirtual #6                  // Method maxEncodedSize:(I)I
      19: invokestatic  #7                  // Method com/google/common/io/GwtWorkarounds.stringBuilderOutput:(I)Lcom/google/common/io/GwtWorkarounds$CharOutput;
      22: astore        4
      24: aload_0
      25: aload         4
      27: invokevirtual #8                  // Method encodingStream:(Lcom/google/common/io/GwtWorkarounds$CharOutput;)Lcom/google/common/io/GwtWorkarounds$ByteOutput;
      30: astore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: iload_3
      38: if_icmpge     60
      41: aload         5
      43: aload_1
      44: iload_2
      45: iload         6
      47: iadd
      48: baload
      49: invokeinterface #9,  2            // InterfaceMethod com/google/common/io/GwtWorkarounds$ByteOutput.write:(B)V
      54: iinc          6, 1
      57: goto          35
      60: aload         5
      62: invokeinterface #10,  1           // InterfaceMethod com/google/common/io/GwtWorkarounds$ByteOutput.close:()V
      67: goto          82
      70: astore        6
      72: new           #12                 // class java/lang/AssertionError
      75: dup
      76: ldc           #13                 // String impossible
      78: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aload         4
      84: invokevirtual #15                 // Method java/lang/Object.toString:()Ljava/lang/String;
      87: areturn
    Exception table:
       from    to  target type
          32    67    70   Class java/io/IOException

  public final java.io.OutputStream encodingStream(java.io.Writer);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method com/google/common/io/GwtWorkarounds.asCharOutput:(Ljava/io/Writer;)Lcom/google/common/io/GwtWorkarounds$CharOutput;
       5: invokevirtual #8                  // Method encodingStream:(Lcom/google/common/io/GwtWorkarounds$CharOutput;)Lcom/google/common/io/GwtWorkarounds$ByteOutput;
       8: invokestatic  #17                 // Method com/google/common/io/GwtWorkarounds.asOutputStream:(Lcom/google/common/io/GwtWorkarounds$ByteOutput;)Ljava/io/OutputStream;
      11: areturn

  public final com.google.common.io.ByteSink encodingSink(com.google.common.io.CharSink);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #18                 // class com/google/common/io/BaseEncoding$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #19                 // Method com/google/common/io/BaseEncoding$1."<init>":(Lcom/google/common/io/BaseEncoding;Lcom/google/common/io/CharSink;)V
      14: areturn

  private static byte[] extract(byte[], int);
    Code:
       0: iload_1
       1: aload_0
       2: arraylength
       3: if_icmpne     8
       6: aload_0
       7: areturn
       8: iload_1
       9: newarray       byte
      11: astore_2
      12: aload_0
      13: iconst_0
      14: aload_2
      15: iconst_0
      16: iload_1
      17: invokestatic  #20                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_2
      21: areturn

  public final byte[] decode(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method decodeChecked:(Ljava/lang/CharSequence;)[B
       5: areturn
       6: astore_2
       7: new           #23                 // class java/lang/IllegalArgumentException
      10: dup
      11: aload_2
      12: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      15: athrow
    Exception table:
       from    to  target type
           0     5     6   Class com/google/common/io/BaseEncoding$DecodingException

  final byte[] decodeChecked(java.lang.CharSequence) throws com.google.common.io.BaseEncoding$DecodingException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method padding:()Lcom/google/common/base/CharMatcher;
       4: aload_1
       5: invokevirtual #26                 // Method com/google/common/base/CharMatcher.trimTrailingFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokestatic  #27                 // Method com/google/common/io/GwtWorkarounds.asCharInput:(Ljava/lang/CharSequence;)Lcom/google/common/io/GwtWorkarounds$CharInput;
      14: invokevirtual #28                 // Method decodingStream:(Lcom/google/common/io/GwtWorkarounds$CharInput;)Lcom/google/common/io/GwtWorkarounds$ByteInput;
      17: astore_2
      18: aload_0
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      25: invokevirtual #30                 // Method maxDecodedSize:(I)I
      28: newarray       byte
      30: astore_3
      31: iconst_0
      32: istore        4
      34: aload_2
      35: invokeinterface #31,  1           // InterfaceMethod com/google/common/io/GwtWorkarounds$ByteInput.read:()I
      40: istore        5
      42: iload         5
      44: iconst_m1
      45: if_icmpeq     69
      48: aload_3
      49: iload         4
      51: iinc          4, 1
      54: iload         5
      56: i2b
      57: bastore
      58: aload_2
      59: invokeinterface #31,  1           // InterfaceMethod com/google/common/io/GwtWorkarounds$ByteInput.read:()I
      64: istore        5
      66: goto          42
      69: goto          89
      72: astore        5
      74: aload         5
      76: athrow
      77: astore        5
      79: new           #12                 // class java/lang/AssertionError
      82: dup
      83: aload         5
      85: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      88: athrow
      89: aload_3
      90: iload         4
      92: invokestatic  #32                 // Method extract:([BI)[B
      95: areturn
    Exception table:
       from    to  target type
          34    69    72   Class com/google/common/io/BaseEncoding$DecodingException
          34    69    77   Class java/io/IOException

  public final java.io.InputStream decodingStream(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // Method com/google/common/io/GwtWorkarounds.asCharInput:(Ljava/io/Reader;)Lcom/google/common/io/GwtWorkarounds$CharInput;
       5: invokevirtual #28                 // Method decodingStream:(Lcom/google/common/io/GwtWorkarounds$CharInput;)Lcom/google/common/io/GwtWorkarounds$ByteInput;
       8: invokestatic  #34                 // Method com/google/common/io/GwtWorkarounds.asInputStream:(Lcom/google/common/io/GwtWorkarounds$ByteInput;)Ljava/io/InputStream;
      11: areturn

  public final com.google.common.io.ByteSource decodingSource(com.google.common.io.CharSource);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #35                 // class com/google/common/io/BaseEncoding$2
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #36                 // Method com/google/common/io/BaseEncoding$2."<init>":(Lcom/google/common/io/BaseEncoding;Lcom/google/common/io/CharSource;)V
      14: areturn

  abstract int maxEncodedSize(int);

  abstract com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput);

  abstract int maxDecodedSize(int);

  abstract com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput);

  abstract com.google.common.base.CharMatcher padding();

  public abstract com.google.common.io.BaseEncoding omitPadding();

  public abstract com.google.common.io.BaseEncoding withPadChar(char);

  public abstract com.google.common.io.BaseEncoding withSeparator(java.lang.String, int);

  public abstract com.google.common.io.BaseEncoding upperCase();

  public abstract com.google.common.io.BaseEncoding lowerCase();

  public static com.google.common.io.BaseEncoding base64();
    Code:
       0: getstatic     #37                 // Field BASE64:Lcom/google/common/io/BaseEncoding;
       3: areturn

  public static com.google.common.io.BaseEncoding base64Url();
    Code:
       0: getstatic     #38                 // Field BASE64_URL:Lcom/google/common/io/BaseEncoding;
       3: areturn

  public static com.google.common.io.BaseEncoding base32();
    Code:
       0: getstatic     #39                 // Field BASE32:Lcom/google/common/io/BaseEncoding;
       3: areturn

  public static com.google.common.io.BaseEncoding base32Hex();
    Code:
       0: getstatic     #40                 // Field BASE32_HEX:Lcom/google/common/io/BaseEncoding;
       3: areturn

  public static com.google.common.io.BaseEncoding base16();
    Code:
       0: getstatic     #41                 // Field BASE16:Lcom/google/common/io/BaseEncoding;
       3: areturn

  static com.google.common.io.GwtWorkarounds$CharInput ignoringInput(com.google.common.io.GwtWorkarounds$CharInput, com.google.common.base.CharMatcher);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #42                 // class com/google/common/io/BaseEncoding$3
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #43                 // Method com/google/common/io/BaseEncoding$3."<init>":(Lcom/google/common/io/GwtWorkarounds$CharInput;Lcom/google/common/base/CharMatcher;)V
      19: areturn

  static com.google.common.io.GwtWorkarounds$CharOutput separatingOutput(com.google.common.io.GwtWorkarounds$CharOutput, java.lang.String, int);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: new           #45                 // class com/google/common/io/BaseEncoding$4
      25: dup
      26: iload_2
      27: aload_1
      28: aload_0
      29: invokespecial #46                 // Method com/google/common/io/BaseEncoding$4."<init>":(ILjava/lang/String;Lcom/google/common/io/GwtWorkarounds$CharOutput;)V
      32: areturn

  static {};
    Code:
       0: new           #47                 // class com/google/common/io/BaseEncoding$StandardBaseEncoding
       3: dup
       4: ldc           #48                 // String base64()
       6: ldc           #49                 // String ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
       8: bipush        61
      10: invokestatic  #50                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      13: invokespecial #51                 // Method com/google/common/io/BaseEncoding$StandardBaseEncoding."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Character;)V
      16: putstatic     #37                 // Field BASE64:Lcom/google/common/io/BaseEncoding;
      19: new           #47                 // class com/google/common/io/BaseEncoding$StandardBaseEncoding
      22: dup
      23: ldc           #52                 // String base64Url()
      25: ldc           #53                 // String ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
      27: bipush        61
      29: invokestatic  #50                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      32: invokespecial #51                 // Method com/google/common/io/BaseEncoding$StandardBaseEncoding."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Character;)V
      35: putstatic     #38                 // Field BASE64_URL:Lcom/google/common/io/BaseEncoding;
      38: new           #47                 // class com/google/common/io/BaseEncoding$StandardBaseEncoding
      41: dup
      42: ldc           #54                 // String base32()
      44: ldc           #55                 // String ABCDEFGHIJKLMNOPQRSTUVWXYZ234567
      46: bipush        61
      48: invokestatic  #50                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      51: invokespecial #51                 // Method com/google/common/io/BaseEncoding$StandardBaseEncoding."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Character;)V
      54: putstatic     #39                 // Field BASE32:Lcom/google/common/io/BaseEncoding;
      57: new           #47                 // class com/google/common/io/BaseEncoding$StandardBaseEncoding
      60: dup
      61: ldc           #56                 // String base32Hex()
      63: ldc           #57                 // String 0123456789ABCDEFGHIJKLMNOPQRSTUV
      65: bipush        61
      67: invokestatic  #50                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      70: invokespecial #51                 // Method com/google/common/io/BaseEncoding$StandardBaseEncoding."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Character;)V
      73: putstatic     #40                 // Field BASE32_HEX:Lcom/google/common/io/BaseEncoding;
      76: new           #47                 // class com/google/common/io/BaseEncoding$StandardBaseEncoding
      79: dup
      80: ldc           #58                 // String base16()
      82: ldc           #59                 // String 0123456789ABCDEF
      84: aconst_null
      85: invokespecial #51                 // Method com/google/common/io/BaseEncoding$StandardBaseEncoding."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Character;)V
      88: putstatic     #41                 // Field BASE16:Lcom/google/common/io/BaseEncoding;
      91: return
}
