Compiled from "Maps.java"
public final class com.google.common.collect.Maps {
  static final com.google.common.base.Joiner$MapJoiner STANDARD_JOINER;

  private com.google.common.collect.Maps();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  static <K> com.google.common.base.Function<java.util.Map$Entry<K, ?>, K> keyFunction();
    Code:
       0: getstatic     #9                  // Field com/google/common/collect/Maps$EntryFunction.KEY:Lcom/google/common/collect/Maps$EntryFunction;
       3: areturn

  static <V> com.google.common.base.Function<java.util.Map$Entry<?, V>, V> valueFunction();
    Code:
       0: getstatic     #10                 // Field com/google/common/collect/Maps$EntryFunction.VALUE:Lcom/google/common/collect/Maps$EntryFunction;
       3: areturn

  static <K, V> java.util.Iterator<K> keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method keyFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #12                 // Method com/google/common/collect/Iterators.transform:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Ljava/util/Iterator;
       7: areturn

  static <K, V> java.util.Iterator<V> valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method valueFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #12                 // Method com/google/common/collect/Iterators.transform:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Ljava/util/Iterator;
       7: areturn

  static <K, V> com.google.common.collect.UnmodifiableIterator<V> valueIterator(com.google.common.collect.UnmodifiableIterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #14                 // class com/google/common/collect/Maps$1
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method com/google/common/collect/Maps$1."<init>":(Lcom/google/common/collect/UnmodifiableIterator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> com.google.common.collect.ImmutableMap<K, V> immutableEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #16                 // class com/google/common/collect/ImmutableEnumMap
       4: ifeq          14
       7: aload_0
       8: checkcast     #16                 // class com/google/common/collect/ImmutableEnumMap
      11: astore_1
      12: aload_1
      13: areturn
      14: aload_0
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      20: ifeq          27
      23: invokestatic  #18                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      26: areturn
      27: aload_0
      28: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore_1
      39: aload_1
      40: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          81
      48: aload_1
      49: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #23                 // class java/util/Map$Entry
      57: astore_2
      58: aload_2
      59: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_2
      69: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: goto          39
      81: new           #27                 // class java/util/EnumMap
      84: dup
      85: aload_0
      86: invokespecial #28                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
      89: invokestatic  #29                 // Method com/google/common/collect/ImmutableEnumMap.asImmutable:(Ljava/util/EnumMap;)Lcom/google/common/collect/ImmutableMap;
      92: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMap();
    Code:
       0: new           #30                 // class java/util/HashMap
       3: dup
       4: invokespecial #31                 // Method java/util/HashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: new           #30                 // class java/util/HashMap
       3: dup
       4: iload_0
       5: invokestatic  #32                 // Method capacity:(I)I
       8: invokespecial #33                 // Method java/util/HashMap."<init>":(I)V
      11: areturn

  static int capacity(int);
    Code:
       0: iload_0
       1: iconst_3
       2: if_icmpge     16
       5: iload_0
       6: ldc           #34                 // String expectedSize
       8: invokestatic  #35                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      11: pop
      12: iload_0
      13: iconst_1
      14: iadd
      15: ireturn
      16: iload_0
      17: ldc           #36                 // int 1073741824
      19: if_icmpge     28
      22: iload_0
      23: iload_0
      24: iconst_3
      25: idiv
      26: iadd
      27: ireturn
      28: ldc           #37                 // int 2147483647
      30: ireturn

  public static <K, V> java.util.HashMap<K, V> newHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #30                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokespecial #38                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap();
    Code:
       0: new           #39                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #40                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #39                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokespecial #41                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> newConcurrentMap();
    Code:
       0: new           #42                 // class com/google/common/collect/MapMaker
       3: dup
       4: invokespecial #43                 // Method com/google/common/collect/MapMaker."<init>":()V
       7: invokevirtual #44                 // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      10: areturn

  public static <K extends java.lang.Comparable, V> java.util.TreeMap<K, V> newTreeMap();
    Code:
       0: new           #45                 // class java/util/TreeMap
       3: dup
       4: invokespecial #46                 // Method java/util/TreeMap."<init>":()V
       7: areturn

  public static <K, V> java.util.TreeMap<K, V> newTreeMap(java.util.SortedMap<K, ? extends V>);
    Code:
       0: new           #45                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #47                 // Method java/util/TreeMap."<init>":(Ljava/util/SortedMap;)V
       8: areturn

  public static <C, K extends C, V> java.util.TreeMap<K, V> newTreeMap(java.util.Comparator<C>);
    Code:
       0: new           #45                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #48                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.lang.Class<K>);
    Code:
       0: new           #27                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #49                 // class java/lang/Class
      11: invokespecial #50                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      14: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: new           #27                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokespecial #28                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.IdentityHashMap<K, V> newIdentityHashMap();
    Code:
       0: new           #51                 // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #52                 // Method java/util/IdentityHashMap."<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #53                 // class java/util/SortedMap
       4: ifeq          20
       7: aload_0
       8: checkcast     #53                 // class java/util/SortedMap
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokestatic  #54                 // Method difference:(Ljava/util/SortedMap;Ljava/util/Map;)Lcom/google/common/collect/SortedMapDifference;
      17: astore_3
      18: aload_3
      19: areturn
      20: aload_0
      21: aload_1
      22: invokestatic  #55                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      25: invokestatic  #56                 // Method difference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;)Lcom/google/common/collect/MapDifference;
      28: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>);
    Code:
       0: aload_2
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #57                 // Method newHashMap:()Ljava/util/HashMap;
       8: astore_3
       9: new           #30                 // class java/util/HashMap
      12: dup
      13: aload_1
      14: invokespecial #38                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      17: astore        4
      19: invokestatic  #57                 // Method newHashMap:()Ljava/util/HashMap;
      22: astore        5
      24: invokestatic  #57                 // Method newHashMap:()Ljava/util/HashMap;
      27: astore        6
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: aload         5
      37: aload         6
      39: invokestatic  #58                 // Method doDifference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      42: new           #59                 // class com/google/common/collect/Maps$MapDifferenceImpl
      45: dup
      46: aload_3
      47: aload         4
      49: aload         5
      51: aload         6
      53: invokespecial #60                 // Method com/google/common/collect/Maps$MapDifferenceImpl."<init>":(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      56: areturn

  private static <K, V> void doDifference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, com.google.common.collect.MapDifference$ValueDifference<V>>);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        7
      13: aload         7
      15: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          135
      23: aload         7
      25: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #23                 // class java/util/Map$Entry
      33: astore        8
      35: aload         8
      37: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: astore        9
      44: aload         8
      46: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: astore        10
      53: aload_1
      54: aload         9
      56: invokeinterface #61,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      61: ifeq          121
      64: aload         4
      66: aload         9
      68: invokeinterface #62,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      73: astore        11
      75: aload_2
      76: aload         10
      78: aload         11
      80: invokevirtual #63                 // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
      83: ifeq          101
      86: aload         5
      88: aload         9
      90: aload         10
      92: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          118
     101: aload         6
     103: aload         9
     105: aload         10
     107: aload         11
     109: invokestatic  #65                 // Method com/google/common/collect/Maps$ValueDifferenceImpl.create:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/MapDifference$ValueDifference;
     112: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: goto          132
     121: aload_3
     122: aload         9
     124: aload         10
     126: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: goto          13
     135: return

  private static <K, V> java.util.Map<K, V> unmodifiableMap(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: instanceof    #53                 // class java/util/SortedMap
       4: ifeq          15
       7: aload_0
       8: checkcast     #53                 // class java/util/SortedMap
      11: invokestatic  #66                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      14: areturn
      15: aload_0
      16: invokestatic  #67                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      19: areturn

  public static <K, V> com.google.common.collect.SortedMapDifference<K, V> difference(java.util.SortedMap<K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokeinterface #68,  1           // InterfaceMethod java/util/SortedMap.comparator:()Ljava/util/Comparator;
      16: invokestatic  #69                 // Method orNaturalOrder:(Ljava/util/Comparator;)Ljava/util/Comparator;
      19: astore_2
      20: aload_2
      21: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      24: astore_3
      25: aload_2
      26: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      29: astore        4
      31: aload         4
      33: aload_1
      34: invokeinterface #71,  2           // InterfaceMethod java/util/SortedMap.putAll:(Ljava/util/Map;)V
      39: aload_2
      40: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      43: astore        5
      45: aload_2
      46: invokestatic  #70                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      49: astore        6
      51: aload_0
      52: aload_1
      53: invokestatic  #55                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      56: aload_3
      57: aload         4
      59: aload         5
      61: aload         6
      63: invokestatic  #58                 // Method doDifference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      66: new           #72                 // class com/google/common/collect/Maps$SortedMapDifferenceImpl
      69: dup
      70: aload_3
      71: aload         4
      73: aload         5
      75: aload         6
      77: invokespecial #73                 // Method com/google/common/collect/Maps$SortedMapDifferenceImpl."<init>":(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V
      80: areturn

  static <E> java.util.Comparator<? super E> orNaturalOrder(java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: ifnull        6
       4: aload_0
       5: areturn
       6: invokestatic  #74                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       9: areturn

  public static <K, V> java.util.Map<K, V> asMap(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_0
       1: instanceof    #75                 // class java/util/SortedSet
       4: ifeq          16
       7: aload_0
       8: checkcast     #75                 // class java/util/SortedSet
      11: aload_1
      12: invokestatic  #76                 // Method asMap:(Ljava/util/SortedSet;Lcom/google/common/base/Function;)Ljava/util/SortedMap;
      15: areturn
      16: new           #77                 // class com/google/common/collect/Maps$AsMapView
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #78                 // Method com/google/common/collect/Maps$AsMapView."<init>":(Ljava/util/Set;Lcom/google/common/base/Function;)V
      25: areturn

  public static <K, V> java.util.SortedMap<K, V> asMap(java.util.SortedSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #79                 // Method com/google/common/collect/Platform.mapsAsMapSortedSet:(Ljava/util/SortedSet;Lcom/google/common/base/Function;)Ljava/util/SortedMap;
       5: areturn

  static <K, V> java.util.SortedMap<K, V> asMapSortedIgnoreNavigable(java.util.SortedSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #80                 // class com/google/common/collect/Maps$SortedAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #81                 // Method com/google/common/collect/Maps$SortedAsMapView."<init>":(Ljava/util/SortedSet;Lcom/google/common/base/Function;)V
       9: areturn

  public static <K, V> java.util.NavigableMap<K, V> asMap(java.util.NavigableSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #82                 // class com/google/common/collect/Maps$NavigableAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #83                 // Method com/google/common/collect/Maps$NavigableAsMapView."<init>":(Ljava/util/NavigableSet;Lcom/google/common/base/Function;)V
       9: areturn

  static <K, V> java.util.Iterator<java.util.Map$Entry<K, V>> asMapEntryIterator(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #84                 // class com/google/common/collect/Maps$2
       3: dup
       4: aload_0
       5: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: aload_1
      11: invokespecial #86                 // Method com/google/common/collect/Maps$2."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Function;)V
      14: areturn

  private static <E> java.util.Set<E> removeOnlySet(java.util.Set<E>);
    Code:
       0: new           #87                 // class com/google/common/collect/Maps$3
       3: dup
       4: aload_0
       5: invokespecial #88                 // Method com/google/common/collect/Maps$3."<init>":(Ljava/util/Set;)V
       8: areturn

  private static <E> java.util.SortedSet<E> removeOnlySortedSet(java.util.SortedSet<E>);
    Code:
       0: new           #89                 // class com/google/common/collect/Maps$4
       3: dup
       4: aload_0
       5: invokespecial #90                 // Method com/google/common/collect/Maps$4."<init>":(Ljava/util/SortedSet;)V
       8: areturn

  private static <E> java.util.NavigableSet<E> removeOnlyNavigableSet(java.util.NavigableSet<E>);
    Code:
       0: new           #91                 // class com/google/common/collect/Maps$5
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method com/google/common/collect/Maps$5."<init>":(Ljava/util/NavigableSet;)V
       8: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_0
       1: invokeinterface #93,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #94                 // Method toMap:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> toMap(java.util.Iterator<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #95                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
       8: astore_2
       9: aload_0
      10: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_0
      19: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_3
      27: aload_1
      28: aload_3
      29: invokeinterface #96,  2           // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: goto          9
      43: aload_2
      44: invokestatic  #97                 // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
      47: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.lang.Iterable<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: invokeinterface #93,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #98                 // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.util.Iterator<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #99                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       8: astore_2
       9: aload_0
      10: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_0
      19: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_1
      27: aload_3
      28: invokeinterface #96,  2           // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_3
      34: invokevirtual #100                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      37: pop
      38: goto          9
      41: aload_2
      42: invokevirtual #101                // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      45: areturn

  public static com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> fromProperties(java.util.Properties);
    Code:
       0: invokestatic  #99                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       3: astore_1
       4: aload_0
       5: invokevirtual #102                // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
       8: astore_2
       9: aload_2
      10: invokeinterface #103,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          42
      18: aload_2
      19: invokeinterface #104,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: checkcast     #105                // class java/lang/String
      27: astore_3
      28: aload_1
      29: aload_3
      30: aload_0
      31: aload_3
      32: invokevirtual #106                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #100                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      38: pop
      39: goto          9
      42: aload_1
      43: invokevirtual #101                // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      46: areturn

  public static <K, V> java.util.Map$Entry<K, V> immutableEntry(K, V);
    Code:
       0: new           #107                // class com/google/common/collect/ImmutableEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #108                // Method com/google/common/collect/ImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  static <K, V> java.util.Set<java.util.Map$Entry<K, V>> unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #109                // class com/google/common/collect/Maps$UnmodifiableEntrySet
       3: dup
       4: aload_0
       5: invokestatic  #110                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       8: invokespecial #111                // Method com/google/common/collect/Maps$UnmodifiableEntrySet."<init>":(Ljava/util/Set;)V
      11: areturn

  static <K, V> java.util.Map$Entry<K, V> unmodifiableEntry(java.util.Map$Entry<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #112                // class com/google/common/collect/Maps$6
       8: dup
       9: aload_0
      10: invokespecial #113                // Method com/google/common/collect/Maps$6."<init>":(Ljava/util/Map$Entry;)V
      13: areturn

  public static <A, B> com.google.common.base.Converter<A, B> asConverter(com.google.common.collect.BiMap<A, B>);
    Code:
       0: new           #114                // class com/google/common/collect/Maps$BiMapConverter
       3: dup
       4: aload_0
       5: invokespecial #115                // Method com/google/common/collect/Maps$BiMapConverter."<init>":(Lcom/google/common/collect/BiMap;)V
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> synchronizedBiMap(com.google.common.collect.BiMap<K, V>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #116                // Method com/google/common/collect/Synchronized.biMap:(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Lcom/google/common/collect/BiMap;
       5: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V>);
    Code:
       0: new           #117                // class com/google/common/collect/Maps$UnmodifiableBiMap
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #118                // Method com/google/common/collect/Maps$UnmodifiableBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/collect/BiMap;)V
       9: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformValues(java.util.Map<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #120                // Method transformEntries:(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
       8: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformValues(java.util.SortedMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #121                // Method transformEntries:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformValues(java.util.NavigableMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #119                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #122                // Method transformEntries:(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformEntries(java.util.Map<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: instanceof    #53                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #53                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #121                // Method transformEntries:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
      15: areturn
      16: new           #123                // class com/google/common/collect/Maps$TransformedEntriesMap
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #124                // Method com/google/common/collect/Maps$TransformedEntriesMap."<init>":(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)V
      25: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformEntries(java.util.SortedMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #125                // Method com/google/common/collect/Platform.mapsTransformEntriesSortedMap:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
       5: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformEntries(java.util.NavigableMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #126                // class com/google/common/collect/Maps$TransformedEntriesNavigableMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #127                // Method com/google/common/collect/Maps$TransformedEntriesNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  static <K, V1, V2> java.util.SortedMap<K, V2> transformEntriesIgnoreNavigable(java.util.SortedMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #128                // class com/google/common/collect/Maps$TransformedEntriesSortedMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #129                // Method com/google/common/collect/Maps$TransformedEntriesSortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  static <K, V1, V2> com.google.common.collect.Maps$EntryTransformer<K, V1, V2> asEntryTransformer(com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #130                // class com/google/common/collect/Maps$7
       8: dup
       9: aload_0
      10: invokespecial #131                // Method com/google/common/collect/Maps$7."<init>":(Lcom/google/common/base/Function;)V
      13: areturn

  static <K, V1, V2> com.google.common.base.Function<V1, V2> asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, V1, V2>, K);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #132                // class com/google/common/collect/Maps$8
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #133                // Method com/google/common/collect/Maps$8."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;Ljava/lang/Object;)V
      14: areturn

  static <K, V1, V2> com.google.common.base.Function<java.util.Map$Entry<K, V1>, V2> asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #134                // class com/google/common/collect/Maps$9
       8: dup
       9: aload_0
      10: invokespecial #135                // Method com/google/common/collect/Maps$9."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;)V
      13: areturn

  static <V2, K, V1> java.util.Map$Entry<K, V2> transformEntry(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>, java.util.Map$Entry<K, V1>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #136                // class com/google/common/collect/Maps$10
      13: dup
      14: aload_1
      15: aload_0
      16: invokespecial #137                // Method com/google/common/collect/Maps$10."<init>":(Ljava/util/Map$Entry;Lcom/google/common/collect/Maps$EntryTransformer;)V
      19: areturn

  static <K, V1, V2> com.google.common.base.Function<java.util.Map$Entry<K, V1>, java.util.Map$Entry<K, V2>> asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #138                // class com/google/common/collect/Maps$11
       8: dup
       9: aload_0
      10: invokespecial #139                // Method com/google/common/collect/Maps$11."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;)V
      13: areturn

  static <K> com.google.common.base.Predicate<java.util.Map$Entry<K, ?>> keyPredicateOnEntries(com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method keyFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #140                // Method com/google/common/base/Predicates.compose:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lcom/google/common/base/Predicate;
       7: areturn

  static <V> com.google.common.base.Predicate<java.util.Map$Entry<?, V>> valuePredicateOnEntries(com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method valueFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #140                // Method com/google/common/base/Predicates.compose:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lcom/google/common/base/Predicate;
       7: areturn

  public static <K, V> java.util.Map<K, V> filterKeys(java.util.Map<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: instanceof    #53                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #53                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #141                // Method filterKeys:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      15: areturn
      16: aload_0
      17: instanceof    #142                // class com/google/common/collect/BiMap
      20: ifeq          32
      23: aload_0
      24: checkcast     #142                // class com/google/common/collect/BiMap
      27: aload_1
      28: invokestatic  #143                // Method filterKeys:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      31: areturn
      32: aload_1
      33: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_1
      38: invokestatic  #144                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      41: astore_2
      42: aload_0
      43: instanceof    #145                // class com/google/common/collect/Maps$AbstractFilteredMap
      46: ifeq          60
      49: aload_0
      50: checkcast     #145                // class com/google/common/collect/Maps$AbstractFilteredMap
      53: aload_2
      54: invokestatic  #146                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      57: goto          76
      60: new           #147                // class com/google/common/collect/Maps$FilteredKeyMap
      63: dup
      64: aload_0
      65: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #148                // class java/util/Map
      71: aload_1
      72: aload_2
      73: invokespecial #149                // Method com/google/common/collect/Maps$FilteredKeyMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V
      76: areturn

  public static <K, V> java.util.SortedMap<K, V> filterKeys(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #150                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterKeys(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #144                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #151                // Method filterEntries:(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterKeys(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokestatic  #144                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      10: invokestatic  #152                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      13: areturn

  public static <K, V> java.util.Map<K, V> filterValues(java.util.Map<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: instanceof    #53                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #53                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #153                // Method filterValues:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      15: areturn
      16: aload_0
      17: instanceof    #142                // class com/google/common/collect/BiMap
      20: ifeq          32
      23: aload_0
      24: checkcast     #142                // class com/google/common/collect/BiMap
      27: aload_1
      28: invokestatic  #154                // Method filterValues:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      31: areturn
      32: aload_0
      33: aload_1
      34: invokestatic  #155                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      37: invokestatic  #156                // Method filterEntries:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      40: areturn

  public static <K, V> java.util.SortedMap<K, V> filterValues(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #150                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterValues(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #151                // Method filterEntries:(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterValues(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #155                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #152                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
       8: areturn

  public static <K, V> java.util.Map<K, V> filterEntries(java.util.Map<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: instanceof    #53                 // class java/util/SortedMap
       4: ifeq          16
       7: aload_0
       8: checkcast     #53                 // class java/util/SortedMap
      11: aload_1
      12: invokestatic  #150                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      15: areturn
      16: aload_0
      17: instanceof    #142                // class com/google/common/collect/BiMap
      20: ifeq          32
      23: aload_0
      24: checkcast     #142                // class com/google/common/collect/BiMap
      27: aload_1
      28: invokestatic  #152                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      31: areturn
      32: aload_1
      33: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: instanceof    #145                // class com/google/common/collect/Maps$AbstractFilteredMap
      41: ifeq          55
      44: aload_0
      45: checkcast     #145                // class com/google/common/collect/Maps$AbstractFilteredMap
      48: aload_1
      49: invokestatic  #146                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      52: goto          70
      55: new           #157                // class com/google/common/collect/Maps$FilteredEntryMap
      58: dup
      59: aload_0
      60: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #148                // class java/util/Map
      66: aload_1
      67: invokespecial #158                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      70: areturn

  public static <K, V> java.util.SortedMap<K, V> filterEntries(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #159                // Method com/google/common/collect/Platform.mapsFilterSortedMap:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       5: areturn

  static <K, V> java.util.SortedMap<K, V> filterSortedIgnoreNavigable(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #160                // class com/google/common/collect/Maps$FilteredEntrySortedMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #160                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      16: aload_1
      17: invokestatic  #161                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntrySortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      20: goto          38
      23: new           #160                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      26: dup
      27: aload_0
      28: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #53                 // class java/util/SortedMap
      34: aload_1
      35: invokespecial #162                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterEntries(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #163                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #163                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      16: aload_1
      17: invokestatic  #164                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
      20: goto          38
      23: new           #163                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      26: dup
      27: aload_0
      28: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #165                // class java/util/NavigableMap
      34: aload_1
      35: invokespecial #166                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterEntries(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: instanceof    #167                // class com/google/common/collect/Maps$FilteredEntryBiMap
      14: ifeq          28
      17: aload_0
      18: checkcast     #167                // class com/google/common/collect/Maps$FilteredEntryBiMap
      21: aload_1
      22: invokestatic  #168                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntryBiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      25: goto          37
      28: new           #167                // class com/google/common/collect/Maps$FilteredEntryBiMap
      31: dup
      32: aload_0
      33: aload_1
      34: invokespecial #169                // Method com/google/common/collect/Maps$FilteredEntryBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)V
      37: areturn

  private static <K, V> java.util.Map<K, V> filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: new           #157                // class com/google/common/collect/Maps$FilteredEntryMap
       3: dup
       4: aload_0
       5: getfield      #170                // Field com/google/common/collect/Maps$AbstractFilteredMap.unfiltered:Ljava/util/Map;
       8: aload_0
       9: getfield      #171                // Field com/google/common/collect/Maps$AbstractFilteredMap.predicate:Lcom/google/common/base/Predicate;
      12: aload_1
      13: invokestatic  #172                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      16: invokespecial #158                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      19: areturn

  private static <K, V> java.util.SortedMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #173                // Field com/google/common/collect/Maps$FilteredEntrySortedMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #172                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #160                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      12: dup
      13: aload_0
      14: invokevirtual #174                // Method com/google/common/collect/Maps$FilteredEntrySortedMap.sortedMap:()Ljava/util/SortedMap;
      17: aload_2
      18: invokespecial #162                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> java.util.NavigableMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #175                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap.access$600:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;)Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #172                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #163                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      12: dup
      13: aload_0
      14: invokestatic  #176                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap.access$700:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;)Ljava/util/NavigableMap;
      17: aload_2
      18: invokespecial #166                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> com.google.common.collect.BiMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #177                // Field com/google/common/collect/Maps$FilteredEntryBiMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #172                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #167                // class com/google/common/collect/Maps$FilteredEntryBiMap
      12: dup
      13: aload_0
      14: invokevirtual #178                // Method com/google/common/collect/Maps$FilteredEntryBiMap.unfiltered:()Lcom/google/common/collect/BiMap;
      17: aload_2
      18: invokespecial #169                // Method com/google/common/collect/Maps$FilteredEntryBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  public static <K, V> java.util.NavigableMap<K, V> unmodifiableNavigableMap(java.util.NavigableMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #179                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
       9: ifeq          14
      12: aload_0
      13: areturn
      14: new           #179                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
      17: dup
      18: aload_0
      19: invokespecial #180                // Method com/google/common/collect/Maps$UnmodifiableNavigableMap."<init>":(Ljava/util/NavigableMap;)V
      22: areturn

  private static <K, V> java.util.Map$Entry<K, V> unmodifiableOrNull(java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokestatic  #181                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      12: areturn

  public static <K, V> java.util.NavigableMap<K, V> synchronizedNavigableMap(java.util.NavigableMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #182                // Method com/google/common/collect/Synchronized.navigableMap:(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
       4: areturn

  static <V> V safeGet(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #183,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: astore_2
      17: aconst_null
      18: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static boolean safeContainsKey(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #61,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      12: ireturn
      13: astore_2
      14: iconst_0
      15: ireturn
      16: astore_2
      17: iconst_0
      18: ireturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static <V> V safeRemove(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #62,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: astore_2
      17: aconst_null
      18: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static boolean containsKeyImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: invokestatic  #186                // Method keyIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      14: aload_1
      15: invokestatic  #187                // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      18: ireturn

  static boolean containsValueImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #85,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: invokestatic  #188                // Method valueIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      14: aload_1
      15: invokestatic  #187                // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      18: ireturn

  static <K, V> boolean containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #23                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #23                 // class java/util/Map$Entry
      14: invokestatic  #181                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #189,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      22: ireturn

  static <K, V> boolean removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #23                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #23                 // class java/util/Map$Entry
      14: invokestatic  #181                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #190,  2          // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      22: ireturn

  static boolean equalsImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #148                // class java/util/Map
      11: ifeq          37
      14: aload_1
      15: checkcast     #148                // class java/util/Map
      18: astore_2
      19: aload_0
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: aload_2
      26: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #191,  2          // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  static java.lang.String toStringImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #192,  1          // InterfaceMethod java/util/Map.size:()I
       6: invokestatic  #193                // Method com/google/common/collect/Collections2.newStringBuilderForCollection:(I)Ljava/lang/StringBuilder;
       9: bipush        123
      11: invokevirtual #194                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: astore_1
      15: getstatic     #195                // Field STANDARD_JOINER:Lcom/google/common/base/Joiner$MapJoiner;
      18: aload_1
      19: aload_0
      20: invokevirtual #196                // Method com/google/common/base/Joiner$MapJoiner.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: bipush        125
      27: invokevirtual #194                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: invokevirtual #197                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  static <K, V> void putAllImpl(java.util.Map<K, V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #20,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #23                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          12
      53: return

  static <K> K keyOrNull(java.util.Map$Entry<K, ?>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: areturn

  static <V> V valueOrNull(java.util.Map$Entry<?, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #26,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      14: areturn

  static java.util.Map access$100(java.util.Map);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  static java.util.Set access$200(java.util.Set);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method removeOnlySet:(Ljava/util/Set;)Ljava/util/Set;
       4: areturn

  static java.util.SortedSet access$300(java.util.SortedSet);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method removeOnlySortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;
       4: areturn

  static java.util.NavigableSet access$400(java.util.NavigableSet);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method removeOnlyNavigableSet:(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
       4: areturn

  static java.util.Map$Entry access$800(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method unmodifiableOrNull:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
       4: areturn

  static {};
    Code:
       0: getstatic     #198                // Field com/google/common/collect/Collections2.STANDARD_JOINER:Lcom/google/common/base/Joiner;
       3: ldc           #199                // String =
       5: invokevirtual #200                // Method com/google/common/base/Joiner.withKeyValueSeparator:(Ljava/lang/String;)Lcom/google/common/base/Joiner$MapJoiner;
       8: putstatic     #195                // Field STANDARD_JOINER:Lcom/google/common/base/Joiner$MapJoiner;
      11: return
}
