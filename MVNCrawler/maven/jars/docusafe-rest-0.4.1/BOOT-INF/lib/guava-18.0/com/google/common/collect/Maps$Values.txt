Compiled from "Maps.java"
class com.google.common.collect.Maps$Values<K, V> extends java.util.AbstractCollection<V> {
  final java.util.Map<K, V> map;

  com.google.common.collect.Maps$Values(java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractCollection."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/util/Map
      12: putfield      #4                  // Field map:Ljava/util/Map;
      15: return

  final java.util.Map<K, V> map();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: areturn

  public java.util.Iterator<V> iterator();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method map:()Ljava/util/Map;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: invokestatic  #8                  // Method com/google/common/collect/Maps.valueIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      17: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method java/util/AbstractCollection.remove:(Ljava/lang/Object;)Z
       5: ireturn
       6: astore_2
       7: aload_0
       8: invokevirtual #5                  // Method map:()Ljava/util/Map;
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          78
      31: aload_3
      32: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #14                 // class java/util/Map$Entry
      40: astore        4
      42: aload_1
      43: aload         4
      45: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: invokestatic  #16                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      53: ifeq          75
      56: aload_0
      57: invokevirtual #5                  // Method map:()Ljava/util/Map;
      60: aload         4
      62: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      67: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: iconst_1
      74: ireturn
      75: goto          22
      78: iconst_0
      79: ireturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/UnsupportedOperationException

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #19                 // class java/util/Collection
       8: invokespecial #20                 // Method java/util/AbstractCollection.removeAll:(Ljava/util/Collection;)Z
      11: ireturn
      12: astore_2
      13: invokestatic  #21                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      16: astore_3
      17: aload_0
      18: invokevirtual #5                  // Method map:()Ljava/util/Map;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          88
      43: aload         4
      45: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #14                 // class java/util/Map$Entry
      53: astore        5
      55: aload_1
      56: aload         5
      58: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      68: ifeq          85
      71: aload_3
      72: aload         5
      74: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      84: pop
      85: goto          33
      88: aload_0
      89: invokevirtual #5                  // Method map:()Ljava/util/Map;
      92: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      97: aload_3
      98: invokeinterface #25,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     103: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/UnsupportedOperationException

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #19                 // class java/util/Collection
       8: invokespecial #26                 // Method java/util/AbstractCollection.retainAll:(Ljava/util/Collection;)Z
      11: ireturn
      12: astore_2
      13: invokestatic  #21                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      16: astore_3
      17: aload_0
      18: invokevirtual #5                  // Method map:()Ljava/util/Map;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #11,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          88
      43: aload         4
      45: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #14                 // class java/util/Map$Entry
      53: astore        5
      55: aload_1
      56: aload         5
      58: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      63: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      68: ifeq          85
      71: aload_3
      72: aload         5
      74: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      84: pop
      85: goto          33
      88: aload_0
      89: invokevirtual #5                  // Method map:()Ljava/util/Map;
      92: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      97: aload_3
      98: invokeinterface #27,  2           // InterfaceMethod java/util/Set.retainAll:(Ljava/util/Collection;)Z
     103: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/UnsupportedOperationException

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method map:()Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method map:()Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method map:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method map:()Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return
}
