Compiled from "Splitter.java"
public final class com.google.common.base.Splitter$MapSplitter {
  private static final java.lang.String INVALID_ENTRY_MESSAGE;

  private final com.google.common.base.Splitter outerSplitter;

  private final com.google.common.base.Splitter entrySplitter;

  private com.google.common.base.Splitter$MapSplitter(com.google.common.base.Splitter, com.google.common.base.Splitter);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field outerSplitter:Lcom/google/common/base/Splitter;
       9: aload_0
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #5                  // class com/google/common/base/Splitter
      17: putfield      #6                  // Field entrySplitter:Lcom/google/common/base/Splitter;
      20: return

  public java.util.Map<java.lang.String, java.lang.String> split(java.lang.CharSequence);
    Code:
       0: new           #7                  // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #8                  // Method java/util/LinkedHashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #3                  // Field outerSplitter:Lcom/google/common/base/Splitter;
      12: aload_1
      13: invokevirtual #9                  // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      16: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          192
      31: aload_3
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #13                 // class java/lang/String
      40: astore        4
      42: aload_0
      43: getfield      #6                  // Field entrySplitter:Lcom/google/common/base/Splitter;
      46: aload         4
      48: invokestatic  #14                 // Method com/google/common/base/Splitter.access$000:(Lcom/google/common/base/Splitter;Ljava/lang/CharSequence;)Ljava/util/Iterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ldc           #15                 // String Chunk [%s] is not a valid entry
      62: iconst_1
      63: anewarray     #16                 // class java/lang/Object
      66: dup
      67: iconst_0
      68: aload         4
      70: aastore
      71: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      74: aload         5
      76: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #13                 // class java/lang/String
      84: astore        6
      86: aload_2
      87: aload         6
      89: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      94: ifne          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: ldc           #19                 // String Duplicate key [%s] found.
     104: iconst_1
     105: anewarray     #16                 // class java/lang/Object
     108: dup
     109: iconst_0
     110: aload         6
     112: aastore
     113: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     116: aload         5
     118: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     123: ldc           #15                 // String Chunk [%s] is not a valid entry
     125: iconst_1
     126: anewarray     #16                 // class java/lang/Object
     129: dup
     130: iconst_0
     131: aload         4
     133: aastore
     134: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     137: aload         5
     139: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     144: checkcast     #13                 // class java/lang/String
     147: astore        7
     149: aload_2
     150: aload         6
     152: aload         7
     154: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     159: pop
     160: aload         5
     162: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     167: ifne          174
     170: iconst_1
     171: goto          175
     174: iconst_0
     175: ldc           #15                 // String Chunk [%s] is not a valid entry
     177: iconst_1
     178: anewarray     #16                 // class java/lang/Object
     181: dup
     182: iconst_0
     183: aload         4
     185: aastore
     186: invokestatic  #17                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     189: goto          22
     192: aload_2
     193: invokestatic  #21                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     196: areturn

  com.google.common.base.Splitter$MapSplitter(com.google.common.base.Splitter, com.google.common.base.Splitter, com.google.common.base.Splitter$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lcom/google/common/base/Splitter;Lcom/google/common/base/Splitter;)V
       6: return
}
