Compiled from "LambdaSafe.java"
abstract class org.springframework.boot.util.LambdaSafe$LambdaSafeCallback<C, A, SELF extends org.springframework.boot.util.LambdaSafe$LambdaSafeCallback<C, A, SELF>> {
  private final java.lang.Class<C> callbackType;

  private final A argument;

  private final java.lang.Object[] additionalArguments;

  private org.apache.commons.logging.Log logger;

  private org.springframework.boot.util.LambdaSafe$Filter<C, A> filter;

  protected org.springframework.boot.util.LambdaSafe$LambdaSafeCallback(java.lang.Class<C>, A, java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/boot/util/LambdaSafe$GenericTypeFilter
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method org/springframework/boot/util/LambdaSafe$GenericTypeFilter."<init>":(Lorg/springframework/boot/util/LambdaSafe$1;)V
      13: putfield      #4                  // Field filter:Lorg/springframework/boot/util/LambdaSafe$Filter;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field callbackType:Ljava/lang/Class;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field argument:Ljava/lang/Object;
      26: aload_0
      27: aload_3
      28: putfield      #7                  // Field additionalArguments:[Ljava/lang/Object;
      31: aload_0
      32: aload_1
      33: invokestatic  #8                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      36: putfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      39: return

  public SELF withLogger(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: invokevirtual #10                 // Method withLogger:(Lorg/apache/commons/logging/Log;)Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
       8: areturn

  public SELF withLogger(org.apache.commons.logging.Log);
    Code:
       0: aload_1
       1: ldc           #11                 // String Logger must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_0
      12: invokespecial #13                 // Method self:()Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
      15: areturn

  public SELF withFilter(org.springframework.boot.util.LambdaSafe$Filter<C, A>);
    Code:
       0: aload_1
       1: ldc           #14                 // String Filter must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field filter:Lorg/springframework/boot/util/LambdaSafe$Filter;
      11: aload_0
      12: invokespecial #13                 // Method self:()Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;
      15: areturn

  protected final <R> org.springframework.boot.util.LambdaSafe$InvocationResult<R> invoke(C, java.util.function.Supplier<R>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field filter:Lorg/springframework/boot/util/LambdaSafe$Filter;
       4: aload_0
       5: getfield      #5                  // Field callbackType:Ljava/lang/Class;
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field argument:Ljava/lang/Object;
      13: aload_0
      14: getfield      #7                  // Field additionalArguments:[Ljava/lang/Object;
      17: invokeinterface #15,  5           // InterfaceMethod org/springframework/boot/util/LambdaSafe$Filter.match:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Z
      22: ifeq          52
      25: aload_2
      26: invokeinterface #16,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      31: invokestatic  #17                 // Method org/springframework/boot/util/LambdaSafe$InvocationResult.of:(Ljava/lang/Object;)Lorg/springframework/boot/util/LambdaSafe$InvocationResult;
      34: areturn
      35: astore_3
      36: aload_0
      37: aload_3
      38: invokespecial #19                 // Method isLambdaGenericProblem:(Ljava/lang/ClassCastException;)Z
      41: ifne          46
      44: aload_3
      45: athrow
      46: aload_0
      47: aload_1
      48: aload_3
      49: invokespecial #20                 // Method logNonMatchingType:(Ljava/lang/Object;Ljava/lang/ClassCastException;)V
      52: invokestatic  #21                 // Method org/springframework/boot/util/LambdaSafe$InvocationResult.noResult:()Lorg/springframework/boot/util/LambdaSafe$InvocationResult;
      55: areturn
    Exception table:
       from    to  target type
          25    34    35   Class java/lang/ClassCastException

  private boolean isLambdaGenericProblem(java.lang.ClassCastException);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
       4: ifnull        18
       7: aload_0
       8: aload_1
       9: invokevirtual #22                 // Method java/lang/ClassCastException.getMessage:()Ljava/lang/String;
      12: invokespecial #23                 // Method startsWithArgumentClassName:(Ljava/lang/String;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean startsWithArgumentClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #24,  0             // InvokeDynamic #0:test:(Lorg/springframework/boot/util/LambdaSafe$LambdaSafeCallback;Ljava/lang/String;)Ljava/util/function/Predicate;
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #6                  // Field argument:Ljava/lang/Object;
      13: invokeinterface #25,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      18: ifne          37
      21: aload_0
      22: getfield      #7                  // Field additionalArguments:[Ljava/lang/Object;
      25: invokestatic  #26                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      28: aload_2
      29: invokeinterface #27,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private boolean startsWithArgumentClassName(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_2
       7: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: astore_3
      11: aload_1
      12: aload_3
      13: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      16: invokevirtual #30                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          24
      22: iconst_1
      23: ireturn
      24: invokestatic  #31                 // Method org/springframework/boot/util/LambdaSafe.access$300:()Ljava/lang/reflect/Method;
      27: ifnull        85
      30: invokestatic  #31                 // Method org/springframework/boot/util/LambdaSafe.access$300:()Ljava/lang/reflect/Method;
      33: aload_3
      34: invokestatic  #32                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      37: astore        4
      39: invokestatic  #33                 // Method org/springframework/boot/util/LambdaSafe.access$400:()Ljava/lang/reflect/Method;
      42: aload         4
      44: invokestatic  #32                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      47: astore        5
      49: aload_1
      50: new           #34                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      57: aload         5
      59: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: ldc           #37                 // String /
      64: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_3
      68: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      71: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #30                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      80: ifeq          85
      83: iconst_1
      84: ireturn
      85: iconst_0
      86: ireturn

  private void logNonMatchingType(C, java.lang.ClassCastException);
    Code:
       0: aload_0
       1: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          113
      12: aload_0
      13: getfield      #5                  // Field callbackType:Ljava/lang/Class;
      16: invokestatic  #41                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      19: iconst_0
      20: newarray       int
      22: invokevirtual #42                 // Method org/springframework/core/ResolvableType.resolveGeneric:([I)Ljava/lang/Class;
      25: astore_3
      26: new           #34                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #43                 // String Non-matching
      35: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_3
      39: ifnonnull     47
      42: ldc           #44                 // String type
      44: goto          69
      47: new           #34                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      54: aload_3
      55: invokestatic  #45                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      58: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #46                 // String  type
      63: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #47                 // String  for callback
      74: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #5                  // Field callbackType:Ljava/lang/Class;
      81: invokestatic  #45                 // Method org/springframework/util/ClassUtils.getShortName:(Ljava/lang/Class;)Ljava/lang/String;
      84: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #48                 // String :
      89: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      96: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: astore        4
     101: aload_0
     102: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
     105: aload         4
     107: aload_2
     108: invokeinterface #49,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     113: return

  private SELF self();
    Code:
       0: aload_0
       1: areturn

  private boolean lambda$startsWithArgumentClassName$0(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #50                 // Method startsWithArgumentClassName:(Ljava/lang/String;Ljava/lang/Object;)Z
       6: ireturn
}
