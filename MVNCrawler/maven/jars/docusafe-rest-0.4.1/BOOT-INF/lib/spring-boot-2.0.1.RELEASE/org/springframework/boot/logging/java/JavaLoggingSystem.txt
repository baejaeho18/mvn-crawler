Compiled from "JavaLoggingSystem.java"
public class org.springframework.boot.logging.java.JavaLoggingSystem extends org.springframework.boot.logging.AbstractLoggingSystem {
  private static final org.springframework.boot.logging.AbstractLoggingSystem$LogLevels<java.util.logging.Level> LEVELS;

  public org.springframework.boot.logging.java.JavaLoggingSystem(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/boot/logging/AbstractLoggingSystem."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  protected java.lang.String[] getStandardConfigLocations();
    Code:
       0: iconst_1
       1: anewarray     #2                  // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #3                  // String logging.properties
       8: aastore
       9: areturn

  public void beforeInitialize();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/springframework/boot/logging/AbstractLoggingSystem.beforeInitialize:()V
       4: ldc           #5                  // String
       6: invokestatic  #6                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: getstatic     #7                  // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      12: invokevirtual #8                  // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
      15: return

  protected void loadDefaults(org.springframework.boot.logging.LoggingInitializationContext, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_2
       1: ifnull        18
       4: aload_0
       5: aload_0
       6: ldc           #9                  // String logging-file.properties
       8: invokevirtual #10                 // Method getPackagedConfigFile:(Ljava/lang/String;)Ljava/lang/String;
      11: aload_2
      12: invokevirtual #11                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      15: goto          29
      18: aload_0
      19: aload_0
      20: ldc           #3                  // String logging.properties
      22: invokevirtual #10                 // Method getPackagedConfigFile:(Ljava/lang/String;)Ljava/lang/String;
      25: aload_2
      26: invokevirtual #11                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      29: return

  protected void loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext, java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokevirtual #11                 // Method loadConfiguration:(Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
       6: return

  protected void loadConfiguration(java.lang.String, org.springframework.boot.logging.LogFile);
    Code:
       0: aload_1
       1: ldc           #12                 // String Location must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #14                 // class java/io/InputStreamReader
       9: dup
      10: aload_1
      11: invokestatic  #15                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      14: invokevirtual #16                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      17: invokespecial #17                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      20: invokestatic  #18                 // Method org/springframework/util/FileCopyUtils.copyToString:(Ljava/io/Reader;)Ljava/lang/String;
      23: astore_3
      24: aload_2
      25: ifnull        42
      28: aload_3
      29: ldc           #19                 // String ${LOG_FILE}
      31: aload_2
      32: invokevirtual #20                 // Method org/springframework/boot/logging/LogFile.toString:()Ljava/lang/String;
      35: invokestatic  #21                 // Method org/springframework/util/StringUtils.cleanPath:(Ljava/lang/String;)Ljava/lang/String;
      38: invokevirtual #22                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      41: astore_3
      42: invokestatic  #23                 // Method java/util/logging/LogManager.getLogManager:()Ljava/util/logging/LogManager;
      45: new           #24                 // class java/io/ByteArrayInputStream
      48: dup
      49: aload_3
      50: invokevirtual #25                 // Method java/lang/String.getBytes:()[B
      53: invokespecial #26                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      56: invokevirtual #27                 // Method java/util/logging/LogManager.readConfiguration:(Ljava/io/InputStream;)V
      59: goto          91
      62: astore_3
      63: new           #29                 // class java/lang/IllegalStateException
      66: dup
      67: new           #30                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #32                 // String Could not initialize Java logging from
      76: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_1
      80: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: aload_3
      87: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: athrow
      91: return
    Exception table:
       from    to  target type
           6    59    62   Class java/lang/Exception

  public java.util.Set<org.springframework.boot.logging.LogLevel> getSupportedLogLevels();
    Code:
       0: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
       3: invokevirtual #37                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.getSupported:()Ljava/util/Set;
       6: areturn

  public void setLogLevel(java.lang.String, org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_1
       1: ifnull        13
       4: ldc           #39                 // String ROOT
       6: aload_1
       7: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          16
      13: ldc           #5                  // String
      15: astore_1
      16: aload_1
      17: invokestatic  #6                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      20: astore_3
      21: aload_3
      22: ifnull        39
      25: aload_3
      26: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      29: aload_2
      30: invokevirtual #41                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertSystemToNative:(Lorg/springframework/boot/logging/LogLevel;)Ljava/lang/Object;
      33: checkcast     #42                 // class java/util/logging/Level
      36: invokevirtual #8                  // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
      39: return

  public java.util.List<org.springframework.boot.logging.LoggerConfiguration> getLoggerConfigurations();
    Code:
       0: new           #43                 // class java/util/ArrayList
       3: dup
       4: invokespecial #44                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: invokestatic  #23                 // Method java/util/logging/LogManager.getLogManager:()Ljava/util/logging/LogManager;
      11: invokevirtual #45                 // Method java/util/logging/LogManager.getLoggerNames:()Ljava/util/Enumeration;
      14: astore_2
      15: aload_2
      16: invokeinterface #46,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      21: ifeq          47
      24: aload_1
      25: aload_0
      26: aload_2
      27: invokeinterface #47,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      32: checkcast     #2                  // class java/lang/String
      35: invokevirtual #48                 // Method getLoggerConfiguration:(Ljava/lang/String;)Lorg/springframework/boot/logging/LoggerConfiguration;
      38: invokeinterface #49,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: goto          15
      47: aload_1
      48: getstatic     #50                 // Field CONFIGURATION_COMPARATOR:Ljava/util/Comparator;
      51: invokeinterface #51,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V
      56: aload_1
      57: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      60: areturn

  public org.springframework.boot.logging.LoggerConfiguration getLoggerConfiguration(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      14: aload_2
      15: invokevirtual #53                 // Method java/util/logging/Logger.getLevel:()Ljava/util/logging/Level;
      18: invokevirtual #54                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertNativeToSystem:(Ljava/lang/Object;)Lorg/springframework/boot/logging/LogLevel;
      21: astore_3
      22: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      25: aload_0
      26: aload_2
      27: invokespecial #55                 // Method getEffectiveLevel:(Ljava/util/logging/Logger;)Ljava/util/logging/Level;
      30: invokevirtual #54                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.convertNativeToSystem:(Ljava/lang/Object;)Lorg/springframework/boot/logging/LogLevel;
      33: astore        4
      35: aload_2
      36: invokevirtual #56                 // Method java/util/logging/Logger.getName:()Ljava/lang/String;
      39: invokestatic  #57                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      42: ifeq          52
      45: aload_2
      46: invokevirtual #56                 // Method java/util/logging/Logger.getName:()Ljava/lang/String;
      49: goto          54
      52: ldc           #39                 // String ROOT
      54: astore        5
      56: new           #58                 // class org/springframework/boot/logging/LoggerConfiguration
      59: dup
      60: aload         5
      62: aload_3
      63: aload         4
      65: invokespecial #59                 // Method org/springframework/boot/logging/LoggerConfiguration."<init>":(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;Lorg/springframework/boot/logging/LogLevel;)V
      68: areturn

  private java.util.logging.Level getEffectiveLevel(java.util.logging.Logger);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: invokevirtual #53                 // Method java/util/logging/Logger.getLevel:()Ljava/util/logging/Level;
       6: ifnonnull     17
       9: aload_2
      10: invokevirtual #60                 // Method java/util/logging/Logger.getParent:()Ljava/util/logging/Logger;
      13: astore_2
      14: goto          2
      17: aload_2
      18: invokevirtual #53                 // Method java/util/logging/Logger.getLevel:()Ljava/util/logging/Level;
      21: areturn

  public java.lang.Runnable getShutdownHandler();
    Code:
       0: new           #61                 // class org/springframework/boot/logging/java/JavaLoggingSystem$ShutdownHandler
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #62                 // Method org/springframework/boot/logging/java/JavaLoggingSystem$ShutdownHandler."<init>":(Lorg/springframework/boot/logging/java/JavaLoggingSystem;Lorg/springframework/boot/logging/java/JavaLoggingSystem$1;)V
       9: areturn

  static {};
    Code:
       0: new           #63                 // class org/springframework/boot/logging/AbstractLoggingSystem$LogLevels
       3: dup
       4: invokespecial #64                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels."<init>":()V
       7: putstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      10: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      13: getstatic     #65                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      16: getstatic     #66                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      19: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      22: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      25: getstatic     #68                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      28: getstatic     #69                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      31: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      34: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      37: getstatic     #70                 // Field org/springframework/boot/logging/LogLevel.INFO:Lorg/springframework/boot/logging/LogLevel;
      40: getstatic     #71                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      43: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      46: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      49: getstatic     #72                 // Field org/springframework/boot/logging/LogLevel.WARN:Lorg/springframework/boot/logging/LogLevel;
      52: getstatic     #73                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      55: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      58: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      61: getstatic     #74                 // Field org/springframework/boot/logging/LogLevel.ERROR:Lorg/springframework/boot/logging/LogLevel;
      64: getstatic     #7                  // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      67: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      70: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      73: getstatic     #75                 // Field org/springframework/boot/logging/LogLevel.FATAL:Lorg/springframework/boot/logging/LogLevel;
      76: getstatic     #7                  // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      79: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      82: getstatic     #36                 // Field LEVELS:Lorg/springframework/boot/logging/AbstractLoggingSystem$LogLevels;
      85: getstatic     #76                 // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      88: getstatic     #77                 // Field java/util/logging/Level.OFF:Ljava/util/logging/Level;
      91: invokevirtual #67                 // Method org/springframework/boot/logging/AbstractLoggingSystem$LogLevels.map:(Lorg/springframework/boot/logging/LogLevel;Ljava/lang/Object;)V
      94: return
}
