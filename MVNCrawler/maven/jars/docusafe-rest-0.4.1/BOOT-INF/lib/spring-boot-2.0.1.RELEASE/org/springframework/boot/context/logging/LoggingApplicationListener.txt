Compiled from "LoggingApplicationListener.java"
public class org.springframework.boot.context.logging.LoggingApplicationListener implements org.springframework.context.event.GenericApplicationListener {
  private static final org.springframework.boot.context.properties.bind.Bindable<java.util.Map<java.lang.String, java.lang.String>> STRING_STRING_MAP;

  public static final int DEFAULT_ORDER;

  public static final java.lang.String CONFIG_PROPERTY;

  public static final java.lang.String REGISTER_SHUTDOWN_HOOK_PROPERTY;

  public static final java.lang.String LOGGING_SYSTEM_BEAN_NAME;

  private static final org.springframework.util.MultiValueMap<org.springframework.boot.logging.LogLevel, java.lang.String> LOG_LEVEL_LOGGERS;

  private static java.util.concurrent.atomic.AtomicBoolean shutdownHookRegistered;

  private static final java.lang.Class<?>[] EVENT_TYPES;

  private static final java.lang.Class<?>[] SOURCE_TYPES;

  private final org.apache.commons.logging.Log logger;

  private org.springframework.boot.logging.LoggingSystem loggingSystem;

  private int order;

  private boolean parseArgs;

  private org.springframework.boot.logging.LogLevel springBootLogging;

  public org.springframework.boot.context.logging.LoggingApplicationListener();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: ldc           #7                  // int -2147483628
      18: putfield      #8                  // Field order:I
      21: aload_0
      22: iconst_1
      23: putfield      #9                  // Field parseArgs:Z
      26: aload_0
      27: aconst_null
      28: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: return

  public boolean supportsEventType(org.springframework.core.ResolvableType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method org/springframework/core/ResolvableType.getRawClass:()Ljava/lang/Class;
       5: getstatic     #12                 // Field EVENT_TYPES:[Ljava/lang/Class;
       8: invokespecial #13                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
      11: ireturn

  public boolean supportsSourceType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #14                 // Field SOURCE_TYPES:[Ljava/lang/Class;
       5: invokespecial #13                 // Method isAssignableFrom:(Ljava/lang/Class;[Ljava/lang/Class;)Z
       8: ireturn

  private boolean isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>...);
    Code:
       0: aload_1
       1: ifnull        43
       4: aload_2
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     43
      20: aload_3
      21: iload         5
      23: aaload
      24: astore        6
      26: aload         6
      28: aload_1
      29: invokevirtual #15                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iinc          5, 1
      40: goto          13
      43: iconst_0
      44: ireturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_1
       1: instanceof    #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
       4: ifeq          18
       7: aload_0
       8: aload_1
       9: checkcast     #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
      12: invokespecial #17                 // Method onApplicationStartingEvent:(Lorg/springframework/boot/context/event/ApplicationStartingEvent;)V
      15: goto          94
      18: aload_1
      19: instanceof    #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
      30: invokespecial #19                 // Method onApplicationEnvironmentPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent;)V
      33: goto          94
      36: aload_1
      37: instanceof    #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      40: ifeq          54
      43: aload_0
      44: aload_1
      45: checkcast     #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
      48: invokespecial #21                 // Method onApplicationPreparedEvent:(Lorg/springframework/boot/context/event/ApplicationPreparedEvent;)V
      51: goto          94
      54: aload_1
      55: instanceof    #22                 // class org/springframework/context/event/ContextClosedEvent
      58: ifeq          83
      61: aload_1
      62: checkcast     #22                 // class org/springframework/context/event/ContextClosedEvent
      65: invokevirtual #23                 // Method org/springframework/context/event/ContextClosedEvent.getApplicationContext:()Lorg/springframework/context/ApplicationContext;
      68: invokeinterface #24,  1           // InterfaceMethod org/springframework/context/ApplicationContext.getParent:()Lorg/springframework/context/ApplicationContext;
      73: ifnonnull     83
      76: aload_0
      77: invokespecial #25                 // Method onContextClosedEvent:()V
      80: goto          94
      83: aload_1
      84: instanceof    #26                 // class org/springframework/boot/context/event/ApplicationFailedEvent
      87: ifeq          94
      90: aload_0
      91: invokespecial #27                 // Method onApplicationFailedEvent:()V
      94: return

  private void onApplicationStartingEvent(org.springframework.boot.context.event.ApplicationStartingEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method org/springframework/boot/context/event/ApplicationStartingEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
       5: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
       8: invokestatic  #30                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      11: putfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      14: aload_0
      15: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      18: invokevirtual #32                 // Method org/springframework/boot/logging/LoggingSystem.beforeInitialize:()V
      21: return

  private void onApplicationEnvironmentPreparedEvent(org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent);
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnonnull     21
       7: aload_0
       8: aload_1
       9: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      12: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      15: invokestatic  #30                 // Method org/springframework/boot/logging/LoggingSystem.get:(Ljava/lang/ClassLoader;)Lorg/springframework/boot/logging/LoggingSystem;
      18: putfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      21: aload_0
      22: aload_1
      23: invokevirtual #34                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getEnvironment:()Lorg/springframework/core/env/ConfigurableEnvironment;
      26: aload_1
      27: invokevirtual #33                 // Method org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.getSpringApplication:()Lorg/springframework/boot/SpringApplication;
      30: invokevirtual #29                 // Method org/springframework/boot/SpringApplication.getClassLoader:()Ljava/lang/ClassLoader;
      33: invokevirtual #35                 // Method initialize:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/ClassLoader;)V
      36: return

  private void onApplicationPreparedEvent(org.springframework.boot.context.event.ApplicationPreparedEvent);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/springframework/boot/context/event/ApplicationPreparedEvent.getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: invokeinterface #37,  1           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       9: astore_2
      10: aload_2
      11: ldc           #38                 // String springBootLoggingSystem
      13: invokeinterface #39,  2           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.containsBean:(Ljava/lang/String;)Z
      18: ifne          33
      21: aload_2
      22: ldc           #38                 // String springBootLoggingSystem
      24: aload_0
      25: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      28: invokeinterface #40,  3           // InterfaceMethod org/springframework/beans/factory/config/ConfigurableListableBeanFactory.registerSingleton:(Ljava/lang/String;Ljava/lang/Object;)V
      33: return

  private void onContextClosedEvent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #41                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  private void onApplicationFailedEvent();
    Code:
       0: aload_0
       1: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      11: invokevirtual #41                 // Method org/springframework/boot/logging/LoggingSystem.cleanUp:()V
      14: return

  protected void initialize(org.springframework.core.env.ConfigurableEnvironment, java.lang.ClassLoader);
    Code:
       0: new           #42                 // class org/springframework/boot/logging/LoggingSystemProperties
       3: dup
       4: aload_1
       5: invokespecial #43                 // Method org/springframework/boot/logging/LoggingSystemProperties."<init>":(Lorg/springframework/core/env/Environment;)V
       8: invokevirtual #44                 // Method org/springframework/boot/logging/LoggingSystemProperties.apply:()V
      11: aload_1
      12: invokestatic  #45                 // Method org/springframework/boot/logging/LogFile.get:(Lorg/springframework/core/env/PropertyResolver;)Lorg/springframework/boot/logging/LogFile;
      15: astore_3
      16: aload_3
      17: ifnull        24
      20: aload_3
      21: invokevirtual #46                 // Method org/springframework/boot/logging/LogFile.applyToSystemProperties:()V
      24: aload_0
      25: aload_1
      26: invokespecial #47                 // Method initializeEarlyLoggingLevel:(Lorg/springframework/core/env/ConfigurableEnvironment;)V
      29: aload_0
      30: aload_1
      31: aload_0
      32: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      35: aload_3
      36: invokespecial #48                 // Method initializeSystem:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogFile;)V
      39: aload_0
      40: aload_1
      41: aload_0
      42: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      45: invokespecial #49                 // Method initializeFinalLoggingLevels:(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/logging/LoggingSystem;)V
      48: aload_0
      49: aload_1
      50: aload_0
      51: getfield      #31                 // Field loggingSystem:Lorg/springframework/boot/logging/LoggingSystem;
      54: invokespecial #50                 // Method registerShutdownHookIfNecessary:(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/logging/LoggingSystem;)V
      57: return

  private void initializeEarlyLoggingLevel(org.springframework.core.env.ConfigurableEnvironment);
    Code:
       0: aload_0
       1: getfield      #9                  // Field parseArgs:Z
       4: ifeq          48
       7: aload_0
       8: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      11: ifnonnull     48
      14: aload_0
      15: aload_1
      16: ldc           #51                 // String debug
      18: invokespecial #52                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      21: ifeq          31
      24: aload_0
      25: getstatic     #53                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      28: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      31: aload_0
      32: aload_1
      33: ldc           #54                 // String trace
      35: invokespecial #52                 // Method isSet:(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/String;)Z
      38: ifeq          48
      41: aload_0
      42: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      45: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      48: return

  private boolean isSet(org.springframework.core.env.ConfigurableEnvironment, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #56,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_3
       8: aload_3
       9: ifnull        25
      12: aload_3
      13: ldc           #57                 // String false
      15: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private void initializeSystem(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogFile);
    Code:
       0: new           #59                 // class org/springframework/boot/logging/LoggingInitializationContext
       3: dup
       4: aload_1
       5: invokespecial #60                 // Method org/springframework/boot/logging/LoggingInitializationContext."<init>":(Lorg/springframework/core/env/ConfigurableEnvironment;)V
       8: astore        4
      10: aload_1
      11: ldc           #61                 // String logging.config
      13: invokeinterface #56,  2           // InterfaceMethod org/springframework/core/env/ConfigurableEnvironment.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokespecial #62                 // Method ignoreLogConfig:(Ljava/lang/String;)Z
      26: ifeq          40
      29: aload_2
      30: aload         4
      32: aconst_null
      33: aload_3
      34: invokevirtual #63                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      37: goto          114
      40: aload         5
      42: invokestatic  #64                 // Method org/springframework/util/ResourceUtils.getURL:(Ljava/lang/String;)Ljava/net/URL;
      45: invokevirtual #65                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      48: invokevirtual #66                 // Method java/io/InputStream.close:()V
      51: aload_2
      52: aload         4
      54: aload         5
      56: aload_3
      57: invokevirtual #63                 // Method org/springframework/boot/logging/LoggingSystem.initialize:(Lorg/springframework/boot/logging/LoggingInitializationContext;Ljava/lang/String;Lorg/springframework/boot/logging/LogFile;)V
      60: goto          114
      63: astore        6
      65: getstatic     #68                 // Field java/lang/System.err:Ljava/io/PrintStream;
      68: new           #69                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #71                 // String Logging system failed to initialize using configuration from \'
      77: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         5
      82: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: ldc           #73                 // String \'
      87: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokevirtual #75                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      96: aload         6
      98: getstatic     #68                 // Field java/lang/System.err:Ljava/io/PrintStream;
     101: invokevirtual #76                 // Method java/lang/Exception.printStackTrace:(Ljava/io/PrintStream;)V
     104: new           #77                 // class java/lang/IllegalStateException
     107: dup
     108: aload         6
     110: invokespecial #78                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     113: athrow
     114: return
    Exception table:
       from    to  target type
          40    60    63   Class java/lang/Exception

  private boolean ignoreLogConfig(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #79                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: aload_1
       8: ldc           #80                 // String -D
      10: invokevirtual #81                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private void initializeFinalLoggingLevels(org.springframework.core.env.ConfigurableEnvironment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_0
       1: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       4: ifnull        16
       7: aload_0
       8: aload_2
       9: aload_0
      10: getfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
      13: invokevirtual #82                 // Method initializeLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/boot/logging/LogLevel;)V
      16: aload_0
      17: aload_2
      18: aload_1
      19: invokevirtual #83                 // Method setLogLevels:(Lorg/springframework/boot/logging/LoggingSystem;Lorg/springframework/core/env/Environment;)V
      22: return

  protected void initializeLogLevel(org.springframework.boot.logging.LoggingSystem, org.springframework.boot.logging.LogLevel);
    Code:
       0: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
       3: aload_2
       4: invokeinterface #85,  2           // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #86                 // class java/util/List
      12: astore_3
      13: aload_3
      14: ifnull        57
      17: aload_3
      18: invokeinterface #87,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          57
      35: aload         4
      37: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #90                 // class java/lang/String
      45: astore        5
      47: aload_1
      48: aload         5
      50: aload_2
      51: invokevirtual #91                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      54: goto          25
      57: return

  protected void setLogLevels(org.springframework.boot.logging.LoggingSystem, org.springframework.core.env.Environment);
    Code:
       0: aload_2
       1: instanceof    #92                 // class org/springframework/core/env/ConfigurableEnvironment
       4: ifne          8
       7: return
       8: aload_2
       9: invokestatic  #93                 // Method org/springframework/boot/context/properties/bind/Binder.get:(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/bind/Binder;
      12: astore_3
      13: aload_3
      14: ldc           #94                 // String logging.level
      16: getstatic     #95                 // Field STRING_STRING_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      19: invokevirtual #96                 // Method org/springframework/boot/context/properties/bind/Binder.bind:(Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;
      22: invokedynamic #97,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      27: invokevirtual #98                 // Method org/springframework/boot/context/properties/bind/BindResult.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      30: checkcast     #99                 // class java/util/Map
      33: aload_0
      34: aload_1
      35: invokedynamic #100,  0            // InvokeDynamic #1:accept:(Lorg/springframework/boot/context/logging/LoggingApplicationListener;Lorg/springframework/boot/logging/LoggingSystem;)Ljava/util/function/BiConsumer;
      40: invokeinterface #101,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      45: return

  private void setLogLevel(org.springframework.boot.logging.LoggingSystem, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #103                // String ROOT
       3: invokevirtual #104                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          13
       9: aconst_null
      10: goto          14
      13: aload_2
      14: astore_2
      15: aload_1
      16: aload_2
      17: aload_0
      18: aload_3
      19: invokespecial #105                // Method coerceLogLevel:(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;
      22: invokevirtual #91                 // Method org/springframework/boot/logging/LoggingSystem.setLogLevel:(Ljava/lang/String;Lorg/springframework/boot/logging/LogLevel;)V
      25: goto          72
      28: astore        4
      30: aload_0
      31: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      34: new           #69                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #70                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #107                // String Cannot set level:
      43: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_3
      47: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #108                // String  for \'
      52: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: ldc           #73                 // String \'
      61: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #109,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      72: return
    Exception table:
       from    to  target type
           0    25    28   Class java/lang/RuntimeException

  private org.springframework.boot.logging.LogLevel coerceLogLevel(java.lang.String);
    Code:
       0: ldc           #57                 // String false
       2: aload_1
       3: invokevirtual #104                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifeq          13
       9: getstatic     #110                // Field org/springframework/boot/logging/LogLevel.OFF:Lorg/springframework/boot/logging/LogLevel;
      12: areturn
      13: aload_1
      14: getstatic     #111                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      17: invokevirtual #112                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      20: invokestatic  #113                // Method org/springframework/boot/logging/LogLevel.valueOf:(Ljava/lang/String;)Lorg/springframework/boot/logging/LogLevel;
      23: areturn

  private void registerShutdownHookIfNecessary(org.springframework.core.env.Environment, org.springframework.boot.logging.LoggingSystem);
    Code:
       0: aload_1
       1: ldc           #114                // String logging.register-shutdown-hook
       3: ldc           #115                // class java/lang/Boolean
       5: iconst_0
       6: invokestatic  #116                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #117,  4          // InterfaceMethod org/springframework/core/env/Environment.getProperty:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #115                // class java/lang/Boolean
      17: invokevirtual #118                // Method java/lang/Boolean.booleanValue:()Z
      20: istore_3
      21: iload_3
      22: ifeq          60
      25: aload_2
      26: invokevirtual #119                // Method org/springframework/boot/logging/LoggingSystem.getShutdownHandler:()Ljava/lang/Runnable;
      29: astore        4
      31: aload         4
      33: ifnull        60
      36: getstatic     #120                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: iconst_0
      40: iconst_1
      41: invokevirtual #121                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      44: ifeq          60
      47: aload_0
      48: new           #122                // class java/lang/Thread
      51: dup
      52: aload         4
      54: invokespecial #123                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      57: invokevirtual #124                // Method registerShutdownHook:(Ljava/lang/Thread;)V
      60: return

  void registerShutdownHook(java.lang.Thread);
    Code:
       0: invokestatic  #125                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: aload_1
       4: invokevirtual #126                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
       7: return

  public void setOrder(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field order:I
       5: return

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #8                  // Field order:I
       4: ireturn

  public void setSpringBootLogging(org.springframework.boot.logging.LogLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field springBootLogging:Lorg/springframework/boot/logging/LogLevel;
       5: return

  public void setParseArgs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field parseArgs:Z
       5: return

  private void lambda$setLogLevels$0(org.springframework.boot.logging.LoggingSystem, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #127                // Method setLogLevel:(Lorg/springframework/boot/logging/LoggingSystem;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  static {};
    Code:
       0: ldc           #90                 // class java/lang/String
       2: ldc           #90                 // class java/lang/String
       4: invokestatic  #128                // Method org/springframework/boot/context/properties/bind/Bindable.mapOf:(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;
       7: putstatic     #95                 // Field STRING_STRING_MAP:Lorg/springframework/boot/context/properties/bind/Bindable;
      10: new           #129                // class java/util/concurrent/atomic/AtomicBoolean
      13: dup
      14: iconst_0
      15: invokespecial #130                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      18: putstatic     #120                // Field shutdownHookRegistered:Ljava/util/concurrent/atomic/AtomicBoolean;
      21: new           #131                // class org/springframework/util/LinkedMultiValueMap
      24: dup
      25: invokespecial #132                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      28: putstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      31: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      34: getstatic     #53                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
      37: ldc           #133                // String org.springframework.boot
      39: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      44: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      47: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      50: ldc           #135                // String org.springframework
      52: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      60: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      63: ldc           #136                // String org.apache.tomcat
      65: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      70: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      73: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      76: ldc           #137                // String org.apache.catalina
      78: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      83: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      86: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
      89: ldc           #138                // String org.eclipse.jetty
      91: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      96: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
      99: getstatic     #55                 // Field org/springframework/boot/logging/LogLevel.TRACE:Lorg/springframework/boot/logging/LogLevel;
     102: ldc           #139                // String org.hibernate.tool.hbm2ddl
     104: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     109: getstatic     #84                 // Field LOG_LEVEL_LOGGERS:Lorg/springframework/util/MultiValueMap;
     112: getstatic     #53                 // Field org/springframework/boot/logging/LogLevel.DEBUG:Lorg/springframework/boot/logging/LogLevel;
     115: ldc           #140                // String org.hibernate.SQL
     117: invokeinterface #134,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     122: iconst_5
     123: anewarray     #141                // class java/lang/Class
     126: dup
     127: iconst_0
     128: ldc           #16                 // class org/springframework/boot/context/event/ApplicationStartingEvent
     130: aastore
     131: dup
     132: iconst_1
     133: ldc           #18                 // class org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent
     135: aastore
     136: dup
     137: iconst_2
     138: ldc           #20                 // class org/springframework/boot/context/event/ApplicationPreparedEvent
     140: aastore
     141: dup
     142: iconst_3
     143: ldc           #22                 // class org/springframework/context/event/ContextClosedEvent
     145: aastore
     146: dup
     147: iconst_4
     148: ldc           #26                 // class org/springframework/boot/context/event/ApplicationFailedEvent
     150: aastore
     151: putstatic     #12                 // Field EVENT_TYPES:[Ljava/lang/Class;
     154: iconst_2
     155: anewarray     #141                // class java/lang/Class
     158: dup
     159: iconst_0
     160: ldc           #142                // class org/springframework/boot/SpringApplication
     162: aastore
     163: dup
     164: iconst_1
     165: ldc           #143                // class org/springframework/context/ApplicationContext
     167: aastore
     168: putstatic     #14                 // Field SOURCE_TYPES:[Ljava/lang/Class;
     171: return
}
