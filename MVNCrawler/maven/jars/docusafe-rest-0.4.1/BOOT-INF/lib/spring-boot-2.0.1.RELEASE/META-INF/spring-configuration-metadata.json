{
  "hints": [
    {
      "values": [
        {
          "description": "Root logger used to assign the default logging level.",
          "value": "root"
        }
      ],
      "name": "logging.level.keys",
      "providers": [
        {
          "name": "logger-name"
        }
      ]
    },
    {
      "values": [
        {
          "value": "trace"
        },
        {
          "value": "debug"
        },
        {
          "value": "info"
        },
        {
          "value": "warn"
        },
        {
          "value": "error"
        },
        {
          "value": "fatal"
        },
        {
          "value": "off"
        }
      ],
      "name": "logging.level.values",
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "name": "spring.profiles.active",
      "providers": [
        {
          "name": "spring-profile-name"
        }
      ]
    },
    {
      "name": "spring.profiles.include",
      "providers": [
        {
          "name": "spring-profile-name"
        }
      ]
    }
  ],
  "groups": [
    {
      "name": "logging",
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory",
      "type": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource",
      "type": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "name": "spring.jta.atomikos.properties",
      "type": "org.springframework.boot.jta.atomikos.AtomikosProperties"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "name": "spring.jta.atomikos.properties.recovery",
      "sourceMethod": "getRecovery()",
      "type": "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory",
      "type": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource",
      "type": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana",
      "type": "org.springframework.boot.jta.narayana.NarayanaProperties"
    }
  ],
  "properties": [
    {
      "defaultValue": "UTF-8",
      "deprecated": true,
      "name": "banner.charset",
      "description": "Banner file encoding.",
      "type": "java.nio.charset.Charset",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.charset"
      }
    },
    {
      "deprecated": true,
      "name": "banner.image.height",
      "description": "Banner image height (in chars).",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.image.height"
      }
    },
    {
      "defaultValue": false,
      "deprecated": true,
      "name": "banner.image.invert",
      "description": "Invert images for dark console themes.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.image.invert"
      }
    },
    {
      "defaultValue": "banner.gif",
      "deprecated": true,
      "name": "banner.image.location",
      "description": "Banner image file location (jpg\/png can also be used).",
      "type": "org.springframework.core.io.Resource",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.image.location"
      }
    },
    {
      "deprecated": true,
      "name": "banner.image.margin",
      "description": "Left hand image margin (in chars).",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.image.margin"
      }
    },
    {
      "deprecated": true,
      "name": "banner.image.width",
      "description": "Banner image width (in chars).",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.image.width"
      }
    },
    {
      "defaultValue": "classpath:banner.txt",
      "deprecated": true,
      "name": "banner.location",
      "description": "Banner text resource location.",
      "type": "org.springframework.core.io.Resource",
      "deprecation": {
        "level": "error",
        "replacement": "spring.banner.location"
      }
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": false,
      "name": "debug",
      "description": "Enable debug logs.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "name": "logging.config",
      "description": "Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": "%wEx",
      "name": "logging.exception-conversion-word",
      "description": "Conversion word used when logging exceptions.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "name": "logging.file",
      "description": "Log file name (for instance, `myapp.log`). Names can be an exact location or relative to the current directory.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": 0,
      "name": "logging.file.max-history",
      "description": "Maximum of archive log files to keep. Only supported with the default logback setup.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": "10MB",
      "name": "logging.file.max-size",
      "description": "Maximum log file size. Only supported with the default logback setup.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "name": "logging.level",
      "description": "Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.",
      "type": "java.util.Map<java.lang.String,java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "name": "logging.path",
      "description": "Location of the log file. For instance, `\/var\/log`.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": "%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}",
      "name": "logging.pattern.console",
      "description": "Appender pattern for output to the console. Supported only with the default Logback setup.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": "yyyy-MM-dd HH:mm:ss.SSS",
      "name": "logging.pattern.dateformat",
      "description": "Appender pattern for log date format. Supported only with the default Logback setup.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": "%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}",
      "name": "logging.pattern.file",
      "description": "Appender pattern for output to a file. Supported only with the default Logback setup.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": "%5p",
      "name": "logging.pattern.level",
      "description": "Appender pattern for log level. Supported only with the default Logback setup.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": false,
      "name": "logging.register-shutdown-hook",
      "description": "Register a shutdown hook for the logging system when it is initialized.",
      "type": "java.lang.Boolean"
    },
    {
      "deprecated": true,
      "name": "spring.application.index",
      "description": "Application index.",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "Application context ids are now unique by default.",
        "level": "error"
      }
    },
    {
      "sourceType": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "name": "spring.application.name",
      "description": "Application name.",
      "type": "java.lang.String"
    },
    {
      "defaultValue": "UTF-8",
      "name": "spring.banner.charset",
      "description": "Banner file encoding.",
      "type": "java.nio.charset.Charset"
    },
    {
      "name": "spring.banner.image.height",
      "description": "Height of the banner image in chars (default based on image height).",
      "type": "java.lang.Integer"
    },
    {
      "defaultValue": false,
      "name": "spring.banner.image.invert",
      "description": "Whether images should be inverted for dark terminal themes.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": "classpath:banner.gif",
      "name": "spring.banner.image.location",
      "description": "Banner image file location (jpg or png can also be used).",
      "type": "org.springframework.core.io.Resource"
    },
    {
      "defaultValue": 2,
      "name": "spring.banner.image.margin",
      "description": "Left hand image margin in chars.",
      "type": "java.lang.Integer"
    },
    {
      "defaultValue": 76,
      "name": "spring.banner.image.width",
      "description": "Width of the banner image in chars.",
      "type": "java.lang.Integer"
    },
    {
      "defaultValue": "classpath:banner.txt",
      "name": "spring.banner.location",
      "description": "Banner text resource location.",
      "type": "org.springframework.core.io.Resource"
    },
    {
      "sourceType": "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "defaultValue": true,
      "name": "spring.beaninfo.ignore",
      "description": "Whether to skip search of BeanInfo classes.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "name": "spring.config.additional-location",
      "description": "Config file locations used in addition to the defaults.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "name": "spring.config.location",
      "description": "Config file locations that replace the defaults.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "defaultValue": "application",
      "name": "spring.config.name",
      "description": "Config file name.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.borrow-connection-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.local-transaction-mode",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.maintenance-interval",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.max-idle-time",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.max-lifetime",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.max-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.min-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.reap-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.unique-resource-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.xa-connection-factory-class-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
      "name": "spring.jta.atomikos.connectionfactory.xa-properties",
      "type": "java.util.Properties"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.borrow-connection-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.concurrent-connection-validation",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.default-isolation-level",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.login-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.maintenance-interval",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.max-idle-time",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.max-lifetime",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.max-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.min-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.reap-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.test-query",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.unique-resource-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.xa-data-source-class-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
      "name": "spring.jta.atomikos.datasource.xa-properties",
      "type": "java.util.Properties"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": true,
      "name": "spring.jta.atomikos.properties.allow-sub-transactions",
      "description": "Specify whether sub-transactions are allowed.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": 500,
      "name": "spring.jta.atomikos.properties.checkpoint-interval",
      "description": "Interval between checkpoints, expressed as the number of log writes between two\n checkpoint. A checkpoint reduces the log file size at the expense of adding some\n overhead in the runtime.",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": "10000ms",
      "name": "spring.jta.atomikos.properties.default-jta-timeout",
      "description": "Default timeout for JTA transactions.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "name": "spring.jta.atomikos.properties.default-max-wait-time-on-shutdown",
      "description": "How long should normal shutdown (no-force) wait for transactions to complete.",
      "type": "java.lang.Long"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": true,
      "name": "spring.jta.atomikos.properties.enable-logging",
      "description": "Whether to enable disk logging.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": false,
      "name": "spring.jta.atomikos.properties.force-shutdown-on-vm-exit",
      "description": "Whether a VM shutdown should trigger forced shutdown of the transaction core.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "name": "spring.jta.atomikos.properties.log-base-dir",
      "description": "Directory in which the log files should be stored. Defaults to the current working\n directory.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": "tmlog",
      "name": "spring.jta.atomikos.properties.log-base-name",
      "description": "Transactions log file base name.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": 50,
      "name": "spring.jta.atomikos.properties.max-actives",
      "description": "Maximum number of active transactions.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": "300000ms",
      "name": "spring.jta.atomikos.properties.max-timeout",
      "description": "Maximum timeout that can be allowed for transactions.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery",
      "defaultValue": "10000ms",
      "name": "spring.jta.atomikos.properties.recovery.delay",
      "description": "Delay between two recovery scans.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery",
      "defaultValue": "86400000ms",
      "name": "spring.jta.atomikos.properties.recovery.forget-orphaned-log-entries-delay",
      "description": "Delay after which recovery can cleanup pending ('orphaned') log entries.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery",
      "defaultValue": 5,
      "name": "spring.jta.atomikos.properties.recovery.max-retries",
      "description": "Number of retry attempts to commit the transaction before throwing an\n exception.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties$Recovery",
      "defaultValue": "10000ms",
      "name": "spring.jta.atomikos.properties.recovery.retry-interval",
      "description": "Delay between retry attempts.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": true,
      "name": "spring.jta.atomikos.properties.serial-jta-transactions",
      "description": "Whether sub-transactions should be joined when possible.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "name": "spring.jta.atomikos.properties.service",
      "description": "Transaction manager implementation that should be started.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "defaultValue": false,
      "name": "spring.jta.atomikos.properties.threaded-two-phase-commit",
      "description": "Whether to use different (and concurrent) threads for two-phase commit on the\n participating resources.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.atomikos.AtomikosProperties",
      "name": "spring.jta.atomikos.properties.transaction-manager-unique-name",
      "description": "The transaction manager's unique name. Defaults to the machine's IP address. If you\n plan to run more than one transaction manager against one database you must set\n this property to a unique value.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.acquire-increment",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.acquisition-interval",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.acquisition-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.allow-local-transactions",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.apply-transaction-timeout",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.cache-producers-consumers",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.class-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.defer-connection-release",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.disabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.driver-properties",
      "type": "java.util.Properties"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.failed",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.ignore-recovery-failures",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.max-idle-time",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.max-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.min-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.password",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.share-transaction-connections",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.test-connections",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.two-pc-ordering-position",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.unique-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.use-tm-join",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
      "name": "spring.jta.bitronix.connectionfactory.user",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.acquire-increment",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.acquisition-interval",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.acquisition-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.allow-local-transactions",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.apply-transaction-timeout",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.automatic-enlisting-enabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.class-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.cursor-holdability",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.defer-connection-release",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.disabled",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.driver-properties",
      "type": "java.util.Properties"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.enable-jdbc4-connection-test",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.failed",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.ignore-recovery-failures",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.isolation-level",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.local-auto-commit",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.login-timeout",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.max-idle-time",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.max-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.min-pool-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.prepared-statement-cache-size",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.share-transaction-connections",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.test-query",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.two-pc-ordering-position",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.unique-name",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
      "name": "spring.jta.bitronix.datasource.use-tm-join",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "defaultValue": "60s",
      "name": "spring.jta.narayana.default-timeout",
      "description": "Transaction timeout. If a duration suffix is not specified, seconds will be used.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "defaultValue": [
        "com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner"
      ],
      "name": "spring.jta.narayana.expiry-scanners",
      "description": "Comma-separated list of expiry scanners.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.log-dir",
      "description": "Transaction object store directory.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "defaultValue": true,
      "name": "spring.jta.narayana.one-phase-commit",
      "description": "Whether to enable one phase commit optimization.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "defaultValue": "120s",
      "name": "spring.jta.narayana.periodic-recovery-period",
      "description": "Interval in which periodic recovery scans are performed. If a duration suffix is\n not specified, seconds will be used.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "defaultValue": "10s",
      "name": "spring.jta.narayana.recovery-backoff-period",
      "description": "Back off period between first and second phases of the recovery scan. If a duration\n suffix is not specified, seconds will be used.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.recovery-db-pass",
      "description": "Database password to be used by the recovery manager.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.recovery-db-user",
      "description": "Database username to be used by the recovery manager.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.recovery-jms-pass",
      "description": "JMS password to be used by the recovery manager.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.recovery-jms-user",
      "description": "JMS username to be used by the recovery manager.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.recovery-modules",
      "description": "Comma-separated list of recovery modules.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "defaultValue": "1",
      "name": "spring.jta.narayana.transaction-manager-id",
      "description": "Unique transaction manager id.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.jta.narayana.NarayanaProperties",
      "name": "spring.jta.narayana.xa-resource-orphan-filters",
      "description": "Comma-separated list of orphan filters.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.SpringApplication",
      "defaultValue": "console",
      "name": "spring.main.banner-mode",
      "description": "Mode used to display the banner when the application runs.",
      "type": "org.springframework.boot.Banner$Mode"
    },
    {
      "sourceType": "org.springframework.boot.SpringApplication",
      "defaultValue": true,
      "deprecated": true,
      "name": "spring.main.show-banner",
      "description": "Display the banner when the application runs.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.main.banner-mode"
      }
    },
    {
      "sourceType": "org.springframework.boot.SpringApplication",
      "name": "spring.main.sources",
      "description": "Sources (class names, package names, or XML resource locations) to include in the ApplicationContext.",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.SpringApplication",
      "name": "spring.main.web-application-type",
      "description": "Flag to explicitly request a specific type of web application. If not set, auto-detected based on the classpath.",
      "type": "org.springframework.boot.WebApplicationType"
    },
    {
      "sourceType": "org.springframework.boot.SpringApplication",
      "deprecated": true,
      "name": "spring.main.web-environment",
      "description": "Run the application in a web environment (auto-detected by default).",
      "type": "java.lang.Boolean",
      "deprecation": {
        "replacement": "spring.main.web-application-type"
      }
    },
    {
      "sourceType": "org.springframework.boot.context.FileEncodingApplicationListener",
      "name": "spring.mandatory-file-encoding",
      "description": "Expected character encoding the application must use.",
      "type": "java.nio.charset.Charset"
    },
    {
      "defaultValue": "detect",
      "name": "spring.output.ansi.enabled",
      "description": "Configures the ANSI output.",
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "sourceType": "org.springframework.boot.context.ApplicationPidFileWriter",
      "name": "spring.pid.fail-on-write-error",
      "description": "Fails if ApplicationPidFileWriter is used but it cannot write the PID file.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.context.ApplicationPidFileWriter",
      "name": "spring.pid.file",
      "description": "Location of the PID file to write (if ApplicationPidFileWriter is used).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "name": "spring.profiles.active",
      "description": "Comma-separated list of active profiles. Can be overridden by a command line switch.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.context.config.ConfigFileApplicationListener",
      "name": "spring.profiles.include",
      "description": "Unconditionally activate the specified comma-separated list of profiles (or list of profiles if using YAML).",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "defaultValue": false,
      "name": "trace",
      "description": "Enable trace logs.",
      "type": "java.lang.Boolean"
    }
  ]
}