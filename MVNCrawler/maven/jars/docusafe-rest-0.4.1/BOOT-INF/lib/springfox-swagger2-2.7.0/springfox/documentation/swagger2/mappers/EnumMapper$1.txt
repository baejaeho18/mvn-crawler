Compiled from "EnumMapper.java"
final class springfox.documentation.swagger2.mappers.EnumMapper$1 implements com.google.common.base.Function<java.lang.String, com.google.common.base.Optional<T>> {
  final java.lang.Class val$toType;

  springfox.documentation.swagger2.mappers.EnumMapper$1(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$toType:Ljava/lang/Class;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public com.google.common.base.Optional<T> apply(java.lang.String);
    Code:
       0: ldc_w         #3                  // class java/lang/Integer
       3: aload_0
       4: getfield      #1                  // Field val$toType:Ljava/lang/Class;
       7: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: aload_1
      14: invokestatic  #5                  // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      17: invokestatic  #6                  // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      20: areturn
      21: ldc_w         #7                  // class java/lang/Long
      24: aload_0
      25: getfield      #1                  // Field val$toType:Ljava/lang/Class;
      28: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ifeq          42
      34: aload_1
      35: invokestatic  #8                  // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      38: invokestatic  #6                  // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      41: areturn
      42: ldc_w         #9                  // class java/lang/Double
      45: aload_0
      46: getfield      #1                  // Field val$toType:Ljava/lang/Class;
      49: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      52: ifeq          63
      55: aload_1
      56: invokestatic  #10                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;
      59: invokestatic  #6                  // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      62: areturn
      63: ldc_w         #11                 // class java/lang/Float
      66: aload_0
      67: getfield      #1                  // Field val$toType:Ljava/lang/Class;
      70: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          84
      76: aload_1
      77: invokestatic  #12                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      80: invokestatic  #6                  // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      83: areturn
      84: goto          88
      87: astore_2
      88: invokestatic  #14                 // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      91: areturn
    Exception table:
       from    to  target type
           0    20    87   Class java/lang/NumberFormatException
          21    41    87   Class java/lang/NumberFormatException
          42    62    87   Class java/lang/NumberFormatException
          63    83    87   Class java/lang/NumberFormatException

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class java/lang/String
       5: invokevirtual #16                 // Method apply:(Ljava/lang/String;)Lcom/google/common/base/Optional;
       8: areturn
}
