Compiled from "ClassLoadingStrategy.java"
public class net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection implements net.bytebuddy.dynamic.loading.ClassLoadingStrategy<java.lang.ClassLoader> {
  private final java.security.ProtectionDomain protectionDomain;

  public net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection();
    Code:
       0: aload_0
       1: getstatic     #21                 // Field NO_PROTECTION_DOMAIN:Ljava/security/ProtectionDomain;
       4: invokespecial #24                 // Method "<init>":(Ljava/security/ProtectionDomain;)V
       7: return

  public net.bytebuddy.dynamic.loading.ClassLoadingStrategy$ForUnsafeInjection(java.security.ProtectionDomain);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #30                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: return

  public java.util.Map<net.bytebuddy.description.type.TypeDescription, java.lang.Class<?>> load(java.lang.ClassLoader, java.util.Map<net.bytebuddy.description.type.TypeDescription, byte[]>);
    Code:
       0: new           #11                 // class net/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #30                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: invokespecial #35                 // Method net/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe."<init>":(Ljava/lang/ClassLoader;Ljava/security/ProtectionDomain;)V
      12: aload_2
      13: invokevirtual #39                 // Method net/bytebuddy/dynamic/loading/ClassInjector$UsingUnsafe.inject:(Ljava/util/Map;)Ljava/util/Map;
      16: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class net/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForUnsafeInjection
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class net/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForUnsafeInjection
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #49                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #30                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      35: astore_3
      36: aload_2
      37: getfield      #30                 // Field protectionDomain:Ljava/security/ProtectionDomain;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #51                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: iconst_1
      66: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class net/bytebuddy/dynamic/loading/ClassLoadingStrategy$ForUnsafeInjection
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: getfield      #30                 // Field protectionDomain:Ljava/security/ProtectionDomain;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #60                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: iload_2
      30: ireturn
}
