Compiled from "Advice.java"
public final class net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory extends java.lang.Enum<net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory> implements net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$Factory {
  public static final net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory READ_ONLY;

  public static final net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory READ_WRITE;

  private final boolean readOnly;

  private static final net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory[] $VALUES;

  public static net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory[] values();
    Code:
       0: getstatic     #49                 // Field $VALUES:[Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;
       3: invokevirtual #54                 // Method "[Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;".clone:()Ljava/lang/Object;
       6: checkcast     #50                 // class "[Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;"
       9: areturn

  public static net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory
       2: aload_0
       3: invokestatic  #59                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory
       9: areturn

  private net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping$ForArgument$Factory(boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #66                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: iload_3
       8: putfield      #68                 // Field readOnly:Z
      11: return

  public net.bytebuddy.asm.Advice$Dispatcher$OffsetMapping make(net.bytebuddy.description.method.ParameterDescription$InDefinedShape);
    Code:
       0: aload_1
       1: invokeinterface #75,  1           // InterfaceMethod net/bytebuddy/description/method/ParameterDescription$InDefinedShape.getDeclaredAnnotations:()Lnet/bytebuddy/description/annotation/AnnotationList;
       6: ldc           #32                 // class net/bytebuddy/asm/Advice$Argument
       8: invokeinterface #81,  2           // InterfaceMethod net/bytebuddy/description/annotation/AnnotationList.ofType:(Ljava/lang/Class;)Lnet/bytebuddy/description/annotation/AnnotationDescription$Loadable;
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: getstatic     #85                 // Field UNDEFINED:Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping;
      21: areturn
      22: aload_0
      23: getfield      #68                 // Field readOnly:Z
      26: ifeq          73
      29: aload_2
      30: invokeinterface #89,  1           // InterfaceMethod net/bytebuddy/description/annotation/AnnotationDescription$Loadable.loadSilent:()Ljava/lang/annotation/Annotation;
      35: checkcast     #32                 // class net/bytebuddy/asm/Advice$Argument
      38: invokeinterface #92,  1           // InterfaceMethod net/bytebuddy/asm/Advice$Argument.readOnly:()Z
      43: ifne          73
      46: new           #94                 // class java/lang/IllegalStateException
      49: dup
      50: new           #96                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #101                // String Cannot define writable field access for
      59: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: new           #18                 // class net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument
      76: dup
      77: aload_1
      78: invokeinterface #119,  1          // InterfaceMethod net/bytebuddy/description/method/ParameterDescription$InDefinedShape.getType:()Lnet/bytebuddy/description/type/TypeDescription$Generic;
      83: aload_2
      84: invokeinterface #89,  1           // InterfaceMethod net/bytebuddy/description/annotation/AnnotationDescription$Loadable.loadSilent:()Ljava/lang/annotation/Annotation;
      89: checkcast     #32                 // class net/bytebuddy/asm/Advice$Argument
      92: invokespecial #122                // Method net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument."<init>":(Lnet/bytebuddy/description/type/TypeDescription$Generic;Lnet/bytebuddy/asm/Advice$Argument;)V
      95: areturn

  static {};
    Code:
       0: new           #2                  // class net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory
       3: dup
       4: ldc           #129                // String READ_ONLY
       6: iconst_0
       7: iconst_1
       8: invokespecial #131                // Method "<init>":(Ljava/lang/String;IZ)V
      11: putstatic     #133                // Field READ_ONLY:Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;
      14: new           #2                  // class net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory
      17: dup
      18: ldc           #134                // String READ_WRITE
      20: iconst_1
      21: iconst_0
      22: invokespecial #131                // Method "<init>":(Ljava/lang/String;IZ)V
      25: putstatic     #136                // Field READ_WRITE:Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;
      28: iconst_2
      29: anewarray     #2                  // class net/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory
      32: dup
      33: iconst_0
      34: getstatic     #133                // Field READ_ONLY:Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;
      37: aastore
      38: dup
      39: iconst_1
      40: getstatic     #136                // Field READ_WRITE:Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;
      43: aastore
      44: putstatic     #49                 // Field $VALUES:[Lnet/bytebuddy/asm/Advice$Dispatcher$OffsetMapping$ForArgument$Factory;
      47: return
}
