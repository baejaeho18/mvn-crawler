Compiled from "TypePool.java"
public class net.bytebuddy.pool.TypePool$CacheProvider$Simple implements net.bytebuddy.pool.TypePool$CacheProvider {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, net.bytebuddy.pool.TypePool$Resolution> cache;

  public net.bytebuddy.pool.TypePool$CacheProvider$Simple();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #25                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #26                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #28                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public static net.bytebuddy.pool.TypePool$CacheProvider withObjectType();
    Code:
       0: new           #2                  // class net/bytebuddy/pool/TypePool$CacheProvider$Simple
       3: dup
       4: invokespecial #33                 // Method "<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #4                  // class java/lang/Object
      11: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: new           #16                 // class net/bytebuddy/pool/TypePool$Resolution$Simple
      17: dup
      18: getstatic     #45                 // Field net/bytebuddy/description/type/TypeDescription.OBJECT:Lnet/bytebuddy/description/type/TypeDescription;
      21: invokespecial #48                 // Method net/bytebuddy/pool/TypePool$Resolution$Simple."<init>":(Lnet/bytebuddy/description/type/TypeDescription;)V
      24: invokeinterface #52,  3           // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.register:(Ljava/lang/String;Lnet/bytebuddy/pool/TypePool$Resolution;)Lnet/bytebuddy/pool/TypePool$Resolution;
      29: pop
      30: aload_0
      31: areturn

  public net.bytebuddy.pool.TypePool$Resolution find(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #28                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class net/bytebuddy/pool/TypePool$Resolution
      13: areturn

  public net.bytebuddy.pool.TypePool$Resolution register(java.lang.String, net.bytebuddy.pool.TypePool$Resolution);
    Code:
       0: aload_0
       1: getfield      #28                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #68,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #9                  // class net/bytebuddy/pool/TypePool$Resolution
      14: astore_3
      15: aload_3
      16: ifnonnull     23
      19: aload_2
      20: goto          24
      23: aload_3
      24: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #28                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #74,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return
}
