Compiled from "ConnectorServerFactoryBean.java"
public class org.springframework.jmx.support.ConnectorServerFactoryBean extends org.springframework.jmx.support.MBeanRegistrationSupport implements org.springframework.beans.factory.FactoryBean<javax.management.remote.JMXConnectorServer>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  public static final java.lang.String DEFAULT_SERVICE_URL;

  private java.lang.String serviceUrl;

  private java.util.Map<java.lang.String, java.lang.Object> environment;

  private javax.management.remote.MBeanServerForwarder forwarder;

  private javax.management.ObjectName objectName;

  private boolean threaded;

  private boolean daemon;

  private javax.management.remote.JMXConnectorServer connectorServer;

  public org.springframework.jmx.support.ConnectorServerFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/jmx/support/MBeanRegistrationSupport."<init>":()V
       4: aload_0
       5: ldc           #4                  // String service:jmx:jmxmp://localhost:9875
       7: putfield      #5                  // Field serviceUrl:Ljava/lang/String;
      10: aload_0
      11: new           #6                  // class java/util/HashMap
      14: dup
      15: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      18: putfield      #8                  // Field environment:Ljava/util/Map;
      21: aload_0
      22: iconst_0
      23: putfield      #9                  // Field threaded:Z
      26: aload_0
      27: iconst_0
      28: putfield      #10                 // Field daemon:Z
      31: return

  public void setServiceUrl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field serviceUrl:Ljava/lang/String;
       5: return

  public void setEnvironment(java.util.Properties);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field environment:Ljava/util/Map;
       5: invokestatic  #11                 // Method org/springframework/util/CollectionUtils.mergePropertiesIntoMap:(Ljava/util/Properties;Ljava/util/Map;)V
       8: return

  public void setEnvironmentMap(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_0
       5: getfield      #8                  // Field environment:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #12,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      14: return

  public void setForwarder(javax.management.remote.MBeanServerForwarder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field forwarder:Ljavax/management/remote/MBeanServerForwarder;
       5: return

  public void setObjectName(java.lang.Object) throws javax.management.MalformedObjectNameException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/Object;)Ljavax/management/ObjectName;
       5: putfield      #15                 // Field objectName:Ljavax/management/ObjectName;
       8: return

  public void setThreaded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field threaded:Z
       5: return

  public void setDaemon(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field daemon:Z
       5: return

  public void afterPropertiesSet() throws javax.management.JMException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field server:Ljavax/management/MBeanServer;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #17                 // Method org/springframework/jmx/support/JmxUtils.locateMBeanServer:()Ljavax/management/MBeanServer;
      11: putfield      #16                 // Field server:Ljavax/management/MBeanServer;
      14: new           #18                 // class javax/management/remote/JMXServiceURL
      17: dup
      18: aload_0
      19: getfield      #5                  // Field serviceUrl:Ljava/lang/String;
      22: invokespecial #19                 // Method javax/management/remote/JMXServiceURL."<init>":(Ljava/lang/String;)V
      25: astore_1
      26: aload_0
      27: aload_1
      28: aload_0
      29: getfield      #8                  // Field environment:Ljava/util/Map;
      32: aload_0
      33: getfield      #16                 // Field server:Ljavax/management/MBeanServer;
      36: invokestatic  #20                 // Method javax/management/remote/JMXConnectorServerFactory.newJMXConnectorServer:(Ljavax/management/remote/JMXServiceURL;Ljava/util/Map;Ljavax/management/MBeanServer;)Ljavax/management/remote/JMXConnectorServer;
      39: putfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
      42: aload_0
      43: getfield      #13                 // Field forwarder:Ljavax/management/remote/MBeanServerForwarder;
      46: ifnull        60
      49: aload_0
      50: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
      53: aload_0
      54: getfield      #13                 // Field forwarder:Ljavax/management/remote/MBeanServerForwarder;
      57: invokevirtual #21                 // Method javax/management/remote/JMXConnectorServer.setMBeanServerForwarder:(Ljavax/management/remote/MBeanServerForwarder;)V
      60: aload_0
      61: getfield      #15                 // Field objectName:Ljavax/management/ObjectName;
      64: ifnull        79
      67: aload_0
      68: aload_0
      69: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
      72: aload_0
      73: getfield      #15                 // Field objectName:Ljavax/management/ObjectName;
      76: invokevirtual #22                 // Method doRegister:(Ljava/lang/Object;Ljavax/management/ObjectName;)V
      79: aload_0
      80: getfield      #9                  // Field threaded:Z
      83: ifeq          141
      86: new           #23                 // class org/springframework/jmx/support/ConnectorServerFactoryBean$1
      89: dup
      90: aload_0
      91: invokespecial #24                 // Method org/springframework/jmx/support/ConnectorServerFactoryBean$1."<init>":(Lorg/springframework/jmx/support/ConnectorServerFactoryBean;)V
      94: astore_2
      95: aload_2
      96: new           #25                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #27                 // String JMX Connector Thread [
     105: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #5                  // Field serviceUrl:Ljava/lang/String;
     112: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #29                 // String ]
     117: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokevirtual #31                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     126: aload_2
     127: aload_0
     128: getfield      #10                 // Field daemon:Z
     131: invokevirtual #32                 // Method java/lang/Thread.setDaemon:(Z)V
     134: aload_2
     135: invokevirtual #33                 // Method java/lang/Thread.start:()V
     138: goto          148
     141: aload_0
     142: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
     145: invokevirtual #34                 // Method javax/management/remote/JMXConnectorServer.start:()V
     148: aload_0
     149: getfield      #35                 // Field logger:Lorg/apache/commons/logging/Log;
     152: invokeinterface #36,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     157: ifeq          191
     160: aload_0
     161: getfield      #35                 // Field logger:Lorg/apache/commons/logging/Log;
     164: new           #25                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #37                 // String JMX connector server started:
     173: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: aload_0
     177: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
     180: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     183: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     191: goto          201
     194: astore_2
     195: aload_0
     196: invokevirtual #41                 // Method unregisterBeans:()V
     199: aload_2
     200: athrow
     201: return
    Exception table:
       from    to  target type
          79   191   194   Class java/io/IOException

  public javax.management.remote.JMXConnectorServer getObject();
    Code:
       0: aload_0
       1: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
       4: areturn

  public java.lang.Class<? extends javax.management.remote.JMXConnectorServer> getObjectType();
    Code:
       0: aload_0
       1: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
       4: ifnull        17
       7: aload_0
       8: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
      11: invokevirtual #42                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #43                 // class javax/management/remote/JMXConnectorServer
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void destroy() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
       4: ifnull        57
       7: aload_0
       8: getfield      #35                 // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #36,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      16: ifeq          50
      19: aload_0
      20: getfield      #35                 // Field logger:Lorg/apache/commons/logging/Log;
      23: new           #25                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #44                 // String Stopping JMX connector server:
      32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
      39: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      50: aload_0
      51: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
      54: invokevirtual #45                 // Method javax/management/remote/JMXConnectorServer.stop:()V
      57: aload_0
      58: invokevirtual #41                 // Method unregisterBeans:()V
      61: goto          71
      64: astore_1
      65: aload_0
      66: invokevirtual #41                 // Method unregisterBeans:()V
      69: aload_1
      70: athrow
      71: return
    Exception table:
       from    to  target type
           0    57    64   any

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method getObject:()Ljavax/management/remote/JMXConnectorServer;
       4: areturn

  static javax.management.remote.JMXConnectorServer access$000(org.springframework.jmx.support.ConnectorServerFactoryBean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field connectorServer:Ljavax/management/remote/JMXConnectorServer;
       4: areturn
}
