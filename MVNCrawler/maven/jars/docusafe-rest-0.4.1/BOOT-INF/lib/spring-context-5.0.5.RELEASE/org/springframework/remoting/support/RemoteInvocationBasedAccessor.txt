Compiled from "RemoteInvocationBasedAccessor.java"
public abstract class org.springframework.remoting.support.RemoteInvocationBasedAccessor extends org.springframework.remoting.support.UrlBasedRemoteAccessor {
  private org.springframework.remoting.support.RemoteInvocationFactory remoteInvocationFactory;

  public org.springframework.remoting.support.RemoteInvocationBasedAccessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/remoting/support/UrlBasedRemoteAccessor."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/remoting/support/DefaultRemoteInvocationFactory
       8: dup
       9: invokespecial #3                  // Method org/springframework/remoting/support/DefaultRemoteInvocationFactory."<init>":()V
      12: putfield      #4                  // Field remoteInvocationFactory:Lorg/springframework/remoting/support/RemoteInvocationFactory;
      15: return

  public void setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          16
       9: new           #2                  // class org/springframework/remoting/support/DefaultRemoteInvocationFactory
      12: dup
      13: invokespecial #3                  // Method org/springframework/remoting/support/DefaultRemoteInvocationFactory."<init>":()V
      16: putfield      #4                  // Field remoteInvocationFactory:Lorg/springframework/remoting/support/RemoteInvocationFactory;
      19: return

  public org.springframework.remoting.support.RemoteInvocationFactory getRemoteInvocationFactory();
    Code:
       0: aload_0
       1: getfield      #4                  // Field remoteInvocationFactory:Lorg/springframework/remoting/support/RemoteInvocationFactory;
       4: areturn

  protected org.springframework.remoting.support.RemoteInvocation createRemoteInvocation(org.aopalliance.intercept.MethodInvocation);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getRemoteInvocationFactory:()Lorg/springframework/remoting/support/RemoteInvocationFactory;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/springframework/remoting/support/RemoteInvocationFactory.createRemoteInvocation:(Lorg/aopalliance/intercept/MethodInvocation;)Lorg/springframework/remoting/support/RemoteInvocation;
      10: areturn

  protected java.lang.Object recreateRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method org/springframework/remoting/support/RemoteInvocationResult.recreate:()Ljava/lang/Object;
       4: areturn
}
