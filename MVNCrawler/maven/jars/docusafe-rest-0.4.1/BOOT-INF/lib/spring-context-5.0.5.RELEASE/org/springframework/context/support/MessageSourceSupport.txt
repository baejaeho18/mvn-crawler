Compiled from "MessageSourceSupport.java"
public abstract class org.springframework.context.support.MessageSourceSupport {
  private static final java.text.MessageFormat INVALID_MESSAGE_FORMAT;

  protected final org.apache.commons.logging.Log logger;

  private boolean alwaysUseMessageFormat;

  private final java.util.Map<java.lang.String, java.util.Map<java.util.Locale, java.text.MessageFormat>> messageFormatsPerMessage;

  public org.springframework.context.support.MessageSourceSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field alwaysUseMessageFormat:Z
      20: aload_0
      21: new           #6                  // class java/util/HashMap
      24: dup
      25: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      28: putfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      31: return

  public void setAlwaysUseMessageFormat(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field alwaysUseMessageFormat:Z
       5: return

  protected boolean isAlwaysUseMessageFormat();
    Code:
       0: aload_0
       1: getfield      #5                  // Field alwaysUseMessageFormat:Z
       4: ireturn

  protected java.lang.String renderDefaultMessage(java.lang.String, java.lang.Object[], java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #9                  // Method formatMessage:(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;
       7: areturn

  protected java.lang.String formatMessage(java.lang.String, java.lang.Object[], java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isAlwaysUseMessageFormat:()Z
       4: ifne          16
       7: aload_2
       8: invokestatic  #11                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      11: ifeq          16
      14: aload_1
      15: areturn
      16: aconst_null
      17: astore        4
      19: aload_0
      20: getfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      23: dup
      24: astore        5
      26: monitorenter
      27: aload_0
      28: getfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      31: aload_1
      32: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #13                 // class java/util/Map
      40: astore        6
      42: aload         6
      44: ifnull        63
      47: aload         6
      49: aload_3
      50: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #14                 // class java/text/MessageFormat
      58: astore        4
      60: goto          85
      63: new           #6                  // class java/util/HashMap
      66: dup
      67: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      70: astore        6
      72: aload_0
      73: getfield      #8                  // Field messageFormatsPerMessage:Ljava/util/Map;
      76: aload_1
      77: aload         6
      79: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload         4
      87: ifnonnull     129
      90: aload_0
      91: aload_1
      92: aload_3
      93: invokevirtual #16                 // Method createMessageFormat:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
      96: astore        4
      98: goto          118
     101: astore        7
     103: aload_0
     104: invokevirtual #10                 // Method isAlwaysUseMessageFormat:()Z
     107: ifeq          113
     110: aload         7
     112: athrow
     113: getstatic     #18                 // Field INVALID_MESSAGE_FORMAT:Ljava/text/MessageFormat;
     116: astore        4
     118: aload         6
     120: aload_3
     121: aload         4
     123: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload         5
     131: monitorexit
     132: goto          143
     135: astore        8
     137: aload         5
     139: monitorexit
     140: aload         8
     142: athrow
     143: aload         4
     145: getstatic     #18                 // Field INVALID_MESSAGE_FORMAT:Ljava/text/MessageFormat;
     148: if_acmpne     153
     151: aload_1
     152: areturn
     153: aload         4
     155: dup
     156: astore        5
     158: monitorenter
     159: aload         4
     161: aload_0
     162: aload_2
     163: aload_3
     164: invokevirtual #19                 // Method resolveArguments:([Ljava/lang/Object;Ljava/util/Locale;)[Ljava/lang/Object;
     167: invokevirtual #20                 // Method java/text/MessageFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
     170: aload         5
     172: monitorexit
     173: areturn
     174: astore        9
     176: aload         5
     178: monitorexit
     179: aload         9
     181: athrow
    Exception table:
       from    to  target type
          90    98   101   Class java/lang/IllegalArgumentException
          27   132   135   any
         135   140   135   any
         159   173   174   any
         174   179   174   any

  protected java.text.MessageFormat createMessageFormat(java.lang.String, java.util.Locale);
    Code:
       0: new           #14                 // class java/text/MessageFormat
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #21                 // Method java/text/MessageFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
       9: areturn

  protected java.lang.Object[] resolveArguments(java.lang.Object[], java.util.Locale);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: goto          12
       8: iconst_0
       9: anewarray     #22                 // class java/lang/Object
      12: areturn

  static {};
    Code:
       0: new           #14                 // class java/text/MessageFormat
       3: dup
       4: ldc           #23                 // String
       6: invokespecial #24                 // Method java/text/MessageFormat."<init>":(Ljava/lang/String;)V
       9: putstatic     #18                 // Field INVALID_MESSAGE_FORMAT:Ljava/text/MessageFormat;
      12: return
}
