Compiled from "MapAccessor.java"
public class org.springframework.context.expression.MapAccessor implements org.springframework.expression.spel.CompilablePropertyAccessor {
  public org.springframework.context.expression.MapAccessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Class<?>[] getSpecificTargetClasses();
    Code:
       0: iconst_1
       1: anewarray     #2                  // class java/lang/Class
       4: dup
       5: iconst_0
       6: ldc           #3                  // class java/util/Map
       8: aastore
       9: areturn

  public boolean canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String) throws org.springframework.expression.AccessException;
    Code:
       0: aload_2
       1: instanceof    #3                  // class java/util/Map
       4: ifeq          24
       7: aload_2
       8: checkcast     #3                  // class java/util/Map
      11: aload_3
      12: invokeinterface #4,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String) throws org.springframework.expression.AccessException;
    Code:
       0: aload_2
       1: instanceof    #3                  // class java/util/Map
       4: ldc           #5                  // String Target must be of type Map
       6: invokestatic  #6                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_2
      10: checkcast     #3                  // class java/util/Map
      13: astore        4
      15: aload         4
      17: aload_3
      18: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore        5
      25: aload         5
      27: ifnonnull     50
      30: aload         4
      32: aload_3
      33: invokeinterface #4,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      38: ifne          50
      41: new           #8                  // class org/springframework/context/expression/MapAccessor$MapAccessException
      44: dup
      45: aload_3
      46: invokespecial #9                  // Method org/springframework/context/expression/MapAccessor$MapAccessException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: new           #10                 // class org/springframework/expression/TypedValue
      53: dup
      54: aload         5
      56: invokespecial #11                 // Method org/springframework/expression/TypedValue."<init>":(Ljava/lang/Object;)V
      59: areturn

  public boolean canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String) throws org.springframework.expression.AccessException;
    Code:
       0: iconst_1
       1: ireturn

  public void write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object) throws org.springframework.expression.AccessException;
    Code:
       0: aload_2
       1: instanceof    #3                  // class java/util/Map
       4: ldc           #12                 // String Target must be a Map
       6: invokestatic  #6                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_2
      10: checkcast     #3                  // class java/util/Map
      13: astore        5
      15: aload         5
      17: aload_3
      18: aload         4
      20: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: return

  public boolean isCompilable();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Class<?> getPropertyType();
    Code:
       0: ldc           #14                 // class java/lang/Object
       2: areturn

  public void generateCode(java.lang.String, org.springframework.asm.MethodVisitor, org.springframework.expression.spel.CodeFlow);
    Code:
       0: aload_3
       1: invokevirtual #15                 // Method org/springframework/expression/spel/CodeFlow.lastDescriptor:()Ljava/lang/String;
       4: astore        4
       6: aload         4
       8: ifnull        21
      11: aload         4
      13: ldc           #16                 // String Ljava/util/Map
      15: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifne          37
      21: aload         4
      23: ifnonnull     31
      26: aload_3
      27: aload_2
      28: invokevirtual #18                 // Method org/springframework/expression/spel/CodeFlow.loadTarget:(Lorg/springframework/asm/MethodVisitor;)V
      31: aload_2
      32: ldc           #16                 // String Ljava/util/Map
      34: invokestatic  #19                 // Method org/springframework/expression/spel/CodeFlow.insertCheckCast:(Lorg/springframework/asm/MethodVisitor;Ljava/lang/String;)V
      37: aload_2
      38: aload_1
      39: invokevirtual #20                 // Method org/springframework/asm/MethodVisitor.visitLdcInsn:(Ljava/lang/Object;)V
      42: aload_2
      43: sipush        185
      46: ldc           #22                 // String java/util/Map
      48: ldc           #23                 // String get
      50: ldc           #24                 // String (Ljava/lang/Object;)Ljava/lang/Object;
      52: iconst_1
      53: invokevirtual #25                 // Method org/springframework/asm/MethodVisitor.visitMethodInsn:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      56: return
}
