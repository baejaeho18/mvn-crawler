Compiled from "ResourceBundleMessageSource.java"
public class org.springframework.context.support.ResourceBundleMessageSource extends org.springframework.context.support.AbstractResourceBasedMessageSource implements org.springframework.beans.factory.BeanClassLoaderAware {
  private java.lang.ClassLoader bundleClassLoader;

  private java.lang.ClassLoader beanClassLoader;

  private final java.util.Map<java.lang.String, java.util.Map<java.util.Locale, java.util.ResourceBundle>> cachedResourceBundles;

  private final java.util.Map<java.util.ResourceBundle, java.util.Map<java.lang.String, java.util.Map<java.util.Locale, java.text.MessageFormat>>> cachedBundleMessageFormats;

  public org.springframework.context.support.ResourceBundleMessageSource();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/context/support/AbstractResourceBasedMessageSource."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
       8: putfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      11: aload_0
      12: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      15: dup
      16: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      19: putfield      #7                  // Field cachedResourceBundles:Ljava/util/Map;
      22: aload_0
      23: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      30: putfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
      33: return

  public void setBundleClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field bundleClassLoader:Ljava/lang/ClassLoader;
       5: return

  protected java.lang.ClassLoader getBundleClassLoader();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bundleClassLoader:Ljava/lang/ClassLoader;
       4: ifnull        14
       7: aload_0
       8: getfield      #8                  // Field bundleClassLoader:Ljava/lang/ClassLoader;
      11: goto          18
      14: aload_0
      15: getfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      18: areturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  protected java.lang.String resolveCodeWithoutArguments(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getBasenameSet:()Ljava/util/Set;
       4: astore_3
       5: aload_3
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          69
      23: aload         4
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #13                 // class java/lang/String
      33: astore        5
      35: aload_0
      36: aload         5
      38: aload_2
      39: invokevirtual #14                 // Method getResourceBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      42: astore        6
      44: aload         6
      46: ifnull        66
      49: aload_0
      50: aload         6
      52: aload_1
      53: invokevirtual #15                 // Method getStringOrNull:(Ljava/util/ResourceBundle;Ljava/lang/String;)Ljava/lang/String;
      56: astore        7
      58: aload         7
      60: ifnull        66
      63: aload         7
      65: areturn
      66: goto          13
      69: aconst_null
      70: areturn

  protected java.text.MessageFormat resolveCode(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getBasenameSet:()Ljava/util/Set;
       4: astore_3
       5: aload_3
       6: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          70
      23: aload         4
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #13                 // class java/lang/String
      33: astore        5
      35: aload_0
      36: aload         5
      38: aload_2
      39: invokevirtual #14                 // Method getResourceBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      42: astore        6
      44: aload         6
      46: ifnull        67
      49: aload_0
      50: aload         6
      52: aload_1
      53: aload_2
      54: invokevirtual #16                 // Method getMessageFormat:(Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
      57: astore        7
      59: aload         7
      61: ifnull        67
      64: aload         7
      66: areturn
      67: goto          13
      70: aconst_null
      71: areturn

  protected java.util.ResourceBundle getResourceBundle(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getCacheMillis:()J
       4: lconst_0
       5: lcmp
       6: iflt          16
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokevirtual #18                 // Method doGetBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      15: areturn
      16: aload_0
      17: getfield      #7                  // Field cachedResourceBundles:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #20                 // class java/util/Map
      29: astore_3
      30: aload_3
      31: ifnull        54
      34: aload_3
      35: aload_2
      36: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #21                 // class java/util/ResourceBundle
      44: astore        4
      46: aload         4
      48: ifnull        54
      51: aload         4
      53: areturn
      54: aload_0
      55: aload_1
      56: aload_2
      57: invokevirtual #18                 // Method doGetBundle:(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
      60: astore        4
      62: aload_3
      63: ifnonnull     98
      66: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      69: dup
      70: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      73: astore_3
      74: aload_0
      75: getfield      #7                  // Field cachedResourceBundles:Ljava/util/Map;
      78: aload_1
      79: aload_3
      80: invokeinterface #22,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #20                 // class java/util/Map
      88: astore        5
      90: aload         5
      92: ifnull        98
      95: aload         5
      97: astore_3
      98: aload_3
      99: aload_2
     100: aload         4
     102: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload         4
     110: areturn
     111: astore        4
     113: aload_0
     114: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
     117: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     122: ifeq          166
     125: aload_0
     126: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
     129: new           #27                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     136: ldc           #29                 // String ResourceBundle [
     138: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_1
     142: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #31                 // String ] not found for MessageSource:
     147: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload         4
     152: invokevirtual #32                 // Method java/util/MissingResourceException.getMessage:()Ljava/lang/String;
     155: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: invokeinterface #34,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     166: aconst_null
     167: areturn
    Exception table:
       from    to  target type
          54   110   111   Class java/util/MissingResourceException

  protected java.util.ResourceBundle doGetBundle(java.lang.String, java.util.Locale) throws java.util.MissingResourceException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getBundleClassLoader:()Ljava/lang/ClassLoader;
       4: astore_3
       5: aload_3
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #36                 // String No bundle ClassLoader set
      16: invokestatic  #37                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_1
      20: aload_2
      21: aload_3
      22: new           #38                 // class org/springframework/context/support/ResourceBundleMessageSource$MessageSourceControl
      25: dup
      26: aload_0
      27: aconst_null
      28: invokespecial #39                 // Method org/springframework/context/support/ResourceBundleMessageSource$MessageSourceControl."<init>":(Lorg/springframework/context/support/ResourceBundleMessageSource;Lorg/springframework/context/support/ResourceBundleMessageSource$1;)V
      31: invokestatic  #40                 // Method java/util/ResourceBundle.getBundle:(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;
      34: areturn

  protected java.util.ResourceBundle loadBundle(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #41                 // class java/util/PropertyResourceBundle
       3: dup
       4: aload_1
       5: invokespecial #42                 // Method java/util/PropertyResourceBundle."<init>":(Ljava/io/Reader;)V
       8: areturn

  protected java.text.MessageFormat getMessageFormat(java.util.ResourceBundle, java.lang.String, java.util.Locale) throws java.util.MissingResourceException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class java/util/Map
      13: astore        4
      15: aconst_null
      16: astore        5
      18: aload         4
      20: ifnull        62
      23: aload         4
      25: aload_2
      26: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #20                 // class java/util/Map
      34: astore        5
      36: aload         5
      38: ifnull        62
      41: aload         5
      43: aload_3
      44: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #43                 // class java/text/MessageFormat
      52: astore        6
      54: aload         6
      56: ifnull        62
      59: aload         6
      61: areturn
      62: aload_0
      63: aload_1
      64: aload_2
      65: invokevirtual #15                 // Method getStringOrNull:(Ljava/util/ResourceBundle;Ljava/lang/String;)Ljava/lang/String;
      68: astore        6
      70: aload         6
      72: ifnull        176
      75: aload         4
      77: ifnonnull     115
      80: new           #5                  // class java/util/concurrent/ConcurrentHashMap
      83: dup
      84: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      87: astore        4
      89: aload_0
      90: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
      93: aload_1
      94: aload         4
      96: invokeinterface #22,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: checkcast     #20                 // class java/util/Map
     104: astore        7
     106: aload         7
     108: ifnull        115
     111: aload         7
     113: astore        4
     115: aload         5
     117: ifnonnull     153
     120: new           #5                  // class java/util/concurrent/ConcurrentHashMap
     123: dup
     124: invokespecial #6                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     127: astore        5
     129: aload         4
     131: aload_2
     132: aload         5
     134: invokeinterface #22,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: checkcast     #20                 // class java/util/Map
     142: astore        7
     144: aload         7
     146: ifnull        153
     149: aload         7
     151: astore        5
     153: aload_0
     154: aload         6
     156: aload_3
     157: invokevirtual #44                 // Method createMessageFormat:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/MessageFormat;
     160: astore        7
     162: aload         5
     164: aload_3
     165: aload         7
     167: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     172: pop
     173: aload         7
     175: areturn
     176: aconst_null
     177: areturn

  protected java.lang.String getStringOrNull(java.util.ResourceBundle, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #45                 // Method java/util/ResourceBundle.containsKey:(Ljava/lang/String;)Z
       5: ifeq          15
       8: aload_1
       9: aload_2
      10: invokevirtual #46                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn
      14: astore_3
      15: aconst_null
      16: areturn
    Exception table:
       from    to  target type
           8    13    14   Class java/util/MissingResourceException

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #48                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #49                 // String : basenames=
      19: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #9                  // Method getBasenameSet:()Ljava/util/Set;
      26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  static java.util.Map access$100(org.springframework.context.support.ResourceBundleMessageSource);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cachedBundleMessageFormats:Ljava/util/Map;
       4: areturn
}
