Compiled from "JWSSignerAndAlgorithmBuilder.java"
public class org.adorsys.jjwk.selector.JWSSignerAndAlgorithmBuilder {
  public org.adorsys.jjwk.selector.JWSSignerAndAlgorithmBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.adorsys.jjwk.selector.JWSSignerAndAlgorithm build(com.nimbusds.jose.jwk.JWK);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #2                  // Method build:(Lcom/nimbusds/jose/jwk/JWK;Ljava/util/LinkedHashSet;)Lorg/adorsys/jjwk/selector/JWSSignerAndAlgorithm;
       5: areturn

  public static org.adorsys.jjwk.selector.JWSSignerAndAlgorithm build(com.nimbusds.jose.jwk.JWK, java.util.LinkedHashSet<com.nimbusds.jose.JWSAlgorithm>);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: invokevirtual #3                  // Method com/nimbusds/jose/jwk/JWK.getAlgorithm:()Lcom/nimbusds/jose/Algorithm;
       8: astore        4
      10: aload         4
      12: ifnull        42
      15: aload         4
      17: instanceof    #4                  // class com/nimbusds/jose/JWSAlgorithm
      20: ifeq          32
      23: aload         4
      25: checkcast     #4                  // class com/nimbusds/jose/JWSAlgorithm
      28: astore_3
      29: goto          42
      32: new           #5                  // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #6                  // String Provided JWK does not contain an algoritm
      38: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: instanceof    #8                  // class com/nimbusds/jose/jwk/RSAKey
      46: ifeq          84
      49: aload_1
      50: ifnonnull     57
      53: getstatic     #9                  // Field com/nimbusds/jose/JWSAlgorithm$Family.RSA:Lcom/nimbusds/jose/JWSAlgorithm$Family;
      56: astore_1
      57: getstatic     #9                  // Field com/nimbusds/jose/JWSAlgorithm$Family.RSA:Lcom/nimbusds/jose/JWSAlgorithm$Family;
      60: aload_1
      61: invokestatic  #10                 // Method selectAlgoPref:(Lcom/nimbusds/jose/JWSAlgorithm$Family;Ljava/util/LinkedHashSet;)Lcom/nimbusds/jose/JWSAlgorithm;
      64: astore_3
      65: aload_3
      66: ifnull        178
      69: new           #11                 // class com/nimbusds/jose/crypto/RSASSASigner
      72: dup
      73: aload_0
      74: checkcast     #8                  // class com/nimbusds/jose/jwk/RSAKey
      77: invokespecial #12                 // Method com/nimbusds/jose/crypto/RSASSASigner."<init>":(Lcom/nimbusds/jose/jwk/RSAKey;)V
      80: astore_2
      81: goto          178
      84: aload_0
      85: instanceof    #13                 // class com/nimbusds/jose/jwk/ECKey
      88: ifeq          126
      91: aload_1
      92: ifnonnull     99
      95: getstatic     #14                 // Field com/nimbusds/jose/JWSAlgorithm$Family.EC:Lcom/nimbusds/jose/JWSAlgorithm$Family;
      98: astore_1
      99: getstatic     #14                 // Field com/nimbusds/jose/JWSAlgorithm$Family.EC:Lcom/nimbusds/jose/JWSAlgorithm$Family;
     102: aload_1
     103: invokestatic  #10                 // Method selectAlgoPref:(Lcom/nimbusds/jose/JWSAlgorithm$Family;Ljava/util/LinkedHashSet;)Lcom/nimbusds/jose/JWSAlgorithm;
     106: astore_3
     107: aload_3
     108: ifnull        178
     111: new           #15                 // class com/nimbusds/jose/crypto/ECDSASigner
     114: dup
     115: aload_0
     116: checkcast     #13                 // class com/nimbusds/jose/jwk/ECKey
     119: invokespecial #16                 // Method com/nimbusds/jose/crypto/ECDSASigner."<init>":(Lcom/nimbusds/jose/jwk/ECKey;)V
     122: astore_2
     123: goto          178
     126: aload_0
     127: instanceof    #17                 // class com/nimbusds/jose/jwk/OctetSequenceKey
     130: ifeq          168
     133: aload_1
     134: ifnonnull     141
     137: getstatic     #18                 // Field com/nimbusds/jose/JWSAlgorithm$Family.HMAC_SHA:Lcom/nimbusds/jose/JWSAlgorithm$Family;
     140: astore_1
     141: getstatic     #18                 // Field com/nimbusds/jose/JWSAlgorithm$Family.HMAC_SHA:Lcom/nimbusds/jose/JWSAlgorithm$Family;
     144: aload_1
     145: invokestatic  #10                 // Method selectAlgoPref:(Lcom/nimbusds/jose/JWSAlgorithm$Family;Ljava/util/LinkedHashSet;)Lcom/nimbusds/jose/JWSAlgorithm;
     148: astore_3
     149: aload_3
     150: ifnull        178
     153: new           #19                 // class com/nimbusds/jose/crypto/MACSigner
     156: dup
     157: aload_0
     158: checkcast     #17                 // class com/nimbusds/jose/jwk/OctetSequenceKey
     161: invokespecial #20                 // Method com/nimbusds/jose/crypto/MACSigner."<init>":(Lcom/nimbusds/jose/jwk/OctetSequenceKey;)V
     164: astore_2
     165: goto          178
     168: new           #21                 // class java/lang/IllegalStateException
     171: dup
     172: ldc           #22                 // String Key provided is not a signature key. Key must be of type JWS RSAKey or ECKey or OctetSequenceKey
     174: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     177: athrow
     178: aload_2
     179: ifnonnull     192
     182: new           #21                 // class java/lang/IllegalStateException
     185: dup
     186: ldc           #24                 // String Key provided is not an assymetric key. This framwork consumes either RSA od DSA keys.
     188: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     191: athrow
     192: goto          207
     195: astore        4
     197: new           #21                 // class java/lang/IllegalStateException
     200: dup
     201: aload         4
     203: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     206: athrow
     207: new           #27                 // class org/adorsys/jjwk/selector/JWSSignerAndAlgorithm
     210: dup
     211: aload_2
     212: aload_3
     213: invokespecial #28                 // Method org/adorsys/jjwk/selector/JWSSignerAndAlgorithm."<init>":(Lcom/nimbusds/jose/JWSSigner;Lcom/nimbusds/jose/JWSAlgorithm;)V
     216: areturn
    Exception table:
       from    to  target type
           4   192   195   Class com/nimbusds/jose/JOSEException

  private static com.nimbusds.jose.JWSAlgorithm selectAlgoPref(com.nimbusds.jose.JWSAlgorithm$Family, java.util.LinkedHashSet<com.nimbusds.jose.JWSAlgorithm>);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method java/util/LinkedHashSet.iterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          44
      14: aload_2
      15: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #4                  // class com/nimbusds/jose/JWSAlgorithm
      23: astore_3
      24: aload_0
      25: aload_3
      26: invokevirtual #32                 // Method com/nimbusds/jose/JWSAlgorithm$Family.contains:(Ljava/lang/Object;)Z
      29: ifeq          41
      32: aload_3
      33: invokestatic  #33                 // Method com/nimbusds/jose/jca/JCASupport.isSupported:(Lcom/nimbusds/jose/JWSAlgorithm;)Z
      36: ifeq          41
      39: aload_3
      40: areturn
      41: goto          5
      44: aconst_null
      45: areturn
}
