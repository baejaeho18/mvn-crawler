Compiled from "KeyConverter.java"
public class org.adorsys.jjwk.serverkey.KeyConverter {
  public org.adorsys.jjwk.serverkey.KeyConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.security.Key toPrivateOrSecret(com.nimbusds.jose.jwk.JWK);
    Code:
       0: aload_0
       1: instanceof    #2                  // class com/nimbusds/jose/jwk/AssymetricJWK
       4: ifeq          32
       7: aload_0
       8: checkcast     #2                  // class com/nimbusds/jose/jwk/AssymetricJWK
      11: invokeinterface #3,  1            // InterfaceMethod com/nimbusds/jose/jwk/AssymetricJWK.toKeyPair:()Ljava/security/KeyPair;
      16: astore_1
      17: aload_1
      18: invokevirtual #4                  // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      21: ifnull        29
      24: aload_1
      25: invokevirtual #4                  // Method java/security/KeyPair.getPrivate:()Ljava/security/PrivateKey;
      28: areturn
      29: goto          49
      32: aload_0
      33: instanceof    #5                  // class com/nimbusds/jose/jwk/SecretJWK
      36: ifeq          49
      39: aload_0
      40: checkcast     #5                  // class com/nimbusds/jose/jwk/SecretJWK
      43: invokeinterface #6,  1            // InterfaceMethod com/nimbusds/jose/jwk/SecretJWK.toSecretKey:()Ljavax/crypto/SecretKey;
      48: areturn
      49: goto          55
      52: astore_1
      53: aconst_null
      54: areturn
      55: aconst_null
      56: areturn
    Exception table:
       from    to  target type
           0    28    52   Class com/nimbusds/jose/JOSEException
          29    48    52   Class com/nimbusds/jose/JOSEException

  public static com.nimbusds.jose.jwk.JWKSet exportPrivateKeys(java.security.KeyStore, char[]);
    Code:
       0: aload_1
       1: invokedynamic #8,  0              // InvokeDynamic #0:lookupPassword:([C)Lcom/nimbusds/jose/jwk/PasswordLookup;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokestatic  #9                  // Method com/nimbusds/jose/jwk/JWKSet.load:(Ljava/security/KeyStore;Lcom/nimbusds/jose/jwk/PasswordLookup;)Lcom/nimbusds/jose/jwk/JWKSet;
      12: areturn
      13: astore_3
      14: new           #11                 // class java/lang/IllegalStateException
      17: dup
      18: aload_3
      19: invokespecial #12                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           7    12    13   Class java/security/KeyStoreException

  public static com.nimbusds.jose.JWSAlgorithm getJWSAlgo(org.adorsys.jjwk.serverkey.KeyAndJwk);
    Code:
       0: aload_0
       1: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
       4: invokevirtual #14                 // Method com/nimbusds/jose/jwk/JWK.getAlgorithm:()Lcom/nimbusds/jose/Algorithm;
       7: astore_1
       8: aload_1
       9: ifnull        24
      12: aload_1
      13: instanceof    #15                 // class com/nimbusds/jose/JWSAlgorithm
      16: ifeq          24
      19: aload_1
      20: checkcast     #15                 // class com/nimbusds/jose/JWSAlgorithm
      23: areturn
      24: aload_0
      25: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      28: invokevirtual #16                 // Method com/nimbusds/jose/jwk/JWK.getKeyType:()Lcom/nimbusds/jose/jwk/KeyType;
      31: astore_2
      32: aload_2
      33: ifnull        105
      36: getstatic     #17                 // Field com/nimbusds/jose/jwk/KeyType.RSA:Lcom/nimbusds/jose/jwk/KeyType;
      39: aload_2
      40: invokevirtual #18                 // Method com/nimbusds/jose/jwk/KeyType.equals:(Ljava/lang/Object;)Z
      43: ifeq          50
      46: getstatic     #19                 // Field com/nimbusds/jose/JWSAlgorithm.RS256:Lcom/nimbusds/jose/JWSAlgorithm;
      49: areturn
      50: getstatic     #20                 // Field com/nimbusds/jose/jwk/KeyType.EC:Lcom/nimbusds/jose/jwk/KeyType;
      53: aload_2
      54: invokevirtual #18                 // Method com/nimbusds/jose/jwk/KeyType.equals:(Ljava/lang/Object;)Z
      57: ifeq          64
      60: getstatic     #21                 // Field com/nimbusds/jose/JWSAlgorithm.ES256:Lcom/nimbusds/jose/JWSAlgorithm;
      63: areturn
      64: getstatic     #22                 // Field com/nimbusds/jose/jwk/KeyType.OCT:Lcom/nimbusds/jose/jwk/KeyType;
      67: aload_2
      68: invokevirtual #18                 // Method com/nimbusds/jose/jwk/KeyType.equals:(Ljava/lang/Object;)Z
      71: ifeq          78
      74: getstatic     #23                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
      77: areturn
      78: new           #11                 // class java/lang/IllegalStateException
      81: dup
      82: new           #24                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #26                 // String Unknown key type:
      91: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_2
      95: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_0
     106: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
     109: instanceof    #31                 // class com/nimbusds/jose/jwk/RSAKey
     112: ifeq          119
     115: getstatic     #19                 // Field com/nimbusds/jose/JWSAlgorithm.RS256:Lcom/nimbusds/jose/JWSAlgorithm;
     118: areturn
     119: aload_0
     120: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
     123: instanceof    #32                 // class com/nimbusds/jose/jwk/ECKey
     126: ifeq          133
     129: getstatic     #21                 // Field com/nimbusds/jose/JWSAlgorithm.ES256:Lcom/nimbusds/jose/JWSAlgorithm;
     132: areturn
     133: aload_0
     134: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
     137: instanceof    #33                 // class com/nimbusds/jose/jwk/OctetSequenceKey
     140: ifeq          147
     143: getstatic     #23                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
     146: areturn
     147: new           #11                 // class java/lang/IllegalStateException
     150: dup
     151: new           #24                 // class java/lang/StringBuilder
     154: dup
     155: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     158: ldc           #26                 // String Unknown key type:
     160: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload_0
     164: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
     167: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     170: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
     173: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     182: athrow

  public static com.nimbusds.jose.JWSSigner findSigner(org.adorsys.jjwk.serverkey.KeyAndJwk) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
       4: instanceof    #31                 // class com/nimbusds/jose/jwk/RSAKey
       7: ifeq          25
      10: new           #36                 // class com/nimbusds/jose/crypto/RSASSASigner
      13: dup
      14: aload_0
      15: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      18: checkcast     #31                 // class com/nimbusds/jose/jwk/RSAKey
      21: invokespecial #37                 // Method com/nimbusds/jose/crypto/RSASSASigner."<init>":(Lcom/nimbusds/jose/jwk/RSAKey;)V
      24: areturn
      25: aload_0
      26: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      29: instanceof    #32                 // class com/nimbusds/jose/jwk/ECKey
      32: ifeq          50
      35: new           #38                 // class com/nimbusds/jose/crypto/ECDSASigner
      38: dup
      39: aload_0
      40: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      43: checkcast     #32                 // class com/nimbusds/jose/jwk/ECKey
      46: invokespecial #39                 // Method com/nimbusds/jose/crypto/ECDSASigner."<init>":(Lcom/nimbusds/jose/jwk/ECKey;)V
      49: areturn
      50: aload_0
      51: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      54: instanceof    #33                 // class com/nimbusds/jose/jwk/OctetSequenceKey
      57: ifeq          75
      60: new           #40                 // class com/nimbusds/jose/crypto/MACSigner
      63: dup
      64: aload_0
      65: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      68: checkcast     #33                 // class com/nimbusds/jose/jwk/OctetSequenceKey
      71: invokespecial #41                 // Method com/nimbusds/jose/crypto/MACSigner."<init>":(Lcom/nimbusds/jose/jwk/OctetSequenceKey;)V
      74: areturn
      75: new           #11                 // class java/lang/IllegalStateException
      78: dup
      79: new           #24                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #26                 // String Unknown key type:
      88: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #13                 // Field org/adorsys/jjwk/serverkey/KeyAndJwk.jwk:Lcom/nimbusds/jose/jwk/JWK;
      95: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      98: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
     101: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     110: athrow

  private static char[] lambda$exportPrivateKeys$0(char[], java.lang.String);
    Code:
       0: aload_0
       1: areturn
}
