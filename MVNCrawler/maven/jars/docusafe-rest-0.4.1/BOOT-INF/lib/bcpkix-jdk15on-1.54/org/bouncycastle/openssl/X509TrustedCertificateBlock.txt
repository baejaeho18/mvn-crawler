public class org.bouncycastle.openssl.X509TrustedCertificateBlock {
  private final org.bouncycastle.cert.X509CertificateHolder certificateHolder;

  private final org.bouncycastle.openssl.CertificateTrustBlock trustBlock;

  public org.bouncycastle.openssl.X509TrustedCertificateBlock(org.bouncycastle.cert.X509CertificateHolder, org.bouncycastle.openssl.CertificateTrustBlock);
    Code:
       0: aload_0
       1: invokespecial #49                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #47                 // Field certificateHolder:Lorg/bouncycastle/cert/X509CertificateHolder;
       9: aload_0
      10: aload_2
      11: putfield      #48                 // Field trustBlock:Lorg/bouncycastle/openssl/CertificateTrustBlock;
      14: return

  public org.bouncycastle.openssl.X509TrustedCertificateBlock(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #49                 // Method java/lang/Object."<init>":()V
       4: new           #25                 // class org/bouncycastle/asn1/ASN1InputStream
       7: dup
       8: aload_1
       9: invokespecial #50                 // Method org/bouncycastle/asn1/ASN1InputStream."<init>":([B)V
      12: astore_2
      13: aload_0
      14: new           #28                 // class org/bouncycastle/cert/X509CertificateHolder
      17: dup
      18: aload_2
      19: invokevirtual #51                 // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      22: invokevirtual #52                 // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:()[B
      25: invokespecial #55                 // Method org/bouncycastle/cert/X509CertificateHolder."<init>":([B)V
      28: putfield      #47                 // Field certificateHolder:Lorg/bouncycastle/cert/X509CertificateHolder;
      31: aload_0
      32: new           #29                 // class org/bouncycastle/openssl/CertificateTrustBlock
      35: dup
      36: aload_2
      37: invokevirtual #51                 // Method org/bouncycastle/asn1/ASN1InputStream.readObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
      40: invokevirtual #52                 // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:()[B
      43: invokespecial #56                 // Method org/bouncycastle/openssl/CertificateTrustBlock."<init>":([B)V
      46: putfield      #48                 // Field trustBlock:Lorg/bouncycastle/openssl/CertificateTrustBlock;
      49: return

  public byte[] getEncoded() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field certificateHolder:Lorg/bouncycastle/cert/X509CertificateHolder;
       4: invokevirtual #54                 // Method org/bouncycastle/cert/X509CertificateHolder.getEncoded:()[B
       7: aload_0
       8: getfield      #48                 // Field trustBlock:Lorg/bouncycastle/openssl/CertificateTrustBlock;
      11: invokevirtual #57                 // Method org/bouncycastle/openssl/CertificateTrustBlock.toASN1Sequence:()Lorg/bouncycastle/asn1/ASN1Sequence;
      14: invokevirtual #53                 // Method org/bouncycastle/asn1/ASN1Sequence.getEncoded:()[B
      17: invokestatic  #58                 // Method org/bouncycastle/util/Arrays.concatenate:([B[B)[B
      20: areturn

  public org.bouncycastle.cert.X509CertificateHolder getCertificateHolder();
    Code:
       0: aload_0
       1: getfield      #47                 // Field certificateHolder:Lorg/bouncycastle/cert/X509CertificateHolder;
       4: areturn

  public org.bouncycastle.openssl.CertificateTrustBlock getTrustBlock();
    Code:
       0: aload_0
       1: getfield      #48                 // Field trustBlock:Lorg/bouncycastle/openssl/CertificateTrustBlock;
       4: areturn
}
