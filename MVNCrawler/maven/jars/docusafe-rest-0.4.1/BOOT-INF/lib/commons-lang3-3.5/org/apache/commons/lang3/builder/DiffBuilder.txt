Compiled from "DiffBuilder.java"
public class org.apache.commons.lang3.builder.DiffBuilder implements org.apache.commons.lang3.builder.Builder<org.apache.commons.lang3.builder.DiffResult> {
  private final java.util.List<org.apache.commons.lang3.builder.Diff<?>> diffs;

  private final boolean objectsTriviallyEqual;

  private final java.lang.Object left;

  private final java.lang.Object right;

  private final org.apache.commons.lang3.builder.ToStringStyle style;

  public org.apache.commons.lang3.builder.DiffBuilder(java.lang.Object, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String lhs cannot be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_2
      19: ifnonnull     32
      22: new           #2                  // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #5                  // String rhs cannot be null
      28: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: new           #6                  // class java/util/ArrayList
      36: dup
      37: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      40: putfield      #8                  // Field diffs:Ljava/util/List;
      43: aload_0
      44: aload_1
      45: putfield      #9                  // Field left:Ljava/lang/Object;
      48: aload_0
      49: aload_2
      50: putfield      #10                 // Field right:Ljava/lang/Object;
      53: aload_0
      54: aload_3
      55: putfield      #11                 // Field style:Lorg/apache/commons/lang3/builder/ToStringStyle;
      58: aload_0
      59: iload         4
      61: ifeq          81
      64: aload_1
      65: aload_2
      66: if_acmpeq     77
      69: aload_1
      70: aload_2
      71: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: putfield      #13                 // Field objectsTriviallyEqual:Z
      85: return

  public org.apache.commons.lang3.builder.DiffBuilder(java.lang.Object, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: invokespecial #14                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)V
       8: return

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, boolean, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #16                 // class org/apache/commons/lang3/builder/DiffBuilder$1
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #17                 // Method org/apache/commons/lang3/builder/DiffBuilder$1."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;ZZ)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, boolean[], boolean[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #19                 // Method java/util/Arrays.equals:([Z[Z)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #20                 // class org/apache/commons/lang3/builder/DiffBuilder$2
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #21                 // Method org/apache/commons/lang3/builder/DiffBuilder$2."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[Z[Z)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, byte, byte);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #22                 // class org/apache/commons/lang3/builder/DiffBuilder$3
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #23                 // Method org/apache/commons/lang3/builder/DiffBuilder$3."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;BB)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, byte[], byte[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #24                 // Method java/util/Arrays.equals:([B[B)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #25                 // class org/apache/commons/lang3/builder/DiffBuilder$4
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #26                 // Method org/apache/commons/lang3/builder/DiffBuilder$4."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[B[B)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, char, char);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #27                 // class org/apache/commons/lang3/builder/DiffBuilder$5
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #28                 // Method org/apache/commons/lang3/builder/DiffBuilder$5."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;CC)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, char[], char[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #29                 // Method java/util/Arrays.equals:([C[C)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #30                 // class org/apache/commons/lang3/builder/DiffBuilder$6
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #31                 // Method org/apache/commons/lang3/builder/DiffBuilder$6."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[C[C)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, double, double);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: dload_2
      24: invokestatic  #32                 // Method java/lang/Double.doubleToLongBits:(D)J
      27: dload         4
      29: invokestatic  #32                 // Method java/lang/Double.doubleToLongBits:(D)J
      32: lcmp
      33: ifeq          58
      36: aload_0
      37: getfield      #8                  // Field diffs:Ljava/util/List;
      40: new           #33                 // class org/apache/commons/lang3/builder/DiffBuilder$7
      43: dup
      44: aload_0
      45: aload_1
      46: dload_2
      47: dload         4
      49: invokespecial #34                 // Method org/apache/commons/lang3/builder/DiffBuilder$7."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;DD)V
      52: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, double[], double[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #35                 // Method java/util/Arrays.equals:([D[D)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #36                 // class org/apache/commons/lang3/builder/DiffBuilder$8
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #37                 // Method org/apache/commons/lang3/builder/DiffBuilder$8."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[D[D)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, float, float);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: fload_2
      24: invokestatic  #38                 // Method java/lang/Float.floatToIntBits:(F)I
      27: fload_3
      28: invokestatic  #38                 // Method java/lang/Float.floatToIntBits:(F)I
      31: if_icmpeq     55
      34: aload_0
      35: getfield      #8                  // Field diffs:Ljava/util/List;
      38: new           #39                 // class org/apache/commons/lang3/builder/DiffBuilder$9
      41: dup
      42: aload_0
      43: aload_1
      44: fload_2
      45: fload_3
      46: invokespecial #40                 // Method org/apache/commons/lang3/builder/DiffBuilder$9."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;FF)V
      49: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: aload_0
      56: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, float[], float[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #41                 // Method java/util/Arrays.equals:([F[F)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #42                 // class org/apache/commons/lang3/builder/DiffBuilder$10
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #43                 // Method org/apache/commons/lang3/builder/DiffBuilder$10."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[F[F)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #44                 // class org/apache/commons/lang3/builder/DiffBuilder$11
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #45                 // Method org/apache/commons/lang3/builder/DiffBuilder$11."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;II)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, int[], int[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #46                 // Method java/util/Arrays.equals:([I[I)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #47                 // class org/apache/commons/lang3/builder/DiffBuilder$12
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #48                 // Method org/apache/commons/lang3/builder/DiffBuilder$12."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[I[I)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, long, long);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: lload_2
      24: lload         4
      26: lcmp
      27: ifeq          52
      30: aload_0
      31: getfield      #8                  // Field diffs:Ljava/util/List;
      34: new           #49                 // class org/apache/commons/lang3/builder/DiffBuilder$13
      37: dup
      38: aload_0
      39: aload_1
      40: lload_2
      41: lload         4
      43: invokespecial #50                 // Method org/apache/commons/lang3/builder/DiffBuilder$13."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;JJ)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, long[], long[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #51                 // Method java/util/Arrays.equals:([J[J)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #52                 // class org/apache/commons/lang3/builder/DiffBuilder$14
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #53                 // Method org/apache/commons/lang3/builder/DiffBuilder$14."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[J[J)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, short, short);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: iload_2
      24: iload_3
      25: if_icmpeq     49
      28: aload_0
      29: getfield      #8                  // Field diffs:Ljava/util/List;
      32: new           #54                 // class org/apache/commons/lang3/builder/DiffBuilder$15
      35: dup
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokespecial #55                 // Method org/apache/commons/lang3/builder/DiffBuilder$15."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;SS)V
      43: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: aload_0
      50: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, short[], short[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #56                 // Method java/util/Arrays.equals:([S[S)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #57                 // class org/apache/commons/lang3/builder/DiffBuilder$16
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #58                 // Method org/apache/commons/lang3/builder/DiffBuilder$16."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[S[S)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: if_acmpne     30
      28: aload_0
      29: areturn
      30: aload_2
      31: ifnull        40
      34: aload_2
      35: astore        4
      37: goto          43
      40: aload_3
      41: astore        4
      43: aload         4
      45: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #60                 // Method java/lang/Class.isArray:()Z
      51: ifeq          298
      54: aload         4
      56: instanceof    #61                 // class "[Z"
      59: ifeq          82
      62: aload_0
      63: aload_1
      64: aload_2
      65: checkcast     #61                 // class "[Z"
      68: checkcast     #61                 // class "[Z"
      71: aload_3
      72: checkcast     #61                 // class "[Z"
      75: checkcast     #61                 // class "[Z"
      78: invokevirtual #62                 // Method append:(Ljava/lang/String;[Z[Z)Lorg/apache/commons/lang3/builder/DiffBuilder;
      81: areturn
      82: aload         4
      84: instanceof    #63                 // class "[B"
      87: ifeq          110
      90: aload_0
      91: aload_1
      92: aload_2
      93: checkcast     #63                 // class "[B"
      96: checkcast     #63                 // class "[B"
      99: aload_3
     100: checkcast     #63                 // class "[B"
     103: checkcast     #63                 // class "[B"
     106: invokevirtual #64                 // Method append:(Ljava/lang/String;[B[B)Lorg/apache/commons/lang3/builder/DiffBuilder;
     109: areturn
     110: aload         4
     112: instanceof    #65                 // class "[C"
     115: ifeq          138
     118: aload_0
     119: aload_1
     120: aload_2
     121: checkcast     #65                 // class "[C"
     124: checkcast     #65                 // class "[C"
     127: aload_3
     128: checkcast     #65                 // class "[C"
     131: checkcast     #65                 // class "[C"
     134: invokevirtual #66                 // Method append:(Ljava/lang/String;[C[C)Lorg/apache/commons/lang3/builder/DiffBuilder;
     137: areturn
     138: aload         4
     140: instanceof    #67                 // class "[D"
     143: ifeq          166
     146: aload_0
     147: aload_1
     148: aload_2
     149: checkcast     #67                 // class "[D"
     152: checkcast     #67                 // class "[D"
     155: aload_3
     156: checkcast     #67                 // class "[D"
     159: checkcast     #67                 // class "[D"
     162: invokevirtual #68                 // Method append:(Ljava/lang/String;[D[D)Lorg/apache/commons/lang3/builder/DiffBuilder;
     165: areturn
     166: aload         4
     168: instanceof    #69                 // class "[F"
     171: ifeq          194
     174: aload_0
     175: aload_1
     176: aload_2
     177: checkcast     #69                 // class "[F"
     180: checkcast     #69                 // class "[F"
     183: aload_3
     184: checkcast     #69                 // class "[F"
     187: checkcast     #69                 // class "[F"
     190: invokevirtual #70                 // Method append:(Ljava/lang/String;[F[F)Lorg/apache/commons/lang3/builder/DiffBuilder;
     193: areturn
     194: aload         4
     196: instanceof    #71                 // class "[I"
     199: ifeq          222
     202: aload_0
     203: aload_1
     204: aload_2
     205: checkcast     #71                 // class "[I"
     208: checkcast     #71                 // class "[I"
     211: aload_3
     212: checkcast     #71                 // class "[I"
     215: checkcast     #71                 // class "[I"
     218: invokevirtual #72                 // Method append:(Ljava/lang/String;[I[I)Lorg/apache/commons/lang3/builder/DiffBuilder;
     221: areturn
     222: aload         4
     224: instanceof    #73                 // class "[J"
     227: ifeq          250
     230: aload_0
     231: aload_1
     232: aload_2
     233: checkcast     #73                 // class "[J"
     236: checkcast     #73                 // class "[J"
     239: aload_3
     240: checkcast     #73                 // class "[J"
     243: checkcast     #73                 // class "[J"
     246: invokevirtual #74                 // Method append:(Ljava/lang/String;[J[J)Lorg/apache/commons/lang3/builder/DiffBuilder;
     249: areturn
     250: aload         4
     252: instanceof    #75                 // class "[S"
     255: ifeq          278
     258: aload_0
     259: aload_1
     260: aload_2
     261: checkcast     #75                 // class "[S"
     264: checkcast     #75                 // class "[S"
     267: aload_3
     268: checkcast     #75                 // class "[S"
     271: checkcast     #75                 // class "[S"
     274: invokevirtual #76                 // Method append:(Ljava/lang/String;[S[S)Lorg/apache/commons/lang3/builder/DiffBuilder;
     277: areturn
     278: aload_0
     279: aload_1
     280: aload_2
     281: checkcast     #77                 // class "[Ljava/lang/Object;"
     284: checkcast     #77                 // class "[Ljava/lang/Object;"
     287: aload_3
     288: checkcast     #77                 // class "[Ljava/lang/Object;"
     291: checkcast     #77                 // class "[Ljava/lang/Object;"
     294: invokevirtual #78                 // Method append:(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
     297: areturn
     298: aload_2
     299: ifnull        312
     302: aload_2
     303: aload_3
     304: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     307: ifeq          312
     310: aload_0
     311: areturn
     312: aload_0
     313: getfield      #8                  // Field diffs:Ljava/util/List;
     316: new           #79                 // class org/apache/commons/lang3/builder/DiffBuilder$17
     319: dup
     320: aload_0
     321: aload_1
     322: aload_2
     323: aload_3
     324: invokespecial #80                 // Method org/apache/commons/lang3/builder/DiffBuilder$17."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     327: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     332: pop
     333: aload_0
     334: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, java.lang.Object[], java.lang.Object[]);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field objectsTriviallyEqual:Z
      18: ifeq          23
      21: aload_0
      22: areturn
      23: aload_2
      24: aload_3
      25: invokestatic  #81                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      28: ifne          52
      31: aload_0
      32: getfield      #8                  // Field diffs:Ljava/util/List;
      35: new           #82                 // class org/apache/commons/lang3/builder/DiffBuilder$18
      38: dup
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokespecial #83                 // Method org/apache/commons/lang3/builder/DiffBuilder$18."<init>":(Lorg/apache/commons/lang3/builder/DiffBuilder;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V
      46: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: areturn

  public org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String, org.apache.commons.lang3.builder.DiffResult);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String Field name cannot be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #84                 // String Diff result cannot be null
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #13                 // Field objectsTriviallyEqual:Z
      32: ifeq          37
      35: aload_0
      36: areturn
      37: aload_2
      38: invokevirtual #85                 // Method org/apache/commons/lang3/builder/DiffResult.getDiffs:()Ljava/util/List;
      41: invokeinterface #86,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      46: astore_3
      47: aload_3
      48: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          112
      56: aload_3
      57: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #89                 // class org/apache/commons/lang3/builder/Diff
      65: astore        4
      67: aload_0
      68: new           #90                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      75: aload_1
      76: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #93                 // String .
      81: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload         4
      86: invokevirtual #94                 // Method org/apache/commons/lang3/builder/Diff.getFieldName:()Ljava/lang/String;
      89: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: aload         4
      97: invokevirtual #96                 // Method org/apache/commons/lang3/builder/Diff.getLeft:()Ljava/lang/Object;
     100: aload         4
     102: invokevirtual #97                 // Method org/apache/commons/lang3/builder/Diff.getRight:()Ljava/lang/Object;
     105: invokevirtual #98                 // Method append:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/DiffBuilder;
     108: pop
     109: goto          47
     112: aload_0
     113: areturn

  public org.apache.commons.lang3.builder.DiffResult build();
    Code:
       0: new           #99                 // class org/apache/commons/lang3/builder/DiffResult
       3: dup
       4: aload_0
       5: getfield      #9                  // Field left:Ljava/lang/Object;
       8: aload_0
       9: getfield      #10                 // Field right:Ljava/lang/Object;
      12: aload_0
      13: getfield      #8                  // Field diffs:Ljava/util/List;
      16: aload_0
      17: getfield      #11                 // Field style:Lorg/apache/commons/lang3/builder/ToStringStyle;
      20: invokespecial #100                // Method org/apache/commons/lang3/builder/DiffResult."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;Lorg/apache/commons/lang3/builder/ToStringStyle;)V
      23: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method build:()Lorg/apache/commons/lang3/builder/DiffResult;
       4: areturn
}
