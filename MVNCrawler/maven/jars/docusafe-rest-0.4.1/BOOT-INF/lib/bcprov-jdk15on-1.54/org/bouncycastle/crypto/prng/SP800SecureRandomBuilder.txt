public class org.bouncycastle.crypto.prng.SP800SecureRandomBuilder {
  private final java.security.SecureRandom random;

  private final org.bouncycastle.crypto.prng.EntropySourceProvider entropySourceProvider;

  private byte[] personalizationString;

  private int securityStrength;

  private int entropyBitsRequired;

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder();
    Code:
       0: aload_0
       1: new           #30                 // class java/security/SecureRandom
       4: dup
       5: invokespecial #75                 // Method java/security/SecureRandom."<init>":()V
       8: iconst_0
       9: invokespecial #78                 // Method "<init>":(Ljava/security/SecureRandom;Z)V
      12: return

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(java.security.SecureRandom, boolean);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        256
       8: putfield      #70                 // Field securityStrength:I
      11: aload_0
      12: sipush        256
      15: putfield      #69                 // Field entropyBitsRequired:I
      18: aload_0
      19: aload_1
      20: putfield      #72                 // Field random:Ljava/security/SecureRandom;
      23: aload_0
      24: new           #31                 // class org/bouncycastle/crypto/prng/BasicEntropySourceProvider
      27: dup
      28: aload_0
      29: getfield      #72                 // Field random:Ljava/security/SecureRandom;
      32: iload_2
      33: invokespecial #76                 // Method org/bouncycastle/crypto/prng/BasicEntropySourceProvider."<init>":(Ljava/security/SecureRandom;Z)V
      36: putfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      39: return

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder(org.bouncycastle.crypto.prng.EntropySourceProvider);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        256
       8: putfield      #70                 // Field securityStrength:I
      11: aload_0
      12: sipush        256
      15: putfield      #69                 // Field entropyBitsRequired:I
      18: aload_0
      19: aconst_null
      20: putfield      #72                 // Field random:Ljava/security/SecureRandom;
      23: aload_0
      24: aload_1
      25: putfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      28: return

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setPersonalizationString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field personalizationString:[B
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setSecurityStrength(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #70                 // Field securityStrength:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandomBuilder setEntropyBitsRequired(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #69                 // Field entropyBitsRequired:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildHash(org.bouncycastle.crypto.Digest, byte[], boolean);
    Code:
       0: new           #33                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #72                 // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #69                 // Field entropyBitsRequired:I
      16: invokeinterface #84,  2           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #39                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HashDRBGProvider
      24: dup
      25: aload_1
      26: aload_2
      27: aload_0
      28: getfield      #71                 // Field personalizationString:[B
      31: aload_0
      32: getfield      #70                 // Field securityStrength:I
      35: invokespecial #83                 // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HashDRBGProvider."<init>":(Lorg/bouncycastle/crypto/Digest;[B[BI)V
      38: iload_3
      39: invokespecial #77                 // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      42: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildCTR(org.bouncycastle.crypto.BlockCipher, int, byte[], boolean);
    Code:
       0: new           #33                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #72                 // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #69                 // Field entropyBitsRequired:I
      16: invokeinterface #84,  2           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #35                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$CTRDRBGProvider
      24: dup
      25: aload_1
      26: iload_2
      27: aload_3
      28: aload_0
      29: getfield      #71                 // Field personalizationString:[B
      32: aload_0
      33: getfield      #70                 // Field securityStrength:I
      36: invokespecial #79                 // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$CTRDRBGProvider."<init>":(Lorg/bouncycastle/crypto/BlockCipher;I[B[BI)V
      39: iload         4
      41: invokespecial #77                 // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      44: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildHMAC(org.bouncycastle.crypto.Mac, byte[], boolean);
    Code:
       0: new           #33                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #72                 // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #69                 // Field entropyBitsRequired:I
      16: invokeinterface #84,  2           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #38                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HMacDRBGProvider
      24: dup
      25: aload_1
      26: aload_2
      27: aload_0
      28: getfield      #71                 // Field personalizationString:[B
      31: aload_0
      32: getfield      #70                 // Field securityStrength:I
      35: invokespecial #82                 // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$HMacDRBGProvider."<init>":(Lorg/bouncycastle/crypto/Mac;[B[BI)V
      38: iload_3
      39: invokespecial #77                 // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      42: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildDualEC(org.bouncycastle.crypto.Digest, byte[], boolean);
    Code:
       0: new           #33                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #72                 // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #69                 // Field entropyBitsRequired:I
      16: invokeinterface #84,  2           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #37                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$DualECDRBGProvider
      24: dup
      25: aload_1
      26: aload_2
      27: aload_0
      28: getfield      #71                 // Field personalizationString:[B
      31: aload_0
      32: getfield      #70                 // Field securityStrength:I
      35: invokespecial #81                 // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$DualECDRBGProvider."<init>":(Lorg/bouncycastle/crypto/Digest;[B[BI)V
      38: iload_3
      39: invokespecial #77                 // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      42: areturn

  public org.bouncycastle.crypto.prng.SP800SecureRandom buildDualEC(org.bouncycastle.crypto.prng.drbg.DualECPoints[], org.bouncycastle.crypto.Digest, byte[], boolean);
    Code:
       0: new           #33                 // class org/bouncycastle/crypto/prng/SP800SecureRandom
       3: dup
       4: aload_0
       5: getfield      #72                 // Field random:Ljava/security/SecureRandom;
       8: aload_0
       9: getfield      #73                 // Field entropySourceProvider:Lorg/bouncycastle/crypto/prng/EntropySourceProvider;
      12: aload_0
      13: getfield      #69                 // Field entropyBitsRequired:I
      16: invokeinterface #84,  2           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySourceProvider.get:(I)Lorg/bouncycastle/crypto/prng/EntropySource;
      21: new           #36                 // class org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider
      24: dup
      25: aload_1
      26: aload_2
      27: aload_3
      28: aload_0
      29: getfield      #71                 // Field personalizationString:[B
      32: aload_0
      33: getfield      #70                 // Field securityStrength:I
      36: invokespecial #80                 // Method org/bouncycastle/crypto/prng/SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider."<init>":([Lorg/bouncycastle/crypto/prng/drbg/DualECPoints;Lorg/bouncycastle/crypto/Digest;[B[BI)V
      39: iload         4
      41: invokespecial #77                 // Method org/bouncycastle/crypto/prng/SP800SecureRandom."<init>":(Ljava/security/SecureRandom;Lorg/bouncycastle/crypto/prng/EntropySource;Lorg/bouncycastle/crypto/prng/DRBGProvider;Z)V
      44: areturn
}
