public class org.bouncycastle.asn1.x509.IssuingDistributionPoint extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.x509.DistributionPointName distributionPoint;

  private boolean onlyContainsUserCerts;

  private boolean onlyContainsCACerts;

  private org.bouncycastle.asn1.x509.ReasonFlags onlySomeReasons;

  private boolean indirectCRL;

  private boolean onlyContainsAttributeCerts;

  private org.bouncycastle.asn1.ASN1Sequence seq;

  public static org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #154                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
       5: invokestatic  #163                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/IssuingDistributionPoint;
       8: areturn

  public static org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #71                 // class org/bouncycastle/asn1/x509/IssuingDistributionPoint
       4: ifeq          12
       7: aload_0
       8: checkcast     #71                 // class org/bouncycastle/asn1/x509/IssuingDistributionPoint
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #71                 // class org/bouncycastle/asn1/x509/IssuingDistributionPoint
      19: dup
      20: aload_0
      21: invokestatic  #153                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #162                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  public org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, boolean, boolean, org.bouncycastle.asn1.x509.ReasonFlags, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #150                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #139                // Field distributionPoint:Lorg/bouncycastle/asn1/x509/DistributionPointName;
       9: aload_0
      10: iload         5
      12: putfield      #134                // Field indirectCRL:Z
      15: aload_0
      16: iload         6
      18: putfield      #135                // Field onlyContainsAttributeCerts:Z
      21: aload_0
      22: iload_3
      23: putfield      #136                // Field onlyContainsCACerts:Z
      26: aload_0
      27: iload_2
      28: putfield      #137                // Field onlyContainsUserCerts:Z
      31: aload_0
      32: aload         4
      34: putfield      #140                // Field onlySomeReasons:Lorg/bouncycastle/asn1/x509/ReasonFlags;
      37: new           #64                 // class org/bouncycastle/asn1/ASN1EncodableVector
      40: dup
      41: invokespecial #148                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      44: astore        7
      46: aload_1
      47: ifnull        65
      50: aload         7
      52: new           #69                 // class org/bouncycastle/asn1/DERTaggedObject
      55: dup
      56: iconst_1
      57: iconst_0
      58: aload_1
      59: invokespecial #158                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      62: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      65: iload_2
      66: ifeq          87
      69: aload         7
      71: new           #69                 // class org/bouncycastle/asn1/DERTaggedObject
      74: dup
      75: iconst_0
      76: iconst_1
      77: iconst_1
      78: invokestatic  #146                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
      81: invokespecial #158                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
      84: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      87: iload_3
      88: ifeq          109
      91: aload         7
      93: new           #69                 // class org/bouncycastle/asn1/DERTaggedObject
      96: dup
      97: iconst_0
      98: iconst_2
      99: iconst_1
     100: invokestatic  #146                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     103: invokespecial #158                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     106: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     109: aload         4
     111: ifnull        130
     114: aload         7
     116: new           #69                 // class org/bouncycastle/asn1/DERTaggedObject
     119: dup
     120: iconst_0
     121: iconst_3
     122: aload         4
     124: invokespecial #158                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     127: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     130: iload         5
     132: ifeq          153
     135: aload         7
     137: new           #69                 // class org/bouncycastle/asn1/DERTaggedObject
     140: dup
     141: iconst_0
     142: iconst_4
     143: iconst_1
     144: invokestatic  #146                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     147: invokespecial #158                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     150: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     153: iload         6
     155: ifeq          176
     158: aload         7
     160: new           #69                 // class org/bouncycastle/asn1/DERTaggedObject
     163: dup
     164: iconst_0
     165: iconst_5
     166: iconst_1
     167: invokestatic  #146                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     170: invokespecial #158                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     173: invokevirtual #149                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     176: aload_0
     177: new           #68                 // class org/bouncycastle/asn1/DERSequence
     180: dup
     181: aload         7
     183: invokespecial #157                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     186: putfield      #138                // Field seq:Lorg/bouncycastle/asn1/ASN1Sequence;
     189: return

  public org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.x509.DistributionPointName, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: aconst_null
       5: iload_2
       6: iload_3
       7: invokespecial #164                // Method "<init>":(Lorg/bouncycastle/asn1/x509/DistributionPointName;ZZLorg/bouncycastle/asn1/x509/ReasonFlags;ZZ)V
      10: return

  private org.bouncycastle.asn1.x509.IssuingDistributionPoint(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #150                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #138                // Field seq:Lorg/bouncycastle/asn1/ASN1Sequence;
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_1
      13: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: if_icmpeq     179
      19: aload_1
      20: iload_2
      21: invokevirtual #152                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      24: invokestatic  #156                // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
      27: astore_3
      28: aload_3
      29: invokevirtual #155                // Method org/bouncycastle/asn1/ASN1TaggedObject.getTagNo:()I
      32: tableswitch   { // 0 to 5
                     0: 72
                     1: 84
                     2: 99
                     3: 114
                     4: 133
                     5: 148
               default: 163
          }
      72: aload_0
      73: aload_3
      74: iconst_1
      75: invokestatic  #160                // Method org/bouncycastle/asn1/x509/DistributionPointName.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/x509/DistributionPointName;
      78: putfield      #139                // Field distributionPoint:Lorg/bouncycastle/asn1/x509/DistributionPointName;
      81: goto          173
      84: aload_0
      85: aload_3
      86: iconst_0
      87: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Boolean;
      90: invokevirtual #145                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
      93: putfield      #137                // Field onlyContainsUserCerts:Z
      96: goto          173
      99: aload_0
     100: aload_3
     101: iconst_0
     102: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     105: invokevirtual #145                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
     108: putfield      #136                // Field onlyContainsCACerts:Z
     111: goto          173
     114: aload_0
     115: new           #72                 // class org/bouncycastle/asn1/x509/ReasonFlags
     118: dup
     119: aload_3
     120: iconst_0
     121: invokestatic  #168                // Method org/bouncycastle/asn1/x509/ReasonFlags.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/DERBitString;
     124: invokespecial #167                // Method org/bouncycastle/asn1/x509/ReasonFlags."<init>":(Lorg/bouncycastle/asn1/DERBitString;)V
     127: putfield      #140                // Field onlySomeReasons:Lorg/bouncycastle/asn1/x509/ReasonFlags;
     130: goto          173
     133: aload_0
     134: aload_3
     135: iconst_0
     136: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     139: invokevirtual #145                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
     142: putfield      #134                // Field indirectCRL:Z
     145: goto          173
     148: aload_0
     149: aload_3
     150: iconst_0
     151: invokestatic  #147                // Method org/bouncycastle/asn1/ASN1Boolean.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Boolean;
     154: invokevirtual #145                // Method org/bouncycastle/asn1/ASN1Boolean.isTrue:()Z
     157: putfield      #135                // Field onlyContainsAttributeCerts:Z
     160: goto          173
     163: new           #61                 // class java/lang/IllegalArgumentException
     166: dup
     167: ldc           #13                 // String unknown tag in IssuingDistributionPoint
     169: invokespecial #141                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     172: athrow
     173: iinc          2, 1
     176: goto          11
     179: return

  public boolean onlyContainsUserCerts();
    Code:
       0: aload_0
       1: getfield      #137                // Field onlyContainsUserCerts:Z
       4: ireturn

  public boolean onlyContainsCACerts();
    Code:
       0: aload_0
       1: getfield      #136                // Field onlyContainsCACerts:Z
       4: ireturn

  public boolean isIndirectCRL();
    Code:
       0: aload_0
       1: getfield      #134                // Field indirectCRL:Z
       4: ireturn

  public boolean onlyContainsAttributeCerts();
    Code:
       0: aload_0
       1: getfield      #135                // Field onlyContainsAttributeCerts:Z
       4: ireturn

  public org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint();
    Code:
       0: aload_0
       1: getfield      #139                // Field distributionPoint:Lorg/bouncycastle/asn1/x509/DistributionPointName;
       4: areturn

  public org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons();
    Code:
       0: aload_0
       1: getfield      #140                // Field onlySomeReasons:Lorg/bouncycastle/asn1/x509/ReasonFlags;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: aload_0
       1: getfield      #138                // Field seq:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: areturn

  public java.lang.String toString();
    Code:
       0: invokestatic  #169                // Method org/bouncycastle/util/Strings.lineSeparator:()Ljava/lang/String;
       3: astore_1
       4: new           #62                 // class java/lang/StringBuffer
       7: dup
       8: invokespecial #142                // Method java/lang/StringBuffer."<init>":()V
      11: astore_2
      12: aload_2
      13: ldc           #3                  // String IssuingDistributionPoint: [
      15: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: aload_2
      20: aload_1
      21: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: pop
      25: aload_0
      26: getfield      #139                // Field distributionPoint:Lorg/bouncycastle/asn1/x509/DistributionPointName;
      29: ifnull        47
      32: aload_0
      33: aload_2
      34: aload_1
      35: ldc           #5                  // String distributionPoint
      37: aload_0
      38: getfield      #139                // Field distributionPoint:Lorg/bouncycastle/asn1/x509/DistributionPointName;
      41: invokevirtual #159                // Method org/bouncycastle/asn1/x509/DistributionPointName.toString:()Ljava/lang/String;
      44: invokespecial #165                // Method appendObject:(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      47: aload_0
      48: getfield      #137                // Field onlyContainsUserCerts:Z
      51: ifeq          70
      54: aload_0
      55: aload_2
      56: aload_1
      57: ldc           #10                 // String onlyContainsUserCerts
      59: aload_0
      60: aload_0
      61: getfield      #137                // Field onlyContainsUserCerts:Z
      64: invokespecial #161                // Method booleanToString:(Z)Ljava/lang/String;
      67: invokespecial #165                // Method appendObject:(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      70: aload_0
      71: getfield      #136                // Field onlyContainsCACerts:Z
      74: ifeq          93
      77: aload_0
      78: aload_2
      79: aload_1
      80: ldc           #9                  // String onlyContainsCACerts
      82: aload_0
      83: aload_0
      84: getfield      #136                // Field onlyContainsCACerts:Z
      87: invokespecial #161                // Method booleanToString:(Z)Ljava/lang/String;
      90: invokespecial #165                // Method appendObject:(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      93: aload_0
      94: getfield      #140                // Field onlySomeReasons:Lorg/bouncycastle/asn1/x509/ReasonFlags;
      97: ifnull        115
     100: aload_0
     101: aload_2
     102: aload_1
     103: ldc           #11                 // String onlySomeReasons
     105: aload_0
     106: getfield      #140                // Field onlySomeReasons:Lorg/bouncycastle/asn1/x509/ReasonFlags;
     109: invokevirtual #166                // Method org/bouncycastle/asn1/x509/ReasonFlags.toString:()Ljava/lang/String;
     112: invokespecial #165                // Method appendObject:(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     115: aload_0
     116: getfield      #135                // Field onlyContainsAttributeCerts:Z
     119: ifeq          138
     122: aload_0
     123: aload_2
     124: aload_1
     125: ldc           #8                  // String onlyContainsAttributeCerts
     127: aload_0
     128: aload_0
     129: getfield      #135                // Field onlyContainsAttributeCerts:Z
     132: invokespecial #161                // Method booleanToString:(Z)Ljava/lang/String;
     135: invokespecial #165                // Method appendObject:(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     138: aload_0
     139: getfield      #134                // Field indirectCRL:Z
     142: ifeq          161
     145: aload_0
     146: aload_2
     147: aload_1
     148: ldc           #7                  // String indirectCRL
     150: aload_0
     151: aload_0
     152: getfield      #134                // Field indirectCRL:Z
     155: invokespecial #161                // Method booleanToString:(Z)Ljava/lang/String;
     158: invokespecial #165                // Method appendObject:(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     161: aload_2
     162: ldc           #4                  // String ]
     164: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     167: pop
     168: aload_2
     169: aload_1
     170: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     173: pop
     174: aload_2
     175: invokevirtual #143                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     178: areturn

  private void appendObject(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: ldc           #1                  // String
       2: astore        5
       4: aload_1
       5: aload         5
       7: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      10: pop
      11: aload_1
      12: aload_3
      13: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: pop
      17: aload_1
      18: ldc           #2                  // String :
      20: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: pop
      24: aload_1
      25: aload_2
      26: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: pop
      30: aload_1
      31: aload         5
      33: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: pop
      37: aload_1
      38: aload         5
      40: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: pop
      44: aload_1
      45: aload         4
      47: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      50: pop
      51: aload_1
      52: aload_2
      53: invokevirtual #144                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      56: pop
      57: return

  private java.lang.String booleanToString(boolean);
    Code:
       0: iload_1
       1: ifeq          9
       4: ldc           #12                 // String true
       6: goto          11
       9: ldc           #6                  // String false
      11: areturn
}
