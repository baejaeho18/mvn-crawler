public class org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator {
  private org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator gen;

  private org.bouncycastle.crypto.KeyEncoder keyEncoder;

  public org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator(org.bouncycastle.crypto.AsymmetricCipherKeyPairGenerator, org.bouncycastle.crypto.KeyEncoder);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #26                 // Field gen:Lorg/bouncycastle/crypto/AsymmetricCipherKeyPairGenerator;
       9: aload_0
      10: aload_2
      11: putfield      #27                 // Field keyEncoder:Lorg/bouncycastle/crypto/KeyEncoder;
      14: return

  public org.bouncycastle.crypto.EphemeralKeyPair generate();
    Code:
       0: aload_0
       1: getfield      #26                 // Field gen:Lorg/bouncycastle/crypto/AsymmetricCipherKeyPairGenerator;
       4: invokeinterface #30,  1           // InterfaceMethod org/bouncycastle/crypto/AsymmetricCipherKeyPairGenerator.generateKeyPair:()Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;
       9: astore_1
      10: new           #13                 // class org/bouncycastle/crypto/EphemeralKeyPair
      13: dup
      14: aload_1
      15: aload_0
      16: getfield      #27                 // Field keyEncoder:Lorg/bouncycastle/crypto/KeyEncoder;
      19: invokespecial #29                 // Method org/bouncycastle/crypto/EphemeralKeyPair."<init>":(Lorg/bouncycastle/crypto/AsymmetricCipherKeyPair;Lorg/bouncycastle/crypto/KeyEncoder;)V
      22: areturn
}
