public class org.bouncycastle.asn1.DERBitString extends org.bouncycastle.asn1.ASN1BitString {
  public static org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #72                 // class org/bouncycastle/asn1/DERBitString
       8: ifeq          16
      11: aload_0
      12: checkcast     #72                 // class org/bouncycastle/asn1/DERBitString
      15: areturn
      16: aload_0
      17: instanceof    #73                 // class org/bouncycastle/asn1/DLBitString
      20: ifeq          45
      23: new           #72                 // class org/bouncycastle/asn1/DERBitString
      26: dup
      27: aload_0
      28: checkcast     #73                 // class org/bouncycastle/asn1/DLBitString
      31: getfield      #113                // Field org/bouncycastle/asn1/DLBitString.data:[B
      34: aload_0
      35: checkcast     #73                 // class org/bouncycastle/asn1/DLBitString
      38: getfield      #112                // Field org/bouncycastle/asn1/DLBitString.padBits:I
      41: invokespecial #130                // Method "<init>":([BI)V
      44: areturn
      45: new           #62                 // class java/lang/IllegalArgumentException
      48: dup
      49: new           #64                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #117                // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #2                  // String illegal object in getInstance:
      58: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: invokevirtual #116                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: invokevirtual #114                // Method java/lang/Class.getName:()Ljava/lang/String;
      68: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      77: athrow

  public static org.bouncycastle.asn1.DERBitString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: invokevirtual #125                // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
       4: astore_2
       5: iload_1
       6: ifne          16
       9: aload_2
      10: instanceof    #72                 // class org/bouncycastle/asn1/DERBitString
      13: ifeq          21
      16: aload_2
      17: invokestatic  #133                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/DERBitString;
      20: areturn
      21: aload_2
      22: checkcast     #68                 // class org/bouncycastle/asn1/ASN1OctetString
      25: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      28: invokestatic  #132                // Method fromOctetString:([B)Lorg/bouncycastle/asn1/DERBitString;
      31: areturn

  protected org.bouncycastle.asn1.DERBitString(byte, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #127                // Method toByteArray:(B)[B
       5: iload_2
       6: invokespecial #130                // Method "<init>":([BI)V
       9: return

  private static byte[] toByteArray(byte);
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_1
       5: iconst_0
       6: iload_0
       7: bastore
       8: aload_1
       9: areturn

  public org.bouncycastle.asn1.DERBitString(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #121                // Method org/bouncycastle/asn1/ASN1BitString."<init>":([BI)V
       6: return

  public org.bouncycastle.asn1.DERBitString(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #130                // Method "<init>":([BI)V
       6: return

  public org.bouncycastle.asn1.DERBitString(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #129                // Method getBytes:(I)[B
       5: iload_1
       6: invokestatic  #128                // Method getPadBits:(I)I
       9: invokespecial #121                // Method org/bouncycastle/asn1/ASN1BitString."<init>":([BI)V
      12: return

  public org.bouncycastle.asn1.DERBitString(org.bouncycastle.asn1.ASN1Encodable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #135,  1          // InterfaceMethod org/bouncycastle/asn1/ASN1Encodable.toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
       7: ldc           #1                  // String DER
       9: invokevirtual #124                // Method org/bouncycastle/asn1/ASN1Primitive.getEncoded:(Ljava/lang/String;)[B
      12: iconst_0
      13: invokespecial #121                // Method org/bouncycastle/asn1/ASN1BitString."<init>":([BI)V
      16: return

  boolean isConstructed();
    Code:
       0: iconst_0
       1: ireturn

  int encodedLength();
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #111                // Field data:[B
       5: arraylength
       6: iconst_1
       7: iadd
       8: invokestatic  #134                // Method org/bouncycastle/asn1/StreamUtil.calculateBodyLength:(I)I
      11: iadd
      12: aload_0
      13: getfield      #111                // Field data:[B
      16: arraylength
      17: iadd
      18: iconst_1
      19: iadd
      20: ireturn

  void encode(org.bouncycastle.asn1.ASN1OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #111                // Field data:[B
       4: aload_0
       5: getfield      #110                // Field padBits:I
       8: invokestatic  #131                // Method derForm:([BI)[B
      11: astore_2
      12: aload_2
      13: arraylength
      14: iconst_1
      15: iadd
      16: newarray       byte
      18: astore_3
      19: aload_3
      20: iconst_0
      21: aload_0
      22: invokevirtual #126                // Method getPadBits:()I
      25: i2b
      26: bastore
      27: aload_2
      28: iconst_0
      29: aload_3
      30: iconst_1
      31: aload_3
      32: arraylength
      33: iconst_1
      34: isub
      35: invokestatic  #120                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      38: aload_1
      39: iconst_3
      40: aload_3
      41: invokevirtual #123                // Method org/bouncycastle/asn1/ASN1OutputStream.writeEncoded:(I[B)V
      44: return

  static org.bouncycastle.asn1.DERBitString fromOctetString(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: if_icmpge     16
       6: new           #62                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #3                  // String truncated BIT STRING detected
      12: invokespecial #115                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: iconst_0
      18: baload
      19: istore_1
      20: aload_0
      21: arraylength
      22: iconst_1
      23: isub
      24: newarray       byte
      26: astore_2
      27: aload_2
      28: arraylength
      29: ifeq          43
      32: aload_0
      33: iconst_1
      34: aload_2
      35: iconst_0
      36: aload_0
      37: arraylength
      38: iconst_1
      39: isub
      40: invokestatic  #120                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: new           #72                 // class org/bouncycastle/asn1/DERBitString
      46: dup
      47: aload_2
      48: iload_1
      49: invokespecial #130                // Method "<init>":([BI)V
      52: areturn
}
