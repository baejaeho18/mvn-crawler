public abstract class org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher extends org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt {
  protected java.security.spec.AlgorithmParameterSpec paramSpec;

  protected java.io.ByteArrayOutputStream buf;

  protected int maxPlainTextSize;

  protected int cipherTextSize;

  public org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher();
    Code:
       0: aload_0
       1: invokespecial #147                // Method org/bouncycastle/pqc/jcajce/provider/util/CipherSpiExt."<init>":()V
       4: aload_0
       5: new           #67                 // class java/io/ByteArrayOutputStream
       8: dup
       9: invokespecial #123                // Method java/io/ByteArrayOutputStream."<init>":()V
      12: putfield      #120                // Field buf:Ljava/io/ByteArrayOutputStream;
      15: return

  public final int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #119                // Field opMode:I
       4: iconst_1
       5: if_icmpne     15
       8: aload_0
       9: getfield      #118                // Field maxPlainTextSize:I
      12: goto          19
      15: aload_0
      16: getfield      #117                // Field cipherTextSize:I
      19: ireturn

  public final byte[] getIV();
    Code:
       0: aconst_null
       1: areturn

  public final int getOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #120                // Field buf:Ljava/io/ByteArrayOutputStream;
       5: invokevirtual #122                // Method java/io/ByteArrayOutputStream.size:()I
       8: iadd
       9: istore_2
      10: aload_0
      11: invokevirtual #136                // Method getBlockSize:()I
      14: istore_3
      15: iload_2
      16: iload_3
      17: if_icmple     22
      20: iconst_0
      21: ireturn
      22: iload_3
      23: ireturn

  public final java.security.spec.AlgorithmParameterSpec getParameters();
    Code:
       0: aload_0
       1: getfield      #121                // Field paramSpec:Ljava/security/spec/AlgorithmParameterSpec;
       4: areturn

  public final void initEncrypt(java.security.Key) throws java.security.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: new           #73                 // class java/security/SecureRandom
       6: dup
       7: invokespecial #133                // Method java/security/SecureRandom."<init>":()V
      10: invokevirtual #146                // Method initEncrypt:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V
      13: goto          27
      16: astore_2
      17: new           #72                 // class java/security/InvalidParameterException
      20: dup
      21: ldc           #7                  // String This cipher needs algorithm parameters for initialization (cannot be null).
      23: invokespecial #132                // Method java/security/InvalidParameterException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    13    16   Class java/security/InvalidAlgorithmParameterException

  public final void initEncrypt(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #146                // Method initEncrypt:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V
       7: goto          21
      10: astore_3
      11: new           #72                 // class java/security/InvalidParameterException
      14: dup
      15: ldc           #7                  // String This cipher needs algorithm parameters for initialization (cannot be null).
      17: invokespecial #132                // Method java/security/InvalidParameterException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     7    10   Class java/security/InvalidAlgorithmParameterException

  public final void initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #73                 // class java/security/SecureRandom
       6: dup
       7: invokespecial #133                // Method java/security/SecureRandom."<init>":()V
      10: invokevirtual #146                // Method initEncrypt:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V
      13: return

  public final void initEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #119                // Field opMode:I
       5: aload_0
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #145                // Method initCipherEncrypt:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V
      12: return

  public final void initDecrypt(java.security.Key) throws java.security.InvalidKeyException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #144                // Method initDecrypt:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V
       6: goto          20
       9: astore_2
      10: new           #72                 // class java/security/InvalidParameterException
      13: dup
      14: ldc           #7                  // String This cipher needs algorithm parameters for initialization (cannot be null).
      16: invokespecial #132                // Method java/security/InvalidParameterException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return
    Exception table:
       from    to  target type
           0     6     9   Class java/security/InvalidAlgorithmParameterException

  public final void initDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #119                // Field opMode:I
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #143                // Method initCipherDecrypt:(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V
      11: return

  public final byte[] update(byte[], int, int);
    Code:
       0: iload_3
       1: ifeq          14
       4: aload_0
       5: getfield      #120                // Field buf:Ljava/io/ByteArrayOutputStream;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #126                // Method java/io/ByteArrayOutputStream.write:([BII)V
      14: iconst_0
      15: newarray       byte
      17: areturn

  public final int update(byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #142                // Method update:([BII)[B
       7: pop
       8: iconst_0
       9: ireturn

  public final byte[] doFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #138                // Method checkLength:(I)V
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokevirtual #142                // Method update:([BII)[B
      12: pop
      13: aload_0
      14: getfield      #120                // Field buf:Ljava/io/ByteArrayOutputStream;
      17: invokevirtual #125                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      20: astore        4
      22: aload_0
      23: getfield      #120                // Field buf:Ljava/io/ByteArrayOutputStream;
      26: invokevirtual #124                // Method java/io/ByteArrayOutputStream.reset:()V
      29: aload_0
      30: getfield      #119                // Field opMode:I
      33: lookupswitch  { // 2
                     1: 60
                     2: 67
               default: 74
          }
      60: aload_0
      61: aload         4
      63: invokevirtual #140                // Method messageEncrypt:([B)[B
      66: areturn
      67: aload_0
      68: aload         4
      70: invokevirtual #139                // Method messageDecrypt:([B)[B
      73: areturn
      74: aconst_null
      75: areturn

  public final int doFinal(byte[], int, int, byte[], int) throws javax.crypto.ShortBufferException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
    Code:
       0: aload         4
       2: arraylength
       3: aload_0
       4: iload_3
       5: invokevirtual #137                // Method getOutputSize:(I)I
       8: if_icmpge     21
      11: new           #76                 // class javax/crypto/ShortBufferException
      14: dup
      15: ldc           #5                  // String Output buffer too short.
      17: invokespecial #135                // Method javax/crypto/ShortBufferException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: iload_2
      24: iload_3
      25: invokevirtual #141                // Method doFinal:([BII)[B
      28: astore        6
      30: aload         6
      32: iconst_0
      33: aload         4
      35: iload         5
      37: aload         6
      39: arraylength
      40: invokestatic  #131                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload         6
      45: arraylength
      46: ireturn

  protected final void setMode(java.lang.String);
    Code:
       0: return

  protected final void setPadding(java.lang.String);
    Code:
       0: return

  protected void checkLength(int) throws javax.crypto.IllegalBlockSizeException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #120                // Field buf:Ljava/io/ByteArrayOutputStream;
       5: invokevirtual #122                // Method java/io/ByteArrayOutputStream.size:()I
       8: iadd
       9: istore_2
      10: aload_0
      11: getfield      #119                // Field opMode:I
      14: iconst_1
      15: if_icmpne     75
      18: iload_2
      19: aload_0
      20: getfield      #118                // Field maxPlainTextSize:I
      23: if_icmple     135
      26: new           #75                 // class javax/crypto/IllegalBlockSizeException
      29: dup
      30: new           #68                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #127                // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #6                  // String The length of the plaintext (
      39: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #1                  // String  bytes) is not supported by
      48: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #8                  // String the cipher (max.
      53: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #118                // Field maxPlainTextSize:I
      60: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: ldc           #2                  // String  bytes).
      65: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #134                // Method javax/crypto/IllegalBlockSizeException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #119                // Field opMode:I
      79: iconst_2
      80: if_icmpne     135
      83: iload_2
      84: aload_0
      85: getfield      #117                // Field cipherTextSize:I
      88: if_icmpeq     135
      91: new           #75                 // class javax/crypto/IllegalBlockSizeException
      94: dup
      95: new           #68                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #127                // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #4                  // String Illegal ciphertext length (expected
     104: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: getfield      #117                // Field cipherTextSize:I
     111: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     114: ldc           #3                  // String  bytes, was
     116: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: iload_2
     120: invokevirtual #129                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     123: ldc           #2                  // String  bytes).
     125: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #134                // Method javax/crypto/IllegalBlockSizeException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: return

  protected abstract void initCipherEncrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;

  protected abstract void initCipherDecrypt(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;

  protected abstract byte[] messageEncrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;

  protected abstract byte[] messageDecrypt(byte[]) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException;
}
