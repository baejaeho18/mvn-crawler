public abstract class org.bouncycastle.asn1.ASN1BitString extends org.bouncycastle.asn1.ASN1Primitive implements org.bouncycastle.asn1.ASN1String {
  private static final char[] table;

  protected final byte[] data;

  protected final int padBits;

  protected static int getPadBits(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_3
       3: istore_2
       4: iload_2
       5: iflt          54
       8: iload_2
       9: ifeq          35
      12: iload_0
      13: iload_2
      14: bipush        8
      16: imul
      17: ishr
      18: ifeq          48
      21: iload_0
      22: iload_2
      23: bipush        8
      25: imul
      26: ishr
      27: sipush        255
      30: iand
      31: istore_1
      32: goto          54
      35: iload_0
      36: ifeq          48
      39: iload_0
      40: sipush        255
      43: iand
      44: istore_1
      45: goto          54
      48: iinc          2, -1
      51: goto          4
      54: iload_1
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: iconst_1
      61: istore_2
      62: iload_1
      63: iconst_1
      64: ishl
      65: dup
      66: istore_1
      67: sipush        255
      70: iand
      71: ifeq          80
      74: iinc          2, 1
      77: goto          62
      80: bipush        8
      82: iload_2
      83: isub
      84: ireturn

  protected static byte[] getBytes(int);
    Code:
       0: iload_0
       1: ifne          8
       4: iconst_0
       5: newarray       byte
       7: areturn
       8: iconst_4
       9: istore_1
      10: iconst_3
      11: istore_2
      12: iload_2
      13: iconst_1
      14: if_icmplt     42
      17: iload_0
      18: sipush        255
      21: iload_2
      22: bipush        8
      24: imul
      25: ishl
      26: iand
      27: ifeq          33
      30: goto          42
      33: iinc          1, -1
      36: iinc          2, -1
      39: goto          12
      42: iload_1
      43: newarray       byte
      45: astore_2
      46: iconst_0
      47: istore_3
      48: iload_3
      49: iload_1
      50: if_icmpge     73
      53: aload_2
      54: iload_3
      55: iload_0
      56: iload_3
      57: bipush        8
      59: imul
      60: ishr
      61: sipush        255
      64: iand
      65: i2b
      66: bastore
      67: iinc          3, 1
      70: goto          48
      73: aload_2
      74: areturn

  public org.bouncycastle.asn1.ASN1BitString(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #153                // Method org/bouncycastle/asn1/ASN1Primitive."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #82                 // class java/lang/NullPointerException
      11: dup
      12: ldc           #5                  // String data cannot be null
      14: invokespecial #139                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: arraylength
      20: ifne          37
      23: iload_2
      24: ifeq          37
      27: new           #80                 // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #8                  // String zero length data with non-zero pad bits
      33: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: bipush        7
      40: if_icmpgt     47
      43: iload_2
      44: ifge          57
      47: new           #80                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #6                  // String pad bits cannot be greater than 7 or less than 0
      53: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: aload_1
      59: invokestatic  #157                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      62: putfield      #130                // Field data:[B
      65: aload_0
      66: iload_2
      67: putfield      #129                // Field padBits:I
      70: return

  public java.lang.String getString();
    Code:
       0: new           #83                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #1                  // String #
       6: invokespecial #141                // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: new           #76                 // class java/io/ByteArrayOutputStream
      13: dup
      14: invokespecial #132                // Method java/io/ByteArrayOutputStream."<init>":()V
      17: astore_2
      18: new           #86                 // class org/bouncycastle/asn1/ASN1OutputStream
      21: dup
      22: aload_2
      23: invokespecial #150                // Method org/bouncycastle/asn1/ASN1OutputStream."<init>":(Ljava/io/OutputStream;)V
      26: astore_3
      27: aload_3
      28: aload_0
      29: invokevirtual #151                // Method org/bouncycastle/asn1/ASN1OutputStream.writeObject:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      32: goto          70
      35: astore        4
      37: new           #87                 // class org/bouncycastle/asn1/ASN1ParsingException
      40: dup
      41: new           #84                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #143                // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #3                  // String Internal error encoding BitString:
      50: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload         4
      55: invokevirtual #135                // Method java/io/IOException.getMessage:()Ljava/lang/String;
      58: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #144                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: aload         4
      66: invokespecial #152                // Method org/bouncycastle/asn1/ASN1ParsingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      69: athrow
      70: aload_2
      71: invokevirtual #133                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      74: astore        4
      76: iconst_0
      77: istore        5
      79: iload         5
      81: aload         4
      83: arraylength
      84: if_icmpeq     129
      87: aload_1
      88: getstatic     #131                // Field table:[C
      91: aload         4
      93: iload         5
      95: baload
      96: iconst_4
      97: iushr
      98: bipush        15
     100: iand
     101: caload
     102: invokevirtual #142                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     105: pop
     106: aload_1
     107: getstatic     #131                // Field table:[C
     110: aload         4
     112: iload         5
     114: baload
     115: bipush        15
     117: iand
     118: caload
     119: invokevirtual #142                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     122: pop
     123: iinc          5, 1
     126: goto          79
     129: aload_1
     130: invokevirtual #140                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     133: areturn
    Exception table:
       from    to  target type
          27    32    35   Class java/io/IOException

  public int intValue();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #130                // Field data:[B
       6: astore_2
       7: aload_0
       8: getfield      #129                // Field padBits:I
      11: ifle          35
      14: aload_0
      15: getfield      #130                // Field data:[B
      18: arraylength
      19: iconst_4
      20: if_icmpgt     35
      23: aload_0
      24: getfield      #130                // Field data:[B
      27: aload_0
      28: getfield      #129                // Field padBits:I
      31: invokestatic  #147                // Method derForm:([BI)[B
      34: astore_2
      35: iconst_0
      36: istore_3
      37: iload_3
      38: aload_2
      39: arraylength
      40: if_icmpeq     69
      43: iload_3
      44: iconst_4
      45: if_icmpeq     69
      48: iload_1
      49: aload_2
      50: iload_3
      51: baload
      52: sipush        255
      55: iand
      56: bipush        8
      58: iload_3
      59: imul
      60: ishl
      61: ior
      62: istore_1
      63: iinc          3, 1
      66: goto          37
      69: iload_1
      70: ireturn

  public byte[] getOctets();
    Code:
       0: aload_0
       1: getfield      #129                // Field padBits:I
       4: ifeq          17
       7: new           #81                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #4                  // String attempt to get non-octet aligned data from BIT STRING
      13: invokespecial #138                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #130                // Field data:[B
      21: invokestatic  #157                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      24: areturn

  public byte[] getBytes();
    Code:
       0: aload_0
       1: getfield      #130                // Field data:[B
       4: aload_0
       5: getfield      #129                // Field padBits:I
       8: invokestatic  #147                // Method derForm:([BI)[B
      11: areturn

  public int getPadBits();
    Code:
       0: aload_0
       1: getfield      #129                // Field padBits:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method getString:()Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #129                // Field padBits:I
       4: aload_0
       5: invokevirtual #146                // Method getBytes:()[B
       8: invokestatic  #156                // Method org/bouncycastle/util/Arrays.hashCode:([B)I
      11: ixor
      12: ireturn

  protected boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive);
    Code:
       0: aload_1
       1: instanceof    #85                 // class org/bouncycastle/asn1/ASN1BitString
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #85                 // class org/bouncycastle/asn1/ASN1BitString
      13: astore_2
      14: aload_0
      15: getfield      #129                // Field padBits:I
      18: aload_2
      19: getfield      #129                // Field padBits:I
      22: if_icmpne     43
      25: aload_0
      26: invokevirtual #146                // Method getBytes:()[B
      29: aload_2
      30: invokevirtual #146                // Method getBytes:()[B
      33: invokestatic  #158                // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  protected static byte[] derForm(byte[], int);
    Code:
       0: aload_0
       1: invokestatic  #157                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       4: astore_2
       5: iload_1
       6: ifle          24
       9: aload_2
      10: aload_0
      11: arraylength
      12: iconst_1
      13: isub
      14: dup2
      15: baload
      16: sipush        255
      19: iload_1
      20: ishl
      21: iand
      22: i2b
      23: bastore
      24: aload_2
      25: areturn

  static org.bouncycastle.asn1.ASN1BitString fromInputStream(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     15
       5: new           #80                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #7                  // String truncated BIT STRING detected
      11: invokespecial #137                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_1
      16: invokevirtual #136                // Method java/io/InputStream.read:()I
      19: istore_2
      20: iload_0
      21: iconst_1
      22: isub
      23: newarray       byte
      25: astore_3
      26: aload_3
      27: arraylength
      28: ifeq          93
      31: aload_1
      32: aload_3
      33: invokestatic  #159                // Method org/bouncycastle/util/io/Streams.readFully:(Ljava/io/InputStream;[B)I
      36: aload_3
      37: arraylength
      38: if_icmpeq     51
      41: new           #77                 // class java/io/EOFException
      44: dup
      45: ldc           #2                  // String EOF encountered in middle of BIT STRING
      47: invokespecial #134                // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_2
      52: ifle          93
      55: iload_2
      56: bipush        8
      58: if_icmpge     93
      61: aload_3
      62: aload_3
      63: arraylength
      64: iconst_1
      65: isub
      66: baload
      67: aload_3
      68: aload_3
      69: arraylength
      70: iconst_1
      71: isub
      72: baload
      73: sipush        255
      76: iload_2
      77: ishl
      78: iand
      79: i2b
      80: if_icmpeq     93
      83: new           #91                 // class org/bouncycastle/asn1/DLBitString
      86: dup
      87: aload_3
      88: iload_2
      89: invokespecial #155                // Method org/bouncycastle/asn1/DLBitString."<init>":([BI)V
      92: areturn
      93: new           #90                 // class org/bouncycastle/asn1/DERBitString
      96: dup
      97: aload_3
      98: iload_2
      99: invokespecial #154                // Method org/bouncycastle/asn1/DERBitString."<init>":([BI)V
     102: areturn

  public org.bouncycastle.asn1.ASN1Primitive getLoadedObject();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method toASN1Primitive:()Lorg/bouncycastle/asn1/ASN1Primitive;
       4: areturn

  org.bouncycastle.asn1.ASN1Primitive toDERObject();
    Code:
       0: new           #90                 // class org/bouncycastle/asn1/DERBitString
       3: dup
       4: aload_0
       5: getfield      #130                // Field data:[B
       8: aload_0
       9: getfield      #129                // Field padBits:I
      12: invokespecial #154                // Method org/bouncycastle/asn1/DERBitString."<init>":([BI)V
      15: areturn

  org.bouncycastle.asn1.ASN1Primitive toDLObject();
    Code:
       0: new           #91                 // class org/bouncycastle/asn1/DLBitString
       3: dup
       4: aload_0
       5: getfield      #130                // Field data:[B
       8: aload_0
       9: getfield      #129                // Field padBits:I
      12: invokespecial #155                // Method org/bouncycastle/asn1/DLBitString."<init>":([BI)V
      15: areturn

  abstract void encode(org.bouncycastle.asn1.ASN1OutputStream) throws java.io.IOException;

  static {};
    Code:
       0: bipush        16
       2: newarray       char
       4: dup
       5: iconst_0
       6: bipush        48
       8: castore
       9: dup
      10: iconst_1
      11: bipush        49
      13: castore
      14: dup
      15: iconst_2
      16: bipush        50
      18: castore
      19: dup
      20: iconst_3
      21: bipush        51
      23: castore
      24: dup
      25: iconst_4
      26: bipush        52
      28: castore
      29: dup
      30: iconst_5
      31: bipush        53
      33: castore
      34: dup
      35: bipush        6
      37: bipush        54
      39: castore
      40: dup
      41: bipush        7
      43: bipush        55
      45: castore
      46: dup
      47: bipush        8
      49: bipush        56
      51: castore
      52: dup
      53: bipush        9
      55: bipush        57
      57: castore
      58: dup
      59: bipush        10
      61: bipush        65
      63: castore
      64: dup
      65: bipush        11
      67: bipush        66
      69: castore
      70: dup
      71: bipush        12
      73: bipush        67
      75: castore
      76: dup
      77: bipush        13
      79: bipush        68
      81: castore
      82: dup
      83: bipush        14
      85: bipush        69
      87: castore
      88: dup
      89: bipush        15
      91: bipush        70
      93: castore
      94: putstatic     #131                // Field table:[C
      97: return
}
