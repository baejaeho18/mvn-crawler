public class org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup {
  private final java.math.BigInteger p;

  private final java.math.BigInteger q;

  private final java.math.BigInteger g;

  public org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #86                 // Method "<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Z)V
       8: return

  org.bouncycastle.crypto.agreement.jpake.JPAKEPrimeOrderGroup(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, boolean);
    Code:
       0: aload_0
       1: invokespecial #78                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String p
       7: invokestatic  #87                 // Method org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String q
      13: invokestatic  #87                 // Method org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #1                  // String g
      19: invokestatic  #87                 // Method org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.validateNotNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: iload         4
      24: ifne          159
      27: aload_1
      28: getstatic     #75                 // Field org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.ONE:Ljava/math/BigInteger;
      31: invokevirtual #84                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      34: aload_2
      35: invokevirtual #83                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      38: getstatic     #76                 // Field org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.ZERO:Ljava/math/BigInteger;
      41: invokevirtual #80                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      44: ifne          57
      47: new           #40                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #6                  // String p-1 must be evenly divisible by q
      53: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_3
      58: ldc2_w        #38                 // long 2l
      61: invokestatic  #81                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      64: invokevirtual #82                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      67: iconst_m1
      68: if_icmpeq     86
      71: aload_3
      72: aload_1
      73: getstatic     #75                 // Field org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.ONE:Ljava/math/BigInteger;
      76: invokevirtual #84                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      79: invokevirtual #82                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      82: iconst_1
      83: if_icmpne     96
      86: new           #40                 // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #2                  // String g must be in [2, p-1]
      92: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_3
      97: aload_2
      98: aload_1
      99: invokevirtual #85                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
     102: getstatic     #75                 // Field org/bouncycastle/crypto/agreement/jpake/JPAKEUtil.ONE:Ljava/math/BigInteger;
     105: invokevirtual #80                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     108: ifne          121
     111: new           #40                 // class java/lang/IllegalArgumentException
     114: dup
     115: ldc           #3                  // String g^q mod p must equal 1
     117: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_1
     122: bipush        20
     124: invokevirtual #79                 // Method java/math/BigInteger.isProbablePrime:(I)Z
     127: ifne          140
     130: new           #40                 // class java/lang/IllegalArgumentException
     133: dup
     134: ldc           #5                  // String p must be prime
     136: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: aload_2
     141: bipush        20
     143: invokevirtual #79                 // Method java/math/BigInteger.isProbablePrime:(I)Z
     146: ifne          159
     149: new           #40                 // class java/lang/IllegalArgumentException
     152: dup
     153: ldc           #8                  // String q must be prime
     155: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: aload_0
     160: aload_1
     161: putfield      #73                 // Field p:Ljava/math/BigInteger;
     164: aload_0
     165: aload_2
     166: putfield      #74                 // Field q:Ljava/math/BigInteger;
     169: aload_0
     170: aload_3
     171: putfield      #72                 // Field g:Ljava/math/BigInteger;
     174: return

  public java.math.BigInteger getP();
    Code:
       0: aload_0
       1: getfield      #73                 // Field p:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getQ();
    Code:
       0: aload_0
       1: getfield      #74                 // Field q:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getG();
    Code:
       0: aload_0
       1: getfield      #72                 // Field g:Ljava/math/BigInteger;
       4: areturn
}
