public class org.bouncycastle.crypto.signers.HMacDSAKCalculator implements org.bouncycastle.crypto.signers.DSAKCalculator {
  private static final java.math.BigInteger ZERO;

  private final org.bouncycastle.crypto.macs.HMac hMac;

  private final byte[] K;

  private final byte[] V;

  private java.math.BigInteger n;

  public org.bouncycastle.crypto.signers.HMacDSAKCalculator(org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokespecial #106                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #53                 // class org/bouncycastle/crypto/macs/HMac
       8: dup
       9: aload_1
      10: invokespecial #119                // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      13: putfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      16: aload_0
      17: aload_0
      18: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      21: invokevirtual #114                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      24: newarray       byte
      26: putfield      #100                // Field V:[B
      29: aload_0
      30: aload_0
      31: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      34: invokevirtual #114                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      37: newarray       byte
      39: putfield      #99                 // Field K:[B
      42: return

  public boolean isDeterministic();
    Code:
       0: iconst_1
       1: ireturn

  public void init(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: new           #48                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #1                  // String Operation not supported
       6: invokespecial #104                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void init(java.math.BigInteger, java.math.BigInteger, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #102                // Field n:Ljava/math/BigInteger;
       5: aload_0
       6: getfield      #100                // Field V:[B
       9: iconst_1
      10: invokestatic  #122                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      13: aload_0
      14: getfield      #99                 // Field K:[B
      17: iconst_0
      18: invokestatic  #122                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      21: aload_1
      22: invokevirtual #108                // Method java/math/BigInteger.bitLength:()I
      25: bipush        7
      27: iadd
      28: bipush        8
      30: idiv
      31: newarray       byte
      33: astore        4
      35: aload_2
      36: invokestatic  #123                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
      39: astore        5
      41: aload         5
      43: iconst_0
      44: aload         4
      46: aload         4
      48: arraylength
      49: aload         5
      51: arraylength
      52: isub
      53: aload         5
      55: arraylength
      56: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      59: aload_1
      60: invokevirtual #108                // Method java/math/BigInteger.bitLength:()I
      63: bipush        7
      65: iadd
      66: bipush        8
      68: idiv
      69: newarray       byte
      71: astore        6
      73: aload_0
      74: aload_3
      75: invokespecial #121                // Method bitsToInt:([B)Ljava/math/BigInteger;
      78: astore        7
      80: aload         7
      82: aload_1
      83: invokevirtual #112                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      86: iflt          97
      89: aload         7
      91: aload_1
      92: invokevirtual #113                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      95: astore        7
      97: aload         7
      99: invokestatic  #123                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
     102: astore        8
     104: aload         8
     106: iconst_0
     107: aload         6
     109: aload         6
     111: arraylength
     112: aload         8
     114: arraylength
     115: isub
     116: aload         8
     118: arraylength
     119: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     122: aload_0
     123: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     126: new           #54                 // class org/bouncycastle/crypto/params/KeyParameter
     129: dup
     130: aload_0
     131: getfield      #99                 // Field K:[B
     134: invokespecial #120                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     137: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     140: aload_0
     141: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     144: aload_0
     145: getfield      #100                // Field V:[B
     148: iconst_0
     149: aload_0
     150: getfield      #100                // Field V:[B
     153: arraylength
     154: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     157: aload_0
     158: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     161: iconst_0
     162: invokevirtual #115                // Method org/bouncycastle/crypto/macs/HMac.update:(B)V
     165: aload_0
     166: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     169: aload         4
     171: iconst_0
     172: aload         4
     174: arraylength
     175: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     178: aload_0
     179: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     182: aload         6
     184: iconst_0
     185: aload         6
     187: arraylength
     188: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     191: aload_0
     192: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     195: aload_0
     196: getfield      #99                 // Field K:[B
     199: iconst_0
     200: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     203: pop
     204: aload_0
     205: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     208: new           #54                 // class org/bouncycastle/crypto/params/KeyParameter
     211: dup
     212: aload_0
     213: getfield      #99                 // Field K:[B
     216: invokespecial #120                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     219: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     222: aload_0
     223: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     226: aload_0
     227: getfield      #100                // Field V:[B
     230: iconst_0
     231: aload_0
     232: getfield      #100                // Field V:[B
     235: arraylength
     236: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     239: aload_0
     240: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     243: aload_0
     244: getfield      #100                // Field V:[B
     247: iconst_0
     248: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     251: pop
     252: aload_0
     253: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     256: aload_0
     257: getfield      #100                // Field V:[B
     260: iconst_0
     261: aload_0
     262: getfield      #100                // Field V:[B
     265: arraylength
     266: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     269: aload_0
     270: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     273: iconst_1
     274: invokevirtual #115                // Method org/bouncycastle/crypto/macs/HMac.update:(B)V
     277: aload_0
     278: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     281: aload         4
     283: iconst_0
     284: aload         4
     286: arraylength
     287: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     290: aload_0
     291: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     294: aload         6
     296: iconst_0
     297: aload         6
     299: arraylength
     300: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     303: aload_0
     304: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     307: aload_0
     308: getfield      #99                 // Field K:[B
     311: iconst_0
     312: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     315: pop
     316: aload_0
     317: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     320: new           #54                 // class org/bouncycastle/crypto/params/KeyParameter
     323: dup
     324: aload_0
     325: getfield      #99                 // Field K:[B
     328: invokespecial #120                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     331: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     334: aload_0
     335: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     338: aload_0
     339: getfield      #100                // Field V:[B
     342: iconst_0
     343: aload_0
     344: getfield      #100                // Field V:[B
     347: arraylength
     348: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     351: aload_0
     352: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     355: aload_0
     356: getfield      #100                // Field V:[B
     359: iconst_0
     360: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     363: pop
     364: return

  public java.math.BigInteger nextK();
    Code:
       0: aload_0
       1: getfield      #102                // Field n:Ljava/math/BigInteger;
       4: invokevirtual #108                // Method java/math/BigInteger.bitLength:()I
       7: bipush        7
       9: iadd
      10: bipush        8
      12: idiv
      13: newarray       byte
      15: astore_1
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_1
      20: arraylength
      21: if_icmpge     85
      24: aload_0
      25: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      28: aload_0
      29: getfield      #100                // Field V:[B
      32: iconst_0
      33: aload_0
      34: getfield      #100                // Field V:[B
      37: arraylength
      38: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
      41: aload_0
      42: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
      45: aload_0
      46: getfield      #100                // Field V:[B
      49: iconst_0
      50: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
      53: pop
      54: aload_1
      55: arraylength
      56: iload_2
      57: isub
      58: aload_0
      59: getfield      #100                // Field V:[B
      62: arraylength
      63: invokestatic  #105                // Method java/lang/Math.min:(II)I
      66: istore_3
      67: aload_0
      68: getfield      #100                // Field V:[B
      71: iconst_0
      72: aload_1
      73: iload_2
      74: iload_3
      75: invokestatic  #107                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: iload_2
      79: iload_3
      80: iadd
      81: istore_2
      82: goto          18
      85: aload_0
      86: aload_1
      87: invokespecial #121                // Method bitsToInt:([B)Ljava/math/BigInteger;
      90: astore_3
      91: aload_3
      92: getstatic     #101                // Field ZERO:Ljava/math/BigInteger;
      95: invokevirtual #112                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      98: ifle          114
     101: aload_3
     102: aload_0
     103: getfield      #102                // Field n:Ljava/math/BigInteger;
     106: invokevirtual #112                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     109: ifge          114
     112: aload_3
     113: areturn
     114: aload_0
     115: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     118: aload_0
     119: getfield      #100                // Field V:[B
     122: iconst_0
     123: aload_0
     124: getfield      #100                // Field V:[B
     127: arraylength
     128: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     131: aload_0
     132: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     135: iconst_0
     136: invokevirtual #115                // Method org/bouncycastle/crypto/macs/HMac.update:(B)V
     139: aload_0
     140: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     143: aload_0
     144: getfield      #99                 // Field K:[B
     147: iconst_0
     148: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     151: pop
     152: aload_0
     153: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     156: new           #54                 // class org/bouncycastle/crypto/params/KeyParameter
     159: dup
     160: aload_0
     161: getfield      #99                 // Field K:[B
     164: invokespecial #120                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
     167: invokevirtual #118                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     170: aload_0
     171: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     174: aload_0
     175: getfield      #100                // Field V:[B
     178: iconst_0
     179: aload_0
     180: getfield      #100                // Field V:[B
     183: arraylength
     184: invokevirtual #117                // Method org/bouncycastle/crypto/macs/HMac.update:([BII)V
     187: aload_0
     188: getfield      #103                // Field hMac:Lorg/bouncycastle/crypto/macs/HMac;
     191: aload_0
     192: getfield      #100                // Field V:[B
     195: iconst_0
     196: invokevirtual #116                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
     199: pop
     200: goto          16

  private java.math.BigInteger bitsToInt(byte[]);
    Code:
       0: new           #52                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: aload_1
       6: invokespecial #109                // Method java/math/BigInteger."<init>":(I[B)V
       9: astore_2
      10: aload_1
      11: arraylength
      12: bipush        8
      14: imul
      15: aload_0
      16: getfield      #102                // Field n:Ljava/math/BigInteger;
      19: invokevirtual #108                // Method java/math/BigInteger.bitLength:()I
      22: if_icmple     43
      25: aload_2
      26: aload_1
      27: arraylength
      28: bipush        8
      30: imul
      31: aload_0
      32: getfield      #102                // Field n:Ljava/math/BigInteger;
      35: invokevirtual #108                // Method java/math/BigInteger.bitLength:()I
      38: isub
      39: invokevirtual #110                // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      42: astore_2
      43: aload_2
      44: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #111                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #101                // Field ZERO:Ljava/math/BigInteger;
       7: return
}
