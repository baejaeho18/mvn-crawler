public class org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM {
  private org.bouncycastle.pqc.math.linearalgebra.GF2mField field;

  private int degree;

  private int[] coefficients;

  public static final char RANDOM_IRREDUCIBLE_POLYNOMIAL;

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField);
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: aload_0
      10: iconst_m1
      11: putfield      #180                // Field degree:I
      14: aload_0
      15: iconst_1
      16: newarray       int
      18: putfield      #181                // Field coefficients:[I
      21: return

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int, char, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: iload_3
      10: lookupswitch  { // 1
                    73: 28
               default: 42
          }
      28: aload_0
      29: aload_0
      30: iload_2
      31: aload         4
      33: invokespecial #222                // Method createRandomIrreduciblePolynomial:(ILjava/security/SecureRandom;)[I
      36: putfield      #181                // Field coefficients:[I
      39: goto          74
      42: new           #104                // class java/lang/IllegalArgumentException
      45: dup
      46: new           #106                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #2                  // String  Error: type
      55: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_3
      59: invokevirtual #188                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: ldc           #4                  // String  is not defined for GF2smallmPolynomial
      64: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: invokespecial #207                // Method computeDegree:()V
      78: return

  private int[] createRandomIrreduciblePolynomial(int, java.security.SecureRandom);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: newarray       int
       5: astore_3
       6: aload_3
       7: iload_1
       8: iconst_1
       9: iastore
      10: aload_3
      11: iconst_0
      12: aload_0
      13: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      16: aload_2
      17: invokevirtual #203                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getRandomNonZeroElement:(Ljava/security/SecureRandom;)I
      20: iastore
      21: iconst_1
      22: istore        4
      24: iload         4
      26: iload_1
      27: if_icmpge     48
      30: aload_3
      31: iload         4
      33: aload_0
      34: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      37: aload_2
      38: invokevirtual #202                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getRandomElement:(Ljava/security/SecureRandom;)I
      41: iastore
      42: iinc          4, 1
      45: goto          24
      48: aload_0
      49: aload_3
      50: invokespecial #210                // Method isIrreducible:([I)Z
      53: ifne          97
      56: aload_2
      57: iload_1
      58: invokestatic  #224                // Method org/bouncycastle/pqc/math/linearalgebra/RandUtils.nextInt:(Ljava/security/SecureRandom;I)I
      61: istore        4
      63: iload         4
      65: ifne          82
      68: aload_3
      69: iconst_0
      70: aload_0
      71: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      74: aload_2
      75: invokevirtual #203                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getRandomNonZeroElement:(Ljava/security/SecureRandom;)I
      78: iastore
      79: goto          94
      82: aload_3
      83: iload         4
      85: aload_0
      86: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      89: aload_2
      90: invokevirtual #202                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getRandomElement:(Ljava/security/SecureRandom;)I
      93: iastore
      94: goto          48
      97: aload_3
      98: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int);
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: aload_0
      10: iload_2
      11: putfield      #180                // Field degree:I
      14: aload_0
      15: iload_2
      16: iconst_1
      17: iadd
      18: newarray       int
      20: putfield      #181                // Field coefficients:[I
      23: aload_0
      24: getfield      #181                // Field coefficients:[I
      27: iload_2
      28: iconst_1
      29: iastore
      30: return

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int[]);
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: aload_0
      10: aload_2
      11: invokestatic  #211                // Method normalForm:([I)[I
      14: putfield      #181                // Field coefficients:[I
      17: aload_0
      18: invokespecial #207                // Method computeDegree:()V
      21: return

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[]);
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: bipush        8
      11: istore_3
      12: iconst_1
      13: istore        4
      15: aload_1
      16: invokevirtual #192                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
      19: iload_3
      20: if_icmple     32
      23: iinc          4, 1
      26: iinc          3, 8
      29: goto          15
      32: aload_2
      33: arraylength
      34: iload         4
      36: irem
      37: ifeq          50
      40: new           #104                // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #1                  // String  Error: byte array is not encoded polynomial over given finite field GF2m
      46: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_2
      52: arraylength
      53: iload         4
      55: idiv
      56: newarray       int
      58: putfield      #181                // Field coefficients:[I
      61: iconst_0
      62: istore        4
      64: iconst_0
      65: istore        5
      67: iload         5
      69: aload_0
      70: getfield      #181                // Field coefficients:[I
      73: arraylength
      74: if_icmpge     149
      77: iconst_0
      78: istore        6
      80: iload         6
      82: iload_3
      83: if_icmpge     116
      86: aload_0
      87: getfield      #181                // Field coefficients:[I
      90: iload         5
      92: dup2
      93: iaload
      94: aload_2
      95: iload         4
      97: iinc          4, 1
     100: baload
     101: sipush        255
     104: iand
     105: iload         6
     107: ishl
     108: ixor
     109: iastore
     110: iinc          6, 8
     113: goto          80
     116: aload_0
     117: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     120: aload_0
     121: getfield      #181                // Field coefficients:[I
     124: iload         5
     126: iaload
     127: invokevirtual #196                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.isElementOfThisField:(I)Z
     130: ifne          143
     133: new           #104                // class java/lang/IllegalArgumentException
     136: dup
     137: ldc           #1                  // String  Error: byte array is not encoded polynomial over given finite field GF2m
     139: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: iinc          5, 1
     146: goto          67
     149: aload_0
     150: getfield      #181                // Field coefficients:[I
     153: arraylength
     154: iconst_1
     155: if_icmpeq     183
     158: aload_0
     159: getfield      #181                // Field coefficients:[I
     162: aload_0
     163: getfield      #181                // Field coefficients:[I
     166: arraylength
     167: iconst_1
     168: isub
     169: iaload
     170: ifne          183
     173: new           #104                // class java/lang/IllegalArgumentException
     176: dup
     177: ldc           #1                  // String  Error: byte array is not encoded polynomial over given finite field GF2m
     179: invokespecial #184                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     182: athrow
     183: aload_0
     184: invokespecial #207                // Method computeDegree:()V
     187: return

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: invokespecial #185                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: putfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      12: aload_0
      13: aload_1
      14: getfield      #180                // Field degree:I
      17: putfield      #180                // Field degree:I
      20: aload_0
      21: aload_1
      22: getfield      #181                // Field coefficients:[I
      25: invokestatic  #206                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      28: putfield      #181                // Field coefficients:[I
      31: return

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM(org.bouncycastle.pqc.math.linearalgebra.GF2mVector);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #205                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mVector.getField:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       5: aload_1
       6: invokevirtual #204                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mVector.getIntArrayForm:()[I
       9: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      12: return

  public int getDegree();
    Code:
       0: aload_0
       1: getfield      #181                // Field coefficients:[I
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_1
       8: aload_0
       9: getfield      #181                // Field coefficients:[I
      12: iload_1
      13: iaload
      14: ifne          19
      17: iconst_m1
      18: ireturn
      19: iload_1
      20: ireturn

  public int getHeadCoefficient();
    Code:
       0: aload_0
       1: getfield      #180                // Field degree:I
       4: iconst_m1
       5: if_icmpne     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #181                // Field coefficients:[I
      14: aload_0
      15: getfield      #180                // Field degree:I
      18: iaload
      19: ireturn

  private static int headCoefficient(int[]);
    Code:
       0: aload_0
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: iload_1
      14: iaload
      15: ireturn

  public int getCoefficient(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #180                // Field degree:I
       9: if_icmple     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: getfield      #181                // Field coefficients:[I
      18: iload_1
      19: iaload
      20: ireturn

  public byte[] getEncoded();
    Code:
       0: bipush        8
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: invokevirtual #192                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
      12: iload_1
      13: if_icmple     25
      16: iinc          2, 1
      19: iinc          1, 8
      22: goto          5
      25: aload_0
      26: getfield      #181                // Field coefficients:[I
      29: arraylength
      30: iload_2
      31: imul
      32: newarray       byte
      34: astore_3
      35: iconst_0
      36: istore_2
      37: iconst_0
      38: istore        4
      40: iload         4
      42: aload_0
      43: getfield      #181                // Field coefficients:[I
      46: arraylength
      47: if_icmpge     88
      50: iconst_0
      51: istore        5
      53: iload         5
      55: iload_1
      56: if_icmpge     82
      59: aload_3
      60: iload_2
      61: iinc          2, 1
      64: aload_0
      65: getfield      #181                // Field coefficients:[I
      68: iload         4
      70: iaload
      71: iload         5
      73: iushr
      74: i2b
      75: bastore
      76: iinc          5, 8
      79: goto          53
      82: iinc          4, 1
      85: goto          40
      88: aload_3
      89: areturn

  public int evaluateAt(int);
    Code:
       0: aload_0
       1: getfield      #181                // Field coefficients:[I
       4: aload_0
       5: getfield      #180                // Field degree:I
       8: iaload
       9: istore_2
      10: aload_0
      11: getfield      #180                // Field degree:I
      14: iconst_1
      15: isub
      16: istore_3
      17: iload_3
      18: iflt          44
      21: aload_0
      22: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      25: iload_2
      26: iload_1
      27: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      30: aload_0
      31: getfield      #181                // Field coefficients:[I
      34: iload_3
      35: iaload
      36: ixor
      37: istore_2
      38: iinc          3, -1
      41: goto          17
      44: iload_2
      45: ireturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM add(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: invokespecial #215                // Method add:([I[I)[I
      12: astore_2
      13: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      16: dup
      17: aload_0
      18: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      21: aload_2
      22: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      25: areturn

  public void addToThis(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #181                // Field coefficients:[I
       6: aload_1
       7: getfield      #181                // Field coefficients:[I
      10: invokespecial #215                // Method add:([I[I)[I
      13: putfield      #181                // Field coefficients:[I
      16: aload_0
      17: invokespecial #207                // Method computeDegree:()V
      20: return

  private int[] add(int[], int[]);
    Code:
       0: aload_1
       1: arraylength
       2: aload_2
       3: arraylength
       4: if_icmpge     27
       7: aload_2
       8: arraylength
       9: newarray       int
      11: astore_3
      12: aload_2
      13: iconst_0
      14: aload_3
      15: iconst_0
      16: aload_2
      17: arraylength
      18: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      21: aload_1
      22: astore        4
      24: goto          44
      27: aload_1
      28: arraylength
      29: newarray       int
      31: astore_3
      32: aload_1
      33: iconst_0
      34: aload_3
      35: iconst_0
      36: aload_1
      37: arraylength
      38: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      41: aload_2
      42: astore        4
      44: aload         4
      46: arraylength
      47: iconst_1
      48: isub
      49: istore        5
      51: iload         5
      53: iflt          82
      56: aload_3
      57: iload         5
      59: aload_0
      60: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      63: aload_3
      64: iload         5
      66: iaload
      67: aload         4
      69: iload         5
      71: iaload
      72: invokevirtual #197                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.add:(II)I
      75: iastore
      76: iinc          5, -1
      79: goto          51
      82: aload_3
      83: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM addMonomial(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: newarray       int
       5: astore_2
       6: aload_2
       7: iload_1
       8: iconst_1
       9: iastore
      10: aload_0
      11: aload_0
      12: getfield      #181                // Field coefficients:[I
      15: aload_2
      16: invokespecial #215                // Method add:([I[I)[I
      19: astore_3
      20: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      23: dup
      24: aload_0
      25: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      28: aload_3
      29: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      32: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithElement(int);
    Code:
       0: aload_0
       1: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       4: iload_1
       5: invokevirtual #196                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.isElementOfThisField:(I)Z
       8: ifne          21
      11: new           #103                // class java/lang/ArithmeticException
      14: dup
      15: ldc           #10                 // String Not an element of the finite field this polynomial is defined over.
      17: invokespecial #183                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #181                // Field coefficients:[I
      26: iload_1
      27: invokespecial #212                // Method multWithElement:([II)[I
      30: astore_2
      31: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      34: dup
      35: aload_0
      36: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      39: aload_2
      40: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      43: areturn

  public void multThisWithElement(int);
    Code:
       0: aload_0
       1: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       4: iload_1
       5: invokevirtual #196                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.isElementOfThisField:(I)Z
       8: ifne          21
      11: new           #103                // class java/lang/ArithmeticException
      14: dup
      15: ldc           #10                 // String Not an element of the finite field this polynomial is defined over.
      17: invokespecial #183                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_0
      23: aload_0
      24: getfield      #181                // Field coefficients:[I
      27: iload_1
      28: invokespecial #212                // Method multWithElement:([II)[I
      31: putfield      #181                // Field coefficients:[I
      34: aload_0
      35: invokespecial #207                // Method computeDegree:()V
      38: return

  private int[] multWithElement(int[], int);
    Code:
       0: aload_1
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_3
       5: iload_3
       6: iconst_m1
       7: if_icmpeq     14
      10: iload_2
      11: ifne          18
      14: iconst_1
      15: newarray       int
      17: areturn
      18: iload_2
      19: iconst_1
      20: if_icmpne     28
      23: aload_1
      24: invokestatic  #206                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      27: areturn
      28: iload_3
      29: iconst_1
      30: iadd
      31: newarray       int
      33: astore        4
      35: iload_3
      36: istore        5
      38: iload         5
      40: iflt          66
      43: aload         4
      45: iload         5
      47: aload_0
      48: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      51: aload_1
      52: iload         5
      54: iaload
      55: iload_2
      56: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      59: iastore
      60: iinc          5, -1
      63: goto          38
      66: aload         4
      68: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multWithMonomial(int);
    Code:
       0: aload_0
       1: getfield      #181                // Field coefficients:[I
       4: iload_1
       5: invokestatic  #213                // Method multWithMonomial:([II)[I
       8: astore_2
       9: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      12: dup
      13: aload_0
      14: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      17: aload_2
      18: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      21: areturn

  private static int[] multWithMonomial(int[], int);
    Code:
       0: aload_0
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_2
       5: iload_2
       6: iconst_m1
       7: if_icmpne     14
      10: iconst_1
      11: newarray       int
      13: areturn
      14: iload_2
      15: iload_1
      16: iadd
      17: iconst_1
      18: iadd
      19: newarray       int
      21: astore_3
      22: aload_0
      23: iconst_0
      24: aload_3
      25: iload_1
      26: iload_2
      27: iconst_1
      28: iadd
      29: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      32: aload_3
      33: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] div(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: invokespecial #219                // Method div:([I[I)[[I
      12: astore_2
      13: iconst_2
      14: anewarray     #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      17: dup
      18: iconst_0
      19: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      22: dup
      23: aload_0
      24: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      27: aload_2
      28: iconst_0
      29: aaload
      30: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      33: aastore
      34: dup
      35: iconst_1
      36: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      39: dup
      40: aload_0
      41: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      44: aload_2
      45: iconst_1
      46: aaload
      47: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      50: aastore
      51: areturn

  private int[][] div(int[], int[]);
    Code:
       0: aload_2
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_3
       5: aload_1
       6: invokestatic  #208                // Method computeDegree:([I)I
       9: iconst_1
      10: iadd
      11: istore        4
      13: iload_3
      14: iconst_m1
      15: if_icmpne     28
      18: new           #103                // class java/lang/ArithmeticException
      21: dup
      22: ldc           #9                  // String Division by zero.
      24: invokespecial #183                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iconst_2
      29: anewarray     #102                // class "[I"
      32: astore        5
      34: aload         5
      36: iconst_0
      37: iconst_1
      38: newarray       int
      40: aastore
      41: aload         5
      43: iconst_1
      44: iload         4
      46: newarray       int
      48: aastore
      49: aload_2
      50: invokestatic  #209                // Method headCoefficient:([I)I
      53: istore        6
      55: aload_0
      56: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      59: iload         6
      61: invokevirtual #194                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
      64: istore        6
      66: aload         5
      68: iconst_0
      69: aaload
      70: iconst_0
      71: iconst_0
      72: iastore
      73: aload_1
      74: iconst_0
      75: aload         5
      77: iconst_1
      78: aaload
      79: iconst_0
      80: aload         5
      82: iconst_1
      83: aaload
      84: arraylength
      85: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      88: iload_3
      89: aload         5
      91: iconst_1
      92: aaload
      93: invokestatic  #208                // Method computeDegree:([I)I
      96: if_icmpgt     195
      99: iconst_1
     100: newarray       int
     102: astore        8
     104: aload         8
     106: iconst_0
     107: aload_0
     108: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     111: aload         5
     113: iconst_1
     114: aaload
     115: invokestatic  #209                // Method headCoefficient:([I)I
     118: iload         6
     120: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
     123: iastore
     124: aload_0
     125: aload_2
     126: aload         8
     128: iconst_0
     129: iaload
     130: invokespecial #212                // Method multWithElement:([II)[I
     133: astore        7
     135: aload         5
     137: iconst_1
     138: aaload
     139: invokestatic  #208                // Method computeDegree:([I)I
     142: iload_3
     143: isub
     144: istore        9
     146: aload         7
     148: iload         9
     150: invokestatic  #213                // Method multWithMonomial:([II)[I
     153: astore        7
     155: aload         8
     157: iload         9
     159: invokestatic  #213                // Method multWithMonomial:([II)[I
     162: astore        8
     164: aload         5
     166: iconst_0
     167: aload_0
     168: aload         8
     170: aload         5
     172: iconst_0
     173: aaload
     174: invokespecial #215                // Method add:([I[I)[I
     177: aastore
     178: aload         5
     180: iconst_1
     181: aload_0
     182: aload         7
     184: aload         5
     186: iconst_1
     187: aaload
     188: invokespecial #215                // Method add:([I[I)[I
     191: aastore
     192: goto          88
     195: aload         5
     197: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM gcd(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: invokespecial #216                // Method gcd:([I[I)[I
      12: astore_2
      13: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      16: dup
      17: aload_0
      18: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      21: aload_2
      22: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      25: areturn

  private int[] gcd(int[], int[]);
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: astore        4
       5: aload_3
       6: invokestatic  #208                // Method computeDegree:([I)I
       9: iconst_m1
      10: if_icmpne     16
      13: aload         4
      15: areturn
      16: aload         4
      18: invokestatic  #208                // Method computeDegree:([I)I
      21: iconst_m1
      22: if_icmpeq     72
      25: aload_0
      26: aload_3
      27: aload         4
      29: invokespecial #217                // Method mod:([I[I)[I
      32: astore        5
      34: aload         4
      36: arraylength
      37: newarray       int
      39: astore_3
      40: aload         4
      42: iconst_0
      43: aload_3
      44: iconst_0
      45: aload_3
      46: arraylength
      47: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: aload         5
      52: arraylength
      53: newarray       int
      55: astore        4
      57: aload         5
      59: iconst_0
      60: aload         4
      62: iconst_0
      63: aload         4
      65: arraylength
      66: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      69: goto          16
      72: aload_0
      73: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      76: aload_3
      77: invokestatic  #209                // Method headCoefficient:([I)I
      80: invokevirtual #194                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
      83: istore        5
      85: aload_0
      86: aload_3
      87: iload         5
      89: invokespecial #212                // Method multWithElement:([II)[I
      92: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM multiply(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: invokespecial #218                // Method multiply:([I[I)[I
      12: astore_2
      13: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      16: dup
      17: aload_0
      18: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      21: aload_2
      22: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      25: areturn

  private int[] multiply(int[], int[]);
    Code:
       0: aload_1
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: aload_2
       5: invokestatic  #208                // Method computeDegree:([I)I
       8: if_icmpge     19
      11: aload_2
      12: astore_3
      13: aload_1
      14: astore        4
      16: goto          24
      19: aload_1
      20: astore_3
      21: aload_2
      22: astore        4
      24: aload_3
      25: invokestatic  #211                // Method normalForm:([I)[I
      28: astore_3
      29: aload         4
      31: invokestatic  #211                // Method normalForm:([I)[I
      34: astore        4
      36: aload         4
      38: arraylength
      39: iconst_1
      40: if_icmpne     53
      43: aload_0
      44: aload_3
      45: aload         4
      47: iconst_0
      48: iaload
      49: invokespecial #212                // Method multWithElement:([II)[I
      52: areturn
      53: aload_3
      54: arraylength
      55: istore        5
      57: aload         4
      59: arraylength
      60: istore        6
      62: iload         5
      64: iload         6
      66: iadd
      67: iconst_1
      68: isub
      69: newarray       int
      71: astore        7
      73: iload         6
      75: iload         5
      77: if_icmpeq     160
      80: iload         6
      82: newarray       int
      84: astore        8
      86: iload         5
      88: iload         6
      90: isub
      91: newarray       int
      93: astore        9
      95: aload_3
      96: iconst_0
      97: aload         8
      99: iconst_0
     100: aload         8
     102: arraylength
     103: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     106: aload_3
     107: iload         6
     109: aload         9
     111: iconst_0
     112: aload         9
     114: arraylength
     115: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     118: aload_0
     119: aload         8
     121: aload         4
     123: invokespecial #218                // Method multiply:([I[I)[I
     126: astore        8
     128: aload_0
     129: aload         9
     131: aload         4
     133: invokespecial #218                // Method multiply:([I[I)[I
     136: astore        9
     138: aload         9
     140: iload         6
     142: invokestatic  #213                // Method multWithMonomial:([II)[I
     145: astore        9
     147: aload_0
     148: aload         8
     150: aload         9
     152: invokespecial #215                // Method add:([I[I)[I
     155: astore        7
     157: goto          355
     160: iload         5
     162: iconst_1
     163: iadd
     164: iconst_1
     165: iushr
     166: istore        6
     168: iload         5
     170: iload         6
     172: isub
     173: istore        8
     175: iload         6
     177: newarray       int
     179: astore        9
     181: iload         6
     183: newarray       int
     185: astore        10
     187: iload         8
     189: newarray       int
     191: astore        11
     193: iload         8
     195: newarray       int
     197: astore        12
     199: aload_3
     200: iconst_0
     201: aload         9
     203: iconst_0
     204: aload         9
     206: arraylength
     207: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     210: aload_3
     211: iload         6
     213: aload         11
     215: iconst_0
     216: aload         11
     218: arraylength
     219: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     222: aload         4
     224: iconst_0
     225: aload         10
     227: iconst_0
     228: aload         10
     230: arraylength
     231: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     234: aload         4
     236: iload         6
     238: aload         12
     240: iconst_0
     241: aload         12
     243: arraylength
     244: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     247: aload_0
     248: aload         9
     250: aload         11
     252: invokespecial #215                // Method add:([I[I)[I
     255: astore        13
     257: aload_0
     258: aload         10
     260: aload         12
     262: invokespecial #215                // Method add:([I[I)[I
     265: astore        14
     267: aload_0
     268: aload         9
     270: aload         10
     272: invokespecial #218                // Method multiply:([I[I)[I
     275: astore        15
     277: aload_0
     278: aload         13
     280: aload         14
     282: invokespecial #218                // Method multiply:([I[I)[I
     285: astore        16
     287: aload_0
     288: aload         11
     290: aload         12
     292: invokespecial #218                // Method multiply:([I[I)[I
     295: astore        17
     297: aload_0
     298: aload         16
     300: aload         15
     302: invokespecial #215                // Method add:([I[I)[I
     305: astore        16
     307: aload_0
     308: aload         16
     310: aload         17
     312: invokespecial #215                // Method add:([I[I)[I
     315: astore        16
     317: aload         17
     319: iload         6
     321: invokestatic  #213                // Method multWithMonomial:([II)[I
     324: astore        17
     326: aload_0
     327: aload         16
     329: aload         17
     331: invokespecial #215                // Method add:([I[I)[I
     334: astore        7
     336: aload         7
     338: iload         6
     340: invokestatic  #213                // Method multWithMonomial:([II)[I
     343: astore        7
     345: aload_0
     346: aload         7
     348: aload         15
     350: invokespecial #215                // Method add:([I[I)[I
     353: astore        7
     355: aload         7
     357: areturn

  private boolean isIrreducible(int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: ifne          8
       6: iconst_0
       7: ireturn
       8: aload_1
       9: invokestatic  #208                // Method computeDegree:([I)I
      12: iconst_1
      13: ishr
      14: istore_2
      15: iconst_2
      16: newarray       int
      18: dup
      19: iconst_0
      20: iconst_0
      21: iastore
      22: dup
      23: iconst_1
      24: iconst_1
      25: iastore
      26: astore_3
      27: iconst_2
      28: newarray       int
      30: dup
      31: iconst_0
      32: iconst_0
      33: iastore
      34: dup
      35: iconst_1
      36: iconst_1
      37: iastore
      38: astore        4
      40: aload_0
      41: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      44: invokevirtual #192                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
      47: istore        5
      49: iconst_0
      50: istore        6
      52: iload         6
      54: iload_2
      55: if_icmpge     118
      58: iload         5
      60: iconst_1
      61: isub
      62: istore        7
      64: iload         7
      66: iflt          83
      69: aload_0
      70: aload_3
      71: aload_3
      72: aload_1
      73: invokespecial #221                // Method modMultiply:([I[I[I)[I
      76: astore_3
      77: iinc          7, -1
      80: goto          64
      83: aload_3
      84: invokestatic  #211                // Method normalForm:([I)[I
      87: astore_3
      88: aload_0
      89: aload_0
      90: aload_3
      91: aload         4
      93: invokespecial #215                // Method add:([I[I)[I
      96: aload_1
      97: invokespecial #216                // Method gcd:([I[I)[I
     100: astore        7
     102: aload         7
     104: invokestatic  #208                // Method computeDegree:([I)I
     107: ifeq          112
     110: iconst_0
     111: ireturn
     112: iinc          6, 1
     115: goto          52
     118: iconst_1
     119: ireturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM mod(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: invokespecial #217                // Method mod:([I[I)[I
      12: astore_2
      13: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      16: dup
      17: aload_0
      18: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      21: aload_2
      22: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      25: areturn

  private int[] mod(int[], int[]);
    Code:
       0: aload_2
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_3
       5: iload_3
       6: iconst_m1
       7: if_icmpne     20
      10: new           #103                // class java/lang/ArithmeticException
      13: dup
      14: ldc           #8                  // String Division by zero
      16: invokespecial #183                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: arraylength
      22: newarray       int
      24: astore        4
      26: aload_2
      27: invokestatic  #209                // Method headCoefficient:([I)I
      30: istore        5
      32: aload_0
      33: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      36: iload         5
      38: invokevirtual #194                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
      41: istore        5
      43: aload_1
      44: iconst_0
      45: aload         4
      47: iconst_0
      48: aload         4
      50: arraylength
      51: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      54: iload_3
      55: aload         4
      57: invokestatic  #208                // Method computeDegree:([I)I
      60: if_icmpgt     115
      63: aload_0
      64: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      67: aload         4
      69: invokestatic  #209                // Method headCoefficient:([I)I
      72: iload         5
      74: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      77: istore        7
      79: aload_2
      80: aload         4
      82: invokestatic  #208                // Method computeDegree:([I)I
      85: iload_3
      86: isub
      87: invokestatic  #213                // Method multWithMonomial:([II)[I
      90: astore        6
      92: aload_0
      93: aload         6
      95: iload         7
      97: invokespecial #212                // Method multWithElement:([II)[I
     100: astore        6
     102: aload_0
     103: aload         6
     105: aload         4
     107: invokespecial #215                // Method add:([I[I)[I
     110: astore        4
     112: goto          54
     115: aload         4
     117: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modMultiply(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: aload_2
      10: getfield      #181                // Field coefficients:[I
      13: invokespecial #221                // Method modMultiply:([I[I[I)[I
      16: astore_3
      17: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      20: dup
      21: aload_0
      22: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      25: aload_3
      26: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      29: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modSquareMatrix(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: iload_2
       4: newarray       int
       6: astore_3
       7: iload_2
       8: newarray       int
      10: astore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: aload_0
      18: getfield      #181                // Field coefficients:[I
      21: arraylength
      22: if_icmpge     57
      25: aload         4
      27: iload         5
      29: aload_0
      30: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      33: aload_0
      34: getfield      #181                // Field coefficients:[I
      37: iload         5
      39: iaload
      40: aload_0
      41: getfield      #181                // Field coefficients:[I
      44: iload         5
      46: iaload
      47: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      50: iastore
      51: iinc          5, 1
      54: goto          15
      57: iconst_0
      58: istore        5
      60: iload         5
      62: iload_2
      63: if_icmpge     144
      66: iconst_0
      67: istore        6
      69: iload         6
      71: iload_2
      72: if_icmpge     138
      75: iload         5
      77: aload_1
      78: iload         6
      80: aaload
      81: getfield      #181                // Field coefficients:[I
      84: arraylength
      85: if_icmplt     91
      88: goto          132
      91: aload_0
      92: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      95: aload_1
      96: iload         6
      98: aaload
      99: getfield      #181                // Field coefficients:[I
     102: iload         5
     104: iaload
     105: aload         4
     107: iload         6
     109: iaload
     110: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
     113: istore        7
     115: aload_3
     116: iload         5
     118: aload_0
     119: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     122: aload_3
     123: iload         5
     125: iaload
     126: iload         7
     128: invokevirtual #197                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.add:(II)I
     131: iastore
     132: iinc          6, 1
     135: goto          69
     138: iinc          5, 1
     141: goto          60
     144: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
     147: dup
     148: aload_0
     149: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     152: aload_3
     153: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
     156: areturn

  private int[] modMultiply(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: aload_2
       4: invokespecial #218                // Method multiply:([I[I)[I
       7: aload_3
       8: invokespecial #217                // Method mod:([I[I)[I
      11: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modSquareRoot(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: getfield      #181                // Field coefficients:[I
       4: invokestatic  #206                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_2
      11: aload_1
      12: getfield      #181                // Field coefficients:[I
      15: invokespecial #221                // Method modMultiply:([I[I[I)[I
      18: astore_3
      19: aload_3
      20: aload_0
      21: getfield      #181                // Field coefficients:[I
      24: invokestatic  #214                // Method isEqual:([I[I)Z
      27: ifne          49
      30: aload_3
      31: invokestatic  #211                // Method normalForm:([I)[I
      34: astore_2
      35: aload_0
      36: aload_2
      37: aload_2
      38: aload_1
      39: getfield      #181                // Field coefficients:[I
      42: invokespecial #221                // Method modMultiply:([I[I[I)[I
      45: astore_3
      46: goto          19
      49: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      52: dup
      53: aload_0
      54: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      57: aload_2
      58: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      61: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modSquareRootMatrix(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: iload_2
       4: newarray       int
       6: astore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: iload_2
      13: if_icmpge     106
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload_2
      22: if_icmpge     100
      25: iload         4
      27: aload_1
      28: iload         5
      30: aaload
      31: getfield      #181                // Field coefficients:[I
      34: arraylength
      35: if_icmplt     41
      38: goto          94
      41: iload         5
      43: aload_0
      44: getfield      #181                // Field coefficients:[I
      47: arraylength
      48: if_icmpge     94
      51: aload_0
      52: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      55: aload_1
      56: iload         5
      58: aaload
      59: getfield      #181                // Field coefficients:[I
      62: iload         4
      64: iaload
      65: aload_0
      66: getfield      #181                // Field coefficients:[I
      69: iload         5
      71: iaload
      72: invokevirtual #198                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      75: istore        6
      77: aload_3
      78: iload         4
      80: aload_0
      81: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      84: aload_3
      85: iload         4
      87: iaload
      88: iload         6
      90: invokevirtual #197                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.add:(II)I
      93: iastore
      94: iinc          5, 1
      97: goto          19
     100: iinc          4, 1
     103: goto          10
     106: iconst_0
     107: istore        4
     109: iload         4
     111: iload_2
     112: if_icmpge     136
     115: aload_3
     116: iload         4
     118: aload_0
     119: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     122: aload_3
     123: iload         4
     125: iaload
     126: invokevirtual #195                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.sqRoot:(I)I
     129: iastore
     130: iinc          4, 1
     133: goto          109
     136: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
     139: dup
     140: aload_0
     141: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     144: aload_3
     145: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
     148: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modDiv(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: aload_1
       6: getfield      #181                // Field coefficients:[I
       9: aload_2
      10: getfield      #181                // Field coefficients:[I
      13: invokespecial #220                // Method modDiv:([I[I[I)[I
      16: astore_3
      17: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      20: dup
      21: aload_0
      22: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      25: aload_3
      26: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      29: areturn

  private int[] modDiv(int[], int[], int[]);
    Code:
       0: aload_3
       1: invokestatic  #211                // Method normalForm:([I)[I
       4: astore        4
       6: aload_0
       7: aload_2
       8: aload_3
       9: invokespecial #217                // Method mod:([I[I)[I
      12: astore        5
      14: iconst_1
      15: newarray       int
      17: dup
      18: iconst_0
      19: iconst_0
      20: iastore
      21: astore        6
      23: aload_0
      24: aload_1
      25: aload_3
      26: invokespecial #217                // Method mod:([I[I)[I
      29: astore        7
      31: aload         5
      33: invokestatic  #208                // Method computeDegree:([I)I
      36: iconst_m1
      37: if_icmpeq     102
      40: aload_0
      41: aload         4
      43: aload         5
      45: invokespecial #219                // Method div:([I[I)[[I
      48: astore        9
      50: aload         5
      52: invokestatic  #211                // Method normalForm:([I)[I
      55: astore        4
      57: aload         9
      59: iconst_1
      60: aaload
      61: invokestatic  #211                // Method normalForm:([I)[I
      64: astore        5
      66: aload_0
      67: aload         6
      69: aload_0
      70: aload         9
      72: iconst_0
      73: aaload
      74: aload         7
      76: aload_3
      77: invokespecial #221                // Method modMultiply:([I[I[I)[I
      80: invokespecial #215                // Method add:([I[I)[I
      83: astore        8
      85: aload         7
      87: invokestatic  #211                // Method normalForm:([I)[I
      90: astore        6
      92: aload         8
      94: invokestatic  #211                // Method normalForm:([I)[I
      97: astore        7
      99: goto          31
     102: aload         4
     104: invokestatic  #209                // Method headCoefficient:([I)I
     107: istore        10
     109: aload_0
     110: aload         6
     112: aload_0
     113: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     116: iload         10
     118: invokevirtual #194                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
     121: invokespecial #212                // Method multWithElement:([II)[I
     124: astore        6
     126: aload         6
     128: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM modInverse(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: iconst_1
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_1
       6: iastore
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_0
      11: getfield      #181                // Field coefficients:[I
      14: aload_1
      15: getfield      #181                // Field coefficients:[I
      18: invokespecial #220                // Method modDiv:([I[I[I)[I
      21: astore_3
      22: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      25: dup
      26: aload_0
      27: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      30: aload_3
      31: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
      34: areturn

  public org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[] modPolynomialToFracton(org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_1
       1: getfield      #180                // Field degree:I
       4: iconst_1
       5: ishr
       6: istore_2
       7: aload_1
       8: getfield      #181                // Field coefficients:[I
      11: invokestatic  #211                // Method normalForm:([I)[I
      14: astore_3
      15: aload_0
      16: aload_0
      17: getfield      #181                // Field coefficients:[I
      20: aload_1
      21: getfield      #181                // Field coefficients:[I
      24: invokespecial #217                // Method mod:([I[I)[I
      27: astore        4
      29: iconst_1
      30: newarray       int
      32: dup
      33: iconst_0
      34: iconst_0
      35: iastore
      36: astore        5
      38: iconst_1
      39: newarray       int
      41: dup
      42: iconst_0
      43: iconst_1
      44: iastore
      45: astore        6
      47: aload         4
      49: invokestatic  #208                // Method computeDegree:([I)I
      52: iload_2
      53: if_icmple     107
      56: aload_0
      57: aload_3
      58: aload         4
      60: invokespecial #219                // Method div:([I[I)[[I
      63: astore        7
      65: aload         4
      67: astore_3
      68: aload         7
      70: iconst_1
      71: aaload
      72: astore        4
      74: aload_0
      75: aload         5
      77: aload_0
      78: aload         7
      80: iconst_0
      81: aaload
      82: aload         6
      84: aload_1
      85: getfield      #181                // Field coefficients:[I
      88: invokespecial #221                // Method modMultiply:([I[I[I)[I
      91: invokespecial #215                // Method add:([I[I)[I
      94: astore        8
      96: aload         6
      98: astore        5
     100: aload         8
     102: astore        6
     104: goto          47
     107: iconst_2
     108: anewarray     #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
     111: dup
     112: iconst_0
     113: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
     116: dup
     117: aload_0
     118: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     121: aload         4
     123: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
     126: aastore
     127: dup
     128: iconst_1
     129: new           #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
     132: dup
     133: aload_0
     134: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     137: aload         6
     139: invokespecial #223                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[I)V
     142: aastore
     143: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #111                // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      17: astore_2
      18: aload_0
      19: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      22: aload_2
      23: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      26: invokevirtual #199                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.equals:(Ljava/lang/Object;)Z
      29: ifeq          59
      32: aload_0
      33: getfield      #180                // Field degree:I
      36: aload_2
      37: getfield      #180                // Field degree:I
      40: if_icmpne     59
      43: aload_0
      44: getfield      #181                // Field coefficients:[I
      47: aload_2
      48: getfield      #181                // Field coefficients:[I
      51: invokestatic  #214                // Method isEqual:([I[I)Z
      54: ifeq          59
      57: iconst_1
      58: ireturn
      59: iconst_0
      60: ireturn

  private static boolean isEqual(int[], int[]);
    Code:
       0: aload_0
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_2
       5: aload_1
       6: invokestatic  #208                // Method computeDegree:([I)I
       9: istore_3
      10: iload_2
      11: iload_3
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_2
      23: if_icmpgt     45
      26: aload_0
      27: iload         4
      29: iaload
      30: aload_1
      31: iload         4
      33: iaload
      34: if_icmpeq     39
      37: iconst_0
      38: ireturn
      39: iinc          4, 1
      42: goto          20
      45: iconst_1
      46: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       4: invokevirtual #193                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.hashCode:()I
       7: istore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #181                // Field coefficients:[I
      15: arraylength
      16: if_icmpge     37
      19: iload_1
      20: bipush        31
      22: imul
      23: aload_0
      24: getfield      #181                // Field coefficients:[I
      27: iload_2
      28: iaload
      29: iadd
      30: istore_1
      31: iinc          2, 1
      34: goto          10
      37: iload_1
      38: ireturn

  public java.lang.String toString();
    Code:
       0: new           #106                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #3                  // String  Polynomial over
       9: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      16: invokevirtual #200                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.toString:()Ljava/lang/String;
      19: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #6                  // String : \n
      24: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: astore_1
      31: iconst_0
      32: istore_2
      33: iload_2
      34: aload_0
      35: getfield      #181                // Field coefficients:[I
      38: arraylength
      39: if_icmpge     93
      42: new           #106                // class java/lang/StringBuilder
      45: dup
      46: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
      49: aload_1
      50: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #182                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      57: aload_0
      58: getfield      #181                // Field coefficients:[I
      61: iload_2
      62: iaload
      63: invokevirtual #201                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.elementToStr:(I)Ljava/lang/String;
      66: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #11                 // String Y^
      71: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload_2
      75: invokevirtual #189                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #5                  // String +
      80: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: astore_1
      87: iinc          2, 1
      90: goto          33
      93: new           #106                // class java/lang/StringBuilder
      96: dup
      97: invokespecial #186                // Method java/lang/StringBuilder."<init>":()V
     100: aload_1
     101: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #7                  // String ;
     106: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: astore_1
     113: aload_1
     114: areturn

  private void computeDegree();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #181                // Field coefficients:[I
       5: arraylength
       6: iconst_1
       7: isub
       8: putfield      #180                // Field degree:I
      11: aload_0
      12: getfield      #180                // Field degree:I
      15: iflt          43
      18: aload_0
      19: getfield      #181                // Field coefficients:[I
      22: aload_0
      23: getfield      #180                // Field degree:I
      26: iaload
      27: ifne          43
      30: aload_0
      31: dup
      32: getfield      #180                // Field degree:I
      35: iconst_1
      36: isub
      37: putfield      #180                // Field degree:I
      40: goto          11
      43: return

  private static int computeDegree(int[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_1
       5: iload_1
       6: iflt          21
       9: aload_0
      10: iload_1
      11: iaload
      12: ifne          21
      15: iinc          1, -1
      18: goto          5
      21: iload_1
      22: ireturn

  private static int[] normalForm(int[]);
    Code:
       0: aload_0
       1: invokestatic  #208                // Method computeDegree:([I)I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     14
      10: iconst_1
      11: newarray       int
      13: areturn
      14: aload_0
      15: arraylength
      16: iload_1
      17: iconst_1
      18: iadd
      19: if_icmpne     27
      22: aload_0
      23: invokestatic  #206                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      26: areturn
      27: iload_1
      28: iconst_1
      29: iadd
      30: newarray       int
      32: astore_2
      33: aload_0
      34: iconst_0
      35: aload_2
      36: iconst_0
      37: iload_1
      38: iconst_1
      39: iadd
      40: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_2
      44: areturn
}
