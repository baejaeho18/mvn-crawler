public abstract class org.bouncycastle.crypto.tls.TlsProtocol {
  protected static final java.lang.Integer EXT_RenegotiationInfo;

  protected static final java.lang.Integer EXT_SessionTicket;

  private static final java.lang.String TLS_ERROR_MESSAGE;

  protected static final short CS_START;

  protected static final short CS_CLIENT_HELLO;

  protected static final short CS_SERVER_HELLO;

  protected static final short CS_SERVER_SUPPLEMENTAL_DATA;

  protected static final short CS_SERVER_CERTIFICATE;

  protected static final short CS_CERTIFICATE_STATUS;

  protected static final short CS_SERVER_KEY_EXCHANGE;

  protected static final short CS_CERTIFICATE_REQUEST;

  protected static final short CS_SERVER_HELLO_DONE;

  protected static final short CS_CLIENT_SUPPLEMENTAL_DATA;

  protected static final short CS_CLIENT_CERTIFICATE;

  protected static final short CS_CLIENT_KEY_EXCHANGE;

  protected static final short CS_CERTIFICATE_VERIFY;

  protected static final short CS_CLIENT_FINISHED;

  protected static final short CS_SERVER_SESSION_TICKET;

  protected static final short CS_SERVER_FINISHED;

  protected static final short CS_END;

  private org.bouncycastle.crypto.tls.ByteQueue applicationDataQueue;

  private org.bouncycastle.crypto.tls.ByteQueue alertQueue;

  private org.bouncycastle.crypto.tls.ByteQueue handshakeQueue;

  org.bouncycastle.crypto.tls.RecordStream recordStream;

  protected java.security.SecureRandom secureRandom;

  private org.bouncycastle.crypto.tls.TlsInputStream tlsInputStream;

  private org.bouncycastle.crypto.tls.TlsOutputStream tlsOutputStream;

  private volatile boolean closed;

  private volatile boolean failedWithError;

  private volatile boolean appDataReady;

  private volatile boolean splitApplicationDataRecords;

  private byte[] expected_verify_data;

  protected org.bouncycastle.crypto.tls.TlsSession tlsSession;

  protected org.bouncycastle.crypto.tls.SessionParameters sessionParameters;

  protected org.bouncycastle.crypto.tls.SecurityParameters securityParameters;

  protected org.bouncycastle.crypto.tls.Certificate peerCertificate;

  protected int[] offeredCipherSuites;

  protected short[] offeredCompressionMethods;

  protected java.util.Hashtable clientExtensions;

  protected java.util.Hashtable serverExtensions;

  protected short connection_state;

  protected boolean resumedSession;

  protected boolean receivedChangeCipherSpec;

  protected boolean secure_renegotiation;

  protected boolean allowCertificateStatus;

  protected boolean expectSessionTicket;

  protected boolean blocking;

  protected org.bouncycastle.crypto.tls.ByteQueueInputStream inputBuffers;

  protected org.bouncycastle.crypto.tls.ByteQueueOutputStream outputBuffer;

  public org.bouncycastle.crypto.tls.TlsProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #660                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #350                // class org/bouncycastle/crypto/tls/ByteQueue
       8: dup
       9: invokespecial #675                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":()V
      12: putfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      15: aload_0
      16: new           #350                // class org/bouncycastle/crypto/tls/ByteQueue
      19: dup
      20: iconst_2
      21: invokespecial #676                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      24: putfield      #636                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      27: aload_0
      28: new           #350                // class org/bouncycastle/crypto/tls/ByteQueue
      31: dup
      32: invokespecial #675                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":()V
      35: putfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      38: aload_0
      39: aconst_null
      40: putfield      #645                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      43: aload_0
      44: aconst_null
      45: putfield      #646                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      48: aload_0
      49: iconst_0
      50: putfield      #621                // Field closed:Z
      53: aload_0
      54: iconst_0
      55: putfield      #623                // Field failedWithError:Z
      58: aload_0
      59: iconst_0
      60: putfield      #619                // Field appDataReady:Z
      63: aload_0
      64: iconst_1
      65: putfield      #627                // Field splitApplicationDataRecords:Z
      68: aload_0
      69: aconst_null
      70: putfield      #628                // Field expected_verify_data:[B
      73: aload_0
      74: aconst_null
      75: putfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      78: aload_0
      79: aconst_null
      80: putfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      83: aload_0
      84: aconst_null
      85: putfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      88: aload_0
      89: aconst_null
      90: putfield      #641                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      93: aload_0
      94: aconst_null
      95: putfield      #629                // Field offeredCipherSuites:[I
      98: aload_0
      99: aconst_null
     100: putfield      #630                // Field offeredCompressionMethods:[S
     103: aload_0
     104: aconst_null
     105: putfield      #634                // Field clientExtensions:Ljava/util/Hashtable;
     108: aload_0
     109: aconst_null
     110: putfield      #635                // Field serverExtensions:Ljava/util/Hashtable;
     113: aload_0
     114: iconst_0
     115: putfield      #617                // Field connection_state:S
     118: aload_0
     119: iconst_0
     120: putfield      #625                // Field resumedSession:Z
     123: aload_0
     124: iconst_0
     125: putfield      #624                // Field receivedChangeCipherSpec:Z
     128: aload_0
     129: iconst_0
     130: putfield      #626                // Field secure_renegotiation:Z
     133: aload_0
     134: iconst_0
     135: putfield      #618                // Field allowCertificateStatus:Z
     138: aload_0
     139: iconst_0
     140: putfield      #622                // Field expectSessionTicket:Z
     143: aload_0
     144: iconst_1
     145: putfield      #620                // Field blocking:Z
     148: aload_0
     149: new           #356                // class org/bouncycastle/crypto/tls/RecordStream
     152: dup
     153: aload_0
     154: aload_1
     155: aload_2
     156: invokespecial #703                // Method org/bouncycastle/crypto/tls/RecordStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;Ljava/io/InputStream;Ljava/io/OutputStream;)V
     159: putfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     162: aload_0
     163: aload_3
     164: putfield      #633                // Field secureRandom:Ljava/security/SecureRandom;
     167: return

  public org.bouncycastle.crypto.tls.TlsProtocol(java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #660                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #350                // class org/bouncycastle/crypto/tls/ByteQueue
       8: dup
       9: invokespecial #675                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":()V
      12: putfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      15: aload_0
      16: new           #350                // class org/bouncycastle/crypto/tls/ByteQueue
      19: dup
      20: iconst_2
      21: invokespecial #676                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      24: putfield      #636                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      27: aload_0
      28: new           #350                // class org/bouncycastle/crypto/tls/ByteQueue
      31: dup
      32: invokespecial #675                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":()V
      35: putfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      38: aload_0
      39: aconst_null
      40: putfield      #645                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      43: aload_0
      44: aconst_null
      45: putfield      #646                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      48: aload_0
      49: iconst_0
      50: putfield      #621                // Field closed:Z
      53: aload_0
      54: iconst_0
      55: putfield      #623                // Field failedWithError:Z
      58: aload_0
      59: iconst_0
      60: putfield      #619                // Field appDataReady:Z
      63: aload_0
      64: iconst_1
      65: putfield      #627                // Field splitApplicationDataRecords:Z
      68: aload_0
      69: aconst_null
      70: putfield      #628                // Field expected_verify_data:[B
      73: aload_0
      74: aconst_null
      75: putfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      78: aload_0
      79: aconst_null
      80: putfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      83: aload_0
      84: aconst_null
      85: putfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      88: aload_0
      89: aconst_null
      90: putfield      #641                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      93: aload_0
      94: aconst_null
      95: putfield      #629                // Field offeredCipherSuites:[I
      98: aload_0
      99: aconst_null
     100: putfield      #630                // Field offeredCompressionMethods:[S
     103: aload_0
     104: aconst_null
     105: putfield      #634                // Field clientExtensions:Ljava/util/Hashtable;
     108: aload_0
     109: aconst_null
     110: putfield      #635                // Field serverExtensions:Ljava/util/Hashtable;
     113: aload_0
     114: iconst_0
     115: putfield      #617                // Field connection_state:S
     118: aload_0
     119: iconst_0
     120: putfield      #625                // Field resumedSession:Z
     123: aload_0
     124: iconst_0
     125: putfield      #624                // Field receivedChangeCipherSpec:Z
     128: aload_0
     129: iconst_0
     130: putfield      #626                // Field secure_renegotiation:Z
     133: aload_0
     134: iconst_0
     135: putfield      #618                // Field allowCertificateStatus:Z
     138: aload_0
     139: iconst_0
     140: putfield      #622                // Field expectSessionTicket:Z
     143: aload_0
     144: iconst_0
     145: putfield      #620                // Field blocking:Z
     148: aload_0
     149: new           #351                // class org/bouncycastle/crypto/tls/ByteQueueInputStream
     152: dup
     153: invokespecial #682                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream."<init>":()V
     156: putfield      #639                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
     159: aload_0
     160: new           #352                // class org/bouncycastle/crypto/tls/ByteQueueOutputStream
     163: dup
     164: invokespecial #685                // Method org/bouncycastle/crypto/tls/ByteQueueOutputStream."<init>":()V
     167: putfield      #640                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
     170: aload_0
     171: new           #356                // class org/bouncycastle/crypto/tls/RecordStream
     174: dup
     175: aload_0
     176: aload_0
     177: getfield      #639                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
     180: aload_0
     181: getfield      #640                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
     184: invokespecial #703                // Method org/bouncycastle/crypto/tls/RecordStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;Ljava/io/InputStream;Ljava/io/OutputStream;)V
     187: putfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     190: aload_0
     191: aload_1
     192: putfield      #633                // Field secureRandom:Ljava/security/SecureRandom;
     195: return

  protected abstract org.bouncycastle.crypto.tls.TlsContext getContext();

  abstract org.bouncycastle.crypto.tls.AbstractTlsContext getContextAdmin();

  protected abstract org.bouncycastle.crypto.tls.TlsPeer getPeer();

  protected void handleChangeCipherSpecMessage() throws java.io.IOException;
    Code:
       0: return

  protected abstract void handleHandshakeMessage(short, byte[]) throws java.io.IOException;

  protected void handleWarningMessage(short) throws java.io.IOException;
    Code:
       0: return

  protected void applyMaxFragmentLengthExtension() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
       4: getfield      #615                // Field org/bouncycastle/crypto/tls/SecurityParameters.maxFragmentLength:S
       7: iflt          54
      10: aload_0
      11: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      14: getfield      #615                // Field org/bouncycastle/crypto/tls/SecurityParameters.maxFragmentLength:S
      17: invokestatic  #689                // Method org/bouncycastle/crypto/tls/MaxFragmentLength.isValid:(S)Z
      20: ifne          33
      23: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      26: dup
      27: bipush        80
      29: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      32: athrow
      33: iconst_1
      34: bipush        8
      36: aload_0
      37: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      40: getfield      #615                // Field org/bouncycastle/crypto/tls/SecurityParameters.maxFragmentLength:S
      43: iadd
      44: ishl
      45: istore_1
      46: aload_0
      47: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      50: iload_1
      51: invokevirtual #699                // Method org/bouncycastle/crypto/tls/RecordStream.setPlaintextLimit:(I)V
      54: return

  protected void checkReceivedChangeCipherSpec(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #624                // Field receivedChangeCipherSpec:Z
       5: if_icmpeq     18
       8: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      11: dup
      12: bipush        10
      14: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      17: athrow
      18: return

  protected void cleanupHandshake();
    Code:
       0: aload_0
       1: getfield      #628                // Field expected_verify_data:[B
       4: ifnull        20
       7: aload_0
       8: getfield      #628                // Field expected_verify_data:[B
      11: iconst_0
      12: invokestatic  #778                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      15: aload_0
      16: aconst_null
      17: putfield      #628                // Field expected_verify_data:[B
      20: aload_0
      21: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      24: invokevirtual #706                // Method org/bouncycastle/crypto/tls/SecurityParameters.clear:()V
      27: aload_0
      28: aconst_null
      29: putfield      #641                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      32: aload_0
      33: aconst_null
      34: putfield      #629                // Field offeredCipherSuites:[I
      37: aload_0
      38: aconst_null
      39: putfield      #630                // Field offeredCompressionMethods:[S
      42: aload_0
      43: aconst_null
      44: putfield      #634                // Field clientExtensions:Ljava/util/Hashtable;
      47: aload_0
      48: aconst_null
      49: putfield      #635                // Field serverExtensions:Ljava/util/Hashtable;
      52: aload_0
      53: iconst_0
      54: putfield      #625                // Field resumedSession:Z
      57: aload_0
      58: iconst_0
      59: putfield      #624                // Field receivedChangeCipherSpec:Z
      62: aload_0
      63: iconst_0
      64: putfield      #626                // Field secure_renegotiation:Z
      67: aload_0
      68: iconst_0
      69: putfield      #618                // Field allowCertificateStatus:Z
      72: aload_0
      73: iconst_0
      74: putfield      #622                // Field expectSessionTicket:Z
      77: return

  protected void blockForHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          30
       7: aload_0
       8: getfield      #617                // Field connection_state:S
      11: bipush        16
      13: if_icmpeq     30
      16: aload_0
      17: getfield      #621                // Field closed:Z
      20: ifeq          23
      23: aload_0
      24: invokevirtual #736                // Method safeReadRecord:()V
      27: goto          7
      30: return

  protected void completeHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #693                // Method org/bouncycastle/crypto/tls/RecordStream.finaliseHandshake:()V
       7: aload_0
       8: aload_0
       9: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      12: invokestatic  #774                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv11:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: putfield      #627                // Field splitApplicationDataRecords:Z
      26: aload_0
      27: getfield      #619                // Field appDataReady:Z
      30: ifne          69
      33: aload_0
      34: iconst_1
      35: putfield      #619                // Field appDataReady:Z
      38: aload_0
      39: getfield      #620                // Field blocking:Z
      42: ifeq          69
      45: aload_0
      46: new           #365                // class org/bouncycastle/crypto/tls/TlsInputStream
      49: dup
      50: aload_0
      51: invokespecial #726                // Method org/bouncycastle/crypto/tls/TlsInputStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;)V
      54: putfield      #645                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      57: aload_0
      58: new           #367                // class org/bouncycastle/crypto/tls/TlsOutputStream
      61: dup
      62: aload_0
      63: invokespecial #727                // Method org/bouncycastle/crypto/tls/TlsOutputStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;)V
      66: putfield      #646                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      69: aload_0
      70: getfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      73: ifnull        196
      76: aload_0
      77: getfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      80: ifnonnull     185
      83: aload_0
      84: new           #359                // class org/bouncycastle/crypto/tls/SessionParameters$Builder
      87: dup
      88: invokespecial #711                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder."<init>":()V
      91: aload_0
      92: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      95: invokevirtual #704                // Method org/bouncycastle/crypto/tls/SecurityParameters.getCipherSuite:()I
      98: invokevirtual #713                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setCipherSuite:(I)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     101: aload_0
     102: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     105: invokevirtual #705                // Method org/bouncycastle/crypto/tls/SecurityParameters.getCompressionAlgorithm:()S
     108: invokevirtual #714                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setCompressionAlgorithm:(S)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     111: aload_0
     112: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     115: invokevirtual #707                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
     118: invokevirtual #715                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setMasterSecret:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     121: aload_0
     122: getfield      #641                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
     125: invokevirtual #719                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setPeerCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     128: aload_0
     129: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     132: invokevirtual #708                // Method org/bouncycastle/crypto/tls/SecurityParameters.getPSKIdentity:()[B
     135: invokevirtual #716                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setPSKIdentity:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     138: aload_0
     139: getfield      #643                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     142: invokevirtual #709                // Method org/bouncycastle/crypto/tls/SecurityParameters.getSRPIdentity:()[B
     145: invokevirtual #717                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setSRPIdentity:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     148: aload_0
     149: getfield      #635                // Field serverExtensions:Ljava/util/Hashtable;
     152: invokevirtual #718                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setServerExtensions:(Ljava/util/Hashtable;)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     155: invokevirtual #712                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.build:()Lorg/bouncycastle/crypto/tls/SessionParameters;
     158: putfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     161: aload_0
     162: new           #372                // class org/bouncycastle/crypto/tls/TlsSessionImpl
     165: dup
     166: aload_0
     167: getfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     170: invokeinterface #796,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSession.getSessionID:()[B
     175: aload_0
     176: getfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     179: invokespecial #759                // Method org/bouncycastle/crypto/tls/TlsSessionImpl."<init>":([BLorg/bouncycastle/crypto/tls/SessionParameters;)V
     182: putfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     185: aload_0
     186: invokevirtual #748                // Method getContextAdmin:()Lorg/bouncycastle/crypto/tls/AbstractTlsContext;
     189: aload_0
     190: getfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     193: invokevirtual #673                // Method org/bouncycastle/crypto/tls/AbstractTlsContext.setResumableSession:(Lorg/bouncycastle/crypto/tls/TlsSession;)V
     196: aload_0
     197: invokevirtual #750                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
     200: invokeinterface #792,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyHandshakeComplete:()V
     205: aload_0
     206: invokevirtual #730                // Method cleanupHandshake:()V
     209: goto          219
     212: astore_1
     213: aload_0
     214: invokevirtual #730                // Method cleanupHandshake:()V
     217: aload_1
     218: athrow
     219: return
    Exception table:
       from    to  target type
           0   205   212   any
         212   213   212   any

  protected void processRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: tableswitch   { // 20 to 24
                    20: 89
                    21: 36
                    22: 100
                    23: 54
                    24: 118
               default: 135
          }
      36: aload_0
      37: getfield      #636                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      40: aload_2
      41: iload_3
      42: iload         4
      44: invokevirtual #678                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
      47: aload_0
      48: invokespecial #733                // Method processAlert:()V
      51: goto          135
      54: aload_0
      55: getfield      #619                // Field appDataReady:Z
      58: ifne          71
      61: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      64: dup
      65: bipush        10
      67: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      70: athrow
      71: aload_0
      72: getfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      75: aload_2
      76: iload_3
      77: iload         4
      79: invokevirtual #678                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
      82: aload_0
      83: invokespecial #734                // Method processApplicationData:()V
      86: goto          135
      89: aload_0
      90: aload_2
      91: iload_3
      92: iload         4
      94: invokespecial #744                // Method processChangeCipherSpec:([BII)V
      97: goto          135
     100: aload_0
     101: getfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
     104: aload_2
     105: iload_3
     106: iload         4
     108: invokevirtual #678                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
     111: aload_0
     112: invokespecial #735                // Method processHandshake:()V
     115: goto          135
     118: aload_0
     119: getfield      #619                // Field appDataReady:Z
     122: ifne          135
     125: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     128: dup
     129: bipush        10
     131: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     134: athrow
     135: return

  private void processHandshake() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       6: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       9: iconst_4
      10: if_icmplt     203
      13: iconst_4
      14: newarray       byte
      16: astore_2
      17: aload_0
      18: getfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      21: aload_2
      22: iconst_0
      23: iconst_4
      24: iconst_0
      25: invokevirtual #679                // Method org/bouncycastle/crypto/tls/ByteQueue.read:([BIII)V
      28: aload_2
      29: iconst_0
      30: invokestatic  #764                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      33: istore_3
      34: aload_2
      35: iconst_1
      36: invokestatic  #763                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
      39: istore        4
      41: aload_0
      42: getfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      45: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      48: iload         4
      50: iconst_4
      51: iadd
      52: if_icmplt     203
      55: aload_0
      56: getfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      59: iload         4
      61: iconst_4
      62: invokevirtual #677                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:(II)[B
      65: astore        5
      67: aload_0
      68: aload_0
      69: getfield      #617                // Field connection_state:S
      72: bipush        16
      74: if_icmpeq     83
      77: iload_3
      78: bipush        20
      80: if_icmpne     87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: invokevirtual #740                // Method checkReceivedChangeCipherSpec:(Z)V
      91: iload_3
      92: lookupswitch  { // 2
                     0: 120
                    20: 123
               default: 172
          }
     120: goto          194
     123: aload_0
     124: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
     127: astore        6
     129: aload_0
     130: getfield      #628                // Field expected_verify_data:[B
     133: ifnonnull     172
     136: aload         6
     138: invokeinterface #789,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
     143: invokevirtual #707                // Method org/bouncycastle/crypto/tls/SecurityParameters.getMasterSecret:()[B
     146: ifnull        172
     149: aload_0
     150: aload_0
     151: aload         6
     153: invokeinterface #787,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
     158: ifne          165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: invokevirtual #742                // Method createVerifyData:(Z)[B
     169: putfield      #628                // Field expected_verify_data:[B
     172: aload_0
     173: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     176: aload_2
     177: iconst_0
     178: iconst_4
     179: invokevirtual #701                // Method org/bouncycastle/crypto/tls/RecordStream.updateHandshakeData:([BII)V
     182: aload_0
     183: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     186: aload         5
     188: iconst_0
     189: iload         4
     191: invokevirtual #701                // Method org/bouncycastle/crypto/tls/RecordStream.updateHandshakeData:([BII)V
     194: aload_0
     195: iload_3
     196: aload         5
     198: invokevirtual #738                // Method handleHandshakeMessage:(S[B)V
     201: iconst_1
     202: istore_1
     203: iload_1
     204: ifne          0
     207: return

  private void processApplicationData();
    Code:
       0: return

  private void processAlert() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #636                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       4: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       7: iconst_2
       8: if_icmplt     95
      11: aload_0
      12: getfield      #636                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      15: iconst_2
      16: iconst_0
      17: invokevirtual #677                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:(II)[B
      20: astore_1
      21: aload_1
      22: iconst_0
      23: baload
      24: i2s
      25: istore_2
      26: aload_1
      27: iconst_1
      28: baload
      29: i2s
      30: istore_3
      31: aload_0
      32: invokevirtual #750                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
      35: iload_2
      36: iload_3
      37: invokeinterface #793,  3          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertReceived:(SS)V
      42: iload_2
      43: iconst_2
      44: if_icmpne     78
      47: aload_0
      48: invokevirtual #732                // Method invalidateSession:()V
      51: aload_0
      52: iconst_1
      53: putfield      #623                // Field failedWithError:Z
      56: aload_0
      57: iconst_1
      58: putfield      #621                // Field closed:Z
      61: aload_0
      62: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      65: invokevirtual #696                // Method org/bouncycastle/crypto/tls/RecordStream.safeClose:()V
      68: new           #337                // class java/io/IOException
      71: dup
      72: ldc           #16                 // String Internal TLS error, this could be an attack
      74: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iload_3
      79: ifne          87
      82: aload_0
      83: iconst_0
      84: invokevirtual #741                // Method handleClose:(Z)V
      87: aload_0
      88: iload_3
      89: invokevirtual #737                // Method handleWarningMessage:(S)V
      92: goto          0
      95: return

  private void processChangeCipherSpec(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     94
       9: aload_1
      10: iload_2
      11: iload         4
      13: iadd
      14: invokestatic  #764                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      17: istore        5
      19: iload         5
      21: iconst_1
      22: if_icmpeq     35
      25: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      28: dup
      29: bipush        50
      31: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      34: athrow
      35: aload_0
      36: getfield      #624                // Field receivedChangeCipherSpec:Z
      39: ifne          62
      42: aload_0
      43: getfield      #636                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      46: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      49: ifgt          62
      52: aload_0
      53: getfield      #638                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      56: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      59: ifle          72
      62: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      65: dup
      66: bipush        10
      68: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      71: athrow
      72: aload_0
      73: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      76: invokevirtual #695                // Method org/bouncycastle/crypto/tls/RecordStream.receivedReadCipherSpec:()V
      79: aload_0
      80: iconst_1
      81: putfield      #624                // Field receivedChangeCipherSpec:Z
      84: aload_0
      85: invokevirtual #731                // Method handleChangeCipherSpecMessage:()V
      88: iinc          4, 1
      91: goto          3
      94: return

  protected int applicationDataAvailable();
    Code:
       0: aload_0
       1: getfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       4: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       7: ireturn

  protected int readApplicationData(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      11: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      14: ifne          50
      17: aload_0
      18: getfield      #621                // Field closed:Z
      21: ifeq          43
      24: aload_0
      25: getfield      #623                // Field failedWithError:Z
      28: ifeq          41
      31: new           #337                // class java/io/IOException
      34: dup
      35: ldc           #16                 // String Internal TLS error, this could be an attack
      37: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iconst_m1
      42: ireturn
      43: aload_0
      44: invokevirtual #736                // Method safeReadRecord:()V
      47: goto          7
      50: iload_3
      51: aload_0
      52: getfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      55: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      58: invokestatic  #659                // Method java/lang/Math.min:(II)I
      61: istore_3
      62: aload_0
      63: getfield      #637                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      66: aload_1
      67: iload_2
      68: iload_3
      69: iconst_0
      70: invokevirtual #680                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:([BIII)V
      73: iload_3
      74: ireturn

  protected void safeReadRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #698                // Method org/bouncycastle/crypto/tls/RecordStream.readRecord:()Z
       7: ifne          18
      10: new           #336                // class java/io/EOFException
      13: dup
      14: invokespecial #654                // Method java/io/EOFException."<init>":()V
      17: athrow
      18: goto          83
      21: astore_1
      22: aload_0
      23: getfield      #621                // Field closed:Z
      26: ifne          41
      29: aload_0
      30: iconst_2
      31: aload_1
      32: invokevirtual #724                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      35: ldc           #14                 // String Failed to read record
      37: aload_1
      38: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      41: aload_1
      42: athrow
      43: astore_1
      44: aload_0
      45: getfield      #621                // Field closed:Z
      48: ifne          61
      51: aload_0
      52: iconst_2
      53: bipush        80
      55: ldc           #14                 // String Failed to read record
      57: aload_1
      58: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      61: aload_1
      62: athrow
      63: astore_1
      64: aload_0
      65: getfield      #621                // Field closed:Z
      68: ifne          81
      71: aload_0
      72: iconst_2
      73: bipush        80
      75: ldc           #14                 // String Failed to read record
      77: aload_1
      78: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      81: aload_1
      82: athrow
      83: return
    Exception table:
       from    to  target type
           0    18    21   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0    18    43   Class java/io/IOException
           0    18    63   Class java/lang/RuntimeException

  protected void safeWriteRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: iload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #700                // Method org/bouncycastle/crypto/tls/RecordStream.writeRecord:(S[BII)V
      12: goto          87
      15: astore        5
      17: aload_0
      18: getfield      #621                // Field closed:Z
      21: ifne          38
      24: aload_0
      25: iconst_2
      26: aload         5
      28: invokevirtual #724                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      31: ldc           #15                 // String Failed to write record
      33: aload         5
      35: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      38: aload         5
      40: athrow
      41: astore        5
      43: aload_0
      44: getfield      #621                // Field closed:Z
      47: ifne          61
      50: aload_0
      51: iconst_2
      52: bipush        80
      54: ldc           #15                 // String Failed to write record
      56: aload         5
      58: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      61: aload         5
      63: athrow
      64: astore        5
      66: aload_0
      67: getfield      #621                // Field closed:Z
      70: ifne          84
      73: aload_0
      74: iconst_2
      75: bipush        80
      77: ldc           #15                 // String Failed to write record
      79: aload         5
      81: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      84: aload         5
      86: athrow
      87: return
    Exception table:
       from    to  target type
           0    12    15   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0    12    41   Class java/io/IOException
           0    12    64   Class java/lang/RuntimeException

  protected void writeData(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #621                // Field closed:Z
       4: ifeq          34
       7: aload_0
       8: getfield      #623                // Field failedWithError:Z
      11: ifeq          24
      14: new           #337                // class java/io/IOException
      17: dup
      18: ldc           #16                 // String Internal TLS error, this could be an attack
      20: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #337                // class java/io/IOException
      27: dup
      28: ldc           #18                 // String Sorry, connection has been closed, you cannot write more data
      30: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_3
      35: ifle          100
      38: aload_0
      39: getfield      #627                // Field splitApplicationDataRecords:Z
      42: ifeq          60
      45: aload_0
      46: bipush        23
      48: aload_1
      49: iload_2
      50: iconst_1
      51: invokevirtual #739                // Method safeWriteRecord:(S[BII)V
      54: iinc          2, 1
      57: iinc          3, -1
      60: iload_3
      61: ifle          34
      64: iload_3
      65: aload_0
      66: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      69: invokevirtual #692                // Method org/bouncycastle/crypto/tls/RecordStream.getPlaintextLimit:()I
      72: invokestatic  #659                // Method java/lang/Math.min:(II)I
      75: istore        4
      77: aload_0
      78: bipush        23
      80: aload_1
      81: iload_2
      82: iload         4
      84: invokevirtual #739                // Method safeWriteRecord:(S[BII)V
      87: iload_2
      88: iload         4
      90: iadd
      91: istore_2
      92: iload_3
      93: iload         4
      95: isub
      96: istore_3
      97: goto          34
     100: return

  protected void writeHandshakeMessage(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          40
       4: iload_3
       5: aload_0
       6: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       9: invokevirtual #692                // Method org/bouncycastle/crypto/tls/RecordStream.getPlaintextLimit:()I
      12: invokestatic  #659                // Method java/lang/Math.min:(II)I
      15: istore        4
      17: aload_0
      18: bipush        22
      20: aload_1
      21: iload_2
      22: iload         4
      24: invokevirtual #739                // Method safeWriteRecord:(S[BII)V
      27: iload_2
      28: iload         4
      30: iadd
      31: istore_2
      32: iload_3
      33: iload         4
      35: isub
      36: istore_3
      37: goto          0
      40: return

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifne          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String Cannot use OutputStream in non-blocking mode! Use offerOutput() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #646                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      21: areturn

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifne          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #4                  // String Cannot use InputStream in non-blocking mode! Use offerInput() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #645                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      21: areturn

  public void offerInput(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #8                  // String Cannot use offerInput() in blocking mode! Use getInputStream() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #621                // Field closed:Z
      21: ifeq          34
      24: new           #337                // class java/io/IOException
      27: dup
      28: ldc           #13                 // String Connection is closed, cannot accept any more input
      30: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #639                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      38: aload_1
      39: invokevirtual #684                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.addBytes:([B)V
      42: aload_0
      43: getfield      #639                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      46: invokevirtual #681                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.available:()I
      49: iconst_5
      50: if_icmplt     95
      53: iconst_5
      54: newarray       byte
      56: astore_2
      57: aload_0
      58: getfield      #639                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      61: aload_2
      62: invokevirtual #683                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.peek:([B)I
      65: pop
      66: aload_2
      67: iconst_3
      68: invokestatic  #762                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:([BI)I
      71: iconst_5
      72: iadd
      73: istore_3
      74: aload_0
      75: getfield      #639                // Field inputBuffers:Lorg/bouncycastle/crypto/tls/ByteQueueInputStream;
      78: invokevirtual #681                // Method org/bouncycastle/crypto/tls/ByteQueueInputStream.available:()I
      81: iload_3
      82: if_icmpge     88
      85: goto          95
      88: aload_0
      89: invokevirtual #736                // Method safeReadRecord:()V
      92: goto          42
      95: return

  public int getAvailableInputBytes();
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #6                  // String Cannot use getAvailableInputBytes() in blocking mode! Use getInputStream().available() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #728                // Method applicationDataAvailable:()I
      21: ireturn

  public int readInput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #10                 // String Cannot use readInput() in blocking mode! Use getInputStream() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: iload_2
      20: iload_3
      21: aload_0
      22: invokevirtual #728                // Method applicationDataAvailable:()I
      25: invokestatic  #659                // Method java/lang/Math.min:(II)I
      28: invokevirtual #743                // Method readApplicationData:([BII)I
      31: ireturn
      32: astore        4
      34: new           #342                // class java/lang/RuntimeException
      37: dup
      38: aload         4
      40: invokevirtual #655                // Method java/io/IOException.toString:()Ljava/lang/String;
      43: invokespecial #661                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      46: athrow
    Exception table:
       from    to  target type
          17    31    32   Class java/io/IOException

  public void offerOutput(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #9                  // String Cannot use offerOutput() in blocking mode! Use getOutputStream() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #619                // Field appDataReady:Z
      21: ifne          34
      24: new           #337                // class java/io/IOException
      27: dup
      28: ldc           #3                  // String Application data cannot be sent until the handshake is complete!
      30: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload_3
      38: invokevirtual #745                // Method writeData:([BII)V
      41: return

  public int getAvailableOutputBytes();
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #7                  // String Cannot use getAvailableOutputBytes() in blocking mode! Use getOutputStream() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #640                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
      21: invokevirtual #686                // Method org/bouncycastle/crypto/tls/ByteQueueOutputStream.getBuffer:()Lorg/bouncycastle/crypto/tls/ByteQueue;
      24: invokevirtual #674                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      27: ireturn

  public int readOutput(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #620                // Field blocking:Z
       4: ifeq          17
       7: new           #338                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #11                 // String Cannot use readOutput() in blocking mode! Use getOutputStream() instead.
      13: invokespecial #657                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #729                // Method getAvailableOutputBytes:()I
      21: iload_3
      22: invokestatic  #659                // Method java/lang/Math.min:(II)I
      25: istore        4
      27: aload_0
      28: getfield      #640                // Field outputBuffer:Lorg/bouncycastle/crypto/tls/ByteQueueOutputStream;
      31: invokevirtual #686                // Method org/bouncycastle/crypto/tls/ByteQueueOutputStream.getBuffer:()Lorg/bouncycastle/crypto/tls/ByteQueue;
      34: aload_1
      35: iload_2
      36: iload         4
      38: iconst_0
      39: invokevirtual #680                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:([BIII)V
      42: iload         4
      44: ireturn

  protected void failWithError(short, short, java.lang.String, java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #621                // Field closed:Z
       4: ifne          48
       7: aload_0
       8: iconst_1
       9: putfield      #621                // Field closed:Z
      12: iload_1
      13: iconst_2
      14: if_icmpne     26
      17: aload_0
      18: invokevirtual #732                // Method invalidateSession:()V
      21: aload_0
      22: iconst_1
      23: putfield      #623                // Field failedWithError:Z
      26: aload_0
      27: iload_1
      28: iload_2
      29: aload_3
      30: aload         4
      32: invokevirtual #752                // Method raiseAlert:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      35: aload_0
      36: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      39: invokevirtual #696                // Method org/bouncycastle/crypto/tls/RecordStream.safeClose:()V
      42: iload_1
      43: iconst_2
      44: if_icmpeq     48
      47: return
      48: new           #337                // class java/io/IOException
      51: dup
      52: ldc           #16                 // String Internal TLS error, this could be an attack
      54: invokespecial #656                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow

  protected void invalidateSession();
    Code:
       0: aload_0
       1: getfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
       4: ifnull        19
       7: aload_0
       8: getfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      11: invokevirtual #710                // Method org/bouncycastle/crypto/tls/SessionParameters.clear:()V
      14: aload_0
      15: aconst_null
      16: putfield      #644                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      19: aload_0
      20: getfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      23: ifnull        40
      26: aload_0
      27: getfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      30: invokeinterface #795,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSession.invalidate:()V
      35: aload_0
      36: aconst_null
      37: putfield      #647                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      40: return

  protected void processFinishedMessage(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #628                // Field expected_verify_data:[B
       4: ifnonnull     17
       7: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        80
      13: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: aload_0
      18: getfield      #628                // Field expected_verify_data:[B
      21: arraylength
      22: aload_1
      23: invokestatic  #766                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      26: astore_2
      27: aload_1
      28: invokestatic  #746                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      31: aload_0
      32: getfield      #628                // Field expected_verify_data:[B
      35: aload_2
      36: invokestatic  #779                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
      39: ifne          52
      42: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      45: dup
      46: bipush        51
      48: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      51: athrow
      52: return

  protected void raiseAlert(short, short, java.lang.String, java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #750                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
       4: iload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #794,  5          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertRaised:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      14: iconst_2
      15: newarray       byte
      17: astore        5
      19: aload         5
      21: iconst_0
      22: iload_1
      23: i2b
      24: bastore
      25: aload         5
      27: iconst_1
      28: iload_2
      29: i2b
      30: bastore
      31: aload_0
      32: bipush        21
      34: aload         5
      36: iconst_0
      37: iconst_2
      38: invokevirtual #739                // Method safeWriteRecord:(S[BII)V
      41: return

  protected void raiseWarning(short, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: aload_2
       4: aconst_null
       5: invokevirtual #752                // Method raiseAlert:(SSLjava/lang/String;Ljava/lang/Throwable;)V
       8: return

  protected void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #614                // Field org/bouncycastle/crypto/tls/Certificate.EMPTY_CHAIN:Lorg/bouncycastle/crypto/tls/Certificate;
       7: astore_1
       8: aload_1
       9: invokevirtual #687                // Method org/bouncycastle/crypto/tls/Certificate.isEmpty:()Z
      12: ifeq          79
      15: aload_0
      16: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      19: astore_2
      20: aload_2
      21: invokeinterface #787,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
      26: ifne          79
      29: aload_0
      30: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      33: invokeinterface #788,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      38: astore_3
      39: aload_3
      40: invokevirtual #690                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
      43: ifeq          79
      46: new           #343                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #662                // Method java/lang/StringBuilder."<init>":()V
      53: aload_3
      54: invokevirtual #691                // Method org/bouncycastle/crypto/tls/ProtocolVersion.toString:()Ljava/lang/String;
      57: invokevirtual #664                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #2                  // String  client didn\'t provide credentials
      62: invokevirtual #664                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #663                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore        4
      70: aload_0
      71: bipush        41
      73: aload         4
      75: invokevirtual #747                // Method raiseWarning:(SLjava/lang/String;)V
      78: return
      79: new           #370                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
      82: dup
      83: aload_0
      84: bipush        11
      86: invokespecial #757                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;S)V
      89: astore_2
      90: aload_1
      91: aload_2
      92: invokevirtual #688                // Method org/bouncycastle/crypto/tls/Certificate.encode:(Ljava/io/OutputStream;)V
      95: aload_2
      96: invokevirtual #755                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      99: return

  protected void sendChangeCipherSpecMessage() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_1
       6: bastore
       7: astore_1
       8: aload_0
       9: bipush        20
      11: aload_1
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokevirtual #739                // Method safeWriteRecord:(S[BII)V
      18: aload_0
      19: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      22: invokevirtual #697                // Method org/bouncycastle/crypto/tls/RecordStream.sentWriteCipherSpec:()V
      25: return

  protected void sendFinishedMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       5: invokeinterface #787,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
      10: invokevirtual #742                // Method createVerifyData:(Z)[B
      13: astore_1
      14: new           #370                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
      17: dup
      18: aload_0
      19: bipush        20
      21: aload_1
      22: arraylength
      23: invokespecial #758                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;SI)V
      26: astore_2
      27: aload_2
      28: aload_1
      29: invokevirtual #756                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.write:([B)V
      32: aload_2
      33: invokevirtual #755                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      36: return

  protected void sendSupplementalDataMessage(java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #370                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
       3: dup
       4: aload_0
       5: bipush        23
       7: invokespecial #757                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;S)V
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokestatic  #753                // Method writeSupplementalData:(Ljava/io/OutputStream;Ljava/util/Vector;)V
      16: aload_2
      17: invokevirtual #755                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      20: return

  protected byte[] createVerifyData(boolean);
    Code:
       0: aload_0
       1: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       4: astore_2
       5: iload_1
       6: ifeq          14
       9: ldc           #21                 // String server finished
      11: goto          16
      14: ldc           #20                 // String client finished
      16: astore_3
      17: iload_1
      18: ifeq          27
      21: getstatic     #649                // Field org/bouncycastle/crypto/tls/TlsUtils.SSL_SERVER:[B
      24: goto          30
      27: getstatic     #648                // Field org/bouncycastle/crypto/tls/TlsUtils.SSL_CLIENT:[B
      30: astore        4
      32: aload_2
      33: aload_0
      34: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      37: invokevirtual #702                // Method org/bouncycastle/crypto/tls/RecordStream.getHandshakeHash:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      40: aload         4
      42: invokestatic  #754                // Method getCurrentPRFHash:(Lorg/bouncycastle/crypto/tls/TlsContext;Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;[B)[B
      45: astore        5
      47: aload_2
      48: aload_3
      49: aload         5
      51: invokestatic  #777                // Method org/bouncycastle/crypto/tls/TlsUtils.calculateVerifyData:(Lorg/bouncycastle/crypto/tls/TlsContext;Ljava/lang/String;[B)[B
      54: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #741                // Method handleClose:(Z)V
       5: return

  protected void handleClose(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #621                // Field closed:Z
       4: ifne          35
       7: iload_1
       8: ifeq          26
      11: aload_0
      12: getfield      #619                // Field appDataReady:Z
      15: ifne          26
      18: aload_0
      19: bipush        90
      21: ldc           #19                 // String User canceled handshake
      23: invokevirtual #747                // Method raiseWarning:(SLjava/lang/String;)V
      26: aload_0
      27: iconst_1
      28: iconst_0
      29: ldc           #12                 // String Connection closed
      31: aconst_null
      32: invokevirtual #751                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      35: return

  protected void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #642                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #694                // Method org/bouncycastle/crypto/tls/RecordStream.flush:()V
       7: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #621                // Field closed:Z
       4: ireturn

  protected short processMaxFragmentLengthExtension(java.util.Hashtable, java.util.Hashtable, short) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #723                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
       4: istore        4
       6: iload         4
       8: iflt          44
      11: iload         4
      13: invokestatic  #689                // Method org/bouncycastle/crypto/tls/MaxFragmentLength.isValid:(S)Z
      16: ifeq          35
      19: aload_0
      20: getfield      #625                // Field resumedSession:Z
      23: ifne          44
      26: iload         4
      28: aload_1
      29: invokestatic  #723                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
      32: if_icmpeq     44
      35: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      38: dup
      39: iload_3
      40: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      43: athrow
      44: iload         4
      46: ireturn

  protected void refuseRenegotiation() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #749                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       4: invokestatic  #773                // Method org/bouncycastle/crypto/tls/TlsUtils.isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       7: ifeq          20
      10: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      13: dup
      14: bipush        40
      16: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      19: athrow
      20: aload_0
      21: bipush        100
      23: ldc           #17                 // String Renegotiation not supported
      25: invokevirtual #747                // Method raiseWarning:(SLjava/lang/String;)V
      28: return

  protected static void assertEmpty(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #650                // Method java/io/ByteArrayInputStream.available:()I
       4: ifle          17
       7: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        50
      13: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  protected static byte[] createRandomBlock(boolean, org.bouncycastle.crypto.prng.RandomGenerator);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokeinterface #786,  2          // InterfaceMethod org/bouncycastle/crypto/prng/RandomGenerator.nextBytes:([B)V
      12: iload_0
      13: ifeq          21
      16: aload_2
      17: iconst_0
      18: invokestatic  #765                // Method org/bouncycastle/crypto/tls/TlsUtils.writeGMTUnixTime:([BI)V
      21: aload_2
      22: areturn

  protected static byte[] createRenegotiationInfo(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #761                // Method org/bouncycastle/crypto/tls/TlsUtils.encodeOpaque8:([B)[B
       4: areturn

  protected static void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsKeyExchange) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #791,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsKeyExchange.generatePremasterSecret:()[B
       6: astore_2
       7: aload_0
       8: invokeinterface #789,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      13: aload_0
      14: aload_2
      15: invokestatic  #776                // Method org/bouncycastle/crypto/tls/TlsUtils.calculateMasterSecret:(Lorg/bouncycastle/crypto/tls/TlsContext;[B)[B
      18: putfield      #616                // Field org/bouncycastle/crypto/tls/SecurityParameters.masterSecret:[B
      21: aload_2
      22: ifnull        45
      25: aload_2
      26: iconst_0
      27: invokestatic  #778                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      30: goto          45
      33: astore_3
      34: aload_2
      35: ifnull        43
      38: aload_2
      39: iconst_0
      40: invokestatic  #778                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
           7    21    33   any
          33    34    33   any

  protected static byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsHandshakeHash, byte[]);
    Code:
       0: aload_1
       1: invokeinterface #790,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.forkPRFHash:()Lorg/bouncycastle/crypto/Digest;
       6: astore_3
       7: aload_2
       8: ifnull        28
      11: aload_0
      12: invokestatic  #773                // Method org/bouncycastle/crypto/tls/TlsUtils.isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      15: ifeq          28
      18: aload_3
      19: aload_2
      20: iconst_0
      21: aload_2
      22: arraylength
      23: invokeinterface #785,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      28: aload_3
      29: invokeinterface #783,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      34: newarray       byte
      36: astore        4
      38: aload_3
      39: aload         4
      41: iconst_0
      42: invokeinterface #784,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      47: pop
      48: aload         4
      50: areturn

  protected static java.util.Hashtable readExtensions(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #650                // Method java/io/ByteArrayInputStream.available:()I
       4: iconst_1
       5: if_icmpge     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: invokestatic  #768                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      14: astore_1
      15: aload_0
      16: invokestatic  #746                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      19: new           #334                // class java/io/ByteArrayInputStream
      22: dup
      23: aload_1
      24: invokespecial #651                // Method java/io/ByteArrayInputStream."<init>":([B)V
      27: astore_2
      28: new           #345                // class java/util/Hashtable
      31: dup
      32: invokespecial #665                // Method java/util/Hashtable."<init>":()V
      35: astore_3
      36: aload_2
      37: invokevirtual #650                // Method java/io/ByteArrayInputStream.available:()I
      40: ifle          83
      43: aload_2
      44: invokestatic  #767                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      47: invokestatic  #780                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      50: astore        4
      52: aload_2
      53: invokestatic  #768                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      56: astore        5
      58: aconst_null
      59: aload_3
      60: aload         4
      62: aload         5
      64: invokevirtual #668                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: if_acmpeq     80
      70: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      73: dup
      74: bipush        47
      76: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      79: athrow
      80: goto          36
      83: aload_3
      84: areturn

  protected static java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #769                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque24:(Ljava/io/InputStream;)[B
       4: astore_1
       5: aload_0
       6: invokestatic  #746                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
       9: new           #334                // class java/io/ByteArrayInputStream
      12: dup
      13: aload_1
      14: invokespecial #651                // Method java/io/ByteArrayInputStream."<init>":([B)V
      17: astore_2
      18: new           #346                // class java/util/Vector
      21: dup
      22: invokespecial #670                // Method java/util/Vector."<init>":()V
      25: astore_3
      26: aload_2
      27: invokevirtual #650                // Method java/io/ByteArrayInputStream.available:()I
      30: ifle          63
      33: aload_2
      34: invokestatic  #767                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      37: istore        4
      39: aload_2
      40: invokestatic  #768                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      43: astore        5
      45: aload_3
      46: new           #360                // class org/bouncycastle/crypto/tls/SupplementalDataEntry
      49: dup
      50: iload         4
      52: aload         5
      54: invokespecial #722                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry."<init>":(I[B)V
      57: invokevirtual #672                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      60: goto          26
      63: aload_3
      64: areturn

  protected static void writeExtensions(java.io.OutputStream, java.util.Hashtable) throws java.io.IOException;
    Code:
       0: new           #335                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #652                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #666                // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      12: astore_3
      13: aload_3
      14: invokeinterface #781,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          74
      22: aload_3
      23: invokeinterface #782,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: checkcast     #339                // class java/lang/Integer
      31: astore        4
      33: aload         4
      35: invokevirtual #658                // Method java/lang/Integer.intValue:()I
      38: istore        5
      40: aload_1
      41: aload         4
      43: invokevirtual #667                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #333                // class "[B"
      49: checkcast     #333                // class "[B"
      52: astore        6
      54: iload         5
      56: invokestatic  #760                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      59: iload         5
      61: aload_2
      62: invokestatic  #770                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      65: aload         6
      67: aload_2
      68: invokestatic  #771                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      71: goto          13
      74: aload_2
      75: invokevirtual #653                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      78: astore        4
      80: aload         4
      82: aload_0
      83: invokestatic  #771                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      86: return

  protected static void writeSupplementalData(java.io.OutputStream, java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #335                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #652                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: invokevirtual #669                // Method java/util/Vector.size:()I
      15: if_icmpge     61
      18: aload_1
      19: iload_3
      20: invokevirtual #671                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      23: checkcast     #360                // class org/bouncycastle/crypto/tls/SupplementalDataEntry
      26: astore        4
      28: aload         4
      30: invokevirtual #720                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry.getDataType:()I
      33: istore        5
      35: iload         5
      37: invokestatic  #760                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      40: iload         5
      42: aload_2
      43: invokestatic  #770                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      46: aload         4
      48: invokevirtual #721                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry.getData:()[B
      51: aload_2
      52: invokestatic  #771                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      55: iinc          3, 1
      58: goto          10
      61: aload_2
      62: invokevirtual #653                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      65: astore_3
      66: aload_3
      67: aload_0
      68: invokestatic  #772                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque24:([BLjava/io/OutputStream;)V
      71: return

  protected static int getPRFAlgorithm(org.bouncycastle.crypto.tls.TlsContext, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #775                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       4: istore_2
       5: iload_1
       6: lookupswitch  { // 124
                    59: 1008
                    60: 1008
                    61: 1008
                    62: 1008
                    63: 1008
                    64: 1008
                   103: 1008
                   104: 1008
                   105: 1008
                   106: 1008
                   107: 1008
                   156: 1008
                   157: 1024
                   158: 1008
                   159: 1024
                   160: 1008
                   161: 1024
                   162: 1008
                   163: 1024
                   164: 1008
                   165: 1024
                   168: 1008
                   169: 1024
                   170: 1008
                   171: 1024
                   172: 1008
                   173: 1024
                   175: 1040
                   177: 1040
                   179: 1040
                   181: 1040
                   183: 1040
                   185: 1040
                   186: 1008
                   187: 1008
                   188: 1008
                   189: 1008
                   190: 1008
                   191: 1008
                   192: 1008
                   193: 1008
                   194: 1008
                   195: 1008
                   196: 1008
                   197: 1008
                 49187: 1008
                 49188: 1024
                 49189: 1008
                 49190: 1024
                 49191: 1008
                 49192: 1024
                 49193: 1008
                 49194: 1024
                 49195: 1008
                 49196: 1024
                 49197: 1008
                 49198: 1024
                 49199: 1008
                 49200: 1024
                 49201: 1008
                 49202: 1024
                 49208: 1040
                 49211: 1040
                 49266: 1008
                 49267: 1024
                 49268: 1008
                 49269: 1024
                 49270: 1008
                 49271: 1024
                 49272: 1008
                 49273: 1024
                 49274: 1008
                 49275: 1024
                 49276: 1008
                 49277: 1024
                 49278: 1008
                 49279: 1024
                 49280: 1008
                 49281: 1024
                 49282: 1008
                 49283: 1024
                 49284: 1008
                 49285: 1024
                 49286: 1008
                 49287: 1024
                 49288: 1008
                 49289: 1024
                 49290: 1008
                 49291: 1024
                 49292: 1008
                 49293: 1024
                 49294: 1008
                 49295: 1024
                 49296: 1008
                 49297: 1024
                 49298: 1008
                 49299: 1024
                 49301: 1040
                 49303: 1040
                 49305: 1040
                 49307: 1040
                 49308: 1008
                 49309: 1008
                 49310: 1008
                 49311: 1008
                 49312: 1008
                 49313: 1008
                 49314: 1008
                 49315: 1008
                 49316: 1008
                 49317: 1008
                 49318: 1008
                 49319: 1008
                 49320: 1008
                 49321: 1008
                 49322: 1008
                 49323: 1008
                 49324: 1008
                 49325: 1008
                 49326: 1008
                 49327: 1008
                 52243: 1008
                 52244: 1008
                 52245: 1008
               default: 1048
          }
    1008: iload_2
    1009: ifeq          1014
    1012: iconst_1
    1013: ireturn
    1014: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1017: dup
    1018: bipush        47
    1020: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1023: athrow
    1024: iload_2
    1025: ifeq          1030
    1028: iconst_2
    1029: ireturn
    1030: new           #363                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1033: dup
    1034: bipush        47
    1036: invokespecial #725                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1039: athrow
    1040: iload_2
    1041: ifeq          1046
    1044: iconst_2
    1045: ireturn
    1046: iconst_0
    1047: ireturn
    1048: iload_2
    1049: ifeq          1054
    1052: iconst_1
    1053: ireturn
    1054: iconst_0
    1055: ireturn

  static {};
    Code:
       0: ldc           #1                  // int 65281
       2: invokestatic  #780                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       5: putstatic     #631                // Field EXT_RenegotiationInfo:Ljava/lang/Integer;
       8: bipush        35
      10: invokestatic  #780                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      13: putstatic     #632                // Field EXT_SessionTicket:Ljava/lang/Integer;
      16: return
}
