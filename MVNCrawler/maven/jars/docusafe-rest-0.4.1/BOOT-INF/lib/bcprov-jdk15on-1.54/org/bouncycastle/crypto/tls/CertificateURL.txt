public class org.bouncycastle.crypto.tls.CertificateURL {
  protected short type;

  protected java.util.Vector urlAndHashList;

  public org.bouncycastle.crypto.tls.CertificateURL(short, java.util.Vector);
    Code:
       0: aload_0
       1: invokespecial #93                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: invokestatic  #99                 // Method org/bouncycastle/crypto/tls/CertChainType.isValid:(S)Z
       8: ifne          21
      11: new           #44                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #1                  // String \'type\' is not a valid CertChainType value
      17: invokespecial #92                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_2
      22: ifnull        32
      25: aload_2
      26: invokevirtual #96                 // Method java/util/Vector.isEmpty:()Z
      29: ifeq          42
      32: new           #44                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #2                  // String \'urlAndHashList\' must have length > 0
      38: invokespecial #92                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: iload_1
      44: putfield      #88                 // Field type:S
      47: aload_0
      48: aload_2
      49: putfield      #89                 // Field urlAndHashList:Ljava/util/Vector;
      52: return

  public short getType();
    Code:
       0: aload_0
       1: getfield      #88                 // Field type:S
       4: ireturn

  public java.util.Vector getURLAndHashList();
    Code:
       0: aload_0
       1: getfield      #89                 // Field urlAndHashList:Ljava/util/Vector;
       4: areturn

  public void encode(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #88                 // Field type:S
       4: aload_1
       5: invokestatic  #107                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint8:(SLjava/io/OutputStream;)V
       8: new           #49                 // class org/bouncycastle/crypto/tls/CertificateURL$ListBuffer16
      11: dup
      12: aload_0
      13: invokespecial #102                // Method org/bouncycastle/crypto/tls/CertificateURL$ListBuffer16."<init>":(Lorg/bouncycastle/crypto/tls/CertificateURL;)V
      16: astore_2
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #89                 // Field urlAndHashList:Ljava/util/Vector;
      24: invokevirtual #94                 // Method java/util/Vector.size:()I
      27: if_icmpge     55
      30: aload_0
      31: getfield      #89                 // Field urlAndHashList:Ljava/util/Vector;
      34: iload_3
      35: invokevirtual #97                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      38: checkcast     #52                 // class org/bouncycastle/crypto/tls/URLAndHash
      41: astore        4
      43: aload         4
      45: aload_2
      46: invokevirtual #108                // Method org/bouncycastle/crypto/tls/URLAndHash.encode:(Ljava/io/OutputStream;)V
      49: iinc          3, 1
      52: goto          19
      55: aload_2
      56: aload_1
      57: invokevirtual #101                // Method org/bouncycastle/crypto/tls/CertificateURL$ListBuffer16.encodeTo:(Ljava/io/OutputStream;)V
      60: return

  public static org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #106                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:(Ljava/io/InputStream;)S
       4: istore_2
       5: iload_2
       6: invokestatic  #99                 // Method org/bouncycastle/crypto/tls/CertChainType.isValid:(S)Z
       9: ifne          22
      12: new           #50                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      15: dup
      16: bipush        50
      18: invokespecial #103                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      21: athrow
      22: aload_1
      23: invokestatic  #105                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      26: istore_3
      27: iload_3
      28: iconst_1
      29: if_icmpge     42
      32: new           #50                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      35: dup
      36: bipush        50
      38: invokespecial #103                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      41: athrow
      42: iload_3
      43: aload_1
      44: invokestatic  #104                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      47: astore        4
      49: new           #42                 // class java/io/ByteArrayInputStream
      52: dup
      53: aload         4
      55: invokespecial #91                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      58: astore        5
      60: new           #46                 // class java/util/Vector
      63: dup
      64: invokespecial #95                 // Method java/util/Vector."<init>":()V
      67: astore        6
      69: aload         5
      71: invokevirtual #90                 // Method java/io/ByteArrayInputStream.available:()I
      74: ifle          95
      77: aload_0
      78: aload         5
      80: invokestatic  #109                // Method org/bouncycastle/crypto/tls/URLAndHash.parse:(Lorg/bouncycastle/crypto/tls/TlsContext;Ljava/io/InputStream;)Lorg/bouncycastle/crypto/tls/URLAndHash;
      83: astore        7
      85: aload         6
      87: aload         7
      89: invokevirtual #98                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      92: goto          69
      95: new           #48                 // class org/bouncycastle/crypto/tls/CertificateURL
      98: dup
      99: iload_2
     100: aload         6
     102: invokespecial #100                // Method "<init>":(SLjava/util/Vector;)V
     105: areturn
}
