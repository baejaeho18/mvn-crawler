public class org.bouncycastle.crypto.modes.GCMBlockCipher implements org.bouncycastle.crypto.modes.AEADBlockCipher {
  private static final int BLOCK_SIZE;

  private org.bouncycastle.crypto.BlockCipher cipher;

  private org.bouncycastle.crypto.modes.gcm.GCMMultiplier multiplier;

  private org.bouncycastle.crypto.modes.gcm.GCMExponentiator exp;

  private boolean forEncryption;

  private int macSize;

  private byte[] nonce;

  private byte[] initialAssociatedText;

  private byte[] H;

  private byte[] J0;

  private byte[] bufBlock;

  private byte[] macBlock;

  private byte[] S;

  private byte[] S_at;

  private byte[] S_atPre;

  private byte[] counter;

  private int bufOff;

  private long totalLength;

  private byte[] atBlock;

  private int atBlockPos;

  private long atLength;

  private long atLengthPre;

  public org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #278                // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;)V
       6: return

  public org.bouncycastle.crypto.modes.GCMBlockCipher(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.modes.gcm.GCMMultiplier);
    Code:
       0: aload_0
       1: invokespecial #259                // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #294,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      10: bipush        16
      12: if_icmpeq     25
      15: new           #140                // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #7                  // String cipher required with a block size of 16.
      21: invokespecial #257                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_2
      26: ifnonnull     37
      29: new           #156                // class org/bouncycastle/crypto/modes/gcm/Tables8kGCMMultiplier
      32: dup
      33: invokespecial #283                // Method org/bouncycastle/crypto/modes/gcm/Tables8kGCMMultiplier."<init>":()V
      36: astore_2
      37: aload_0
      38: aload_1
      39: putfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      42: aload_0
      43: aload_2
      44: putfield      #256                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      47: return

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: areturn

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #144                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #260                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #297,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /GCM
      21: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #242                // Field forEncryption:Z
       5: aload_0
       6: aconst_null
       7: putfield      #252                // Field macBlock:[B
      10: aload_2
      11: instanceof    #157                // class org/bouncycastle/crypto/params/AEADParameters
      14: ifeq          117
      17: aload_2
      18: checkcast     #157                // class org/bouncycastle/crypto/params/AEADParameters
      21: astore        4
      23: aload_0
      24: aload         4
      26: invokevirtual #286                // Method org/bouncycastle/crypto/params/AEADParameters.getNonce:()[B
      29: putfield      #253                // Field nonce:[B
      32: aload_0
      33: aload         4
      35: invokevirtual #285                // Method org/bouncycastle/crypto/params/AEADParameters.getAssociatedText:()[B
      38: putfield      #251                // Field initialAssociatedText:[B
      41: aload         4
      43: invokevirtual #284                // Method org/bouncycastle/crypto/params/AEADParameters.getMacSize:()I
      46: istore        5
      48: iload         5
      50: bipush        32
      52: if_icmplt     71
      55: iload         5
      57: sipush        128
      60: if_icmpgt     71
      63: iload         5
      65: bipush        8
      67: irem
      68: ifeq          99
      71: new           #140                // class java/lang/IllegalArgumentException
      74: dup
      75: new           #144                // class java/lang/StringBuilder
      78: dup
      79: invokespecial #260                // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #4                  // String Invalid value for MAC size:
      84: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: iload         5
      89: invokevirtual #262                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      92: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #257                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: iload         5
     102: bipush        8
     104: idiv
     105: putfield      #238                // Field macSize:I
     108: aload         4
     110: invokevirtual #287                // Method org/bouncycastle/crypto/params/AEADParameters.getKey:()Lorg/bouncycastle/crypto/params/KeyParameter;
     113: astore_3
     114: goto          172
     117: aload_2
     118: instanceof    #159                // class org/bouncycastle/crypto/params/ParametersWithIV
     121: ifeq          162
     124: aload_2
     125: checkcast     #159                // class org/bouncycastle/crypto/params/ParametersWithIV
     128: astore        4
     130: aload_0
     131: aload         4
     133: invokevirtual #288                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
     136: putfield      #253                // Field nonce:[B
     139: aload_0
     140: aconst_null
     141: putfield      #251                // Field initialAssociatedText:[B
     144: aload_0
     145: bipush        16
     147: putfield      #238                // Field macSize:I
     150: aload         4
     152: invokevirtual #289                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     155: checkcast     #158                // class org/bouncycastle/crypto/params/KeyParameter
     158: astore_3
     159: goto          172
     162: new           #140                // class java/lang/IllegalArgumentException
     165: dup
     166: ldc           #9                  // String invalid parameters passed to GCM
     168: invokespecial #257                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     171: athrow
     172: iload_1
     173: ifeq          181
     176: bipush        16
     178: goto          188
     181: bipush        16
     183: aload_0
     184: getfield      #238                // Field macSize:I
     187: iadd
     188: istore        4
     190: aload_0
     191: iload         4
     193: newarray       byte
     195: putfield      #249                // Field bufBlock:[B
     198: aload_0
     199: getfield      #253                // Field nonce:[B
     202: ifnull        214
     205: aload_0
     206: getfield      #253                // Field nonce:[B
     209: arraylength
     210: iconst_1
     211: if_icmpge     224
     214: new           #140                // class java/lang/IllegalArgumentException
     217: dup
     218: ldc           #2                  // String IV must be at least 1 byte
     220: invokespecial #257                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: aload_3
     225: ifnull        288
     228: aload_0
     229: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     232: iconst_1
     233: aload_3
     234: invokeinterface #298,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     239: aload_0
     240: bipush        16
     242: newarray       byte
     244: putfield      #243                // Field H:[B
     247: aload_0
     248: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     251: aload_0
     252: getfield      #243                // Field H:[B
     255: iconst_0
     256: aload_0
     257: getfield      #243                // Field H:[B
     260: iconst_0
     261: invokeinterface #296,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     266: pop
     267: aload_0
     268: getfield      #256                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
     271: aload_0
     272: getfield      #243                // Field H:[B
     275: invokeinterface #301,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.init:([B)V
     280: aload_0
     281: aconst_null
     282: putfield      #255                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     285: goto          305
     288: aload_0
     289: getfield      #243                // Field H:[B
     292: ifnonnull     305
     295: new           #140                // class java/lang/IllegalArgumentException
     298: dup
     299: ldc           #5                  // String Key must be specified in initial init
     301: invokespecial #257                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     304: athrow
     305: aload_0
     306: bipush        16
     308: newarray       byte
     310: putfield      #244                // Field J0:[B
     313: aload_0
     314: getfield      #253                // Field nonce:[B
     317: arraylength
     318: bipush        12
     320: if_icmpne     352
     323: aload_0
     324: getfield      #253                // Field nonce:[B
     327: iconst_0
     328: aload_0
     329: getfield      #244                // Field J0:[B
     332: iconst_0
     333: aload_0
     334: getfield      #253                // Field nonce:[B
     337: arraylength
     338: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     341: aload_0
     342: getfield      #244                // Field J0:[B
     345: bipush        15
     347: iconst_1
     348: bastore
     349: goto          402
     352: aload_0
     353: aload_0
     354: getfield      #244                // Field J0:[B
     357: aload_0
     358: getfield      #253                // Field nonce:[B
     361: aload_0
     362: getfield      #253                // Field nonce:[B
     365: arraylength
     366: invokespecial #276                // Method gHASH:([B[BI)V
     369: bipush        16
     371: newarray       byte
     373: astore        5
     375: aload_0
     376: getfield      #253                // Field nonce:[B
     379: arraylength
     380: i2l
     381: ldc2_w        #134                // long 8l
     384: lmul
     385: aload         5
     387: bipush        8
     389: invokestatic  #293                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     392: aload_0
     393: aload_0
     394: getfield      #244                // Field J0:[B
     397: aload         5
     399: invokespecial #274                // Method gHASHBlock:([B[B)V
     402: aload_0
     403: bipush        16
     405: newarray       byte
     407: putfield      #245                // Field S:[B
     410: aload_0
     411: bipush        16
     413: newarray       byte
     415: putfield      #246                // Field S_at:[B
     418: aload_0
     419: bipush        16
     421: newarray       byte
     423: putfield      #247                // Field S_atPre:[B
     426: aload_0
     427: bipush        16
     429: newarray       byte
     431: putfield      #248                // Field atBlock:[B
     434: aload_0
     435: iconst_0
     436: putfield      #236                // Field atBlockPos:I
     439: aload_0
     440: lconst_0
     441: putfield      #239                // Field atLength:J
     444: aload_0
     445: lconst_0
     446: putfield      #240                // Field atLengthPre:J
     449: aload_0
     450: aload_0
     451: getfield      #244                // Field J0:[B
     454: invokestatic  #290                // Method org/bouncycastle/util/Arrays.clone:([B)[B
     457: putfield      #250                // Field counter:[B
     460: aload_0
     461: iconst_0
     462: putfield      #237                // Field bufOff:I
     465: aload_0
     466: lconst_0
     467: putfield      #241                // Field totalLength:J
     470: aload_0
     471: getfield      #251                // Field initialAssociatedText:[B
     474: ifnull        491
     477: aload_0
     478: aload_0
     479: getfield      #251                // Field initialAssociatedText:[B
     482: iconst_0
     483: aload_0
     484: getfield      #251                // Field initialAssociatedText:[B
     487: arraylength
     488: invokevirtual #272                // Method processAADBytes:([BII)V
     491: return

  public byte[] getMac();
    Code:
       0: aload_0
       1: getfield      #252                // Field macBlock:[B
       4: invokestatic  #290                // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public int getOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #237                // Field bufOff:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #242                // Field forEncryption:Z
      11: ifeq          21
      14: iload_2
      15: aload_0
      16: getfield      #238                // Field macSize:I
      19: iadd
      20: ireturn
      21: iload_2
      22: aload_0
      23: getfield      #238                // Field macSize:I
      26: if_icmpge     33
      29: iconst_0
      30: goto          39
      33: iload_2
      34: aload_0
      35: getfield      #238                // Field macSize:I
      38: isub
      39: ireturn

  public int getUpdateOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #237                // Field bufOff:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #242                // Field forEncryption:Z
      11: ifne          31
      14: iload_2
      15: aload_0
      16: getfield      #238                // Field macSize:I
      19: if_icmpge     24
      22: iconst_0
      23: ireturn
      24: iload_2
      25: aload_0
      26: getfield      #238                // Field macSize:I
      29: isub
      30: istore_2
      31: iload_2
      32: iload_2
      33: bipush        16
      35: irem
      36: isub
      37: ireturn

  public void processAADByte(byte);
    Code:
       0: aload_0
       1: getfield      #248                // Field atBlock:[B
       4: aload_0
       5: getfield      #236                // Field atBlockPos:I
       8: iload_1
       9: bastore
      10: aload_0
      11: dup
      12: getfield      #236                // Field atBlockPos:I
      15: iconst_1
      16: iadd
      17: dup_x1
      18: putfield      #236                // Field atBlockPos:I
      21: bipush        16
      23: if_icmpne     55
      26: aload_0
      27: aload_0
      28: getfield      #246                // Field S_at:[B
      31: aload_0
      32: getfield      #248                // Field atBlock:[B
      35: invokespecial #274                // Method gHASHBlock:([B[B)V
      38: aload_0
      39: iconst_0
      40: putfield      #236                // Field atBlockPos:I
      43: aload_0
      44: dup
      45: getfield      #239                // Field atLength:J
      48: ldc2_w        #136                // long 16l
      51: ladd
      52: putfield      #239                // Field atLength:J
      55: return

  public void processAADBytes(byte[], int, int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     75
       9: aload_0
      10: getfield      #248                // Field atBlock:[B
      13: aload_0
      14: getfield      #236                // Field atBlockPos:I
      17: aload_1
      18: iload_2
      19: iload         4
      21: iadd
      22: baload
      23: bastore
      24: aload_0
      25: dup
      26: getfield      #236                // Field atBlockPos:I
      29: iconst_1
      30: iadd
      31: dup_x1
      32: putfield      #236                // Field atBlockPos:I
      35: bipush        16
      37: if_icmpne     69
      40: aload_0
      41: aload_0
      42: getfield      #246                // Field S_at:[B
      45: aload_0
      46: getfield      #248                // Field atBlock:[B
      49: invokespecial #274                // Method gHASHBlock:([B[B)V
      52: aload_0
      53: iconst_0
      54: putfield      #236                // Field atBlockPos:I
      57: aload_0
      58: dup
      59: getfield      #239                // Field atLength:J
      62: ldc2_w        #136                // long 16l
      65: ladd
      66: putfield      #239                // Field atLength:J
      69: iinc          4, 1
      72: goto          3
      75: return

  private void initCipher();
    Code:
       0: aload_0
       1: getfield      #239                // Field atLength:J
       4: lconst_0
       5: lcmp
       6: ifle          32
       9: aload_0
      10: getfield      #246                // Field S_at:[B
      13: iconst_0
      14: aload_0
      15: getfield      #247                // Field S_atPre:[B
      18: iconst_0
      19: bipush        16
      21: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: aload_0
      26: getfield      #239                // Field atLength:J
      29: putfield      #240                // Field atLengthPre:J
      32: aload_0
      33: getfield      #236                // Field atBlockPos:I
      36: ifle          70
      39: aload_0
      40: aload_0
      41: getfield      #247                // Field S_atPre:[B
      44: aload_0
      45: getfield      #248                // Field atBlock:[B
      48: iconst_0
      49: aload_0
      50: getfield      #236                // Field atBlockPos:I
      53: invokespecial #277                // Method gHASHPartial:([B[BII)V
      56: aload_0
      57: dup
      58: getfield      #240                // Field atLengthPre:J
      61: aload_0
      62: getfield      #236                // Field atBlockPos:I
      65: i2l
      66: ladd
      67: putfield      #240                // Field atLengthPre:J
      70: aload_0
      71: getfield      #240                // Field atLengthPre:J
      74: lconst_0
      75: lcmp
      76: ifle          94
      79: aload_0
      80: getfield      #247                // Field S_atPre:[B
      83: iconst_0
      84: aload_0
      85: getfield      #245                // Field S:[B
      88: iconst_0
      89: bipush        16
      91: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: getfield      #249                // Field bufBlock:[B
       4: aload_0
       5: getfield      #237                // Field bufOff:I
       8: iload_1
       9: bastore
      10: aload_0
      11: dup
      12: getfield      #237                // Field bufOff:I
      15: iconst_1
      16: iadd
      17: dup_x1
      18: putfield      #237                // Field bufOff:I
      21: aload_0
      22: getfield      #249                // Field bufBlock:[B
      25: arraylength
      26: if_icmpne     38
      29: aload_0
      30: aload_2
      31: iload_3
      32: invokespecial #271                // Method outputBlock:([BI)V
      35: bipush        16
      37: ireturn
      38: iconst_0
      39: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: iload_3
       4: iadd
       5: if_icmpge     18
       8: new           #147                // class org/bouncycastle/crypto/DataLengthException
      11: dup
      12: ldc           #3                  // String Input buffer too short
      14: invokespecial #265                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iconst_0
      19: istore        6
      21: iconst_0
      22: istore        7
      24: iload         7
      26: iload_3
      27: if_icmpge     84
      30: aload_0
      31: getfield      #249                // Field bufBlock:[B
      34: aload_0
      35: getfield      #237                // Field bufOff:I
      38: aload_1
      39: iload_2
      40: iload         7
      42: iadd
      43: baload
      44: bastore
      45: aload_0
      46: dup
      47: getfield      #237                // Field bufOff:I
      50: iconst_1
      51: iadd
      52: dup_x1
      53: putfield      #237                // Field bufOff:I
      56: aload_0
      57: getfield      #249                // Field bufBlock:[B
      60: arraylength
      61: if_icmpne     78
      64: aload_0
      65: aload         4
      67: iload         5
      69: iload         6
      71: iadd
      72: invokespecial #271                // Method outputBlock:([BI)V
      75: iinc          6, 16
      78: iinc          7, 1
      81: goto          24
      84: iload         6
      86: ireturn

  private void outputBlock(byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: bipush        16
       5: iadd
       6: if_icmpge     19
       9: new           #149                // class org/bouncycastle/crypto/OutputLengthException
      12: dup
      13: ldc           #6                  // String Output buffer too short
      15: invokespecial #267                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #241                // Field totalLength:J
      23: lconst_0
      24: lcmp
      25: ifne          32
      28: aload_0
      29: invokespecial #268                // Method initCipher:()V
      32: aload_0
      33: aload_0
      34: getfield      #249                // Field bufBlock:[B
      37: aload_1
      38: iload_2
      39: invokespecial #275                // Method gCTRBlock:([B[BI)V
      42: aload_0
      43: getfield      #242                // Field forEncryption:Z
      46: ifeq          57
      49: aload_0
      50: iconst_0
      51: putfield      #237                // Field bufOff:I
      54: goto          83
      57: aload_0
      58: getfield      #249                // Field bufBlock:[B
      61: bipush        16
      63: aload_0
      64: getfield      #249                // Field bufBlock:[B
      67: iconst_0
      68: aload_0
      69: getfield      #238                // Field macSize:I
      72: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      75: aload_0
      76: aload_0
      77: getfield      #238                // Field macSize:I
      80: putfield      #237                // Field bufOff:I
      83: return

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: getfield      #241                // Field totalLength:J
       4: lconst_0
       5: lcmp
       6: ifne          13
       9: aload_0
      10: invokespecial #268                // Method initCipher:()V
      13: aload_0
      14: getfield      #237                // Field bufOff:I
      17: istore_3
      18: aload_0
      19: getfield      #242                // Field forEncryption:Z
      22: ifeq          48
      25: aload_1
      26: arraylength
      27: iload_2
      28: iload_3
      29: iadd
      30: aload_0
      31: getfield      #238                // Field macSize:I
      34: iadd
      35: if_icmpge     91
      38: new           #149                // class org/bouncycastle/crypto/OutputLengthException
      41: dup
      42: ldc           #6                  // String Output buffer too short
      44: invokespecial #267                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iload_3
      49: aload_0
      50: getfield      #238                // Field macSize:I
      53: if_icmpge     66
      56: new           #148                // class org/bouncycastle/crypto/InvalidCipherTextException
      59: dup
      60: ldc           #8                  // String data too short
      62: invokespecial #266                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: iload_3
      67: aload_0
      68: getfield      #238                // Field macSize:I
      71: isub
      72: istore_3
      73: aload_1
      74: arraylength
      75: iload_2
      76: iload_3
      77: iadd
      78: if_icmpge     91
      81: new           #149                // class org/bouncycastle/crypto/OutputLengthException
      84: dup
      85: ldc           #6                  // String Output buffer too short
      87: invokespecial #267                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: iload_3
      92: ifle          107
      95: aload_0
      96: aload_0
      97: getfield      #249                // Field bufBlock:[B
     100: iconst_0
     101: iload_3
     102: aload_1
     103: iload_2
     104: invokespecial #273                // Method gCTRPartial:([BII[BI)V
     107: aload_0
     108: dup
     109: getfield      #239                // Field atLength:J
     112: aload_0
     113: getfield      #236                // Field atBlockPos:I
     116: i2l
     117: ladd
     118: putfield      #239                // Field atLength:J
     121: aload_0
     122: getfield      #239                // Field atLength:J
     125: aload_0
     126: getfield      #240                // Field atLengthPre:J
     129: lcmp
     130: ifle          264
     133: aload_0
     134: getfield      #236                // Field atBlockPos:I
     137: ifle          157
     140: aload_0
     141: aload_0
     142: getfield      #246                // Field S_at:[B
     145: aload_0
     146: getfield      #248                // Field atBlock:[B
     149: iconst_0
     150: aload_0
     151: getfield      #236                // Field atBlockPos:I
     154: invokespecial #277                // Method gHASHPartial:([B[BII)V
     157: aload_0
     158: getfield      #240                // Field atLengthPre:J
     161: lconst_0
     162: lcmp
     163: ifle          177
     166: aload_0
     167: getfield      #246                // Field S_at:[B
     170: aload_0
     171: getfield      #247                // Field S_atPre:[B
     174: invokestatic  #280                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
     177: aload_0
     178: getfield      #241                // Field totalLength:J
     181: ldc2_w        #134                // long 8l
     184: lmul
     185: ldc2_w        #138                // long 127l
     188: ladd
     189: bipush        7
     191: lushr
     192: lstore        4
     194: bipush        16
     196: newarray       byte
     198: astore        6
     200: aload_0
     201: getfield      #255                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     204: ifnonnull     231
     207: aload_0
     208: new           #155                // class org/bouncycastle/crypto/modes/gcm/Tables1kGCMExponentiator
     211: dup
     212: invokespecial #282                // Method org/bouncycastle/crypto/modes/gcm/Tables1kGCMExponentiator."<init>":()V
     215: putfield      #255                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     218: aload_0
     219: getfield      #255                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     222: aload_0
     223: getfield      #243                // Field H:[B
     226: invokeinterface #300,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMExponentiator.init:([B)V
     231: aload_0
     232: getfield      #255                // Field exp:Lorg/bouncycastle/crypto/modes/gcm/GCMExponentiator;
     235: lload         4
     237: aload         6
     239: invokeinterface #299,  4          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMExponentiator.exponentiateX:(J[B)V
     244: aload_0
     245: getfield      #246                // Field S_at:[B
     248: aload         6
     250: invokestatic  #279                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiply:([B[B)V
     253: aload_0
     254: getfield      #245                // Field S:[B
     257: aload_0
     258: getfield      #246                // Field S_at:[B
     261: invokestatic  #280                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
     264: bipush        16
     266: newarray       byte
     268: astore        4
     270: aload_0
     271: getfield      #239                // Field atLength:J
     274: ldc2_w        #134                // long 8l
     277: lmul
     278: aload         4
     280: iconst_0
     281: invokestatic  #293                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     284: aload_0
     285: getfield      #241                // Field totalLength:J
     288: ldc2_w        #134                // long 8l
     291: lmul
     292: aload         4
     294: bipush        8
     296: invokestatic  #293                // Method org/bouncycastle/util/Pack.longToBigEndian:(J[BI)V
     299: aload_0
     300: aload_0
     301: getfield      #245                // Field S:[B
     304: aload         4
     306: invokespecial #274                // Method gHASHBlock:([B[B)V
     309: bipush        16
     311: newarray       byte
     313: astore        5
     315: aload_0
     316: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     319: aload_0
     320: getfield      #244                // Field J0:[B
     323: iconst_0
     324: aload         5
     326: iconst_0
     327: invokeinterface #296,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     332: pop
     333: aload         5
     335: aload_0
     336: getfield      #245                // Field S:[B
     339: invokestatic  #280                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
     342: iload_3
     343: istore        6
     345: aload_0
     346: aload_0
     347: getfield      #238                // Field macSize:I
     350: newarray       byte
     352: putfield      #252                // Field macBlock:[B
     355: aload         5
     357: iconst_0
     358: aload_0
     359: getfield      #252                // Field macBlock:[B
     362: iconst_0
     363: aload_0
     364: getfield      #238                // Field macSize:I
     367: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     370: aload_0
     371: getfield      #242                // Field forEncryption:Z
     374: ifeq          408
     377: aload_0
     378: getfield      #252                // Field macBlock:[B
     381: iconst_0
     382: aload_1
     383: iload_2
     384: aload_0
     385: getfield      #237                // Field bufOff:I
     388: iadd
     389: aload_0
     390: getfield      #238                // Field macSize:I
     393: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     396: iload         6
     398: aload_0
     399: getfield      #238                // Field macSize:I
     402: iadd
     403: istore        6
     405: goto          453
     408: aload_0
     409: getfield      #238                // Field macSize:I
     412: newarray       byte
     414: astore        7
     416: aload_0
     417: getfield      #249                // Field bufBlock:[B
     420: iload_3
     421: aload         7
     423: iconst_0
     424: aload_0
     425: getfield      #238                // Field macSize:I
     428: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     431: aload_0
     432: getfield      #252                // Field macBlock:[B
     435: aload         7
     437: invokestatic  #292                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
     440: ifne          453
     443: new           #148                // class org/bouncycastle/crypto/InvalidCipherTextException
     446: dup
     447: ldc           #10                 // String mac check in GCM failed
     449: invokespecial #266                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     452: athrow
     453: aload_0
     454: iconst_0
     455: invokespecial #270                // Method reset:(Z)V
     458: iload         6
     460: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #270                // Method reset:(Z)V
       5: return

  private void reset(boolean);
    Code:
       0: aload_0
       1: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #295,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
       9: aload_0
      10: bipush        16
      12: newarray       byte
      14: putfield      #245                // Field S:[B
      17: aload_0
      18: bipush        16
      20: newarray       byte
      22: putfield      #246                // Field S_at:[B
      25: aload_0
      26: bipush        16
      28: newarray       byte
      30: putfield      #247                // Field S_atPre:[B
      33: aload_0
      34: bipush        16
      36: newarray       byte
      38: putfield      #248                // Field atBlock:[B
      41: aload_0
      42: iconst_0
      43: putfield      #236                // Field atBlockPos:I
      46: aload_0
      47: lconst_0
      48: putfield      #239                // Field atLength:J
      51: aload_0
      52: lconst_0
      53: putfield      #240                // Field atLengthPre:J
      56: aload_0
      57: aload_0
      58: getfield      #244                // Field J0:[B
      61: invokestatic  #290                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      64: putfield      #250                // Field counter:[B
      67: aload_0
      68: iconst_0
      69: putfield      #237                // Field bufOff:I
      72: aload_0
      73: lconst_0
      74: putfield      #241                // Field totalLength:J
      77: aload_0
      78: getfield      #249                // Field bufBlock:[B
      81: ifnull        92
      84: aload_0
      85: getfield      #249                // Field bufBlock:[B
      88: iconst_0
      89: invokestatic  #291                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      92: iload_1
      93: ifeq          101
      96: aload_0
      97: aconst_null
      98: putfield      #252                // Field macBlock:[B
     101: aload_0
     102: getfield      #251                // Field initialAssociatedText:[B
     105: ifnull        122
     108: aload_0
     109: aload_0
     110: getfield      #251                // Field initialAssociatedText:[B
     113: iconst_0
     114: aload_0
     115: getfield      #251                // Field initialAssociatedText:[B
     118: arraylength
     119: invokevirtual #272                // Method processAADBytes:([BII)V
     122: return

  private void gCTRBlock(byte[], byte[], int);
    Code:
       0: aload_0
       1: invokespecial #269                // Method getNextCounterBlock:()[B
       4: astore        4
       6: aload         4
       8: aload_1
       9: invokestatic  #280                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
      12: aload         4
      14: iconst_0
      15: aload_2
      16: iload_3
      17: bipush        16
      19: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: aload_0
      23: aload_0
      24: getfield      #245                // Field S:[B
      27: aload_0
      28: getfield      #242                // Field forEncryption:Z
      31: ifeq          39
      34: aload         4
      36: goto          40
      39: aload_1
      40: invokespecial #274                // Method gHASHBlock:([B[B)V
      43: aload_0
      44: dup
      45: getfield      #241                // Field totalLength:J
      48: ldc2_w        #136                // long 16l
      51: ladd
      52: putfield      #241                // Field totalLength:J
      55: return

  private void gCTRPartial(byte[], int, int, byte[], int);
    Code:
       0: aload_0
       1: invokespecial #269                // Method getNextCounterBlock:()[B
       4: astore        6
       6: aload         6
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokestatic  #281                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[BII)V
      14: aload         6
      16: iconst_0
      17: aload         4
      19: iload         5
      21: iload_3
      22: invokestatic  #264                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: aload_0
      27: getfield      #245                // Field S:[B
      30: aload_0
      31: getfield      #242                // Field forEncryption:Z
      34: ifeq          42
      37: aload         6
      39: goto          43
      42: aload_1
      43: iconst_0
      44: iload_3
      45: invokespecial #277                // Method gHASHPartial:([B[BII)V
      48: aload_0
      49: dup
      50: getfield      #241                // Field totalLength:J
      53: iload_3
      54: i2l
      55: ladd
      56: putfield      #241                // Field totalLength:J
      59: return

  private void gHASH(byte[], byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     36
       9: iload_3
      10: iload         4
      12: isub
      13: bipush        16
      15: invokestatic  #258                // Method java/lang/Math.min:(II)I
      18: istore        5
      20: aload_0
      21: aload_1
      22: aload_2
      23: iload         4
      25: iload         5
      27: invokespecial #277                // Method gHASHPartial:([B[BII)V
      30: iinc          4, 16
      33: goto          3
      36: return

  private void gHASHBlock(byte[], byte[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #280                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[B)V
       5: aload_0
       6: getfield      #256                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
       9: aload_1
      10: invokeinterface #302,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.multiplyH:([B)V
      15: return

  private void gHASHPartial(byte[], byte[], int, int);
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: iload         4
       5: invokestatic  #281                // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([B[BII)V
       8: aload_0
       9: getfield      #256                // Field multiplier:Lorg/bouncycastle/crypto/modes/gcm/GCMMultiplier;
      12: aload_1
      13: invokeinterface #302,  2          // InterfaceMethod org/bouncycastle/crypto/modes/gcm/GCMMultiplier.multiplyH:([B)V
      18: return

  private byte[] getNextCounterBlock();
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #250                // Field counter:[B
       7: bipush        15
       9: baload
      10: sipush        255
      13: iand
      14: iadd
      15: istore_1
      16: aload_0
      17: getfield      #250                // Field counter:[B
      20: bipush        15
      22: iload_1
      23: i2b
      24: bastore
      25: iload_1
      26: bipush        8
      28: iushr
      29: istore_1
      30: iload_1
      31: aload_0
      32: getfield      #250                // Field counter:[B
      35: bipush        14
      37: baload
      38: sipush        255
      41: iand
      42: iadd
      43: istore_1
      44: aload_0
      45: getfield      #250                // Field counter:[B
      48: bipush        14
      50: iload_1
      51: i2b
      52: bastore
      53: iload_1
      54: bipush        8
      56: iushr
      57: istore_1
      58: iload_1
      59: aload_0
      60: getfield      #250                // Field counter:[B
      63: bipush        13
      65: baload
      66: sipush        255
      69: iand
      70: iadd
      71: istore_1
      72: aload_0
      73: getfield      #250                // Field counter:[B
      76: bipush        13
      78: iload_1
      79: i2b
      80: bastore
      81: iload_1
      82: bipush        8
      84: iushr
      85: istore_1
      86: iload_1
      87: aload_0
      88: getfield      #250                // Field counter:[B
      91: bipush        12
      93: baload
      94: sipush        255
      97: iand
      98: iadd
      99: istore_1
     100: aload_0
     101: getfield      #250                // Field counter:[B
     104: bipush        12
     106: iload_1
     107: i2b
     108: bastore
     109: bipush        16
     111: newarray       byte
     113: astore_2
     114: aload_0
     115: getfield      #254                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     118: aload_0
     119: getfield      #250                // Field counter:[B
     122: iconst_0
     123: aload_2
     124: iconst_0
     125: invokeinterface #296,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     130: pop
     131: aload_2
     132: areturn
}
