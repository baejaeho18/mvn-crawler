public class org.bouncycastle.crypto.agreement.jpake.JPAKEUtil {
  static final java.math.BigInteger ZERO;

  static final java.math.BigInteger ONE;

  public org.bouncycastle.crypto.agreement.jpake.JPAKEUtil();
    Code:
       0: aload_0
       1: invokespecial #183                // Method java/lang/Object."<init>":()V
       4: return

  public static java.math.BigInteger generateX1(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: getstatic     #181                // Field ZERO:Ljava/math/BigInteger;
       3: astore_2
       4: aload_0
       5: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
       8: invokevirtual #195                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: astore_3
      12: aload_2
      13: aload_3
      14: aload_1
      15: invokestatic  #215                // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      18: areturn

  public static java.math.BigInteger generateX2(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
       3: astore_2
       4: aload_0
       5: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
       8: invokevirtual #195                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      11: astore_3
      12: aload_2
      13: aload_3
      14: aload_1
      15: invokestatic  #215                // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      18: areturn

  public static java.math.BigInteger calculateS(char[]);
    Code:
       0: new           #100                // class java/math/BigInteger
       3: dup
       4: aload_0
       5: invokestatic  #216                // Method org/bouncycastle/util/Strings.toUTF8ByteArray:([C)[B
       8: invokespecial #188                // Method java/math/BigInteger."<init>":([B)V
      11: areturn

  public static java.math.BigInteger calculateGx(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       6: areturn

  public static java.math.BigInteger calculateGA(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       5: aload_3
       6: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       9: aload_0
      10: invokevirtual #193                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      13: areturn

  public static java.math.BigInteger calculateX2s(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       5: aload_0
       6: invokevirtual #193                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       9: areturn

  public static java.math.BigInteger calculateA(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_2
       1: aload_3
       2: aload_0
       3: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       6: areturn

  public static java.math.BigInteger[] calculateZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.lang.String, org.bouncycastle.crypto.Digest, java.security.SecureRandom);
    Code:
       0: iconst_2
       1: anewarray     #100                // class java/math/BigInteger
       4: astore        8
       6: getstatic     #181                // Field ZERO:Ljava/math/BigInteger;
       9: astore        9
      11: aload_1
      12: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
      15: invokevirtual #195                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      18: astore        10
      20: aload         9
      22: aload         10
      24: aload         7
      26: invokestatic  #215                // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      29: astore        11
      31: aload_2
      32: aload         11
      34: aload_0
      35: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      38: astore        12
      40: aload_2
      41: aload         12
      43: aload_3
      44: aload         5
      46: aload         6
      48: invokestatic  #206                // Method calculateHashForZeroKnowledgeProof:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Lorg/bouncycastle/crypto/Digest;)Ljava/math/BigInteger;
      51: astore        13
      53: aload         8
      55: iconst_0
      56: aload         12
      58: aastore
      59: aload         8
      61: iconst_1
      62: aload         11
      64: aload         4
      66: aload         13
      68: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      71: invokevirtual #195                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      74: aload_1
      75: invokevirtual #193                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      78: aastore
      79: aload         8
      81: areturn

  private static java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.lang.String, org.bouncycastle.crypto.Digest);
    Code:
       0: aload         4
       2: invokeinterface #219,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.reset:()V
       7: aload         4
       9: aload_0
      10: invokestatic  #203                // Method updateDigestIncludingSize:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;)V
      13: aload         4
      15: aload_1
      16: invokestatic  #203                // Method updateDigestIncludingSize:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;)V
      19: aload         4
      21: aload_2
      22: invokestatic  #203                // Method updateDigestIncludingSize:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;)V
      25: aload         4
      27: aload_3
      28: invokestatic  #200                // Method updateDigestIncludingSize:(Lorg/bouncycastle/crypto/Digest;Ljava/lang/String;)V
      31: aload         4
      33: invokeinterface #218,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      38: newarray       byte
      40: astore        5
      42: aload         4
      44: aload         5
      46: iconst_0
      47: invokeinterface #220,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      52: pop
      53: new           #100                // class java/math/BigInteger
      56: dup
      57: aload         5
      59: invokespecial #188                // Method java/math/BigInteger."<init>":([B)V
      62: areturn

  public static void validateGx4(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
       4: invokevirtual #189                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
       7: ifeq          20
      10: new           #101                // class org/bouncycastle/crypto/CryptoException
      13: dup
      14: ldc           #12                 // String g^x validation failed.  g^x should not be 1.
      16: invokespecial #197                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public static void validateGa(java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
       4: invokevirtual #189                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
       7: ifeq          20
      10: new           #101                // class org/bouncycastle/crypto/CryptoException
      13: dup
      14: ldc           #13                 // String ga is equal to 1.  It should not be.  The chances of this happening are on the order of 2^160 for a 160-bit q.  Try again.
      16: invokespecial #197                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public static void validateZeroKnowledgeProof(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.lang.String, org.bouncycastle.crypto.Digest) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload         4
       2: iconst_0
       3: aaload
       4: astore        7
       6: aload         4
       8: iconst_1
       9: aaload
      10: astore        8
      12: aload_2
      13: aload         7
      15: aload_3
      16: aload         5
      18: aload         6
      20: invokestatic  #206                // Method calculateHashForZeroKnowledgeProof:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Lorg/bouncycastle/crypto/Digest;)Ljava/math/BigInteger;
      23: astore        9
      25: aload_3
      26: getstatic     #181                // Field ZERO:Ljava/math/BigInteger;
      29: invokevirtual #192                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      32: iconst_1
      33: if_icmpne     89
      36: aload_3
      37: aload_0
      38: invokevirtual #192                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      41: iconst_m1
      42: if_icmpne     89
      45: aload_3
      46: aload_1
      47: aload_0
      48: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      51: getstatic     #180                // Field ONE:Ljava/math/BigInteger;
      54: invokevirtual #192                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      57: ifne          89
      60: aload_2
      61: aload         8
      63: aload_0
      64: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      67: aload_3
      68: aload         9
      70: aload_0
      71: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      74: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      77: aload_0
      78: invokevirtual #193                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      81: aload         7
      83: invokevirtual #192                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      86: ifeq          99
      89: new           #101                // class org/bouncycastle/crypto/CryptoException
      92: dup
      93: ldc           #11                 // String Zero-knowledge proof validation failed
      95: invokespecial #197                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: return

  public static java.math.BigInteger calculateKeyingMaterial(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_2
       1: aload_3
       2: aload         4
       4: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       7: invokevirtual #190                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      10: aload_1
      11: invokevirtual #193                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      14: aload_0
      15: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      18: aload         5
      20: invokevirtual #194                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      23: aload_3
      24: aload_0
      25: invokevirtual #196                // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      28: areturn

  public static void validateParticipantIdsDiffer(java.lang.String, java.lang.String) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       5: ifeq          45
       8: new           #101                // class org/bouncycastle/crypto/CryptoException
      11: dup
      12: new           #99                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #185                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #5                  // String Both participants are using the same participantId (
      21: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #3                  // String ). This is not allowed.
      30: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #6                  // String Each participant must use a unique participantId.
      35: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #186                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #197                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  public static void validateParticipantIdsEqual(java.lang.String, java.lang.String) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       5: ifne          49
       8: new           #101                // class org/bouncycastle/crypto/CryptoException
      11: dup
      12: new           #99                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #185                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #10                 // String Received payload from incorrect partner (
      21: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #2                  // String ). Expected to receive payload from
      30: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #4                  // String .
      39: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #186                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #197                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  public static void validateNotNull(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     31
       4: new           #96                 // class java/lang/NullPointerException
       7: dup
       8: new           #99                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #185                // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String  must not be null
      21: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #186                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #182                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  public static java.math.BigInteger calculateMacTag(java.lang.String, java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest);
    Code:
       0: aload         6
       2: aload         7
       4: invokestatic  #205                // Method calculateMacKey:(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/Digest;)[B
       7: astore        8
       9: new           #105                // class org/bouncycastle/crypto/macs/HMac
      12: dup
      13: aload         7
      15: invokespecial #211                // Method org/bouncycastle/crypto/macs/HMac."<init>":(Lorg/bouncycastle/crypto/Digest;)V
      18: astore        9
      20: aload         9
      22: invokevirtual #208                // Method org/bouncycastle/crypto/macs/HMac.getMacSize:()I
      25: newarray       byte
      27: astore        10
      29: aload         9
      31: new           #106                // class org/bouncycastle/crypto/params/KeyParameter
      34: dup
      35: aload         8
      37: invokespecial #212                // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      40: invokevirtual #210                // Method org/bouncycastle/crypto/macs/HMac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
      43: aload         9
      45: ldc           #8                  // String KC_1_U
      47: invokestatic  #201                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/lang/String;)V
      50: aload         9
      52: aload_0
      53: invokestatic  #201                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/lang/String;)V
      56: aload         9
      58: aload_1
      59: invokestatic  #201                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/lang/String;)V
      62: aload         9
      64: aload_2
      65: invokestatic  #204                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/math/BigInteger;)V
      68: aload         9
      70: aload_3
      71: invokestatic  #204                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/math/BigInteger;)V
      74: aload         9
      76: aload         4
      78: invokestatic  #204                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/math/BigInteger;)V
      81: aload         9
      83: aload         5
      85: invokestatic  #204                // Method updateMac:(Lorg/bouncycastle/crypto/Mac;Ljava/math/BigInteger;)V
      88: aload         9
      90: aload         10
      92: iconst_0
      93: invokevirtual #209                // Method org/bouncycastle/crypto/macs/HMac.doFinal:([BI)I
      96: pop
      97: aload         8
      99: iconst_0
     100: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
     103: new           #100                // class java/math/BigInteger
     106: dup
     107: aload         10
     109: invokespecial #188                // Method java/math/BigInteger."<init>":([B)V
     112: areturn

  private static byte[] calculateMacKey(java.math.BigInteger, org.bouncycastle.crypto.Digest);
    Code:
       0: aload_1
       1: invokeinterface #219,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.reset:()V
       6: aload_1
       7: aload_0
       8: invokestatic  #202                // Method updateDigest:(Lorg/bouncycastle/crypto/Digest;Ljava/math/BigInteger;)V
      11: aload_1
      12: ldc           #7                  // String JPAKE_KC
      14: invokestatic  #199                // Method updateDigest:(Lorg/bouncycastle/crypto/Digest;Ljava/lang/String;)V
      17: aload_1
      18: invokeinterface #218,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      23: newarray       byte
      25: astore_2
      26: aload_1
      27: aload_2
      28: iconst_0
      29: invokeinterface #220,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      34: pop
      35: aload_2
      36: areturn

  public static void validateMacTag(java.lang.String, java.lang.String, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, org.bouncycastle.crypto.Digest, java.math.BigInteger) throws org.bouncycastle.crypto.CryptoException;
    Code:
       0: aload_1
       1: aload_0
       2: aload         4
       4: aload         5
       6: aload_2
       7: aload_3
       8: aload         6
      10: aload         7
      12: invokestatic  #207                // Method calculateMacTag:(Ljava/lang/String;Ljava/lang/String;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/bouncycastle/crypto/Digest;)Ljava/math/BigInteger;
      15: astore        9
      17: aload         9
      19: aload         8
      21: invokevirtual #189                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      24: ifne          37
      27: new           #101                // class org/bouncycastle/crypto/CryptoException
      30: dup
      31: ldc           #9                  // String Partner MacTag validation failed. Therefore, the password, MAC, or digest algorithm of each participant does not match.
      33: invokespecial #197                // Method org/bouncycastle/crypto/CryptoException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: return

  private static void updateDigest(org.bouncycastle.crypto.Digest, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #214                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
       4: astore_2
       5: aload_0
       6: aload_2
       7: iconst_0
       8: aload_2
       9: arraylength
      10: invokeinterface #221,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      15: aload_2
      16: iconst_0
      17: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      20: return

  private static void updateDigestIncludingSize(org.bouncycastle.crypto.Digest, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #214                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
       4: astore_2
       5: aload_0
       6: aload_2
       7: arraylength
       8: invokestatic  #198                // Method intToByteArray:(I)[B
      11: iconst_0
      12: iconst_4
      13: invokeinterface #221,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      18: aload_0
      19: aload_2
      20: iconst_0
      21: aload_2
      22: arraylength
      23: invokeinterface #221,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      28: aload_2
      29: iconst_0
      30: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      33: return

  private static void updateDigest(org.bouncycastle.crypto.Digest, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #217                // Method org/bouncycastle/util/Strings.toUTF8ByteArray:(Ljava/lang/String;)[B
       4: astore_2
       5: aload_0
       6: aload_2
       7: iconst_0
       8: aload_2
       9: arraylength
      10: invokeinterface #221,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      15: aload_2
      16: iconst_0
      17: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      20: return

  private static void updateDigestIncludingSize(org.bouncycastle.crypto.Digest, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #217                // Method org/bouncycastle/util/Strings.toUTF8ByteArray:(Ljava/lang/String;)[B
       4: astore_2
       5: aload_0
       6: aload_2
       7: arraylength
       8: invokestatic  #198                // Method intToByteArray:(I)[B
      11: iconst_0
      12: iconst_4
      13: invokeinterface #221,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      18: aload_0
      19: aload_2
      20: iconst_0
      21: aload_2
      22: arraylength
      23: invokeinterface #221,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      28: aload_2
      29: iconst_0
      30: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      33: return

  private static void updateMac(org.bouncycastle.crypto.Mac, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokestatic  #214                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
       4: astore_2
       5: aload_0
       6: aload_2
       7: iconst_0
       8: aload_2
       9: arraylength
      10: invokeinterface #222,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      15: aload_2
      16: iconst_0
      17: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      20: return

  private static void updateMac(org.bouncycastle.crypto.Mac, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #217                // Method org/bouncycastle/util/Strings.toUTF8ByteArray:(Ljava/lang/String;)[B
       4: astore_2
       5: aload_0
       6: aload_2
       7: iconst_0
       8: aload_2
       9: arraylength
      10: invokeinterface #222,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      15: aload_2
      16: iconst_0
      17: invokestatic  #213                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      20: return

  private static byte[] intToByteArray(int);
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iload_0
       6: bipush        24
       8: iushr
       9: i2b
      10: bastore
      11: dup
      12: iconst_1
      13: iload_0
      14: bipush        16
      16: iushr
      17: i2b
      18: bastore
      19: dup
      20: iconst_2
      21: iload_0
      22: bipush        8
      24: iushr
      25: i2b
      26: bastore
      27: dup
      28: iconst_3
      29: iload_0
      30: i2b
      31: bastore
      32: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #191                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #181                // Field ZERO:Ljava/math/BigInteger;
       7: lconst_1
       8: invokestatic  #191                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      11: putstatic     #180                // Field ONE:Ljava/math/BigInteger;
      14: return
}
