public final class org.bouncycastle.crypto.tls.SessionParameters$Builder {
  private int cipherSuite;

  private short compressionAlgorithm;

  private byte[] masterSecret;

  private org.bouncycastle.crypto.tls.Certificate peerCertificate;

  private byte[] pskIdentity;

  private byte[] srpIdentity;

  private byte[] encodedServerExtensions;

  public org.bouncycastle.crypto.tls.SessionParameters$Builder();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #81                 // Field cipherSuite:I
       9: aload_0
      10: iconst_m1
      11: putfield      #82                 // Field compressionAlgorithm:S
      14: aload_0
      15: aconst_null
      16: putfield      #84                 // Field masterSecret:[B
      19: aload_0
      20: aconst_null
      21: putfield      #87                 // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      24: aload_0
      25: aconst_null
      26: putfield      #85                 // Field pskIdentity:[B
      29: aload_0
      30: aconst_null
      31: putfield      #86                 // Field srpIdentity:[B
      34: aload_0
      35: aconst_null
      36: putfield      #83                 // Field encodedServerExtensions:[B
      39: return

  public org.bouncycastle.crypto.tls.SessionParameters build();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #81                 // Field cipherSuite:I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #3                  // String cipherSuite
      15: invokespecial #96                 // Method validate:(ZLjava/lang/String;)V
      18: aload_0
      19: aload_0
      20: getfield      #82                 // Field compressionAlgorithm:S
      23: iflt          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ldc           #4                  // String compressionAlgorithm
      33: invokespecial #96                 // Method validate:(ZLjava/lang/String;)V
      36: aload_0
      37: aload_0
      38: getfield      #84                 // Field masterSecret:[B
      41: ifnull        48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ldc           #5                  // String masterSecret
      51: invokespecial #96                 // Method validate:(ZLjava/lang/String;)V
      54: new           #49                 // class org/bouncycastle/crypto/tls/SessionParameters
      57: dup
      58: aload_0
      59: getfield      #81                 // Field cipherSuite:I
      62: aload_0
      63: getfield      #82                 // Field compressionAlgorithm:S
      66: aload_0
      67: getfield      #84                 // Field masterSecret:[B
      70: aload_0
      71: getfield      #87                 // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      74: aload_0
      75: getfield      #85                 // Field pskIdentity:[B
      78: aload_0
      79: getfield      #86                 // Field srpIdentity:[B
      82: aload_0
      83: getfield      #83                 // Field encodedServerExtensions:[B
      86: aconst_null
      87: invokespecial #95                 // Method org/bouncycastle/crypto/tls/SessionParameters."<init>":(IS[BLorg/bouncycastle/crypto/tls/Certificate;[B[B[BLorg/bouncycastle/crypto/tls/SessionParameters$1;)V
      90: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setCipherSuite(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #81                 // Field cipherSuite:I
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setCompressionAlgorithm(short);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #82                 // Field compressionAlgorithm:S
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setMasterSecret(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field masterSecret:[B
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setPeerCertificate(org.bouncycastle.crypto.tls.Certificate);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setPskIdentity(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field pskIdentity:[B
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setPSKIdentity(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field pskIdentity:[B
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setSRPIdentity(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field srpIdentity:[B
       5: aload_0
       6: areturn

  public org.bouncycastle.crypto.tls.SessionParameters$Builder setServerExtensions(java.util.Hashtable) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aconst_null
       6: putfield      #83                 // Field encodedServerExtensions:[B
       9: goto          33
      12: new           #44                 // class java/io/ByteArrayOutputStream
      15: dup
      16: invokespecial #88                 // Method java/io/ByteArrayOutputStream."<init>":()V
      19: astore_2
      20: aload_2
      21: aload_1
      22: invokestatic  #97                 // Method org/bouncycastle/crypto/tls/TlsProtocol.writeExtensions:(Ljava/io/OutputStream;Ljava/util/Hashtable;)V
      25: aload_0
      26: aload_2
      27: invokevirtual #89                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      30: putfield      #83                 // Field encodedServerExtensions:[B
      33: aload_0
      34: areturn

  private void validate(boolean, java.lang.String);
    Code:
       0: iload_1
       1: ifne          36
       4: new           #46                 // class java/lang/IllegalStateException
       7: dup
       8: new           #48                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #92                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #2                  // String Required session parameter \'
      17: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_2
      21: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #1                  // String \' not configured
      26: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #90                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return
}
