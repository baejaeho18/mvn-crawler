public class org.bouncycastle.crypto.engines.NoekeonEngine implements org.bouncycastle.crypto.BlockCipher {
  private static final int genericSize;

  private static final int[] nullVector;

  private static final int[] roundConstants;

  private int[] state;

  private int[] subKeys;

  private int[] decryptKeys;

  private boolean _initialised;

  private boolean _forEncryption;

  public org.bouncycastle.crypto.engines.NoekeonEngine();
    Code:
       0: aload_0
       1: invokespecial #120                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       int
       8: putfield      #115                // Field state:[I
      11: aload_0
      12: iconst_4
      13: newarray       int
      15: putfield      #116                // Field subKeys:[I
      18: aload_0
      19: iconst_4
      20: newarray       int
      22: putfield      #112                // Field decryptKeys:[I
      25: aload_0
      26: iconst_0
      27: putfield      #111                // Field _initialised:Z
      30: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #2                  // String Noekeon
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #77                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          40
       7: new           #68                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #71                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #122                // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #4                  // String invalid parameter passed to Noekeon init -
      20: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #121                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #117                // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #118                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #110                // Field _forEncryption:Z
      45: aload_0
      46: iconst_1
      47: putfield      #111                // Field _initialised:Z
      50: aload_2
      51: checkcast     #77                 // class org/bouncycastle/crypto/params/KeyParameter
      54: astore_3
      55: aload_0
      56: aload_3
      57: invokevirtual #139                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      60: invokespecial #130                // Method setKey:([B)V
      63: return

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #111                // Field _initialised:Z
       4: ifne          37
       7: new           #69                 // class java/lang/IllegalStateException
      10: dup
      11: new           #71                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #122                // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #138                // Method getAlgorithmName:()Ljava/lang/String;
      22: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #1                  // String  not initialised
      27: invokevirtual #124                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #119                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: bipush        16
      40: iadd
      41: aload_1
      42: arraylength
      43: if_icmple     56
      46: new           #74                 // class org/bouncycastle/crypto/DataLengthException
      49: dup
      50: ldc           #3                  // String input buffer too short
      52: invokespecial #126                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iload         4
      58: bipush        16
      60: iadd
      61: aload_3
      62: arraylength
      63: if_icmple     76
      66: new           #75                 // class org/bouncycastle/crypto/OutputLengthException
      69: dup
      70: ldc           #5                  // String output buffer too short
      72: invokespecial #127                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #110                // Field _forEncryption:Z
      80: ifeq          95
      83: aload_0
      84: aload_1
      85: iload_2
      86: aload_3
      87: iload         4
      89: invokespecial #133                // Method encryptBlock:([BI[BI)I
      92: goto          104
      95: aload_0
      96: aload_1
      97: iload_2
      98: aload_3
      99: iload         4
     101: invokespecial #132                // Method decryptBlock:([BI[BI)I
     104: ireturn

  public void reset();
    Code:
       0: return

  private void setKey(byte[]);
    Code:
       0: aload_0
       1: getfield      #116                // Field subKeys:[I
       4: iconst_0
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokespecial #131                // Method bytesToIntBig:([BI)I
      11: iastore
      12: aload_0
      13: getfield      #116                // Field subKeys:[I
      16: iconst_1
      17: aload_0
      18: aload_1
      19: iconst_4
      20: invokespecial #131                // Method bytesToIntBig:([BI)I
      23: iastore
      24: aload_0
      25: getfield      #116                // Field subKeys:[I
      28: iconst_2
      29: aload_0
      30: aload_1
      31: bipush        8
      33: invokespecial #131                // Method bytesToIntBig:([BI)I
      36: iastore
      37: aload_0
      38: getfield      #116                // Field subKeys:[I
      41: iconst_3
      42: aload_0
      43: aload_1
      44: bipush        12
      46: invokespecial #131                // Method bytesToIntBig:([BI)I
      49: iastore
      50: return

  private int encryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #115                // Field state:[I
       4: iconst_0
       5: aload_0
       6: aload_1
       7: iload_2
       8: invokespecial #131                // Method bytesToIntBig:([BI)I
      11: iastore
      12: aload_0
      13: getfield      #115                // Field state:[I
      16: iconst_1
      17: aload_0
      18: aload_1
      19: iload_2
      20: iconst_4
      21: iadd
      22: invokespecial #131                // Method bytesToIntBig:([BI)I
      25: iastore
      26: aload_0
      27: getfield      #115                // Field state:[I
      30: iconst_2
      31: aload_0
      32: aload_1
      33: iload_2
      34: bipush        8
      36: iadd
      37: invokespecial #131                // Method bytesToIntBig:([BI)I
      40: iastore
      41: aload_0
      42: getfield      #115                // Field state:[I
      45: iconst_3
      46: aload_0
      47: aload_1
      48: iload_2
      49: bipush        12
      51: iadd
      52: invokespecial #131                // Method bytesToIntBig:([BI)I
      55: iastore
      56: iconst_0
      57: istore        5
      59: iload         5
      61: bipush        16
      63: if_icmpge     123
      66: aload_0
      67: getfield      #115                // Field state:[I
      70: iconst_0
      71: dup2
      72: iaload
      73: getstatic     #114                // Field roundConstants:[I
      76: iload         5
      78: iaload
      79: ixor
      80: iastore
      81: aload_0
      82: aload_0
      83: getfield      #115                // Field state:[I
      86: aload_0
      87: getfield      #116                // Field subKeys:[I
      90: invokespecial #137                // Method theta:([I[I)V
      93: aload_0
      94: aload_0
      95: getfield      #115                // Field state:[I
      98: invokespecial #135                // Method pi1:([I)V
     101: aload_0
     102: aload_0
     103: getfield      #115                // Field state:[I
     106: invokespecial #134                // Method gamma:([I)V
     109: aload_0
     110: aload_0
     111: getfield      #115                // Field state:[I
     114: invokespecial #136                // Method pi2:([I)V
     117: iinc          5, 1
     120: goto          59
     123: aload_0
     124: getfield      #115                // Field state:[I
     127: iconst_0
     128: dup2
     129: iaload
     130: getstatic     #114                // Field roundConstants:[I
     133: iload         5
     135: iaload
     136: ixor
     137: iastore
     138: aload_0
     139: aload_0
     140: getfield      #115                // Field state:[I
     143: aload_0
     144: getfield      #116                // Field subKeys:[I
     147: invokespecial #137                // Method theta:([I[I)V
     150: aload_0
     151: aload_0
     152: getfield      #115                // Field state:[I
     155: iconst_0
     156: iaload
     157: aload_3
     158: iload         4
     160: invokespecial #129                // Method intToBytesBig:(I[BI)V
     163: aload_0
     164: aload_0
     165: getfield      #115                // Field state:[I
     168: iconst_1
     169: iaload
     170: aload_3
     171: iload         4
     173: iconst_4
     174: iadd
     175: invokespecial #129                // Method intToBytesBig:(I[BI)V
     178: aload_0
     179: aload_0
     180: getfield      #115                // Field state:[I
     183: iconst_2
     184: iaload
     185: aload_3
     186: iload         4
     188: bipush        8
     190: iadd
     191: invokespecial #129                // Method intToBytesBig:(I[BI)V
     194: aload_0
     195: aload_0
     196: getfield      #115                // Field state:[I
     199: iconst_3
     200: iaload
     201: aload_3
     202: iload         4
     204: bipush        12
     206: iadd
     207: invokespecial #129                // Method intToBytesBig:(I[BI)V
     210: bipush        16
     212: ireturn

  private int decryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: getfield      #115                // Field state:[I
       4: iconst_0
       5: aload_0
       6: aload_1
       7: iload_2
       8: invokespecial #131                // Method bytesToIntBig:([BI)I
      11: iastore
      12: aload_0
      13: getfield      #115                // Field state:[I
      16: iconst_1
      17: aload_0
      18: aload_1
      19: iload_2
      20: iconst_4
      21: iadd
      22: invokespecial #131                // Method bytesToIntBig:([BI)I
      25: iastore
      26: aload_0
      27: getfield      #115                // Field state:[I
      30: iconst_2
      31: aload_0
      32: aload_1
      33: iload_2
      34: bipush        8
      36: iadd
      37: invokespecial #131                // Method bytesToIntBig:([BI)I
      40: iastore
      41: aload_0
      42: getfield      #115                // Field state:[I
      45: iconst_3
      46: aload_0
      47: aload_1
      48: iload_2
      49: bipush        12
      51: iadd
      52: invokespecial #131                // Method bytesToIntBig:([BI)I
      55: iastore
      56: aload_0
      57: getfield      #116                // Field subKeys:[I
      60: iconst_0
      61: aload_0
      62: getfield      #112                // Field decryptKeys:[I
      65: iconst_0
      66: aload_0
      67: getfield      #116                // Field subKeys:[I
      70: arraylength
      71: invokestatic  #125                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: aload_0
      76: getfield      #112                // Field decryptKeys:[I
      79: getstatic     #113                // Field nullVector:[I
      82: invokespecial #137                // Method theta:([I[I)V
      85: bipush        16
      87: istore        5
      89: iload         5
      91: ifle          151
      94: aload_0
      95: aload_0
      96: getfield      #115                // Field state:[I
      99: aload_0
     100: getfield      #112                // Field decryptKeys:[I
     103: invokespecial #137                // Method theta:([I[I)V
     106: aload_0
     107: getfield      #115                // Field state:[I
     110: iconst_0
     111: dup2
     112: iaload
     113: getstatic     #114                // Field roundConstants:[I
     116: iload         5
     118: iaload
     119: ixor
     120: iastore
     121: aload_0
     122: aload_0
     123: getfield      #115                // Field state:[I
     126: invokespecial #135                // Method pi1:([I)V
     129: aload_0
     130: aload_0
     131: getfield      #115                // Field state:[I
     134: invokespecial #134                // Method gamma:([I)V
     137: aload_0
     138: aload_0
     139: getfield      #115                // Field state:[I
     142: invokespecial #136                // Method pi2:([I)V
     145: iinc          5, -1
     148: goto          89
     151: aload_0
     152: aload_0
     153: getfield      #115                // Field state:[I
     156: aload_0
     157: getfield      #112                // Field decryptKeys:[I
     160: invokespecial #137                // Method theta:([I[I)V
     163: aload_0
     164: getfield      #115                // Field state:[I
     167: iconst_0
     168: dup2
     169: iaload
     170: getstatic     #114                // Field roundConstants:[I
     173: iload         5
     175: iaload
     176: ixor
     177: iastore
     178: aload_0
     179: aload_0
     180: getfield      #115                // Field state:[I
     183: iconst_0
     184: iaload
     185: aload_3
     186: iload         4
     188: invokespecial #129                // Method intToBytesBig:(I[BI)V
     191: aload_0
     192: aload_0
     193: getfield      #115                // Field state:[I
     196: iconst_1
     197: iaload
     198: aload_3
     199: iload         4
     201: iconst_4
     202: iadd
     203: invokespecial #129                // Method intToBytesBig:(I[BI)V
     206: aload_0
     207: aload_0
     208: getfield      #115                // Field state:[I
     211: iconst_2
     212: iaload
     213: aload_3
     214: iload         4
     216: bipush        8
     218: iadd
     219: invokespecial #129                // Method intToBytesBig:(I[BI)V
     222: aload_0
     223: aload_0
     224: getfield      #115                // Field state:[I
     227: iconst_3
     228: iaload
     229: aload_3
     230: iload         4
     232: bipush        12
     234: iadd
     235: invokespecial #129                // Method intToBytesBig:(I[BI)V
     238: bipush        16
     240: ireturn

  private void gamma(int[]);
    Code:
       0: aload_1
       1: iconst_1
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_3
       6: iaload
       7: iconst_m1
       8: ixor
       9: aload_1
      10: iconst_2
      11: iaload
      12: iconst_m1
      13: ixor
      14: iand
      15: ixor
      16: iastore
      17: aload_1
      18: iconst_0
      19: dup2
      20: iaload
      21: aload_1
      22: iconst_2
      23: iaload
      24: aload_1
      25: iconst_1
      26: iaload
      27: iand
      28: ixor
      29: iastore
      30: aload_1
      31: iconst_3
      32: iaload
      33: istore_2
      34: aload_1
      35: iconst_3
      36: aload_1
      37: iconst_0
      38: iaload
      39: iastore
      40: aload_1
      41: iconst_0
      42: iload_2
      43: iastore
      44: aload_1
      45: iconst_2
      46: dup2
      47: iaload
      48: aload_1
      49: iconst_0
      50: iaload
      51: aload_1
      52: iconst_1
      53: iaload
      54: ixor
      55: aload_1
      56: iconst_3
      57: iaload
      58: ixor
      59: ixor
      60: iastore
      61: aload_1
      62: iconst_1
      63: dup2
      64: iaload
      65: aload_1
      66: iconst_3
      67: iaload
      68: iconst_m1
      69: ixor
      70: aload_1
      71: iconst_2
      72: iaload
      73: iconst_m1
      74: ixor
      75: iand
      76: ixor
      77: iastore
      78: aload_1
      79: iconst_0
      80: dup2
      81: iaload
      82: aload_1
      83: iconst_2
      84: iaload
      85: aload_1
      86: iconst_1
      87: iaload
      88: iand
      89: ixor
      90: iastore
      91: return

  private void theta(int[], int[]);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: aload_1
       4: iconst_2
       5: iaload
       6: ixor
       7: istore_3
       8: iload_3
       9: aload_0
      10: iload_3
      11: bipush        8
      13: invokespecial #128                // Method rotl:(II)I
      16: aload_0
      17: iload_3
      18: bipush        24
      20: invokespecial #128                // Method rotl:(II)I
      23: ixor
      24: ixor
      25: istore_3
      26: aload_1
      27: iconst_1
      28: dup2
      29: iaload
      30: iload_3
      31: ixor
      32: iastore
      33: aload_1
      34: iconst_3
      35: dup2
      36: iaload
      37: iload_3
      38: ixor
      39: iastore
      40: iconst_0
      41: istore        4
      43: iload         4
      45: iconst_4
      46: if_icmpge     66
      49: aload_1
      50: iload         4
      52: dup2
      53: iaload
      54: aload_2
      55: iload         4
      57: iaload
      58: ixor
      59: iastore
      60: iinc          4, 1
      63: goto          43
      66: aload_1
      67: iconst_1
      68: iaload
      69: aload_1
      70: iconst_3
      71: iaload
      72: ixor
      73: istore_3
      74: iload_3
      75: aload_0
      76: iload_3
      77: bipush        8
      79: invokespecial #128                // Method rotl:(II)I
      82: aload_0
      83: iload_3
      84: bipush        24
      86: invokespecial #128                // Method rotl:(II)I
      89: ixor
      90: ixor
      91: istore_3
      92: aload_1
      93: iconst_0
      94: dup2
      95: iaload
      96: iload_3
      97: ixor
      98: iastore
      99: aload_1
     100: iconst_2
     101: dup2
     102: iaload
     103: iload_3
     104: ixor
     105: iastore
     106: return

  private void pi1(int[]);
    Code:
       0: aload_1
       1: iconst_1
       2: aload_0
       3: aload_1
       4: iconst_1
       5: iaload
       6: iconst_1
       7: invokespecial #128                // Method rotl:(II)I
      10: iastore
      11: aload_1
      12: iconst_2
      13: aload_0
      14: aload_1
      15: iconst_2
      16: iaload
      17: iconst_5
      18: invokespecial #128                // Method rotl:(II)I
      21: iastore
      22: aload_1
      23: iconst_3
      24: aload_0
      25: aload_1
      26: iconst_3
      27: iaload
      28: iconst_2
      29: invokespecial #128                // Method rotl:(II)I
      32: iastore
      33: return

  private void pi2(int[]);
    Code:
       0: aload_1
       1: iconst_1
       2: aload_0
       3: aload_1
       4: iconst_1
       5: iaload
       6: bipush        31
       8: invokespecial #128                // Method rotl:(II)I
      11: iastore
      12: aload_1
      13: iconst_2
      14: aload_0
      15: aload_1
      16: iconst_2
      17: iaload
      18: bipush        27
      20: invokespecial #128                // Method rotl:(II)I
      23: iastore
      24: aload_1
      25: iconst_3
      26: aload_0
      27: aload_1
      28: iconst_3
      29: iaload
      30: bipush        30
      32: invokespecial #128                // Method rotl:(II)I
      35: iastore
      36: return

  private int bytesToIntBig(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: iinc          2, 1
       5: baload
       6: bipush        24
       8: ishl
       9: aload_1
      10: iload_2
      11: iinc          2, 1
      14: baload
      15: sipush        255
      18: iand
      19: bipush        16
      21: ishl
      22: ior
      23: aload_1
      24: iload_2
      25: iinc          2, 1
      28: baload
      29: sipush        255
      32: iand
      33: bipush        8
      35: ishl
      36: ior
      37: aload_1
      38: iload_2
      39: baload
      40: sipush        255
      43: iand
      44: ior
      45: ireturn

  private void intToBytesBig(int, byte[], int);
    Code:
       0: aload_2
       1: iload_3
       2: iinc          3, 1
       5: iload_1
       6: bipush        24
       8: iushr
       9: i2b
      10: bastore
      11: aload_2
      12: iload_3
      13: iinc          3, 1
      16: iload_1
      17: bipush        16
      19: iushr
      20: i2b
      21: bastore
      22: aload_2
      23: iload_3
      24: iinc          3, 1
      27: iload_1
      28: bipush        8
      30: iushr
      31: i2b
      32: bastore
      33: aload_2
      34: iload_3
      35: iload_1
      36: i2b
      37: bastore
      38: return

  private int rotl(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: ishl
       3: iload_1
       4: bipush        32
       6: iload_2
       7: isub
       8: iushr
       9: ior
      10: ireturn

  static {};
    Code:
       0: iconst_4
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_0
       6: iastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: iastore
      11: dup
      12: iconst_2
      13: iconst_0
      14: iastore
      15: dup
      16: iconst_3
      17: iconst_0
      18: iastore
      19: putstatic     #113                // Field nullVector:[I
      22: bipush        17
      24: newarray       int
      26: dup
      27: iconst_0
      28: sipush        128
      31: iastore
      32: dup
      33: iconst_1
      34: bipush        27
      36: iastore
      37: dup
      38: iconst_2
      39: bipush        54
      41: iastore
      42: dup
      43: iconst_3
      44: bipush        108
      46: iastore
      47: dup
      48: iconst_4
      49: sipush        216
      52: iastore
      53: dup
      54: iconst_5
      55: sipush        171
      58: iastore
      59: dup
      60: bipush        6
      62: bipush        77
      64: iastore
      65: dup
      66: bipush        7
      68: sipush        154
      71: iastore
      72: dup
      73: bipush        8
      75: bipush        47
      77: iastore
      78: dup
      79: bipush        9
      81: bipush        94
      83: iastore
      84: dup
      85: bipush        10
      87: sipush        188
      90: iastore
      91: dup
      92: bipush        11
      94: bipush        99
      96: iastore
      97: dup
      98: bipush        12
     100: sipush        198
     103: iastore
     104: dup
     105: bipush        13
     107: sipush        151
     110: iastore
     111: dup
     112: bipush        14
     114: bipush        53
     116: iastore
     117: dup
     118: bipush        15
     120: bipush        106
     122: iastore
     123: dup
     124: bipush        16
     126: sipush        212
     129: iastore
     130: putstatic     #114                // Field roundConstants:[I
     133: return
}
