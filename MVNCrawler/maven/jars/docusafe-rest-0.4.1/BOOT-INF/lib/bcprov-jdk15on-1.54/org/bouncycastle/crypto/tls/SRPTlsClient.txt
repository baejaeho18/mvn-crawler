public class org.bouncycastle.crypto.tls.SRPTlsClient extends org.bouncycastle.crypto.tls.AbstractTlsClient {
  protected org.bouncycastle.crypto.tls.TlsSRPGroupVerifier groupVerifier;

  protected byte[] identity;

  protected byte[] password;

  public org.bouncycastle.crypto.tls.SRPTlsClient(byte[], byte[]);
    Code:
       0: aload_0
       1: new           #43                 // class org/bouncycastle/crypto/tls/DefaultTlsCipherFactory
       4: dup
       5: invokespecial #96                 // Method org/bouncycastle/crypto/tls/DefaultTlsCipherFactory."<init>":()V
       8: new           #44                 // class org/bouncycastle/crypto/tls/DefaultTlsSRPGroupVerifier
      11: dup
      12: invokespecial #97                 // Method org/bouncycastle/crypto/tls/DefaultTlsSRPGroupVerifier."<init>":()V
      15: aload_1
      16: aload_2
      17: invokespecial #100                // Method "<init>":(Lorg/bouncycastle/crypto/tls/TlsCipherFactory;Lorg/bouncycastle/crypto/tls/TlsSRPGroupVerifier;[B[B)V
      20: return

  public org.bouncycastle.crypto.tls.SRPTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory, byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: new           #44                 // class org/bouncycastle/crypto/tls/DefaultTlsSRPGroupVerifier
       5: dup
       6: invokespecial #97                 // Method org/bouncycastle/crypto/tls/DefaultTlsSRPGroupVerifier."<init>":()V
       9: aload_2
      10: aload_3
      11: invokespecial #100                // Method "<init>":(Lorg/bouncycastle/crypto/tls/TlsCipherFactory;Lorg/bouncycastle/crypto/tls/TlsSRPGroupVerifier;[B[B)V
      14: return

  public org.bouncycastle.crypto.tls.SRPTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory, org.bouncycastle.crypto.tls.TlsSRPGroupVerifier, byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #95                 // Method org/bouncycastle/crypto/tls/AbstractTlsClient."<init>":(Lorg/bouncycastle/crypto/tls/TlsCipherFactory;)V
       5: aload_0
       6: aload_2
       7: putfield      #91                 // Field groupVerifier:Lorg/bouncycastle/crypto/tls/TlsSRPGroupVerifier;
      10: aload_0
      11: aload_3
      12: invokestatic  #107                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      15: putfield      #88                 // Field identity:[B
      18: aload_0
      19: aload         4
      21: invokestatic  #107                // Method org/bouncycastle/util/Arrays.clone:([B)[B
      24: putfield      #89                 // Field password:[B
      27: return

  protected boolean requireSRPServerExtension();
    Code:
       0: iconst_0
       1: ireturn

  public int[] getCipherSuites();
    Code:
       0: iconst_1
       1: newarray       int
       3: dup
       4: iconst_0
       5: ldc           #1                  // int 49182
       7: iastore
       8: areturn

  public java.util.Hashtable getClientExtensions() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #93                 // Method org/bouncycastle/crypto/tls/AbstractTlsClient.getClientExtensions:()Ljava/util/Hashtable;
       4: invokestatic  #101                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.ensureExtensionsInitialised:(Ljava/util/Hashtable;)Ljava/util/Hashtable;
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #88                 // Field identity:[B
      13: invokestatic  #104                // Method org/bouncycastle/crypto/tls/TlsSRPUtils.addSRPExtension:(Ljava/util/Hashtable;[B)V
      16: aload_1
      17: areturn

  public void processServerExtensions(java.util.Hashtable) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #92                 // Field org/bouncycastle/crypto/tls/TlsSRPUtils.EXT_SRP:Ljava/lang/Integer;
       4: bipush        47
       6: invokestatic  #106                // Method org/bouncycastle/crypto/tls/TlsUtils.hasExpectedEmptyExtensionData:(Ljava/util/Hashtable;Ljava/lang/Integer;S)Z
       9: ifne          29
      12: aload_0
      13: invokevirtual #98                 // Method requireSRPServerExtension:()Z
      16: ifeq          29
      19: new           #47                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      22: dup
      23: bipush        47
      25: invokespecial #102                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      28: athrow
      29: aload_0
      30: aload_1
      31: invokespecial #94                 // Method org/bouncycastle/crypto/tls/AbstractTlsClient.processServerExtensions:(Ljava/util/Hashtable;)V
      34: return

  public org.bouncycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #87                 // Field selectedCipherSuite:I
       4: invokestatic  #105                // Method org/bouncycastle/crypto/tls/TlsUtils.getKeyExchangeAlgorithm:(I)I
       7: istore_1
       8: iload_1
       9: tableswitch   { // 21 to 23
                    21: 36
                    22: 36
                    23: 36
               default: 42
          }
      36: aload_0
      37: iload_1
      38: invokevirtual #99                 // Method createSRPKeyExchange:(I)Lorg/bouncycastle/crypto/tls/TlsKeyExchange;
      41: areturn
      42: new           #47                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      45: dup
      46: bipush        80
      48: invokespecial #102                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      51: athrow

  public org.bouncycastle.crypto.tls.TlsAuthentication getAuthentication() throws java.io.IOException;
    Code:
       0: new           #47                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
       3: dup
       4: bipush        80
       6: invokespecial #102                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
       9: athrow

  protected org.bouncycastle.crypto.tls.TlsKeyExchange createSRPKeyExchange(int);
    Code:
       0: new           #48                 // class org/bouncycastle/crypto/tls/TlsSRPKeyExchange
       3: dup
       4: iload_1
       5: aload_0
       6: getfield      #90                 // Field supportedSignatureAlgorithms:Ljava/util/Vector;
       9: aload_0
      10: getfield      #91                 // Field groupVerifier:Lorg/bouncycastle/crypto/tls/TlsSRPGroupVerifier;
      13: aload_0
      14: getfield      #88                 // Field identity:[B
      17: aload_0
      18: getfield      #89                 // Field password:[B
      21: invokespecial #103                // Method org/bouncycastle/crypto/tls/TlsSRPKeyExchange."<init>":(ILjava/util/Vector;Lorg/bouncycastle/crypto/tls/TlsSRPGroupVerifier;[B[B)V
      24: areturn
}
