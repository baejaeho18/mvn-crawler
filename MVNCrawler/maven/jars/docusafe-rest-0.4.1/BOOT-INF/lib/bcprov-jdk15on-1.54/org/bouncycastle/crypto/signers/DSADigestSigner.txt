public class org.bouncycastle.crypto.signers.DSADigestSigner implements org.bouncycastle.crypto.Signer {
  private final org.bouncycastle.crypto.Digest digest;

  private final org.bouncycastle.crypto.DSA dsaSigner;

  private boolean forSigning;

  public org.bouncycastle.crypto.signers.DSADigestSigner(org.bouncycastle.crypto.DSA, org.bouncycastle.crypto.Digest);
    Code:
       0: aload_0
       1: invokespecial #119                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
       9: aload_0
      10: aload_1
      11: putfield      #115                // Field dsaSigner:Lorg/bouncycastle/crypto/DSA;
      14: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #114                // Field forSigning:Z
       5: aload_2
       6: instanceof    #72                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       9: ifeq          26
      12: aload_2
      13: checkcast     #72                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      16: invokevirtual #129                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      19: checkcast     #71                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      22: astore_3
      23: goto          31
      26: aload_2
      27: checkcast     #71                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      30: astore_3
      31: iload_1
      32: ifeq          52
      35: aload_3
      36: invokevirtual #128                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      39: ifne          52
      42: new           #59                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #4                  // String Signing Requires Private Key.
      48: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_1
      53: ifne          73
      56: aload_3
      57: invokevirtual #128                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      60: ifeq          73
      63: new           #59                 // class java/lang/IllegalArgumentException
      66: dup
      67: ldc           #5                  // String Verification Requires Public Key.
      69: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: invokevirtual #130                // Method reset:()V
      77: aload_0
      78: getfield      #115                // Field dsaSigner:Lorg/bouncycastle/crypto/DSA;
      81: iload_1
      82: aload_2
      83: invokeinterface #134,  3          // InterfaceMethod org/bouncycastle/crypto/DSA.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      88: return

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: iload_1
       5: invokeinterface #138,  2          // InterfaceMethod org/bouncycastle/crypto/Digest.update:(B)V
      10: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #140,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      12: return

  public byte[] generateSignature();
    Code:
       0: aload_0
       1: getfield      #114                // Field forSigning:Z
       4: ifne          17
       7: new           #60                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String DSADigestSigner not initialised for signature generation.
      13: invokespecial #118                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
      21: invokeinterface #136,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      26: newarray       byte
      28: astore_1
      29: aload_0
      30: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
      33: aload_1
      34: iconst_0
      35: invokeinterface #139,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      40: pop
      41: aload_0
      42: getfield      #115                // Field dsaSigner:Lorg/bouncycastle/crypto/DSA;
      45: aload_1
      46: invokeinterface #133,  2          // InterfaceMethod org/bouncycastle/crypto/DSA.generateSignature:([B)[Ljava/math/BigInteger;
      51: astore_2
      52: aload_0
      53: aload_2
      54: iconst_0
      55: aaload
      56: aload_2
      57: iconst_1
      58: aaload
      59: invokespecial #132                // Method derEncode:(Ljava/math/BigInteger;Ljava/math/BigInteger;)[B
      62: areturn
      63: astore_3
      64: new           #60                 // class java/lang/IllegalStateException
      67: dup
      68: ldc           #6                  // String unable to encode signature
      70: invokespecial #118                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      73: athrow
    Exception table:
       from    to  target type
          52    62    63   Class java/io/IOException

  public boolean verifySignature(byte[]);
    Code:
       0: aload_0
       1: getfield      #114                // Field forSigning:Z
       4: ifeq          17
       7: new           #60                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String DSADigestSigner not initialised for verification
      13: invokespecial #118                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
      21: invokeinterface #136,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      26: newarray       byte
      28: astore_2
      29: aload_0
      30: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
      33: aload_2
      34: iconst_0
      35: invokeinterface #139,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      40: pop
      41: aload_0
      42: aload_1
      43: invokespecial #131                // Method derDecode:([B)[Ljava/math/BigInteger;
      46: astore_3
      47: aload_0
      48: getfield      #115                // Field dsaSigner:Lorg/bouncycastle/crypto/DSA;
      51: aload_2
      52: aload_3
      53: iconst_0
      54: aaload
      55: aload_3
      56: iconst_1
      57: aaload
      58: invokeinterface #135,  4          // InterfaceMethod org/bouncycastle/crypto/DSA.verifySignature:([BLjava/math/BigInteger;Ljava/math/BigInteger;)Z
      63: ireturn
      64: astore_3
      65: iconst_0
      66: ireturn
    Exception table:
       from    to  target type
          41    63    64   Class java/io/IOException

  public void reset();
    Code:
       0: aload_0
       1: getfield      #116                // Field digest:Lorg/bouncycastle/crypto/Digest;
       4: invokeinterface #137,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.reset:()V
       9: return

  private byte[] derEncode(java.math.BigInteger, java.math.BigInteger) throws java.io.IOException;
    Code:
       0: new           #63                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #120                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_3
       8: aload_3
       9: new           #64                 // class org/bouncycastle/asn1/ASN1Integer
      12: dup
      13: aload_1
      14: invokespecial #123                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      17: invokevirtual #121                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      20: aload_3
      21: new           #64                 // class org/bouncycastle/asn1/ASN1Integer
      24: dup
      25: aload_2
      26: invokespecial #123                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      29: invokevirtual #121                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      32: new           #67                 // class org/bouncycastle/asn1/DERSequence
      35: dup
      36: aload_3
      37: invokespecial #127                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      40: ldc           #1                  // String DER
      42: invokevirtual #126                // Method org/bouncycastle/asn1/DERSequence.getEncoded:(Ljava/lang/String;)[B
      45: areturn

  private java.math.BigInteger[] derDecode(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #124                // Method org/bouncycastle/asn1/ASN1Primitive.fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       4: checkcast     #66                 // class org/bouncycastle/asn1/ASN1Sequence
       7: astore_2
       8: iconst_2
       9: anewarray     #62                 // class java/math/BigInteger
      12: dup
      13: iconst_0
      14: aload_2
      15: iconst_0
      16: invokevirtual #125                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      19: checkcast     #64                 // class org/bouncycastle/asn1/ASN1Integer
      22: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_2
      29: iconst_1
      30: invokevirtual #125                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      33: checkcast     #64                 // class org/bouncycastle/asn1/ASN1Integer
      36: invokevirtual #122                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      39: aastore
      40: areturn
}
