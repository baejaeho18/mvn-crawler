public class org.bouncycastle.asn1.esf.OcspListID extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.ASN1Sequence ocspResponses;

  public static org.bouncycastle.asn1.esf.OcspListID getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #32                 // class org/bouncycastle/asn1/esf/OcspListID
       4: ifeq          12
       7: aload_0
       8: checkcast     #32                 // class org/bouncycastle/asn1/esf/OcspListID
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #32                 // class org/bouncycastle/asn1/esf/OcspListID
      19: dup
      20: aload_0
      21: invokestatic  #77                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #80                 // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  private org.bouncycastle.asn1.esf.OcspListID(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #74                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_1
       9: if_icmpeq     42
      12: new           #26                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #27                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #69                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #1                  // String Bad sequence size:
      25: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #74                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      32: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: iconst_0
      45: invokevirtual #76                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      48: checkcast     #30                 // class org/bouncycastle/asn1/ASN1Sequence
      51: putfield      #67                 // Field ocspResponses:Lorg/bouncycastle/asn1/ASN1Sequence;
      54: aload_0
      55: getfield      #67                 // Field ocspResponses:Lorg/bouncycastle/asn1/ASN1Sequence;
      58: invokevirtual #75                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjects:()Ljava/util/Enumeration;
      61: astore_2
      62: aload_2
      63: invokeinterface #82,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      68: ifeq          84
      71: aload_2
      72: invokeinterface #83,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      77: invokestatic  #81                 // Method org/bouncycastle/asn1/esf/OcspResponsesID.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/esf/OcspResponsesID;
      80: pop
      81: goto          62
      84: return

  public org.bouncycastle.asn1.esf.OcspListID(org.bouncycastle.asn1.esf.OcspResponsesID[]);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #31                 // class org/bouncycastle/asn1/DERSequence
       8: dup
       9: aload_1
      10: invokespecial #79                 // Method org/bouncycastle/asn1/DERSequence."<init>":([Lorg/bouncycastle/asn1/ASN1Encodable;)V
      13: putfield      #67                 // Field ocspResponses:Lorg/bouncycastle/asn1/ASN1Sequence;
      16: return

  public org.bouncycastle.asn1.esf.OcspResponsesID[] getOcspResponses();
    Code:
       0: aload_0
       1: getfield      #67                 // Field ocspResponses:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #74                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       7: anewarray     #33                 // class org/bouncycastle/asn1/esf/OcspResponsesID
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_1
      15: arraylength
      16: if_icmpge     39
      19: aload_1
      20: iload_2
      21: aload_0
      22: getfield      #67                 // Field ocspResponses:Lorg/bouncycastle/asn1/ASN1Sequence;
      25: iload_2
      26: invokevirtual #76                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      29: invokestatic  #81                 // Method org/bouncycastle/asn1/esf/OcspResponsesID.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/esf/OcspResponsesID;
      32: aastore
      33: iinc          2, 1
      36: goto          13
      39: aload_1
      40: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #31                 // class org/bouncycastle/asn1/DERSequence
       3: dup
       4: aload_0
       5: getfield      #67                 // Field ocspResponses:Lorg/bouncycastle/asn1/ASN1Sequence;
       8: invokespecial #78                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      11: areturn
}
