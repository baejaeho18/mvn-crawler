public class org.bouncycastle.crypto.tls.ByteQueue {
  private static final int DEFAULT_CAPACITY;

  private byte[] databuf;

  private int skipped;

  private int available;

  public static int nextTwoPow(int);
    Code:
       0: iload_0
       1: iload_0
       2: iconst_1
       3: ishr
       4: ior
       5: istore_0
       6: iload_0
       7: iload_0
       8: iconst_2
       9: ishr
      10: ior
      11: istore_0
      12: iload_0
      13: iload_0
      14: iconst_4
      15: ishr
      16: ior
      17: istore_0
      18: iload_0
      19: iload_0
      20: bipush        8
      22: ishr
      23: ior
      24: istore_0
      25: iload_0
      26: iload_0
      27: bipush        16
      29: ishr
      30: ior
      31: istore_0
      32: iload_0
      33: iconst_1
      34: iadd
      35: ireturn

  public org.bouncycastle.crypto.tls.ByteQueue();
    Code:
       0: aload_0
       1: sipush        1024
       4: invokespecial #79                 // Method "<init>":(I)V
       7: return

  public org.bouncycastle.crypto.tls.ByteQueue(int);
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #68                 // Field skipped:I
       9: aload_0
      10: iconst_0
      11: putfield      #67                 // Field available:I
      14: aload_0
      15: iload_1
      16: newarray       byte
      18: putfield      #69                 // Field databuf:[B
      21: return

  public void read(byte[], int, int, int);
    Code:
       0: aload_1
       1: arraylength
       2: iload_2
       3: isub
       4: iload_3
       5: if_icmpge     50
       8: new           #42                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #45                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #4                  // String Buffer size of
      21: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: arraylength
      26: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #3                  // String  is too small for a read of
      31: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_3
      35: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #1                  // String  bytes
      40: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #67                 // Field available:I
      54: iload         4
      56: isub
      57: iload_3
      58: if_icmpge     71
      61: new           #43                 // class java/lang/IllegalStateException
      64: dup
      65: ldc           #6                  // String Not enough data to read
      67: invokespecial #71                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: getfield      #69                 // Field databuf:[B
      75: aload_0
      76: getfield      #68                 // Field skipped:I
      79: iload         4
      81: iadd
      82: aload_1
      83: iload_2
      84: iload_3
      85: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      88: return

  public void addData(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #68                 // Field skipped:I
       4: aload_0
       5: getfield      #67                 // Field available:I
       8: iadd
       9: iload_3
      10: iadd
      11: aload_0
      12: getfield      #69                 // Field databuf:[B
      15: arraylength
      16: if_icmple     98
      19: aload_0
      20: getfield      #67                 // Field available:I
      23: iload_3
      24: iadd
      25: invokestatic  #78                 // Method nextTwoPow:(I)I
      28: istore        4
      30: iload         4
      32: aload_0
      33: getfield      #69                 // Field databuf:[B
      36: arraylength
      37: if_icmple     73
      40: iload         4
      42: newarray       byte
      44: astore        5
      46: aload_0
      47: getfield      #69                 // Field databuf:[B
      50: aload_0
      51: getfield      #68                 // Field skipped:I
      54: aload         5
      56: iconst_0
      57: aload_0
      58: getfield      #67                 // Field available:I
      61: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      64: aload_0
      65: aload         5
      67: putfield      #69                 // Field databuf:[B
      70: goto          93
      73: aload_0
      74: getfield      #69                 // Field databuf:[B
      77: aload_0
      78: getfield      #68                 // Field skipped:I
      81: aload_0
      82: getfield      #69                 // Field databuf:[B
      85: iconst_0
      86: aload_0
      87: getfield      #67                 // Field available:I
      90: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      93: aload_0
      94: iconst_0
      95: putfield      #68                 // Field skipped:I
      98: aload_1
      99: iload_2
     100: aload_0
     101: getfield      #69                 // Field databuf:[B
     104: aload_0
     105: getfield      #68                 // Field skipped:I
     108: aload_0
     109: getfield      #67                 // Field available:I
     112: iadd
     113: iload_3
     114: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     117: aload_0
     118: dup
     119: getfield      #67                 // Field available:I
     122: iload_3
     123: iadd
     124: putfield      #67                 // Field available:I
     127: return

  public void removeData(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #67                 // Field available:I
       5: if_icmple     47
       8: new           #43                 // class java/lang/IllegalStateException
      11: dup
      12: new           #45                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #5                  // String Cannot remove
      21: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #2                  // String  bytes, only got
      30: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #67                 // Field available:I
      37: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #71                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: dup
      49: getfield      #67                 // Field available:I
      52: iload_1
      53: isub
      54: putfield      #67                 // Field available:I
      57: aload_0
      58: dup
      59: getfield      #68                 // Field skipped:I
      62: iload_1
      63: iadd
      64: putfield      #68                 // Field skipped:I
      67: return

  public void removeData(byte[], int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #81                 // Method read:([BIII)V
       9: aload_0
      10: iload         4
      12: iload_3
      13: iadd
      14: invokevirtual #80                 // Method removeData:(I)V
      17: return

  public byte[] removeData(int, int);
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: aload_3
       6: iconst_0
       7: iload_1
       8: iload_2
       9: invokevirtual #82                 // Method removeData:([BIII)V
      12: aload_3
      13: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #67                 // Field available:I
       4: ireturn

  public int available();
    Code:
       0: aload_0
       1: getfield      #67                 // Field available:I
       4: ireturn
}
