public class org.bouncycastle.math.ec.custom.sec.SecP256R1Field {
  private static final long M;

  static final int[] P;

  static final int[] PExt;

  private static final int P7;

  private static final int PExt15;

  public org.bouncycastle.math.ec.custom.sec.SecP256R1Field();
    Code:
       0: aload_0
       1: invokespecial #99                 // Method java/lang/Object."<init>":()V
       4: return

  public static void add(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #119                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          29
      11: aload_2
      12: bipush        7
      14: iaload
      15: iconst_m1
      16: if_icmpne     33
      19: aload_2
      20: getstatic     #97                 // Field P:[I
      23: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      26: ifeq          33
      29: aload_2
      30: invokestatic  #101                // Method addPInvTo:([I)V
      33: return

  public static void addExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #111                // Method org/bouncycastle/math/raw/Nat.add:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifne          33
      13: aload_2
      14: bipush        15
      16: iaload
      17: iconst_m1
      18: if_icmpne     43
      21: bipush        16
      23: aload_2
      24: getstatic     #98                 // Field PExt:[I
      27: invokestatic  #110                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      30: ifeq          43
      33: bipush        16
      35: getstatic     #98                 // Field PExt:[I
      38: aload_2
      39: invokestatic  #109                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      42: pop
      43: return

  public static void addOne(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: aload_1
       4: invokestatic  #108                // Method org/bouncycastle/math/raw/Nat.inc:(I[I[I)I
       7: istore_2
       8: iload_2
       9: ifne          30
      12: aload_1
      13: bipush        7
      15: iaload
      16: iconst_m1
      17: if_icmpne     34
      20: aload_1
      21: getstatic     #97                 // Field P:[I
      24: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      27: ifeq          34
      30: aload_1
      31: invokestatic  #101                // Method addPInvTo:([I)V
      34: return

  public static int[] fromBigInteger(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #123                // Method org/bouncycastle/math/raw/Nat256.fromBigInteger:(Ljava/math/BigInteger;)[I
       4: astore_1
       5: aload_1
       6: bipush        7
       8: iaload
       9: iconst_m1
      10: if_icmpne     31
      13: aload_1
      14: getstatic     #97                 // Field P:[I
      17: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      20: ifeq          31
      23: getstatic     #97                 // Field P:[I
      26: aload_1
      27: invokestatic  #116                // Method org/bouncycastle/math/raw/Nat256.subFrom:([I[I)I
      30: pop
      31: aload_1
      32: areturn

  public static void half(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: iconst_1
       4: iand
       5: ifne          20
       8: bipush        8
      10: aload_0
      11: iconst_0
      12: aload_1
      13: invokestatic  #105                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II[I)I
      16: pop
      17: goto          37
      20: aload_0
      21: getstatic     #97                 // Field P:[I
      24: aload_1
      25: invokestatic  #119                // Method org/bouncycastle/math/raw/Nat256.add:([I[I[I)I
      28: istore_2
      29: bipush        8
      31: aload_1
      32: iload_2
      33: invokestatic  #104                // Method org/bouncycastle/math/raw/Nat.shiftDownBit:(I[II)I
      36: pop
      37: return

  public static void multiply(int[], int[], int[]);
    Code:
       0: invokestatic  #113                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokestatic  #122                // Method org/bouncycastle/math/raw/Nat256.mul:([I[I[I)V
      10: aload_3
      11: aload_2
      12: invokestatic  #103                // Method reduce:([I[I)V
      15: return

  public static void multiplyAddToExt(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #120                // Method org/bouncycastle/math/raw/Nat256.mulAddTo:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifne          31
      11: aload_2
      12: bipush        15
      14: iaload
      15: iconst_m1
      16: if_icmpne     41
      19: bipush        16
      21: aload_2
      22: getstatic     #98                 // Field PExt:[I
      25: invokestatic  #110                // Method org/bouncycastle/math/raw/Nat.gte:(I[I[I)Z
      28: ifeq          41
      31: bipush        16
      33: getstatic     #98                 // Field PExt:[I
      36: aload_2
      37: invokestatic  #109                // Method org/bouncycastle/math/raw/Nat.subFrom:(I[I[I)I
      40: pop
      41: return

  public static void negate(int[], int[]);
    Code:
       0: aload_0
       1: invokestatic  #115                // Method org/bouncycastle/math/raw/Nat256.isZero:([I)Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #114                // Method org/bouncycastle/math/raw/Nat256.zero:([I)V
      11: goto          23
      14: getstatic     #97                 // Field P:[I
      17: aload_0
      18: aload_1
      19: invokestatic  #121                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
      22: pop
      23: return

  public static void reduce(int[], int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: iaload
       4: i2l
       5: ldc2_w        #63                 // long 4294967295l
       8: land
       9: lstore_2
      10: aload_0
      11: bipush        9
      13: iaload
      14: i2l
      15: ldc2_w        #63                 // long 4294967295l
      18: land
      19: lstore        4
      21: aload_0
      22: bipush        10
      24: iaload
      25: i2l
      26: ldc2_w        #63                 // long 4294967295l
      29: land
      30: lstore        6
      32: aload_0
      33: bipush        11
      35: iaload
      36: i2l
      37: ldc2_w        #63                 // long 4294967295l
      40: land
      41: lstore        8
      43: aload_0
      44: bipush        12
      46: iaload
      47: i2l
      48: ldc2_w        #63                 // long 4294967295l
      51: land
      52: lstore        10
      54: aload_0
      55: bipush        13
      57: iaload
      58: i2l
      59: ldc2_w        #63                 // long 4294967295l
      62: land
      63: lstore        12
      65: aload_0
      66: bipush        14
      68: iaload
      69: i2l
      70: ldc2_w        #63                 // long 4294967295l
      73: land
      74: lstore        14
      76: aload_0
      77: bipush        15
      79: iaload
      80: i2l
      81: ldc2_w        #63                 // long 4294967295l
      84: land
      85: lstore        16
      87: lload_2
      88: ldc2_w        #61                 // long 6l
      91: lsub
      92: lstore_2
      93: lload_2
      94: lload         4
      96: ladd
      97: lstore        20
      99: lload         4
     101: lload         6
     103: ladd
     104: lstore        22
     106: lload         6
     108: lload         8
     110: ladd
     111: lload         16
     113: lsub
     114: lstore        24
     116: lload         8
     118: lload         10
     120: ladd
     121: lstore        26
     123: lload         10
     125: lload         12
     127: ladd
     128: lstore        28
     130: lload         12
     132: lload         14
     134: ladd
     135: lstore        30
     137: lload         14
     139: lload         16
     141: ladd
     142: lstore        32
     144: lconst_0
     145: lstore        34
     147: lload         34
     149: aload_0
     150: iconst_0
     151: iaload
     152: i2l
     153: ldc2_w        #63                 // long 4294967295l
     156: land
     157: lload         20
     159: ladd
     160: lload         26
     162: lsub
     163: lload         30
     165: lsub
     166: ladd
     167: lstore        34
     169: aload_1
     170: iconst_0
     171: lload         34
     173: l2i
     174: iastore
     175: lload         34
     177: bipush        32
     179: lshr
     180: lstore        34
     182: lload         34
     184: aload_0
     185: iconst_1
     186: iaload
     187: i2l
     188: ldc2_w        #63                 // long 4294967295l
     191: land
     192: lload         22
     194: ladd
     195: lload         28
     197: lsub
     198: lload         32
     200: lsub
     201: ladd
     202: lstore        34
     204: aload_1
     205: iconst_1
     206: lload         34
     208: l2i
     209: iastore
     210: lload         34
     212: bipush        32
     214: lshr
     215: lstore        34
     217: lload         34
     219: aload_0
     220: iconst_2
     221: iaload
     222: i2l
     223: ldc2_w        #63                 // long 4294967295l
     226: land
     227: lload         24
     229: ladd
     230: lload         30
     232: lsub
     233: ladd
     234: lstore        34
     236: aload_1
     237: iconst_2
     238: lload         34
     240: l2i
     241: iastore
     242: lload         34
     244: bipush        32
     246: lshr
     247: lstore        34
     249: lload         34
     251: aload_0
     252: iconst_3
     253: iaload
     254: i2l
     255: ldc2_w        #63                 // long 4294967295l
     258: land
     259: lload         26
     261: iconst_1
     262: lshl
     263: ladd
     264: lload         12
     266: ladd
     267: lload         16
     269: lsub
     270: lload         20
     272: lsub
     273: ladd
     274: lstore        34
     276: aload_1
     277: iconst_3
     278: lload         34
     280: l2i
     281: iastore
     282: lload         34
     284: bipush        32
     286: lshr
     287: lstore        34
     289: lload         34
     291: aload_0
     292: iconst_4
     293: iaload
     294: i2l
     295: ldc2_w        #63                 // long 4294967295l
     298: land
     299: lload         28
     301: iconst_1
     302: lshl
     303: ladd
     304: lload         14
     306: ladd
     307: lload         22
     309: lsub
     310: ladd
     311: lstore        34
     313: aload_1
     314: iconst_4
     315: lload         34
     317: l2i
     318: iastore
     319: lload         34
     321: bipush        32
     323: lshr
     324: lstore        34
     326: lload         34
     328: aload_0
     329: iconst_5
     330: iaload
     331: i2l
     332: ldc2_w        #63                 // long 4294967295l
     335: land
     336: lload         30
     338: iconst_1
     339: lshl
     340: ladd
     341: lload         24
     343: lsub
     344: ladd
     345: lstore        34
     347: aload_1
     348: iconst_5
     349: lload         34
     351: l2i
     352: iastore
     353: lload         34
     355: bipush        32
     357: lshr
     358: lstore        34
     360: lload         34
     362: aload_0
     363: bipush        6
     365: iaload
     366: i2l
     367: ldc2_w        #63                 // long 4294967295l
     370: land
     371: lload         32
     373: iconst_1
     374: lshl
     375: ladd
     376: lload         30
     378: ladd
     379: lload         20
     381: lsub
     382: ladd
     383: lstore        34
     385: aload_1
     386: bipush        6
     388: lload         34
     390: l2i
     391: iastore
     392: lload         34
     394: bipush        32
     396: lshr
     397: lstore        34
     399: lload         34
     401: aload_0
     402: bipush        7
     404: iaload
     405: i2l
     406: ldc2_w        #63                 // long 4294967295l
     409: land
     410: lload         16
     412: iconst_1
     413: lshl
     414: ladd
     415: lload_2
     416: ladd
     417: lload         24
     419: lsub
     420: lload         28
     422: lsub
     423: ladd
     424: lstore        34
     426: aload_1
     427: bipush        7
     429: lload         34
     431: l2i
     432: iastore
     433: lload         34
     435: bipush        32
     437: lshr
     438: lstore        34
     440: lload         34
     442: ldc2_w        #61                 // long 6l
     445: ladd
     446: lstore        34
     448: lload         34
     450: l2i
     451: aload_1
     452: invokestatic  #100                // Method reduce32:(I[I)V
     455: return

  public static void reduce32(int, int[]);
    Code:
       0: lconst_0
       1: lstore_2
       2: iload_0
       3: ifeq          210
       6: iload_0
       7: i2l
       8: ldc2_w        #63                 // long 4294967295l
      11: land
      12: lstore        4
      14: lload_2
      15: aload_1
      16: iconst_0
      17: iaload
      18: i2l
      19: ldc2_w        #63                 // long 4294967295l
      22: land
      23: lload         4
      25: ladd
      26: ladd
      27: lstore_2
      28: aload_1
      29: iconst_0
      30: lload_2
      31: l2i
      32: iastore
      33: lload_2
      34: bipush        32
      36: lshr
      37: lstore_2
      38: lload_2
      39: lconst_0
      40: lcmp
      41: ifeq          86
      44: lload_2
      45: aload_1
      46: iconst_1
      47: iaload
      48: i2l
      49: ldc2_w        #63                 // long 4294967295l
      52: land
      53: ladd
      54: lstore_2
      55: aload_1
      56: iconst_1
      57: lload_2
      58: l2i
      59: iastore
      60: lload_2
      61: bipush        32
      63: lshr
      64: lstore_2
      65: lload_2
      66: aload_1
      67: iconst_2
      68: iaload
      69: i2l
      70: ldc2_w        #63                 // long 4294967295l
      73: land
      74: ladd
      75: lstore_2
      76: aload_1
      77: iconst_2
      78: lload_2
      79: l2i
      80: iastore
      81: lload_2
      82: bipush        32
      84: lshr
      85: lstore_2
      86: lload_2
      87: aload_1
      88: iconst_3
      89: iaload
      90: i2l
      91: ldc2_w        #63                 // long 4294967295l
      94: land
      95: lload         4
      97: lsub
      98: ladd
      99: lstore_2
     100: aload_1
     101: iconst_3
     102: lload_2
     103: l2i
     104: iastore
     105: lload_2
     106: bipush        32
     108: lshr
     109: lstore_2
     110: lload_2
     111: lconst_0
     112: lcmp
     113: ifeq          158
     116: lload_2
     117: aload_1
     118: iconst_4
     119: iaload
     120: i2l
     121: ldc2_w        #63                 // long 4294967295l
     124: land
     125: ladd
     126: lstore_2
     127: aload_1
     128: iconst_4
     129: lload_2
     130: l2i
     131: iastore
     132: lload_2
     133: bipush        32
     135: lshr
     136: lstore_2
     137: lload_2
     138: aload_1
     139: iconst_5
     140: iaload
     141: i2l
     142: ldc2_w        #63                 // long 4294967295l
     145: land
     146: ladd
     147: lstore_2
     148: aload_1
     149: iconst_5
     150: lload_2
     151: l2i
     152: iastore
     153: lload_2
     154: bipush        32
     156: lshr
     157: lstore_2
     158: lload_2
     159: aload_1
     160: bipush        6
     162: iaload
     163: i2l
     164: ldc2_w        #63                 // long 4294967295l
     167: land
     168: lload         4
     170: lsub
     171: ladd
     172: lstore_2
     173: aload_1
     174: bipush        6
     176: lload_2
     177: l2i
     178: iastore
     179: lload_2
     180: bipush        32
     182: lshr
     183: lstore_2
     184: lload_2
     185: aload_1
     186: bipush        7
     188: iaload
     189: i2l
     190: ldc2_w        #63                 // long 4294967295l
     193: land
     194: lload         4
     196: ladd
     197: ladd
     198: lstore_2
     199: aload_1
     200: bipush        7
     202: lload_2
     203: l2i
     204: iastore
     205: lload_2
     206: bipush        32
     208: lshr
     209: lstore_2
     210: lload_2
     211: lconst_0
     212: lcmp
     213: ifne          234
     216: aload_1
     217: bipush        7
     219: iaload
     220: iconst_m1
     221: if_icmpne     238
     224: aload_1
     225: getstatic     #97                 // Field P:[I
     228: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
     231: ifeq          238
     234: aload_1
     235: invokestatic  #101                // Method addPInvTo:([I)V
     238: return

  public static void square(int[], int[]);
    Code:
       0: invokestatic  #113                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokestatic  #117                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_2
      10: aload_1
      11: invokestatic  #103                // Method reduce:([I[I)V
      14: return

  public static void squareN(int[], int, int[]);
    Code:
       0: invokestatic  #113                // Method org/bouncycastle/math/raw/Nat256.createExt:()[I
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokestatic  #117                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
       9: aload_3
      10: aload_2
      11: invokestatic  #103                // Method reduce:([I[I)V
      14: iinc          1, -1
      17: iload_1
      18: ifle          34
      21: aload_2
      22: aload_3
      23: invokestatic  #117                // Method org/bouncycastle/math/raw/Nat256.square:([I[I)V
      26: aload_3
      27: aload_2
      28: invokestatic  #103                // Method reduce:([I[I)V
      31: goto          14
      34: return

  public static void subtract(int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #121                // Method org/bouncycastle/math/raw/Nat256.sub:([I[I[I)I
       6: istore_3
       7: iload_3
       8: ifeq          15
      11: aload_2
      12: invokestatic  #102                // Method subPInvFrom:([I)V
      15: return

  public static void subtractExt(int[], int[], int[]);
    Code:
       0: bipush        16
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokestatic  #112                // Method org/bouncycastle/math/raw/Nat.sub:(I[I[I[I)I
       8: istore_3
       9: iload_3
      10: ifeq          23
      13: bipush        16
      15: getstatic     #98                 // Field PExt:[I
      18: aload_2
      19: invokestatic  #107                // Method org/bouncycastle/math/raw/Nat.addTo:(I[I[I)I
      22: pop
      23: return

  public static void twice(int[], int[]);
    Code:
       0: bipush        8
       2: aload_0
       3: iconst_0
       4: aload_1
       5: invokestatic  #106                // Method org/bouncycastle/math/raw/Nat.shiftUpBit:(I[II[I)I
       8: istore_2
       9: iload_2
      10: ifne          31
      13: aload_1
      14: bipush        7
      16: iaload
      17: iconst_m1
      18: if_icmpne     35
      21: aload_1
      22: getstatic     #97                 // Field P:[I
      25: invokestatic  #118                // Method org/bouncycastle/math/raw/Nat256.gte:([I[I)Z
      28: ifeq          35
      31: aload_1
      32: invokestatic  #101                // Method addPInvTo:([I)V
      35: return

  private static void addPInvTo(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #63                 // long 4294967295l
       7: land
       8: lconst_1
       9: ladd
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #63                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #63                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #63                 // long 4294967295l
      77: land
      78: lconst_1
      79: lsub
      80: ladd
      81: lstore_1
      82: aload_0
      83: iconst_3
      84: lload_1
      85: l2i
      86: iastore
      87: lload_1
      88: bipush        32
      90: lshr
      91: lstore_1
      92: lload_1
      93: lconst_0
      94: lcmp
      95: ifeq          140
      98: lload_1
      99: aload_0
     100: iconst_4
     101: iaload
     102: i2l
     103: ldc2_w        #63                 // long 4294967295l
     106: land
     107: ladd
     108: lstore_1
     109: aload_0
     110: iconst_4
     111: lload_1
     112: l2i
     113: iastore
     114: lload_1
     115: bipush        32
     117: lshr
     118: lstore_1
     119: lload_1
     120: aload_0
     121: iconst_5
     122: iaload
     123: i2l
     124: ldc2_w        #63                 // long 4294967295l
     127: land
     128: ladd
     129: lstore_1
     130: aload_0
     131: iconst_5
     132: lload_1
     133: l2i
     134: iastore
     135: lload_1
     136: bipush        32
     138: lshr
     139: lstore_1
     140: lload_1
     141: aload_0
     142: bipush        6
     144: iaload
     145: i2l
     146: ldc2_w        #63                 // long 4294967295l
     149: land
     150: lconst_1
     151: lsub
     152: ladd
     153: lstore_1
     154: aload_0
     155: bipush        6
     157: lload_1
     158: l2i
     159: iastore
     160: lload_1
     161: bipush        32
     163: lshr
     164: lstore_1
     165: lload_1
     166: aload_0
     167: bipush        7
     169: iaload
     170: i2l
     171: ldc2_w        #63                 // long 4294967295l
     174: land
     175: lconst_1
     176: ladd
     177: ladd
     178: lstore_1
     179: aload_0
     180: bipush        7
     182: lload_1
     183: l2i
     184: iastore
     185: return

  private static void subPInvFrom(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: i2l
       4: ldc2_w        #63                 // long 4294967295l
       7: land
       8: lconst_1
       9: lsub
      10: lstore_1
      11: aload_0
      12: iconst_0
      13: lload_1
      14: l2i
      15: iastore
      16: lload_1
      17: bipush        32
      19: lshr
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifeq          69
      27: lload_1
      28: aload_0
      29: iconst_1
      30: iaload
      31: i2l
      32: ldc2_w        #63                 // long 4294967295l
      35: land
      36: ladd
      37: lstore_1
      38: aload_0
      39: iconst_1
      40: lload_1
      41: l2i
      42: iastore
      43: lload_1
      44: bipush        32
      46: lshr
      47: lstore_1
      48: lload_1
      49: aload_0
      50: iconst_2
      51: iaload
      52: i2l
      53: ldc2_w        #63                 // long 4294967295l
      56: land
      57: ladd
      58: lstore_1
      59: aload_0
      60: iconst_2
      61: lload_1
      62: l2i
      63: iastore
      64: lload_1
      65: bipush        32
      67: lshr
      68: lstore_1
      69: lload_1
      70: aload_0
      71: iconst_3
      72: iaload
      73: i2l
      74: ldc2_w        #63                 // long 4294967295l
      77: land
      78: lconst_1
      79: ladd
      80: ladd
      81: lstore_1
      82: aload_0
      83: iconst_3
      84: lload_1
      85: l2i
      86: iastore
      87: lload_1
      88: bipush        32
      90: lshr
      91: lstore_1
      92: lload_1
      93: lconst_0
      94: lcmp
      95: ifeq          140
      98: lload_1
      99: aload_0
     100: iconst_4
     101: iaload
     102: i2l
     103: ldc2_w        #63                 // long 4294967295l
     106: land
     107: ladd
     108: lstore_1
     109: aload_0
     110: iconst_4
     111: lload_1
     112: l2i
     113: iastore
     114: lload_1
     115: bipush        32
     117: lshr
     118: lstore_1
     119: lload_1
     120: aload_0
     121: iconst_5
     122: iaload
     123: i2l
     124: ldc2_w        #63                 // long 4294967295l
     127: land
     128: ladd
     129: lstore_1
     130: aload_0
     131: iconst_5
     132: lload_1
     133: l2i
     134: iastore
     135: lload_1
     136: bipush        32
     138: lshr
     139: lstore_1
     140: lload_1
     141: aload_0
     142: bipush        6
     144: iaload
     145: i2l
     146: ldc2_w        #63                 // long 4294967295l
     149: land
     150: lconst_1
     151: ladd
     152: ladd
     153: lstore_1
     154: aload_0
     155: bipush        6
     157: lload_1
     158: l2i
     159: iastore
     160: lload_1
     161: bipush        32
     163: lshr
     164: lstore_1
     165: lload_1
     166: aload_0
     167: bipush        7
     169: iaload
     170: i2l
     171: ldc2_w        #63                 // long 4294967295l
     174: land
     175: lconst_1
     176: lsub
     177: ladd
     178: lstore_1
     179: aload_0
     180: bipush        7
     182: lload_1
     183: l2i
     184: iastore
     185: return

  static {};
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_m1
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_m1
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_m1
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_0
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_0
      23: iastore
      24: dup
      25: iconst_5
      26: iconst_0
      27: iastore
      28: dup
      29: bipush        6
      31: iconst_1
      32: iastore
      33: dup
      34: bipush        7
      36: iconst_m1
      37: iastore
      38: putstatic     #97                 // Field P:[I
      41: bipush        16
      43: newarray       int
      45: dup
      46: iconst_0
      47: iconst_1
      48: iastore
      49: dup
      50: iconst_1
      51: iconst_0
      52: iastore
      53: dup
      54: iconst_2
      55: iconst_0
      56: iastore
      57: dup
      58: iconst_3
      59: bipush        -2
      61: iastore
      62: dup
      63: iconst_4
      64: iconst_m1
      65: iastore
      66: dup
      67: iconst_5
      68: iconst_m1
      69: iastore
      70: dup
      71: bipush        6
      73: bipush        -2
      75: iastore
      76: dup
      77: bipush        7
      79: iconst_1
      80: iastore
      81: dup
      82: bipush        8
      84: bipush        -2
      86: iastore
      87: dup
      88: bipush        9
      90: iconst_1
      91: iastore
      92: dup
      93: bipush        10
      95: bipush        -2
      97: iastore
      98: dup
      99: bipush        11
     101: iconst_1
     102: iastore
     103: dup
     104: bipush        12
     106: iconst_1
     107: iastore
     108: dup
     109: bipush        13
     111: bipush        -2
     113: iastore
     114: dup
     115: bipush        14
     117: iconst_2
     118: iastore
     119: dup
     120: bipush        15
     122: bipush        -2
     124: iastore
     125: putstatic     #98                 // Field PExt:[I
     128: return
}
