public abstract class org.bouncycastle.math.ec.ECCurve$AbstractF2m extends org.bouncycastle.math.ec.ECCurve {
  private java.math.BigInteger[] si;

  public static java.math.BigInteger inverse(int, int[], java.math.BigInteger);
    Code:
       0: new           #71                 // class org/bouncycastle/math/ec/LongArray
       3: dup
       4: aload_2
       5: invokespecial #165                // Method org/bouncycastle/math/ec/LongArray."<init>":(Ljava/math/BigInteger;)V
       8: iload_0
       9: aload_1
      10: invokevirtual #166                // Method org/bouncycastle/math/ec/LongArray.modInverse:(I[I)Lorg/bouncycastle/math/ec/LongArray;
      13: invokevirtual #164                // Method org/bouncycastle/math/ec/LongArray.toBigInteger:()Ljava/math/BigInteger;
      16: areturn

  private static org.bouncycastle.math.field.FiniteField buildField(int, int, int, int);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #63                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #2                  // String k1 must be > 0
      10: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifne          51
      18: iload_3
      19: ifeq          32
      22: new           #63                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #4                  // String k3 must be 0 if k2 == 0
      28: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: iconst_3
      33: newarray       int
      35: dup
      36: iconst_0
      37: iconst_0
      38: iastore
      39: dup
      40: iconst_1
      41: iload_1
      42: iastore
      43: dup
      44: iconst_2
      45: iload_0
      46: iastore
      47: invokestatic  #168                // Method org/bouncycastle/math/field/FiniteFields.getBinaryExtensionField:([I)Lorg/bouncycastle/math/field/PolynomialExtensionField;
      50: areturn
      51: iload_2
      52: iload_1
      53: if_icmpgt     66
      56: new           #63                 // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #3                  // String k2 must be > k1
      62: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: iload_3
      67: iload_2
      68: if_icmpgt     81
      71: new           #63                 // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #5                  // String k3 must be > k2
      77: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: iconst_5
      82: newarray       int
      84: dup
      85: iconst_0
      86: iconst_0
      87: iastore
      88: dup
      89: iconst_1
      90: iload_1
      91: iastore
      92: dup
      93: iconst_2
      94: iload_2
      95: iastore
      96: dup
      97: iconst_3
      98: iload_3
      99: iastore
     100: dup
     101: iconst_4
     102: iload_0
     103: iastore
     104: invokestatic  #168                // Method org/bouncycastle/math/field/FiniteFields.getBinaryExtensionField:([I)Lorg/bouncycastle/math/field/PolynomialExtensionField;
     107: areturn

  protected org.bouncycastle.math.ec.ECCurve$AbstractF2m(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokestatic  #150                // Method buildField:(IIII)Lorg/bouncycastle/math/field/FiniteField;
       9: invokespecial #145                // Method org/bouncycastle/math/ec/ECCurve."<init>":(Lorg/bouncycastle/math/field/FiniteField;)V
      12: aload_0
      13: aconst_null
      14: putfield      #135                // Field si:[Ljava/math/BigInteger;
      17: return

  public boolean isValidFieldElement(java.math.BigInteger);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_1
       5: invokevirtual #142                // Method java/math/BigInteger.signum:()I
       8: iflt          26
      11: aload_1
      12: invokevirtual #141                // Method java/math/BigInteger.bitLength:()I
      15: aload_0
      16: invokevirtual #147                // Method getFieldSize:()I
      19: if_icmpgt     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #151                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       5: astore        4
       7: aload_0
       8: aload_2
       9: invokevirtual #151                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      12: astore        5
      14: aload_0
      15: invokevirtual #146                // Method getCoordinateSystem:()I
      18: istore        6
      20: iload         6
      22: lookupswitch  { // 2
                     5: 48
                     6: 48
               default: 96
          }
      48: aload         4
      50: invokevirtual #155                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      53: ifeq          79
      56: aload         5
      58: invokevirtual #160                // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      61: aload_0
      62: invokevirtual #149                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      65: invokevirtual #140                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      68: ifne          96
      71: new           #63                 // class java/lang/IllegalArgumentException
      74: dup
      75: invokespecial #138                // Method java/lang/IllegalArgumentException."<init>":()V
      78: athrow
      79: aload         5
      81: aload         4
      83: invokevirtual #162                // Method org/bouncycastle/math/ec/ECFieldElement.divide:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      86: aload         4
      88: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      91: astore        5
      93: goto          96
      96: aload_0
      97: aload         4
      99: aload         5
     101: iload_3
     102: invokevirtual #153                // Method createRawPoint:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;Z)Lorg/bouncycastle/math/ec/ECPoint;
     105: areturn

  protected org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #151                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       5: astore_3
       6: aconst_null
       7: astore        4
       9: aload_3
      10: invokevirtual #155                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      13: ifeq          28
      16: aload_0
      17: invokevirtual #149                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      20: invokevirtual #159                // Method org/bouncycastle/math/ec/ECFieldElement.sqrt:()Lorg/bouncycastle/math/ec/ECFieldElement;
      23: astore        4
      25: goto          143
      28: aload_3
      29: invokevirtual #160                // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      32: invokevirtual #158                // Method org/bouncycastle/math/ec/ECFieldElement.invert:()Lorg/bouncycastle/math/ec/ECFieldElement;
      35: aload_0
      36: invokevirtual #149                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      39: invokevirtual #163                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      42: aload_0
      43: invokevirtual #148                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      46: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      49: aload_3
      50: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      53: astore        5
      55: aload_0
      56: aload         5
      58: invokespecial #152                // Method solveQuadraticEquation:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      61: astore        6
      63: aload         6
      65: ifnull        143
      68: aload         6
      70: invokevirtual #156                // Method org/bouncycastle/math/ec/ECFieldElement.testBitZero:()Z
      73: iload_1
      74: iconst_1
      75: if_icmpne     82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: if_icmpeq     93
      86: aload         6
      88: invokevirtual #157                // Method org/bouncycastle/math/ec/ECFieldElement.addOne:()Lorg/bouncycastle/math/ec/ECFieldElement;
      91: astore        6
      93: aload_0
      94: invokevirtual #146                // Method getCoordinateSystem:()I
      97: lookupswitch  { // 2
                     5: 124
                     6: 124
               default: 135
          }
     124: aload         6
     126: aload_3
     127: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
     130: astore        4
     132: goto          143
     135: aload         6
     137: aload_3
     138: invokevirtual #163                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
     141: astore        4
     143: aload         4
     145: ifnonnull     158
     148: new           #63                 // class java/lang/IllegalArgumentException
     151: dup
     152: ldc           #1                  // String Invalid point compression
     154: invokespecial #139                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     157: athrow
     158: aload_0
     159: aload_3
     160: aload         4
     162: iconst_1
     163: invokevirtual #153                // Method createRawPoint:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;Z)Lorg/bouncycastle/math/ec/ECPoint;
     166: areturn

  private org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_1
       1: invokevirtual #155                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_0
      10: getstatic     #132                // Field org/bouncycastle/math/ec/ECConstants.ZERO:Ljava/math/BigInteger;
      13: invokevirtual #151                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      16: astore        4
      18: aload_0
      19: invokevirtual #147                // Method getFieldSize:()I
      22: istore        5
      24: new           #66                 // class java/util/Random
      27: dup
      28: invokespecial #144                // Method java/util/Random."<init>":()V
      31: astore        6
      33: aload_0
      34: new           #65                 // class java/math/BigInteger
      37: dup
      38: iload         5
      40: aload         6
      42: invokespecial #143                // Method java/math/BigInteger."<init>":(ILjava/util/Random;)V
      45: invokevirtual #151                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      48: astore        7
      50: aload         4
      52: astore_3
      53: aload_1
      54: astore        8
      56: iconst_1
      57: istore        9
      59: iload         9
      61: iload         5
      63: if_icmpge     102
      66: aload         8
      68: invokevirtual #160                // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      71: astore        10
      73: aload_3
      74: invokevirtual #160                // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
      77: aload         10
      79: aload         7
      81: invokevirtual #163                // Method org/bouncycastle/math/ec/ECFieldElement.multiply:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      84: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      87: astore_3
      88: aload         10
      90: aload_1
      91: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
      94: astore        8
      96: iinc          9, 1
      99: goto          59
     102: aload         8
     104: invokevirtual #155                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
     107: ifne          112
     110: aconst_null
     111: areturn
     112: aload_3
     113: invokevirtual #160                // Method org/bouncycastle/math/ec/ECFieldElement.square:()Lorg/bouncycastle/math/ec/ECFieldElement;
     116: aload_3
     117: invokevirtual #161                // Method org/bouncycastle/math/ec/ECFieldElement.add:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECFieldElement;
     120: astore_2
     121: aload_2
     122: invokevirtual #155                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
     125: ifne          33
     128: aload_3
     129: areturn

  synchronized java.math.BigInteger[] getSi();
    Code:
       0: aload_0
       1: getfield      #135                // Field si:[Ljava/math/BigInteger;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokestatic  #167                // Method org/bouncycastle/math/ec/Tnaf.getSi:(Lorg/bouncycastle/math/ec/ECCurve$AbstractF2m;)[Ljava/math/BigInteger;
      12: putfield      #135                // Field si:[Ljava/math/BigInteger;
      15: aload_0
      16: getfield      #135                // Field si:[Ljava/math/BigInteger;
      19: areturn

  public boolean isKoblitz();
    Code:
       0: aload_0
       1: getfield      #134                // Field order:Ljava/math/BigInteger;
       4: ifnull        48
       7: aload_0
       8: getfield      #133                // Field cofactor:Ljava/math/BigInteger;
      11: ifnull        48
      14: aload_0
      15: getfield      #137                // Field b:Lorg/bouncycastle/math/ec/ECFieldElement;
      18: invokevirtual #154                // Method org/bouncycastle/math/ec/ECFieldElement.isOne:()Z
      21: ifeq          48
      24: aload_0
      25: getfield      #136                // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
      28: invokevirtual #155                // Method org/bouncycastle/math/ec/ECFieldElement.isZero:()Z
      31: ifne          44
      34: aload_0
      35: getfield      #136                // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
      38: invokevirtual #154                // Method org/bouncycastle/math/ec/ECFieldElement.isOne:()Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
}
