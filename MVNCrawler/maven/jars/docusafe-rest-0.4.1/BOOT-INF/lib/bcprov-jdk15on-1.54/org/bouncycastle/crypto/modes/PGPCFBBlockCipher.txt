public class org.bouncycastle.crypto.modes.PGPCFBBlockCipher implements org.bouncycastle.crypto.BlockCipher {
  private byte[] IV;

  private byte[] FR;

  private byte[] FRE;

  private byte[] tmp;

  private org.bouncycastle.crypto.BlockCipher cipher;

  private int count;

  private int blockSize;

  private boolean forEncryption;

  private boolean inlineIv;

  public org.bouncycastle.crypto.modes.PGPCFBBlockCipher(org.bouncycastle.crypto.BlockCipher, boolean);
    Code:
       0: aload_0
       1: invokespecial #105                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       9: aload_0
      10: iload_2
      11: putfield      #99                 // Field inlineIv:Z
      14: aload_0
      15: aload_1
      16: invokeinterface #119,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      21: putfield      #96                 // Field blockSize:I
      24: aload_0
      25: aload_0
      26: getfield      #96                 // Field blockSize:I
      29: newarray       byte
      31: putfield      #102                // Field IV:[B
      34: aload_0
      35: aload_0
      36: getfield      #96                 // Field blockSize:I
      39: newarray       byte
      41: putfield      #100                // Field FR:[B
      44: aload_0
      45: aload_0
      46: getfield      #96                 // Field blockSize:I
      49: newarray       byte
      51: putfield      #101                // Field FRE:[B
      54: aload_0
      55: aload_0
      56: getfield      #96                 // Field blockSize:I
      59: newarray       byte
      61: putfield      #103                // Field tmp:[B
      64: return

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: areturn

  public java.lang.String getAlgorithmName();
    Code:
       0: aload_0
       1: getfield      #99                 // Field inlineIv:Z
       4: ifeq          35
       7: new           #55                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      18: invokeinterface #122,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      23: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #2                  // String /PGPCFBwithIV
      28: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #107                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
      35: new           #55                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      42: aload_0
      43: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      46: invokeinterface #122,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      51: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #1                  // String /PGPCFB
      56: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #107                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #119,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
       9: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #99                 // Field inlineIv:Z
       4: ifeq          36
       7: aload_0
       8: getfield      #98                 // Field forEncryption:Z
      11: ifeq          26
      14: aload_0
      15: aload_1
      16: iload_2
      17: aload_3
      18: iload         4
      20: invokespecial #116                // Method encryptBlockWithIV:([BI[BI)I
      23: goto          35
      26: aload_0
      27: aload_1
      28: iload_2
      29: aload_3
      30: iload         4
      32: invokespecial #114                // Method decryptBlockWithIV:([BI[BI)I
      35: ireturn
      36: aload_0
      37: getfield      #98                 // Field forEncryption:Z
      40: ifeq          55
      43: aload_0
      44: aload_1
      45: iload_2
      46: aload_3
      47: iload         4
      49: invokespecial #115                // Method encryptBlock:([BI[BI)I
      52: goto          64
      55: aload_0
      56: aload_1
      57: iload_2
      58: aload_3
      59: iload         4
      61: invokespecial #113                // Method decryptBlock:([BI[BI)I
      64: ireturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #97                 // Field count:I
       5: iconst_0
       6: istore_1
       7: iload_1
       8: aload_0
       9: getfield      #100                // Field FR:[B
      12: arraylength
      13: if_icmpeq     51
      16: aload_0
      17: getfield      #99                 // Field inlineIv:Z
      20: ifeq          33
      23: aload_0
      24: getfield      #100                // Field FR:[B
      27: iload_1
      28: iconst_0
      29: bastore
      30: goto          45
      33: aload_0
      34: getfield      #100                // Field FR:[B
      37: iload_1
      38: aload_0
      39: getfield      #102                // Field IV:[B
      42: iload_1
      43: baload
      44: bastore
      45: iinc          1, 1
      48: goto          7
      51: aload_0
      52: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      55: invokeinterface #120,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      60: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #98                 // Field forEncryption:Z
       5: aload_2
       6: instanceof    #60                 // class org/bouncycastle/crypto/params/ParametersWithIV
       9: ifeq          127
      12: aload_2
      13: checkcast     #60                 // class org/bouncycastle/crypto/params/ParametersWithIV
      16: astore_3
      17: aload_3
      18: invokevirtual #117                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      21: astore        4
      23: aload         4
      25: arraylength
      26: aload_0
      27: getfield      #102                // Field IV:[B
      30: arraylength
      31: if_icmpge     90
      34: aload         4
      36: iconst_0
      37: aload_0
      38: getfield      #102                // Field IV:[B
      41: aload_0
      42: getfield      #102                // Field IV:[B
      45: arraylength
      46: aload         4
      48: arraylength
      49: isub
      50: aload         4
      52: arraylength
      53: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: iconst_0
      57: istore        5
      59: iload         5
      61: aload_0
      62: getfield      #102                // Field IV:[B
      65: arraylength
      66: aload         4
      68: arraylength
      69: isub
      70: if_icmpge     87
      73: aload_0
      74: getfield      #102                // Field IV:[B
      77: iload         5
      79: iconst_0
      80: bastore
      81: iinc          5, 1
      84: goto          59
      87: goto          106
      90: aload         4
      92: iconst_0
      93: aload_0
      94: getfield      #102                // Field IV:[B
      97: iconst_0
      98: aload_0
      99: getfield      #102                // Field IV:[B
     102: arraylength
     103: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     106: aload_0
     107: invokevirtual #111                // Method reset:()V
     110: aload_0
     111: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     114: iconst_1
     115: aload_3
     116: invokevirtual #118                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
     119: invokeinterface #123,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     124: goto          142
     127: aload_0
     128: invokevirtual #111                // Method reset:()V
     131: aload_0
     132: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     135: iconst_1
     136: aload_2
     137: invokeinterface #123,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     142: return

  private byte encryptByte(byte, int);
    Code:
       0: aload_0
       1: getfield      #101                // Field FRE:[B
       4: iload_2
       5: baload
       6: iload_1
       7: ixor
       8: i2b
       9: ireturn

  private int encryptBlockWithIV(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #96                 // Field blockSize:I
       5: iadd
       6: aload_1
       7: arraylength
       8: if_icmple     21
      11: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #3                  // String input buffer too short
      17: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #97                 // Field count:I
      25: ifne          328
      28: iload         4
      30: iconst_2
      31: aload_0
      32: getfield      #96                 // Field blockSize:I
      35: imul
      36: iadd
      37: iconst_2
      38: iadd
      39: aload_3
      40: arraylength
      41: if_icmple     54
      44: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      47: dup
      48: ldc           #4                  // String output buffer too short
      50: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      58: aload_0
      59: getfield      #100                // Field FR:[B
      62: iconst_0
      63: aload_0
      64: getfield      #101                // Field FRE:[B
      67: iconst_0
      68: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      73: pop
      74: iconst_0
      75: istore        5
      77: iload         5
      79: aload_0
      80: getfield      #96                 // Field blockSize:I
      83: if_icmpge     112
      86: aload_3
      87: iload         4
      89: iload         5
      91: iadd
      92: aload_0
      93: aload_0
      94: getfield      #102                // Field IV:[B
      97: iload         5
      99: baload
     100: iload         5
     102: invokespecial #112                // Method encryptByte:(BI)B
     105: bastore
     106: iinc          5, 1
     109: goto          77
     112: aload_3
     113: iload         4
     115: aload_0
     116: getfield      #100                // Field FR:[B
     119: iconst_0
     120: aload_0
     121: getfield      #96                 // Field blockSize:I
     124: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     127: aload_0
     128: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     131: aload_0
     132: getfield      #100                // Field FR:[B
     135: iconst_0
     136: aload_0
     137: getfield      #101                // Field FRE:[B
     140: iconst_0
     141: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     146: pop
     147: aload_3
     148: iload         4
     150: aload_0
     151: getfield      #96                 // Field blockSize:I
     154: iadd
     155: aload_0
     156: aload_0
     157: getfield      #102                // Field IV:[B
     160: aload_0
     161: getfield      #96                 // Field blockSize:I
     164: iconst_2
     165: isub
     166: baload
     167: iconst_0
     168: invokespecial #112                // Method encryptByte:(BI)B
     171: bastore
     172: aload_3
     173: iload         4
     175: aload_0
     176: getfield      #96                 // Field blockSize:I
     179: iadd
     180: iconst_1
     181: iadd
     182: aload_0
     183: aload_0
     184: getfield      #102                // Field IV:[B
     187: aload_0
     188: getfield      #96                 // Field blockSize:I
     191: iconst_1
     192: isub
     193: baload
     194: iconst_1
     195: invokespecial #112                // Method encryptByte:(BI)B
     198: bastore
     199: aload_3
     200: iload         4
     202: iconst_2
     203: iadd
     204: aload_0
     205: getfield      #100                // Field FR:[B
     208: iconst_0
     209: aload_0
     210: getfield      #96                 // Field blockSize:I
     213: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     216: aload_0
     217: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     220: aload_0
     221: getfield      #100                // Field FR:[B
     224: iconst_0
     225: aload_0
     226: getfield      #101                // Field FRE:[B
     229: iconst_0
     230: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     235: pop
     236: iconst_0
     237: istore        5
     239: iload         5
     241: aload_0
     242: getfield      #96                 // Field blockSize:I
     245: if_icmpge     280
     248: aload_3
     249: iload         4
     251: aload_0
     252: getfield      #96                 // Field blockSize:I
     255: iadd
     256: iconst_2
     257: iadd
     258: iload         5
     260: iadd
     261: aload_0
     262: aload_1
     263: iload_2
     264: iload         5
     266: iadd
     267: baload
     268: iload         5
     270: invokespecial #112                // Method encryptByte:(BI)B
     273: bastore
     274: iinc          5, 1
     277: goto          239
     280: aload_3
     281: iload         4
     283: aload_0
     284: getfield      #96                 // Field blockSize:I
     287: iadd
     288: iconst_2
     289: iadd
     290: aload_0
     291: getfield      #100                // Field FR:[B
     294: iconst_0
     295: aload_0
     296: getfield      #96                 // Field blockSize:I
     299: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     302: aload_0
     303: dup
     304: getfield      #97                 // Field count:I
     307: iconst_2
     308: aload_0
     309: getfield      #96                 // Field blockSize:I
     312: imul
     313: iconst_2
     314: iadd
     315: iadd
     316: putfield      #97                 // Field count:I
     319: iconst_2
     320: aload_0
     321: getfield      #96                 // Field blockSize:I
     324: imul
     325: iconst_2
     326: iadd
     327: ireturn
     328: aload_0
     329: getfield      #97                 // Field count:I
     332: aload_0
     333: getfield      #96                 // Field blockSize:I
     336: iconst_2
     337: iadd
     338: if_icmplt     435
     341: iload         4
     343: aload_0
     344: getfield      #96                 // Field blockSize:I
     347: iadd
     348: aload_3
     349: arraylength
     350: if_icmple     363
     353: new           #58                 // class org/bouncycastle/crypto/DataLengthException
     356: dup
     357: ldc           #4                  // String output buffer too short
     359: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
     362: athrow
     363: aload_0
     364: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     367: aload_0
     368: getfield      #100                // Field FR:[B
     371: iconst_0
     372: aload_0
     373: getfield      #101                // Field FRE:[B
     376: iconst_0
     377: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     382: pop
     383: iconst_0
     384: istore        5
     386: iload         5
     388: aload_0
     389: getfield      #96                 // Field blockSize:I
     392: if_icmpge     420
     395: aload_3
     396: iload         4
     398: iload         5
     400: iadd
     401: aload_0
     402: aload_1
     403: iload_2
     404: iload         5
     406: iadd
     407: baload
     408: iload         5
     410: invokespecial #112                // Method encryptByte:(BI)B
     413: bastore
     414: iinc          5, 1
     417: goto          386
     420: aload_3
     421: iload         4
     423: aload_0
     424: getfield      #100                // Field FR:[B
     427: iconst_0
     428: aload_0
     429: getfield      #96                 // Field blockSize:I
     432: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     435: aload_0
     436: getfield      #96                 // Field blockSize:I
     439: ireturn

  private int decryptBlockWithIV(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #96                 // Field blockSize:I
       5: iadd
       6: aload_1
       7: arraylength
       8: if_icmple     21
      11: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #3                  // String input buffer too short
      17: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload         4
      23: aload_0
      24: getfield      #96                 // Field blockSize:I
      27: iadd
      28: aload_3
      29: arraylength
      30: if_icmple     43
      33: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      36: dup
      37: ldc           #4                  // String output buffer too short
      39: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #97                 // Field count:I
      47: ifne          116
      50: iconst_0
      51: istore        5
      53: iload         5
      55: aload_0
      56: getfield      #96                 // Field blockSize:I
      59: if_icmpge     81
      62: aload_0
      63: getfield      #100                // Field FR:[B
      66: iload         5
      68: aload_1
      69: iload_2
      70: iload         5
      72: iadd
      73: baload
      74: bastore
      75: iinc          5, 1
      78: goto          53
      81: aload_0
      82: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      85: aload_0
      86: getfield      #100                // Field FR:[B
      89: iconst_0
      90: aload_0
      91: getfield      #101                // Field FRE:[B
      94: iconst_0
      95: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     100: pop
     101: aload_0
     102: dup
     103: getfield      #97                 // Field count:I
     106: aload_0
     107: getfield      #96                 // Field blockSize:I
     110: iadd
     111: putfield      #97                 // Field count:I
     114: iconst_0
     115: ireturn
     116: aload_0
     117: getfield      #97                 // Field count:I
     120: aload_0
     121: getfield      #96                 // Field blockSize:I
     124: if_icmpne     292
     127: aload_1
     128: iload_2
     129: aload_0
     130: getfield      #103                // Field tmp:[B
     133: iconst_0
     134: aload_0
     135: getfield      #96                 // Field blockSize:I
     138: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     141: aload_0
     142: getfield      #100                // Field FR:[B
     145: iconst_2
     146: aload_0
     147: getfield      #100                // Field FR:[B
     150: iconst_0
     151: aload_0
     152: getfield      #96                 // Field blockSize:I
     155: iconst_2
     156: isub
     157: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     160: aload_0
     161: getfield      #100                // Field FR:[B
     164: aload_0
     165: getfield      #96                 // Field blockSize:I
     168: iconst_2
     169: isub
     170: aload_0
     171: getfield      #103                // Field tmp:[B
     174: iconst_0
     175: baload
     176: bastore
     177: aload_0
     178: getfield      #100                // Field FR:[B
     181: aload_0
     182: getfield      #96                 // Field blockSize:I
     185: iconst_1
     186: isub
     187: aload_0
     188: getfield      #103                // Field tmp:[B
     191: iconst_1
     192: baload
     193: bastore
     194: aload_0
     195: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     198: aload_0
     199: getfield      #100                // Field FR:[B
     202: iconst_0
     203: aload_0
     204: getfield      #101                // Field FRE:[B
     207: iconst_0
     208: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     213: pop
     214: iconst_0
     215: istore        5
     217: iload         5
     219: aload_0
     220: getfield      #96                 // Field blockSize:I
     223: iconst_2
     224: isub
     225: if_icmpge     256
     228: aload_3
     229: iload         4
     231: iload         5
     233: iadd
     234: aload_0
     235: aload_0
     236: getfield      #103                // Field tmp:[B
     239: iload         5
     241: iconst_2
     242: iadd
     243: baload
     244: iload         5
     246: invokespecial #112                // Method encryptByte:(BI)B
     249: bastore
     250: iinc          5, 1
     253: goto          217
     256: aload_0
     257: getfield      #103                // Field tmp:[B
     260: iconst_2
     261: aload_0
     262: getfield      #100                // Field FR:[B
     265: iconst_0
     266: aload_0
     267: getfield      #96                 // Field blockSize:I
     270: iconst_2
     271: isub
     272: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     275: aload_0
     276: dup
     277: getfield      #97                 // Field count:I
     280: iconst_2
     281: iadd
     282: putfield      #97                 // Field count:I
     285: aload_0
     286: getfield      #96                 // Field blockSize:I
     289: iconst_2
     290: isub
     291: ireturn
     292: aload_0
     293: getfield      #97                 // Field count:I
     296: aload_0
     297: getfield      #96                 // Field blockSize:I
     300: iconst_2
     301: iadd
     302: if_icmplt     465
     305: aload_1
     306: iload_2
     307: aload_0
     308: getfield      #103                // Field tmp:[B
     311: iconst_0
     312: aload_0
     313: getfield      #96                 // Field blockSize:I
     316: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     319: aload_3
     320: iload         4
     322: iconst_0
     323: iadd
     324: aload_0
     325: aload_0
     326: getfield      #103                // Field tmp:[B
     329: iconst_0
     330: baload
     331: aload_0
     332: getfield      #96                 // Field blockSize:I
     335: iconst_2
     336: isub
     337: invokespecial #112                // Method encryptByte:(BI)B
     340: bastore
     341: aload_3
     342: iload         4
     344: iconst_1
     345: iadd
     346: aload_0
     347: aload_0
     348: getfield      #103                // Field tmp:[B
     351: iconst_1
     352: baload
     353: aload_0
     354: getfield      #96                 // Field blockSize:I
     357: iconst_1
     358: isub
     359: invokespecial #112                // Method encryptByte:(BI)B
     362: bastore
     363: aload_0
     364: getfield      #103                // Field tmp:[B
     367: iconst_0
     368: aload_0
     369: getfield      #100                // Field FR:[B
     372: aload_0
     373: getfield      #96                 // Field blockSize:I
     376: iconst_2
     377: isub
     378: iconst_2
     379: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     382: aload_0
     383: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
     386: aload_0
     387: getfield      #100                // Field FR:[B
     390: iconst_0
     391: aload_0
     392: getfield      #101                // Field FRE:[B
     395: iconst_0
     396: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     401: pop
     402: iconst_0
     403: istore        5
     405: iload         5
     407: aload_0
     408: getfield      #96                 // Field blockSize:I
     411: iconst_2
     412: isub
     413: if_icmpge     446
     416: aload_3
     417: iload         4
     419: iload         5
     421: iadd
     422: iconst_2
     423: iadd
     424: aload_0
     425: aload_0
     426: getfield      #103                // Field tmp:[B
     429: iload         5
     431: iconst_2
     432: iadd
     433: baload
     434: iload         5
     436: invokespecial #112                // Method encryptByte:(BI)B
     439: bastore
     440: iinc          5, 1
     443: goto          405
     446: aload_0
     447: getfield      #103                // Field tmp:[B
     450: iconst_2
     451: aload_0
     452: getfield      #100                // Field FR:[B
     455: iconst_0
     456: aload_0
     457: getfield      #96                 // Field blockSize:I
     460: iconst_2
     461: isub
     462: invokestatic  #109                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     465: aload_0
     466: getfield      #96                 // Field blockSize:I
     469: ireturn

  private int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #96                 // Field blockSize:I
       5: iadd
       6: aload_1
       7: arraylength
       8: if_icmple     21
      11: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #3                  // String input buffer too short
      17: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload         4
      23: aload_0
      24: getfield      #96                 // Field blockSize:I
      27: iadd
      28: aload_3
      29: arraylength
      30: if_icmple     43
      33: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      36: dup
      37: ldc           #4                  // String output buffer too short
      39: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      47: aload_0
      48: getfield      #100                // Field FR:[B
      51: iconst_0
      52: aload_0
      53: getfield      #101                // Field FRE:[B
      56: iconst_0
      57: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      62: pop
      63: iconst_0
      64: istore        5
      66: iload         5
      68: aload_0
      69: getfield      #96                 // Field blockSize:I
      72: if_icmpge     100
      75: aload_3
      76: iload         4
      78: iload         5
      80: iadd
      81: aload_0
      82: aload_1
      83: iload_2
      84: iload         5
      86: iadd
      87: baload
      88: iload         5
      90: invokespecial #112                // Method encryptByte:(BI)B
      93: bastore
      94: iinc          5, 1
      97: goto          66
     100: iconst_0
     101: istore        5
     103: iload         5
     105: aload_0
     106: getfield      #96                 // Field blockSize:I
     109: if_icmpge     132
     112: aload_0
     113: getfield      #100                // Field FR:[B
     116: iload         5
     118: aload_3
     119: iload         4
     121: iload         5
     123: iadd
     124: baload
     125: bastore
     126: iinc          5, 1
     129: goto          103
     132: aload_0
     133: getfield      #96                 // Field blockSize:I
     136: ireturn

  private int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #96                 // Field blockSize:I
       5: iadd
       6: aload_1
       7: arraylength
       8: if_icmple     21
      11: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      14: dup
      15: ldc           #3                  // String input buffer too short
      17: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload         4
      23: aload_0
      24: getfield      #96                 // Field blockSize:I
      27: iadd
      28: aload_3
      29: arraylength
      30: if_icmple     43
      33: new           #58                 // class org/bouncycastle/crypto/DataLengthException
      36: dup
      37: ldc           #4                  // String output buffer too short
      39: invokespecial #110                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #104                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      47: aload_0
      48: getfield      #100                // Field FR:[B
      51: iconst_0
      52: aload_0
      53: getfield      #101                // Field FRE:[B
      56: iconst_0
      57: invokeinterface #121,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      62: pop
      63: iconst_0
      64: istore        5
      66: iload         5
      68: aload_0
      69: getfield      #96                 // Field blockSize:I
      72: if_icmpge     100
      75: aload_3
      76: iload         4
      78: iload         5
      80: iadd
      81: aload_0
      82: aload_1
      83: iload_2
      84: iload         5
      86: iadd
      87: baload
      88: iload         5
      90: invokespecial #112                // Method encryptByte:(BI)B
      93: bastore
      94: iinc          5, 1
      97: goto          66
     100: iconst_0
     101: istore        5
     103: iload         5
     105: aload_0
     106: getfield      #96                 // Field blockSize:I
     109: if_icmpge     131
     112: aload_0
     113: getfield      #100                // Field FR:[B
     116: iload         5
     118: aload_1
     119: iload_2
     120: iload         5
     122: iadd
     123: baload
     124: bastore
     125: iinc          5, 1
     128: goto          103
     131: aload_0
     132: getfield      #96                 // Field blockSize:I
     135: ireturn
}
