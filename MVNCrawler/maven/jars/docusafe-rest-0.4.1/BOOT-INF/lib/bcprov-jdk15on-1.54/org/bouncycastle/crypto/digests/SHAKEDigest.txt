public class org.bouncycastle.crypto.digests.SHAKEDigest extends org.bouncycastle.crypto.digests.KeccakDigest implements org.bouncycastle.crypto.Xof {
  private static int checkBitLength(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 2
                   128: 28
                   256: 28
               default: 30
          }
      28: iload_0
      29: ireturn
      30: new           #41                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #42                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #2                  // String \'bitLength\'
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_0
      47: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #1                  // String  not supported for SHAKE
      52: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      61: athrow

  public org.bouncycastle.crypto.digests.SHAKEDigest();
    Code:
       0: aload_0
       1: sipush        128
       4: invokespecial #80                 // Method "<init>":(I)V
       7: return

  public org.bouncycastle.crypto.digests.SHAKEDigest(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #79                 // Method checkBitLength:(I)I
       5: invokespecial #75                 // Method org/bouncycastle/crypto/digests/KeccakDigest."<init>":(I)V
       8: return

  public org.bouncycastle.crypto.digests.SHAKEDigest(org.bouncycastle.crypto.digests.SHAKEDigest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #76                 // Method org/bouncycastle/crypto/digests/KeccakDigest."<init>":(Lorg/bouncycastle/crypto/digests/KeccakDigest;)V
       5: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #42                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #4                  // String SHAKE
       9: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #68                 // Field fixedOutputLength:I
      16: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #77                 // Method getDigestSize:()I
       7: invokevirtual #81                 // Method doFinal:([BII)I
      10: ireturn

  public int doFinal(byte[], int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        15
       8: bastore
       9: iconst_0
      10: ldc2_w        #37                 // long 4l
      13: invokevirtual #83                 // Method absorb:([BIJ)V
      16: aload_0
      17: aload_1
      18: iload_2
      19: iload_3
      20: i2l
      21: ldc2_w        #39                 // long 8l
      24: lmul
      25: invokevirtual #84                 // Method squeeze:([BIJ)V
      28: aload_0
      29: invokevirtual #78                 // Method reset:()V
      32: iload_3
      33: ireturn

  protected int doFinal(byte[], int, byte, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #77                 // Method getDigestSize:()I
       7: iload_3
       8: iload         4
      10: invokevirtual #82                 // Method doFinal:([BIIBI)I
      13: ireturn

  protected int doFinal(byte[], int, int, byte, int);
    Code:
       0: iload         5
       2: iflt          12
       5: iload         5
       7: bipush        7
       9: if_icmple     22
      12: new           #41                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #3                  // String \'partialBits\' must be in the range [0,7]
      18: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iload         4
      24: iconst_1
      25: iload         5
      27: ishl
      28: iconst_1
      29: isub
      30: iand
      31: bipush        15
      33: iload         5
      35: ishl
      36: ior
      37: istore        6
      39: iload         5
      41: iconst_4
      42: iadd
      43: istore        7
      45: iload         7
      47: bipush        8
      49: if_icmplt     83
      52: aload_0
      53: getfield      #69                 // Field oneByte:[B
      56: iconst_0
      57: iload         6
      59: i2b
      60: bastore
      61: aload_0
      62: aload_0
      63: getfield      #69                 // Field oneByte:[B
      66: iconst_0
      67: ldc2_w        #39                 // long 8l
      70: invokevirtual #83                 // Method absorb:([BIJ)V
      73: iinc          7, -8
      76: iload         6
      78: bipush        8
      80: iushr
      81: istore        6
      83: iload         7
      85: ifle          109
      88: aload_0
      89: getfield      #69                 // Field oneByte:[B
      92: iconst_0
      93: iload         6
      95: i2b
      96: bastore
      97: aload_0
      98: aload_0
      99: getfield      #69                 // Field oneByte:[B
     102: iconst_0
     103: iload         7
     105: i2l
     106: invokevirtual #83                 // Method absorb:([BIJ)V
     109: aload_0
     110: aload_1
     111: iload_2
     112: iload_3
     113: i2l
     114: ldc2_w        #39                 // long 8l
     117: lmul
     118: invokevirtual #84                 // Method squeeze:([BIJ)V
     121: aload_0
     122: invokevirtual #78                 // Method reset:()V
     125: iload_3
     126: ireturn
}
