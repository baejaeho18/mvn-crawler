public abstract class org.bouncycastle.asn1.x500.style.AbstractX500NameStyle implements org.bouncycastle.asn1.x500.X500NameStyle {
  public org.bouncycastle.asn1.x500.style.AbstractX500NameStyle();
    Code:
       0: aload_0
       1: invokespecial #122                // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Hashtable copyHashTable(java.util.Hashtable);
    Code:
       0: new           #59                 // class java/util/Hashtable
       3: dup
       4: invokespecial #130                // Method java/util/Hashtable."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #131                // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      12: astore_2
      13: aload_2
      14: invokeinterface #153,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          43
      22: aload_2
      23: invokeinterface #154,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: astore_3
      29: aload_1
      30: aload_3
      31: aload_0
      32: aload_3
      33: invokevirtual #132                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: invokevirtual #133                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: goto          13
      43: aload_1
      44: areturn

  private int calcHashCode(org.bouncycastle.asn1.ASN1Encodable);
    Code:
       0: aload_1
       1: invokestatic  #150                // Method org/bouncycastle/asn1/x500/style/IETFUtils.valueToString:(Lorg/bouncycastle/asn1/ASN1Encodable;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #149                // Method org/bouncycastle/asn1/x500/style/IETFUtils.canonicalize:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_2
      10: aload_2
      11: invokevirtual #123                // Method java/lang/String.hashCode:()I
      14: ireturn

  public int calculateHashCode(org.bouncycastle.asn1.x500.X500Name);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokevirtual #144                // Method org/bouncycastle/asn1/x500/X500Name.getRDNs:()[Lorg/bouncycastle/asn1/x500/RDN;
       6: astore_3
       7: iconst_0
       8: istore        4
      10: iload         4
      12: aload_3
      13: arraylength
      14: if_icmpeq     124
      17: aload_3
      18: iload         4
      20: aaload
      21: invokevirtual #141                // Method org/bouncycastle/asn1/x500/RDN.isMultiValued:()Z
      24: ifeq          85
      27: aload_3
      28: iload         4
      30: aaload
      31: invokevirtual #143                // Method org/bouncycastle/asn1/x500/RDN.getTypesAndValues:()[Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
      34: astore        5
      36: iconst_0
      37: istore        6
      39: iload         6
      41: aload         5
      43: arraylength
      44: if_icmpeq     82
      47: iload_2
      48: aload         5
      50: iload         6
      52: aaload
      53: invokevirtual #140                // Method org/bouncycastle/asn1/x500/AttributeTypeAndValue.getType:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      56: invokevirtual #134                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.hashCode:()I
      59: ixor
      60: istore_2
      61: iload_2
      62: aload_0
      63: aload         5
      65: iload         6
      67: aaload
      68: invokevirtual #139                // Method org/bouncycastle/asn1/x500/AttributeTypeAndValue.getValue:()Lorg/bouncycastle/asn1/ASN1Encodable;
      71: invokespecial #145                // Method calcHashCode:(Lorg/bouncycastle/asn1/ASN1Encodable;)I
      74: ixor
      75: istore_2
      76: iinc          6, 1
      79: goto          39
      82: goto          118
      85: iload_2
      86: aload_3
      87: iload         4
      89: aaload
      90: invokevirtual #142                // Method org/bouncycastle/asn1/x500/RDN.getFirst:()Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
      93: invokevirtual #140                // Method org/bouncycastle/asn1/x500/AttributeTypeAndValue.getType:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      96: invokevirtual #134                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.hashCode:()I
      99: ixor
     100: istore_2
     101: iload_2
     102: aload_0
     103: aload_3
     104: iload         4
     106: aaload
     107: invokevirtual #142                // Method org/bouncycastle/asn1/x500/RDN.getFirst:()Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
     110: invokevirtual #139                // Method org/bouncycastle/asn1/x500/AttributeTypeAndValue.getValue:()Lorg/bouncycastle/asn1/ASN1Encodable;
     113: invokespecial #145                // Method calcHashCode:(Lorg/bouncycastle/asn1/ASN1Encodable;)I
     116: ixor
     117: istore_2
     118: iinc          4, 1
     121: goto          10
     124: iload_2
     125: ireturn

  public org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #124                // Method java/lang/String.length:()I
       4: ifeq          54
       7: aload_2
       8: iconst_0
       9: invokevirtual #125                // Method java/lang/String.charAt:(I)C
      12: bipush        35
      14: if_icmpne     54
      17: aload_2
      18: iconst_1
      19: invokestatic  #151                // Method org/bouncycastle/asn1/x500/style/IETFUtils.valueFromHexString:(Ljava/lang/String;I)Lorg/bouncycastle/asn1/ASN1Encodable;
      22: areturn
      23: astore_3
      24: new           #61                 // class org/bouncycastle/asn1/ASN1ParsingException
      27: dup
      28: new           #57                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #127                // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #1                  // String can\'t recode value for oid
      37: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #136                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getId:()Ljava/lang/String;
      44: invokevirtual #129                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #128                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #137                // Method org/bouncycastle/asn1/ASN1ParsingException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_2
      55: invokevirtual #124                // Method java/lang/String.length:()I
      58: ifeq          77
      61: aload_2
      62: iconst_0
      63: invokevirtual #125                // Method java/lang/String.charAt:(I)C
      66: bipush        92
      68: if_icmpne     77
      71: aload_2
      72: iconst_1
      73: invokevirtual #126                // Method java/lang/String.substring:(I)Ljava/lang/String;
      76: astore_2
      77: aload_0
      78: aload_1
      79: aload_2
      80: invokevirtual #148                // Method encodeStringValue:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;Ljava/lang/String;)Lorg/bouncycastle/asn1/ASN1Encodable;
      83: areturn
    Exception table:
       from    to  target type
          17    22    23   Class java/io/IOException

  protected org.bouncycastle.asn1.ASN1Encodable encodeStringValue(org.bouncycastle.asn1.ASN1ObjectIdentifier, java.lang.String);
    Code:
       0: new           #62                 // class org/bouncycastle/asn1/DERUTF8String
       3: dup
       4: aload_2
       5: invokespecial #138                // Method org/bouncycastle/asn1/DERUTF8String."<init>":(Ljava/lang/String;)V
       8: areturn

  public boolean areEqual(org.bouncycastle.asn1.x500.X500Name, org.bouncycastle.asn1.x500.X500Name);
    Code:
       0: aload_1
       1: invokevirtual #144                // Method org/bouncycastle/asn1/x500/X500Name.getRDNs:()[Lorg/bouncycastle/asn1/x500/RDN;
       4: astore_3
       5: aload_2
       6: invokevirtual #144                // Method org/bouncycastle/asn1/x500/X500Name.getRDNs:()[Lorg/bouncycastle/asn1/x500/RDN;
       9: astore        4
      11: aload_3
      12: arraylength
      13: aload         4
      15: arraylength
      16: if_icmpeq     21
      19: iconst_0
      20: ireturn
      21: iconst_0
      22: istore        5
      24: aload_3
      25: iconst_0
      26: aaload
      27: invokevirtual #142                // Method org/bouncycastle/asn1/x500/RDN.getFirst:()Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
      30: ifnull        75
      33: aload         4
      35: iconst_0
      36: aaload
      37: invokevirtual #142                // Method org/bouncycastle/asn1/x500/RDN.getFirst:()Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
      40: ifnull        75
      43: aload_3
      44: iconst_0
      45: aaload
      46: invokevirtual #142                // Method org/bouncycastle/asn1/x500/RDN.getFirst:()Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
      49: invokevirtual #140                // Method org/bouncycastle/asn1/x500/AttributeTypeAndValue.getType:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      52: aload         4
      54: iconst_0
      55: aaload
      56: invokevirtual #142                // Method org/bouncycastle/asn1/x500/RDN.getFirst:()Lorg/bouncycastle/asn1/x500/AttributeTypeAndValue;
      59: invokevirtual #140                // Method org/bouncycastle/asn1/x500/AttributeTypeAndValue.getType:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      62: invokevirtual #135                // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.equals:(Ljava/lang/Object;)Z
      65: ifne          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        5
      75: iconst_0
      76: istore        6
      78: iload         6
      80: aload_3
      81: arraylength
      82: if_icmpeq     108
      85: aload_0
      86: iload         5
      88: aload_3
      89: iload         6
      91: aaload
      92: aload         4
      94: invokespecial #147                // Method foundMatch:(ZLorg/bouncycastle/asn1/x500/RDN;[Lorg/bouncycastle/asn1/x500/RDN;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: iinc          6, 1
     105: goto          78
     108: iconst_1
     109: ireturn

  private boolean foundMatch(boolean, org.bouncycastle.asn1.x500.RDN, org.bouncycastle.asn1.x500.RDN[]);
    Code:
       0: iload_1
       1: ifeq          50
       4: aload_3
       5: arraylength
       6: iconst_1
       7: isub
       8: istore        4
      10: iload         4
      12: iflt          47
      15: aload_3
      16: iload         4
      18: aaload
      19: ifnull        41
      22: aload_0
      23: aload_2
      24: aload_3
      25: iload         4
      27: aaload
      28: invokevirtual #146                // Method rdnAreEqual:(Lorg/bouncycastle/asn1/x500/RDN;Lorg/bouncycastle/asn1/x500/RDN;)Z
      31: ifeq          41
      34: aload_3
      35: iload         4
      37: aconst_null
      38: aastore
      39: iconst_1
      40: ireturn
      41: iinc          4, -1
      44: goto          10
      47: goto          92
      50: iconst_0
      51: istore        4
      53: iload         4
      55: aload_3
      56: arraylength
      57: if_icmpeq     92
      60: aload_3
      61: iload         4
      63: aaload
      64: ifnull        86
      67: aload_0
      68: aload_2
      69: aload_3
      70: iload         4
      72: aaload
      73: invokevirtual #146                // Method rdnAreEqual:(Lorg/bouncycastle/asn1/x500/RDN;Lorg/bouncycastle/asn1/x500/RDN;)Z
      76: ifeq          86
      79: aload_3
      80: iload         4
      82: aconst_null
      83: aastore
      84: iconst_1
      85: ireturn
      86: iinc          4, 1
      89: goto          53
      92: iconst_0
      93: ireturn

  protected boolean rdnAreEqual(org.bouncycastle.asn1.x500.RDN, org.bouncycastle.asn1.x500.RDN);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #152                // Method org/bouncycastle/asn1/x500/style/IETFUtils.rDNAreEqual:(Lorg/bouncycastle/asn1/x500/RDN;Lorg/bouncycastle/asn1/x500/RDN;)Z
       5: ireturn
}
