public class org.bouncycastle.math.ec.endo.GLVTypeBParameters {
  protected final java.math.BigInteger beta;

  protected final java.math.BigInteger lambda;

  protected final java.math.BigInteger v1A;

  protected final java.math.BigInteger v1B;

  protected final java.math.BigInteger v2A;

  protected final java.math.BigInteger v2B;

  protected final java.math.BigInteger g1;

  protected final java.math.BigInteger g2;

  protected final int bits;

  private static void checkVector(java.math.BigInteger[], java.lang.String);
    Code:
       0: aload_0
       1: ifnull        22
       4: aload_0
       5: arraylength
       6: iconst_2
       7: if_icmpne     22
      10: aload_0
      11: iconst_0
      12: aaload
      13: ifnull        22
      16: aload_0
      17: iconst_1
      18: aaload
      19: ifnonnull     54
      22: new           #41                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #43                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #1                  // String \'
      35: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #2                  // String \' must consist of exactly 2 (non-null) values
      44: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: return

  public org.bouncycastle.math.ec.endo.GLVTypeBParameters(java.math.BigInteger, java.math.BigInteger, java.math.BigInteger[], java.math.BigInteger[], java.math.BigInteger, java.math.BigInteger, int);
    Code:
       0: aload_0
       1: invokespecial #78                 // Method java/lang/Object."<init>":()V
       4: aload_3
       5: ldc           #3                  // String v1
       7: invokestatic  #82                 // Method checkVector:([Ljava/math/BigInteger;Ljava/lang/String;)V
      10: aload         4
      12: ldc           #4                  // String v2
      14: invokestatic  #82                 // Method checkVector:([Ljava/math/BigInteger;Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: putfield      #69                 // Field beta:Ljava/math/BigInteger;
      22: aload_0
      23: aload_2
      24: putfield      #72                 // Field lambda:Ljava/math/BigInteger;
      27: aload_0
      28: aload_3
      29: iconst_0
      30: aaload
      31: putfield      #73                 // Field v1A:Ljava/math/BigInteger;
      34: aload_0
      35: aload_3
      36: iconst_1
      37: aaload
      38: putfield      #74                 // Field v1B:Ljava/math/BigInteger;
      41: aload_0
      42: aload         4
      44: iconst_0
      45: aaload
      46: putfield      #75                 // Field v2A:Ljava/math/BigInteger;
      49: aload_0
      50: aload         4
      52: iconst_1
      53: aaload
      54: putfield      #76                 // Field v2B:Ljava/math/BigInteger;
      57: aload_0
      58: aload         5
      60: putfield      #70                 // Field g1:Ljava/math/BigInteger;
      63: aload_0
      64: aload         6
      66: putfield      #71                 // Field g2:Ljava/math/BigInteger;
      69: aload_0
      70: iload         7
      72: putfield      #68                 // Field bits:I
      75: return

  public java.math.BigInteger getBeta();
    Code:
       0: aload_0
       1: getfield      #69                 // Field beta:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getLambda();
    Code:
       0: aload_0
       1: getfield      #72                 // Field lambda:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger[] getV1();
    Code:
       0: iconst_2
       1: anewarray     #44                 // class java/math/BigInteger
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #73                 // Field v1A:Ljava/math/BigInteger;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #74                 // Field v1B:Ljava/math/BigInteger;
      17: aastore
      18: areturn

  public java.math.BigInteger getV1A();
    Code:
       0: aload_0
       1: getfield      #73                 // Field v1A:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getV1B();
    Code:
       0: aload_0
       1: getfield      #74                 // Field v1B:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger[] getV2();
    Code:
       0: iconst_2
       1: anewarray     #44                 // class java/math/BigInteger
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #75                 // Field v2A:Ljava/math/BigInteger;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #76                 // Field v2B:Ljava/math/BigInteger;
      17: aastore
      18: areturn

  public java.math.BigInteger getV2A();
    Code:
       0: aload_0
       1: getfield      #75                 // Field v2A:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getV2B();
    Code:
       0: aload_0
       1: getfield      #76                 // Field v2B:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getG1();
    Code:
       0: aload_0
       1: getfield      #70                 // Field g1:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getG2();
    Code:
       0: aload_0
       1: getfield      #71                 // Field g2:Ljava/math/BigInteger;
       4: areturn

  public int getBits();
    Code:
       0: aload_0
       1: getfield      #68                 // Field bits:I
       4: ireturn
}
