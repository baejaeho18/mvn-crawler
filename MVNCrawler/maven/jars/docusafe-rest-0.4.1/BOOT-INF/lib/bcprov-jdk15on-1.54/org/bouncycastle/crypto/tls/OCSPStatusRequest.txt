public class org.bouncycastle.crypto.tls.OCSPStatusRequest {
  protected java.util.Vector responderIDList;

  protected org.bouncycastle.asn1.x509.Extensions requestExtensions;

  public org.bouncycastle.crypto.tls.OCSPStatusRequest(java.util.Vector, org.bouncycastle.asn1.x509.Extensions);
    Code:
       0: aload_0
       1: invokespecial #99                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #91                 // Field responderIDList:Ljava/util/Vector;
       9: aload_0
      10: aload_2
      11: putfield      #92                 // Field requestExtensions:Lorg/bouncycastle/asn1/x509/Extensions;
      14: return

  public java.util.Vector getResponderIDList();
    Code:
       0: aload_0
       1: getfield      #91                 // Field responderIDList:Ljava/util/Vector;
       4: areturn

  public org.bouncycastle.asn1.x509.Extensions getRequestExtensions();
    Code:
       0: aload_0
       1: getfield      #92                 // Field requestExtensions:Lorg/bouncycastle/asn1/x509/Extensions;
       4: areturn

  public void encode(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #91                 // Field responderIDList:Ljava/util/Vector;
       4: ifnull        17
       7: aload_0
       8: getfield      #91                 // Field responderIDList:Ljava/util/Vector;
      11: invokevirtual #102                // Method java/util/Vector.isEmpty:()Z
      14: ifeq          25
      17: iconst_0
      18: aload_1
      19: invokestatic  #114                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      22: goto          100
      25: new           #42                 // class java/io/ByteArrayOutputStream
      28: dup
      29: invokespecial #96                 // Method java/io/ByteArrayOutputStream."<init>":()V
      32: astore_2
      33: iconst_0
      34: istore_3
      35: iload_3
      36: aload_0
      37: getfield      #91                 // Field responderIDList:Ljava/util/Vector;
      40: invokevirtual #100                // Method java/util/Vector.size:()I
      43: if_icmpge     80
      46: aload_0
      47: getfield      #91                 // Field responderIDList:Ljava/util/Vector;
      50: iload_3
      51: invokevirtual #103                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      54: checkcast     #47                 // class org/bouncycastle/asn1/ocsp/ResponderID
      57: astore        4
      59: aload         4
      61: ldc           #1                  // String DER
      63: invokevirtual #105                // Method org/bouncycastle/asn1/ocsp/ResponderID.getEncoded:(Ljava/lang/String;)[B
      66: astore        5
      68: aload         5
      70: aload_2
      71: invokestatic  #115                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      74: iinc          3, 1
      77: goto          35
      80: aload_2
      81: invokevirtual #95                 // Method java/io/ByteArrayOutputStream.size:()I
      84: invokestatic  #110                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      87: aload_2
      88: invokevirtual #95                 // Method java/io/ByteArrayOutputStream.size:()I
      91: aload_1
      92: invokestatic  #114                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      95: aload_2
      96: aload_1
      97: invokevirtual #97                 // Method java/io/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V
     100: aload_0
     101: getfield      #92                 // Field requestExtensions:Lorg/bouncycastle/asn1/x509/Extensions;
     104: ifnonnull     115
     107: iconst_0
     108: aload_1
     109: invokestatic  #114                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
     112: goto          141
     115: aload_0
     116: getfield      #92                 // Field requestExtensions:Lorg/bouncycastle/asn1/x509/Extensions;
     119: ldc           #1                  // String DER
     121: invokevirtual #107                // Method org/bouncycastle/asn1/x509/Extensions.getEncoded:(Ljava/lang/String;)[B
     124: astore_2
     125: aload_2
     126: arraylength
     127: invokestatic  #110                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
     130: aload_2
     131: arraylength
     132: aload_1
     133: invokestatic  #114                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
     136: aload_1
     137: aload_2
     138: invokevirtual #98                 // Method java/io/OutputStream.write:([B)V
     141: return

  public static org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream) throws java.io.IOException;
    Code:
       0: new           #46                 // class java/util/Vector
       3: dup
       4: invokespecial #101                // Method java/util/Vector."<init>":()V
       7: astore_1
       8: aload_0
       9: invokestatic  #112                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      12: istore_2
      13: iload_2
      14: ifle          64
      17: iload_2
      18: aload_0
      19: invokestatic  #111                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      22: astore_3
      23: new           #41                 // class java/io/ByteArrayInputStream
      26: dup
      27: aload_3
      28: invokespecial #94                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      31: astore        4
      33: aload         4
      35: invokestatic  #113                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      38: astore        5
      40: aload         5
      42: invokestatic  #116                // Method org/bouncycastle/crypto/tls/TlsUtils.readDERObject:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      45: invokestatic  #106                // Method org/bouncycastle/asn1/ocsp/ResponderID.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ocsp/ResponderID;
      48: astore        6
      50: aload_1
      51: aload         6
      53: invokevirtual #104                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      56: aload         4
      58: invokevirtual #93                 // Method java/io/ByteArrayInputStream.available:()I
      61: ifgt          33
      64: aconst_null
      65: astore_2
      66: aload_0
      67: invokestatic  #112                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      70: istore_3
      71: iload_3
      72: ifle          91
      75: iload_3
      76: aload_0
      77: invokestatic  #111                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      80: astore        4
      82: aload         4
      84: invokestatic  #116                // Method org/bouncycastle/crypto/tls/TlsUtils.readDERObject:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
      87: invokestatic  #108                // Method org/bouncycastle/asn1/x509/Extensions.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/Extensions;
      90: astore_2
      91: new           #49                 // class org/bouncycastle/crypto/tls/OCSPStatusRequest
      94: dup
      95: aload_1
      96: aload_2
      97: invokespecial #109                // Method "<init>":(Ljava/util/Vector;Lorg/bouncycastle/asn1/x509/Extensions;)V
     100: areturn
}
