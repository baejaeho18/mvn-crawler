public class org.bouncycastle.math.ec.custom.sec.SecP160R1FieldElement extends org.bouncycastle.math.ec.ECFieldElement {
  public static final java.math.BigInteger Q;

  protected int[] x;

  public org.bouncycastle.math.ec.custom.sec.SecP160R1FieldElement(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #114                // Method org/bouncycastle/math/ec/ECFieldElement."<init>":()V
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: invokevirtual #112                // Method java/math/BigInteger.signum:()I
      12: iflt          25
      15: aload_1
      16: getstatic     #108                // Field Q:Ljava/math/BigInteger;
      19: invokevirtual #113                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      22: iflt          35
      25: new           #58                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #2                  // String x value invalid for SecP160R1FieldElement
      31: invokespecial #109                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: invokestatic  #122                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.fromBigInteger:(Ljava/math/BigInteger;)[I
      40: putfield      #107                // Field x:[I
      43: return

  public org.bouncycastle.math.ec.custom.sec.SecP160R1FieldElement();
    Code:
       0: aload_0
       1: invokespecial #114                // Method org/bouncycastle/math/ec/ECFieldElement."<init>":()V
       4: aload_0
       5: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       8: putfield      #107                // Field x:[I
      11: return

  protected org.bouncycastle.math.ec.custom.sec.SecP160R1FieldElement(int[]);
    Code:
       0: aload_0
       1: invokespecial #114                // Method org/bouncycastle/math/ec/ECFieldElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #107                // Field x:[I
       9: return

  public boolean isZero();
    Code:
       0: aload_0
       1: getfield      #107                // Field x:[I
       4: invokestatic  #127                // Method org/bouncycastle/math/raw/Nat160.isZero:([I)Z
       7: ireturn

  public boolean isOne();
    Code:
       0: aload_0
       1: getfield      #107                // Field x:[I
       4: invokestatic  #126                // Method org/bouncycastle/math/raw/Nat160.isOne:([I)Z
       7: ireturn

  public boolean testBitZero();
    Code:
       0: aload_0
       1: getfield      #107                // Field x:[I
       4: iconst_0
       5: invokestatic  #128                // Method org/bouncycastle/math/raw/Nat160.getBit:([II)I
       8: iconst_1
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: aload_0
       1: getfield      #107                // Field x:[I
       4: invokestatic  #130                // Method org/bouncycastle/math/raw/Nat160.toBigInteger:([I)Ljava/math/BigInteger;
       7: areturn

  public java.lang.String getFieldName();
    Code:
       0: ldc           #1                  // String SecP160R1Field
       2: areturn

  public int getFieldSize();
    Code:
       0: getstatic     #108                // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #110                // Method java/math/BigInteger.bitLength:()I
       6: ireturn

  public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #107                // Field x:[I
       8: aload_1
       9: checkcast     #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      12: getfield      #107                // Field x:[I
      15: aload_2
      16: invokestatic  #119                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.add:([I[I[I)V
      19: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      22: dup
      23: aload_2
      24: invokespecial #123                // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement addOne();
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #107                // Field x:[I
       8: aload_1
       9: invokestatic  #116                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.addOne:([I[I)V
      12: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      15: dup
      16: aload_1
      17: invokespecial #123                // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #107                // Field x:[I
       8: aload_1
       9: checkcast     #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      12: getfield      #107                // Field x:[I
      15: aload_2
      16: invokestatic  #121                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.subtract:([I[I[I)V
      19: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      22: dup
      23: aload_2
      24: invokespecial #123                // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #107                // Field x:[I
       8: aload_1
       9: checkcast     #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      12: getfield      #107                // Field x:[I
      15: aload_2
      16: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
      19: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      22: dup
      23: aload_2
      24: invokespecial #123                // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_2
       4: getstatic     #106                // Field org/bouncycastle/math/ec/custom/sec/SecP160R1Field.P:[I
       7: aload_1
       8: checkcast     #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      11: getfield      #107                // Field x:[I
      14: aload_2
      15: invokestatic  #124                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      18: aload_2
      19: aload_0
      20: getfield      #107                // Field x:[I
      23: aload_2
      24: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
      27: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      30: dup
      31: aload_2
      32: invokespecial #123                // Method "<init>":([I)V
      35: areturn

  public org.bouncycastle.math.ec.ECFieldElement negate();
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #107                // Field x:[I
       8: aload_1
       9: invokestatic  #117                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.negate:([I[I)V
      12: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      15: dup
      16: aload_1
      17: invokespecial #123                // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement square();
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #107                // Field x:[I
       8: aload_1
       9: invokestatic  #118                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.square:([I[I)V
      12: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      15: dup
      16: aload_1
      17: invokespecial #123                // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement invert();
    Code:
       0: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
       3: astore_1
       4: getstatic     #106                // Field org/bouncycastle/math/ec/custom/sec/SecP160R1Field.P:[I
       7: aload_0
       8: getfield      #107                // Field x:[I
      11: aload_1
      12: invokestatic  #124                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      15: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      18: dup
      19: aload_1
      20: invokespecial #123                // Method "<init>":([I)V
      23: areturn

  public org.bouncycastle.math.ec.ECFieldElement sqrt();
    Code:
       0: aload_0
       1: getfield      #107                // Field x:[I
       4: astore_1
       5: aload_1
       6: invokestatic  #127                // Method org/bouncycastle/math/raw/Nat160.isZero:([I)Z
       9: ifne          19
      12: aload_1
      13: invokestatic  #126                // Method org/bouncycastle/math/raw/Nat160.isOne:([I)Z
      16: ifeq          21
      19: aload_0
      20: areturn
      21: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
      24: astore_2
      25: aload_1
      26: aload_2
      27: invokestatic  #118                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.square:([I[I)V
      30: aload_2
      31: aload_1
      32: aload_2
      33: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
      36: invokestatic  #125                // Method org/bouncycastle/math/raw/Nat160.create:()[I
      39: astore_3
      40: aload_2
      41: iconst_2
      42: aload_3
      43: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
      46: aload_3
      47: aload_2
      48: aload_3
      49: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
      52: aload_2
      53: astore        4
      55: aload_3
      56: iconst_4
      57: aload         4
      59: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
      62: aload         4
      64: aload_3
      65: aload         4
      67: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
      70: aload_3
      71: astore        5
      73: aload         4
      75: bipush        8
      77: aload         5
      79: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
      82: aload         5
      84: aload         4
      86: aload         5
      88: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
      91: aload         4
      93: astore        6
      95: aload         5
      97: bipush        16
      99: aload         6
     101: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
     104: aload         6
     106: aload         5
     108: aload         6
     110: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
     113: aload         5
     115: astore        7
     117: aload         6
     119: bipush        32
     121: aload         7
     123: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
     126: aload         7
     128: aload         6
     130: aload         7
     132: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
     135: aload         6
     137: astore        8
     139: aload         7
     141: bipush        64
     143: aload         8
     145: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
     148: aload         8
     150: aload         7
     152: aload         8
     154: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
     157: aload         7
     159: astore        9
     161: aload         8
     163: aload         9
     165: invokestatic  #118                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.square:([I[I)V
     168: aload         9
     170: aload_1
     171: aload         9
     173: invokestatic  #120                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.multiply:([I[I[I)V
     176: aload         9
     178: astore        10
     180: aload         10
     182: bipush        29
     184: aload         10
     186: invokestatic  #115                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.squareN:([II[I)V
     189: aload         8
     191: astore        11
     193: aload         10
     195: aload         11
     197: invokestatic  #118                // Method org/bouncycastle/math/ec/custom/sec/SecP160R1Field.square:([I[I)V
     200: aload_1
     201: aload         11
     203: invokestatic  #129                // Method org/bouncycastle/math/raw/Nat160.eq:([I[I)Z
     206: ifeq          221
     209: new           #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
     212: dup
     213: aload         10
     215: invokespecial #123                // Method "<init>":([I)V
     218: goto          222
     221: aconst_null
     222: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #63                 // class org/bouncycastle/math/ec/custom/sec/SecP160R1FieldElement
      20: astore_2
      21: aload_0
      22: getfield      #107                // Field x:[I
      25: aload_2
      26: getfield      #107                // Field x:[I
      29: invokestatic  #129                // Method org/bouncycastle/math/raw/Nat160.eq:([I[I)Z
      32: ireturn

  public int hashCode();
    Code:
       0: getstatic     #108                // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #111                // Method java/math/BigInteger.hashCode:()I
       6: aload_0
       7: getfield      #107                // Field x:[I
      10: iconst_0
      11: iconst_5
      12: invokestatic  #131                // Method org/bouncycastle/util/Arrays.hashCode:([III)I
      15: ixor
      16: ireturn

  static {};
    Code:
       0: getstatic     #105                // Field org/bouncycastle/math/ec/custom/sec/SecP160R1Curve.q:Ljava/math/BigInteger;
       3: putstatic     #108                // Field Q:Ljava/math/BigInteger;
       6: return
}
